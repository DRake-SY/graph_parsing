{
    "OPERATION_1": {
        "string": "IN_referece_raw = Channel.fromPath(params.reference).ifEmpty { exit 1, \"[Pipeline error] No reference file provided with path:'${params.reference}'\" }",
        "origin": [
            [
                "params.reference",
                "A"
            ]
        ],
        "gives": [
            [
                "IN_referece_raw",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "IN_max_nodes = Channel.value(params.max_nodes)",
        "origin": [
            [
                "params.max_nodes",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_max_nodes",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "IN_vcf_raw = Channel.fromPath(params.vcf).ifEmpty { exit 1, \"[Pipeline error] No vcf file provided with path:'${params.vcf}'\" }",
        "origin": [
            [
                "params.vcf",
                "A"
            ]
        ],
        "gives": [
            [
                "IN_vcf_raw",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "IN_vcf_index_raw = Channel.fromPath(params.vcf_index).ifEmpty { exit 1, \"[Pipeline error] No vcf index file provided with path:'${params.vcf_index}'\" }",
        "origin": [
            [
                "params.vcf_index",
                "A"
            ]
        ],
        "gives": [
            [
                "IN_vcf_index_raw",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "IN_vcf_raw = Channel.from('skip')",
        "origin": [
            [
                "'skip'",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_vcf_raw",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "IN_vcf_index_raw = Channel.from('skip')",
        "origin": [
            [
                "'skip'",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_vcf_index_raw",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "IN_graphviz_mode = Channel.value('neato')",
        "origin": [
            [
                "'neato'",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_graphviz_mode",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "IN_graphviz_mode = Channel.value(params.graphviz)",
        "origin": [
            [
                "params.graphviz",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_graphviz_mode",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "IN_INDEX = Channel.fromPath(params.graph).ifEmpty { exit 1, \"[Pipeline error] No reference file provided with path:'${params.graph}'\" }",
        "origin": [
            [
                "params.graph",
                "A"
            ]
        ],
        "gives": [
            [
                "IN_INDEX",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "IN_KMER = Channel.value(params.kmer)",
        "origin": [
            [
                "params.kmer",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_KMER",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "mapper_mode = Channel.value('map')",
        "origin": [
            [
                "'map'",
                "V"
            ]
        ],
        "gives": [
            [
                "mapper_mode",
                "P"
            ]
        ]
    },
    "OPERATION_12": {
        "string": "mapper_mode = Channel.value(params.mapper)",
        "origin": [
            [
                "params.mapper",
                "V"
            ]
        ],
        "gives": [
            [
                "mapper_mode",
                "P"
            ]
        ]
    },
    "OPERATION_13": {
        "string": "IN_graphviz_map_mode = Channel.value('neato')",
        "origin": [
            [
                "'neato'",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_graphviz_map_mode",
                "P"
            ]
        ]
    },
    "OPERATION_14": {
        "string": "IN_graphviz_map_mode = Channel.value(params.graphviz)",
        "origin": [
            [
                "params.graphviz",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_graphviz_map_mode",
                "P"
            ]
        ]
    },
    "OPERATION_15": {
        "string": "OUT_CONSTRUCT.into{IN_GRAPH_VIEW; IN_INDEX_1; IN_INDEX_2; IN_GRAPH_MAP}",
        "origin": [
            [
                "OUT_CONSTRUCT",
                "P"
            ]
        ],
        "gives": [
            [
                "IN_GRAPH_VIEW",
                "P"
            ],
            [
                "IN_INDEX_1",
                "P"
            ],
            [
                "IN_INDEX_2",
                "P"
            ],
            [
                "IN_GRAPH_MAP",
                "P"
            ]
        ]
    },
    "OPERATION_16": {
        "string": "IN_INDEX.into{IN_INDEX_1; IN_INDEX_2 }",
        "origin": [
            [
                "IN_INDEX",
                "P"
            ]
        ],
        "gives": [
            [
                "IN_INDEX_1",
                "P"
            ],
            [
                "IN_INDEX_2",
                "P"
            ]
        ]
    },
    "OPERATION_17": {
        "string": "XG_FILE.into{ XG_FILE_1; XG_FILE_2; XG_FILE_3}",
        "origin": [
            [
                "XG_FILE",
                "P"
            ]
        ],
        "gives": [
            [
                "XG_FILE_1",
                "P"
            ],
            [
                "XG_FILE_2",
                "P"
            ],
            [
                "XG_FILE_3",
                "P"
            ]
        ]
    },
    "OPERATION_18": {
        "string": "OUT_MAP.into{OUT_MAP_1; OUT_MAP_VIEW}",
        "origin": [
            [
                "OUT_MAP",
                "P"
            ]
        ],
        "gives": [
            [
                "OUT_MAP_1",
                "P"
            ],
            [
                "OUT_MAP_VIEW",
                "P"
            ]
        ]
    },
    "OPERATION_19": {
        "string": "OUT_MAP.into{ OUT_MAP_1; OUT_MAP_2}",
        "origin": [
            [
                "OUT_MAP",
                "P"
            ]
        ],
        "gives": [
            [
                "OUT_MAP_1",
                "P"
            ],
            [
                "OUT_MAP_2",
                "P"
            ]
        ]
    },
    "OPERATION_20": {
        "string": "GRAPH_AUG.into{ GRAPH_AUG_1; GRAPH_AUG_2 }",
        "origin": [
            [
                "GRAPH_AUG",
                "P"
            ]
        ],
        "gives": [
            [
                "GRAPH_AUG_1",
                "P"
            ],
            [
                "GRAPH_AUG_2",
                "P"
            ]
        ]
    },
    "OPERATION_21": {
        "string": "IN_VCF_PROCESS.into{ IN_VCF_PROCESS_1; IN_VCF_PROCESS_2}",
        "origin": [
            [
                "IN_VCF_PROCESS",
                "P"
            ]
        ],
        "gives": [
            [
                "IN_VCF_PROCESS_1",
                "P"
            ],
            [
                "IN_VCF_PROCESS_2",
                "P"
            ]
        ]
    }
}