{
    "first_process": {
        "name_process": "first_process",
        "string_process": "\nprocess first_process {\n\tlabel \"L_loc_first_process\"\n\n\tinput:\n\tset val( letter ),  val( number ) from init_ch\n\n\toutput:\n\tset file( \"${letter}.txt\" ), val( letter ), val( number ) into process_one_result\n\n\tscript:\n\t\"\"\"\n\techo -e \"header\\\\n${letter}\" > ${letter}.txt\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\techo -e \"header\\\\n${letter}\" > ${letter}.txt\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "init_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "process_one_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "k-hench__nf_test_ol",
        "directive": [
            "label \"L_loc_first_process\""
        ],
        "when": "",
        "stub": ""
    },
    "second_process": {
        "name_process": "second_process",
        "string_process": "\nprocess second_process {\n\tlabel \"L_2g5m_second_process\"\n\tpublishDir \"result/\", mode: 'copy'\n\n\tinput:\n\tset file( f ), val( letter ), val( number ) from process_one_result\n\n\toutput:\n\tfile( \"${letter}${letter}.txt\" ) into final_result\n\n\tscript:\n\t\"\"\"\n\tcat ${f} > ${letter}${letter}.txt\n\techo ${number} >> ${letter}${letter}.txt\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\t\"\"\"\n\tcat ${f} > ${letter}${letter}.txt\n\techo ${number} >> ${letter}${letter}.txt\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "process_one_result"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "k-hench__nf_test_ol",
        "directive": [
            "label \"L_2g5m_second_process\"",
            "publishDir \"result/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}