{
    "umi_p_trimming": {
        "name_process": "umi_p_trimming",
        "string_process": "\nprocess umi_p_trimming {\n    tag 'Trim Galore'\n    label 'trimming'\n    publishDir \"$params.outdir\" , mode: 'copy',\n    saveAs: {filename ->\n           if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\"\n      else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\"\n      else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\"\n      else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\"\n      else null\n        }\n    \n    input:\n    tuple val(sample_id), file(processed), path(reads)\n    \n    output:\n    tuple val(sample_id), path('*.fq.gz'), emit: samples_trimmed\n    file '*_fastqc.{zip,html}'\n    file '*.txt'\n    \n    script:\n    \"\"\"\n    ln -s ${processed} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc --paired ${sample_id}_1.fastq.gz ${sample_id}_2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    ln -s ${processed} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc --paired ${sample_id}_1.fastq.gz ${sample_id}_2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "processed",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Trim Galore'",
            "label 'trimming'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\" else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\" else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\" else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "foo": {
        "name_process": "foo",
        "string_process": "process foo {\n echo true\n  \n input:\n file(multiqc)\n \n script:\n \"\"\"\n echo --multiqc $multiqc\n \"\"\"\n }",
        "nb_lignes_process": 9,
        "string_script": " \"\"\"\n echo --multiqc $multiqc\n \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "multiqc"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "deduplication": {
        "name_process": "deduplication",
        "string_process": "process deduplication {\n tag 'Deduplication'\n label 'deduplication'\n publishDir \"${params.outdir}/deduplication\"\n \n input:\n tuple val(sample_id), file(bai), file(sorted)\n \n output:\n tuple val(sample_id), file('*deduplicated.bam'), emit: dedup_bam\n \n script:\n \"\"\"\n umi_tools dedup -I ${sorted} -S ${sample_id}_deduplicated.bam\n \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": " \"\"\"\n umi_tools dedup -I ${sorted} -S ${sample_id}_deduplicated.bam\n \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "bai",
            "sorted"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Deduplication'",
            "label 'deduplication'",
            "publishDir \"${params.outdir}/deduplication\""
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    tag \"Generate MultiQC\"\n    publishDir \"${params.outdir}/multiqc\", mode: 'copy'\n\n    input:\n    file ('fastqc/*')\n    file ('postTrimQC/*')\n    file ('trimming/*')\n    path ('mapped/*')\n    path ('*.summary')\n    \n    \n    output:\n    file(\"multiqc_posttrim_report.html\")\n    file(\"multiqc_posttrim_report_data\")\n    \n    script:\n    \"\"\"\n    multiqc . -n multiqc_posttrim_report.html\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    multiqc . -n multiqc_posttrim_report.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag \"Generate MultiQC\"",
            "publishDir \"${params.outdir}/multiqc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "p_fastqc": {
        "name_process": "p_fastqc",
        "string_process": "\nprocess p_fastqc {\n    tag 'Fastqc'\n    label 'fastqc'\n    publishDir \"$params.outdir\" , mode: 'copy',\n        saveAs: {filename ->\n                 if (filename.indexOf(\"zip\") > 0)     \"fastqc/zips/$filename\"\n            else if (filename.indexOf(\"html\") > 0)    \"fastqc/${filename}\"\n            else if (filename.indexOf(\"txt\") > 0)     \"fastqc_stats/$filename\"\n            else null            \n        }\n\n    input:\n    tuple val(sample_id), path(reads)\n\n    output:\n    file  \"*.{zip,html}\"\n\n    script:\n    \"\"\"\n    ln -s ${reads[0]} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    fastqc ${sample_id}_1.fastq.gz\n    fastqc ${sample_id}_2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    ln -s ${reads[0]} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    fastqc ${sample_id}_1.fastq.gz\n    fastqc ${sample_id}_2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Fastqc'",
            "label 'fastqc'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"zip\") > 0) \"fastqc/zips/$filename\" else if (filename.indexOf(\"html\") > 0) \"fastqc/${filename}\" else if (filename.indexOf(\"txt\") > 0) \"fastqc_stats/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "countTable": {
        "name_process": "countTable",
        "string_process": "\nprocess countTable {\n    tag \"Generate count table\"\n    publishDir \"${params.outdir}/countTable\", mode: 'copy'\n    \n    input:\n    tuple val(sample_id), file(bam)\n    \n    output:\n    path '*count.out'\n    path '*.summary'\n    \n    \n    script:\n    \"\"\"\n    featureCounts -t exon -a $params.gtf -o ${sample_id}.count.out -g gene_id -T 8 ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    featureCounts -t exon -a $params.gtf -o ${sample_id}.count.out -g gene_id -T 8 ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "sample_id",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag \"Generate count table\"",
            "publishDir \"${params.outdir}/countTable\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\necho true\n    tag \"Samtools\"\n    publishDir \"${params.outdir}/samtools\", mode: 'copy'\n    \n    input:\n    tuple val(sample_id), file(bam)\n    \n    output:\n    tuple val(sample_id), file('*bai')\n    \n    script:\n    \"\"\"\n    samtools index ${bam} > ${sample_id}_Aligned.sortedByCoord.out.bam.bai\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools index ${bam} > ${sample_id}_Aligned.sortedByCoord.out.bam.bai\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample_id",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "echo true",
            "tag \"Samtools\"",
            "publishDir \"${params.outdir}/samtools\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "p_trimming": {
        "name_process": "p_trimming",
        "string_process": "\nprocess p_trimming {\n    tag 'Trim Galore'\n    label 'trimming'\n    publishDir \"$params.outdir\" , mode: 'copy',\n    saveAs: {filename ->\n           if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\"\n      else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\"\n      else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\"\n      else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\"\n      else null\n        }\n    \n    input:\n    tuple val(sample_id), path(reads)\n    \n    output:\n    tuple val(sample_id), path('*.fq.gz'), emit: samples_trimmed\n    file '*_fastqc.{zip,html}'\n    file '*.txt'\n    \n    script:\n    \"\"\"\n    ln -s ${reads[0]} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc --paired ${sample_id}_1.fastq.gz ${sample_id}_2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    ln -s ${reads[0]} ${sample_id}_1.fastq.gz\n    ln -s ${reads[1]} ${sample_id}_2.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc --paired ${sample_id}_1.fastq.gz ${sample_id}_2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Trim Galore'",
            "label 'trimming'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\" else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\" else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\" else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "s_trimming": {
        "name_process": "s_trimming",
        "string_process": "\nprocess s_trimming {\n    tag 'Trim Galore'\n    label 'trimming'\n    publishDir \"$params.outdir\" , mode: 'copy',\n    saveAs: {filename ->\n           if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\"\n      else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\"\n      else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\"\n      else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\"\n      else null\n        }\n    \n    input:\n    tuple val(sample_id), path(reads)\n\n    output:\n    tuple val(sample_id), path('*.fq.gz'), emit: samples_trimmed\n    file '*_fastqc.{zip,html}'\n    file '*.txt'\n    \n    script:\n    \"\"\"\n    ln -s ${reads[0]} ${sample_id}.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc ${sample_id}.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    ln -s ${reads[0]} ${sample_id}.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc ${sample_id}.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Trim Galore'",
            "label 'trimming'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\" else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\" else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\" else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "alignment": {
        "name_process": "alignment",
        "string_process": "\nprocess alignment {\n    tag \"Align Reads\"\n    publishDir \"$params.outdir\", mode: 'copy'\n\n    input:\n    tuple val(sample_id), path(read)\n    \n    output:\n    tuple val(sample_id), file('mapped/*.bam')\n    file('mapped/*.final.out')\n    \n    script:\n    \"\"\"\n    STAR --parametersFiles ${params.starconf} \\\n         --runMode alignReads \\\n         --genomeDir $params.index \\\n         --readFilesIn ${read} \\\n         --outFileNamePrefix mapped/${sample_id}_\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    STAR --parametersFiles ${params.starconf} \\\n         --runMode alignReads \\\n         --genomeDir $params.index \\\n         --readFilesIn ${read} \\\n         --outFileNamePrefix mapped/${sample_id}_\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "sample_id",
            "read"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag \"Align Reads\"",
            "publishDir \"$params.outdir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "umi_s_trimming": {
        "name_process": "umi_s_trimming",
        "string_process": "\nprocess umi_s_trimming {\n    tag 'Trim Galore'\n    label 'trimming'\n    publishDir \"$params.outdir\" , mode: 'copy',\n    saveAs: {filename ->\n           if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\"\n      else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\"\n      else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\"\n      else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\"\n      else null\n        }\n    \n    input:\n    tuple val(sample_id), path(processed)\n\n    output:\n    tuple val(sample_id), path('*.fq.gz'), emit: samples_trimmed\n    file '*_fastqc.{zip,html}'\n    file '*.txt'\n    \n    script:\n    \"\"\"\n    ln -s ${processed[0]} ${sample_id}.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc ${sample_id}.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    ln -s ${processed[0]} ${sample_id}.fastq.gz\n    trim_galore --quality ${params.quality} --length ${params.length} --gzip --fastqc ${sample_id}.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "processed"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Trim Galore'",
            "label 'trimming'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".html\") > 0) \"postTrimQC/$filename\" else if (filename.indexOf(\".zip\") > 0) \"postTrimQC/zip/$filename\" else if (filename.indexOf(\".txt\") > 0) \"trimming/logs/$filename\" else if (filename.indexOf(\".fq.gz\")) \"trimming/trimmed_fastq/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "umitools": {
        "name_process": "umitools",
        "string_process": "process umitools {\n  tag 'Umi tools'\n  publishDir \"${params.outdir}/umi\"\n  \n  input:\n  tuple val(sample_id), path(reads)\n  \n  output:\n  tuple val(sample_id), path('*fastq.gz')\n  \n  script:\n  \"\"\"\n  umi_tools extract \\\n   --stdin=${reads[0]} \\\n   --bc-pattern=$params.pattern \\\n   --stdout ${sample_id}_processed.fastq.gz\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  umi_tools extract \\\n   --stdin=${reads[0]} \\\n   --bc-pattern=$params.pattern \\\n   --stdout ${sample_id}_processed.fastq.gz\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Umi tools'",
            "publishDir \"${params.outdir}/umi\""
        ],
        "when": "",
        "stub": ""
    },
    "s_fastqc": {
        "name_process": "s_fastqc",
        "string_process": "\nprocess s_fastqc {\n    tag 'Fastqc'\n    label 'fastqc'\n    publishDir \"$params.outdir\" , mode: 'copy',\n        saveAs: {filename ->\n                 if (filename.indexOf(\"zip\") > 0)     \"fastqc/zips/$filename\"\n            else if (filename.indexOf(\"html\") > 0)    \"fastqc/${filename}\"\n            else if (filename.indexOf(\"txt\") > 0)     \"fastqc_stats/$filename\"\n            else null            \n        }\n\n    input:\n    tuple val(sample_id), path(reads)\n\n    output:\n    file  \"*.{zip,html}\"\n\n    script:\n    \"\"\"\n    ln -s ${reads[0]} ${sample_id}.fastq.gz\n    fastqc ${sample_id}.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    ln -s ${reads[0]} ${sample_id}.fastq.gz\n    fastqc ${sample_id}.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "RosaDeSa__RNAseq_dsl2",
        "directive": [
            "tag 'Fastqc'",
            "label 'fastqc'",
            "publishDir \"$params.outdir\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"zip\") > 0) \"fastqc/zips/$filename\" else if (filename.indexOf(\"html\") > 0) \"fastqc/${filename}\" else if (filename.indexOf(\"txt\") > 0) \"fastqc_stats/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    }
}