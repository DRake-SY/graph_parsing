{
    "OPERATION_1": {
        "string": "Channel\n    .fromPath(file(params.inputManifest))\n    .splitCsv(header:true, sep:'\\t')\n    .map { row -> tuple(row.sampleID, row.bam, row.bai) }\n    .set { bam_channel }",
        "origin": [
            [
                "file(params.inputManifest",
                "A"
            ]
        ],
        "gives": [
            [
                "bam_channel",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "fqPairs = Channel.create()",
        "origin": [],
        "gives": [
            [
                "fqPairs",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "fastqFiltered = razarFilteredEnd1.phase(razarFilteredEnd2).map{ fq1, fq2 -> [ fq1[0], fq1[1], fq2[1] ] }.tap(fqPairs)",
        "origin": [
            [
                "razarFilteredEnd1",
                "P"
            ],
            [
                "razarFilteredEnd2",
                "P"
            ]
        ],
        "gives": [
            [
                "fastqFiltered",
                "P"
            ],
            [
                "fqPairs",
                "P"
            ]
        ]
    }
}