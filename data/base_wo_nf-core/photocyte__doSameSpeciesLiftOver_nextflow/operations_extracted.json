{
    "OPERATION_1": {
        "string": "oldGenome = Channel.fromPath(params.oldFasta)",
        "origin": [
            [
                "params.oldFasta",
                "A"
            ]
        ],
        "gives": [
            [
                "oldGenome",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "newGenome = Channel.fromPath(params.newFasta)",
        "origin": [
            [
                "params.newFasta",
                "A"
            ]
        ],
        "gives": [
            [
                "newGenome",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "gffFiles_ch = Channel.fromPath(gffFiles).flatten()",
        "origin": [
            [
                "gffFiles",
                "A"
            ]
        ],
        "gives": [
            [
                "gffFiles_ch",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "gffFiles_ch.into{ gffFile_1 ; gffFile_2 ; gffFile_3 }",
        "origin": [
            [
                "gffFiles_ch",
                "P"
            ]
        ],
        "gives": [
            [
                "gffFile_1",
                "P"
            ],
            [
                "gffFile_2",
                "P"
            ],
            [
                "gffFile_3",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "oldGenome.into { oldGenome_1 ; oldGenome_2 ; oldGenome_3 ; oldGenome_4 }",
        "origin": [
            [
                "oldGenome",
                "P"
            ]
        ],
        "gives": [
            [
                "oldGenome_1",
                "P"
            ],
            [
                "oldGenome_2",
                "P"
            ],
            [
                "oldGenome_3",
                "P"
            ],
            [
                "oldGenome_4",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "newGenome.into { newGenome_1 ; newGenome_2 ; newGenome_3 }",
        "origin": [
            [
                "newGenome",
                "P"
            ]
        ],
        "gives": [
            [
                "newGenome_1",
                "P"
            ],
            [
                "newGenome_2",
                "P"
            ],
            [
                "newGenome_3",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "newGenome_2.splitFasta(by:params.recordSplit,file:true).set{fastaChunks}",
        "origin": [
            [
                "newGenome_2",
                "P"
            ]
        ],
        "gives": [
            [
                "fastaChunks",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "old_2bit.into{ old_2bit_1 ; old_2bit_2 }",
        "origin": [
            [
                "old_2bit",
                "P"
            ]
        ],
        "gives": [
            [
                "old_2bit_1",
                "P"
            ],
            [
                "old_2bit_2",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "subsplitFasta_liftUp.map{ values ->\n subChunks = values[2].splitFasta(by:params.splitDepth,file:true)                                                      \n return tuple(values[0],values[1],subChunks)}.transpose().set{ subFastaChunks }",
        "origin": [
            [
                "subsplitFasta_liftUp",
                "P"
            ]
        ],
        "gives": [
            [
                "subFastaChunks",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "subFastaChunks.combine(old_2bit_1).combine(ooc).set{blatCmds}",
        "origin": [
            [
                "subFastaChunks",
                "P"
            ],
            [
                "old_2bit_1",
                "P"
            ],
            [
                "ooc",
                "P"
            ]
        ],
        "gives": [
            [
                "blatCmds",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "gffFile_1.combine(oldGenome_4).set{normalizeCmds}",
        "origin": [
            [
                "gffFile_1",
                "P"
            ],
            [
                "oldGenome_4",
                "P"
            ]
        ],
        "gives": [
            [
                "normalizeCmds",
                "P"
            ]
        ]
    },
    "OPERATION_12": {
        "string": "normalizedGff.combine(liftOverFile_2).set{ liftoverCmds }",
        "origin": [
            [
                "normalizedGff",
                "P"
            ],
            [
                "liftOverFile_2",
                "P"
            ]
        ],
        "gives": [
            [
                "liftoverCmds",
                "P"
            ]
        ]
    }
}