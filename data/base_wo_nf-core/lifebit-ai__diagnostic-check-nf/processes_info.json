{
    "manta": {
        "name_process": "manta",
        "string_process": "\nprocess manta {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Manta\", mode: 'copy'\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamManta\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set val(\"Manta\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfManta\n        set idPatient, idSampleNormal, idSampleTumor, file(\"*.candidateSmallIndels.vcf.gz\"), file(\"*.candidateSmallIndels.vcf.gz.tbi\") into mantaToStrelka\n\n    script:\n    \"\"\"\n    ${params.pre_script}\n\n    configManta.py \\\n        --normalBam ${bamNormal} \\\n        --tumorBam ${bamTumor} \\\n        --reference ${fasta} \\\n        --runDir Manta\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n        \n    ${params.post_script}\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "    \"\"\"\n    ${params.pre_script}\n\n    configManta.py \\\n        --normalBam ${bamNormal} \\\n        --tumorBam ${bamTumor} \\\n        --reference ${fasta} \\\n        --runDir Manta\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n        \n    ${params.post_script}\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pairBamManta",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfManta",
            "mantaToStrelka"
        ],
        "nb_outputs": 2,
        "name_workflow": "lifebit-ai__diagnostic-check-nf",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Manta\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "strelka": {
        "name_process": "strelka",
        "string_process": "\nprocess strelka {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: 'copy'\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamStrelka\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set val(\"Strelka\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfStrelka\n\n    script:\n    \"\"\"\n    ${params.pre_script}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        --runDir Strelka\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    ${params.post_script}\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n    ${params.pre_script}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        --runDir Strelka\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    ${params.post_script}\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pairBamStrelka",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfStrelka"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__diagnostic-check-nf",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}