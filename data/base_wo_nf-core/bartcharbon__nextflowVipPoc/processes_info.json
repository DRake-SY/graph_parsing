{
    "compressVcf": {
        "name_process": "compressVcf",
        "string_process": "\nprocess compressVcf {\n\tinput:\n\ttuple val(vcfId), path(vcf)\n\toutput:\n\ttuple val(vcfId), path(\"${vcf.name}.gz\")\n\tscript:\n\t\"\"\"\n\tbgzip -c $vcf > ${vcf.name}.gz\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\tbgzip -c $vcf > ${vcf.name}.gz\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "vcf"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexVcf": {
        "name_process": "indexVcf",
        "string_process": "\nprocess indexVcf {\n\tinput:\n\ttuple val(vcfId), path(vcf)\n\toutput:\n\ttuple val(vcfId), path(vcf), path(\"${vcf}.tbi\")\n\tscript:\n\t\"\"\"\n\ttabix -p vcf $vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\ttabix -p vcf $vcf\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "vcf"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "listVcfChroms": {
        "name_process": "listVcfChroms",
        "string_process": "\nprocess listVcfChroms {\n\tinput:\n\ttuple val(vcfId), path(vcf), path(tbi)\n\toutput:\n\ttuple val(vcfId), path(vcf), path(tbi), stdout\n\tscript:\n\t\"\"\"\n\ttabix -l $vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\ttabix -l $vcf\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "vcf",
            "tbi"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "splitVcf": {
        "name_process": "splitVcf",
        "string_process": "\nprocess splitVcf {\n\tinput:\n\ttuple val(vcfId), val(chrom), path(vcf), path(tbi)\n\toutput:\n\ttuple val(vcfId), path(\"${vcfId}_${chrom}.vcf\")\n\tscript:\n\t\"\"\"\n\ttabix -h $vcf $chrom > ${vcfId}_${chrom}.vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\ttabix -h $vcf $chrom > ${vcfId}_${chrom}.vcf\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "chrom",
            "vcf",
            "tbi"
        ],
        "nb_inputs": 4,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "classifyVcf": {
        "name_process": "classifyVcf",
        "string_process": "\nprocess classifyVcf {\n\tinput:\n\ttuple val(vcfId), path(vcf)\n\toutput:\n\ttuple val(vcfId), path(\"${vcf.baseName}_classified.vcf\")\n\tscript:\n\t\"\"\"\n\tjava -jar /vip/vcf-decision-tree.jar -i $vcf -c /vip/default.json -o ${vcf.baseName}_classified.vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\tjava -jar /vip/vcf-decision-tree.jar -i $vcf -c /vip/default.json -o ${vcf.baseName}_classified.vcf\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "vcf"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "mergeVcf": {
        "name_process": "mergeVcf",
        "string_process": "\nprocess mergeVcf {\n\tinput:\n\ttuple val(vcfId), val(vcfs)\n\toutput:\n\ttuple val(vcfId), path(\"${vcfId}.vcf.gz\")\n\tscript:\n\tfiles=vcfs.join(\" \")\n\t\"\"\"\n\tbcftools concat -Oz -o ${vcfId}.vcf.gz $files\n\t\"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\tfiles=vcfs.join(\" \")\n\t\"\"\"\n\tbcftools concat -Oz -o ${vcfId}.vcf.gz $files\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcfId",
            "vcfs"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "report": {
        "name_process": "report",
        "string_process": "\nprocess report {\n\tinput:\n\ttuple val(vcfId), path(vcf)\n\toutput:\n\ttuple val(vcfId), path(\"${vcf.name}.html\")\n\tscript:\n\t\"\"\"\n\tjava -jar /vip/vcf-report.jar -i $vcf -o ${vcf.name}.html\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\tjava -jar /vip/vcf-report.jar -i $vcf -o ${vcf.name}.html\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfId",
            "vcf"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcfId"
        ],
        "nb_outputs": 1,
        "name_workflow": "bartcharbon__nextflowVipPoc",
        "directive": [],
        "when": "",
        "stub": ""
    }
}