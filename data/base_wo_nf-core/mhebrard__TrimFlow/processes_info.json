{
    "trim_galore": {
        "name_process": "trim_galore",
        "string_process": "\nprocess trim_galore {\n  tag \"$name\"\n  publishDir \"${params.outdir}/trim_galore\", mode: 'copy',\n  saveAs: {filename ->\n    if (filename.indexOf(\"_fastqc\") > 0) \"fastqc/$filename\"\n    else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\"\n    else null\n  }\n\n  input:\n  set val(name), file(reads) from c_reads\n\n  output:\n  file \"*fq.gz\" into c_reads_trimmed\n  file \"*trimming_report.txt\" into c_trimgalore_report\n  file \"*_fastqc.{zip,html}\" into trimgalore_fastqc_reports\n\n  \"\"\"\n  trim_galore --paired --nextera --phred33 --gzip --length 50 --fastqc $reads\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n  trim_galore --paired --nextera --phred33 --gzip --length 50 --fastqc $reads\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "c_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "c_reads_trimmed",
            "c_trimgalore_report",
            "trimgalore_fastqc_reports"
        ],
        "nb_outputs": 3,
        "name_workflow": "mhebrard__TrimFlow",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trim_galore\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"_fastqc\") > 0) \"fastqc/$filename\" else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    }
}