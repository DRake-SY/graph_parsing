{
    "view": {
        "name_process": "view",
        "string_process": "\nprocess view {\necho true\n input:\n                      \n  tuple val(sampleId), file(bam) from bam_ch\n  each  ctg from chr_ch\n\n output:\n tuple val(\"${sampleId}\"), file(\"chr${ctg}_${sampleId}.vcf\") into out_ch\n\"\"\"\necho ${sampleId} ${ctg} ${bam[0]}  > \"chr${ctg}_${sampleId}.vcf\"\n\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\necho ${sampleId} ${ctg} ${bam[0]}  > \"chr${ctg}_${sampleId}.vcf\"\n\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_ch",
            "chr_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "ggrimes__bam_chr",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "combine": {
        "name_process": "combine",
        "string_process": "\nprocess combine {\n echo true\n publishDir \"results\"\n input:\n set key, file(samples) from out_ch.groupTuple()\n                                  \n output:\n path \"${key}.combine\" into comb\n script:\n \"\"\"\n echo $samples > ${key}.combine\n \"\"\"\n\n\n}",
        "nb_lignes_process": 14,
        "string_script": " \"\"\"\n echo $samples > ${key}.combine\n \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "out_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "comb"
        ],
        "nb_outputs": 1,
        "name_workflow": "ggrimes__bam_chr",
        "directive": [
            "echo true",
            "publishDir \"results\""
        ],
        "when": "",
        "stub": ""
    }
}