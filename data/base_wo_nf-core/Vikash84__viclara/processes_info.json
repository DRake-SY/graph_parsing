{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename -> \n            if (filename.indexOf(\".csv\") > 0) filename\n            else null\n        }\n\n    output:\n        file 'software_versions_mqc.yaml'\n        file \"software_versions.csv\"\n\n    script:\n        \"\"\"\n        echo $workflow.manifest.version &> v_ngi_viclara.txt\n        echo $workflow.nextflow.version &> v_nextflow.txt\n        fastqc --version &> v_fastqc.txt\n        trimmomatic -version &> v_trimmomatic.txt\n        samtools --version &> v_samtools.txt\n        multiqc --version &> v_multiqc.txt\n        echo `bwa 2>&1 | grep Version | cut -d \" \" -f2 | cut -f1 -d \"-\"` &> v_bwa.txt\n        scrape_software_versions.py &> software_versions_mqc.yaml\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        \"\"\"\n        echo $workflow.manifest.version &> v_ngi_viclara.txt\n        echo $workflow.nextflow.version &> v_nextflow.txt\n        fastqc --version &> v_fastqc.txt\n        trimmomatic -version &> v_trimmomatic.txt\n        samtools --version &> v_samtools.txt\n        multiqc --version &> v_multiqc.txt\n        echo `bwa 2>&1 | grep Version | cut -d \" \" -f2 | cut -f1 -d \"-\"` &> v_bwa.txt\n        scrape_software_versions.py &> software_versions_mqc.yaml\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "Trimmomatic",
            "SAMtools",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/trimmomatic",
            "https://bio.tools/samtools",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "count_trimmed_reads": {
        "name_process": "count_trimmed_reads",
        "string_process": "\nprocess count_trimmed_reads {\n    tag \"$name\"\n    label \"count_trimmed_reads\"\n    publishDir \"${params.outdir}/qc\", mode: 'copy',\n        saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"trimmed_counts/$filename\" : \"$filename\" }\n    \n    input:\n        tuple val(name), file(reads) \n\n    output:\n        tuple val(name), file(\"*.counts.tsv\"), emit: ch_read_counts\n        \n    script:        \n        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "tag \"$name\"",
            "label \"count_trimmed_reads\"",
            "publishDir \"${params.outdir}/qc\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"trimmed_counts/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_trimmed_counts": {
        "name_process": "merge_trimmed_counts",
        "string_process": "\nprocess merge_trimmed_counts {\n        label 'low_memory'\n        tag 'merge_trimmed_counts'\n        publishDir \"${params.outdir}/\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\"\n            else null\n            }\n\n        input:\n            file readcounts\n\n        output:\n            path \"trimmed_readcounts.tsv\", emit: ch_merged_counts\n\n        script:\n            \n            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o trimmed_readcounts.tsv\n            \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o trimmed_readcounts.tsv\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readcounts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'merge_trimmed_counts'",
            "publishDir \"${params.outdir}/\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "build_bwa_index_phix": {
        "name_process": "build_bwa_index_phix",
        "string_process": "\nprocess build_bwa_index_phix {\n    label 'build_index'\n    tag \"$fasta\"\n    publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir },\n        saveAs: { params.saveReference ? it : null }, mode: 'copy'\n\n    input:\n        file fasta\n\n    output:\n        file 'phix_bwa_index'\n\n    script:\n\n        \"\"\"\n        bwa index -a bwtsw ${fasta}\n        mkdir phix_bwa_index && mv ${fasta}* phix_bwa_index\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        bwa index -a bwtsw ${fasta}\n        mkdir phix_bwa_index && mv ${fasta}* phix_bwa_index\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'build_index'",
            "tag \"$fasta\"",
            "publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_align_phix": {
        "name_process": "bwa_align_phix",
        "string_process": "\nprocess bwa_align_phix {\n    label 'bwa_align'\n    tag \"$name\"\n    publishDir \"${params.outdir}/bwa\", mode: 'copy', saveAs: {filename ->\n        if (filename.indexOf(\".bam\") > 0) \"alignments/phix/$filename\"\n        else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n        else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n        else null\n        }\n    \n    input:\n        tuple val(name), file(reads)            \n        file index\n        file wherearemyfiles\n\n    output:\n        tuple val(name), path(\"*.bam\"), emit: ch_phix_bams\n        file \"where_are_my_files.txt\"\n\n\n    script:\n        prefix=\"${name}\"\n        rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n        if (params.singleEnd) {\n        \"\"\"\n        bwa mem -t ${task.cpus} -M -R $rg ${bwa_dir}/${index} $reads > ${prefix}.bam\n        \"\"\"\n        } else {\n        \"\"\"\n        bwa mem -t ${task.cpus} -M -R $rg ${bwa_dir}/${index} $reads \\\\\n        | samtools view -@ ${task.cpus} -bS -O BAM -o ${prefix}.bam -\n        \"\"\"\n        }\n}",
        "nb_lignes_process": 34,
        "string_script": "        prefix=\"${name}\"\n        rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n        if (params.singleEnd) {\n        \"\"\"\n        bwa mem -t ${task.cpus} -M -R $rg ${bwa_dir}/${index} $reads > ${prefix}.bam\n        \"\"\"\n        } else {\n        \"\"\"\n        bwa mem -t ${task.cpus} -M -R $rg ${bwa_dir}/${index} $reads \\\\\n        | samtools view -@ ${task.cpus} -bS -O BAM -o ${prefix}.bam -\n        \"\"\"\n        }",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "index",
            "wherearemyfiles"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'bwa_align'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy', saveAs: {filename -> if (filename.indexOf(\".bam\") > 0) \"alignments/phix/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "sort_bam_phix": {
        "name_process": "sort_bam_phix",
        "string_process": "\nprocess sort_bam_phix {\n    label 'high_memory'\n    tag \"${name}\"\n    publishDir \"${params.outdir}/bwa\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".bam\") > 0) \"sorted/phix/$filename\"\n            else null\n        }\n\n    input:\n        tuple val(name), file(ch_phix_bwa_bam)\n\n    output:\n        tuple val(name), path(\"${name}*.sorted.bam\"), emit: ch_phix_sorted_bams\n\n    script:\n        \"\"\"\n        samtools sort \\\\\n            $ch_phix_bwa_bam \\\\\n            -@ ${task.cpus} \\\\\n            -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n        \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "        \"\"\"\n        samtools sort \\\\\n            $ch_phix_bwa_bam \\\\\n            -@ ${task.cpus} \\\\\n            -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "ch_phix_bwa_bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"${name}\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") > 0) \"sorted/phix/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "extract_unmapped_phix": {
        "name_process": "extract_unmapped_phix",
        "string_process": "\nprocess extract_unmapped_phix {\n    label 'extract_unmapped'\n    tag \"${name}\"\n    publishDir \"${params.outdir}/bwa\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".fastq\") > 0) \"unmapped/phix/$filename\"\n            else null\n        }\n\n    input:\n        tuple val(name), file(ch_phix_sorted_bam)\n\n    output:\n        tuple val(name), path(\"${name}*.fastq\"), emit: ch_phix_bam_unmapped_reads\n\n    script:\n        if (params.singleEnd) {\n        \"\"\"\n        samtools fastq \\\\\n            --threads ${task.cpus} \\\\\n            -f 4 \\\\\n            $ch_phix_sorted_bam > ${name}.fastq\n        \"\"\"\n        } else {\n        \"\"\"\n        samtools fastq \\\\\n            --threads ${task.cpus} \\\\\n            -1 ${name}_R1.fastq \\\\\n            -2 ${name}_R2.fastq \\\\\n            -0 /dev/null \\\\\n            -s /dev/null \\\\\n            -f 4 \\\\\n            $ch_phix_sorted_bam\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 35,
        "string_script": "        if (params.singleEnd) {\n        \"\"\"\n        samtools fastq \\\\\n            --threads ${task.cpus} \\\\\n            -f 4 \\\\\n            $ch_phix_sorted_bam > ${name}.fastq\n        \"\"\"\n        } else {\n        \"\"\"\n        samtools fastq \\\\\n            --threads ${task.cpus} \\\\\n            -1 ${name}_R1.fastq \\\\\n            -2 ${name}_R2.fastq \\\\\n            -0 /dev/null \\\\\n            -s /dev/null \\\\\n            -f 4 \\\\\n            $ch_phix_sorted_bam\n        \"\"\"\n    }",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "ch_phix_sorted_bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'extract_unmapped'",
            "tag \"${name}\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".fastq\") > 0) \"unmapped/phix/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "count_raw_reads": {
        "name_process": "count_raw_reads",
        "string_process": "\nprocess count_raw_reads {\n    tag \"$name\"\n    label \"count_reads\"\n    publishDir \"${params.outdir}/qc\", mode: 'copy',\n        saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"raw_counts/$filename\" : \"$filename\" }\n    \n    input:\n        tuple val(name), file(reads) \n\n    output:\n        tuple val(name), file(\"*.counts.tsv\"), emit: ch_read_counts\n        \n    script:        \n        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "tag \"$name\"",
            "label \"count_reads\"",
            "publishDir \"${params.outdir}/qc\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"raw_counts/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_raw_counts": {
        "name_process": "merge_raw_counts",
        "string_process": "\nprocess merge_raw_counts {\n        label 'low_memory'\n        tag 'merge_raw_counts'\n        publishDir \"${params.outdir}/\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\"\n            else null\n            }\n\n        input:\n            file readcounts\n\n        output:\n            path \"raw_readcounts.tsv\", emit: ch_merged_counts\n\n        script:\n            \n            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o raw_readcounts.tsv\n            \"\"\"\n    }",
        "nb_lignes_process": 20,
        "string_script": "            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o raw_readcounts.tsv\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readcounts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'merge_raw_counts'",
            "publishDir \"${params.outdir}/\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    label \"fastqc\"\n    publishDir \"${params.outdir}/qc/fastqc\", mode: 'copy',\n        saveAs: { filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\" }\n\n    when:\n        !params.skipQC && !params.skipFastQC\n    \n    input:\n        tuple val(name), file(reads) \n\n    output:\n        path \"*_fastqc.{zip, html}\", emit: ch_fastqc_results\n\n    script:\n        name = reads.baseName\n        \"\"\"\n        fastqc --quiet --nogroup --format fastq --threads $task.cpus $reads\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        name = reads.baseName\n        \"\"\"\n        fastqc --quiet --nogroup --format fastq --threads $task.cpus $reads\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "goname",
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/goname",
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            },
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "tag \"$name\"",
            "label \"fastqc\"",
            "publishDir \"${params.outdir}/qc/fastqc\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\" }"
        ],
        "when": "!params.skipQC && !params.skipFastQC",
        "stub": ""
    },
    "trimmomatic": {
        "name_process": "trimmomatic",
        "string_process": " process trimmomatic {\n        tag \"$name\"\n        label 'process_medium'\n        publishDir \"${params.outdir}/trimmomatic\", mode: 'copy',\n            saveAs: {filename ->\n                if (filename.indexOf(\"P.fastq.gz\") > 0) \"paired/$filename\"\n                else if (filename.indexOf(\".U.fastq.gz\") > 0) \"unpaired/$filename\"\n                else if (filename.indexOf(\".trimmed.fastq.gz\") > 0 ) \"single_end/$filename\"\n                else if (filename.indexOf(\"summary_stats.txt\") > 0) \"stats/$filename\"\n                else if (!params.saveTrimmed && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveTrimmed && filename != \"where_are_my_files.txt\") filename\n                else null\n            }\n\n        input:\n            tuple val(name), file(reads)\n            file wherearemyfiles\n\n        output:\n            tuple val(name), file(\"*.fastq.gz\"), emit: ch_trimmed_reads_trimmomatic\n            path \"*summary_stats.txt\", emit: ch_trimmed_trimmo_stats\n            file \"where_are_my_files.txt\"\n\n        script:\n            lead = params.leading > 0 ? \"LEADING:${params.leading}\" : ''\n            trail = params.trailing > 0 ? \"TRAILING:${params.trailing}\" : ''\n            min_l = params.min_length > 0 ? \"MINLEN:${params.min_length}\" : ''\n            avg_qual = params.average_qual > 0 ? \"${params.average_qual}\" : ''\n\n            if (params.singleEnd && !params.adapters) {\n                \"\"\"\n                trimmomatic SE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}.trimmed.fastq.gz \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else if (params.singleEnd && params.adapters) {\n                \"\"\"\n                trimmomatic SE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}.trimmed.fastq.gz \\\\\n                    ILLUMINACLIP:${params.adapters}:2:30:10 \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else if (!params.singleEnd && !params.adapters) {\n                \"\"\"\n                trimmomatic PE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}_R1.P.fastq.gz \\\\\n                    ${name}_R1.U.fastq.gz \\\\\n                    ${name}_R2.P.fastq.gz \\\\\n                    ${name}_R2.U.fastq.gz \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else {\n                \"\"\"\n                trimmomatic PE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}_R1.P.fastq.gz \\\\\n                    ${name}_R1.U.fastq.gz \\\\\n                    ${name}_R2.P.fastq.gz \\\\\n                    ${name}_R2.U.fastq.gz \\\\\n                    ILLUMINACLIP:${params.adapters}:2:30:10 \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n        }\n    }",
        "nb_lignes_process": 81,
        "string_script": "            lead = params.leading > 0 ? \"LEADING:${params.leading}\" : ''\n            trail = params.trailing > 0 ? \"TRAILING:${params.trailing}\" : ''\n            min_l = params.min_length > 0 ? \"MINLEN:${params.min_length}\" : ''\n            avg_qual = params.average_qual > 0 ? \"${params.average_qual}\" : ''\n\n            if (params.singleEnd && !params.adapters) {\n                \"\"\"\n                trimmomatic SE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}.trimmed.fastq.gz \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else if (params.singleEnd && params.adapters) {\n                \"\"\"\n                trimmomatic SE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}.trimmed.fastq.gz \\\\\n                    ILLUMINACLIP:${params.adapters}:2:30:10 \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else if (!params.singleEnd && !params.adapters) {\n                \"\"\"\n                trimmomatic PE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}_R1.P.fastq.gz \\\\\n                    ${name}_R1.U.fastq.gz \\\\\n                    ${name}_R2.P.fastq.gz \\\\\n                    ${name}_R2.U.fastq.gz \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n            } else {\n                \"\"\"\n                trimmomatic PE \\\\\n                    -threads $task.cpus \\\\\n                    -${params.encoding} \\\\\n                    -trimlog ${name}_trim_log.txt \\\\\n                    -summary ${name}_summary_stats.txt \\\\\n                    $reads \\\\\n                    ${name}_R1.P.fastq.gz \\\\\n                    ${name}_R1.U.fastq.gz \\\\\n                    ${name}_R2.P.fastq.gz \\\\\n                    ${name}_R2.U.fastq.gz \\\\\n                    ILLUMINACLIP:${params.adapters}:2:30:10 \\\\\n                    $lead $trail SLIDINGWINDOW:4:$avg_qual $min_l\n                \"\"\"\n        }",
        "nb_lignes_script": 57,
        "language_script": "bash",
        "tools": [
            "Lead-DBS",
            "Contrail",
            "Trimmomatic"
        ],
        "tools_url": [
            "https://bio.tools/Lead-DBS",
            "https://bio.tools/contrail",
            "https://bio.tools/trimmomatic"
        ],
        "tools_dico": [
            {
                "name": "Lead-DBS",
                "uri": "https://bio.tools/Lead-DBS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRI"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3384",
                            "term": "Medical imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3334",
                            "term": "Neurology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Nuclear magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "NMRI"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3334",
                            "term": "https://en.wikipedia.org/wiki/Neurology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "MATLAB-toolbox facilitating deep brain stimulation electrode locations and connectomic imaging.",
                "homepage": "https://www.lead-dbs.org/"
            },
            {
                "name": "Contrail",
                "uri": "https://bio.tools/contrail",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Hadoop based genome assembler for assembling large genomes in the clouds.",
                "homepage": "https://sourceforge.net/projects/contrail-bio/"
            },
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "wherearemyfiles"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/trimmomatic\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"P.fastq.gz\") > 0) \"paired/$filename\" else if (filename.indexOf(\".U.fastq.gz\") > 0) \"unpaired/$filename\" else if (filename.indexOf(\".trimmed.fastq.gz\") > 0 ) \"single_end/$filename\" else if (filename.indexOf(\"summary_stats.txt\") > 0) \"stats/$filename\" else if (!params.saveTrimmed && filename == \"where_are_my_files.txt\") filename else if (params.saveTrimmed && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "count_filtered_phix_reads": {
        "name_process": "count_filtered_phix_reads",
        "string_process": "\nprocess count_filtered_phix_reads {\n    tag \"$name\"\n    label \"count_filtered_PhiX_reads\"\n    publishDir \"${params.outdir}/qc\", mode: 'copy',\n        saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"phix_counts/$filename\" : \"$filename\" }\n    \n    input:\n        tuple val(name), file(reads) \n\n    output:\n        tuple val(name), file(\"*.counts.tsv\"), emit: ch_read_counts\n        \n    script:        \n        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        count-reads.py --infile ${reads[0]} --output ${name}.counts.tsv\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "tag \"$name\"",
            "label \"count_filtered_PhiX_reads\"",
            "publishDir \"${params.outdir}/qc\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".tsv\") > 0 ? \"phix_counts/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_filtered_phix_counts": {
        "name_process": "merge_filtered_phix_counts",
        "string_process": "\nprocess merge_filtered_phix_counts {\n        label 'low_memory'\n        tag 'merge_filtered_PhiX_counts'\n        publishDir \"${params.outdir}/\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\"\n            else null\n            }\n\n        input:\n            file readcounts\n\n        output:\n            path \"filtered_phix_readcounts.tsv\", emit: ch_merged_counts\n\n        script:\n            \n            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o filtered_phix_readcounts.tsv\n            \"\"\"\n    }",
        "nb_lignes_process": 20,
        "string_script": "            \"\"\"\n            merge_read_counts.py --input ${readcounts} -o filtered_phix_readcounts.tsv\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readcounts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'merge_filtered_PhiX_counts'",
            "publishDir \"${params.outdir}/\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "build_bwa_index_ref": {
        "name_process": "build_bwa_index_ref",
        "string_process": " process build_bwa_index_ref {\n        label 'high_memory'\n        tag \"$fasta\"\n        publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir },\n        saveAs: { params.saveReference ? it : null }, mode: 'copy'\n\n        input:\n            file fasta\n\n        output:\n            file \"*.{amb,ann,bwt,pac,sa}\"\n\n        script:\n            \n            \"\"\"\n            bwa index -a bwtsw ${fasta}\n            \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "            \"\"\"\n            bwa index -a bwtsw ${fasta}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$fasta\"",
            "publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_align_ref": {
        "name_process": "bwa_align_ref",
        "string_process": " process bwa_align_ref {\n        label 'high_memory'\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy', \n            saveAs: { filename ->\n                if (filename.indexOf(\".bam\") > 0) \"alignments/host/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), file(reads)\n            file fasta\n            file index\n            file wherearemyfiles\n        \n        output:\n            tuple val(name), file(\"${name}.bam\"),  emit: ch_ref_bams\n            val \"where_are_my_files.txt\"\n\n        script:\n            rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n            if (params.singleEnd) {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads > ${name}.bam\n                \"\"\"\n            } else {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads \\\\\n                | samtools view -@ ${task.cpus} -bS -O BAM -o ${name}.bam -\n                \"\"\"\n            }\n    }",
        "nb_lignes_process": 33,
        "string_script": "            rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n            if (params.singleEnd) {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads > ${name}.bam\n                \"\"\"\n            } else {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads \\\\\n                | samtools view -@ ${task.cpus} -bS -O BAM -o ${name}.bam -\n                \"\"\"\n            }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "fasta",
            "index",
            "wherearemyfiles"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".bam\") > 0) \"alignments/host/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "sort_bam_ref": {
        "name_process": "sort_bam_ref",
        "string_process": " process sort_bam_ref {\n        label 'high_memory'\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy',\n            saveAs: { filename ->\n                if (filename.indexOf(\".bam\") > 0) \"sorted/host/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), ch_bam\n\n        output:\n            tuple val(name), path(\"${name}*.sorted.bam\"), emit: ch_ref_sorted_bams\n\n        script:\n            \"\"\"\n            samtools sort \\\\\n                $ch_bam \\\\\n                -@ ${task.cpus} \\\\\n                -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n            \"\"\"\n    }",
        "nb_lignes_process": 24,
        "string_script": "            \"\"\"\n            samtools sort \\\\\n                $ch_bam \\\\\n                -@ ${task.cpus} \\\\\n                -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n            \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".bam\") > 0) \"sorted/host/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "extract_unmapped_ref": {
        "name_process": "extract_unmapped_ref",
        "string_process": " process extract_unmapped_ref {\n        label 'high_memory'\n        tag \"${name}\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy',\n            saveAs: { filename ->\n                if (filename.indexOf(\".fastq\") > 0) \"unmapped/host/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), file(ch_ref_sorted_bam)\n\n        output:\n            tuple val(name), path(\"${name}*.fastq\"), emit: ch_ref_bam_unmapped_reads\n\n        script:\n            if (params.singleEnd) {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -f 4 \\\\\n                $ch_ref_sorted_bam > ${name}.fastq\n                \"\"\"\n            } else {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -1 ${name}_R1.fastq \\\\\n                -2 ${name}_R2.fastq \\\\\n                -0 /dev/null \\\\\n                -s /dev/null \\\\\n                -f 4 \\\\\n                $ch_ref_sorted_bam\n                \"\"\"\n            }\n    }",
        "nb_lignes_process": 36,
        "string_script": "            if (params.singleEnd) {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -f 4 \\\\\n                $ch_ref_sorted_bam > ${name}.fastq\n                \"\"\"\n            } else {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -1 ${name}_R1.fastq \\\\\n                -2 ${name}_R2.fastq \\\\\n                -0 /dev/null \\\\\n                -s /dev/null \\\\\n                -f 4 \\\\\n                $ch_ref_sorted_bam\n                \"\"\"\n            }",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "ch_ref_sorted_bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"${name}\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".fastq\") > 0) \"unmapped/host/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_all_counts": {
        "name_process": "merge_all_counts",
        "string_process": "\nprocess merge_all_counts {\n        label 'low_memory'\n        tag 'merge_all_counts'\n        publishDir \"${params.outdir}/\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\"\n            else null\n            }\n\n        input:\n            path readcounts\n\n        output:\n            path \"readcounts.tsv\", emit: ch_readcounts\n\n        script:\n            \n            \"\"\"\n            merge_counts.py --input ${readcounts} -o readcounts.tsv\n            \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "            \"\"\"\n            merge_counts.py --input ${readcounts} -o readcounts.tsv\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readcounts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'merge_all_counts'",
            "publishDir \"${params.outdir}/\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".tsv\") > 0 ) \"readcounts/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "build_krakendb": {
        "name_process": "build_krakendb",
        "string_process": " process build_krakendb {\n        label 'high_memory'\n        tag \"${db_dir}\"\n        publishDir path: { params.saveKrakenDB ? \"${params.outdir}/kraken_database\" : params.outdir },\n            saveAs: { params.saveKrakenDB ? it : null }, mode: 'copy'\n\n        input:\n            path db_dir\n\n        output:\n            path db_dir\n\n        script:\n            download_library = 'download-library'\n            build_db = 'build'\n\n            if (params.krn2_task == 'download-taxonomy'){\n            \"\"\"\n            build_kraken_db.py --task ${params.krn2_task} --db ${db_dir} --library ${params.krn2_library} -t ${task.cpus} -v\n            build_kraken_db.py --task ${download_library} --db ${db_dir} --library ${params.krn2_library} -t ${task.cpus} -v\n            build_kraken_db.py --task ${build_db} --db ${db_dir} -t ${task.cpus} -v\n            \"\"\"\n            } else if (params.krn2_task == 'standard') {\n            \"\"\"\n            build_kraken_db.py --task ${params.krn2_task} --db ${db_dir} -t ${task.cpus} -v\n            \"\"\"\n            } \n    }",
        "nb_lignes_process": 26,
        "string_script": "            download_library = 'download-library'\n            build_db = 'build'\n\n            if (params.krn2_task == 'download-taxonomy'){\n            \"\"\"\n            build_kraken_db.py --task ${params.krn2_task} --db ${db_dir} --library ${params.krn2_library} -t ${task.cpus} -v\n            build_kraken_db.py --task ${download_library} --db ${db_dir} --library ${params.krn2_library} -t ${task.cpus} -v\n            build_kraken_db.py --task ${build_db} --db ${db_dir} -t ${task.cpus} -v\n            \"\"\"\n            } else if (params.krn2_task == 'standard') {\n            \"\"\"\n            build_kraken_db.py --task ${params.krn2_task} --db ${db_dir} -t ${task.cpus} -v\n            \"\"\"\n            }",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db_dir"
        ],
        "nb_inputs": 1,
        "outputs": [
            "db_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"${db_dir}\"",
            "publishDir path: { params.saveKrakenDB ? \"${params.outdir}/kraken_database\" : params.outdir } , saveAs: { params.saveKrakenDB ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "classify_reads": {
        "name_process": "classify_reads",
        "string_process": " process classify_reads {\n        label 'high_memory'\n        tag \"${name}\"\n        publishDir \"${params.outdir}/classification\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\"_report.txt\") > 0 ) \"report/$filename\"\n            else if (filename.indexOf(\"_results.txt\") > 0 ) \"results/$filename\"\n            else null\n            }\n\n        input:\n            tuple val(name), file(reads)\n            path db_dir\n\n        output:\n            tuple val(name), path(\"${name}_report.txt\"), emit: ch_kraken_report\n            tuple val(name), path(\"${name}_results.txt\"), emit: ch_kraken_results\n\n        script:\n            if (params.singleEnd){\n                if (hasExtension(reads[0], 'gz')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --gzip-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else if (hasExtension(reads[1], 'bzip')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --bzip2-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                }\n            } else {\n                if (hasExtension(reads[0], 'gz')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --gzip-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else if (hasExtension(reads[0], 'bzip')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --bzip2-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                }\n            }\n    }",
        "nb_lignes_process": 93,
        "string_script": "            if (params.singleEnd){\n                if (hasExtension(reads[0], 'gz')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --gzip-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else if (hasExtension(reads[1], 'bzip')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --bzip2-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                }\n            } else {\n                if (hasExtension(reads[0], 'gz')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --gzip-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else if (hasExtension(reads[0], 'bzip')) {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --bzip2-compressed \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                } else {\n                    \"\"\"\n                    kraken2 \\\\\n                        --use-names \\\\\n                        --db ${db_dir} \\\\\n                        --threads ${task.cpus} \\\\\n                        $reads \\\\\n                        --use-mpa-style \\\\\n                        --report ${name}_report.txt \\\\\n                        --output ${name}_results.txt\n                    \"\"\"\n                }\n            }",
        "nb_lignes_script": 74,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "db_dir"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"${name}\"",
            "publishDir \"${params.outdir}/classification\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\"_report.txt\") > 0 ) \"report/$filename\" else if (filename.indexOf(\"_results.txt\") > 0 ) \"results/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_kraken_reports": {
        "name_process": "merge_kraken_reports",
        "string_process": " process merge_kraken_reports {\n        label 'low_memory'\n        tag 'merge_kraken_report'\n        publishDir \"${params.outdir}/classification\", mode: 'copy',\n            saveAs: { filename -> \n            if (filename.indexOf(\".txt\") > 0 ) \"merged_tables/$filename\"\n            else null\n            }\n\n        input:\n            file reports\n\n        output:\n            path \"merged_tables.txt\", emit: ch_merged_tables\n            path \"merged_tables_species_summary.txt\", emit: ch_merged_species_summary\n\n        script:\n            \n            \"\"\"\n            merge_mpa_tables.py --input ${reports} -o merged_tables.txt\n            \"\"\"\n    }",
        "nb_lignes_process": 20,
        "string_script": "            \"\"\"\n            merge_mpa_tables.py --input ${reports} -o merged_tables.txt\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reports"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'merge_kraken_report'",
            "publishDir \"${params.outdir}/classification\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".txt\") > 0 ) \"merged_tables/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "visualize_species_summary": {
        "name_process": "visualize_species_summary",
        "string_process": " process visualize_species_summary {\n        label 'low_memory'\n        tag 'visualize_species'\n        publishDir \"${params.outdir}/visualization\", mode: 'copy',\n            saveAs: {filename -> \n            if (filename.indexOf(\".svg\") > 0 ) \"plots/$filename\"\n            }\n        \n        input:\n            file (counts)\n            file (species_summary)\n\n        output:\n            file \"*.svg\"\n\n        script:\n            \"\"\"\n            visualize_abundance.R ${counts} ${species_summary}\n            \"\"\"\n    }",
        "nb_lignes_process": 18,
        "string_script": "            \"\"\"\n            visualize_abundance.R ${counts} ${species_summary}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "counts",
            "species_summary"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'low_memory'",
            "tag 'visualize_species'",
            "publishDir \"${params.outdir}/visualization\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".svg\") > 0 ) \"plots/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n    \n    when:\n    !params.skipMultiQC\n    \n    input:\n        file multiqc_config\n        path ('fastqc/*')\n                                     \n        file workflow_summary\n\n    output:\n        file \"*multiqc_report.html\"                      \n        file \"*_data\"\n        file \"multiqc_plots\"\n\n    script:\n        rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n        rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n        \"\"\"\n        multiqc . -f $rtitle $rfilename --config $multiqc_config -m custom_content -m fastqc\n        \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "        rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n        rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n        \"\"\"\n        multiqc . -f $rtitle $rfilename --config $multiqc_config -m custom_content -m fastqc\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqc_config",
            "workflow_summary"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skipMultiQC",
        "stub": ""
    },
    "build_bwa_index_human": {
        "name_process": "build_bwa_index_human",
        "string_process": " process build_bwa_index_human {\n        label 'high_memory'\n        tag \"$fasta\"\n        publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir },\n        saveAs: { params.saveReference ? it : null }, mode: 'copy'\n\n        input:\n            file fasta\n\n        output:\n            file \"*.{amb,ann,bwt,pac,sa}\"\n\n        script:\n            \n            \"\"\"\n            bwa index -a bwtsw ${fasta}\n            \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "            \"\"\"\n            bwa index -a bwtsw ${fasta}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$fasta\"",
            "publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_align_human": {
        "name_process": "bwa_align_human",
        "string_process": " process bwa_align_human {\n        label 'high_memory'\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy', \n            saveAs: { filename ->\n                if (filename.indexOf(\".bam\") > 0) \"alignments/human/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), file(reads)\n            file fasta\n            file index\n            file wherearemyfiles\n        \n        output:\n            tuple val(name), file(\"${name}.bam\"),  emit: ch_human_bams\n            val \"where_are_my_files.txt\"\n\n        script:\n            rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n            if (params.singleEnd) {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads > ${name}.bam\n                \"\"\"\n            } else {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads \\\\\n                | samtools view -@ ${task.cpus} -bS -O BAM -o ${name}.bam -\n                \"\"\"\n            }\n    }",
        "nb_lignes_process": 33,
        "string_script": "            rg=\"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n\n            if (params.singleEnd) {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads > ${name}.bam\n                \"\"\"\n            } else {\n                \"\"\"\n                bwa mem -t ${task.cpus} -M -R $rg ${fasta} $reads \\\\\n                | samtools view -@ ${task.cpus} -bS -O BAM -o ${name}.bam -\n                \"\"\"\n            }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "fasta",
            "index",
            "wherearemyfiles"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".bam\") > 0) \"alignments/human/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "sort_bam_human": {
        "name_process": "sort_bam_human",
        "string_process": " process sort_bam_human {\n        label 'high_memory'\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy',\n            saveAs: { filename ->\n                if (filename.indexOf(\".bam\") > 0) \"sorted/human/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), ch_bam\n\n        output:\n            tuple val(name), path(\"${name}*.sorted.bam\"), emit: ch_human_sorted_bams\n\n        script:\n            \"\"\"\n            samtools sort \\\\\n                $ch_bam \\\\\n                -@ ${task.cpus} \\\\\n                -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n            \"\"\"\n    }",
        "nb_lignes_process": 24,
        "string_script": "            \"\"\"\n            samtools sort \\\\\n                $ch_bam \\\\\n                -@ ${task.cpus} \\\\\n                -o ${name}.sorted.bam\n            samtools index ${name}.sorted.bam\n            \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".bam\") > 0) \"sorted/human/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "extract_unmapped_human": {
        "name_process": "extract_unmapped_human",
        "string_process": " process extract_unmapped_human {\n        label 'high_memory'\n        tag \"${name}\"\n        publishDir \"${params.outdir}/bwa\", mode: 'copy',\n            saveAs: { filename ->\n                if (filename.indexOf(\".fastq\") > 0) \"unmapped/human/$filename\"\n                else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename\n                else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename\n                else null\n                }\n\n        input:\n            tuple val(name), file(ch_human_sorted_bam)\n\n        output:\n            tuple val(name), path(\"${name}*.fastq\"), emit: ch_human_bam_unmapped_reads\n\n        script:\n            if (params.singleEnd) {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -f 4 \\\\\n                $ch_human_sorted_bam > ${name}.fastq\n                \"\"\"\n            } else {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -1 ${name}_R1.fastq \\\\\n                -2 ${name}_R2.fastq \\\\\n                -0 /dev/null \\\\\n                -s /dev/null \\\\\n                -f 4 \\\\\n                $ch_human_sorted_bam\n                \"\"\"\n            }\n    }",
        "nb_lignes_process": 36,
        "string_script": "            if (params.singleEnd) {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -f 4 \\\\\n                $ch_human_sorted_bam > ${name}.fastq\n                \"\"\"\n            } else {\n                \"\"\"\n                samtools fastq \\\\\n                --threads ${task.cpus} \\\\\n                -1 ${name}_R1.fastq \\\\\n                -2 ${name}_R2.fastq \\\\\n                -0 /dev/null \\\\\n                -s /dev/null \\\\\n                -f 4 \\\\\n                $ch_human_sorted_bam\n                \"\"\"\n            }",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "ch_human_sorted_bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Vikash84__viclara",
        "directive": [
            "label 'high_memory'",
            "tag \"${name}\"",
            "publishDir \"${params.outdir}/bwa\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".fastq\") > 0) \"unmapped/human/$filename\" else if (!params.saveAlignedIntermediates && filename == \"where_are_my_files.txt\") filename else if (params.saveAlignedIntermediates && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    }
}