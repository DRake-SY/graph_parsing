{
    "OPERATION_1": {
        "string": "Channel\n  .fromPath(\"${params.vcf}\")\n  .set{ vcf_input }",
        "origin": [
            [
                "\"${params.vcf}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "vcf_input",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre1_custom_filter}/*\")\n\t.toList()\n\t.set{ mkfiles_pre1 }",
        "origin": [
            [
                "\"${module_mk_pre1_custom_filter}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre1",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre2_separate_snv_indel}/*\")\n\t.toList()\n\t.set{ mkfiles_pre2 }",
        "origin": [
            [
                "\"${module_mk_pre2_separate_snv_indel}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre2",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre3s1_separate_rare_low_common_freq}/*\")\n\t.toList()\n\t.set{ mkfiles_pre3s1 }",
        "origin": [
            [
                "\"${module_mk_pre3s1_separate_rare_low_common_freq}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre3s1",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre3s2_separate_selection_signals}/*\")\n\t.toList()\n\t.set{ mkfiles_pre3s2 }",
        "origin": [
            [
                "\"${module_mk_pre3s2_separate_selection_signals}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre3s2",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre3s3_separate_lowEAS_lowEUR}/*\")\n\t.toList()\n\t.set{ mkfiles_pre3s3 }",
        "origin": [
            [
                "\"${module_mk_pre3s3_separate_lowEAS_lowEUR}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre3s3",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre3s4_separate_commonAMR_lowEUR}/*\")\n\t.toList()\n\t.set{ mkfiles_pre3s4 }",
        "origin": [
            [
                "\"${module_mk_pre3s4_separate_commonAMR_lowEUR}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre3s4",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "Channel\n\t.fromPath(\"${module_mk_001_get_clinvar_omim}/*\")\n\t.toList()\n\t.set{ mkfiles_001 }",
        "origin": [
            [
                "\"${module_mk_001_get_clinvar_omim}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_001",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "Channel\n\t.fromPath(\"${module_mk_002_get_GeneHancer}/*\")\n\t.toList()\n\t.set{ mkfiles_002 }",
        "origin": [
            [
                "\"${module_mk_002_get_GeneHancer}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_002",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "Channel\n\t.fromPath(\"${module_mk_003_get_GWASCatalog}/*\")\n\t.toList()\n\t.set{ mkfiles_003 }",
        "origin": [
            [
                "\"${module_mk_003_get_GWASCatalog}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_003",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "Channel\n\t.fromPath(\"${module_mk_004_get_miRNA}/*\")\n\t.toList()\n\t.set{ mkfiles_004 }",
        "origin": [
            [
                "\"${module_mk_004_get_miRNA}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_004",
                "P"
            ]
        ]
    },
    "OPERATION_12": {
        "string": "Channel\n\t.fromPath(\"${module_mk_005_get_novel_and_known}/*\")\n\t.toList()\n\t.set{ mkfiles_005 }",
        "origin": [
            [
                "\"${module_mk_005_get_novel_and_known}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_005",
                "P"
            ]
        ]
    },
    "OPERATION_13": {
        "string": "Channel\n\t.fromPath(\"${module_mk_006_get_coding}/*\")\n\t.toList()\n\t.set{ mkfiles_006 }",
        "origin": [
            [
                "\"${module_mk_006_get_coding}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_006",
                "P"
            ]
        ]
    },
    "OPERATION_14": {
        "string": "Channel\n\t.fromPath(\"${module_mk_007_get_PGKB}/*\")\n\t.toList()\n\t.set{ mkfiles_007 }",
        "origin": [
            [
                "\"${module_mk_007_get_PGKB}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_007",
                "P"
            ]
        ]
    },
    "OPERATION_15": {
        "string": "Channel\n\t.fromPath(\"${workflow.projectDir}/mkmodules/mk-get-utr-variants/*\")\n\t.toList()\n\t.set{ mkfiles_008 }",
        "origin": [
            [
                "\"${workflow.projectDir}/mkmodules/mk-get-utr-variants/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_008",
                "P"
            ]
        ]
    },
    "OPERATION_16": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pos1_vcf2tsv}/*\")\n\t.toList()\n\t.set{ mkfiles_pos1 }",
        "origin": [
            [
                "\"${module_mk_pos1_vcf2tsv}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pos1",
                "P"
            ]
        ]
    },
    "OPERATION_17": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pos2_count_variants}/*\")\n\t.toList()\n\t.set{ mkfiles_pos2 }",
        "origin": [
            [
                "\"${module_mk_pos2_count_variants}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pos2",
                "P"
            ]
        ]
    },
    "OPERATION_18": {
        "string": "Channel\n\t.fromPath(\"${workflow.projectDir}/mkmodules/mk-QC-vep-consequence-plot/*\")\n\t.toList()\n\t.set{ mkfiles_pos5 }",
        "origin": [
            [
                "\"${workflow.projectDir}/mkmodules/mk-QC-vep-consequence-plot/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pos5",
                "P"
            ]
        ]
    },
    "OPERATION_19": {
        "string": "nfsummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "nfsummary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_20": {
        "string": "pipelinesummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "pipelinesummary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_21": {
        "string": "pre2_results_for_001\n\t.mix(pre3s1_results_for_001, pre3s2_results_for_001, pre3s3_results_for_001, pre3s4_results_for_001)\n\t.set{ inputs_001 }",
        "origin": [
            [
                "pre2_results_for_001",
                "P"
            ],
            [
                "pre3s1_results_for_001",
                "P"
            ],
            [
                "pre3s2_results_for_001",
                "P"
            ],
            [
                "pre3s3_results_for_001",
                "P"
            ],
            [
                "pre3s4_results_for_001",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_001",
                "P"
            ]
        ]
    },
    "OPERATION_22": {
        "string": "pre2_results_for_002\n\t.mix(pre3s1_results_for_002, pre3s2_results_for_002, pre3s3_results_for_002, pre3s4_results_for_002)\n\t.set{ inputs_002 }",
        "origin": [
            [
                "pre2_results_for_002",
                "P"
            ],
            [
                "pre3s1_results_for_002",
                "P"
            ],
            [
                "pre3s2_results_for_002",
                "P"
            ],
            [
                "pre3s3_results_for_002",
                "P"
            ],
            [
                "pre3s4_results_for_002",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_002",
                "P"
            ]
        ]
    },
    "OPERATION_23": {
        "string": "pre2_results_for_003\n\t.mix(pre3s1_results_for_003, pre3s2_results_for_003, pre3s3_results_for_003, pre3s4_results_for_003)\n\t.set{ inputs_003 }",
        "origin": [
            [
                "pre2_results_for_003",
                "P"
            ],
            [
                "pre3s1_results_for_003",
                "P"
            ],
            [
                "pre3s2_results_for_003",
                "P"
            ],
            [
                "pre3s3_results_for_003",
                "P"
            ],
            [
                "pre3s4_results_for_003",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_003",
                "P"
            ]
        ]
    },
    "OPERATION_24": {
        "string": "pre2_results_for_004\n\t.mix(pre3s1_results_for_004, pre3s2_results_for_004, pre3s3_results_for_004, pre3s4_results_for_004)\n\t.set{ inputs_004 }",
        "origin": [
            [
                "pre2_results_for_004",
                "P"
            ],
            [
                "pre3s1_results_for_004",
                "P"
            ],
            [
                "pre3s2_results_for_004",
                "P"
            ],
            [
                "pre3s3_results_for_004",
                "P"
            ],
            [
                "pre3s4_results_for_004",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_004",
                "P"
            ]
        ]
    },
    "OPERATION_25": {
        "string": "pre2_results_for_005\n\t.mix(pre3s1_results_for_005, pre3s2_results_for_005, pre3s3_results_for_005, pre3s4_results_for_005)\n\t.set{ inputs_005 }",
        "origin": [
            [
                "pre2_results_for_005",
                "P"
            ],
            [
                "pre3s1_results_for_005",
                "P"
            ],
            [
                "pre3s2_results_for_005",
                "P"
            ],
            [
                "pre3s3_results_for_005",
                "P"
            ],
            [
                "pre3s4_results_for_005",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_005",
                "P"
            ]
        ]
    },
    "OPERATION_26": {
        "string": "pre2_results_for_006\n\t.mix(pre3s1_results_for_006, pre3s2_results_for_006, pre3s3_results_for_006, pre3s4_results_for_006)\n\t.set{ inputs_006 }",
        "origin": [
            [
                "pre2_results_for_006",
                "P"
            ],
            [
                "pre3s1_results_for_006",
                "P"
            ],
            [
                "pre3s2_results_for_006",
                "P"
            ],
            [
                "pre3s3_results_for_006",
                "P"
            ],
            [
                "pre3s4_results_for_006",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_006",
                "P"
            ]
        ]
    },
    "OPERATION_27": {
        "string": "pre2_results_for_007\n\t.mix(pre3s1_results_for_007, pre3s2_results_for_007, pre3s3_results_for_007, pre3s4_results_for_007)\n\t.set{ inputs_007 }",
        "origin": [
            [
                "pre2_results_for_007",
                "P"
            ],
            [
                "pre3s1_results_for_007",
                "P"
            ],
            [
                "pre3s2_results_for_007",
                "P"
            ],
            [
                "pre3s3_results_for_007",
                "P"
            ],
            [
                "pre3s4_results_for_007",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_007",
                "P"
            ]
        ]
    },
    "OPERATION_28": {
        "string": "pre2_results_for_008\n\t.mix(pre3s1_results_for_008, pre3s2_results_for_008, pre3s3_results_for_008, pre3s4_results_for_008)\n\t.set{ inputs_008 }",
        "origin": [
            [
                "pre2_results_for_008",
                "P"
            ],
            [
                "pre3s1_results_for_008",
                "P"
            ],
            [
                "pre3s2_results_for_008",
                "P"
            ],
            [
                "pre3s3_results_for_008",
                "P"
            ],
            [
                "pre3s4_results_for_008",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_008",
                "P"
            ]
        ]
    },
    "OPERATION_29": {
        "string": "results_001_get_clinvar_omim\n\t.mix(results_002_get_GeneHancer, results_003_get_GWASCatalog, results_004_get_miRNA, results_005_get_novel_and_known, results_006_get_coding, results_007_get_PGKB, results_008_get_utr)\n\t.mix(pre2_results_for_pos1, pre3s1_results_for_pos1, pre3s2_results_for_pos1, pre3s3_results_for_pos1, pre3s4_results_for_pos1)\n\t.into{ inputs_pos1; pre_inputs_pos4 }",
        "origin": [
            [
                "results_001_get_clinvar_omim",
                "P"
            ],
            [
                "results_002_get_GeneHancer",
                "P"
            ],
            [
                "results_003_get_GWASCatalog",
                "P"
            ],
            [
                "results_004_get_miRNA",
                "P"
            ],
            [
                "results_005_get_novel_and_known",
                "P"
            ],
            [
                "results_006_get_coding",
                "P"
            ],
            [
                "results_007_get_PGKB",
                "P"
            ],
            [
                "results_008_get_utr",
                "P"
            ],
            [
                "pre2_results_for_pos1",
                "P"
            ],
            [
                "pre3s1_results_for_pos1",
                "P"
            ],
            [
                "pre3s2_results_for_pos1",
                "P"
            ],
            [
                "pre3s3_results_for_pos1",
                "P"
            ],
            [
                "pre3s4_results_for_pos1",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_pos1",
                "P"
            ],
            [
                "pre_inputs_pos4",
                "P"
            ]
        ]
    },
    "OPERATION_30": {
        "string": "results_pos1_vcf2tsv\n\t.flatten()\n\t.toList()\n\t.into{ inputs_pos2; inputs_pos3 }",
        "origin": [
            [
                "results_pos1_vcf2tsv",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_pos2",
                "P"
            ],
            [
                "inputs_pos3",
                "P"
            ]
        ]
    },
    "OPERATION_31": {
        "string": "pre_inputs_pos4\n\t.mix(also_results_pre1_custom_filter)\n\t.flatten()\n\t.toList()\n\t.set{ inputs_pos4 }",
        "origin": [
            [
                "pre_inputs_pos4",
                "P"
            ],
            [
                "also_results_pre1_custom_filter",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_pos4",
                "P"
            ]
        ]
    }
}