{
    "bamToCram": {
        "name_process": "bamToCram",
        "string_process": "process bamToCram {\n       \n                                                                                                                           \n             \n              \n      \n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${bam.baseName}.cram\", mode: 'copy'\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${bam.baseName}.cram.crai\", mode: 'copy'\n\n    input:\n        tuple(sampleName, path(bam), path(ref))\n\n    output:\n        tuple sampleName, path(\"${bam.baseName}.cram\"), emit: cramed\n        tuple sampleName, path(\"${bam.baseName}.cram.crai\"), emit: cramedidx\n\n    script:\n        \"\"\"\n         samtools view --write-index -C -O cram,embed_ref -T ${ref} -o ${bam.baseName}.cram ${bam}\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        \"\"\"\n         samtools view --write-index -C -O cram,embed_ref -T ${ref} -o ${bam.baseName}.cram ${bam}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "ref",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${bam.baseName}.cram\", mode: 'copy'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${bam.baseName}.cram.crai\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "readTrimming": {
        "name_process": "readTrimming",
        "string_process": "process readTrimming {\n       \n                                                                                       \n                                                            \n                                                                                            \n      \n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: '*_val_{1,2}.fq.gz', mode: 'copy'\n\n    cpus 2\n\n    input:\n    tuple(sampleName, path(forward), path(reverse))\n\n    output:\n    tuple(sampleName, path(\"*_val_1.fq.gz\"), path(\"*_val_2.fq.gz\")) optional true\n\n    script:\n    \"\"\"\n    if [[ \\$(gunzip -c ${forward} | head -n4 | wc -l) -eq 0 ]]; then\n      exit 0\n    else\n      trim_galore --paired $forward $reverse\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    if [[ \\$(gunzip -c ${forward} | head -n4 | wc -l) -eq 0 ]]; then\n      exit 0\n    else\n      trim_galore --paired $forward $reverse\n    fi\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "forward",
            "reverse",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: '*_val_{1,2}.fq.gz', mode: 'copy'",
            "cpus 2"
        ],
        "when": "",
        "stub": ""
    },
    "indexReference": {
        "name_process": "indexReference",
        "string_process": "\nprocess indexReference {\n       \n                                                                \n      \n\n    tag { ref }\n\n    input:\n        path(ref)\n\n    output:\n        tuple path('ref.fa'), path('ref.fa.*')\n\n    script:\n        \"\"\"\n        ln -s ${ref} ref.fa\n        bwa index ref.fa\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        ln -s ${ref} ref.fa\n        bwa index ref.fa\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { ref }"
        ],
        "when": "",
        "stub": ""
    },
    "readMapping": {
        "name_process": "readMapping",
        "string_process": "\nprocess readMapping {\n       \n                                                                           \n                                                                                                          \n             \n              \n      \n\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.sorted.bam\", mode: 'copy'\n\n    input:\n        tuple sampleName, path(forward), path(reverse), path(ref), path(\"*\")\n\n    output:\n        tuple(sampleName, path(\"${sampleName}.sorted.bam\"))\n\n    script:\n      \"\"\"\n      bwa mem -t ${task.cpus} ${ref} ${forward} ${reverse} | \\\n      samtools sort -o ${sampleName}.sorted.bam\n      \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      bwa mem -t ${task.cpus} ${ref} ${forward} ${reverse} | \\\n      samtools sort -o ${sampleName}.sorted.bam\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "forward",
            "reverse",
            "ref",
            "sampleName"
        ],
        "nb_inputs": 4,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.sorted.bam\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "trimPrimerSequences": {
        "name_process": "trimPrimerSequences",
        "string_process": "\nprocess trimPrimerSequences {\n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.mapped.bam\", mode: 'copy'\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'\n\n    input:\n    tuple sampleName, path(bam), path(bedfile)\n\n    output:\n    tuple sampleName, path(\"${sampleName}.mapped.bam\"), emit: mapped\n    tuple sampleName, path(\"${sampleName}.mapped.primertrimmed.sorted.bam\" ), emit: ptrim\n\n    script:\n    if (params.allowNoprimer){\n        ivarCmd = \"ivar trim -e\"\n    } else {\n        ivarCmd = \"ivar trim\"\n    }\n   \n    if ( params.cleanBamHeader )\n        \"\"\"\n        samtools reheader --no-PG  -c 'sed \"s/${sampleName}/sample/g\"' ${bam} | \\\n        samtools view -F4 -o sample.mapped.bam\n\n        mv sample.mapped.bam ${sampleName}.mapped.bam\n        \n        samtools index ${sampleName}.mapped.bam\n\n        ${ivarCmd} -i ${sampleName}.mapped.bam -b ${bedfile} -m ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n\n        samtools reheader --no-PG  -c 'sed \"s/${sampleName}/sample/g\"' ivar.out.bam | \\\n        samtools sort -o sample.mapped.primertrimmed.sorted.bam\n\n        mv sample.mapped.primertrimmed.sorted.bam ${sampleName}.mapped.primertrimmed.sorted.bam\n        \"\"\"\n\n    else\n        \"\"\"\n        samtools view -F4 -o ${sampleName}.mapped.bam ${bam}\n        samtools index ${sampleName}.mapped.bam\n        ${ivarCmd} -i ${sampleName}.mapped.bam -b ${bedfile} -m ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n        samtools sort -o ${sampleName}.mapped.primertrimmed.sorted.bam ivar.out.bam\n        \"\"\"\n}",
        "nb_lignes_process": 45,
        "string_script": "    if (params.allowNoprimer){\n        ivarCmd = \"ivar trim -e\"\n    } else {\n        ivarCmd = \"ivar trim\"\n    }\n   \n    if ( params.cleanBamHeader )\n        \"\"\"\n        samtools reheader --no-PG  -c 'sed \"s/${sampleName}/sample/g\"' ${bam} | \\\n        samtools view -F4 -o sample.mapped.bam\n\n        mv sample.mapped.bam ${sampleName}.mapped.bam\n        \n        samtools index ${sampleName}.mapped.bam\n\n        ${ivarCmd} -i ${sampleName}.mapped.bam -b ${bedfile} -m ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n\n        samtools reheader --no-PG  -c 'sed \"s/${sampleName}/sample/g\"' ivar.out.bam | \\\n        samtools sort -o sample.mapped.primertrimmed.sorted.bam\n\n        mv sample.mapped.primertrimmed.sorted.bam ${sampleName}.mapped.primertrimmed.sorted.bam\n        \"\"\"\n\n    else\n        \"\"\"\n        samtools view -F4 -o ${sampleName}.mapped.bam ${bam}\n        samtools index ${sampleName}.mapped.bam\n        ${ivarCmd} -i ${sampleName}.mapped.bam -b ${bedfile} -m ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n        samtools sort -o ${sampleName}.mapped.primertrimmed.sorted.bam ivar.out.bam\n        \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bedfile",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.mapped.bam\", mode: 'copy'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "callVariants": {
        "name_process": "callVariants",
        "string_process": "\nprocess callVariants {\n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.variants.tsv\", mode: 'copy'\n\n    input:\n    tuple(sampleName, path(bam), path(ref))\n\n    output:\n    tuple sampleName, path(\"${sampleName}.variants.tsv\"), emit: variants\n\n    script:\n        \"\"\"\n        samtools mpileup -A -d 0 --reference ${ref} -B -Q 0 ${bam} |\\\n        ivar variants -r ${ref} -m ${params.ivarMinDepth} -p ${sampleName}.variants -q ${params.ivarMinVariantQuality} -t ${params.ivarMinFreqThreshold}\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        samtools mpileup -A -d 0 --reference ${ref} -B -Q 0 ${bam} |\\\n        ivar variants -r ${ref} -m ${params.ivarMinDepth} -p ${sampleName}.variants -q ${params.ivarMinVariantQuality} -t ${params.ivarMinFreqThreshold}\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "AIVAR"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/AIVAR"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "AIVAR",
                "uri": "https://bio.tools/AIVAR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Virulence prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Pathogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Assessing concordance among human, in silico predictions and functional assays on genetic variant classification.",
                "homepage": "https://github.com/TopGene/AIvar"
            }
        ],
        "inputs": [
            "bam",
            "ref",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.variants.tsv\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeConsensus": {
        "name_process": "makeConsensus",
        "string_process": "\nprocess makeConsensus {\n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.primertrimmed.consensus.fa\", mode: 'copy'\n\n    input:\n        tuple(sampleName, path(bam))\n\n    output:\n        tuple(sampleName, path(\"${sampleName}.primertrimmed.consensus.fa\"))\n\n    script:\n        \"\"\"\n        samtools mpileup -aa -A -B -d ${params.mpileupDepth} -Q0 ${bam} | \\\n        ivar consensus -t ${params.ivarFreqThreshold} -m ${params.ivarMinDepth} \\\n        -n N -p ${sampleName}.primertrimmed.consensus\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        samtools mpileup -aa -A -B -d ${params.mpileupDepth} -Q0 ${bam} | \\\n        ivar consensus -t ${params.ivarFreqThreshold} -m ${params.ivarMinDepth} \\\n        -n N -p ${sampleName}.primertrimmed.consensus\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "AIVAR"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/AIVAR"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "AIVAR",
                "uri": "https://bio.tools/AIVAR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Virulence prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Pathogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Assessing concordance among human, in silico predictions and functional assays on genetic variant classification.",
                "homepage": "https://github.com/TopGene/AIvar"
            }
        ],
        "inputs": [
            "bam",
            "sampleName"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.primertrimmed.consensus.fa\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "cramToFastq": {
        "name_process": "cramToFastq",
        "string_process": "\nprocess cramToFastq {\n       \n                                                              \n                                                                                          \n            \n             \n      \n\n    input:\n        tuple sampleName, file(cram)\n\n    output:\n        tuple sampleName, path(\"${sampleName}_1.fastq.gz\"), path(\"${sampleName}_2.fastq.gz\")\n\n    script:\n        \"\"\"\n        samtools collate -u ${cram} -o tmp.bam\n        samtools fastq -1 ${sampleName}_1.fastq.gz -2 ${sampleName}_2.fastq.gz tmp.bam\n        rm tmp.bam\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        samtools collate -u ${cram} -o tmp.bam\n        samtools fastq -1 ${sampleName}_1.fastq.gz -2 ${sampleName}_2.fastq.gz tmp.bam\n        rm tmp.bam\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "cram",
            "sampleName"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "makeQCCSV": {
        "name_process": "makeQCCSV",
        "string_process": "process makeQCCSV {\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/qc_plots\", pattern: \"${sampleName}.depth.png\", mode: 'copy'\n\n    input:\n    tuple sampleName, path(bam), path(fasta), path(ref)\n\n    output:\n    path \"${params.prefix}.${sampleName}.qc.csv\", emit: csv\n    path \"${sampleName}.depth.png\"\n\n    script:\n    if ( params.illumina ) {\n       qcSetting = \"--illumina\"\n    } else {\n       qcSetting = \"--nanopore\"\n    }\n\n    \"\"\"\n    qc.py ${qcSetting} --outfile ${params.prefix}.${sampleName}.qc.csv --sample ${sampleName} --ref ${ref} --bam ${bam} --fasta ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    if ( params.illumina ) {\n       qcSetting = \"--illumina\"\n    } else {\n       qcSetting = \"--nanopore\"\n    }\n\n    \"\"\"\n    qc.py ${qcSetting} --outfile ${params.prefix}.${sampleName}.qc.csv --sample ${sampleName} --ref ${ref} --bam ${bam} --fasta ${fasta}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "fasta",
            "ref",
            "sampleName"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/qc_plots\", pattern: \"${sampleName}.depth.png\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "writeQCSummaryCSV": {
        "name_process": "writeQCSummaryCSV",
        "string_process": "\nprocess writeQCSummaryCSV {\n    tag { params.prefix }\n\n    input:\n    val lines\n\n    exec:\n    file(\"${params.outdir}/${params.prefix}.qc.csv\").withWriter { writer ->\n        for ( line in lines ) {\n            writer.writeLine(line.join(','))\n         }   \n    }\n}",
        "nb_lignes_process": 12,
        "string_script": "    file(\"${params.outdir}/${params.prefix}.qc.csv\").withWriter { writer ->\n        for ( line in lines ) {\n            writer.writeLine(line.join(','))\n         }   \n    }",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "lines"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { params.prefix }"
        ],
        "when": "",
        "stub": ""
    },
    "typeVariants": {
        "name_process": "typeVariants",
        "string_process": "\nprocess typeVariants {\n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/variants\", pattern: \"${sampleName}.variants.csv\", mode: 'copy'\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/vcf\", pattern: \"${sampleName}.csq.vcf\", mode: 'copy'\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/typing\", pattern: \"${sampleName}.typing.csv\", mode: 'copy'\n\n    input:\n    tuple sampleName, path(variants), path(gff), path(ref), path(yaml)\n\n    output:\n    path \"${sampleName}.variants.csv\", optional: true, emit: variants_csv\n    path \"${sampleName}.typing.csv\", optional: true, emit: typing_csv\n    path \"${sampleName}.csq.vcf\", emit: csq_vcf\n\n    script:\n    if( params.illumina )\n        \"\"\"\n        type_vcf.py \\\n        -i ${sampleName} \\\n        -y ${yaml} \\\n        -ov ${sampleName}.csq.vcf \\\n        -ot ${sampleName}.typing.csv \\\n        -os ${sampleName}.variants.csv \\\n        -dp ${params.csqDpThreshold} \\\n        -af ${params.csqAfThreshold} \\\n        -t ${variants} \\\n        ${gff} ${ref}\n        \"\"\"\n    else\n        \"\"\"\n        type_vcf.py \\\n        -i ${sampleName} \\\n        -y ${yaml} \\\n        -ov ${sampleName}.csq.vcf \\\n        -ot ${sampleName}.typing.csv \\\n        -os ${sampleName}.variants.csv \\\n        -dp ${params.csqDpThreshold} \\\n        -af ${params.csqAfThreshold} \\\n        -v ${variants} \\\n        ${gff} ${ref}\n        \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    if( params.illumina )\n        \"\"\"\n        type_vcf.py \\\n        -i ${sampleName} \\\n        -y ${yaml} \\\n        -ov ${sampleName}.csq.vcf \\\n        -ot ${sampleName}.typing.csv \\\n        -os ${sampleName}.variants.csv \\\n        -dp ${params.csqDpThreshold} \\\n        -af ${params.csqAfThreshold} \\\n        -t ${variants} \\\n        ${gff} ${ref}\n        \"\"\"\n    else\n        \"\"\"\n        type_vcf.py \\\n        -i ${sampleName} \\\n        -y ${yaml} \\\n        -ov ${sampleName}.csq.vcf \\\n        -ot ${sampleName}.typing.csv \\\n        -os ${sampleName}.variants.csv \\\n        -dp ${params.csqDpThreshold} \\\n        -af ${params.csqAfThreshold} \\\n        -v ${variants} \\\n        ${gff} ${ref}\n        \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "variants",
            "gff",
            "ref",
            "yaml",
            "sampleName"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/variants\", pattern: \"${sampleName}.variants.csv\", mode: 'copy'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/vcf\", pattern: \"${sampleName}.csq.vcf\", mode: 'copy'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}/typing\", pattern: \"${sampleName}.typing.csv\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mergeTypingCSVs": {
        "name_process": "mergeTypingCSVs",
        "string_process": "\nprocess mergeTypingCSVs {\n\n    tag { params.prefix }\n\n    publishDir \"${params.outdir}\", pattern: \"${params.prefix}.typing_summary.csv\", mode: 'copy'\n    publishDir \"${params.outdir}\", pattern: \"${params.prefix}.variant_summary.csv\", mode: 'copy'\n\n    input:\n    tuple path('typing/*'), path('variant/*')\n\n    output:\n    path \"${params.prefix}.typing_summary.csv\", emit: typing_summary_csv\n    path \"${params.prefix}.variant_summary.csv\", emit: variant_summary_csv\n\n    script:\n    \"\"\"\n    #!/usr/bin/env python3\n    import glob\n    import csv\n\n    dirs = ['typing', 'variant']\n\n    for dir in dirs:\n        globstring = dir + '/*.csv'\n        files = glob.glob(globstring)\n\n        header_written = False\n        out_fn = \"${params.prefix}.\" +dir+ '_summary.csv'\n        with open(out_fn, 'w') as outfile:\n            for fl in files:\n                with open(fl, 'r' ) as csvfile:\n                    csvreader = csv.DictReader(csvfile)\n                    for row in csvreader:\n                        if not header_written:\n                            writer = csv.DictWriter(outfile, fieldnames=list(row.keys()))\n                            writer.writeheader()\n                            header_written = True\n\n                        writer.writerow(row)\n\n    \"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "    \"\"\"\n    #!/usr/bin/env python3\n    import glob\n    import csv\n\n    dirs = ['typing', 'variant']\n\n    for dir in dirs:\n        globstring = dir + '/*.csv'\n        files = glob.glob(globstring)\n\n        header_written = False\n        out_fn = \"${params.prefix}.\" +dir+ '_summary.csv'\n        with open(out_fn, 'w') as outfile:\n            for fl in files:\n                with open(fl, 'r' ) as csvfile:\n                    csvreader = csv.DictReader(csvfile)\n                    for row in csvreader:\n                        if not header_written:\n                            writer = csv.DictWriter(outfile, fieldnames=list(row.keys()))\n                            writer.writeheader()\n                            header_written = True\n\n                        writer.writerow(row)\n\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "python3",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}\", pattern: \"${params.prefix}.typing_summary.csv\", mode: 'copy'",
            "publishDir \"${params.outdir}\", pattern: \"${params.prefix}.variant_summary.csv\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "articDownloadScheme": {
        "name_process": "articDownloadScheme",
        "string_process": "\nprocess articDownloadScheme{\n    tag params.schemeRepoURL\n\n    label 'internet'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"scheme\", mode: \"copy\"\n\n    output:\n    path \"${params.schemeDir}/${params.scheme}/${params.schemeVersion}/*.reference.fasta\" , emit: reffasta\n    path \"${params.schemeDir}/${params.scheme}/${params.schemeVersion}/*.primer.bed\" , emit: bed\n    path \"${params.schemeDir}\" , emit: scheme\n\n    script:\n    \"\"\"\n    git clone ${params.schemeRepoURL} ${params.schemeDir}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    git clone ${params.schemeRepoURL} ${params.schemeDir}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag params.schemeRepoURL",
            "label 'internet'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"scheme\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articGuppyPlex": {
        "name_process": "articGuppyPlex",
        "string_process": "\nprocess articGuppyPlex {\n    tag { params.prefix + \"-\" + fastqDir }\n\n    label 'largemem'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.prefix}*.fastq\", mode: \"copy\"\n\n    input:\n    path(fastqDir)\n\n    output:\n    path \"${params.prefix}*.fastq\", emit: fastq\n\n    script:\n    \"\"\"\n    artic guppyplex \\\n    --min-length ${params.min_length} \\\n    --max-length ${params.max_length} \\\n    --prefix ${params.prefix} \\\n    --directory ${fastqDir}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    artic guppyplex \\\n    --min-length ${params.min_length} \\\n    --max-length ${params.max_length} \\\n    --prefix ${params.prefix} \\\n    --directory ${fastqDir}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "fastqDir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { params.prefix + \"-\" + fastqDir }",
            "label 'largemem'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.prefix}*.fastq\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articMinIONMedaka": {
        "name_process": "articMinIONMedaka",
        "string_process": "\nprocess articMinIONMedaka {\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}*\", mode: \"copy\"\n\n    input:\n    tuple file(fastq), file(schemeRepo)\n\n    output:\n    file(\"${sampleName}*\")\n    \n    tuple sampleName, file(\"${sampleName}.primertrimmed.rg.sorted.bam\"), emit: ptrim\n    tuple sampleName, file(\"${sampleName}.sorted.bam\"), emit: mapped\n    tuple sampleName, file(\"${sampleName}.consensus.fasta\"), emit: consensus_fasta\n    tuple sampleName, file(\"${sampleName}.pass.vcf.gz\"), emit: vcf\n\n    script:\n                                                 \n    sampleName = fastq.getBaseName().replaceAll(~/\\.fastq.*$/, '')\n\n                                      \n    minionRunConfigBuilder = []\n\n    if ( params.normalise ) {\n    minionRunConfigBuilder.add(\"--normalise ${params.normalise}\")\n    }\n    \n    if ( params.bwa ) {\n    minionRunConfigBuilder.add(\"--bwa\")\n    } else {\n    minionRunConfigBuilder.add(\"--minimap2\")\n    }\n\n    minionFinalConfig = minionRunConfigBuilder.join(\" \")\n\n    \"\"\"\n    artic minion --medaka \\\n    ${minionFinalConfig} \\\n    --threads ${task.cpus} \\\n    --scheme-directory ${schemeRepo} \\\n    --read-file ${fastq} \\\n    ${params.scheme}/${params.schemeVersion} \\\n    ${sampleName}\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    sampleName = fastq.getBaseName().replaceAll(~/\\.fastq.*$/, '')\n\n                                      \n    minionRunConfigBuilder = []\n\n    if ( params.normalise ) {\n    minionRunConfigBuilder.add(\"--normalise ${params.normalise}\")\n    }\n    \n    if ( params.bwa ) {\n    minionRunConfigBuilder.add(\"--bwa\")\n    } else {\n    minionRunConfigBuilder.add(\"--minimap2\")\n    }\n\n    minionFinalConfig = minionRunConfigBuilder.join(\" \")\n\n    \"\"\"\n    artic minion --medaka \\\n    ${minionFinalConfig} \\\n    --threads ${task.cpus} \\\n    --scheme-directory ${schemeRepo} \\\n    --read-file ${fastq} \\\n    ${params.scheme}/${params.schemeVersion} \\\n    ${sampleName}\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "fastq",
            "schemeRepo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}*\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articMinIONNanopolish": {
        "name_process": "articMinIONNanopolish",
        "string_process": "\nprocess articMinIONNanopolish {\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}*\", mode: \"copy\"\n\n    input:\n    tuple file(fastq), file(schemeRepo), file(fast5Pass), file(seqSummary)\n\n    output:\n    file(\"${sampleName}*\")\n    \n    tuple sampleName, file(\"${sampleName}.primertrimmed.rg.sorted.bam\"), emit: ptrim\n    tuple sampleName, file(\"${sampleName}.sorted.bam\"), emit: mapped\n    tuple sampleName, file(\"${sampleName}.consensus.fasta\"), emit: consensus_fasta\n    tuple sampleName, file(\"${sampleName}.pass.vcf.gz\"), emit: vcf\n\n    script:\n                                                 \n    sampleName = fastq.getBaseName().replaceAll(~/\\.fastq.*$/, '')\n\n                                      \n    minionRunConfigBuilder = []\n\n    if ( params.normalise ) {\n    minionRunConfigBuilder.add(\"--normalise ${params.normalise}\")\n    }\n    \n    if ( params.bwa ) {\n    minionRunConfigBuilder.add(\"--bwa\")\n    } else {\n    minionRunConfigBuilder.add(\"--minimap2\")\n    }\n\n    minionFinalConfig = minionRunConfigBuilder.join(\" \")\n\n    \"\"\"\n    artic minion ${minionFinalConfig} \\\n    --threads ${task.cpus} \\\n    --scheme-directory ${schemeRepo} \\\n    --read-file ${fastq} \\\n    --fast5-directory ${fast5Pass} \\\n    --sequencing-summary ${seqSummary} \\\n    ${params.scheme}/${params.schemeVersion} \\\n    ${sampleName}\n    \"\"\"\n}",
        "nb_lignes_process": 47,
        "string_script": "    sampleName = fastq.getBaseName().replaceAll(~/\\.fastq.*$/, '')\n\n                                      \n    minionRunConfigBuilder = []\n\n    if ( params.normalise ) {\n    minionRunConfigBuilder.add(\"--normalise ${params.normalise}\")\n    }\n    \n    if ( params.bwa ) {\n    minionRunConfigBuilder.add(\"--bwa\")\n    } else {\n    minionRunConfigBuilder.add(\"--minimap2\")\n    }\n\n    minionFinalConfig = minionRunConfigBuilder.join(\" \")\n\n    \"\"\"\n    artic minion ${minionFinalConfig} \\\n    --threads ${task.cpus} \\\n    --scheme-directory ${schemeRepo} \\\n    --read-file ${fastq} \\\n    --fast5-directory ${fast5Pass} \\\n    --sequencing-summary ${seqSummary} \\\n    ${params.scheme}/${params.schemeVersion} \\\n    ${sampleName}\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "fastq",
            "schemeRepo",
            "fast5Pass",
            "seqSummary"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}*\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articRemoveUnmappedReads": {
        "name_process": "articRemoveUnmappedReads",
        "string_process": "\nprocess articRemoveUnmappedReads {\n    tag { sampleName }\n\n    cpus 1\n\n    input:\n    tuple(sampleName, path(bamfile))\n\n    output:\n    tuple( sampleName, file(\"${sampleName}.mapped.sorted.bam\"))\n\n    script:\n    \"\"\"\n    samtools view -F4 -o ${sampleName}.mapped.sorted.bam ${bamfile} \n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools view -F4 -o ${sampleName}.mapped.sorted.bam ${bamfile} \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamfile",
            "sampleName"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "cpus 1"
        ],
        "when": "",
        "stub": ""
    },
    "collateSamples": {
        "name_process": "collateSamples",
        "string_process": "process collateSamples {\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/qc_pass_climb_upload/${params.prefix}\", pattern: \"${sampleName}\", mode: 'copy'\n\n    input:\n    tuple(sampleName, path(bam), path(fasta))\n\n    output:\n    path(\"${sampleName}\")\n\n    script:\n    \"\"\"\n    mkdir ${sampleName}\n    mv ${bam} ${fasta} ${sampleName}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    mkdir ${sampleName}\n    mv ${bam} ${fasta} ${sampleName}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "fasta",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "connor-lab__ncov2019-artic-nf",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/qc_pass_climb_upload/${params.prefix}\", pattern: \"${sampleName}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}