{
    "OPERATION_1": {
        "string": "in_data = Channel\n        .fromFilePairs(\"$input/**/*{brain_mask.nii.gz,bval,bvec,dwi.nii.gz}\",\n                       size: 4,\n                       maxDepth:1,\n                       flat: true) {it.parent.name}",
        "origin": [],
        "gives": [
            [
                "in_data",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "all_data_for_kernels, data_for_fw, grads_mask_for_metrics = in_data\n    .map{sid, brain_mask, bval, bvec, dwi -> [tuple(sid, brain_mask, bval, bvec, dwi),\n                                                tuple(sid, brain_mask, bval, bvec, dwi),\n                                                tuple(sid, brain_mask, bval, bvec)]}\n    .separate(3)",
        "origin": [
            [
                "in_data",
                "P"
            ]
        ],
        "gives": [
            [
                "all_data_for_kernels",
                "P"
            ],
            [
                "data_for_fw",
                "P"
            ],
            [
                "grads_mask_for_metrics",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "all_data_for_kernels.first().set{unique_data_for_kernels}",
        "origin": [
            [
                "all_data_for_kernels",
                "P"
            ]
        ],
        "gives": [
            [
                "unique_data_for_kernels",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "data_for_fw\n  .combine(kernel_for_fw)\n  .set{data_with_kernel_for_fw}",
        "origin": [
            [
                "data_for_fw",
                "P"
            ],
            [
                "kernel_for_fw",
                "P"
            ]
        ],
        "gives": [
            [
                "data_with_kernel_for_fw",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "grads_mask_for_metrics\n    .join(fw_corrected_dwi)\n    .set{data_for_dti_metrics}",
        "origin": [
            [
                "grads_mask_for_metrics",
                "P"
            ],
            [
                "fw_corrected_dwi",
                "P"
            ]
        ],
        "gives": [
            [
                "data_for_dti_metrics",
                "P"
            ]
        ]
    }
}