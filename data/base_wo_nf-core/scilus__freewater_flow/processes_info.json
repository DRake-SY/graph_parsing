{
    "Compute_Kernel": {
        "name_process": "Compute_Kernel",
        "string_process": "\nprocess Compute_Kernel {\n  cpus 1\n  publishDir = \"${params.output_dir}/Compute_Kernel\"\n\n  input:\n    set sid, file(brain_mask), file(bval), file(bvec), file(dwi) from unique_data_for_kernels\n\n  output:\n    file(\"kernels/\") into kernel_for_fw\n\n  script:\n    \"\"\"\n    scil_compute_freewater.py $dwi $bval $bvec\\\n      --mask $brain_mask\\\n      --para_diff $params.para_diff\\\n      --perp_diff_min $params.perp_diff_min\\\n      --perp_diff_max $params.perp_diff_max\\\n      --iso_diff $params.iso_diff\\\n      --lambda1 $params.lambda1\\\n      --processes $params.nb_threads\\\n      --lambda2 $params.lambda2\\\n      --b_thr $params.b_thr\\\n      --save_kernels kernels/ \\\n      --compute_only\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    scil_compute_freewater.py $dwi $bval $bvec\\\n      --mask $brain_mask\\\n      --para_diff $params.para_diff\\\n      --perp_diff_min $params.perp_diff_min\\\n      --perp_diff_max $params.perp_diff_max\\\n      --iso_diff $params.iso_diff\\\n      --lambda1 $params.lambda1\\\n      --processes $params.nb_threads\\\n      --lambda2 $params.lambda2\\\n      --b_thr $params.b_thr\\\n      --save_kernels kernels/ \\\n      --compute_only\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "unique_data_for_kernels"
        ],
        "nb_inputs": 1,
        "outputs": [
            "kernel_for_fw"
        ],
        "nb_outputs": 1,
        "name_workflow": "scilus__freewater_flow",
        "directive": [
            "cpus 1",
            "publishDir = \"${params.output_dir}/Compute_Kernel\""
        ],
        "when": "",
        "stub": ""
    },
    "Compute_FreeWater": {
        "name_process": "Compute_FreeWater",
        "string_process": "\nprocess Compute_FreeWater {\n    cpus params.nb_threads\n\n    input:\n    set sid, file(brain_mask), file(bval), file(bvec), file(dwi), file(kernels) from data_with_kernel_for_fw\n\n    output:\n    set sid, \"${sid}__dwi_fw_corrected.nii.gz\" into fw_corrected_dwi\n    file \"${sid}__FIT_dir.nii.gz\"\n    file \"${sid}__FIT_FiberVolume.nii.gz\"\n    file \"${sid}__FIT_FW.nii.gz\"\n    file \"${sid}__FIT_nrmse.nii.gz\"\n\n    script:\n    \"\"\"\n    scil_compute_freewater.py $dwi $bval $bvec\\\n        --mask $brain_mask\\\n        --para_diff $params.para_diff\\\n        --perp_diff_min $params.perp_diff_min\\\n        --perp_diff_max $params.perp_diff_max\\\n        --iso_diff $params.iso_diff\\\n        --lambda1 $params.lambda1\\\n        --processes $params.nb_threads\\\n        --lambda2 $params.lambda2\\\n        --load_kernels $kernels\n\n    mv results/dwi_fw_corrected.nii.gz ${sid}__dwi_fw_corrected.nii.gz\n    mv results/FIT_dir.nii.gz ${sid}__FIT_dir.nii.gz\n    mv results/FIT_FiberVolume.nii.gz ${sid}__FIT_FiberVolume.nii.gz\n    mv results/FIT_FW.nii.gz ${sid}__FIT_FW.nii.gz\n    mv results/FIT_nrmse.nii.gz ${sid}__FIT_nrmse.nii.gz\n    rm -rf results\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    \"\"\"\n    scil_compute_freewater.py $dwi $bval $bvec\\\n        --mask $brain_mask\\\n        --para_diff $params.para_diff\\\n        --perp_diff_min $params.perp_diff_min\\\n        --perp_diff_max $params.perp_diff_max\\\n        --iso_diff $params.iso_diff\\\n        --lambda1 $params.lambda1\\\n        --processes $params.nb_threads\\\n        --lambda2 $params.lambda2\\\n        --load_kernels $kernels\n\n    mv results/dwi_fw_corrected.nii.gz ${sid}__dwi_fw_corrected.nii.gz\n    mv results/FIT_dir.nii.gz ${sid}__FIT_dir.nii.gz\n    mv results/FIT_FiberVolume.nii.gz ${sid}__FIT_FiberVolume.nii.gz\n    mv results/FIT_FW.nii.gz ${sid}__FIT_FW.nii.gz\n    mv results/FIT_nrmse.nii.gz ${sid}__FIT_nrmse.nii.gz\n    rm -rf results\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "data_with_kernel_for_fw"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fw_corrected_dwi"
        ],
        "nb_outputs": 1,
        "name_workflow": "scilus__freewater_flow",
        "directive": [
            "cpus params.nb_threads"
        ],
        "when": "",
        "stub": ""
    },
    "FW_Corrected_Metrics": {
        "name_process": "FW_Corrected_Metrics",
        "string_process": "\nprocess FW_Corrected_Metrics {\n    cpus 3\n\n    input:\n      set sid, file(brain_mask), file(bval), file(bvec), file(fw_corrected_dwi) from data_for_dti_metrics\n\n    output:\n    file \"${sid}__fw_corr_ad.nii.gz\"\n    file \"${sid}__fw_corr_evecs.nii.gz\"\n    file \"${sid}__fw_corr_evecs_v1.nii.gz\"\n    file \"${sid}__fw_corr_evecs_v2.nii.gz\"\n    file \"${sid}__fw_corr_evecs_v3.nii.gz\"\n    file \"${sid}__fw_corr_evals.nii.gz\"\n    file \"${sid}__fw_corr_evals_e1.nii.gz\"\n    file \"${sid}__fw_corr_evals_e2.nii.gz\"\n    file \"${sid}__fw_corr_evals_e3.nii.gz\"\n    file \"${sid}__fw_corr_fa.nii.gz\"\n    file \"${sid}__fw_corr_ga.nii.gz\"\n    file \"${sid}__fw_corr_rgb.nii.gz\"\n    file \"${sid}__fw_corr_md.nii.gz\"\n    file \"${sid}__fw_corr_mode.nii.gz\"\n    file \"${sid}__fw_corr_norm.nii.gz\"\n    file \"${sid}__fw_corr_rd.nii.gz\"\n    file \"${sid}__fw_corr_tensor.nii.gz\"\n    file \"${sid}__fw_corr_nonphysical.nii.gz\"\n    file \"${sid}__fw_corr_pulsation_std_dwi.nii.gz\"\n    file \"${sid}__fw_corr_residual.nii.gz\"\n    file \"${sid}__fw_corr_residual_iqr_residuals.npy\"\n    file \"${sid}__fw_corr_residual_mean_residuals.npy\"\n    file \"${sid}__fw_corr_residual_q1_residuals.npy\"\n    file \"${sid}__fw_corr_residual_q3_residuals.npy\"\n    file \"${sid}__fw_corr_residual_residuals_stats.png\"\n    file \"${sid}__fw_corr_residual_std_residuals.npy\"\n\n    script:\n    \"\"\"\n    export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1\n    export OMP_NUM_THREADS=1\n    export OPENBLAS_NUM_THREADS=1\n    scil_image_math.py convert $brain_mask $brain_mask -f --data_type int16\n    scil_compute_dti_metrics.py $fw_corrected_dwi $bval $bvec --mask $brain_mask\\\n        --ad ${sid}__fw_corr_ad.nii.gz --evecs ${sid}__fw_corr_evecs.nii.gz\\\n        --evals ${sid}__fw_corr_evals.nii.gz --fa ${sid}__fw_corr_fa.nii.gz\\\n        --ga ${sid}__fw_corr_ga.nii.gz --rgb ${sid}__fw_corr_rgb.nii.gz\\\n        --md ${sid}__fw_corr_md.nii.gz --mode ${sid}__fw_corr_mode.nii.gz\\\n        --norm ${sid}__fw_corr_norm.nii.gz --rd ${sid}__fw_corr_rd.nii.gz\\\n        --tensor ${sid}__fw_corr_tensor.nii.gz\\\n        --non-physical ${sid}__fw_corr_nonphysical.nii.gz\\\n        --pulsation ${sid}__fw_corr_pulsation.nii.gz\\\n        --residual ${sid}__fw_corr_residual.nii.gz\\\n        -f\n    \"\"\"\n}",
        "nb_lignes_process": 52,
        "string_script": "    \"\"\"\n    export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1\n    export OMP_NUM_THREADS=1\n    export OPENBLAS_NUM_THREADS=1\n    scil_image_math.py convert $brain_mask $brain_mask -f --data_type int16\n    scil_compute_dti_metrics.py $fw_corrected_dwi $bval $bvec --mask $brain_mask\\\n        --ad ${sid}__fw_corr_ad.nii.gz --evecs ${sid}__fw_corr_evecs.nii.gz\\\n        --evals ${sid}__fw_corr_evals.nii.gz --fa ${sid}__fw_corr_fa.nii.gz\\\n        --ga ${sid}__fw_corr_ga.nii.gz --rgb ${sid}__fw_corr_rgb.nii.gz\\\n        --md ${sid}__fw_corr_md.nii.gz --mode ${sid}__fw_corr_mode.nii.gz\\\n        --norm ${sid}__fw_corr_norm.nii.gz --rd ${sid}__fw_corr_rd.nii.gz\\\n        --tensor ${sid}__fw_corr_tensor.nii.gz\\\n        --non-physical ${sid}__fw_corr_nonphysical.nii.gz\\\n        --pulsation ${sid}__fw_corr_pulsation.nii.gz\\\n        --residual ${sid}__fw_corr_residual.nii.gz\\\n        -f\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "data_for_dti_metrics"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "scilus__freewater_flow",
        "directive": [
            "cpus 3"
        ],
        "when": "",
        "stub": ""
    }
}