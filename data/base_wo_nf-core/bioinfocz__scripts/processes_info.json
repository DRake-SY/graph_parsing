{
    "download_data": {
        "name_process": "download_data",
        "string_process": "\nprocess download_data {\n    conda 'bioconda::parallel-fastq-dump'\n    publishDir p.data_out_dir, mode: 'copy'\n\n    input:\n        each srx from samples\n        val data_out_dir from p.data_out_dir\n        val options from p.options\n\n    output:\n        val srx into download_info\n        file '*.fastq.gz'\n        stdout into fastq_dump_echo\n\n    when:\n        !p.print_help\n\n    \"\"\"\n    parallel-fastq-dump -s $srx $options\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    parallel-fastq-dump -s $srx $options\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples",
            "p",
            "p"
        ],
        "nb_inputs": 3,
        "outputs": [
            "download_info",
            "fastq_dump_echo"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfocz__scripts",
        "directive": [
            "conda 'bioconda::parallel-fastq-dump'",
            "publishDir p.data_out_dir, mode: 'copy'"
        ],
        "when": "!p.print_help",
        "stub": ""
    },
    "print_help": {
        "name_process": "print_help",
        "string_process": "\nprocess print_help {\n    conda 'bioconda::parallel-fastq-dump'\n\n    input:\n        val app from Channel.from('parallel-fastq-dump', 'fastq-dump')\n\n    output:\n        stdout into print_help_stdout\n\n    when:\n        p.print_help\n\n    \"\"\"\n    echo \"$app info:\"\n    $app --help\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    echo \"$app info:\"\n    $app --help\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "print_help_stdout"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfocz__scripts",
        "directive": [
            "conda 'bioconda::parallel-fastq-dump'"
        ],
        "when": "p.print_help",
        "stub": ""
    }
}