{
    "update_headers": {
        "name_process": "update_headers",
        "string_process": "\nprocess update_headers {\n    tag \"$name\"\n\n    input:\n    set val(name), file(fastq) from original_fastqs\n\n    output:\n    set val(name), file('*updated_header.fq.gz') into original_fastqs_updated_header\n\n    \"\"\"\n    zcat $fastq | awk '{if (NR%4==1) { split(\\$0,a,\" \"); split(a[2],b,\":\"); print a[1]\"/\"b[1]} else print \\$0 }' > $fastq\".updated_header.fq\"\n    gzip $fastq\".updated_header.fq\"\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    zcat $fastq | awk '{if (NR%4==1) { split(\\$0,a,\" \"); split(a[2],b,\":\"); print a[1]\"/\"b[1]} else print \\$0 }' > $fastq\".updated_header.fq\"\n    gzip $fastq\".updated_header.fq\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "original_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "original_fastqs_updated_header"
        ],
        "nb_outputs": 1,
        "name_workflow": "matrulda__validate_bamtofastq",
        "directive": [
            "tag \"$name\""
        ],
        "when": "",
        "stub": ""
    },
    "sort_fastqs": {
        "name_process": "sort_fastqs",
        "string_process": "\nprocess sort_fastqs {\n    tag \"$name\"\n\n    input:\n    set val(name), file(fastq) from to_be_sorted_fastqs\n\n    output:\n    set val(name), file('*sorted.fq') into sorted_fastqs\n\n    \"\"\"\n    zcat $fastq | paste - - - - | sort -k1,1 -t \" \" | tr \"\\t\" \"\\n\" > $fastq\".sorted.fq\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    zcat $fastq | paste - - - - | sort -k1,1 -t \" \" | tr \"\\t\" \"\\n\" > $fastq\".sorted.fq\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "to_be_sorted_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sorted_fastqs"
        ],
        "nb_outputs": 1,
        "name_workflow": "matrulda__validate_bamtofastq",
        "directive": [
            "tag \"$name\""
        ],
        "when": "",
        "stub": ""
    },
    "calculate_checksums": {
        "name_process": "calculate_checksums",
        "string_process": "\nprocess calculate_checksums {\n    publishDir params.outdir, mode: 'copy'\n\n    input:\n    file fastq from sorted_fastqs.collect()\n\n    output:\n    file('checksums.md5')\n\n    \"\"\"\n    md5sum *sorted.fq > checksums.md5\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    md5sum *sorted.fq > checksums.md5\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sorted_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "matrulda__validate_bamtofastq",
        "directive": [
            "publishDir params.outdir, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}