{
    "blastGetDB": {
        "name_process": "blastGetDB",
        "string_process": "\nprocess blastGetDB {\n  label 'label'\n  if (params.cloudProcess) { \n    publishDir \"${params.cloudDatabase}/test_db/\", mode: 'copy', pattern: \"${params.db}\" \n  }\n  else { \n    storeDir \"nextflow-autodownload-databases/test_db/\" \n  }  \n\n  output:\n    file(params.db)\n\n  script:\n    \"\"\"\n    wget ftp://ftp.ensemblgenomes.org/pub/bacteria/release-45/fasta/bacteria_44_collection/chlamydia_gallinacea_08_1274_3/dna/${params.db}.gz\n    gunzip -f ${params.db}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    wget ftp://ftp.ensemblgenomes.org/pub/bacteria/release-45/fasta/bacteria_44_collection/chlamydia_gallinacea_08_1274_3/dna/${params.db}.gz\n    gunzip -f ${params.db}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "params"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__NEMO",
        "directive": [
            "label 'label' if (params.cloudProcess) { publishDir \"${params.cloudDatabase}/test_db/\", mode: 'copy', pattern: \"${params.db}\" } else { storeDir \"nextflow-autodownload-databases/test_db/\" }"
        ],
        "when": "",
        "stub": ""
    },
    "blast": {
        "name_process": "blast",
        "string_process": "process blast {\n    label 'blast'\n    publishDir \"${params.output}/\", mode: 'copy', pattern: \"${name}.blast\"\n\n    input:\n    tuple val(name), file(fasta) \n    file db\n    \n    output:\n\tfile(\"${name}.blast\") \n    \n    script:\n    \"\"\"\n    makeblastdb -in ${db} -dbtype nucl\n    blastn -task blastn -num_threads ${task.cpus} -query ${fasta} -db ${db} -evalue 1e-10 -outfmt \"6 qseqid sseqid pident length mismatch gapopen qstart qend qlen sstart send evalue bitscore slen\" > ${name}.blast\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    makeblastdb -in ${db} -dbtype nucl\n    blastn -task blastn -num_threads ${task.cpus} -query ${fasta} -db ${db} -evalue 1e-10 -outfmt \"6 qseqid sseqid pident length mismatch gapopen qstart qend qlen sstart send evalue bitscore slen\" > ${name}.blast\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "G-BLASTN"
        ],
        "tools_url": [
            "https://bio.tools/g-blastn"
        ],
        "tools_dico": [
            {
                "name": "G-BLASTN",
                "uri": "https://bio.tools/g-blastn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2976",
                                "term": "Protein sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "GPU-accelerated nucleotide alignment tool based on the widely used NCBI-BLAST.",
                "homepage": "http://www.comp.hkbu.edu.hk/~chxw/software/G-BLASTN.html"
            }
        ],
        "inputs": [
            "name",
            "fasta",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__NEMO",
        "directive": [
            "label 'blast'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"${name}.blast\""
        ],
        "when": "",
        "stub": ""
    }
}