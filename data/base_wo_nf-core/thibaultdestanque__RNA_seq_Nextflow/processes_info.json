{
    "Trim": {
        "name_process": "Trim",
        "string_process": "\nprocess Trim {\n    tag \"$pair_id\"\n    publishDir params.outdir, mode: 'copy'\n\n    time'2h'\n    cpus 8\n    queue 'omp'\n    memory '60 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n    conda 'bioconda::trimmomatic=0.36'\n\n    input:\n    set pair_id, file(reads) from read_pairs\n    file(adapter_file) from adapter_file\n     \n    output:\n    file \"*_paired.fastq.gz\" into paired_read_trimed\n    file \"*_unpaired.fastq.gz\" into unpaired_read_trimed\n\n    shell:\n    \"\"\"\n    trimmomatic PE -threads 8 -phred33 ${reads} \\\n    \t${pair_id}_trim_R1_paired.fastq.gz \\\n    \t${pair_id}_trim_R1_unpaired.fastq.gz \\\n    \t${pair_id}_trim_R2_paired.fastq.gz \\\n    \t${pair_id}_trim_R2_unpaired.fastq.gz \\\n    \tILLUMINACLIP:${adapter_file}:${params.illuminaclip_1}:${params.illuminaclip_2}:${params.illuminaclip_3} \\\n    \tLEADING:${params.leading} TRAILING:${params.trailing} SLIDINGWINDOW:${params.slidingwindows_1}:${params.slidingwindows_2} MINLEN:${params.minlen} \\\n        >& /home1/scratch/tdestanq/Trim.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n    trimmomatic PE -threads 8 -phred33 ${reads} \\\n    \t${pair_id}_trim_R1_paired.fastq.gz \\\n    \t${pair_id}_trim_R1_unpaired.fastq.gz \\\n    \t${pair_id}_trim_R2_paired.fastq.gz \\\n    \t${pair_id}_trim_R2_unpaired.fastq.gz \\\n    \tILLUMINACLIP:${adapter_file}:${params.illuminaclip_1}:${params.illuminaclip_2}:${params.illuminaclip_3} \\\n    \tLEADING:${params.leading} TRAILING:${params.trailing} SLIDINGWINDOW:${params.slidingwindows_1}:${params.slidingwindows_2} MINLEN:${params.minlen} \\\n        >& /home1/scratch/tdestanq/Trim.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Trimmomatic"
        ],
        "tools_url": [
            "https://bio.tools/trimmomatic"
        ],
        "tools_dico": [
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            }
        ],
        "inputs": [
            "read_pairs",
            "adapter_file"
        ],
        "nb_inputs": 2,
        "outputs": [
            "paired_read_trimed",
            "unpaired_read_trimed"
        ],
        "nb_outputs": 2,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "tag \"$pair_id\"",
            "publishDir params.outdir, mode: 'copy'",
            "time'2h'",
            "cpus 8",
            "queue 'omp'",
            "memory '60 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'",
            "conda 'bioconda::trimmomatic=0.36'"
        ],
        "when": "",
        "stub": ""
    },
    "Index_Genome": {
        "name_process": "Index_Genome",
        "string_process": "\nprocess Index_Genome {\n\n    time'24h'\n    cpus 1\n    queue 'sequentiel'\n    memory '30 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n    conda 'bioconda::gmap=2018.07.04'\n    \n    input:\n    file genome_fa from genome_fa_file\n    params.genome_path\n    params.genomeIndex\n\n    output:\n    file \"genome.fa\" into genome\n\n    shell:\n    \"\"\"\n    gmap_build --dir=${params.genome_path} ${genome_fa} -d ${params.genomeIndex} >& /home1/scratch/tdestanq/Index_Genome.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    gmap_build --dir=${params.genome_path} ${genome_fa} -d ${params.genomeIndex} >& /home1/scratch/tdestanq/Index_Genome.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "gmap_build"
        ],
        "tools_url": [
            "https://bio.tools/gmap_build"
        ],
        "tools_dico": [
            {
                "name": "gmap_build",
                "uri": "https://bio.tools/gmap_build",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A database genome index for GMAP and GSNAP.",
                "homepage": "http://research-pub.gene.com/gmap/"
            }
        ],
        "inputs": [
            "genome_fa_file"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genome"
        ],
        "nb_outputs": 1,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "time'24h'",
            "cpus 1",
            "queue 'sequentiel'",
            "memory '30 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'",
            "conda 'bioconda::gmap=2018.07.04'"
        ],
        "when": "",
        "stub": ""
    },
    "Alignment": {
        "name_process": "Alignment",
        "string_process": "\nprocess Alignment {\n    publishDir params.outdir, mode: 'copy'\n\n    time'23h'\n    cpus 16\n    queue 'omp'\n    memory '60 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n    conda 'bioconda::gmap=2018.07.04'\n    \n    input:\n    file genome from genome\n    file read_trimed from paired_read_trimed\n\n    output:\n    file \"*\" into all_file_alignment\n    file \"*.concordant_uniq\" into concordant_uniq_files\n\n    shell:\n    \"\"\"\n    bash\n    #source activate Gmap\n    # Retrieve base name from samples\n    ls *_trim_R1_paired.fastq.gz | sed 's/_trim_R1_paired.fastq.gz//g' > Name_tmp.txt;\n    base_name=`cat Name_tmp.txt`;\n    gsnap --gunzip -t 8 -A sam --min-coverage=${params.min_coverage} \\\n        --dir=${params.genome_path} -d ${params.genomeIndex}  \\\n        --max-mismatches=${params.max_mismatches} --novelsplicing=${params.novel_splicing} \\\n        --split-output=\\$base_name \\\n        --read-group-id=\\$base_name \\\n        --read-group-platform=Illumina \\\n        ${read_trimed} >& /home1/scratch/tdestanq/Alignment.log 2>&1\n    rm Name_tmp.txt\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    bash\n    #source activate Gmap\n    # Retrieve base name from samples\n    ls *_trim_R1_paired.fastq.gz | sed 's/_trim_R1_paired.fastq.gz//g' > Name_tmp.txt;\n    base_name=`cat Name_tmp.txt`;\n    gsnap --gunzip -t 8 -A sam --min-coverage=${params.min_coverage} \\\n        --dir=${params.genome_path} -d ${params.genomeIndex}  \\\n        --max-mismatches=${params.max_mismatches} --novelsplicing=${params.novel_splicing} \\\n        --split-output=\\$base_name \\\n        --read-group-id=\\$base_name \\\n        --read-group-platform=Illumina \\\n        ${read_trimed} >& /home1/scratch/tdestanq/Alignment.log 2>&1\n    rm Name_tmp.txt\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GSNAP"
        ],
        "tools_url": [
            "https://bio.tools/gsnap"
        ],
        "tools_dico": [
            {
                "name": "GSNAP",
                "uri": "https://bio.tools/gsnap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Whole genome alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "GSNAP can align both single-end and paired-end reads as short as 14 nt and of arbitrarily long length. It can detect short- and long-distance splicing, including interchromosomal splicing, in individual reads using probabilistic models or a database of known splice sites. Our program also permits SNP-tolerant alignment to a reference space of all possible combinations of major and minor alleles, and can align reads from bisulfite treated DNA for the study of methylation state.",
                "homepage": "http://research-pub.gene.com/gmap/"
            }
        ],
        "inputs": [
            "genome",
            "paired_read_trimed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "all_file_alignment",
            "concordant_uniq_files"
        ],
        "nb_outputs": 2,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "time'23h'",
            "cpus 16",
            "queue 'omp'",
            "memory '60 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'",
            "conda 'bioconda::gmap=2018.07.04'"
        ],
        "when": "",
        "stub": ""
    },
    "Format_Data": {
        "name_process": "Format_Data",
        "string_process": "\nprocess Format_Data {\n    publishDir params.outdir, mode: 'copy'\n\n    time'5h'\n    cpus 1\n    queue 'sequentiel'\n    memory '60 GB'\n    scratch '/home1/scratch/tdestanq/'\n                          \n    \n    input:\n    file concordant_uniq from concordant_uniq_files\n\n    output:\n    file \"*\" into all_format_data\n    file \"*.sorted.bam\" into read_mapped_sort_bam\n\n    shell:\n    \"\"\"\n    . /appli/bioinfo/samtools/1.9/env.sh\n    samtools view -b ${concordant_uniq} >& ${concordant_uniq}.bam 2> /home1/scratch/tdestanq/Format_Data_sam_view.log ;\n    samtools sort ${concordant_uniq}.bam >& ${concordant_uniq}.sorted.bam 2> /home1/scratch/tdestanq/Format_Data_sam_sort.log ;\n    samtools index ${concordant_uniq}.sorted.bam >& /home1/scratch/tdestanq/Format_Data_sam_sort_index.log 2>&1 ;\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    . /appli/bioinfo/samtools/1.9/env.sh\n    samtools view -b ${concordant_uniq} >& ${concordant_uniq}.bam 2> /home1/scratch/tdestanq/Format_Data_sam_view.log ;\n    samtools sort ${concordant_uniq}.bam >& ${concordant_uniq}.sorted.bam 2> /home1/scratch/tdestanq/Format_Data_sam_sort.log ;\n    samtools index ${concordant_uniq}.sorted.bam >& /home1/scratch/tdestanq/Format_Data_sam_sort_index.log 2>&1 ;\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "concordant_uniq_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "all_format_data",
            "read_mapped_sort_bam"
        ],
        "nb_outputs": 2,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "time'5h'",
            "cpus 1",
            "queue 'sequentiel'",
            "memory '60 GB'",
            "scratch '/home1/scratch/tdestanq/'"
        ],
        "when": "",
        "stub": ""
    },
    "Htseq_count": {
        "name_process": "Htseq_count",
        "string_process": "\nprocess Htseq_count {\n    publishDir params.outdir, mode: 'copy'\n\n    time'4h'\n    cpus 1\n    queue 'sequentiel'\n    memory '50 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n    conda 'bioconda::htseq=0.6.1'\n    \n    input:\n    file sorted_bam from read_mapped_sort_bam\n    file GFF3_annotation from annotation_file\n\n    output:\n    file \"*_htseq_count.txt\" into htseq_count\n\n    shell:\n    \"\"\"\n    #. /appli/bioinfo/htseq-count/latest/env.sh\n    htseq-count -f \"bam\" -s \"no\" -r \"pos\" -t \"gene\" -i \"Name\" --mode \"union\" ${sorted_bam} ${GFF3_annotation} >& ${sorted_bam}_htseq_count.txt 2> /home1/scratch/tdestanq/HtseqCount.log\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    #. /appli/bioinfo/htseq-count/latest/env.sh\n    htseq-count -f \"bam\" -s \"no\" -r \"pos\" -t \"gene\" -i \"Name\" --mode \"union\" ${sorted_bam} ${GFF3_annotation} >& ${sorted_bam}_htseq_count.txt 2> /home1/scratch/tdestanq/HtseqCount.log\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "htseqcount"
        ],
        "tools_url": [
            "https://bio.tools/htseqcount"
        ],
        "tools_dico": [
            {
                "name": "htseqcount",
                "uri": "https://bio.tools/htseqcount",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "This script takes an alignment file in SAM format and a feature file in GFF format and calculates for each feature the number of reads mapping to it.",
                "homepage": "https://htseq.readthedocs.io/en/release_0.9.1/"
            }
        ],
        "inputs": [
            "read_mapped_sort_bam",
            "annotation_file"
        ],
        "nb_inputs": 2,
        "outputs": [
            "htseq_count"
        ],
        "nb_outputs": 1,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "time'4h'",
            "cpus 1",
            "queue 'sequentiel'",
            "memory '50 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'",
            "conda 'bioconda::htseq=0.6.1'"
        ],
        "when": "",
        "stub": ""
    },
    "Format_data_for_R_1": {
        "name_process": "Format_data_for_R_1",
        "string_process": "\nprocess Format_data_for_R_1 {\n    publishDir params.outdir, mode: 'copy'\n\n    time'4h'\n    cpus 1\n    queue 'sequentiel'\n    memory '50 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n                                    \n    \n    input:\n    file htseq_count from htseq_count\n\n    output:\n    file \"*.trim\" into format_data_for_R_1\n\n    shell:\n    \"\"\"\n    #echo \"${htseq_count}\"\n    echo -e \"genes\\t\\$(basename ${htseq_count})\" | cat - ${htseq_count} >& ${htseq_count}.temp 2> /home1/scratch/tdestanq/Format_Data_for_R_add_header.log\n    mv ${htseq_count}.temp ${htseq_count}.trim\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    #echo \"${htseq_count}\"\n    echo -e \"genes\\t\\$(basename ${htseq_count})\" | cat - ${htseq_count} >& ${htseq_count}.temp 2> /home1/scratch/tdestanq/Format_Data_for_R_add_header.log\n    mv ${htseq_count}.temp ${htseq_count}.trim\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "htseq_count"
        ],
        "nb_inputs": 1,
        "outputs": [
            "format_data_for_R_1"
        ],
        "nb_outputs": 1,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "time'4h'",
            "cpus 1",
            "queue 'sequentiel'",
            "memory '50 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'"
        ],
        "when": "",
        "stub": ""
    },
    "Format_data_for_R_2": {
        "name_process": "Format_data_for_R_2",
        "string_process": "\nprocess Format_data_for_R_2 {\n                                            \n\n    time'4h'\n    cpus 1\n    queue 'sequentiel'\n    memory '50 GB'\n    echo true\n    scratch '/home1/scratch/tdestanq/'\n                                    \n\n    input:\n    file htseq_count_header from format_data_for_R_1.collect()\n\n    output:\n    file \"join_devlarve.txt\" into join_devlarve\n\n    shell:\n    \"\"\"\n    ${params.join_multiple_file} ${htseq_count_header} >& join_devlarve.txt 2> /home1/scratch/tdestanq/Format_Data_for_R_join_multiplefile.log\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    ${params.join_multiple_file} ${htseq_count_header} >& join_devlarve.txt 2> /home1/scratch/tdestanq/Format_Data_for_R_join_multiplefile.log\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "format_data_for_R_1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "join_devlarve"
        ],
        "nb_outputs": 1,
        "name_workflow": "thibaultdestanque__RNA_seq_Nextflow",
        "directive": [
            "time'4h'",
            "cpus 1",
            "queue 'sequentiel'",
            "memory '50 GB'",
            "echo true",
            "scratch '/home1/scratch/tdestanq/'"
        ],
        "when": "",
        "stub": ""
    }
}