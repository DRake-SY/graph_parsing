{
    "parse_BLAST_output": {
        "name_process": "parse_BLAST_output",
        "string_process": "\nprocess parse_BLAST_output {\n    \n    input:\n        path BLAST_output\n    output:\n        path \"${BLAST_output}_parsed.tsv\"\n    \n        # threshold the evalues \n    script:\n\n        parser_BLAST_output\n\n    path \"${label}.out6\" \n\n}",
        "nb_lignes_process": 14,
        "string_script": "        parser_BLAST_output\n\n    path \"${label}.out6\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "iPATH"
        ],
        "tools_url": [
            "https://bio.tools/ipath"
        ],
        "tools_dico": [
            {
                "name": "iPATH",
                "uri": "https://bio.tools/ipath",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3083",
                                    "term": "Pathway or network visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1011",
                                "term": "EC number"
                            },
                            {
                                "uri": "http://edamontology.org/data_1027",
                                "term": "Gene ID (NCBI)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2343",
                                "term": "Pathway ID (KEGG)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2302",
                                "term": "STRING ID"
                            },
                            {
                                "uri": "http://edamontology.org/data_2764",
                                "term": "Protein name (UniProt)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2384",
                                "term": "IPI protein ID"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2082",
                                "term": "Matrix"
                            }
                        ]
                    }
                ],
                "description": "iPath is a web-based tool for the visualization and analysis of cellular pathways. Based on functional annotations (such as KEGG), it provides pathway maps for primary cellular metabolism as well as for some additional secondary metabolite synthesis and regulatory pathways. Users can map their own data onto these pathway maps. Due to its navigation and customization functions, iPATH allows users to easily explore and analyze the functional and metabolic capabilities of their (meta-)genomic data sets.",
                "homepage": "https://pathways.embl.de/"
            }
        ],
        "inputs": [
            "BLAST_output"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "parse_KMA_output": {
        "name_process": "parse_KMA_output",
        "string_process": "\nprocess parse_KMA_output {\n\n    script:\n        # add kmer size and threshold the mapping score\n        \"\"\"\n        zcat output.frag.gz | awk -F $'\\t' '{print $6, $7, $3}' \n        \"\"\"\n\n}",
        "nb_lignes_process": 8,
        "string_script": "        # add kmer size and threshold the mapping score\n        \"\"\"\n        zcat output.frag.gz | awk -F $'\\t' '{print $6, $7, $3}' \n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "prepare_BLASTX_BLASTP_database": {
        "name_process": "prepare_BLASTX_BLASTP_database",
        "string_process": "\nprocess prepare_BLASTX_BLASTP_database {\n    conda \"$baseDir/conda_envs/blast.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'amr.prot.db.*' \n    script:\n        \"\"\"\n        makeblastdb -dbtype prot -in $amr_ref -out amr.prot.db\n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        makeblastdb -dbtype prot -in $amr_ref -out amr.prot.db\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/blast.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_BLASTX_commands": {
        "name_process": "run_BLASTX_commands",
        "string_process": "\nprocess run_BLASTX_commands {\n    tag { \"BLASTX: ${label}\" }\n    publishDir \"results/nt_to_aa/blastx\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/blast.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_fasta), path(blastx_database)\n    output:\n        path \"${label}.out6\" \n    script:\n        \"\"\"\n        blastx -max_target_seqs 1 -query $read_fasta $run_params -num_threads ${task.cpus} -db amr.prot.db -outfmt 6 > ${label}.out6\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        blastx -max_target_seqs 1 -query $read_fasta $run_params -num_threads ${task.cpus} -db amr.prot.db -outfmt 6 > ${label}.out6\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_fasta",
            "blastx_database"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"BLASTX: ${label}\" }",
            "publishDir \"results/nt_to_aa/blastx\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/blast.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_DIAMOND_databases": {
        "name_process": "prepare_DIAMOND_databases",
        "string_process": "\nprocess prepare_DIAMOND_databases {\n    conda \"$baseDir/conda_envs/diamond.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'amr.diamond.db.*' \n    script:\n        \"\"\"\n        diamond makedb --in $amr_ref --db amr.diamond.db\n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        diamond makedb --in $amr_ref --db amr.diamond.db\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/diamond.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_DIAMONDBLASTX_commands": {
        "name_process": "run_DIAMONDBLASTX_commands",
        "string_process": "\nprocess run_DIAMONDBLASTX_commands {\n    tag { \"DIAMONDBLASTX: ${label}\" }\n    publishDir \"results/nt_to_aa/diamondblastx\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/diamond.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(reads_se), path(diamond_database)\n    output:\n        path \"${label}.out6\" \n    script:\n        \"\"\"\n        diamond blastx -p ${task.cpus} --max-target-seqs 1 --db ${diamond_database} --outfmt 6 --out ${label}.out6 ${run_params} -q ${reads_se}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        diamond blastx -p ${task.cpus} --max-target-seqs 1 --db ${diamond_database} --outfmt 6 --out ${label}.out6 ${run_params} -q ${reads_se}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "reads_se",
            "diamond_database"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"DIAMONDBLASTX: ${label}\" }",
            "publishDir \"results/nt_to_aa/diamondblastx\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/diamond.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_PALADIN_database": {
        "name_process": "prepare_PALADIN_database",
        "string_process": "\nprocess prepare_PALADIN_database {\n    conda \"$baseDir/conda_envs/paladin.yml\"\n    input:\n        path amr_ref\n    output:\n        path \"${amr_ref}.*\"\n    script:\n        \"\"\"\n        paladin index -r3 ${amr_ref} \n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        paladin index -r3 ${amr_ref} \n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "PALADIN"
        ],
        "tools_url": [
            "https://bio.tools/paladin"
        ],
        "tools_dico": [
            {
                "name": "PALADIN",
                "uri": "https://bio.tools/paladin",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Protein alignment for functional profiling whole metagenome shotgun data.",
                "homepage": "https://github.com/twestbrookunh/paladin"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/paladin.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_PALADIN_commands": {
        "name_process": "run_PALADIN_commands",
        "string_process": "\nprocess run_PALADIN_commands {\n    tag { \"PALDIN: ${label}\" }\n    publishDir \"results/nt_to_aa/paladin\", pattern: \"${label}.bam\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/paladin.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(reads_se), path(paladin_database)\n        path(amr_ref)\n    output:\n        path \"${label}.bam\" \n    script:\n        \"\"\"\n        paladin align -F 0.5 -t ${task.cpus} -a -C -V ${run_params} ${amr_ref} ${reads_se} | samtools view -Sb > ${label}.bam\n        \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        paladin align -F 0.5 -t ${task.cpus} -a -C -V ${run_params} ${amr_ref} ${reads_se} | samtools view -Sb > ${label}.bam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "PALADIN",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/paladin",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PALADIN",
                "uri": "https://bio.tools/paladin",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Protein alignment for functional profiling whole metagenome shotgun data.",
                "homepage": "https://github.com/twestbrookunh/paladin"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "reads_se",
            "paladin_database",
            "amr_ref"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"PALDIN: ${label}\" }",
            "publishDir \"results/nt_to_aa/paladin\", pattern: \"${label}.bam\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/paladin.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_MMSEQS_database": {
        "name_process": "prepare_MMSEQS_database",
        "string_process": "\nprocess prepare_MMSEQS_database {\n    conda \"$baseDir/conda_envs/mmseqs.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'mmseqs_db*', emit: db\n        path 'mmseqs_tmp', emit: index\n    script:\n        \"\"\"\n        mmseqs createdb ${amr_ref} mmseqs_db \n        mmseqs createindex mmseqs_db mmseqs_tmp\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        mmseqs createdb ${amr_ref} mmseqs_db \n        mmseqs createindex mmseqs_db mmseqs_tmp\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MMseqs"
        ],
        "tools_url": [
            "https://bio.tools/mmseqs"
        ],
        "tools_dico": [
            {
                "name": "MMseqs",
                "uri": "https://bio.tools/mmseqs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software suite for very fast protein sequence searches and clustering of huge protein sequence data sets.",
                "homepage": "https://github.com/soedinglab/MMseqs"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/mmseqs.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_MMSEQSBLASTX_commands": {
        "name_process": "run_MMSEQSBLASTX_commands",
        "string_process": "\nprocess run_MMSEQSBLASTX_commands {\n    tag { \"MMSEQSBLASTX: ${label}\" }\n    publishDir \"results/nt_to_aa/mmseqsblastx\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/mmseqs.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(reads_se), path(mmseqs_database), path(mmseqs_index)\n    output: \n        path \"${label}.out6\"\n    script:\n        \"\"\"\n        mmseqs easy-search --format-mode 2 --threads ${task.cpus} ${run_params} ${reads_se} mmseqs_db ${label}.out6 ${mmseqs_index}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        mmseqs easy-search --format-mode 2 --threads ${task.cpus} ${run_params} ${reads_se} mmseqs_db ${label}.out6 ${mmseqs_index}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MMseqs"
        ],
        "tools_url": [
            "https://bio.tools/mmseqs"
        ],
        "tools_dico": [
            {
                "name": "MMseqs",
                "uri": "https://bio.tools/mmseqs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software suite for very fast protein sequence searches and clustering of huge protein sequence data sets.",
                "homepage": "https://github.com/soedinglab/MMseqs"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "reads_se",
            "mmseqs_database",
            "mmseqs_index"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"MMSEQSBLASTX: ${label}\" }",
            "publishDir \"results/nt_to_aa/mmseqsblastx\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/mmseqs.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "build_single_ended": {
        "name_process": "build_single_ended",
        "string_process": "\nprocess build_single_ended {\n    input:\n        tuple val(label), path(reads)\n    output:\n        path \"metagenome_se.fastq\" \n    shell:\n        \"\"\"\n        cat ${reads[0]} ${reads[1]} > metagenome_se.fastq\n        \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "        \"\"\"\n        cat ${reads[0]} ${reads[1]} > metagenome_se.fastq\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "label",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "convert_to_fasta": {
        "name_process": "convert_to_fasta",
        "string_process": "\nprocess convert_to_fasta {\n    input: \n        tuple val(label), path(reads)\n    output:\n        path \"metagenome_reads.fasta\" \n    shell:\n        \"\"\"\n        cat ${reads[0]} ${reads[1]} | sed -n '1~4s/^@/>/p;2~4p' > metagenome_reads.fasta\n        \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "        \"\"\"\n        cat ${reads[0]} ${reads[1]} | sed -n '1~4s/^@/>/p;2~4p' > metagenome_reads.fasta\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "label",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "convert_to_amino_acid": {
        "name_process": "convert_to_amino_acid",
        "string_process": "\nprocess convert_to_amino_acid {\n    tag{ \"ORFM: amino acid query generation\" }\n    conda \"$baseDir/conda_envs/orfm.yml\"\n    input:\n        path(reads_se) \n    output:\n        path \"metagenome_read_orfs.faa\" \n                                       \n    shell:\n        \"\"\"\n        orfm -m 60 ${reads_se} > metagenome_read_orfs.faa\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        orfm -m 60 ${reads_se} > metagenome_read_orfs.faa\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MoRFMPM"
        ],
        "tools_url": [
            "https://bio.tools/MoRFMPM"
        ],
        "tools_dico": [
            {
                "name": "MoRFMPM",
                "uri": "https://bio.tools/MoRFMPM",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3904",
                                    "term": "Protein disorder prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0250",
                                    "term": "Protein property calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold recognition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3904",
                                    "term": ""
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0250",
                                    "term": "Protein property rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Computational prediction of MoRFs based on protein sequences and minimax probability machine.\n\nBACKGROUND:Molecular recognition features (MoRFs) are one important type of disordered segments that can promote specific protein-protein interactions. They are located within longer intrinsically disordered regions (IDRs), and undergo disorder-to-order transitions upon binding to their interaction partners. The functional importance of MoRFs and the limitation of experimental identification make it necessary to predict MoRFs accurately with computational methods. RESULTS:In this study, a new sequence-based method, named as MoRFMPM, is proposed for predicting MoRFs. MoRFMPM uses minimax probability machine (MPM) to predict MoRFs based on 16 features and 3 different windows, which neither relying on other predictors nor calculating the properties of the surrounding regions of MoRFs separately.",
                "homepage": "https://github.com/HHJHgithub/MoRFs_MPM/tree/master/github_code_MPM_MoRFs"
            }
        ],
        "inputs": [
            "reads_se"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag{ \"ORFM: amino acid query generation\" }",
            "conda \"$baseDir/conda_envs/orfm.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_BLASTN_database": {
        "name_process": "prepare_BLASTN_database",
        "string_process": "\nprocess prepare_BLASTN_database {\n    conda \"$baseDir/conda_envs/blast.yml\"\n    input:\n        path(amr_ref)\n    output:\n        path 'amr.blastn.db.*'\n    script:\n        \"\"\"\n        makeblastdb -dbtype nucl -in $amr_ref -out amr.blastn.db\n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        makeblastdb -dbtype nucl -in $amr_ref -out amr.blastn.db\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/blast.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_BLASTN_commands": {
        "name_process": "run_BLASTN_commands",
        "string_process": "\nprocess run_BLASTN_commands {\n    tag { \"BLASTN: ${label}\" }\n    publishDir \"results/nt/blastn\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/blast.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_fasta), path(blastn_database) \n    output:\n        path \"${label}.out6\" \n    script:\n        \"\"\"\n        blastn -max_target_seqs 1 -query $read_fasta $run_params -num_threads ${task.cpus} -db amr.blastn.db -outfmt 6 > ${label}.out6\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        blastn -max_target_seqs 1 -query $read_fasta $run_params -num_threads ${task.cpus} -db amr.blastn.db -outfmt 6 > ${label}.out6\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "G-BLASTN"
        ],
        "tools_url": [
            "https://bio.tools/g-blastn"
        ],
        "tools_dico": [
            {
                "name": "G-BLASTN",
                "uri": "https://bio.tools/g-blastn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2976",
                                "term": "Protein sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "GPU-accelerated nucleotide alignment tool based on the widely used NCBI-BLAST.",
                "homepage": "http://www.comp.hkbu.edu.hk/~chxw/software/G-BLASTN.html"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_fasta",
            "blastn_database"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"BLASTN: ${label}\" }",
            "publishDir \"results/nt/blastn\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/blast.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_BOWTIE2_index": {
        "name_process": "prepare_BOWTIE2_index",
        "string_process": "\nprocess prepare_BOWTIE2_index {\n    conda \"$baseDir/conda_envs/bowtie2.yml\"\n    input:\n        path(amr_ref)\n    output:\n        path 'amr.bowtie2.db*' \n    script:\n        \"\"\"\n        bowtie2-build --threads ${task.cpus} ${amr_ref} amr.bowtie2.db\n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        bowtie2-build --threads ${task.cpus} ${amr_ref} amr.bowtie2.db\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/bowtie2.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_BOWTIE2_commands": {
        "name_process": "run_BOWTIE2_commands",
        "string_process": "\nprocess run_BOWTIE2_commands {\n    tag { \"BOWTIE2: ${label}\" }\n    publishDir \"results/nt/bowtie2\", pattern: \"${label}.sam\", mode: 'copy'\n    conda \"$baseDir/conda_envs/bowtie2.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), val(read_label), path(reads), path(bowtie2_index)\n    output:\n        path(\"${label}.sam\")\n    script:\n        \"\"\"\n        bowtie2 -x amr.bowtie2.db $run_params -p ${task.cpus} -1 ${reads[0]} -2 ${reads[1]} > ${label}.sam\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        bowtie2 -x amr.bowtie2.db $run_params -p ${task.cpus} -1 ${reads[0]} -2 ${reads[1]} > ${label}.sam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_label",
            "reads",
            "bowtie2_index"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"BOWTIE2: ${label}\" }",
            "publishDir \"results/nt/bowtie2\", pattern: \"${label}.sam\", mode: 'copy'",
            "conda \"$baseDir/conda_envs/bowtie2.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_BWA_index": {
        "name_process": "prepare_BWA_index",
        "string_process": "\nprocess prepare_BWA_index {\n    conda \"$baseDir/conda_envs/bwa.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'amr.bwa.db*' \n    script:\n        \"\"\"\n        bwa index -p amr.bwa.db ${amr_ref} \n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        bwa index -p amr.bwa.db ${amr_ref} \n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/bwa.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_BWA_commands": {
        "name_process": "run_BWA_commands",
        "string_process": "\nprocess run_BWA_commands {\n    tag { \"BWA-MEM: ${label}\" }\n    publishDir \"results/nt/bowtie2\", pattern: \"${label}.sam\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/bwa.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), val(read_label), path(reads), path(bwa_index) \n    output:\n        path \"${label}.sam\" \n    script:\n        \"\"\"\n        bwa mem -t ${task.cpus} $run_params amr.bwa.db ${reads[0]} ${reads[1]} > ${label}.sam\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        bwa mem -t ${task.cpus} $run_params amr.bwa.db ${reads[0]} ${reads[1]} > ${label}.sam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_label",
            "reads",
            "bwa_index"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"BWA-MEM: ${label}\" }",
            "publishDir \"results/nt/bowtie2\", pattern: \"${label}.sam\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/bwa.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_GROOT_database": {
        "name_process": "prepare_GROOT_database",
        "string_process": "\nprocess prepare_GROOT_database {\n    tag { \"!GROOT_db: ${db_params}\" }\n    conda \"$baseDir/conda_envs/groot.yml\"\n    input:\n        path amr_ref \n        val db_params \n    output:\n        path 'groot_db_*' \n    script:\n        \"\"\"\n        mkdir clustered_amr_db;\n        vsearch --cluster_size $amr_ref --id 0.90 --msaout MSA.tmp;\n        awk '!a[\\$0]++ {of=\"clustered_amr_db/cluster-\" ++fc \".msa\"; print \\$0 >> of ; close(of)}' RS= ORS=\"\\\\n\\\\n\" MSA.tmp && rm MSA.tmp;\n        groot index ${db_params} -m clustered_amr_db -i groot_db_${db_params[-2,-1]} -w ${params.read_length};\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        mkdir clustered_amr_db;\n        vsearch --cluster_size $amr_ref --id 0.90 --msaout MSA.tmp;\n        awk '!a[\\$0]++ {of=\"clustered_amr_db/cluster-\" ++fc \".msa\"; print \\$0 >> of ; close(of)}' RS= ORS=\"\\\\n\\\\n\" MSA.tmp && rm MSA.tmp;\n        groot index ${db_params} -m clustered_amr_db -i groot_db_${db_params[-2,-1]} -w ${params.read_length};\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "VSEARCH",
            "MOFs",
            "GROOT"
        ],
        "tools_url": [
            "https://bio.tools/vsearch",
            "https://bio.tools/MOFs",
            "https://bio.tools/groot"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            },
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            },
            {
                "name": "GROOT",
                "uri": "https://bio.tools/groot",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3482",
                                    "term": "Antimicrobial resistance prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Indexed variation graphs for efficient and accurate resistome profiling.",
                "homepage": "https://github.com/will-rowe/groot"
            }
        ],
        "inputs": [
            "amr_ref",
            "db_params"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"!GROOT_db: ${db_params}\" }",
            "conda \"$baseDir/conda_envs/groot.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_GROOT_commands": {
        "name_process": "run_GROOT_commands",
        "string_process": "\nprocess run_GROOT_commands {\n    conda \"$baseDir/conda_envs/groot.yml\"\n    tag { \"GROOT: ${label}\" }\n    publishDir \"results/nt/groot\", pattern: \"${label}.bam\", mode: \"copy\"\n\n    input:\n        tuple val(tool), val(label), val(run_params), val(db_params), val(read_label), path(reads), path(groot_db)\n    output:\n        path \"${label}.bam\" \n    script:\n        \"\"\"\n        groot align ${run_params} -i groot_db_${db_params[-2,-1]} -p ${task.cpus} -f ${reads[0]} ${reads[1]} > ${label}.bam\n        \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        groot align ${run_params} -i groot_db_${db_params[-2,-1]} -p ${task.cpus} -f ${reads[0]} ${reads[1]} > ${label}.bam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GROOT"
        ],
        "tools_url": [
            "https://bio.tools/groot"
        ],
        "tools_dico": [
            {
                "name": "GROOT",
                "uri": "https://bio.tools/groot",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3482",
                                    "term": "Antimicrobial resistance prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Indexed variation graphs for efficient and accurate resistome profiling.",
                "homepage": "https://github.com/will-rowe/groot"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "db_params",
            "read_label",
            "reads",
            "groot_db"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/groot.yml\"",
            "tag { \"GROOT: ${label}\" }",
            "publishDir \"results/nt/groot\", pattern: \"${label}.bam\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_ARIBA_database": {
        "name_process": "prepare_ARIBA_database",
        "string_process": "\nprocess prepare_ARIBA_database {\n    conda \"$baseDir/conda_envs/ariba.yml\"\n    input:\n        val amr_db_version \n    output:\n        path 'ariba_amr_db' \n                                                                                        \n                                                                                                                                                                                                                       \n    script:\n        \"\"\"\n        ariba getref --version ${amr_db_version} card card_database\n\t\tariba prepareref -f card_database.fa -m card_database.tsv ariba_amr_db\n        \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        ariba getref --version ${amr_db_version} card card_database\n\t\tariba prepareref -f card_database.fa -m card_database.tsv ariba_amr_db\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "amr_db_version"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/ariba.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_ARIBA_commands": {
        "name_process": "run_ARIBA_commands",
        "string_process": "\nprocess run_ARIBA_commands {\n    conda \"$baseDir/conda_envs/ariba.yml\"\n    tag{ \"ARIBA: ${label}\" }\n\tpublishDir \"results/nt/ariba\", pattern: \"${label}_output\", mode: \"copy\"\n\tinput:\n        tuple val(tool), val(label), val(run_params), val(read_label), path(reads), path(ariba_db)\n\toutput:\t\n\t\tpath \"${label}_output\" \n\tscript:\n\t\t\"\"\"\n\t\tariba run --noclean ${run_params} ${ariba_db} ${reads[0]} ${reads[1]} ${label}_output \n\t\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\t\"\"\"\n\t\tariba run --noclean ${run_params} ${ariba_db} ${reads[0]} ${reads[1]} ${label}_output \n\t\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_label",
            "reads",
            "ariba_db"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/ariba.yml\"",
            "tag{ \"ARIBA: ${label}\" }",
            "publishDir \"results/nt/ariba\", pattern: \"${label}_output\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_KMA_database": {
        "name_process": "prepare_KMA_database",
        "string_process": "\nprocess prepare_KMA_database {\n    conda \"$baseDir/conda_envs/kma.yml\"\n    input:\n        path amr_ref \n        tuple val(label), val(db_params)\n    output:\n        path \"kma_database_${label}.*\"\n    script:\n        \"\"\"\n        kma index -i ${amr_ref} ${db_params} -o kma_database_${label}\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        kma index -i ${amr_ref} ${db_params} -o kma_database_${label}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "kmacs"
        ],
        "tools_url": [
            "https://bio.tools/kmacs"
        ],
        "tools_dico": [
            {
                "name": "kmacs",
                "uri": "https://bio.tools/kmacs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2533",
                            "term": "DNA mutation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "New approach to alignment-free sequence comparison. While most alignment-free methods rely on exact word matches, it uses a distance measure based on inexact substing matches.",
                "homepage": "http://kmacs.gobics.de/"
            }
        ],
        "inputs": [
            "amr_ref",
            "label",
            "db_params"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/kma.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_KMA_commands": {
        "name_process": "run_KMA_commands",
        "string_process": "\nprocess run_KMA_commands {\n    conda \"$baseDir/conda_envs/kma.yml\"\n    tag{ \"KMA: ${label}\" }\n    publishDir \"results/nt/kma\", pattern: \"${label}.frag.gz\", mode: \"copy\"\n    input:\n        tuple val(tool), val(label), val(run_params), val(db_params), val(read_label), path(reads), path(kma_db)\n    output:\n        path \"${label}.frag.gz\"\n    script:\n        \"\"\"\n        kma -ipe ${reads[0]} ${reads[1]} -t ${task.cpus} -1t1 -o ${label} -t_db kma_database_${label}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        kma -ipe ${reads[0]} ${reads[1]} -t ${task.cpus} -1t1 -o ${label} -t_db kma_database_${label}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "kmacs"
        ],
        "tools_url": [
            "https://bio.tools/kmacs"
        ],
        "tools_dico": [
            {
                "name": "kmacs",
                "uri": "https://bio.tools/kmacs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2533",
                            "term": "DNA mutation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "New approach to alignment-free sequence comparison. While most alignment-free methods rely on exact word matches, it uses a distance measure based on inexact substing matches.",
                "homepage": "http://kmacs.gobics.de/"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "db_params",
            "read_label",
            "reads",
            "kma_db"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/kma.yml\"",
            "tag{ \"KMA: ${label}\" }",
            "publishDir \"results/nt/kma\", pattern: \"${label}.frag.gz\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_HMMSEARCHNT_database": {
        "name_process": "prepare_HMMSEARCHNT_database",
        "string_process": "\nprocess prepare_HMMSEARCHNT_database {\n    conda \"$baseDir/conda_envs/hmm.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'card90.hmm'\n    script:\n        \"\"\"\n        vsearch --cluster_size ${amr_ref} --id 0.90 --msaout MSA.tmp\n        awk '!a[\\$0]++ {of=\"./cluster-\" ++fc \".msa\"; print \\$0 >> of ; close(of)}' RS= ORS=\"\\\\n\\\\n\" MSA.tmp && rm MSA.tmp;\n        for msa in *.msa;\n            do \n                sed 's/+/-/g' \\${msa} > \\${msa}_clean\n                hmmbuild --fragthresh 1 \\${msa}.hmm \\${msa}_clean\n            done\n        cat *.hmm > card90.hmm\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        vsearch --cluster_size ${amr_ref} --id 0.90 --msaout MSA.tmp\n        awk '!a[\\$0]++ {of=\"./cluster-\" ++fc \".msa\"; print \\$0 >> of ; close(of)}' RS= ORS=\"\\\\n\\\\n\" MSA.tmp && rm MSA.tmp;\n        for msa in *.msa;\n            do \n                sed 's/+/-/g' \\${msa} > \\${msa}_clean\n                hmmbuild --fragthresh 1 \\${msa}.hmm \\${msa}_clean\n            done\n        cat *.hmm > card90.hmm\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "VSEARCH",
            "MOFs"
        ],
        "tools_url": [
            "https://bio.tools/vsearch",
            "https://bio.tools/MOFs"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            },
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/hmm.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_HMMSEARCHNT_commands": {
        "name_process": "run_HMMSEARCHNT_commands",
        "string_process": "\nprocess run_HMMSEARCHNT_commands {\n    conda \"$baseDir/conda_envs/hmm.yml\"\n    tag{ \"HMM: ${label}\" }\n    publishDir \"results/nt/hmm\", pattern: \"${label}.tbl\", mode: \"copy\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_fasta), path(hmm_db) \n    output:\n        path \"${label}.tbl\"\n    script: \n        \"\"\"\n        hmmsearch --cpu ${task.cpus} --noali --notextw --tblout ${label}.tbl ${hmm_db} ${read_fasta}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        hmmsearch --cpu ${task.cpus} --noali --notextw --tblout ${label}.tbl ${hmm_db} ${read_fasta}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_fasta",
            "hmm_db"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/hmm.yml\"",
            "tag{ \"HMM: ${label}\" }",
            "publishDir \"results/nt/hmm\", pattern: \"${label}.tbl\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "run_BLASTP_commands": {
        "name_process": "run_BLASTP_commands",
        "string_process": "\nprocess run_BLASTP_commands {\n    tag { \"BLASTP: ${label}\" }\n    publishDir \"results/aa/blastp\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/blast.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_aa_fasta), path(blast_database) \n    output:\n        path \"${label}.out6\"\n    script:\n        \"\"\"\n        blastp -max_target_seqs 1  -query $read_aa_fasta $run_params -num_threads ${task.cpus} -db amr.prot.db -outfmt 6 > ${label}.out6\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        blastp -max_target_seqs 1  -query $read_aa_fasta $run_params -num_threads ${task.cpus} -db amr.prot.db -outfmt 6 > ${label}.out6\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BLASTP-ACC"
        ],
        "tools_url": [
            "https://bio.tools/BLASTP-ACC"
        ],
        "tools_dico": [
            {
                "name": "BLASTP-ACC",
                "uri": "https://bio.tools/BLASTP-ACC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3297",
                            "term": "Biotechnology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Sequence alignment (local)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parallel Architecture and Hardware Accelerator Design for BLAST-based Protein Sequence Alignment.\n\nIn this study, we design a hardware accelerator for a widely used sequence alignment algorithm, the basic local alignment search tool for proteins (BLASTP). The architecture of the proposed accelerator consists of five stages: a new systolic-array-based one-hit finding stage, a novel RAM-REG-based two-hit finding stage, a refined ungapped extension stage, a faster gapped extension stage, and a highly efficient parallel sorter. The system is implemented on an Altera Stratix V FPGA with a processing speed of more than 500 giga cell updates per second (GCUPS). It can receive a query sequence, compare it with the sequences in the database, and generate a list sorted in descending order of the similarity scores between the query sequence and the subject sequences.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'accelerator', 'Altera', 'Stratix', 'RAM-REG-based'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31581096"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_aa_fasta",
            "blast_database"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"BLASTP: ${label}\" }",
            "publishDir \"results/aa/blastp\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/blast.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_DIAMONDBLASTP_commands": {
        "name_process": "run_DIAMONDBLASTP_commands",
        "string_process": "\nprocess run_DIAMONDBLASTP_commands {\n    tag { \"DIAMONDBLASTP: ${label}\" }\n    publishDir \"results/aa/diamond-blastp\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/diamond.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_aa_fasta), path(diamond_database) \n    output:\n        path \"${label}.out6\" \n    script:\n        \"\"\"\n        diamond blastp -p ${task.cpus} --max-target-seqs 1 --db ${diamond_database} --outfmt 6 --out ${label}.out6 ${run_params} -q ${read_aa_fasta}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        diamond blastp -p ${task.cpus} --max-target-seqs 1 --db ${diamond_database} --outfmt 6 --out ${label}.out6 ${run_params} -q ${read_aa_fasta}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_aa_fasta",
            "diamond_database"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"DIAMONDBLASTP: ${label}\" }",
            "publishDir \"results/aa/diamond-blastp\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/diamond.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_MMSEQSBLASTP_commands": {
        "name_process": "run_MMSEQSBLASTP_commands",
        "string_process": "\nprocess run_MMSEQSBLASTP_commands {\n    tag { \"MMSEQSBLASTP: ${label}\" }\n    publishDir \"results/aa/mmseqsblastp\", pattern: \"${label}.out6\", mode: \"copy\"\n    conda \"$baseDir/conda_envs/mmseqs.yml\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(reads_aa_fasta), path(mmseqs_database), path(mmseqs_index)\n    output: \n        path \"${label}.out6\"\n    script:\n        \"\"\"\n        mmseqs easy-search --format-mode 2 --threads ${task.cpus} ${run_params} ${reads_aa_fasta} mmseqs_db ${label}.out6 ${mmseqs_index}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        mmseqs easy-search --format-mode 2 --threads ${task.cpus} ${run_params} ${reads_aa_fasta} mmseqs_db ${label}.out6 ${mmseqs_index}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MMseqs"
        ],
        "tools_url": [
            "https://bio.tools/mmseqs"
        ],
        "tools_dico": [
            {
                "name": "MMseqs",
                "uri": "https://bio.tools/mmseqs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software suite for very fast protein sequence searches and clustering of huge protein sequence data sets.",
                "homepage": "https://github.com/soedinglab/MMseqs"
            }
        ],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "reads_aa_fasta",
            "mmseqs_database",
            "mmseqs_index"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "tag { \"MMSEQSBLASTP: ${label}\" }",
            "publishDir \"results/aa/mmseqsblastp\", pattern: \"${label}.out6\", mode: \"copy\"",
            "conda \"$baseDir/conda_envs/mmseqs.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_HMMSEARCHAA_database": {
        "name_process": "prepare_HMMSEARCHAA_database",
        "string_process": "\nprocess prepare_HMMSEARCHAA_database {\n    conda \"$baseDir/conda_envs/hmm.yml\"\n    input:\n        path amr_ref \n    output:\n        path 'card90.hmm'\n    script:\n        \"\"\"\n        mmseqs easy-cluster --min-seq-id 0.7 --remove-tmp-files 1 --threads ${task.cpus} ${amr_ref} clusters tmp\n        mkdir -p cluster_dir\n        write_mmseqs_clusters.py -c clusters_all_seqs.fasta -o cluster_dir\n        for seq in cluster_dir/*.faa;\n            do \n                mafft --auto \\$seq > \\${seq}.msa\n                hmmbuild --fragthresh 1.0 \\${seq}.hmm \\${seq}.msa \n        done\n        cat cluster_dir/*.hmm > card90.hmm\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        mmseqs easy-cluster --min-seq-id 0.7 --remove-tmp-files 1 --threads ${task.cpus} ${amr_ref} clusters tmp\n        mkdir -p cluster_dir\n        write_mmseqs_clusters.py -c clusters_all_seqs.fasta -o cluster_dir\n        for seq in cluster_dir/*.faa;\n            do \n                mafft --auto \\$seq > \\${seq}.msa\n                hmmbuild --fragthresh 1.0 \\${seq}.hmm \\${seq}.msa \n        done\n        cat cluster_dir/*.hmm > card90.hmm\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "MMseqs",
            "MAFFT"
        ],
        "tools_url": [
            "https://bio.tools/mmseqs",
            "https://bio.tools/MAFFT"
        ],
        "tools_dico": [
            {
                "name": "MMseqs",
                "uri": "https://bio.tools/mmseqs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software suite for very fast protein sequence searches and clustering of huge protein sequence data sets.",
                "homepage": "https://github.com/soedinglab/MMseqs"
            },
            {
                "name": "MAFFT",
                "uri": "https://bio.tools/MAFFT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ]
                    }
                ],
                "description": "MAFFT (Multiple Alignment using Fast Fourier Transform) is a high speed multiple sequence alignment program.",
                "homepage": "http://mafft.cbrc.jp/alignment/server/index.html"
            }
        ],
        "inputs": [
            "amr_ref"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/hmm.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "run_HMMSEARCHAA_commands": {
        "name_process": "run_HMMSEARCHAA_commands",
        "string_process": "\nprocess run_HMMSEARCHAA_commands {\n    conda \"$baseDir/conda_envs/hmm.yml\"\n    tag{ \"HMM: ${label}\" }\n    publishDir \"results/aa/hmm\", pattern: \"${label}.tbl\", mode: \"copy\"\n    input:\n        tuple val(tool), val(label), val(run_params), path(read_aa_fasta), path(hmm_db) \n    output:\n        path \"${label}.tbl\"\n    script: \n        \"\"\"\n        hmmsearch --cpu ${task.cpus} --noali --notextw --tblout ${label}.tbl ${hmm_db} ${read_aa_fasta}\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        hmmsearch --cpu ${task.cpus} --noali --notextw --tblout ${label}.tbl ${hmm_db} ${read_aa_fasta}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tool",
            "label",
            "run_params",
            "read_aa_fasta",
            "hmm_db"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "fmaguire__filter_flow",
        "directive": [
            "conda \"$baseDir/conda_envs/hmm.yml\"",
            "tag{ \"HMM: ${label}\" }",
            "publishDir \"results/aa/hmm\", pattern: \"${label}.tbl\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}