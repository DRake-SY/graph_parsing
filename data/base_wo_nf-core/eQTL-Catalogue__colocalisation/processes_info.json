{
    "lift_to_GRCh38": {
        "name_process": "lift_to_GRCh38",
        "string_process": "\nprocess lift_to_GRCh38{\n    tag \"${gwas_id}\"\n                                                                                   \n    publishDir \"${params.outdir}/GRCh38_conv/\", mode: 'copy'\n    container 'quay.io/eqtlcatalogue/genimpute:v20.06.1'\n\n    input:\n    tuple val(gwas_id), file(gwas_vcf) from gwas_vcf_ch\n    file gwas_lift_chain from gwas_lift_chain_ch.collect()\n    file hg38_ref_genome from hg38_ref_genome_ch.collect()\n\n    output:\n    tuple val(gwas_id), file(\"${gwas_vcf.simpleName}.GRCh38.vcf\") into tabix_index_ch\n\n    script:\n    \"\"\"\n    CrossMap.py vcf $gwas_lift_chain $gwas_vcf $hg38_ref_genome ${gwas_vcf.simpleName}.GRCh38.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    CrossMap.py vcf $gwas_lift_chain $gwas_vcf $hg38_ref_genome ${gwas_vcf.simpleName}.GRCh38.vcf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gwas_vcf_ch",
            "gwas_lift_chain_ch",
            "hg38_ref_genome_ch"
        ],
        "nb_inputs": 3,
        "outputs": [
            "tabix_index_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "eQTL-Catalogue__colocalisation",
        "directive": [
            "tag \"${gwas_id}\"",
            "publishDir \"${params.outdir}/GRCh38_conv/\", mode: 'copy'",
            "container 'quay.io/eqtlcatalogue/genimpute:v20.06.1'"
        ],
        "when": "",
        "stub": ""
    },
    "tabix_index_gwas": {
        "name_process": "tabix_index_gwas",
        "string_process": "\nprocess tabix_index_gwas{\n    tag \"${gwas_id}\"\n                                                                                   \n    publishDir \"${params.outdir}/GRCh38_conv/\", mode: 'copy'\n    container = 'quay.io/eqtlcatalogue/qtlmap:v20.05.1'\n\n    input:\n    tuple val(gwas_id), file(vcf_GRCh38) from tabix_index_ch\n\n    output:\n    tuple val(gwas_id), file(\"${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz\"), file(\"${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz.tbi\") into gwas_summstats_GRCh38\n\n    script:\n    \"\"\"\n    bcftools sort -o ${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz -O z $vcf_GRCh38\n    tabix -p vcf ${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    bcftools sort -o ${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz -O z $vcf_GRCh38\n    tabix -p vcf ${vcf_GRCh38.simpleName}.GRCh38.sorted.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tabix_index_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "gwas_summstats_GRCh38"
        ],
        "nb_outputs": 1,
        "name_workflow": "eQTL-Catalogue__colocalisation",
        "directive": [
            "tag \"${gwas_id}\"",
            "publishDir \"${params.outdir}/GRCh38_conv/\", mode: 'copy'",
            "container = 'quay.io/eqtlcatalogue/qtlmap:v20.05.1'"
        ],
        "when": "",
        "stub": ""
    },
    "extract_lead_var_pairs": {
        "name_process": "extract_lead_var_pairs",
        "string_process": " process extract_lead_var_pairs{\n        tag \"${qtl_subset}\"\n        publishDir \"${params.outdir}/leadpairs/\", mode: 'copy', pattern: \"*.leadpairs.tsv\"\n        container = 'quay.io/eqtlcatalogue/colocalisation:v21.01.1'\n\n        input:\n        tuple val(qtl_subset), file(eqtl_ss), file(eqtl_ss_index), file(perm_res) from extract_lead_var_pairs_ch\n\n        output:\n        tuple val(qtl_subset), file(eqtl_ss), file(eqtl_ss_index), file(\"${qtl_subset}.leadpairs.tsv\") into eqtl_summ_stats_ch\n\n        script:\n        \"\"\"\n        #!/usr/bin/env Rscript\n        library(dplyr)\n\n        permutation_df <-readr::read_tsv('$perm_res', trim_ws = TRUE)\n    \n        permutation_df <- permutation_df %>% \n            mutate(FDR = p.adjust(p = p_beta, method = 'fdr')) %>% \n            filter(FDR < 0.01)\n        \n        readr::write_tsv(permutation_df %>% select(molecular_trait_id, variant, chromosome, position), '${qtl_subset}.leadpairs.tsv')\n        \"\"\"\n    }",
        "nb_lignes_process": 23,
        "string_script": "        \"\"\"\n        #!/usr/bin/env Rscript\n        library(dplyr)\n\n        permutation_df <-readr::read_tsv('$perm_res', trim_ws = TRUE)\n    \n        permutation_df <- permutation_df %>% \n            mutate(FDR = p.adjust(p = p_beta, method = 'fdr')) %>% \n            filter(FDR < 0.01)\n        \n        readr::write_tsv(permutation_df %>% select(molecular_trait_id, variant, chromosome, position), '${qtl_subset}.leadpairs.tsv')\n        \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "extract_lead_var_pairs_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "eqtl_summ_stats_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "eQTL-Catalogue__colocalisation",
        "directive": [
            "tag \"${qtl_subset}\"",
            "publishDir \"${params.outdir}/leadpairs/\", mode: 'copy', pattern: \"*.leadpairs.tsv\"",
            "container = 'quay.io/eqtlcatalogue/colocalisation:v21.01.1'"
        ],
        "when": "",
        "stub": ""
    },
    "run_coloc": {
        "name_process": "run_coloc",
        "string_process": "\nprocess run_coloc{\n    tag \"${gwas_id}_${qtl_subset}\"\n                                                                       \n    container 'quay.io/eqtlcatalogue/colocalisation:v21.01.1'\n\n    input:\n    each batch_index from 1..params.n_batches\n    tuple val(qtl_subset), file(eqtl_ss), file(eqtl_ss_index), file(lead_pairs), val(gwas_id), file(gwas_sumstats), file(gwas_sumstats_index) from eqtl_summ_stats_ch.combine(gwas_summstats_GRCh38)\n                                                          \n\n    output:\n    tuple val(gwas_id), val(\"${gwas_id}_${qtl_subset}\"), file(\"${gwas_id}_${qtl_subset}_${batch_index}_${params.n_batches}.tsv\") into batch_files_merge_coloc_results\n\n    script:\n    \"\"\"\n    Rscript $baseDir/bin/run_coloc_batch.R \\\\\n        --gwas_sumstats $gwas_sumstats \\\\\n        --gwas_id $gwas_id \\\\\n        --qtl_sumstats $eqtl_ss \\\\\n        --qtl_subset $qtl_subset \\\\\n        --lead_pairs $lead_pairs \\\\\n        --window_coloc ${params.cis_window} \\\\\n        --chunk '$batch_index ${params.n_batches}' \\\\\n        --output_prefix ${gwas_id}_${qtl_subset}_${batch_index}_${params.n_batches}.tsv \\\\\n        --outdir .\n        \n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    Rscript $baseDir/bin/run_coloc_batch.R \\\\\n        --gwas_sumstats $gwas_sumstats \\\\\n        --gwas_id $gwas_id \\\\\n        --qtl_sumstats $eqtl_ss \\\\\n        --qtl_subset $qtl_subset \\\\\n        --lead_pairs $lead_pairs \\\\\n        --window_coloc ${params.cis_window} \\\\\n        --chunk '$batch_index ${params.n_batches}' \\\\\n        --output_prefix ${gwas_id}_${qtl_subset}_${batch_index}_${params.n_batches}.tsv \\\\\n        --outdir .\n        \n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "1",
            "eqtl_summ_stats_ch",
            "gwas_summstats_GRCh38"
        ],
        "nb_inputs": 3,
        "outputs": [
            "batch_files_merge_coloc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "eQTL-Catalogue__colocalisation",
        "directive": [
            "tag \"${gwas_id}_${qtl_subset}\"",
            "container 'quay.io/eqtlcatalogue/colocalisation:v21.01.1'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_coloc_results": {
        "name_process": "merge_coloc_results",
        "string_process": "\nprocess merge_coloc_results{\n    publishDir \"${params.outdir}/coloc_results_merged/${gwas_id}\", mode: 'copy'\n    container 'quay.io/eqtlcatalogue/qtlmap:v20.05.1'\n\n    input:\n    tuple gwas_id, gwas_qtl_subset, file(gwas_qtl_subset_coloc_results_batch_files) from batch_files_merge_coloc_results.groupTuple(by: [1, 0], size: params.n_batches, sort: true)\n\n    output:\n    tuple gwas_qtl_subset, file(\"${gwas_qtl_subset}.txt.gz\")\n\n    script:\n    \"\"\"\n    awk 'NR == 1 || FNR > 1{print}' ${gwas_qtl_subset_coloc_results_batch_files.join(' ')} | bgzip -c > ${gwas_qtl_subset}.txt.gz\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    awk 'NR == 1 || FNR > 1{print}' ${gwas_qtl_subset_coloc_results_batch_files.join(' ')} | bgzip -c > ${gwas_qtl_subset}.txt.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "batch_files_merge_coloc_results"
        ],
        "nb_inputs": 1,
        "outputs": [
            "gwas_qtl_subset"
        ],
        "nb_outputs": 1,
        "name_workflow": "eQTL-Catalogue__colocalisation",
        "directive": [
            "publishDir \"${params.outdir}/coloc_results_merged/${gwas_id}\", mode: 'copy'",
            "container 'quay.io/eqtlcatalogue/qtlmap:v20.05.1'"
        ],
        "when": "",
        "stub": ""
    }
}