{
    "trickySoftware": {
        "name_process": "trickySoftware",
        "string_process": "\nprocess trickySoftware {\n  label 'trickySoftware'\n  label 'minMem'\n  label 'minCpu'\n  publishDir \"${params.outDir}/trickySoftware\", mode: 'copy'\n\n  output:\n  path \"trickySoftwareResults.txt\"\n\n  script:\n  \"\"\"\n  python --version > trickySoftwareResults.txt 2>&1\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  python --version > trickySoftwareResults.txt 2>&1\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'trickySoftware'",
            "label 'minMem'",
            "label 'minCpu'",
            "publishDir \"${params.outDir}/trickySoftware\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc{\n  label 'fastqc'\n  label 'lowMem'\n  label 'lowCpu'\n\n  tag \"${prefix}\"\n  publishDir \"${params.outDir}/fastqc\", mode: 'copy'\n\n  input:\n  tuple val(prefix), path(reads) \n\n  output:\n  path \"*_fastqc.{zip,html}\", emit: mqc \n  path \"v_fastqc.txt\"       , emit: version\n\n  script:\n  \"\"\"\n  fastqc -q $reads\n  fastqc --version > v_fastqc.txt\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  \"\"\"\n  fastqc -q $reads\n  fastqc --version > v_fastqc.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "prefix",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'fastqc'",
            "label 'lowMem'",
            "label 'lowCpu'",
            "tag \"${prefix}\"",
            "publishDir \"${params.outDir}/fastqc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "outputDocumentation": {
        "name_process": "outputDocumentation",
        "string_process": "\nprocess outputDocumentation {\n    label 'python'\n    label 'minCpu'\n    label 'minMem'\n    publishDir \"${params.summaryDir}/\", mode: 'copy'\n\n    input:\n    path outputDocs\n\n    output:\n    path \"resultsDescription.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $outputDocs -o resultsDescription.html\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    markdown_to_html.py $outputDocs -o resultsDescription.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "outputDocs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'python'",
            "label 'minCpu'",
            "label 'minMem'",
            "publishDir \"${params.summaryDir}/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "execBinScript": {
        "name_process": "execBinScript",
        "string_process": "\nprocess execBinScript {\n  label 'onlyLinux'\n  label 'minMem'\n  label 'minCpu'\n  publishDir \"${params.outDir}/execBinScript\", mode: 'copy'\n\n  output:\n  path \"execBinScriptResults_*\"\n\n  script:\n  \"\"\"\n  apMyscript.sh > execBinScriptResults_1.txt\n  someScript.sh > execBinScriptResults_2.txt\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  apMyscript.sh > execBinScriptResults_1.txt\n  someScript.sh > execBinScriptResults_2.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'onlyLinux'",
            "label 'minMem'",
            "label 'minCpu'",
            "publishDir \"${params.outDir}/execBinScript\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "getSoftwareVersions": {
        "name_process": "getSoftwareVersions",
        "string_process": "\nprocess getSoftwareVersions{\n  label 'python'\n  label 'minCpu'\n  label 'minMem'\n  publishDir path: \"${params.outDir}/softwareVersions\", mode: \"copy\"\n\n  when:\n  !params.skipSoftVersions\n\n  input:\n  path 'v_fastqc.txt' \n\n  output:\n  path 'softwareVersions_mqc.yaml'\n  \n  script:\n  \"\"\"\n  echo $workflow.manifest.version &> v_pipeline.txt\n  echo $workflow.nextflow.version &> v_nextflow.txt\n  scrape_software_versions.py &> softwareVersions_mqc.yaml\n  \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  echo $workflow.manifest.version &> v_pipeline.txt\n  echo $workflow.nextflow.version &> v_nextflow.txt\n  scrape_software_versions.py &> softwareVersions_mqc.yaml\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'python'",
            "label 'minCpu'",
            "label 'minMem'",
            "publishDir path: \"${params.outDir}/softwareVersions\", mode: \"copy\""
        ],
        "when": "!params.skipSoftVersions",
        "stub": ""
    },
    "checkDesign": {
        "name_process": "checkDesign",
        "string_process": "\nprocess checkDesign{\n  label 'python'\n  label 'minCpu'\n  label 'minMem'\n  publishDir \"${params.summaryDir}/\", mode: 'copy'\n\n  when:\n  params.design\n\n  input:\n  path design\n  path samplePlan\n\n  script:\n  optSE = params.singleEnd ? \"--singleEnd\" : \"\"\n  \"\"\"\n  apCheckDesign.py -d $design -s $samplePlan ${optSE}\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  optSE = params.singleEnd ? \"--singleEnd\" : \"\"\n  \"\"\"\n  apCheckDesign.py -d $design -s $samplePlan ${optSE}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "design",
            "samplePlan"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'python'",
            "label 'minCpu'",
            "label 'minMem'",
            "publishDir \"${params.summaryDir}/\", mode: 'copy'"
        ],
        "when": "params.design",
        "stub": ""
    },
    "helloWorld": {
        "name_process": "helloWorld",
        "string_process": "\nprocess helloWorld {\n  label 'helloWorld'\n  label 'minMem'\n  label 'minCpu'\n  publishDir \"${params.outDir}/helloWorld\", mode: 'copy'\n\n  output:\n  path \"helloWorld.txt\"\n\n  script:\n  \"\"\"\n  helloWorld > helloWorld.txt\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  helloWorld > helloWorld.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'helloWorld'",
            "label 'minMem'",
            "label 'minCpu'",
            "publishDir \"${params.outDir}/helloWorld\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "workflowSummaryMqc": {
        "name_process": "workflowSummaryMqc",
        "string_process": "\nprocess workflowSummaryMqc {\n  label 'onlyLinux'\n  executor = 'local'\n  when:\n  !params.skipMultiQC\n\n  input: \n  val(summary)\n\n  output:\n  path 'workflowSummary_mqc.yaml' \n\n  exec:\n  def yaml_file = task.workDir.resolve('workflowSummary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: \"${workflow.manifest.homePage}\"\n  plot_type: 'html'\n  data: |\n        <dl class=\\\"dl-horizontal\\\">\n  ${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n        </dl>\n  \"\"\".stripIndent()\n}",
        "nb_lignes_process": 25,
        "string_script": "  def yaml_file = task.workDir.resolve('workflowSummary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: \"${workflow.manifest.homePage}\"\n  plot_type: 'html'\n  data: |\n        <dl class=\\\"dl-horizontal\\\">\n  ${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n        </dl>\n  \"\"\".stripIndent()",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GDT",
            "SAMPL",
            "NDD",
            "DLP+"
        ],
        "tools_url": [
            "https://bio.tools/gdt",
            "https://bio.tools/SAMPL",
            "https://bio.tools/NDD",
            "https://bio.tools/DLP"
        ],
        "tools_dico": [
            {
                "name": "GDT",
                "uri": "https://bio.tools/gdt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software package for genome-wide association analysis.",
                "homepage": "http://people.virginia.edu/~wc9c/GDT/"
            },
            {
                "name": "SAMPL",
                "uri": "https://bio.tools/SAMPL",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Medicinal chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Sample collections"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Drug design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Specimen collections"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0455",
                                    "term": "Nucleic acid thermodynamic property calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3642",
                                    "term": "Dimethyl"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> MEDIUM CONFIDENCE! | reference data for the sixth statistical assessment of modeling of proteins and ligands (SAMPL6) | From Wikipedia, the free encyclopedia | Jump to navigation Jump to search | SAMPL (Statistical Assessment of the Modeling of Proteins and Ligands) is a set of community-wide blind challenges aimed to advance computational techniques as standard predictive tools in rational drug design.[1][2][3][4][5] A broad range of biologically relevant systems with different sizes and levels of complexities including proteins, host guest complexes, and drug-like small molecules have been selected to test the latest modeling methods and force fields in SAMPL",
                "homepage": "https://en.wikipedia.org/wiki/SAMPL_Challenge"
            },
            {
                "name": "NDD",
                "uri": "https://bio.tools/NDD",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Drug-Drug Interaction Predicting by Neural Network Using Integrated Similarity | Link of paper: https://www.nature.com/articles/s41598-019-50121-3 A Novel Method For Predicting Drug-Drug Interaction By Neural Network Due to the great importance of this issue in the economy, industry, and health, proposing appropriate computational methods for predicting unknown DDI with high precision is challenging. We propose a novel machine learning method for predicting unknown DDIs called \"NDD\", using a two-layer fully connected neural network. NDD uses various characteristics of drugs to have comprehensive information. Multiple drug similarities are calculated. NDD integrat various drug similarities with a non-linear similarity fusion method called \"SNF\" to achieve high-level features. Dependency: python version 3.5.3 deep learning lib keras: https://github.com/fchollet/keras/ machine learning lib scikit-learn: https://github.com/scikit-learn/scikit-learn Contact: nasim.rohani74@gmail.com",
                "homepage": "https://github.com/nrohani/NDD"
            },
            {
                "name": "DLP+",
                "uri": "https://bio.tools/DLP",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deisotoping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deconvolution"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Clonal Decomposition and DNA Replication States Defined by Scaled Single-Cell Genome Sequencing.\n\nCollection of Standard Operating Procedures (SOPs) for DLP+",
                "homepage": "https://github.com/shahcompbio/dlpplus_protocols"
            }
        ],
        "inputs": [
            "summary"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'onlyLinux'",
            "executor = 'local'"
        ],
        "when": "!params.skipMultiQC",
        "stub": ""
    },
    "alpine": {
        "name_process": "alpine",
        "string_process": "\nprocess alpine {\n  label 'alpine'\n  label 'minMem'\n  label 'minCpu'\n  publishDir \"${params.outDir}/alpine\", mode: 'copy'\n\n  input:\n  val x\n\n  output:\n  path \"alpine_*\"\n\n  script:\n  \"\"\"\n  source ${projectDir}/env/alpine.env\n  echo \"Hello from alpine: \\$(date). This is very high here: \\${PEAK_HEIGHT}!\" > alpine_${x}.txt\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  source ${projectDir}/env/alpine.env\n  echo \"Hello from alpine: \\$(date). This is very high here: \\${PEAK_HEIGHT}!\" > alpine_${x}.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "x"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'alpine'",
            "label 'minMem'",
            "label 'minCpu'",
            "publishDir \"${params.outDir}/alpine\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "standardUnixCommand": {
        "name_process": "standardUnixCommand",
        "string_process": "\nprocess standardUnixCommand {\n  label 'onlyLinux'\n  label 'minMem'\n  label 'minCpu'\n  publishDir \"${params.outDir}/standardUnixCommand\", mode: 'copy'\n\n  input:\n  path hello\n\n  output:\n  path \"bonjourMonde.txt\"\n\n  script:\n  \"\"\"\n  sed -e 's/Hello World/Bonjour Monde/g' ${hello} > bonjourMonde.txt\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  sed -e 's/Hello World/Bonjour Monde/g' ${hello} > bonjourMonde.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hello"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'onlyLinux'",
            "label 'minMem'",
            "label 'minCpu'",
            "publishDir \"${params.outDir}/standardUnixCommand\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n  label 'multiqc'\n  label 'minCpu'\n  label 'minMem'\n  publishDir \"${params.outDir}/MultiQC\", mode: 'copy'\n\n  when:\n  !params.skipMultiQC\n\n  input:\n  val customRunName\n  path splan \n  path multiqcConfig \n  path ('fastqc/*') \n  path metadata \n  path ('software_versions/*') \n  path ('workflow_summary/*') \n\n  output:\n  path splan\n  path \"*report.html\", emit: multiqc_report\n  path \"*_data\"\n\n  script:\n  rtitle = customRunName ? \"--title \\\"$customRunName\\\"\" : ''\n  rfilename = customRunName ? \"--filename \" + customRunName + \"_report\" : \"--filename report\"\n  metadataOpts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n  designOpts= params.design ? \"-d ${params.design}\" : \"\"\n  modulesList = \"-m custom_content -m fastqc\"\n  \"\"\"\n  apMqcHeader.py --splan ${splan} --name \"${workflow.manifest.name}\" --version \"${workflow.manifest.version}\" ${metadataOpts} > multiqc-config-header.yaml\n  multiqc . -f $rtitle $rfilename -c multiqc-config-header.yaml -c $multiqcConfig $modulesList\n  \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "  rtitle = customRunName ? \"--title \\\"$customRunName\\\"\" : ''\n  rfilename = customRunName ? \"--filename \" + customRunName + \"_report\" : \"--filename report\"\n  metadataOpts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n  designOpts= params.design ? \"-d ${params.design}\" : \"\"\n  modulesList = \"-m custom_content -m fastqc\"\n  \"\"\"\n  apMqcHeader.py --splan ${splan} --name \"${workflow.manifest.name}\" --version \"${workflow.manifest.version}\" ${metadataOpts} > multiqc-config-header.yaml\n  multiqc . -f $rtitle $rfilename -c multiqc-config-header.yaml -c $multiqcConfig $modulesList\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "customRunName",
            "splan",
            "multiqcConfig",
            "metadata"
        ],
        "nb_inputs": 4,
        "outputs": [
            "splan"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__geniac-demo-dsl2",
        "directive": [
            "label 'multiqc'",
            "label 'minCpu'",
            "label 'minMem'",
            "publishDir \"${params.outDir}/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skipMultiQC",
        "stub": ""
    }
}