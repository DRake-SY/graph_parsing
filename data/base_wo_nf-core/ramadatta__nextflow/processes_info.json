{
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc{\ninput:\nfile reads from sequences\n\nscript:\n\t\"\"\"\n\tmkdir fastqc_logs\n\tfastqc -o fastqc_logs -f fastq -q ${reads}\n\t\"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\t\"\"\"\n\tmkdir fastqc_logs\n\tfastqc -o fastqc_logs -f fastq -q ${reads}\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sequences"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ramadatta__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "bbduk": {
        "name_process": "bbduk",
        "string_process": "\nprocess bbduk {\n        tag {pair_id}\n        publishDir 'bbduk'\n\n        input:\n        set pair_id, file(reads) from read_pairs\n\n        output:\n        set pair_id, file(\"*.bbmap_adaptertrimmed.fastq\") into fastqc_input, spades_input\n        file \"${pair_id}.stats.txt\"\n\n\n        script:\n        \"\"\"\n         /home/prakki/sw/bbmap/bbduk.sh -Xmx6g in1=${reads[0]} in2=${reads[1]} out1=${reads[0].baseName}.bbmap_adaptertrimmed.fastq  out2=${reads[1].baseName}.bbmap_adaptertrimmed.fastq ref=/home/prakki/sw/bbmap/resources/adapters.fa stats=${pair_id}.stats.txt ktrim=r k=23 mink=11 hdist=1 qtrim=rl trimq=10 minavgquality=10\n         \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n         /home/prakki/sw/bbmap/bbduk.sh -Xmx6g in1=${reads[0]} in2=${reads[1]} out1=${reads[0].baseName}.bbmap_adaptertrimmed.fastq  out2=${reads[1].baseName}.bbmap_adaptertrimmed.fastq ref=/home/prakki/sw/bbmap/resources/adapters.fa stats=${pair_id}.stats.txt ktrim=r k=23 mink=11 hdist=1 qtrim=rl trimq=10 minavgquality=10\n         \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_input",
            "spades_input"
        ],
        "nb_outputs": 2,
        "name_workflow": "ramadatta__nextflow",
        "directive": [
            "tag {pair_id}",
            "publishDir 'bbduk'"
        ],
        "when": "",
        "stub": ""
    },
    "spades": {
        "name_process": "spades",
        "string_process": "\nprocess spades {\n        tag {pair_id}\n        publishDir 'spades_output'\n\n        input:\n        set pair_id, file(reads) from spades_input\n\n        output:\n        set pair_id, file(\"spades_output/contigs.fasta\") into spades_output\n        file \"spades_output/contigs.fasta\"\n\n\n        script:\n        \"\"\"\n        /home/prakki/sw/SPAdes-3.13.0/bin/spades.py  --careful --threads ${task.cpus} --pe1-1 ${reads[0]} --pe1-2 ${reads[1]} -o spades_output\n         \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        /home/prakki/sw/SPAdes-3.13.0/bin/spades.py  --careful --threads ${task.cpus} --pe1-1 ${reads[0]} --pe1-2 ${reads[1]} -o spades_output\n         \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "spades_input"
        ],
        "nb_inputs": 1,
        "outputs": [
            "spades_output"
        ],
        "nb_outputs": 1,
        "name_workflow": "ramadatta__nextflow",
        "directive": [
            "tag {pair_id}",
            "publishDir 'spades_output'"
        ],
        "when": "",
        "stub": ""
    },
    "newSeqFile": {
        "name_process": "newSeqFile",
        "string_process": "\nprocess newSeqFile {\n \n    input:\n    path 'input.fa' from params.in\n \n    output:\n    path 'new.fa' into records1\n \n    \"\"\"\n    cat input.fa >new.fa\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    cat input.fa >new.fa\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params"
        ],
        "nb_inputs": 1,
        "outputs": [
            "records1"
        ],
        "nb_outputs": 1,
        "name_workflow": "ramadatta__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "count": {
        "name_process": "count",
        "string_process": "\nprocess count {\n \n    input:\n    path x from records1\n     \n    output:\n    stdout into result1\n \n    \"\"\"\n    grep -c '>' $x \n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    grep -c '>' $x \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "records1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result1"
        ],
        "nb_outputs": 1,
        "name_workflow": "ramadatta__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "calculate": {
        "name_process": "calculate",
        "string_process": "\nprocess calculate {\n \n    input:\n    path x from records1\n     \n    output:\n    stdout into result2\n \n    \"\"\"\n    grep -v '>' $x | wc -c\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    grep -v '>' $x | wc -c\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "records1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result2"
        ],
        "nb_outputs": 1,
        "name_workflow": "ramadatta__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    }
}