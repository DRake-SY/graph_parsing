{
    "LAST_MAFSWAP": {
        "name_process": "LAST_MAFSWAP",
        "string_process": "\nprocess LAST_MAFSWAP {\n    tag \"$meta.id\"\n    label 'process_low'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(maf)\n\n    output:\n    tuple val(meta), path(\"*.maf.gz\"), emit: maf\n    path \"*.version.txt\"             , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    maf-swap $options.args $maf | gzip --no-name > ${prefix}.swapped.maf.gz\n\n    # maf-swap has no --version option but lastdb, part of the same package, has.\n    echo \\$(lastdb --version 2>&1) | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    maf-swap $options.args $maf | gzip --no-name > ${prefix}.swapped.maf.gz\n\n    # maf-swap has no --version option but lastdb, part of the same package, has.\n    echo \\$(lastdb --version 2>&1) | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "maf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_SPLIT": {
        "name_process": "LAST_SPLIT",
        "string_process": "\nprocess LAST_SPLIT {\n    tag \"$meta.id\"\n    label 'process_high'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(maf)\n\n    output:\n    tuple val(meta), path(\"*.maf.gz\"), emit: maf\n    path \"*.version.txt\"             , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    zcat < $maf | last-split $options.args | gzip --no-name > ${prefix}.maf.gz\n\n    echo \\$(last-split --version 2>&1) | sed 's/last-split //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    zcat < $maf | last-split $options.args | gzip --no-name > ${prefix}.maf.gz\n\n    echo \\$(last-split --version 2>&1) | sed 's/last-split //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "maf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_DOTPLOT": {
        "name_process": "LAST_DOTPLOT",
        "string_process": "\nprocess LAST_DOTPLOT {\n    tag \"$meta.id\"\n    label 'process_low'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(maf)\n    val(format)\n\n    output:\n    tuple val(meta), path(\"*.gif\"), optional:true, emit: gif\n    tuple val(meta), path(\"*.png\"), optional:true, emit: png\n    path \"*.version.txt\"                         , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    last-dotplot \\\\\n        $options.args \\\\\n        $maf \\\\\n        $prefix.$format\n\n    # last-dotplot has no --version option so let's use lastal from the same suite\n    lastal --version | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    last-dotplot \\\\\n        $options.args \\\\\n        $maf \\\\\n        $prefix.$format\n\n    # last-dotplot has no --version option so let's use lastal from the same suite\n    lastal --version | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "mblastall"
        ],
        "tools_url": [
            "https://bio.tools/mblastall"
        ],
        "tools_dico": [
            {
                "name": "mblastall",
                "uri": "https://bio.tools/mblastall",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0338",
                                    "term": "Sequence database search"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "Search nucleotide database with nucleotide query sequence(s).",
                "homepage": "https://bioweb.pasteur.fr/packages/pack@ptools@0.99d"
            }
        ],
        "inputs": [
            "meta",
            "maf",
            "format"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_LASTDB": {
        "name_process": "LAST_LASTDB",
        "string_process": "\nprocess LAST_LASTDB {\n    tag \"$meta.id\"\n    label 'process_medium'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(fastx)\n\n    output:\n    tuple val(meta), path(\"lastdb\"), emit: index\n    path \"*.version.txt\"           , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    mkdir lastdb\n    lastdb \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        lastdb/${prefix} \\\\\n        $fastx\n\n    echo \\$(lastdb --version 2>&1) | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    mkdir lastdb\n    lastdb \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        lastdb/${prefix} \\\\\n        $fastx\n\n    echo \\$(lastdb --version 2>&1) | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "fastx"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_POSTMASK": {
        "name_process": "LAST_POSTMASK",
        "string_process": "\nprocess LAST_POSTMASK {\n    tag \"$meta.id\"\n    label 'process_low'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(maf)\n\n    output:\n    tuple val(meta), path(\"*.maf.gz\"), emit: maf\n    path \"*.version.txt\"             , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    if( \"$maf\" == \"${prefix}.maf.gz\" ) error \"Input and output names are the same, use the suffix option to disambiguate\"\n    \"\"\"\n    last-postmask $options.args $maf | gzip --no-name > ${prefix}.maf.gz\n\n    # last-postmask does not have a --version option\n    echo \\$(lastal --version 2>&1) | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    if( \"$maf\" == \"${prefix}.maf.gz\" ) error \"Input and output names are the same, use the suffix option to disambiguate\"\n    \"\"\"\n    last-postmask $options.args $maf | gzip --no-name > ${prefix}.maf.gz\n\n    # last-postmask does not have a --version option\n    echo \\$(lastal --version 2>&1) | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "maf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "BLAST_WINDOWMASKER": {
        "name_process": "BLAST_WINDOWMASKER",
        "string_process": "\nprocess BLAST_WINDOWMASKER {\n    tag \"$meta.id\"\n    label 'process_medium'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? 'bioconda::blast=2.10.1' : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container 'https://depot.galaxyproject.org/singularity/blast:2.10.1--pl526he19e7b1_3'\n    } else {\n        container 'quay.io/biocontainers/blast:2.10.1--pl526he19e7b1_3'\n    }\n\n    input:\n    tuple val(meta), path(fasta)\n\n    output:\n    tuple val(meta), path('*.fasta.gz'),  emit: fasta\n    path '*.version.txt',           emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    # Erase original masking\n    perl -pe ' next if />/ ; \\$_ = uc' $fasta > uppercased.fasta\n    # Mask with windowmasker\n    windowmasker -mk_counts -in uppercased.fasta > genome.wmstat\n    windowmasker -ustat genome.wmstat -outfmt fasta -in uppercased.fasta | gzip > ${prefix}.fasta.gz # --no-name option unavailable on busybox :(\n    windowmasker -version | head -n1 | sed 's/^.*windowmasker: //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    # Erase original masking\n    perl -pe ' next if />/ ; \\$_ = uc' $fasta > uppercased.fasta\n    # Mask with windowmasker\n    windowmasker -mk_counts -in uppercased.fasta > genome.wmstat\n    windowmasker -ustat genome.wmstat -outfmt fasta -in uppercased.fasta | gzip > ${prefix}.fasta.gz # --no-name option unavailable on busybox :(\n    windowmasker -version | head -n1 | sed 's/^.*windowmasker: //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? 'bioconda::blast=2.10.1' : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container 'https://depot.galaxyproject.org/singularity/blast:2.10.1--pl526he19e7b1_3' } else { container 'quay.io/biocontainers/blast:2.10.1--pl526he19e7b1_3' }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_LASTAL": {
        "name_process": "LAST_LASTAL",
        "string_process": "\nprocess LAST_LASTAL {\n    tag \"$meta.id\"\n    label 'process_high'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(fastx), path (param_file)\n    path index\n\n    output:\n    tuple val(meta), path(\"*.maf.gz\"), emit: maf\n    path \"*.version.txt\"             , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    def trained_params = param_file ? \"-p ${param_file}\"  : ''\n    \"\"\"\n    INDEX_NAME=\\$(basename \\$(ls $index/*.des) .des)\n    lastal \\\\\n        $trained_params \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        ${index}/\\$INDEX_NAME \\\\\n        $fastx \\\\\n        | gzip --no-name > ${prefix}.\\$INDEX_NAME.maf.gz\n    # gzip needs --no-name otherwise it puts a timestamp in the file,\n    # which makes its checksum non-reproducible.\n\n    echo \\$(lastal --version 2>&1) | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    def trained_params = param_file ? \"-p ${param_file}\"  : ''\n    \"\"\"\n    INDEX_NAME=\\$(basename \\$(ls $index/*.des) .des)\n    lastal \\\\\n        $trained_params \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        ${index}/\\$INDEX_NAME \\\\\n        $fastx \\\\\n        | gzip --no-name > ${prefix}.\\$INDEX_NAME.maf.gz\n    # gzip needs --no-name otherwise it puts a timestamp in the file,\n    # which makes its checksum non-reproducible.\n\n    echo \\$(lastal --version 2>&1) | sed 's/lastal //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "mblastall"
        ],
        "tools_url": [
            "https://bio.tools/mblastall"
        ],
        "tools_dico": [
            {
                "name": "mblastall",
                "uri": "https://bio.tools/mblastall",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0338",
                                    "term": "Sequence database search"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "Search nucleotide database with nucleotide query sequence(s).",
                "homepage": "https://bioweb.pasteur.fr/packages/pack@ptools@0.99d"
            }
        ],
        "inputs": [
            "meta",
            "fastx",
            "param_file",
            "index"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "LAST_TRAIN": {
        "name_process": "LAST_TRAIN",
        "string_process": "\nprocess LAST_TRAIN {\n    tag \"$meta.id\"\n    label 'process_high'\n    publishDir \"${params.outdir}\",\n        mode: params.publish_dir_mode,\n        saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }\n\n    conda (params.enable_conda ? \"bioconda::last=1250\" : null)\n    if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) {\n        container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\"\n    } else {\n        container \"quay.io/biocontainers/last:1250--h2e03b76_0\"\n    }\n\n    input:\n    tuple val(meta), path(fastx)\n    path  index\n\n    output:\n    tuple val(meta), path (\"*.par\"), emit: param_file\n    path \"*.version.txt\"           , emit: version\n\n    script:\n    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    INDEX_NAME=\\$(basename \\$(ls $index/*.des) .des)\n\n    last-train \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        ${index}/\\$INDEX_NAME \\\\\n        $fastx \\\\\n        > ${prefix}.\\$INDEX_NAME.par\n\n    lastdb --version | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    def software = getSoftwareName(task.process)\n    def prefix   = options.suffix ? \"${meta.id}${options.suffix}\" : \"${meta.id}\"\n    \"\"\"\n    INDEX_NAME=\\$(basename \\$(ls $index/*.des) .des)\n\n    last-train \\\\\n        $options.args \\\\\n        -P $task.cpus \\\\\n        ${index}/\\$INDEX_NAME \\\\\n        $fastx \\\\\n        > ${prefix}.\\$INDEX_NAME.par\n\n    lastdb --version | sed 's/lastdb //' > ${software}.version.txt\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "fastx",
            "index"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "oist__plessy_pairwiseGenomeComparison",
        "directive": [
            "tag \"$meta.id\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}\" , mode: params.publish_dir_mode , saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }",
            "conda (params.enable_conda ? \"bioconda::last=1250\" : null) if (workflow.containerEngine == 'singularity' && !params.singularity_pull_docker_container) { container \"https://depot.galaxyproject.org/singularity/last:1250--h2e03b76_0\" } else { container \"quay.io/biocontainers/last:1250--h2e03b76_0\" }"
        ],
        "when": "",
        "stub": ""
    }
}