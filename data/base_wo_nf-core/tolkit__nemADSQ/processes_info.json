{
    "decompress_fasta": {
        "name_process": "decompress_fasta",
        "string_process": "\nprocess decompress_fasta {\n    tag \"${assembler}\"\n\n    input:\n      tuple val(strain), val(assembler), path(assembly)\n\n    output:\n      tuple val(strain), val(assembler), path('assembly.fasta')\n\n    script:\n      \"\"\"\n      if [ -f *.gz ]; then\n            gunzip -c $assembly > assembly.fasta\n        else\n            ln -s $assembly assembly.fasta\n      fi\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      if [ -f *.gz ]; then\n            gunzip -c $assembly > assembly.fasta\n        else\n            ln -s $assembly assembly.fasta\n      fi\n      \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "assembler",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assembler"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\""
        ],
        "when": "",
        "stub": ""
    },
    "busco": {
        "name_process": "busco",
        "string_process": "\nprocess busco {\n    tag \"${assembler}_${busco_db}\"\n    publishDir \"$params.outdir/busco\", mode: 'copy'\n\n    input:\n      tuple val(strain), val(assembler), path(genome), val(busco_db)\n\n    output:\n      path \"*single_copy_busco_sequences.{faa,fna}\"\n      path \"${assembler}_${busco_db}_short_summary.txt\"\n      tuple val(assembler), path( \"${assembler}_${busco_db}_full_table.tsv\"), emit: busco_full\n\n    script:\n      \"\"\"\n      export http_proxy=http://wwwcache.sanger.ac.uk:3128\n      export https_proxy=http://wwwcache.sanger.ac.uk:3128\n      busco -c ${task.cpus} -l $busco_db -i $genome --out run_busco --mode geno\n      awk 'BEGIN{FS=\"\\\\t\";OFS=FS}(\\$3 !~ /:/){print}' run_busco/run_*/full_table.tsv > ${assembler}_${busco_db}_full_table.tsv\n      mv run_busco/short_summary* ${assembler}_${busco_db}_short_summary.txt\n      #mv run_busco/run_*/full_table.tsv ${assembler}_${busco_db}_full_table.tsv\n      for ext in .faa; do\n        seqFile=${assembler}_${busco_db}_single_copy_busco_sequences\\$ext\n        for file in run_busco/run_nematoda_odb10/busco_sequences/single_copy_busco_sequences/*\\$ext; do\n          echo \\\">\\$(basename \\${file%\\$ext})\\\" >> \\$seqFile; tail -n +2 \\$file >> \\$seqFile;\n        done\n      done\n      rm -rf run_busco/ busco_downloads/\n      \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "      \"\"\"\n      export http_proxy=http://wwwcache.sanger.ac.uk:3128\n      export https_proxy=http://wwwcache.sanger.ac.uk:3128\n      busco -c ${task.cpus} -l $busco_db -i $genome --out run_busco --mode geno\n      awk 'BEGIN{FS=\"\\\\t\";OFS=FS}(\\$3 !~ /:/){print}' run_busco/run_*/full_table.tsv > ${assembler}_${busco_db}_full_table.tsv\n      mv run_busco/short_summary* ${assembler}_${busco_db}_short_summary.txt\n      #mv run_busco/run_*/full_table.tsv ${assembler}_${busco_db}_full_table.tsv\n      for ext in .faa; do\n        seqFile=${assembler}_${busco_db}_single_copy_busco_sequences\\$ext\n        for file in run_busco/run_nematoda_odb10/busco_sequences/single_copy_busco_sequences/*\\$ext; do\n          echo \\\">\\$(basename \\${file%\\$ext})\\\" >> \\$seqFile; tail -n +2 \\$file >> \\$seqFile;\n        done\n      done\n      rm -rf run_busco/ busco_downloads/\n      \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "BUSCO"
        ],
        "tools_url": [
            "https://bio.tools/busco"
        ],
        "tools_dico": [
            {
                "name": "BUSCO",
                "uri": "https://bio.tools/busco",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly validation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly QC"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1234",
                                "term": "Sequence set (nucleic acid)"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "Provides measures for quantitative assessment of genome assembly, gene set, and transcriptome completeness based on evolutionarily informed expectations of gene content from near-universal single-copy orthologs.",
                "homepage": "http://busco.ezlab.org/"
            }
        ],
        "inputs": [
            "strain",
            "assembler",
            "busco_db",
            "genome"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}_${busco_db}\"",
            "publishDir \"$params.outdir/busco\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "red": {
        "name_process": "red",
        "string_process": "\nprocess red {\n    tag \"${assembler}\"\n                                                    \n\n    input:\n      tuple val(strain), val(assembler), path(assembly)\n\n    output:\n      tuple val(strain), val(assembler), path(\"Red_out/assembly.msk\")\n\n    script:\n      \"\"\"\n      mkdir Red_dir Red_out\n      mv $assembly Red_dir/assembly.fa\n\n      Red -gnm Red_dir -msk Red_out/\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      mkdir Red_dir Red_out\n      mv $assembly Red_dir/assembly.fa\n\n      Red -gnm Red_dir -msk Red_out/\n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "RED"
        ],
        "tools_url": [
            "https://bio.tools/red"
        ],
        "tools_dico": [
            {
                "name": "RED",
                "uri": "https://bio.tools/red",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This is a program to detect and visualize RNA editing events at genomic scale using next-generation sequencing data.",
                "homepage": "https://github.com/REDetector/RED"
            }
        ],
        "inputs": [
            "strain",
            "assembler",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assembler"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\""
        ],
        "when": "",
        "stub": ""
    },
    "red2bed": {
        "name_process": "red2bed",
        "string_process": "\nprocess red2bed {\n    tag \"${assembler}\"\n    label 'nemaQC'\n    publishDir \"$params.outdir/red\", mode: 'copy'\n\n    input:\n      tuple val(strain), val(assembler), path(assembly)\n\n    output:\n      tuple val(assembler), path(\"${assembler}.red.bed.gz\")\n\n    script:\n      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n\n      cat $assembly | soft_mask2bed | \\\n        perl -ne 's/ [^\\\\t]+\\\\t/\\\\t/; print' > ${assembler}.bed\n      \n      bedtools makewindows -g ${assembler}.seqlen.tsv -w ${params.teloRepeatWindowSize} | \\\n        bedtools coverage -a stdin -b ${assembler}.bed | \\\n        awk -F '\\\\t' 'BEGIN{OFS=FS}{print \\$1, \\$2, \\$3, \\$7, \"repeats\"}' | \\\n        gzip -c > ${assembler}.red.bed.gz\n      rm ${assembler}.seqlen.tsv ${assembler}.bed\n      \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n\n      cat $assembly | soft_mask2bed | \\\n        perl -ne 's/ [^\\\\t]+\\\\t/\\\\t/; print' > ${assembler}.bed\n      \n      bedtools makewindows -g ${assembler}.seqlen.tsv -w ${params.teloRepeatWindowSize} | \\\n        bedtools coverage -a stdin -b ${assembler}.bed | \\\n        awk -F '\\\\t' 'BEGIN{OFS=FS}{print \\$1, \\$2, \\$3, \\$7, \"repeats\"}' | \\\n        gzip -c > ${assembler}.red.bed.gz\n      rm ${assembler}.seqlen.tsv ${assembler}.bed\n      \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "strain",
            "assembler",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assembler"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\"",
            "label 'nemaQC'",
            "publishDir \"$params.outdir/red\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "gc_by_windows": {
        "name_process": "gc_by_windows",
        "string_process": "\nprocess gc_by_windows {\n    tag \"${assembler}\"\n    label 'nemaQC'\n    publishDir \"$params.outdir/gc\", mode: 'copy'\n\n    input:\n      tuple val(strain), val(assembler), path(assembly)\n\n    output:\n      tuple val(assembler), path(\"${assembler}.gc.bed.gz\")\n\n    script:\n      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n      bedtools makewindows -g ${assembler}.seqlen.tsv \\\n        -w ${params.teloRepeatWindowSize} > windows.bed\n\n      bedtools nuc -fi assembly.fasta -bed windows.bed | \\\n        cut -f 1-3,5 | tail -n+2 | \\\n        gzip -c > ${assembler}.gc.bed.gz\n      \n      rm assembly.fasta* ${assembler}.seqlen.tsv windows.bed\n      \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n      bedtools makewindows -g ${assembler}.seqlen.tsv \\\n        -w ${params.teloRepeatWindowSize} > windows.bed\n\n      bedtools nuc -fi assembly.fasta -bed windows.bed | \\\n        cut -f 1-3,5 | tail -n+2 | \\\n        gzip -c > ${assembler}.gc.bed.gz\n      \n      rm assembly.fasta* ${assembler}.seqlen.tsv windows.bed\n      \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "strain",
            "assembler",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assembler"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\"",
            "label 'nemaQC'",
            "publishDir \"$params.outdir/gc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "get_telomeric_reads": {
        "name_process": "get_telomeric_reads",
        "string_process": "\nprocess get_telomeric_reads {\n    tag \"${strain}\"\n    label 'nemaQC'\n    publishDir \"$params.outdir/teloReads\", mode: 'copy'\n\n    input:\n      tuple val(strain), path(reads)\n    output:\n      tuple val(strain), path(\"${strain}.telo.fasta.gz\")\n\n    script:\n      \"\"\"\n      zcat $reads | filter_telomeric_reads.py -r - -s ${params.telomere} \\\n        --times ${params.min_occurr} --out ${strain}.telo.fasta.gz\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      zcat $reads | filter_telomeric_reads.py -r - -s ${params.telomere} \\\n        --times ${params.min_occurr} --out ${strain}.telo.fasta.gz\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}\"",
            "label 'nemaQC'",
            "publishDir \"$params.outdir/teloReads\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "map_telomeric_reads": {
        "name_process": "map_telomeric_reads",
        "string_process": "\nprocess map_telomeric_reads {\n    tag \"${assemblies[1]}\"\n    publishDir \"$params.outdir/teloMaps\", mode: 'copy'\n    label 'nemaQC'\n\n    input:\n      tuple val(reads), val(assemblies)\n\n    output:\n      tuple val(\"${assemblies[1]}\"), path(\"${assemblies[1]}.teloMapped.paf.gz\")\n\n    script:\n      \"\"\"\n      minimap2 ${assemblies[2]} ${reads[1]} | \\\n        gzip -c > ${assemblies[1]}.teloMapped.paf.gz\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      minimap2 ${assemblies[2]} ${reads[1]} | \\\n        gzip -c > ${assemblies[1]}.teloMapped.paf.gz\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "reads",
            "assemblies"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemblies[1]}\"",
            "publishDir \"$params.outdir/teloMaps\", mode: 'copy'",
            "label 'nemaQC'"
        ],
        "when": "",
        "stub": ""
    },
    "count_telomeric_repeat": {
        "name_process": "count_telomeric_repeat",
        "string_process": "\nprocess count_telomeric_repeat {\n    tag \"${assembler}\"\n    publishDir \"$params.outdir/teloRepeatCounts\", mode: 'copy'\n    label 'nemaQC'\n\n    input:\n      tuple val(strain), val(assembler), path(assembly)\n    \n    output:\n      tuple val(assembler), path( \"${assembler}_teloRepeatCounts.tsv.gz\")\n\n    script:\n      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n      seqkit locate -i --bed -M -G -p ${params.telomere} $assembly | \\\n        cut -f 1,2,3 | \\\n        sort -k1,1 -k2,2n > ${assembler}.teloRepeats.tsv\n      bedtools makewindows -g ${assembler}.seqlen.tsv -w ${params.teloRepeatWindowSize} | \\\n        bedtools intersect -a stdin -b ${assembler}.teloRepeats.tsv -wa -wb | \\\n        bedtools groupby -i stdin -g 1,2,3 -c 1 -o count | \\\n        awk -F '\\\\t' 'BEGIN{OFS=FS}{print \\$0, \"telomeres\"}' | \\\n        gzip -c > ${assembler}_teloRepeatCounts.tsv.gz\n      rm ${assembler}.seqlen.tsv ${assembler}.teloRepeats.tsv\n      \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      samtools faidx ${assembly}\n      cut -f 1,2 ${assembly}.fai > ${assembler}.seqlen.tsv\n      seqkit locate -i --bed -M -G -p ${params.telomere} $assembly | \\\n        cut -f 1,2,3 | \\\n        sort -k1,1 -k2,2n > ${assembler}.teloRepeats.tsv\n      bedtools makewindows -g ${assembler}.seqlen.tsv -w ${params.teloRepeatWindowSize} | \\\n        bedtools intersect -a stdin -b ${assembler}.teloRepeats.tsv -wa -wb | \\\n        bedtools groupby -i stdin -g 1,2,3 -c 1 -o count | \\\n        awk -F '\\\\t' 'BEGIN{OFS=FS}{print \\$0, \"telomeres\"}' | \\\n        gzip -c > ${assembler}_teloRepeatCounts.tsv.gz\n      rm ${assembler}.seqlen.tsv ${assembler}.teloRepeats.tsv\n      \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "strain",
            "assembler",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assembler"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\"",
            "publishDir \"$params.outdir/teloRepeatCounts\", mode: 'copy'",
            "label 'nemaQC'"
        ],
        "when": "",
        "stub": ""
    },
    "nematode_chromosome_QC": {
        "name_process": "nematode_chromosome_QC",
        "string_process": "\nprocess nematode_chromosome_QC {\n    tag \"${assembler}\"\n    publishDir \"$params.outdir/nemaChromQC\", mode: 'copy'\n    label 'nemaQC'\n\n    input:\n      tuple val(assembler), path(buscoTable), path(teloMappedReads),\n      path(teloRepeats), path(allRepeats), path(gcWindows)\n      path(busco2nigons)\n    \n    output:\n      path \"${assembler}.{pdf,buscoString.txt,teloMappedBlocks.tsv}\"\n      path \"${assembler}.chromQC.tsv\" , emit: busco_full\n\n    script:\n      \"\"\"\n      nemaChromQC.R --assemblyName $assembler \\\n        --nigon $busco2nigons --busco $buscoTable \\\n        --teloMappedPaf $teloMappedReads \\\n        --teloRepeats $teloRepeats \\\n        --allRepeats $allRepeats \\\n        --gcFrac $gcWindows \\\n        --minimumGenesPerSequence $params.minimumGenesPerSequence \\\n        --minimumNigonFrac $params.minimumNigonFrac \\\n        --minimumFracAlignedTeloReads $params.minimumFracAlignedTeloReads \\\n        --windowSize $params.windowSizeQC\n      \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "      \"\"\"\n      nemaChromQC.R --assemblyName $assembler \\\n        --nigon $busco2nigons --busco $buscoTable \\\n        --teloMappedPaf $teloMappedReads \\\n        --teloRepeats $teloRepeats \\\n        --allRepeats $allRepeats \\\n        --gcFrac $gcWindows \\\n        --minimumGenesPerSequence $params.minimumGenesPerSequence \\\n        --minimumNigonFrac $params.minimumNigonFrac \\\n        --minimumFracAlignedTeloReads $params.minimumFracAlignedTeloReads \\\n        --windowSize $params.windowSizeQC\n      \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assembler",
            "buscoTable",
            "teloMappedReads",
            "teloRepeats",
            "allRepeats",
            "gcWindows",
            "busco2nigons"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assembler}\"",
            "publishDir \"$params.outdir/nemaChromQC\", mode: 'copy'",
            "label 'nemaQC'"
        ],
        "when": "",
        "stub": ""
    },
    "get_contiguity_stats": {
        "name_process": "get_contiguity_stats",
        "string_process": "\nprocess get_contiguity_stats {\n    tag \"all\"\n    publishDir \"$params.outdir/\", mode: 'copy'\n    label 'nemaQC'\n\n    input:\n      path(assemblies)\n    \n    output:\n      path \"assemblies_contiguity_stats.tsv\"\n\n    script:\n      \"\"\"\n      seqkit stats -a -T $assemblies > assemblies_contiguity_stats.tsv\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      seqkit stats -a -T $assemblies > assemblies_contiguity_stats.tsv\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assemblies"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"all\"",
            "publishDir \"$params.outdir/\", mode: 'copy'",
            "label 'nemaQC'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_index": {
        "name_process": "bwa_index",
        "string_process": "\nprocess bwa_index {\n    tag \"${assemName}\"\n\n    input:\n      tuple val(strain), val(assemName), path(assembly)\n\n    output:\n      tuple val(strain), val(assemName), path(\"bwa\")\n\n    script:\n      \"\"\"\n      mkdir bwa\n      bwa index -p bwa/${assemName} $assembly\n      \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "      \"\"\"\n      mkdir bwa\n      bwa index -p bwa/${assemName} $assembly\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "strain",
            "assemName",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assemName"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}\""
        ],
        "when": "",
        "stub": ""
    },
    "get_restriction_sites": {
        "name_process": "get_restriction_sites",
        "string_process": "\nprocess get_restriction_sites {\n    tag \"${assemName}\"\n\n    input:\n      tuple val(strain), val(assemName), path(assembly)\n\n    output:\n      tuple val(strain), val(assemName), path(\"${assemName}_rest_site_positions.bed\")\n\n    script:\n      \"\"\"\n      findRestSite --fasta $assembly \\\n        --searchPattern $params.restriction_sites \\\n        -o ${assemName}_rest_site_positions.bed\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      findRestSite --fasta $assembly \\\n        --searchPattern $params.restriction_sites \\\n        -o ${assemName}_rest_site_positions.bed\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "assemName",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "assemName"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}\""
        ],
        "when": "",
        "stub": ""
    },
    "bwa_mem": {
        "name_process": "bwa_mem",
        "string_process": "\nprocess bwa_mem {\n    tag \"${assemName}_${read_ID}\"\n\n    input:\n      tuple val(strain), val(assemName), path(indexBase), val(strain2), val(read_ID), path(readFile)\n      \n\n    output:\n      tuple val(strain), val(assemName), path(\"${assemName}_${read_ID}.bam\")\n\n    script:\n      \"\"\"\n      INDEX=`find -L ./ -name \"*.amb\" | sed 's/.amb//'`\n      \n      bwa mem -A1 -B4 -E50 -L0 \\\n        -t ${task.cpus} \\\n        \\$INDEX \\\n        $readFile \\\n        | samtools view -@ 2 -bhS -o ${assemName}_${read_ID}.bam -\n      \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "      \"\"\"\n      INDEX=`find -L ./ -name \"*.amb\" | sed 's/.amb//'`\n      \n      bwa mem -A1 -B4 -E50 -L0 \\\n        -t ${task.cpus} \\\n        \\$INDEX \\\n        $readFile \\\n        | samtools view -@ 2 -bhS -o ${assemName}_${read_ID}.bam -\n      \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "strain",
            "assemName",
            "strain2",
            "read_ID",
            "indexBase",
            "readFile"
        ],
        "nb_inputs": 6,
        "outputs": [
            "assemName"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}_${read_ID}\""
        ],
        "when": "",
        "stub": ""
    },
    "hic_matrix": {
        "name_process": "hic_matrix",
        "string_process": "\nprocess hic_matrix {\n    tag \"${assemName}\"\n    publishDir \"$params.outdir/hic_QC\", mode: 'copy'\n\n    input:\n      tuple val(strain), val(assemName), path(bam1), path(bam2), path(bed_sites) \n\n    output:\n      tuple val(strain), val(assemName), path(\"${assemName}.h5\"), emit: h5_matrix\n      path(\"${assemName}_QC\"), emit: folderQC\n\n    script:\n      \"\"\"\n      hicBuildMatrix --samFiles $bam1 $bam2 \\\n                 --binSize 10000 \\\n                 --restrictionSequence $params.restriction_sites \\\n                 --threads ${task.cpus} \\\n                 --inputBufferSize 100000 \\\n                 -o ${assemName}.h5 \\\n                 --QCfolder ${assemName}_QC\n      \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "      \"\"\"\n      hicBuildMatrix --samFiles $bam1 $bam2 \\\n                 --binSize 10000 \\\n                 --restrictionSequence $params.restriction_sites \\\n                 --threads ${task.cpus} \\\n                 --inputBufferSize 100000 \\\n                 -o ${assemName}.h5 \\\n                 --QCfolder ${assemName}_QC\n      \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "assemName",
            "bam1",
            "bam2",
            "bed_sites"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}\"",
            "publishDir \"$params.outdir/hic_QC\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "hic_correct": {
        "name_process": "hic_correct",
        "string_process": "\nprocess hic_correct {\n    tag \"${assemName}\"\n\n    input:\n      tuple val(strain), val(assemName), path(h5_matrix)\n\n    output:\n      tuple val(strain), val(assemName), path(\"${assemName}_corrected.h5\"), emit: h5_corr_matrix\n      path(\"hic_diagnostic_${assemName}.png\"), emit: hic_diagnostic\n\n    script:\n      \"\"\"\n      hicCorrectMatrix diagnostic_plot -m $h5_matrix -o hic_diagnostic_${assemName}.png\n      hicCorrectMatrix correct -m $h5_matrix --filterThreshold -4 3 -o ${assemName}_corrected.h5\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      hicCorrectMatrix diagnostic_plot -m $h5_matrix -o hic_diagnostic_${assemName}.png\n      hicCorrectMatrix correct -m $h5_matrix --filterThreshold -4 3 -o ${assemName}_corrected.h5\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "assemName",
            "h5_matrix"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}\""
        ],
        "when": "",
        "stub": ""
    },
    "scaffold": {
        "name_process": "scaffold",
        "string_process": "\nprocess scaffold {\n    tag \"${assemName}\"\n    publishDir \"$params.outdir/scaffold\", mode: 'copy'\n\n    input:\n      tuple val(strain), val(assemName), path(h5_matrix), path(assembly)\n\n    output:\n      tuple val(strain), val(assemName), path(\"${assemName}_scaf\")\n\n    script:\n      \"\"\"\n      if [ -f *.gz ]; then\n            gunzip -c $assembly > assembly.fasta\n        else\n            ln -s $assembly assembly.fasta\n      fi\n      assemble -m $h5_matrix -o ${assemName}_scaf \\\n        --min_scaffold_length 100000 --bin_size 10000 \\\n        --misassembly_zscore_threshold -5 \\\n        --num_iterations 3 -f assembly.fasta\n      rm ${assemName}_scaf/*h5 ${assemName}_scaf/*graphml\n      bgzip ${assemName}_scaf/super_scaffolds.fa\n      \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "      \"\"\"\n      if [ -f *.gz ]; then\n            gunzip -c $assembly > assembly.fasta\n        else\n            ln -s $assembly assembly.fasta\n      fi\n      assemble -m $h5_matrix -o ${assemName}_scaf \\\n        --min_scaffold_length 100000 --bin_size 10000 \\\n        --misassembly_zscore_threshold -5 \\\n        --num_iterations 3 -f assembly.fasta\n      rm ${assemName}_scaf/*h5 ${assemName}_scaf/*graphml\n      bgzip ${assemName}_scaf/super_scaffolds.fa\n      \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "Assemble2"
        ],
        "tools_url": [
            "https://bio.tools/assemble2"
        ],
        "tools_dico": [
            {
                "name": "Assemble2",
                "uri": "https://bio.tools/assemble2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0475",
                                    "term": "Nucleic acid structure prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Design your RNA 2D structure interactively and to create and assemble the corresponding RNA 3D modules directly in UCSF Chimera.",
                "homepage": "http://bioinformatics.org/assemble/"
            }
        ],
        "inputs": [
            "strain",
            "assemName",
            "h5_matrix",
            "assembly"
        ],
        "nb_inputs": 4,
        "outputs": [
            "assemName"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${assemName}\"",
            "publishDir \"$params.outdir/scaffold\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "hifiasm": {
        "name_process": "hifiasm",
        "string_process": "\nprocess hifiasm {\n    tag \"${strain}\"\n    publishDir \"$params.outdir/hifiasm\", mode: 'copy'\n\n    input:\n      tuple val(strain), path(reads)\n\n    output:\n      tuple val(strain), path(\"${strain}.hifiasm.fasta.gz\")\n\n    script:\n      \"\"\"\n      /software/team301/hifiasm/hifiasm $reads -o $strain -t ${task.cpus}\n      awk '/^S/{print \">\"\\$2\"\\\\n\"\\$3}' ${strain}.p_ctg.gfa | fold | gzip -c > ${strain}.hifiasm.fasta.gz\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      /software/team301/hifiasm/hifiasm $reads -o $strain -t ${task.cpus}\n      awk '/^S/{print \">\"\\$2\"\\\\n\"\\$3}' ${strain}.p_ctg.gfa | fold | gzip -c > ${strain}.hifiasm.fasta.gz\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "TFold"
        ],
        "tools_url": [
            "https://bio.tools/tfold"
        ],
        "tools_dico": [
            {
                "name": "TFold",
                "uri": "https://bio.tools/tfold",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0278",
                                    "term": "RNA secondary structure prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An algorithm for predicting non-coding RNA secondary structures.",
                "homepage": "https://evryrna.ibisc.univ-evry.fr/evryrna/tfold"
            }
        ],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}\"",
            "publishDir \"$params.outdir/hifiasm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "flye": {
        "name_process": "flye",
        "string_process": "\nprocess flye {\n    tag \"${strain}\"\n    publishDir \"$params.outdir\", mode: 'copy'\n    label 'btk'\n\n    input:\n      tuple val(strain), path(reads)\n\n    output:\n      tuple val(strain), path(\"${strain}.flye.fasta.gz\")\n\n    script:\n      \"\"\"\n      /software/team301/Flye-2.8.2/Flye/bin/flye --threads ${task.cpus} \\\n       --pacbio-hifi $reads --meta -o flyemeta\n       cat flyemeta/assembly.fasta | bgzip -c > ${strain}.flye.fasta.gz\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      /software/team301/Flye-2.8.2/Flye/bin/flye --threads ${task.cpus} \\\n       --pacbio-hifi $reads --meta -o flyemeta\n       cat flyemeta/assembly.fasta | bgzip -c > ${strain}.flye.fasta.gz\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Flye"
        ],
        "tools_url": [
            "https://bio.tools/Flye"
        ],
        "tools_dico": [
            {
                "name": "Flye",
                "uri": "https://bio.tools/Flye",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flye is a de novo assembler for single molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PB / ONT reads as input and outputs polished contigs.",
                "homepage": "https://github.com/fenderglass/Flye"
            }
        ],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}\"",
            "publishDir \"$params.outdir\", mode: 'copy'",
            "label 'btk'"
        ],
        "when": "",
        "stub": ""
    },
    "wtdbg2": {
        "name_process": "wtdbg2",
        "string_process": "\nprocess wtdbg2 {\n    tag \"${strain}\"\n    publishDir \"$params.outdir\", mode: 'copy'\n    label 'btk'\n\n    input:\n      tuple val(strain), path(reads)\n\n    output:\n      tuple val(strain), path(\"${strain}.wtdbg2.fasta.gz\")\n\n    script:\n      \"\"\"\n      /software/team301/wtdbg2/wtdbg2.pl -t ${task.cpus} -x ccs -g 100m -o ${strain} $reads\n       bgzip ${strain}.cns.fa\n       mv ${strain}.cns.fa.gz ${strain}.wtdbg2.fasta.gz\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      /software/team301/wtdbg2/wtdbg2.pl -t ${task.cpus} -x ccs -g 100m -o ${strain} $reads\n       bgzip ${strain}.cns.fa\n       mv ${strain}.cns.fa.gz ${strain}.wtdbg2.fasta.gz\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}\"",
            "publishDir \"$params.outdir\", mode: 'copy'",
            "label 'btk'"
        ],
        "when": "",
        "stub": ""
    },
    "canu": {
        "name_process": "canu",
        "string_process": "\nprocess canu {\n    tag \"${strain}\"\n    publishDir \"$params.outdir\", mode: 'symlink'\n\n    input:\n      tuple val(strain), path(reads)\n\n    output:\n      tuple val(strain), path(\"${strain}\")\n\n    script:\n      \"\"\"\n      /software/tola/bin/canu-2.1.1/bin/canu -d ${strain} \\\n        -p ${strain} gridEngineResourceOption='-M MEMORY -R \"select[mem>MEMORY] rusage[mem=MEMORY]\" -n THREADS -R \"span[hosts=1]\"' \\\n        genomeSize=60M -pacbio-hifi $reads\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      /software/tola/bin/canu-2.1.1/bin/canu -d ${strain} \\\n        -p ${strain} gridEngineResourceOption='-M MEMORY -R \"select[mem>MEMORY] rusage[mem=MEMORY]\" -n THREADS -R \"span[hosts=1]\"' \\\n        genomeSize=60M -pacbio-hifi $reads\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "CANU"
        ],
        "tools_url": [
            "https://bio.tools/canu"
        ],
        "tools_dico": [
            {
                "name": "CANU",
                "uri": "https://bio.tools/canu",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "De-novo assembly tool for long read chemistry like Nanopore data and PacBio data.",
                "homepage": "https://github.com/marbl/canu"
            }
        ],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}\"",
            "publishDir \"$params.outdir\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "remove_ecoli": {
        "name_process": "remove_ecoli",
        "string_process": "\nprocess remove_ecoli {\n    tag \"${strain}_${fileNum}\"\n    label 'btk'\n\n    input:\n        tuple val(strain), val(fileNum), val(reads)\n        path(assembly)\n\n    output:\n        tuple val(strain), val(fileNum), path(\"${strain}_${fileNum}.fasta.gz\")\n\n    script:\n        \"\"\"\n        iget $reads - | minimap2 -ax map-ont -t ${task.cpus} $assembly - \\\n            | samtools fasta -f 4 - \\\n            | gzip -c > ${strain}_${fileNum}.fasta.gz\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        iget $reads - | minimap2 -ax map-ont -t ${task.cpus} $assembly - \\\n            | samtools fasta -f 4 - \\\n            | gzip -c > ${strain}_${fileNum}.fasta.gz\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "strain",
            "fileNum",
            "reads",
            "assembly"
        ],
        "nb_inputs": 4,
        "outputs": [
            "fileNum"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"${strain}_${fileNum}\"",
            "label 'btk'"
        ],
        "when": "",
        "stub": ""
    },
    "concat_fasta": {
        "name_process": "concat_fasta",
        "string_process": "\nprocess concat_fasta {\n    tag \"$strain\"\n    publishDir \"${params.outdir}/concatFasta\",\n        mode: 'copy'\n    \n    input:\n        tuple val(strain), path(reads)\n    \n    output:\n        tuple val(strain), path(\"*.merged.fasta.gz\")\n\n    script:\n        readList = reads.collect{it.toString()}\n        \"\"\"\n        cat ${readList.sort().join(' ')} > ${strain}.merged.fasta.gz\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        readList = reads.collect{it.toString()}\n        \"\"\"\n        cat ${readList.sort().join(' ')} > ${strain}.merged.fasta.gz\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"$strain\"",
            "publishDir \"${params.outdir}/concatFasta\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "pycoQC": {
        "name_process": "pycoQC",
        "string_process": "\nprocess pycoQC {\n    tag \"$strain\"\n    publishDir \"${params.outdir}/pycoQC\",\n        mode: 'copy'\n    \n    input:\n    tuple val(strain), val(summary_file)\n    \n    output:\n    tuple val(strain), path(\"${strain}.{json,html}\")\n\n    script:\n        \"\"\"\n        iget $summary_file\n        pycoQC --summary_file *gz --report_title ${strain} \\\n            --json_outfile ${strain}.json \\\n            --html_outfile ${strain}.html\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        iget $summary_file\n        pycoQC --summary_file *gz --report_title ${strain} \\\n            --json_outfile ${strain}.json \\\n            --html_outfile ${strain}.html\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "strain",
            "summary_file"
        ],
        "nb_inputs": 2,
        "outputs": [
            "strain"
        ],
        "nb_outputs": 1,
        "name_workflow": "tolkit__nemADSQ",
        "directive": [
            "tag \"$strain\"",
            "publishDir \"${params.outdir}/pycoQC\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}