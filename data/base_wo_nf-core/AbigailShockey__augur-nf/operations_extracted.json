{
    "OPERATION_1": {
        "string": "Channel\n    .fromPath(\"${params.reference}\")\n    .ifEmpty { exit 1, \"Cannot find reference sequence in: ${params.reference}\" }\n    .into { reference_alignment; reference_translate }",
        "origin": [
            [
                "\"${params.reference}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "reference_alignment",
                "P"
            ],
            [
                "reference_translate",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath( \"${params.metadata}\")\n    .ifEmpty { exit 1, \"Cannot find metadata file in: ${params.metadata}\" }\n    .into { filter_metadata; refine_tree_metadata; traits_metadata; metadata_export }",
        "origin": [
            [
                "\"${params.metadata}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "filter_metadata",
                "P"
            ],
            [
                "refine_tree_metadata",
                "P"
            ],
            [
                "traits_metadata",
                "P"
            ],
            [
                "metadata_export",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath( \"${params.colors}\")\n    .ifEmpty { exit 1, \"Cannot find colors file in: ${params.colors}\" }\n    .set { colors_export }",
        "origin": [
            [
                "\"${params.colors}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "colors_export",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n    .fromPath( \"${params.lat_long}\")\n    .ifEmpty { exit 1, \"Cannot find latitude and longitude file in: ${params.lat_long}\" }\n    .set { lat_long_export }",
        "origin": [
            [
                "\"${params.lat_long}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "lat_long_export",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n    .fromPath( \"${params.config}\")\n    .ifEmpty { exit 1, \"Cannot find Auspice config file in: ${params.auspice_config}\" }\n    .set { config_export }",
        "origin": [
            [
                "\"${params.config}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "config_export",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel\n        .fromPath( \"${params.mask}\")\n        .ifEmpty { exit 1, \"Cannot find input BED file in: ${params.mask}\" }\n        .set { bed_file }",
        "origin": [
            [
                "\"${params.mask}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "bed_file",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "Channel\n        .from( \"${params.mask}\")\n        .set { bed_file }",
        "origin": [],
        "gives": [
            [
                "bed_file",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "Channel\n        .fromPath( \"${params.sequences}\")\n        .ifEmpty { exit 1, \"Cannot find input sequences in: ${params.sequences}\" }\n        .set { sequences }",
        "origin": [
            [
                "\"${params.sequences}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "sequences",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "Channel\n        .fromPath( \"${params.filter}\")\n        .ifEmpty { exit 1, \"Cannot find filter file in: ${params.filter}\" }\n        .set { dropped_strains }",
        "origin": [
            [
                "\"${params.filter}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "dropped_strains",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "Channel\n        .fromPath( \"${params.sequences}\")\n        .ifEmpty { exit 1, \"Cannot find input sequences in: ${params.sequences}\" }\n        .set { input_sequences }",
        "origin": [
            [
                "\"${params.sequences}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "input_sequences",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "Channel\n        .from( \"${params.traits}\")\n        .set { traits_export }",
        "origin": [],
        "gives": [
            [
                "traits_export",
                "P"
            ]
        ]
    }
}