{
    "download_dbcan": {
        "name_process": "download_dbcan",
        "string_process": "\nprocess download_dbcan {\n    label \"download\"\n    label \"small_task\"\n\n    input:\n    val url\n\n    output:\n    path 'dbcan.txt', emit: downloaded_db\n\n    script:\n    \"\"\"\n    wget -O dbcan.txt \"${url}\"\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    wget -O dbcan.txt \"${url}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "url"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ccdmb__catastrophy-pipeline",
        "directive": [
            "label \"download\"",
            "label \"small_task\""
        ],
        "when": "",
        "stub": ""
    },
    "hmmpress": {
        "name_process": "hmmpress",
        "string_process": "\nprocess hmmpress {\n\n    label \"hmmer\"\n    label \"small_task\"\n\n    input:\n    path \"database.txt\"\n\n    output:\n    tuple path(\"database.txt\"),\n          path(\"database.txt.h3f\"),\n          path(\"database.txt.h3i\"),\n          path(\"database.txt.h3m\"),\n          path(\"database.txt.h3p\"), emit: pressed_hmms\n\n    script:\n    \"\"\"\n    hmmpress database.txt\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    hmmpress database.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ccdmb__catastrophy-pipeline",
        "directive": [
            "label \"hmmer\"",
            "label \"small_task\""
        ],
        "when": "",
        "stub": ""
    },
    "hmmscan": {
        "name_process": "hmmscan",
        "string_process": "\nprocess hmmscan {\n\n    label \"hmmer\"\n    label \"small_task\"\n\n    tag \"${name}\"\n\n    input:\n    tuple path(\"database.txt\"),\n          path(\"database.txt.h3f\"),\n          path(\"database.txt.h3i\"),\n          path(\"database.txt.h3m\"),\n          path(\"database.txt.h3p\")\n    tuple val(name), path(proteome)\n\n    output:\n    tuple val(name), path(\"${name}.csv\"), emit: domtab\n    tuple val(name), path(\"${name}.txt\"), emit: txt\n\n    script:\n    \"\"\"\n    hmmscan \\\n        --domtblout \"${name}.csv\" \\\n        database.txt \\\n        \"${proteome}\" \\\n    > \"${name}.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    hmmscan \\\n        --domtblout \"${name}.csv\" \\\n        database.txt \\\n        \"${proteome}\" \\\n    > \"${name}.txt\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "proteome"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ccdmb__catastrophy-pipeline",
        "directive": [
            "label \"hmmer\"",
            "label \"small_task\"",
            "tag \"${name}\""
        ],
        "when": "",
        "stub": ""
    },
    "catastrophy": {
        "name_process": "catastrophy",
        "string_process": "\nprocess catastrophy {\n\n    label \"catastrophy\"\n    label \"small_task\"\n\n    input:\n    val version\n    val names\n    path domtabs\n\n    output:\n    path \"catastrophy.tsv\"\n    path \"catastrophy_pca.tsv\"\n    path \"catastrophy_counts.tsv\"\n\n    script:\n    \"\"\"\n    catastrophy \\\n        --format \"hmmer_domtab\" \\\n        --model \"${version}\" \\\n        --outfile \"catastrophy.tsv\" \\\n        --pca \"catastrophy_pca.tsv\" \\\n        --counts \"catastrophy_counts.tsv\" \\\n        --label ${names.join(\" \")} \\\n        -- \\\n        ${domtabs}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    catastrophy \\\n        --format \"hmmer_domtab\" \\\n        --model \"${version}\" \\\n        --outfile \"catastrophy.tsv\" \\\n        --pca \"catastrophy_pca.tsv\" \\\n        --counts \"catastrophy_counts.tsv\" \\\n        --label ${names.join(\" \")} \\\n        -- \\\n        ${domtabs}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "version",
            "names",
            "domtabs"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ccdmb__catastrophy-pipeline",
        "directive": [
            "label \"catastrophy\"",
            "label \"small_task\""
        ],
        "when": "",
        "stub": ""
    },
    "publish_it": {
        "name_process": "publish_it",
        "string_process": "\nprocess publish_it {\n\n    label \"process_low\"\n    label \"posix\"\n\n    publishDir \"${params.outdir}\", saveAs: { name }\n\n    input:\n    tuple val(name), path(\"infile\")\n\n    output:\n    path \"infile\", includeInputs: true\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ccdmb__catastrophy-pipeline",
        "directive": [
            "label \"process_low\"",
            "label \"posix\"",
            "publishDir \"${params.outdir}\", saveAs: { name }"
        ],
        "when": "",
        "stub": ""
    }
}