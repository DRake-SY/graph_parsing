{
    "OPERATION_1": {
        "string": "Channel\n    .fromPath(params.table_vcf_location)\n    .ifEmpty { exit 1, \"Cannot find input file : ${params.table_vcf_location}\" }\n    .splitCsv(skip:1)\n    .map {file_name, vcf, vcf_idx -> [ file_name, file(vcf), file(vcf_idx) ] }\n    .take( params.number_of_files_to_process )\n    .set { ch_input_list }",
        "origin": [
            [
                "params.table_vcf_location",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_input_list",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(params.region_file_location)\n    .ifEmpty { exit 1, \"Cannot find input file : ${params.region_file_location}\" }\n    .set { ch_region_file }",
        "origin": [
            [
                "params.region_file_location",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_region_file",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "ch_reformatted = ch_input_list",
        "origin": [
            [
                "ch_input_list",
                "P"
            ]
        ],
        "gives": [
            [
                "ch_reformatted",
                "P"
            ]
        ]
    }
}