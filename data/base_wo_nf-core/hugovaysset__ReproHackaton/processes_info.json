{
    "getFASTQ": {
        "name_process": "getFASTQ",
        "string_process": "\nprocess getFASTQ {\n                                                                                  \n                                                                                         \n                                                              \n\n    input:\n    val SRAID from SRA\n\n    output:\n                                                                         \n                                       \n    tuple val(\"${SRAID}\"), file(\"${SRAID}_1.fastq.gz\"), file(\"${SRAID}_2.fastq.gz\") into fastq_files_to_map, fastq_files_to_qc, fastq_files_to_screen\n    \n    script:\n    \"\"\"\n    fastq-dump --gzip --split-files ${SRAID}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    fastq-dump --gzip --split-files ${SRAID}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "SRA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastq_files_to_map",
            "fastq_files_to_qc",
            "fastq_files_to_screen"
        ],
        "nb_outputs": 3,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getChrSeq": {
        "name_process": "getChrSeq",
        "string_process": "\nprocess getChrSeq {\n                                                                               \n                                                              \n\n    input:\n    val chr from chr_list\n    \n    output:\n    file \"*.fa.gz\" into chrfa\n    \n    script:\n    \"\"\"\n    wget -O chr${chr}.fa.gz ftp://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.${chr}.fa.gz\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    wget -O chr${chr}.fa.gz ftp://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.${chr}.fa.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr_list"
        ],
        "nb_inputs": 1,
        "outputs": [
            "chrfa"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "makeGenomeIndex": {
        "name_process": "makeGenomeIndex",
        "string_process": "\nprocess makeGenomeIndex {\n                                                      \n                                                                  \n                                                                                                \n                                                                        \n\n    input:\n    file '*.fa.gz' from chrfa.collect()\n\n    output:\n    path ref into genome_idx\n\n    script:\n    \"\"\"\n    gunzip -c *.fa.gz > ref.fa \n    mkdir ref\n    STAR --runThreadN ${task.cpus} --runMode genomeGenerate --genomeDir ref/ --genomeFastaFiles ref.fa\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    gunzip -c *.fa.gz > ref.fa \n    mkdir ref\n    STAR --runThreadN ${task.cpus} --runMode genomeGenerate --genomeDir ref/ --genomeFastaFiles ref.fa\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "chrfa"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genome_idx"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "mapFASTQ": {
        "name_process": "mapFASTQ",
        "string_process": "\nprocess mapFASTQ {\n                                                                                    \n                      \n\n    input:\n    path ref from genome_idx\n    tuple val(SRAID), file(\"read1.fa.gz\"), file(\"read2.fa.gz\") from fastq_files_to_map\n\n    output:\n    file \"${SRAID}.bam\" into bamfiles\n    file \"*Log.final.out\" into star_stats\n\n                                                                              \n                                              \n    script:\n    \"\"\"\n    STAR --genomeDir ${ref} \\\n        --runThreadN ${task.cpus} \\\n        --readFilesCommand zcat \\\n        --readFilesIn read1.fa.gz read2.fa.gz \\\n        --outSAMtype BAM SortedByCoordinate \\\n        --outSAMstrandField intronMotif \\\n        --outSAMunmapped None \\\n        --outFilterMismatchNmax 4 \\\n        --outFilterMultimapNmax 10 \\\n        --outStd BAM_SortedByCoordinate \\\n        --genomeLoad NoSharedMemory \\\n        --outFileNamePrefix ${SRAID} \\\n        --limitBAMsortRAM ${task.memory.toBytes()} > ${SRAID}.bam \n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    STAR --genomeDir ${ref} \\\n        --runThreadN ${task.cpus} \\\n        --readFilesCommand zcat \\\n        --readFilesIn read1.fa.gz read2.fa.gz \\\n        --outSAMtype BAM SortedByCoordinate \\\n        --outSAMstrandField intronMotif \\\n        --outSAMunmapped None \\\n        --outFilterMismatchNmax 4 \\\n        --outFilterMultimapNmax 10 \\\n        --outStd BAM_SortedByCoordinate \\\n        --genomeLoad NoSharedMemory \\\n        --outFileNamePrefix ${SRAID} \\\n        --limitBAMsortRAM ${task.memory.toBytes()} > ${SRAID}.bam \n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome_idx",
            "fastq_files_to_map"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bamfiles",
            "star_stats"
        ],
        "nb_outputs": 2,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getAnnotations": {
        "name_process": "getAnnotations",
        "string_process": "\nprocess getAnnotations {\n                                                                                               \n                               \n\n    output:\n    file 'Homo_sapiens.GRCh38.101.chr.gtf' into gtf_file\n\n    script: \n    \"\"\"\n    wget ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.chr.gtf.gz\n    gunzip Homo_sapiens.GRCh38.101.chr.gtf.gz\n    \"\"\" \n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    wget ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.chr.gtf.gz\n    gunzip Homo_sapiens.GRCh38.101.chr.gtf.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "gtf_file"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexBAM": {
        "name_process": "indexBAM",
        "string_process": "\nprocess indexBAM {\n                                                                                        \n                                                             \n\n    publishDir \"results/BAM_files\", mode: 'symlink' \n                                                                     \n    \n    input:\n    file bam from bamfiles\n\n    output:\n    tuple file(\"${bam}.bai\"), file(\"${bam}\") into indexedBAM_1, indexedBAM_2\n\n    script:\n    \"\"\"\n    samtools index ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    samtools index ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamfiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "indexedBAM_1",
            "indexedBAM_2"
        ],
        "nb_outputs": 2,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/BAM_files\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "countFeature": {
        "name_process": "countFeature",
        "string_process": "\nprocess countFeature {\n                                                                                        \n                                                                        \n\n    input:\n    file \"input.gtf\" from gtf_file\n    file bam from indexedBAM_1.flatten().filter(~/.*bam$/).collect() \n                                                                                         \n                                         \n\n\n    output:\n    file \"output_gene.counts\" into counts\n    file \"output_gene.counts.summary\" into counts_summary\n\n    script:\n    \"\"\"\n    featureCounts -T ${task.cpus} -t gene -g gene_id -s 0 -a input.gtf -o output_gene.counts ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    featureCounts -T ${task.cpus} -t gene -g gene_id -s 0 -a input.gtf -o output_gene.counts ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "gtf_file",
            "indexedBAM_1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "counts",
            "counts_summary"
        ],
        "nb_outputs": 2,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "countExon": {
        "name_process": "countExon",
        "string_process": "\nprocess countExon {\n                                                                                            \n                              \n                                                     \n\n    input:\n    file \"input.gtf\" from gtf_file\n    file bam from indexedBAM_2.flatten().filter(~/.*bam$/).collect() \n                                                                                              \n                                    \n\n\n    output:\n    file \"output_exon.counts\" into exoncounts\n    file \"output_exon.counts.summary\" into exoncounts_summary\n\n    script:\n    \"\"\"\n    featureCounts -T ${task.cpus} -f -s 0 -a input.gtf -o output_exon.counts ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    featureCounts -T ${task.cpus} -f -s 0 -a input.gtf -o output_exon.counts ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "gtf_file",
            "indexedBAM_2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "exoncounts",
            "exoncounts_summary"
        ],
        "nb_outputs": 2,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "statAnalysis": {
        "name_process": "statAnalysis",
        "string_process": "\nprocess statAnalysis {\n                                                                              \n                                                                                                 \n                               \n                                                                                                \n    publishDir \"results/DE_genes\", mode: 'symlink'\n\n    input:\n    file input from counts                            \n    file metadata from samples_metadata_1            \n\n    output:\n    file \"gene_express_FC.csv\"\n\n    script:\n    \"\"\"\n    statsAnalysis.R ${input} ${metadata} \"gene_express_FC.csv\"\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    statsAnalysis.R ${input} ${metadata} \"gene_express_FC.csv\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "counts",
            "samples_metadata_1"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/DE_genes\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "statAnalysisSplicing": {
        "name_process": "statAnalysisSplicing",
        "string_process": "\nprocess statAnalysisSplicing {\n                                                                              \n                                                                                                \n                                                                \n                                                                                             \n    publishDir \"results/DE_splicing\", mode: 'symlink'\n\n    input:\n    file input from exoncounts                            \n    file metadata from samples_metadata_2            \n    file gtf from gtf_file\n\n    output:\n    file \"DEXSeq_subread.rds\"\n    file \"DEXseq_results*\"\n\n    script:\n    \"\"\"\n    statsAnalysisSplicing.R ${input} ${metadata} ${gtf} \"DEXSeq_subread.rds\" ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    statsAnalysisSplicing.R ${input} ${metadata} ${gtf} \"DEXSeq_subread.rds\" ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "exoncounts",
            "samples_metadata_2",
            "gtf_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/DE_splicing\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n                                                                           \n    publishDir \"results/fastqc_results\", mode: 'symlink'\n\n    input:\n    tuple val(SRAID), file(read1), file(read2) from fastq_files_to_qc\n\n    output:\n    tuple file(\"${SRAID}_1_fastqc.html\"), file(\"${SRAID}_2_fastqc.html\")\n    tuple file(\"${SRAID}_1_fastqc.zip\"), file(\"${SRAID}_2_fastqc.zip\") into fastqc_results\n\n    script:\n    \"\"\"\n    fastqc -f fastq -q --threads ${task.cpus} ${read1} ${read2}\n    \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    fastqc -f fastq -q --threads ${task.cpus} ${read1} ${read2}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fastq_files_to_qc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/fastqc_results\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "get_fastq_screen_genomes": {
        "name_process": "get_fastq_screen_genomes",
        "string_process": "\nprocess get_fastq_screen_genomes {\n                                                \n    output:\n    path \"FastQ_Screen_Genomes\" into FastQ_Screen_Genomes\n\n    script:\n    \"\"\"\n    fastq_screen --get_genomes\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "    \"\"\"\n    fastq_screen --get_genomes\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "FastQ_Screen_Genomes"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "fastq_screen": {
        "name_process": "fastq_screen",
        "string_process": "\nprocess fastq_screen {\n                                                                                              \n                                                                \n                                  \n    publishDir \"results/fqscreen_results\", mode:'symlink'\n\n    input:\n    tuple val(SRAID), file(read1), file(read2) from fastq_files_to_screen\n    path \"FastQ_Screen_Genomes\" from FastQ_Screen_Genomes\n\n    output:\n    file(\"*_screen.txt\") into fastq_screen_txt\n    tuple file(\"*_screen.html\"), file(\"*_screen.png\")\n    \n    script:\n    \"\"\"\n    sed -i \"s|/.*/FastQ_Screen_Genomes|\\$PWD/FastQ_Screen_Genomes|g\" ./FastQ_Screen_Genomes/fastq_screen.conf\n    fastq_screen --threads ${task.cpus}\\\n                 --conf ./FastQ_Screen_Genomes/fastq_screen.conf \\\n                 --aligner bowtie2\\\n                 ${read1} ${read2}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    sed -i \"s|/.*/FastQ_Screen_Genomes|\\$PWD/FastQ_Screen_Genomes|g\" ./FastQ_Screen_Genomes/fastq_screen.conf\n    fastq_screen --threads ${task.cpus}\\\n                 --conf ./FastQ_Screen_Genomes/fastq_screen.conf \\\n                 --aligner bowtie2\\\n                 ${read1} ${read2}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastq_files_to_screen",
            "FastQ_Screen_Genomes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "fastq_screen_txt"
        ],
        "nb_outputs": 1,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/fqscreen_results\", mode:'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "multi_qc": {
        "name_process": "multi_qc",
        "string_process": "\nprocess multi_qc{\n                                                                                         \n                                             \n                                                                             \n    publishDir \"results/multiqc_results\", mode:'symlink'\n\n    input:\n    file fastqc from fastqc_results.collect()\n    file star from star_stats.collect()\n    file 'outputs_gene.count.summary' from counts_summary\n    file 'outputs_exon.count.summary' from exoncounts_summary\n    file fastq_screen from fastq_screen_txt.collect()\n\n    output:\n    file \"multiqc_report.html\"\n    file \"multiqc_data\"\n\n    script:\n    \"\"\"\n    multiqc .\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    multiqc .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_results",
            "star_stats",
            "counts_summary",
            "exoncounts_summary",
            "fastq_screen_txt"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hugovaysset__ReproHackaton",
        "directive": [
            "publishDir \"results/multiqc_results\", mode:'symlink'"
        ],
        "when": "",
        "stub": ""
    }
}