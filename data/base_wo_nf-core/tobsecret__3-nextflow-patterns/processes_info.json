{
    "software_that_requires_as_custom_config": {
        "name_process": "software_that_requires_as_custom_config",
        "string_process": "\nprocess software_that_requires_as_custom_config {\n    publishDir \"custom_config\"\n    input:\n    set val(genome_names), file(genome_fastas) from input_ch\n    output:\n    file(custom_config) into output_ch\n    script:\n    custom_config = 'custom.config'\n    name_fasta_pairing = [genome_names, genome_fastas.collect()].transpose()                                                                         \n    config_file = \"\"\"\n                  #list of all our genome_names and genome_fastas:\\\\n\n                  ${name_fasta_pairing.collect{\"${it[0]} = ${it[1]}\\\\n\"}.join()}\n    \"\"\".stripIndent().split('\\n').join('')\n    \"\"\"\n    printf '$config_file' >> $custom_config\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    custom_config = 'custom.config'\n    name_fasta_pairing = [genome_names, genome_fastas.collect()].transpose()                                                                         \n    config_file = \"\"\"\n                  #list of all our genome_names and genome_fastas:\\\\n\n                  ${name_fasta_pairing.collect{\"${it[0]} = ${it[1]}\\\\n\"}.join()}\n    \"\"\".stripIndent().split('\\n').join('')\n    \"\"\"\n    printf '$config_file' >> $custom_config\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "output_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "tobsecret__3-nextflow-patterns",
        "directive": [
            "publishDir \"custom_config\""
        ],
        "when": "",
        "stub": ""
    },
    "someprocess": {
        "name_process": "someprocess",
        "string_process": "\nprocess someprocess {\n    publishDir \"fruits\", pattern: '*.fruit', saveAs: { \"${file(it).getSimpleName()}.${file(it).getExtension()}\"}\n    publishDir \"pastries\", pattern: '*.pastry'\n    input:\n    set val(fruit), val(pastry) from input_ch\n    output:\n    set file(fruit_file), file(pastry_file) into output_ch\n    script:\n    fruit_file = \"${fruit}.pastry.fruit\"\n    pastry_file = \"${pastry}.fruit.pastry\"\n    \"\"\"\n    touch $fruit_file\n    touch $pastry_file\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    fruit_file = \"${fruit}.pastry.fruit\"\n    pastry_file = \"${pastry}.fruit.pastry\"\n    \"\"\"\n    touch $fruit_file\n    touch $pastry_file\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "output_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "tobsecret__3-nextflow-patterns",
        "directive": [
            "publishDir \"fruits\", pattern: '*.fruit', saveAs: { \"${file(it).getSimpleName()}.${file(it).getExtension()}\"}",
            "publishDir \"pastries\", pattern: '*.pastry'"
        ],
        "when": "",
        "stub": ""
    }
}