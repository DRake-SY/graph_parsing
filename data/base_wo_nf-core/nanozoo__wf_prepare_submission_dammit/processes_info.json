{
    "validate_single_fastq": {
        "name_process": "validate_single_fastq",
        "string_process": "\nprocess validate_single_fastq {\n  label 'ubuntu'  \n    publishDir \"${params.output}/\", mode: 'copy', pattern: \"${name}_ENA_qc_check.txt\"\n  input:\n    tuple val(name), file(read)\n\n  output:\n    tuple val(name), file(\"${name}_ENA_qc_check.txt\") optional true\n\n  script:\n    \"\"\"\n    fastq_lines=\\$(gzip -d -c ${read} | wc -l)\n\n    if (( \\${fastq_lines} % 4 == 0 ))         \n    then\n      echo \"${read} passed ENA qc check\" \n    else\n      echo \"${read} FASTQ check NOT passed, lines: \\${fastq_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    fastq_lines=\\$(gzip -d -c ${read} | wc -l)\n\n    if (( \\${fastq_lines} % 4 == 0 ))         \n    then\n      echo \"${read} passed ENA qc check\" \n    else\n      echo \"${read} FASTQ check NOT passed, lines: \\${fastq_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "read"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"${name}_ENA_qc_check.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "sample_template_wastewater_sludge": {
        "name_process": "sample_template_wastewater_sludge",
        "string_process": "\nprocess sample_template_wastewater_sludge {\n  label 'label'  \n                                                                                    \n  \n  input:\n    tuple val(name), file(inputform)\n  \n  output:\n    file(\"${name}.templateSamples\")\n  \n  script:\n    \"\"\"\n    \n    technology=\\$(grep \"@technology;\" ${inputform} | cut -f2 -d\";\")\n    projectname=\\$(grep \"@projectname;\" ${inputform} | cut -f2 -d\";\")\n    year=\\$(grep \"@year;\" ${inputform} | cut -f2 -d\";\")\n    country=\\$(grep \"@country;\" ${inputform} | cut -f2 -d\";\")\n    latitude=\\$(grep \"@latitude;\" ${inputform} | cut -f2 -d\";\")\n    longitude=\\$(grep \"@longitude;\" ${inputform} | cut -f2 -d\";\")\n    biome=\\$(grep \"@environment (biome);\" ${inputform} | cut -f2 -d\";\")\n    feature=\\$(grep \"@environment (feature);\" ${inputform} | cut -f2 -d\";\")\n    material=\\$(grep \"@environment (material);\" ${inputform} | cut -f2 -d\";\")\n\n    printf \"${name}-\\${technology}\\\\t256318\\\\tmetagenome\\\\t\\\\t${name}\\\\tmetagenome\\\\t\\${projectname}\\\\t\\${technology}\\\\tmetagenome\\\\t\\${year}\" >>${name}.templateSamples\n    printf \"\\\\t\\${country}\\\\t\\${latitude}\\\\t\\${longitude}\\\\twastewater/sludge\\\\t\\${biome}\\\\t\\${feature}\\\\t\\${material}\\n\" >>${name}.templateSamples\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    \n    technology=\\$(grep \"@technology;\" ${inputform} | cut -f2 -d\";\")\n    projectname=\\$(grep \"@projectname;\" ${inputform} | cut -f2 -d\";\")\n    year=\\$(grep \"@year;\" ${inputform} | cut -f2 -d\";\")\n    country=\\$(grep \"@country;\" ${inputform} | cut -f2 -d\";\")\n    latitude=\\$(grep \"@latitude;\" ${inputform} | cut -f2 -d\";\")\n    longitude=\\$(grep \"@longitude;\" ${inputform} | cut -f2 -d\";\")\n    biome=\\$(grep \"@environment (biome);\" ${inputform} | cut -f2 -d\";\")\n    feature=\\$(grep \"@environment (feature);\" ${inputform} | cut -f2 -d\";\")\n    material=\\$(grep \"@environment (material);\" ${inputform} | cut -f2 -d\";\")\n\n    printf \"${name}-\\${technology}\\\\t256318\\\\tmetagenome\\\\t\\\\t${name}\\\\tmetagenome\\\\t\\${projectname}\\\\t\\${technology}\\\\tmetagenome\\\\t\\${year}\" >>${name}.templateSamples\n    printf \"\\\\t\\${country}\\\\t\\${latitude}\\\\t\\${longitude}\\\\twastewater/sludge\\\\t\\${biome}\\\\t\\${feature}\\\\t\\${material}\\n\" >>${name}.templateSamples\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "inputform"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'label'"
        ],
        "when": "",
        "stub": ""
    },
    "experiment_template_single": {
        "name_process": "experiment_template_single",
        "string_process": "\nprocess experiment_template_single {\n  label 'label'  \n                                                                                    \n  \n  input:\n    tuple val(name), file(file)\n  \n  output:\n    file(\"${name}.experimentsSamples\")\n  \n  script:\n    \"\"\"\n    md5sum_value=\\$(cat ${file} | cut -f1 -d \" \")\n    file_name_value=\\$(cat ${file} | rev | cut -f1 -d \" \" | rev)\n\n    printf \"${name}-nanopore\\\\tMinION\\\\tLSK-109\\\\tMETAGENOMIC\\\\tunspecified\\\\tWGS\\\\t\\\\t\\\\t\\${file_name_value}\\\\t\\${md5sum_value}\\\\n\" > ${name}.experimentsSamples\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    md5sum_value=\\$(cat ${file} | cut -f1 -d \" \")\n    file_name_value=\\$(cat ${file} | rev | cut -f1 -d \" \" | rev)\n\n    printf \"${name}-nanopore\\\\tMinION\\\\tLSK-109\\\\tMETAGENOMIC\\\\tunspecified\\\\tWGS\\\\t\\\\t\\\\t\\${file_name_value}\\\\t\\${md5sum_value}\\\\n\" > ${name}.experimentsSamples\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'label'"
        ],
        "when": "",
        "stub": ""
    },
    "parse_yml": {
        "name_process": "parse_yml",
        "string_process": "\nprocess parse_yml {\n  label 'label'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"parsed.txt\"\n  \n  input:\n    file(yml)\n    file(script)\n  \n  output:\n    file(\"parsed.txt\")\n  \n  script:\n    \"\"\"\n    #!/usr/bin/env bash\n    source ${script}\n    parse_yml ${yml} \"CONF_\" > parsed.txt\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    #!/usr/bin/env bash\n    source ${script}\n    parse_yml ${yml} \"CONF_\" > parsed.txt\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "denvax"
        ],
        "tools_url": [
            "https://bio.tools/denvax"
        ],
        "tools_dico": [
            {
                "name": "denvax",
                "uri": "https://bio.tools/denvax",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3379",
                            "term": "Preclinical and clinical studies"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatric medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "https://en.wikipedia.org/wiki/Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0560",
                                    "term": "DNA vaccine design"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Serostatus testing and dengue vaccine cost-benefit thresholds | R package for manuscript \"Serostatus Testing & Dengue Vaccine Cost Benefit Thresholds\"",
                "homepage": "https://cran.r-project.org/web/packages/denvax/index.html"
            }
        ],
        "inputs": [
            "yml",
            "script"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'label'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"parsed.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "experiment_template_paired_collect": {
        "name_process": "experiment_template_paired_collect",
        "string_process": "\nprocess experiment_template_paired_collect {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"experiment_template.tsv\"\n  \n  input:\n    file(combined)\n  \n  output:\n    file(\"experiment_template.tsv\")\n  \n  script:\n    \"\"\"\n    # header\n    printf \"sample_alias\\\\tinstrument_model\\\\tlibrary_name\\\\tlibrary_source\\\\tlibrary_selection\" >> experiment_template.tsv\n    printf \"\\\\tlibrary_strategy\\\\tdesign_description\\\\tlibrary_construction_protocol\\\\tinsert_size\" >> experiment_template.tsv\n    printf \"\\\\tforward_file_name\\\\tforward_file_md5\\\\treverse_file_name\\\\treverse_file_md5\\\\n\" >> experiment_template.tsv\n    \n    # collect and add\n    cat *.experimentsSamples >> experiment_template.tsv \n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    # header\n    printf \"sample_alias\\\\tinstrument_model\\\\tlibrary_name\\\\tlibrary_source\\\\tlibrary_selection\" >> experiment_template.tsv\n    printf \"\\\\tlibrary_strategy\\\\tdesign_description\\\\tlibrary_construction_protocol\\\\tinsert_size\" >> experiment_template.tsv\n    printf \"\\\\tforward_file_name\\\\tforward_file_md5\\\\treverse_file_name\\\\treverse_file_md5\\\\n\" >> experiment_template.tsv\n    \n    # collect and add\n    cat *.experimentsSamples >> experiment_template.tsv \n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "combined"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"experiment_template.tsv\""
        ],
        "when": "",
        "stub": ""
    },
    "experiment_template_single_collect": {
        "name_process": "experiment_template_single_collect",
        "string_process": "\nprocess experiment_template_single_collect {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"experiment_template.tsv\"\n  \n  input:\n    file(combined)\n  \n  output:\n    file(\"experiment_template.tsv\")\n  \n  script:\n    \"\"\"\n    # header\n    printf \"sample_alias\\\\tinstrument_model\\\\tlibrary_name\\\\tlibrary_source\\\\tlibrary_selection\" >> experiment_template.tsv\n    printf \"\\\\tlibrary_strategy\\\\tdesign_description\\\\tlibrary_construction_protocol\\\\tfile_name\\\\tfile_md5\\\\n\" >> experiment_template.tsv\n\n\n    # collect and add\n    cat *.experimentsSamples >> experiment_template.tsv \n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    # header\n    printf \"sample_alias\\\\tinstrument_model\\\\tlibrary_name\\\\tlibrary_source\\\\tlibrary_selection\" >> experiment_template.tsv\n    printf \"\\\\tlibrary_strategy\\\\tdesign_description\\\\tlibrary_construction_protocol\\\\tfile_name\\\\tfile_md5\\\\n\" >> experiment_template.tsv\n\n\n    # collect and add\n    cat *.experimentsSamples >> experiment_template.tsv \n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "combined"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"experiment_template.tsv\""
        ],
        "when": "",
        "stub": ""
    },
    "create_input_basic": {
        "name_process": "create_input_basic",
        "string_process": "\nprocess create_input_basic {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.txt\"\n  \n  output:\n    file(\"INPUT_FORM.txt\")\n  \n  script:\n    \"\"\"\n    year=\\$(date +\"%Y\")\n\n    printf \"# This files summarizes inputs needed to fill out the template files\\\\n\" > INPUT_FORM.txt\n    printf \"# Dont replace the @ values, only the examples after the ';'\\\\n\" >> INPUT_FORM.txt\n    printf \"@NAME;YOUR_INPUT_MODIFY_THIS_COLUMN\\\\n\" >> INPUT_FORM.txt\n    printf \"@technology;illumina\\\\n\" >> INPUT_FORM.txt\n    printf \"@projectname;RiB-DFG\\\\n\" >> INPUT_FORM.txt\n    printf \"@year;\\${year}\\\\n\" >> INPUT_FORM.txt\n    printf \"@country;Sweden\\\\n\" >> INPUT_FORM.txt\n    printf \"@latitude;59.858562\\\\n\" >> INPUT_FORM.txt\n    printf \"@longitude;17.638927\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (biome);anaerobic digester\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (feature);reactor\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (material);sludge\\\\n\" >> INPUT_FORM.txt\n    printf \"# latitude and longitude go the googlemaps and enter the place city\\\\n\" >> INPUT_FORM.txt\n    printf \"# alternatively change it later during subbmission individually\\\\n\" >> INPUT_FORM.txt\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    year=\\$(date +\"%Y\")\n\n    printf \"# This files summarizes inputs needed to fill out the template files\\\\n\" > INPUT_FORM.txt\n    printf \"# Dont replace the @ values, only the examples after the ';'\\\\n\" >> INPUT_FORM.txt\n    printf \"@NAME;YOUR_INPUT_MODIFY_THIS_COLUMN\\\\n\" >> INPUT_FORM.txt\n    printf \"@technology;illumina\\\\n\" >> INPUT_FORM.txt\n    printf \"@projectname;RiB-DFG\\\\n\" >> INPUT_FORM.txt\n    printf \"@year;\\${year}\\\\n\" >> INPUT_FORM.txt\n    printf \"@country;Sweden\\\\n\" >> INPUT_FORM.txt\n    printf \"@latitude;59.858562\\\\n\" >> INPUT_FORM.txt\n    printf \"@longitude;17.638927\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (biome);anaerobic digester\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (feature);reactor\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (material);sludge\\\\n\" >> INPUT_FORM.txt\n    printf \"# latitude and longitude go the googlemaps and enter the place city\\\\n\" >> INPUT_FORM.txt\n    printf \"# alternatively change it later during subbmission individually\\\\n\" >> INPUT_FORM.txt\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "experiment_template_paired": {
        "name_process": "experiment_template_paired",
        "string_process": "\nprocess experiment_template_paired {\n  label 'label'  \n                                                                                    \n  \n  input:\n    tuple val(name), file(file)\n  \n  output:\n    file(\"${name}.experimentsSamples\")\n  \n  script:\n    \"\"\"\n    md5sum_value1=\\$(cat ${file[0]} | cut -f1 -d \" \")\n    file_name_value1=\\$(cat ${file[0]} | rev | cut -f1 -d \" \" | rev)\n\n    md5sum_value2=\\$(cat ${file[1]} | cut -f1 -d \" \")\n    file_name_value2=\\$(cat ${file[1]} | rev | cut -f1 -d \" \" | rev )\n\n    printf \"${name}-illumina\\\\tIllumina MiSeq\\\\tfastq\\\\tMETAGENOMIC\\\\tunspecified\\\\t\" > ${name}.experimentsSamples\n    printf \"WGS\\\\t\\\\t\\\\t150\\\\t\\${file_name_value1}\\\\t\\${md5sum_value1}\\\\t\\${file_name_value2}\\\\t\\${md5sum_value2}\\\\n\" >> ${name}.experimentsSamples\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    md5sum_value1=\\$(cat ${file[0]} | cut -f1 -d \" \")\n    file_name_value1=\\$(cat ${file[0]} | rev | cut -f1 -d \" \" | rev)\n\n    md5sum_value2=\\$(cat ${file[1]} | cut -f1 -d \" \")\n    file_name_value2=\\$(cat ${file[1]} | rev | cut -f1 -d \" \" | rev )\n\n    printf \"${name}-illumina\\\\tIllumina MiSeq\\\\tfastq\\\\tMETAGENOMIC\\\\tunspecified\\\\t\" > ${name}.experimentsSamples\n    printf \"WGS\\\\t\\\\t\\\\t150\\\\t\\${file_name_value1}\\\\t\\${md5sum_value1}\\\\t\\${file_name_value2}\\\\t\\${md5sum_value2}\\\\n\" >> ${name}.experimentsSamples\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'label'"
        ],
        "when": "",
        "stub": ""
    },
    "md5sum_paired_entry": {
        "name_process": "md5sum_paired_entry",
        "string_process": "\nprocess md5sum_paired_entry {\n  label 'ubuntu'  \n  input:\n    tuple val(name), file(read)\n\n  output:\n    tuple val(name), file(\"${name}*.checksum\")\n\n  script:\n    \"\"\"\n    if hash md5sum 2>/dev/null; then\n      md5sum ${read[0]}  > ${name}_R1.checksum\n      md5sum ${read[1]}  > ${name}_R2.checksum\n    else\n      md5 ${read[0]}  > ${name}_R1.checksum\n      md5 ${read[1]}  > ${name}_R2.checksum\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    if hash md5sum 2>/dev/null; then\n      md5sum ${read[0]}  > ${name}_R1.checksum\n      md5sum ${read[1]}  > ${name}_R2.checksum\n    else\n      md5 ${read[0]}  > ${name}_R1.checksum\n      md5 ${read[1]}  > ${name}_R2.checksum\n    fi\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "name",
            "read"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'"
        ],
        "when": "",
        "stub": ""
    },
    "create_input_wastewater_sludge": {
        "name_process": "create_input_wastewater_sludge",
        "string_process": "\nprocess create_input_wastewater_sludge {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.txt\"\n  \n  output:\n    file(\"INPUT_FORM.txt\")\n  \n  script:\n    \"\"\"\n    year=\\$(date +\"%Y\")\n\n    printf \"# This files summarizes inputs needed to fill out the template files\\\\n\" > INPUT_FORM.txt\n    printf \"# Dont replace the @ values, only the examples after the ';'\\\\n\" >> INPUT_FORM.txt\n    printf \"@NAME;YOUR_INPUT_MODIFY_THIS_COLUMN\\\\n\" >> INPUT_FORM.txt\n    printf \"@technology;illumina\\\\n\" >> INPUT_FORM.txt\n    printf \"@projectname;RiB-DFG\\\\n\" >> INPUT_FORM.txt\n    printf \"@year;\\${year}\\\\n\" >> INPUT_FORM.txt\n    printf \"@country;Sweden\\\\n\" >> INPUT_FORM.txt\n    printf \"@latitude;59.858562\\\\n\" >> INPUT_FORM.txt\n    printf \"@longitude;17.638927\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (biome);anaerobic digester\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (feature);reactor\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (material);sludge\\\\n\" >> INPUT_FORM.txt\n    printf \"# latitude and longitude go the googlemaps and enter the place city\\\\n\" >> INPUT_FORM.txt\n    printf \"# alternatively change it later during subbmission individually\\\\n\" >> INPUT_FORM.txt\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    year=\\$(date +\"%Y\")\n\n    printf \"# This files summarizes inputs needed to fill out the template files\\\\n\" > INPUT_FORM.txt\n    printf \"# Dont replace the @ values, only the examples after the ';'\\\\n\" >> INPUT_FORM.txt\n    printf \"@NAME;YOUR_INPUT_MODIFY_THIS_COLUMN\\\\n\" >> INPUT_FORM.txt\n    printf \"@technology;illumina\\\\n\" >> INPUT_FORM.txt\n    printf \"@projectname;RiB-DFG\\\\n\" >> INPUT_FORM.txt\n    printf \"@year;\\${year}\\\\n\" >> INPUT_FORM.txt\n    printf \"@country;Sweden\\\\n\" >> INPUT_FORM.txt\n    printf \"@latitude;59.858562\\\\n\" >> INPUT_FORM.txt\n    printf \"@longitude;17.638927\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (biome);anaerobic digester\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (feature);reactor\\\\n\" >> INPUT_FORM.txt\n    printf \"@environment (material);sludge\\\\n\" >> INPUT_FORM.txt\n    printf \"# latitude and longitude go the googlemaps and enter the place city\\\\n\" >> INPUT_FORM.txt\n    printf \"# alternatively change it later during subbmission individually\\\\n\" >> INPUT_FORM.txt\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "xml_get_study": {
        "name_process": "xml_get_study",
        "string_process": "\nprocess xml_get_study {\n  label 'label'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"project.xml\"\n  \n  input:\n    file(yml)\n    file(script)\n  \n  output:\n    file(\"project.xml\")\n  \n  script:\n    \"\"\"\n    #!/usr/bin/env bash\n\n    source ${script}\n    eval \\$(parse_yml ${yml} \"CONF_\")\n\n    cat >project.xml <<EOL\n<PROJECT_SET>\n   <PROJECT alias=\"\\${CONF_study_alias}\">\n      <TITLE>\"\\${CONF_study_title}\"</TITLE>\n      <DESCRIPTION>\"\\${CONF_study_description}\"</DESCRIPTION>\n      <SUBMISSION_PROJECT>\n         <SEQUENCING_PROJECT/>\n      </SUBMISSION_PROJECT>\n   </PROJECT>\n</PROJECT_SET>\n\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    #!/usr/bin/env bash\n\n    source ${script}\n    eval \\$(parse_yml ${yml} \"CONF_\")\n\n    cat >project.xml <<EOL\n<PROJECT_SET>\n   <PROJECT alias=\"\\${CONF_study_alias}\">\n      <TITLE>\"\\${CONF_study_title}\"</TITLE>\n      <DESCRIPTION>\"\\${CONF_study_description}\"</DESCRIPTION>\n      <SUBMISSION_PROJECT>\n         <SEQUENCING_PROJECT/>\n      </SUBMISSION_PROJECT>\n   </PROJECT>\n</PROJECT_SET>\n\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "denvax",
            "BTEVAL",
            "project"
        ],
        "tools_url": [
            "https://bio.tools/denvax",
            "https://bio.tools/bteval",
            "https://bio.tools/project"
        ],
        "tools_dico": [
            {
                "name": "denvax",
                "uri": "https://bio.tools/denvax",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3379",
                            "term": "Preclinical and clinical studies"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatric medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "https://en.wikipedia.org/wiki/Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0560",
                                    "term": "DNA vaccine design"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Serostatus testing and dengue vaccine cost-benefit thresholds | R package for manuscript \"Serostatus Testing & Dengue Vaccine Cost Benefit Thresholds\"",
                "homepage": "https://cran.r-project.org/web/packages/denvax/index.html"
            },
            {
                "name": "BTEVAL",
                "uri": "https://bio.tools/bteval",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The aim of BTEVAL server is to evaluate beta turn prediction algorithms on a uniform data set of 426 proteins or subsets of these proteins. It is the new data set in which no two protein chains have more that 25% sequence identity and each chain contains minimum one beta turn.",
                "homepage": "http://www.imtech.res.in/raghava/bteval"
            },
            {
                "name": "project",
                "uri": "https://bio.tools/project",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "project is a program that projects genomic features onto their sequences. Please contact Sarah Djebali (sarah dot djebali at crg dot es for any question).",
                "homepage": "http://big.crg.cat/services/project"
            }
        ],
        "inputs": [
            "yml",
            "script"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'label'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"project.xml\""
        ],
        "when": "",
        "stub": ""
    },
    "create_input_basic_yml": {
        "name_process": "create_input_basic_yml",
        "string_process": "\nprocess create_input_basic_yml {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.yml\"\n  \n  input:\n    tuple val(nano_name), file(nano_reads), file(nano_md5)\n    tuple val(illumina_name), file(illumina_reads), file(illumina_md5)\n\n  output:\n    file(\"INPUT_FORM.yml\")\n  \n  script:\n\"\"\"\n#!/usr/bin/env bash\n\nyear=\\$(date +\"%Y\")\n\n# STUDY\ncat >INPUT_FORM.yml <<EOF\nstudy:\n  alias: 'STUDY_ALIAS'\n  title: 'STUDY_TITLE'\n  description: 'STUDY_DESC'  \n\nsamples:\nEOF\n\n# SAMPLE\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  sample_set:\n    alias: '${nano_name}'\n    title: 'SAMPLE_TITLE'\n    sample_name: \n      taxon_id: 'ID, see standard taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html and environmental taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html#environmental-taxonomic-classifications'\n      scientific_name: 'NAME ACCORDING TO taxon_id'\n    sample_attributes:\n      sample_attribute:\n        tag: 'collection date'\n        value: 'yyyy-mm-dd'\n      sample_attribute:\n        tag: 'sequencing method'\n        value: 'Oxford Nanopore Technologies'\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  sample_set:\n    alias: '${illumina_name}'\n    title: 'SAMPLE_TITLE'\n    sample_name: \n      taxon_id: 'ID, see standard taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html and environmental taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html#environmental-taxonomic-classifications'\n      scientific_name: 'NAME ACCORDING TO taxon_id'\n    sample_attributes:\n      sample_attribute:\n        tag: 'collection date'\n        value: 'yyyy-mm-dd'\n      sample_attribute:\n        tag: 'sequencing method'\n        value: 'Illumina'\nEOF\ndone\n\n# EXPERIMENTS\ncat >>INPUT_FORM.yml <<EOF\n\nexperiments:\nEOF\n\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  experiment_set:\n    alias: 'exp_${nano_name}'\n    study_refname: 'STUDY_ALIAS'\n    design:\n      sample_refname: ${nano_name}\n      library_descriptor:\n        library_strategy: 'WGS'\n        library_source: 'METAGENOMIC'\n        library_selection: 'size fractionation'\n        library_layout:\n          single: \n        library_construction_protocol: 'We performed Nanopore sequencing ...'\n    platform: \n      nanopore:\n        instrument_model: 'Oxford Nanopore Technologies MinION'\n    experiment_attributes:\n      experiment_attribute:\n        tag: 'library preparation date'\n        value: 'yyyy-mm'\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  experiment_set:\n    alias: 'exp_${illumina_name}'\n    study_refname: 'STUDY_ALIAS'\n    design:\n      sample_refname: ${illumina_name}\n      library_descriptor:\n        library_strategy: 'WGS'\n        library_source: 'METAGENOMIC'\n        library_selection: 'size fractionation'\n        library_layout:\n          paired: \n            nominal_length: '300'\n        library_construction_protocol: 'Illumina libraries ...'\n    platform: \n      illumina:\n        instrument_model: 'Illumina MiSeq'\n    experiment_attributes:\n      experiment_attribute:\n        tag: 'library preparation date'\n        value: 'yyyy-mm'\nEOF\ndone\n\n# RUNS\ncat >>INPUT_FORM.yml <<EOF\n\nruns:\nEOF\n\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  run_set:\n    alias: 'run_${nano_name}'\n    experiment_ref: 'exp_${nano_name}'\n    data_block:\n      files:\n        file:\n          filename: '${nano_reads}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '35739c52e8d4f62fdf705af09d912c37'\n        file:\n          filename: 'fast5.tar.gz'\n          filetype: 'OxfordNanopore_native'\n          checksum_method: 'md5'\n          checksum: ''\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  run_set:\n    alias: 'run_${illumina_name}'\n    experiment_ref: 'exp_${illumina_name}'\n    data_block:\n      files:\n        file:\n          filename: '${illumina_reads[0]}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '5458d0fc235571bb0aa5ca89d5f24144'\n        file:\n          filename: '${illumina_reads[1]}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '43f76e73175fbe9587ca9e447a2ad0b8'\nEOF\ndone\n\n\n    \"\"\"\n}",
        "nb_lignes_process": 164,
        "string_script": "\"\"\"\n#!/usr/bin/env bash\n\nyear=\\$(date +\"%Y\")\n\n# STUDY\ncat >INPUT_FORM.yml <<EOF\nstudy:\n  alias: 'STUDY_ALIAS'\n  title: 'STUDY_TITLE'\n  description: 'STUDY_DESC'  \n\nsamples:\nEOF\n\n# SAMPLE\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  sample_set:\n    alias: '${nano_name}'\n    title: 'SAMPLE_TITLE'\n    sample_name: \n      taxon_id: 'ID, see standard taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html and environmental taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html#environmental-taxonomic-classifications'\n      scientific_name: 'NAME ACCORDING TO taxon_id'\n    sample_attributes:\n      sample_attribute:\n        tag: 'collection date'\n        value: 'yyyy-mm-dd'\n      sample_attribute:\n        tag: 'sequencing method'\n        value: 'Oxford Nanopore Technologies'\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  sample_set:\n    alias: '${illumina_name}'\n    title: 'SAMPLE_TITLE'\n    sample_name: \n      taxon_id: 'ID, see standard taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html and environmental taxonomies: https://ena-docs.readthedocs.io/en/latest/faq/taxonomy.html#environmental-taxonomic-classifications'\n      scientific_name: 'NAME ACCORDING TO taxon_id'\n    sample_attributes:\n      sample_attribute:\n        tag: 'collection date'\n        value: 'yyyy-mm-dd'\n      sample_attribute:\n        tag: 'sequencing method'\n        value: 'Illumina'\nEOF\ndone\n\n# EXPERIMENTS\ncat >>INPUT_FORM.yml <<EOF\n\nexperiments:\nEOF\n\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  experiment_set:\n    alias: 'exp_${nano_name}'\n    study_refname: 'STUDY_ALIAS'\n    design:\n      sample_refname: ${nano_name}\n      library_descriptor:\n        library_strategy: 'WGS'\n        library_source: 'METAGENOMIC'\n        library_selection: 'size fractionation'\n        library_layout:\n          single: \n        library_construction_protocol: 'We performed Nanopore sequencing ...'\n    platform: \n      nanopore:\n        instrument_model: 'Oxford Nanopore Technologies MinION'\n    experiment_attributes:\n      experiment_attribute:\n        tag: 'library preparation date'\n        value: 'yyyy-mm'\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  experiment_set:\n    alias: 'exp_${illumina_name}'\n    study_refname: 'STUDY_ALIAS'\n    design:\n      sample_refname: ${illumina_name}\n      library_descriptor:\n        library_strategy: 'WGS'\n        library_source: 'METAGENOMIC'\n        library_selection: 'size fractionation'\n        library_layout:\n          paired: \n            nominal_length: '300'\n        library_construction_protocol: 'Illumina libraries ...'\n    platform: \n      illumina:\n        instrument_model: 'Illumina MiSeq'\n    experiment_attributes:\n      experiment_attribute:\n        tag: 'library preparation date'\n        value: 'yyyy-mm'\nEOF\ndone\n\n# RUNS\ncat >>INPUT_FORM.yml <<EOF\n\nruns:\nEOF\n\nfor FILE in \\$(ls ${nano_reads}); do\ncat >>INPUT_FORM.yml <<EOF\n  run_set:\n    alias: 'run_${nano_name}'\n    experiment_ref: 'exp_${nano_name}'\n    data_block:\n      files:\n        file:\n          filename: '${nano_reads}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '35739c52e8d4f62fdf705af09d912c37'\n        file:\n          filename: 'fast5.tar.gz'\n          filetype: 'OxfordNanopore_native'\n          checksum_method: 'md5'\n          checksum: ''\nEOF\ndone\nfor FILE in \\$(ls ${illumina_name}*R1*); do\ncat >>INPUT_FORM.yml <<EOF\n  run_set:\n    alias: 'run_${illumina_name}'\n    experiment_ref: 'exp_${illumina_name}'\n    data_block:\n      files:\n        file:\n          filename: '${illumina_reads[0]}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '5458d0fc235571bb0aa5ca89d5f24144'\n        file:\n          filename: '${illumina_reads[1]}'\n          filetype: 'fastq'\n          checksum_method: 'md5'\n          checksum: '43f76e73175fbe9587ca9e447a2ad0b8'\nEOF\ndone\n\n\n    \"\"\"",
        "nb_lignes_script": 151,
        "language_script": "bash",
        "tools": [
            "denvax",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/denvax",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "denvax",
                "uri": "https://bio.tools/denvax",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3379",
                            "term": "Preclinical and clinical studies"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatric medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "https://en.wikipedia.org/wiki/Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3399",
                            "term": "Geriatrics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0560",
                                    "term": "DNA vaccine design"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Serostatus testing and dengue vaccine cost-benefit thresholds | R package for manuscript \"Serostatus Testing & Dengue Vaccine Cost Benefit Thresholds\"",
                "homepage": "https://cran.r-project.org/web/packages/denvax/index.html"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "nano_name",
            "nano_reads",
            "nano_md5",
            "illumina_name",
            "illumina_reads",
            "illumina_md5"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"INPUT_FORM.yml\""
        ],
        "when": "",
        "stub": ""
    },
    "validate_paired_fastq": {
        "name_process": "validate_paired_fastq",
        "string_process": "\nprocess validate_paired_fastq {\n  label 'ubuntu'  \n\n  input:\n    tuple val(name), file(read)\n\n  output:\n    tuple val(name), file(\"${name}_ENA_qc_check.txt\") optional true\n\n  script:\n    \"\"\"\n    fastq0_lines=\\$(gzip -d -c ${read[0]} | wc -l)\n    fastq1_lines=\\$(gzip -d -c ${read[1]} | wc -l)\n\n    if (( \\${fastq0_lines} % 4 == 0 ))         \n    then\n      echo \"${read[0]} passed ENA qc check\" \n    else\n      echo \"${read[0]} FASTQ check NOT passed, lines: \\${fastq0_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n\n    if (( \\${fastq1_lines} % 4 == 0 ))         \n    then\n      echo \"${read[1]} passed ENA qc check\" \n    else\n      echo \"${read[1]} FASTQ check NOT passed, lines: \\${fastq1_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    fastq0_lines=\\$(gzip -d -c ${read[0]} | wc -l)\n    fastq1_lines=\\$(gzip -d -c ${read[1]} | wc -l)\n\n    if (( \\${fastq0_lines} % 4 == 0 ))         \n    then\n      echo \"${read[0]} passed ENA qc check\" \n    else\n      echo \"${read[0]} FASTQ check NOT passed, lines: \\${fastq0_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n\n    if (( \\${fastq1_lines} % 4 == 0 ))         \n    then\n      echo \"${read[1]} passed ENA qc check\" \n    else\n      echo \"${read[1]} FASTQ check NOT passed, lines: \\${fastq1_lines}\" >> ${name}_ENA_qc_check.txt\n    fi\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "read"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'"
        ],
        "when": "",
        "stub": ""
    },
    "md5sum_single_entry": {
        "name_process": "md5sum_single_entry",
        "string_process": "\nprocess md5sum_single_entry {\n  label 'ubuntu'  \n  input:\n    tuple val(name), file(read)\n\n  output:\n    tuple val(name), file(\"${name}_single.checksum\")\n\n  script:\n    \"\"\"\n    if hash md5sum 2>/dev/null; then\n      md5sum ${read}  > ${name}_single.checksum\n    else\n      md5 ${read}  > ${name}_single.checksum\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    if hash md5sum 2>/dev/null; then\n      md5sum ${read}  > ${name}_single.checksum\n    else\n      md5 ${read}  > ${name}_single.checksum\n    fi\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "name",
            "read"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'"
        ],
        "when": "",
        "stub": ""
    },
    "sample_template_header_metagenome": {
        "name_process": "sample_template_header_metagenome",
        "string_process": "\nprocess sample_template_header_metagenome {\n  label 'ubuntu'  \n  publishDir \"${params.output}/\", mode: 'copy', pattern: \"sample_template.tsv\"\n  \n  input:\n    file(combined)\n  \n  output:\n    file(\"sample_template.tsv\")\n  \n  script:\n    \"\"\"\n    # header 1\n    printf \"#checklist_accession\\\\tERC000023\\\\n\" > sample_template.tsv\t\n    printf \"#unique_name_prefix\\\\n\" >> sample_template.tsv\t\n    \n    # header 2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    printf \"sample_alias\\\\ttax_id\\\\tscientific_name\\\\tcommon_name\\\\tsample_title\\\\tsample_description\\\\tproject name\\\\tsequencing method\" >> sample_template.tsv\n    printf \"\\\\tinvestigation type\\\\tcollection date\\\\tgeographic location (country and/or sea)\\\\tgeographic location (latitude)\\\\tgeographic location (longitude)\" >> sample_template.tsv\n    printf \"\\\\twastewater/sludge environmental package\\\\tenvironment (biome)\\\\tenvironment (feature)\\\\tenvironment (material)\\\\n\" >> sample_template.tsv\n    \n    # units\n    printf \"#units\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tDD\\\\tDD\\\\n\" >> sample_template.tsv\t\n    cat *.templateSamples >> sample_template.tsv\t \n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    # header 1\n    printf \"#checklist_accession\\\\tERC000023\\\\n\" > sample_template.tsv\t\n    printf \"#unique_name_prefix\\\\n\" >> sample_template.tsv\t\n    \n    # header 2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    printf \"sample_alias\\\\ttax_id\\\\tscientific_name\\\\tcommon_name\\\\tsample_title\\\\tsample_description\\\\tproject name\\\\tsequencing method\" >> sample_template.tsv\n    printf \"\\\\tinvestigation type\\\\tcollection date\\\\tgeographic location (country and/or sea)\\\\tgeographic location (latitude)\\\\tgeographic location (longitude)\" >> sample_template.tsv\n    printf \"\\\\twastewater/sludge environmental package\\\\tenvironment (biome)\\\\tenvironment (feature)\\\\tenvironment (material)\\\\n\" >> sample_template.tsv\n    \n    # units\n    printf \"#units\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tDD\\\\tDD\\\\n\" >> sample_template.tsv\t\n    cat *.templateSamples >> sample_template.tsv\t \n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "combined"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nanozoo__wf_prepare_submission_dammit",
        "directive": [
            "label 'ubuntu'",
            "publishDir \"${params.output}/\", mode: 'copy', pattern: \"sample_template.tsv\""
        ],
        "when": "",
        "stub": ""
    }
}