{
    "BuildCache_snpEff": {
        "name_process": "BuildCache_snpEff",
        "string_process": "\nprocess BuildCache_snpEff {\n  tag {snpeff_db}\n\n  publishDir params.snpeff_cache, mode: params.publish_dir_mode\n\n  input:\n    val snpeff_db from ch_snpeff_db\n\n  output:\n    file(\"*\") into snpeff_cache_out\n\n  when: params.snpeff_cache\n\n  script:\n  \"\"\"\n  snpEff download -v ${snpeff_db} -dataDir \\${PWD}\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  snpEff download -v ${snpeff_db} -dataDir \\${PWD}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [
            "ch_snpeff_db"
        ],
        "nb_inputs": 1,
        "outputs": [
            "snpeff_cache_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag {snpeff_db}",
            "publishDir params.snpeff_cache, mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildCache_VEP": {
        "name_process": "BuildCache_VEP",
        "string_process": "\nprocess BuildCache_VEP {\n  tag {\"${species}_${vep_cache_version}_${genome}\"}\n\n  publishDir \"${params.vep_cache}/${species}\", mode: params.publish_dir_mode\n\n  input:\n    val vep_cache_version from ch_vep_cache_version\n    val species from Channel.value(params.species)\n\n  output:\n    file(\"*\") into vep_cache_out\n\n  when: params.vep_cache\n\n  script:\n  genome = params.genome\n  \"\"\"\n  vep_install \\\n    -a cf \\\n    -c . \\\n    -s ${species} \\\n    -y ${genome} \\\n    --CACHE_VERSION ${vep_cache_version} \\\n    --CONVERT \\\n    --NO_HTSLIB --NO_TEST --NO_BIOPERL --NO_UPDATE\n\n  mv ${species}/* .\n  rm -rf ${species}\n  \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  genome = params.genome\n  \"\"\"\n  vep_install \\\n    -a cf \\\n    -c . \\\n    -s ${species} \\\n    -y ${genome} \\\n    --CACHE_VERSION ${vep_cache_version} \\\n    --CONVERT \\\n    --NO_HTSLIB --NO_TEST --NO_BIOPERL --NO_UPDATE\n\n  mv ${species}/* .\n  rm -rf ${species}\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Mgenome"
        ],
        "tools_url": [
            "https://bio.tools/mgenome"
        ],
        "tools_dico": [
            {
                "name": "Mgenome",
                "uri": "https://bio.tools/mgenome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Designed to find the optimal trees for multiple genome rearrangement by signed reversals. The problem is modeled as: For a given collection of genomes represented by signed permutations on genes, find a tree to connect the given genomes by reversal paths such that the number of all signed reversals is minimized.",
                "homepage": "http://xungulab.com/software/mgenome/mgenome.html"
            }
        ],
        "inputs": [
            "ch_vep_cache_version"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vep_cache_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag {\"${species}_${vep_cache_version}_${genome}\"}",
            "publishDir \"${params.vep_cache}/${species}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DownloadCADD": {
        "name_process": "DownloadCADD",
        "string_process": "\nprocess DownloadCADD {\n  tag {caddFile}\n\n  publishDir \"${params.cadd_cache}/${params.genome}\", mode: params.publish_dir_mode\n\n  input:\n    val caddFile from caddFileToDownload\n\n  output:\n    set file(\"*.tsv.gz\"), file(\"*.tsv.gz.tbi\") into cadd_files\n\n  when: (params.cadd_cache && params.cadd_version) && (params.genome == \"GRCh37\" || params.genome == \"GRCh38\")\n\n  script:\n  \"\"\"\n  wget --quiet ${caddFile}\n  wget --quiet ${caddFile}.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  wget --quiet ${caddFile}\n  wget --quiet ${caddFile}.tbi\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "caddFileToDownload"
        ],
        "nb_inputs": 1,
        "outputs": [
            "cadd_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag {caddFile}",
            "publishDir \"${params.cadd_cache}/${params.genome}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode,\n        saveAs: {it.indexOf(\".csv\") > 0 ? it : null}\n\n    output:\n        file 'software_versions_mqc.yaml' into ch_software_versions_yaml\n        file \"software_versions.csv\"\n\n    when: !('versions' in skipQC)\n\n    script:\n    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    alleleCounter --version &> v_allelecount.txt 2>&1 || true\n    bcftools --version &> v_bcftools.txt 2>&1 || true\n    ${aligner} version &> v_bwa.txt 2>&1 || true\n    cnvkit.py version &> v_cnvkit.txt 2>&1 || true\n    configManta.py --version &> v_manta.txt 2>&1 || true\n    configureStrelkaGermlineWorkflow.py --version &> v_strelka.txt 2>&1 || true\n    echo \"${workflow.manifest.version}\" &> v_pipeline.txt 2>&1 || true\n    echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n    snpEff -version &> v_snpeff.txt 2>&1 || true\n    fastqc --version &> v_fastqc.txt 2>&1 || true\n    freebayes --version &> v_freebayes.txt 2>&1 || true\n    freec &> v_controlfreec.txt 2>&1 || true\n    gatk ApplyBQSR --help &> v_gatk.txt 2>&1 || true\n    msisensor &> v_msisensor.txt 2>&1 || true\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    qualimap --version &> v_qualimap.txt 2>&1 || true\n    R --version &> v_r.txt 2>&1 || true\n    R -e \"library(ASCAT); help(package='ASCAT')\" &> v_ascat.txt 2>&1 || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    tiddit &> v_tiddit.txt 2>&1 || true\n    trim_galore -v &> v_trim_galore.txt 2>&1 || true\n    vcftools --version &> v_vcftools.txt 2>&1 || true\n    vep --help &> v_vep.txt 2>&1 || true\n\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    alleleCounter --version &> v_allelecount.txt 2>&1 || true\n    bcftools --version &> v_bcftools.txt 2>&1 || true\n    ${aligner} version &> v_bwa.txt 2>&1 || true\n    cnvkit.py version &> v_cnvkit.txt 2>&1 || true\n    configManta.py --version &> v_manta.txt 2>&1 || true\n    configureStrelkaGermlineWorkflow.py --version &> v_strelka.txt 2>&1 || true\n    echo \"${workflow.manifest.version}\" &> v_pipeline.txt 2>&1 || true\n    echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n    snpEff -version &> v_snpeff.txt 2>&1 || true\n    fastqc --version &> v_fastqc.txt 2>&1 || true\n    freebayes --version &> v_freebayes.txt 2>&1 || true\n    freec &> v_controlfreec.txt 2>&1 || true\n    gatk ApplyBQSR --help &> v_gatk.txt 2>&1 || true\n    msisensor &> v_msisensor.txt 2>&1 || true\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    qualimap --version &> v_qualimap.txt 2>&1 || true\n    R --version &> v_r.txt 2>&1 || true\n    R -e \"library(ASCAT); help(package='ASCAT')\" &> v_ascat.txt 2>&1 || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    tiddit &> v_tiddit.txt 2>&1 || true\n    trim_galore -v &> v_trim_galore.txt 2>&1 || true\n    vcftools --version &> v_vcftools.txt 2>&1 || true\n    vep --help &> v_vep.txt 2>&1 || true\n\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "Maligner",
            "BCFtools",
            "snpEff",
            "FastQC",
            "FreeBayes",
            "FREEC",
            "GATK",
            "MSIsensor",
            "MultiQC",
            "QualiMap",
            "SAMtools",
            "TIDDIT",
            "VCFtools",
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/maligner",
            "https://bio.tools/bcftools",
            "https://bio.tools/snpeff",
            "https://bio.tools/fastqc",
            "https://bio.tools/freebayes",
            "https://bio.tools/freec",
            "https://bio.tools/gatk",
            "https://bio.tools/msisensor",
            "https://bio.tools/multiqc",
            "https://bio.tools/qualimap",
            "https://bio.tools/samtools",
            "https://bio.tools/tiddit",
            "https://bio.tools/vcftools",
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            },
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            },
            {
                "name": "FREEC",
                "uri": "https://bio.tools/freec",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3473",
                            "term": "Data mining"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3574",
                            "term": "Human genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Copy number estimation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Whole genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Transcript copy number estimation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for control-free copy number alteration (CNA) and allelic imbalances (LOH) detection using deep-sequencing data, particularly useful for cancer studies.",
                "homepage": "http://boevalab.com/FREEC/"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MSIsensor",
                "uri": "https://bio.tools/msisensor",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Nucleic acid feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Sequence feature detection (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "C++ program for automatically detecting somatic and germline variants at microsatellite regions. It computes length distributions of microsatellites per site in paired tumor and normal sequence data, subsequently using these to statistically compare observed distributions in both samples.",
                "homepage": "https://github.com/ding-lab/msisensor"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "TIDDIT",
                "uri": "https://bio.tools/tiddit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Efficient and comprehensive structural variant caller for massive parallel sequencing data. Identify chromosomal rearrangements using Mate Pair or Paired End sequencing data. It allows identification of intra and inter-chromosomal translocations, deletions, tandem-duplications and inversions, using supplementary alignments as well as discordant pairs.",
                "homepage": "https://github.com/J35P312/TIDDIT"
            },
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            },
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode , saveAs: {it.indexOf(\".csv\") > 0 ? it : null}"
        ],
        "when": "",
        "stub": ""
    },
    "BuildBWAindexes": {
        "name_process": "BuildBWAindexes",
        "string_process": "\nprocess BuildBWAindexes {\n    tag \"${fasta}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/BWAIndex/${it}\" : null }\n\n    input:\n        file(fasta) from ch_fasta\n\n    output:\n        file(\"${fasta}.*\") into bwa_built\n\n    when: !(params.bwa) && params.fasta && 'mapping' in step\n\n    script:\n    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    ${aligner} index ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    ${aligner} index ${fasta}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Maligner"
        ],
        "tools_url": [
            "https://bio.tools/maligner"
        ],
        "tools_dico": [
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            }
        ],
        "inputs": [
            "ch_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwa_built"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${fasta}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/BWAIndex/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildDict": {
        "name_process": "BuildDict",
        "string_process": "\nprocess BuildDict {\n    tag \"${fasta}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(fasta) from ch_fasta\n\n    output:\n        file(\"${fasta.baseName}.dict\") into dictBuilt\n\n    when: !(params.dict) && params.fasta && !('annotate' in step) && !('controlfreec' in step)\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CreateSequenceDictionary \\\n        --REFERENCE ${fasta} \\\n        --OUTPUT ${fasta.baseName}.dict\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CreateSequenceDictionary \\\n        --REFERENCE ${fasta} \\\n        --OUTPUT ${fasta.baseName}.dict\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "ch_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "dictBuilt"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${fasta}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildFastaFai": {
        "name_process": "BuildFastaFai",
        "string_process": "\nprocess BuildFastaFai {\n    tag \"${fasta}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(fasta) from ch_fasta\n\n    output:\n        file(\"${fasta}.fai\") into fai_built\n\n    when: !(params.fasta_fai) && params.fasta && !('annotate' in step)\n\n    script:\n    \"\"\"\n    samtools faidx ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    samtools faidx ${fasta}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fai_built"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${fasta}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildDbsnpIndex": {
        "name_process": "BuildDbsnpIndex",
        "string_process": "\nprocess BuildDbsnpIndex {\n    tag \"${dbsnp}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(dbsnp) from ch_dbsnp\n\n    output:\n        file(\"${dbsnp}.tbi\") into dbsnp_tbi\n\n    when: !(params.dbsnp_index) && params.dbsnp && ('mapping' in step || 'preparerecalibration' in step || 'controlfreec' in tools || 'haplotypecaller' in tools || 'mutect2' in tools || 'tnscope' in tools)\n\n    script:\n    \"\"\"\n    tabix -p vcf ${dbsnp}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    tabix -p vcf ${dbsnp}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_dbsnp"
        ],
        "nb_inputs": 1,
        "outputs": [
            "dbsnp_tbi"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${dbsnp}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildGermlineResourceIndex": {
        "name_process": "BuildGermlineResourceIndex",
        "string_process": "\nprocess BuildGermlineResourceIndex {\n    tag \"${germlineResource}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(germlineResource) from ch_germline_resource\n\n    output:\n        file(\"${germlineResource}.tbi\") into germline_resource_tbi\n\n    when: !(params.germline_resource_index) && params.germline_resource && 'mutect2' in tools\n\n    script:\n    \"\"\"\n    tabix -p vcf ${germlineResource}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    tabix -p vcf ${germlineResource}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_germline_resource"
        ],
        "nb_inputs": 1,
        "outputs": [
            "germline_resource_tbi"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${germlineResource}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildKnownIndelsIndex": {
        "name_process": "BuildKnownIndelsIndex",
        "string_process": "\nprocess BuildKnownIndelsIndex {\n    tag \"${knownIndels}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        each file(knownIndels) from ch_known_indels\n\n    output:\n        file(\"${knownIndels}.tbi\") into known_indels_tbi\n\n    when: !(params.known_indels_index) && params.known_indels && ('mapping' in step || 'preparerecalibration' in step)\n\n    script:\n    \"\"\"\n    tabix -p vcf ${knownIndels}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    tabix -p vcf ${knownIndels}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_known_indels"
        ],
        "nb_inputs": 1,
        "outputs": [
            "known_indels_tbi"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${knownIndels}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildPonIndex": {
        "name_process": "BuildPonIndex",
        "string_process": "\nprocess BuildPonIndex {\n    tag \"${pon}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(pon) from ch_pon\n\n    output:\n        file(\"${pon}.tbi\") into pon_tbi\n\n    when: !(params.pon_index) && params.pon && ('tnscope' in tools || 'mutect2' in tools)\n\n    script:\n    \"\"\"\n    tabix -p vcf ${pon}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    tabix -p vcf ${pon}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_pon"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pon_tbi"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${pon}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildIntervals": {
        "name_process": "BuildIntervals",
        "string_process": "\nprocess BuildIntervals {\n    tag \"${fastaFai}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n    saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(fastaFai) from ch_fai\n\n    output:\n        file(\"${fastaFai.baseName}.bed\") into intervalBuilt\n\n    when: !(params.intervals) && !('annotate' in step) && !('controlfreec' in step) \n\n    script:\n    \"\"\"\n    awk -v FS='\\t' -v OFS='\\t' '{ print \\$1, \\\"0\\\", \\$2 }' ${fastaFai} > ${fastaFai.baseName}.bed\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    awk -v FS='\\t' -v OFS='\\t' '{ print \\$1, \\\"0\\\", \\$2 }' ${fastaFai} > ${fastaFai.baseName}.bed\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fai"
        ],
        "nb_inputs": 1,
        "outputs": [
            "intervalBuilt"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${fastaFai}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_reference ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "CreateIntervalBeds": {
        "name_process": "CreateIntervalBeds",
        "string_process": "\nprocess CreateIntervalBeds {\n    tag \"${intervals}\"\n\n    input:\n        file(intervals) from ch_intervals\n\n    output:\n        file '*.bed' into bedIntervals mode flatten\n\n    when: (!params.no_intervals) && step != 'annotate'\n\n    script:\n                                                                             \n                                                                                  \n    if (hasExtension(intervals, \"bed\"))\n        \"\"\"\n        awk -vFS=\"\\t\" '{\n          t = \\$5  # runtime estimate\n          if (t == \"\") {\n            # no runtime estimate in this row, assume default value\n            t = (\\$3 - \\$2) / ${params.nucleotides_per_second}\n          }\n          if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n            # start a new chunk\n            name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n            chunk = 0\n            longest = 0\n          }\n          if (t > longest)\n            longest = t\n          chunk += t\n          print \\$0 > name\n        }' ${intervals}\n        \"\"\"\n    else if (hasExtension(intervals, \"interval_list\"))\n        \"\"\"\n        grep -v '^@' ${intervals} | awk -vFS=\"\\t\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }'\n        \"\"\"\n    else\n        \"\"\"\n        awk -vFS=\"[:-]\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }' ${intervals}\n        \"\"\"\n}",
        "nb_lignes_process": 48,
        "string_script": "    if (hasExtension(intervals, \"bed\"))\n        \"\"\"\n        awk -vFS=\"\\t\" '{\n          t = \\$5  # runtime estimate\n          if (t == \"\") {\n            # no runtime estimate in this row, assume default value\n            t = (\\$3 - \\$2) / ${params.nucleotides_per_second}\n          }\n          if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n            # start a new chunk\n            name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n            chunk = 0\n            longest = 0\n          }\n          if (t > longest)\n            longest = t\n          chunk += t\n          print \\$0 > name\n        }' ${intervals}\n        \"\"\"\n    else if (hasExtension(intervals, \"interval_list\"))\n        \"\"\"\n        grep -v '^@' ${intervals} | awk -vFS=\"\\t\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }'\n        \"\"\"\n    else\n        \"\"\"\n        awk -vFS=\"[:-]\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }' ${intervals}\n        \"\"\"",
        "nb_lignes_script": 33,
        "language_script": "bash",
        "tools": [
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "ch_intervals"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bedIntervals"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${intervals}\""
        ],
        "when": "",
        "stub": ""
    },
    "FastQCFQ": {
        "name_process": "FastQCFQ",
        "string_process": "\nprocess FastQCFQ {\n    label 'FastQC'\n    label 'cpus_2'\n\n    tag \"${idPatient}-${idRun}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1.fastq.gz\"), file(\"${idSample}_${idRun}_R2.fastq.gz\") from inputPairReadsFastQC\n\n    output:\n        file(\"*.{html,zip}\") into fastQCFQReport\n\n    when: !('fastqc' in skipQC)\n\n    script:\n    \"\"\"\n    fastqc -t 2 -q ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    fastqc -t 2 -q ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "inputPairReadsFastQC"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastQCFQReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'FastQC'",
            "label 'cpus_2'",
            "tag \"${idPatient}-${idRun}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "FastQCBAM": {
        "name_process": "FastQCBAM",
        "string_process": "\nprocess FastQCBAM {\n    label 'FastQC'\n    label 'cpus_2'\n\n    tag \"${idPatient}-${idRun}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\") from inputBamFastQC\n\n    output:\n        file(\"*.{html,zip}\") into fastQCBAMReport\n\n    when: !('fastqc' in skipQC)\n\n    script:\n    \"\"\"\n    fastqc -t 2 -q ${idSample}_${idRun}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    fastqc -t 2 -q ${idSample}_${idRun}.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "inputBamFastQC"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastQCBAMReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'FastQC'",
            "label 'cpus_2'",
            "tag \"${idPatient}-${idRun}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "TrimGalore": {
        "name_process": "TrimGalore",
        "string_process": "\nprocess TrimGalore {\n    label 'TrimGalore'\n\n    tag \"${idPatient}-${idRun}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/TrimGalore/${idSample}_${idRun}\", mode: params.publish_dir_mode,\n      saveAs: {filename ->\n        if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\"\n        else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\"\n        else if (params.save_trimmed) filename\n        else null\n      }\n\n    input:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1.fastq.gz\"), file(\"${idSample}_${idRun}_R2.fastq.gz\") from inputPairReadsTrimGalore\n\n    output:\n        file(\"*.{html,zip,txt}\") into trimGaloreReport\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1_val_1.fq.gz\"), file(\"${idSample}_${idRun}_R2_val_2.fq.gz\") into outputPairReadsTrimGalore\n\n    when: params.trim_fastq\n\n    script:\n                                                                             \n                                                                                                                 \n                                                      \n    def cores = 1\n    if (task.cpus) {\n      cores = (task.cpus as int) - 4\n      if (cores < 1) cores = 1\n      if (cores > 4) cores = 4\n      }\n    c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n    c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n    tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n    tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n    nextseq = params.trim_nextseq > 0 ? \"--nextseq ${params.trim_nextseq}\" : ''\n    \"\"\"\n    trim_galore \\\n         --cores ${cores} \\\n        --paired \\\n        --fastqc \\\n        --gzip \\\n        ${c_r1} ${c_r2} \\\n        ${tpc_r1} ${tpc_r2} \\\n        ${nextseq} \\\n        ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n\n    mv *val_1_fastqc.html \"${idSample}_${idRun}_R1.trimmed_fastqc.html\"\n    mv *val_2_fastqc.html \"${idSample}_${idRun}_R2.trimmed_fastqc.html\"\n    mv *val_1_fastqc.zip \"${idSample}_${idRun}_R1.trimmed_fastqc.zip\"\n    mv *val_2_fastqc.zip \"${idSample}_${idRun}_R2.trimmed_fastqc.zip\"\n    \"\"\"\n}",
        "nb_lignes_process": 53,
        "string_script": "    def cores = 1\n    if (task.cpus) {\n      cores = (task.cpus as int) - 4\n      if (cores < 1) cores = 1\n      if (cores > 4) cores = 4\n      }\n    c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n    c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n    tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n    tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n    nextseq = params.trim_nextseq > 0 ? \"--nextseq ${params.trim_nextseq}\" : ''\n    \"\"\"\n    trim_galore \\\n         --cores ${cores} \\\n        --paired \\\n        --fastqc \\\n        --gzip \\\n        ${c_r1} ${c_r2} \\\n        ${tpc_r1} ${tpc_r2} \\\n        ${nextseq} \\\n        ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n\n    mv *val_1_fastqc.html \"${idSample}_${idRun}_R1.trimmed_fastqc.html\"\n    mv *val_2_fastqc.html \"${idSample}_${idRun}_R2.trimmed_fastqc.html\"\n    mv *val_1_fastqc.zip \"${idSample}_${idRun}_R1.trimmed_fastqc.zip\"\n    mv *val_2_fastqc.zip \"${idSample}_${idRun}_R2.trimmed_fastqc.zip\"\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "CoreSlicer"
        ],
        "tools_url": [
            "https://bio.tools/CoreSlicer"
        ],
        "tools_dico": [
            {
                "name": "CoreSlicer",
                "uri": "https://bio.tools/CoreSlicer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3384",
                            "term": "Medical imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRI"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "CT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Computed tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "TDM"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Nuclear magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "NMRI"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Enables extraction of morphomic markers from CT images by non-technically skilled clinicians.",
                "homepage": "https://coreslicer.com/"
            }
        ],
        "inputs": [
            "inputPairReadsTrimGalore"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimGaloreReport",
            "outputPairReadsTrimGalore"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'TrimGalore'",
            "tag \"${idPatient}-${idRun}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/TrimGalore/${idSample}_${idRun}\", mode: params.publish_dir_mode , saveAs: {filename -> if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\" else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\" else if (params.save_trimmed) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "UMIFastqToBAM": {
        "name_process": "UMIFastqToBAM",
        "string_process": "\nprocess UMIFastqToBAM {\n    publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1.fastq.gz\"), file(\"${idSample}_${idRun}_R2.fastq.gz\") from inputPairReadsUMI\n        val read_structure1 from ch_read_structure1\n        val read_structure2 from ch_read_structure2\n\n    output:\n        tuple val(idPatient), val(idSample), val(idRun), file(\"${idSample}_umi_converted.bam\") into umi_converted_bams_ch\n\n    when: params.umi\n\n                                                            \n\n    script:\n    \"\"\"\n    mkdir tmp\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    FastqToBam \\\n    -i \"${idSample}_${idRun}_R1.fastq.gz\" \"${idSample}_${idRun}_R2.fastq.gz\" \\\n    -o \"${idSample}_umi_converted.bam\" \\\n    --read-structures ${read_structure1} ${read_structure2} \\\n    --sample ${idSample} \\\n    --library ${idSample}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    mkdir tmp\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    FastqToBam \\\n    -i \"${idSample}_${idRun}_R1.fastq.gz\" \"${idSample}_${idRun}_R2.fastq.gz\" \\\n    -o \"${idSample}_umi_converted.bam\" \\\n    --read-structures ${read_structure1} ${read_structure2} \\\n    --sample ${idSample} \\\n    --library ${idSample}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputPairReadsUMI",
            "ch_read_structure1",
            "ch_read_structure2"
        ],
        "nb_inputs": 3,
        "outputs": [
            "umi_converted_bams_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "UMIMapBamFile": {
        "name_process": "UMIMapBamFile",
        "string_process": "\nprocess UMIMapBamFile {\n    input:\n        set idPatient, idSample, idRun, file(convertedBam) from umi_converted_bams_ch\n        file(bwaIndex) from ch_bwa\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        tuple val(idPatient), val(idSample), val(idRun), file(\"${idSample}_umi_unsorted.bam\") into umi_aligned_bams_ch\n\n    when: params.umi\n\n    script:\n    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    samtools bam2fq -T RX ${convertedBam} | \\\n    ${aligner} mem -p -t ${task.cpus} -C -M -R \\\"@RG\\\\tID:${idSample}\\\\tSM:${idSample}\\\\tPL:Illumina\\\" \\\n    ${fasta} - | \\\n    samtools view -bS - > ${idSample}_umi_unsorted.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    samtools bam2fq -T RX ${convertedBam} | \\\n    ${aligner} mem -p -t ${task.cpus} -C -M -R \\\"@RG\\\\tID:${idSample}\\\\tSM:${idSample}\\\\tPL:Illumina\\\" \\\n    ${fasta} - | \\\n    samtools view -bS - > ${idSample}_umi_unsorted.bam\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Maligner",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/maligner",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "umi_converted_bams_ch",
            "ch_bwa",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 4,
        "outputs": [
            "umi_aligned_bams_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "GroupReadsByUmi": {
        "name_process": "GroupReadsByUmi",
        "string_process": "\nprocess GroupReadsByUmi {\n    publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, idRun, file(alignedBam) from umi_aligned_bams_ch\n\n    output:\n        file(\"${idSample}_umi_histogram.txt\") into umi_histogram_ch\n        tuple val(idPatient), val(idSample), val(idRun), file(\"${idSample}_umi-grouped.bam\") into umi_grouped_bams_ch\n\n    when: params.umi\n\n    script:\n    \"\"\"\n    mkdir tmp\n\n    samtools view -h ${alignedBam} | \\\n    samblaster -M --addMateTags | \\\n    samtools view -Sb - >${idSample}_unsorted_tagged.bam\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    GroupReadsByUmi \\\n    -s Adjacency \\\n    -i ${idSample}_unsorted_tagged.bam \\\n    -o ${idSample}_umi-grouped.bam \\\n    -f ${idSample}_umi_histogram.txt\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    mkdir tmp\n\n    samtools view -h ${alignedBam} | \\\n    samblaster -M --addMateTags | \\\n    samtools view -Sb - >${idSample}_unsorted_tagged.bam\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    GroupReadsByUmi \\\n    -s Adjacency \\\n    -i ${idSample}_unsorted_tagged.bam \\\n    -o ${idSample}_umi-grouped.bam \\\n    -f ${idSample}_umi_histogram.txt\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "SAMBLASTER"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/samblaster"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "SAMBLASTER",
                "uri": "https://bio.tools/samblaster",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split-read mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool to mark duplicates and extract discordant and split reads from SAM files.",
                "homepage": "https://github.com/GregoryFaust/samblaster"
            }
        ],
        "inputs": [
            "umi_aligned_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "umi_histogram_ch",
            "umi_grouped_bams_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CallMolecularConsensusReads": {
        "name_process": "CallMolecularConsensusReads",
        "string_process": "\nprocess CallMolecularConsensusReads {\n    publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, idRun, file(groupedBamFile) from umi_grouped_bams_ch\n\n    output:\n        tuple val(idPatient), val(idSample), val(idRun), file(\"${idSample}_umi-consensus.bam\"), val(\"null\") into consensus_bam_ch\n\n    when: params.umi\n\n    script:\n    \"\"\"\n    mkdir tmp\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    CallMolecularConsensusReads \\\n    -i $groupedBamFile \\\n    -o ${idSample}_umi-consensus.bam \\\n    -M 1 -S Coordinate\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    mkdir tmp\n\n    fgbio --tmp-dir=${PWD}/tmp \\\n    CallMolecularConsensusReads \\\n    -i $groupedBamFile \\\n    -o ${idSample}_umi-consensus.bam \\\n    -M 1 -S Coordinate\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "umi_grouped_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_bam_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/Reports/${idSample}/UMI/${idSample}_${idRun}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MapReads": {
        "name_process": "MapReads",
        "string_process": "\nprocess MapReads {\n    label 'cpus_max'\n\n    tag \"${idPatient}-${idRun}\"\n\n    input:\n        set idPatient, idSample, idRun, file(inputFile1), file(inputFile2) from inputPairReads\n        file(bwaIndex) from ch_bwa\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\") into bamMapped\n        set idPatient, val(\"${idSample}_${idRun}\"), file(\"${idSample}_${idRun}.bam\") into bamMappedBamQC\n\n    when: !(params.sentieon)\n\n    script:\n                                                                                   \n                                                           \n                                                                                \n                                                                                          \n                                                                                                                                                                               \n    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = statusMap[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    convertToFastq = hasExtension(inputFile1, \"bam\") ? \"gatk --java-options -Xmx${task.memory.toGiga()}g SamToFastq --INPUT=${inputFile1} --FASTQ=/dev/stdout --INTERLEAVE=true --NON_PF=true | \\\\\" : \"\"\n    input = hasExtension(inputFile1, \"bam\") ? \"-p /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2)\" : \"${inputFile1} ${inputFile2}\"\n    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    ${convertToFastq}\n    ${aligner} mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n    ${input} | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idSample}_${idRun}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = statusMap[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    convertToFastq = hasExtension(inputFile1, \"bam\") ? \"gatk --java-options -Xmx${task.memory.toGiga()}g SamToFastq --INPUT=${inputFile1} --FASTQ=/dev/stdout --INTERLEAVE=true --NON_PF=true | \\\\\" : \"\"\n    input = hasExtension(inputFile1, \"bam\") ? \"-p /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2)\" : \"${inputFile1} ${inputFile2}\"\n    aligner = params.aligner == \"bwa-mem2\" ? \"bwa-mem2\" : \"bwa\"\n    \"\"\"\n    ${convertToFastq}\n    ${aligner} mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n    ${input} | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idSample}_${idRun}.bam\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "CNN",
            "EXTRACT",
            "wossinput",
            "Maligner",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/CNN",
            "https://bio.tools/extract",
            "https://bio.tools/wossinput",
            "https://bio.tools/maligner",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "CNN",
                "uri": "https://bio.tools/CNN",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3318",
                            "term": "Physics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convolutional neural network for efficient estimation of regional brain strains.\n\nThree pretrained CNN neural network models are provided based on all of the brain response samples available in the published study (N=3069). They correspond to the peak maximum principal strain (MPS) of the whole brain (WB), MPS of the corpus callosum (CC), and fiber strain (FS) of the CC, all assessed at the 95th percentile levels",
                "homepage": "https://github.com/Jilab-biomechanics/CNN-brain-strains"
            },
            {
                "name": "EXTRACT",
                "uri": "https://bio.tools/extract",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "Natural language processing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "NLP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3778",
                                    "term": "Text annotation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3671",
                                "term": "Text"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3779",
                                "term": "Annotated text"
                            }
                        ]
                    }
                ],
                "description": "EXTRACT identifies genes/proteins, chemical compounds, organisms, environments, tissues, diseases, phenotypes and Gene Ontology terms mentioned in a given piece of text and maps them to their corresponding ontology/taxonomy entries.",
                "homepage": "https://extract.jensenlab.org/"
            },
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "inputPairReads",
            "ch_bwa",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 4,
        "outputs": [
            "bamMapped",
            "bamMappedBamQC"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "tag \"${idPatient}-${idRun}\""
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_MapReads": {
        "name_process": "Sentieon_MapReads",
        "string_process": "\nprocess Sentieon_MapReads {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idPatient}-${idRun}\"\n\n    input:\n        set idPatient, idSample, idRun, file(inputFile1), file(inputFile2) from input_pair_reads_sentieon\n        file(bwaIndex) from ch_bwa\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\") into bam_sentieon_mapped\n\n    when: params.sentieon\n\n    script:\n                                                                                   \n                                                           \n                                                                                \n                                                                                          \n                                                                                                                                                                               \n    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = statusMap[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    \"\"\"\n    sentieon bwa mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n    ${inputFile1} ${inputFile2} | \\\n    sentieon util sort -r ${fasta} -o ${idSample}_${idRun}.bam -t ${task.cpus} --sam2bam -i -\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = statusMap[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    \"\"\"\n    sentieon bwa mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n    ${inputFile1} ${inputFile2} | \\\n    sentieon util sort -r ${fasta} -o ${idSample}_${idRun}.bam -t ${task.cpus} --sam2bam -i -\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "CNN",
            "EXTRACT"
        ],
        "tools_url": [
            "https://bio.tools/CNN",
            "https://bio.tools/extract"
        ],
        "tools_dico": [
            {
                "name": "CNN",
                "uri": "https://bio.tools/CNN",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3318",
                            "term": "Physics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convolutional neural network for efficient estimation of regional brain strains.\n\nThree pretrained CNN neural network models are provided based on all of the brain response samples available in the published study (N=3069). They correspond to the peak maximum principal strain (MPS) of the whole brain (WB), MPS of the corpus callosum (CC), and fiber strain (FS) of the CC, all assessed at the 95th percentile levels",
                "homepage": "https://github.com/Jilab-biomechanics/CNN-brain-strains"
            },
            {
                "name": "EXTRACT",
                "uri": "https://bio.tools/extract",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "Natural language processing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "NLP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3778",
                                    "term": "Text annotation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3671",
                                "term": "Text"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3779",
                                "term": "Annotated text"
                            }
                        ]
                    }
                ],
                "description": "EXTRACT identifies genes/proteins, chemical compounds, organisms, environments, tissues, diseases, phenotypes and Gene Ontology terms mentioned in a given piece of text and maps them to their corresponding ontology/taxonomy entries.",
                "homepage": "https://extract.jensenlab.org/"
            }
        ],
        "inputs": [
            "input_pair_reads_sentieon",
            "ch_bwa",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 4,
        "outputs": [
            "bam_sentieon_mapped"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idPatient}-${idRun}\""
        ],
        "when": "",
        "stub": ""
    },
    "MergeBamMapped": {
        "name_process": "MergeBamMapped",
        "string_process": "\nprocess MergeBamMapped {\n    label 'cpus_8'\n\n    tag \"${idPatient}-${idSample}\"\n\n    input:\n        set idPatient, idSample, idRun, file(bam) from multipleBam\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.bam\") into bam_mapped_merged\n\n    script:\n    \"\"\"\n    samtools merge --threads ${task.cpus} ${idSample}.bam ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools merge --threads ${task.cpus} ${idSample}.bam ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "multipleBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_mapped_merged"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idPatient}-${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "IndexBamMergedForSentieon": {
        "name_process": "IndexBamMergedForSentieon",
        "string_process": "\nprocess IndexBamMergedForSentieon {\n    label 'cpus_8'\n\n    tag \"${idPatient}-${idSample}\"\n\n    input:\n        set idPatient, idSample, file(\"${idSample}.bam\") from bam_sentieon_mapped_merged\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.bam\"), file(\"${idSample}.bam.bai\") into bam_sentieon_mapped_merged_indexed\n\n    script:\n    \"\"\"\n    samtools index ${idSample}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools index ${idSample}.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_sentieon_mapped_merged"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_sentieon_mapped_merged_indexed"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idPatient}-${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "IndexBamFile": {
        "name_process": "IndexBamFile",
        "string_process": "\nprocess IndexBamFile {\n    label 'cpus_8'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (save_bam_mapped) \"Preprocessing/${idSample}/Mapped/${it}\"\n            else null\n        }\n\n    input:\n        set idPatient, idSample, file(\"${idSample}.bam\") from bam_mapped_merged_to_index\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.bam\"), file(\"${idSample}.bam.bai\") into bam_mapped_merged_indexed\n        set idPatient, idSample into tsv_bam_indexed\n\n    when: save_bam_mapped || !(params.known_indels)\n\n    script:\n    \"\"\"\n    samtools index ${idSample}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    samtools index ${idSample}.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_mapped_merged_to_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_mapped_merged_indexed",
            "tsv_bam_indexed"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (save_bam_mapped) \"Preprocessing/${idSample}/Mapped/${it}\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "MarkDuplicates": {
        "name_process": "MarkDuplicates",
        "string_process": "\nprocess MarkDuplicates {\n    label 'cpus_16'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"${idSample}.bam.metrics\") \"Reports/${idSample}/MarkDuplicates/${it}\"\n            else \"Preprocessing/${idSample}/DuplicatesMarked/${it}\"\n        }\n\n    input:\n        set idPatient, idSample, file(\"${idSample}.bam\") from bam_mapped_merged\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.md.bam\"), file(\"${idSample}.md.bam.bai\") into bam_duplicates_marked\n        set idPatient, idSample into tsv_bam_duplicates_marked\n        file (\"${idSample}.bam.metrics\") optional true into duplicates_marked_report\n\n    when: !(params.skip_markduplicates)\n\n    script:\n    markdup_java_options = task.memory.toGiga() > 8 ? params.markdup_java_options : \"\\\"-Xms\" +  (task.memory.toGiga() / 2).trunc() + \"g -Xmx\" + (task.memory.toGiga() - 1) + \"g\\\"\"\n    metrics = 'markduplicates' in skipQC ? '' : \"-M ${idSample}.bam.metrics\"\n    if (params.use_gatk_spark)\n    \"\"\"\n    gatk --java-options ${markdup_java_options} \\\n        MarkDuplicatesSpark \\\n        -I ${idSample}.bam \\\n        -O ${idSample}.md.bam \\\n        ${metrics} \\\n        --tmp-dir . \\\n        --create-output-bam-index true \\\n        --spark-master local[${task.cpus}]\n    \"\"\"\n    else\n    \"\"\"\n    gatk --java-options ${markdup_java_options} \\\n        MarkDuplicates \\\n        --INPUT ${idSample}.bam \\\n        --METRICS_FILE ${idSample}.bam.metrics \\\n        --TMP_DIR . \\\n        --ASSUME_SORT_ORDER coordinate \\\n        --CREATE_INDEX true \\\n        --OUTPUT ${idSample}.md.bam\n    \n    mv ${idSample}.md.bai ${idSample}.md.bam.bai\n    \"\"\"\n}",
        "nb_lignes_process": 48,
        "string_script": "    markdup_java_options = task.memory.toGiga() > 8 ? params.markdup_java_options : \"\\\"-Xms\" +  (task.memory.toGiga() / 2).trunc() + \"g -Xmx\" + (task.memory.toGiga() - 1) + \"g\\\"\"\n    metrics = 'markduplicates' in skipQC ? '' : \"-M ${idSample}.bam.metrics\"\n    if (params.use_gatk_spark)\n    \"\"\"\n    gatk --java-options ${markdup_java_options} \\\n        MarkDuplicatesSpark \\\n        -I ${idSample}.bam \\\n        -O ${idSample}.md.bam \\\n        ${metrics} \\\n        --tmp-dir . \\\n        --create-output-bam-index true \\\n        --spark-master local[${task.cpus}]\n    \"\"\"\n    else\n    \"\"\"\n    gatk --java-options ${markdup_java_options} \\\n        MarkDuplicates \\\n        --INPUT ${idSample}.bam \\\n        --METRICS_FILE ${idSample}.bam.metrics \\\n        --TMP_DIR . \\\n        --ASSUME_SORT_ORDER coordinate \\\n        --CREATE_INDEX true \\\n        --OUTPUT ${idSample}.md.bam\n    \n    mv ${idSample}.md.bai ${idSample}.md.bam.bai\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "GRmetrics",
            "GATK",
            "MarkDuplicates (IP)"
        ],
        "tools_url": [
            "https://bio.tools/grmetrics",
            "https://bio.tools/gatk",
            "https://bio.tools/markduplicates_ip"
        ],
        "tools_dico": [
            {
                "name": "GRmetrics",
                "uri": "https://bio.tools/grmetrics",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3336",
                            "term": "Drug discovery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3438",
                                    "term": "Calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Functions for calculating and visualizing growth-rate inhibition (GR) metrics.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GRmetrics.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MarkDuplicates (IP)",
                "uri": "https://bio.tools/markduplicates_ip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Marks all duplicate reads in a provided SAM or BAM file and either removes them or flags them.",
                "homepage": "https://galaxy.pasteur.fr/tool_runner?tool_id=toolshed.pasteur.fr/repos/fmareuil/picard_pasteur_wrapper/rgPicardMarkDups/1.56.0"
            }
        ],
        "inputs": [
            "bam_mapped_merged"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_duplicates_marked",
            "tsv_bam_duplicates_marked",
            "duplicates_marked_report"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_16'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"${idSample}.bam.metrics\") \"Reports/${idSample}/MarkDuplicates/${it}\" else \"Preprocessing/${idSample}/DuplicatesMarked/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_Dedup": {
        "name_process": "Sentieon_Dedup",
        "string_process": "\nprocess Sentieon_Dedup {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"${idSample}_*.txt\" && 'sentieon' in skipQC) null\n            else if (it == \"${idSample}_*.txt\") \"Reports/${idSample}/Sentieon/${it}\"\n            else \"Preprocessing/${idSample}/DedupedSentieon/${it}\"\n        }\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bam_sentieon_mapped_merged_indexed\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.deduped.bam\"), file(\"${idSample}.deduped.bam.bai\") into bam_sentieon_dedup\n\n    when: params.sentieon\n\n    script:\n    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        -r ${fasta} \\\n        --algo GCBias --summary ${idSample}_gc_summary.txt ${idSample}_gc_metric.txt \\\n        --algo MeanQualityByCycle ${idSample}_mq_metric.txt \\\n        --algo QualDistribution ${idSample}_qd_metric.txt \\\n        --algo InsertSizeMetricAlgo ${idSample}_is_metric.txt  \\\n        --algo AlignmentStat ${idSample}_aln_metric.txt\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        --algo LocusCollector \\\n        --fun score_info ${idSample}_score.gz\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        --algo Dedup \\\n        --rmdup \\\n        --score_info ${idSample}_score.gz  \\\n        --metrics ${idSample}_dedup_metric.txt ${idSample}.deduped.bam\n    \"\"\"\n}",
        "nb_lignes_process": 50,
        "string_script": "    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        -r ${fasta} \\\n        --algo GCBias --summary ${idSample}_gc_summary.txt ${idSample}_gc_metric.txt \\\n        --algo MeanQualityByCycle ${idSample}_mq_metric.txt \\\n        --algo QualDistribution ${idSample}_qd_metric.txt \\\n        --algo InsertSizeMetricAlgo ${idSample}_is_metric.txt  \\\n        --algo AlignmentStat ${idSample}_aln_metric.txt\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        --algo LocusCollector \\\n        --fun score_info ${idSample}_score.gz\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -i ${bam} \\\n        --algo Dedup \\\n        --rmdup \\\n        --score_info ${idSample}_score.gz  \\\n        --metrics ${idSample}_dedup_metric.txt ${idSample}.deduped.bam\n    \"\"\"",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_sentieon_mapped_merged_indexed",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "bam_sentieon_dedup"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"${idSample}_*.txt\" && 'sentieon' in skipQC) null else if (it == \"${idSample}_*.txt\") \"Reports/${idSample}/Sentieon/${it}\" else \"Preprocessing/${idSample}/DedupedSentieon/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "BaseRecalibrator": {
        "name_process": "BaseRecalibrator",
        "string_process": "\nprocess BaseRecalibrator {\n    label 'cpus_1'\n\n    tag \"${idPatient}-${idSample}-${intervalBed.baseName}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(intervalBed) from bamBaseRecalibrator\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(dict) from ch_dict\n        file(fastaFai) from ch_fai\n        file(knownIndels) from ch_known_indels\n        file(knownIndelsIndex) from ch_known_indels_tbi\n\n    output:\n        set idPatient, idSample, file(\"${prefix}${idSample}.recal.table\") into tableGatherBQSRReports\n        set idPatient, idSample into recalTableTSVnoInt\n\n    when: params.known_indels\n\n    script:\n    dbsnpOptions = params.dbsnp ? \"--known-sites ${dbsnp}\" : \"\"\n    knownOptions = params.known_indels ? knownIndels.collect{\"--known-sites ${it}\"}.join(' ') : \"\"\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n                                         \n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        BaseRecalibrator \\\n        -I ${bam} \\\n        -O ${prefix}${idSample}.recal.table \\\n        --tmp-dir . \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        ${knownOptions} \\\n        --verbosity INFO\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    dbsnpOptions = params.dbsnp ? \"--known-sites ${dbsnp}\" : \"\"\n    knownOptions = params.known_indels ? knownIndels.collect{\"--known-sites ${it}\"}.join(' ') : \"\"\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n                                         \n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        BaseRecalibrator \\\n        -I ${bam} \\\n        -O ${prefix}${idSample}.recal.table \\\n        --tmp-dir . \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        ${knownOptions} \\\n        --verbosity INFO\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamBaseRecalibrator",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_dict",
            "ch_fai",
            "ch_known_indels",
            "ch_known_indels_tbi"
        ],
        "nb_inputs": 8,
        "outputs": [
            "tableGatherBQSRReports",
            "recalTableTSVnoInt"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${idPatient}-${idSample}-${intervalBed.baseName}\""
        ],
        "when": "",
        "stub": ""
    },
    "GatherBQSRReports": {
        "name_process": "GatherBQSRReports",
        "string_process": "\nprocess GatherBQSRReports {\n    label 'memory_singleCPU_2_task'\n    label 'cpus_2'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"${idSample}.recal.table\" && !params.skip_markduplicates) \"Preprocessing/${idSample}/DuplicatesMarked/${it}\"\n            else \"Preprocessing/${idSample}/Mapped/${it}\"\n        }\n\n    input:\n        set idPatient, idSample, file(recal) from tableGatherBQSRReports\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.recal.table\") into recalTable\n        file(\"${idSample}.recal.table\") into baseRecalibratorReport\n        set idPatient, idSample into recalTableTSV\n\n    when: !(params.no_intervals)\n\n    script:\n    input = recal.collect{\"-I ${it}\"}.join(' ')\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GatherBQSRReports \\\n        ${input} \\\n        -O ${idSample}.recal.table \\\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    input = recal.collect{\"-I ${it}\"}.join(' ')\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GatherBQSRReports \\\n        ${input} \\\n        -O ${idSample}.recal.table \\\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "wossinput",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/wossinput",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "tableGatherBQSRReports"
        ],
        "nb_inputs": 1,
        "outputs": [
            "recalTable",
            "baseRecalibratorReport",
            "recalTableTSV"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "label 'cpus_2'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"${idSample}.recal.table\" && !params.skip_markduplicates) \"Preprocessing/${idSample}/DuplicatesMarked/${it}\" else \"Preprocessing/${idSample}/Mapped/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "ApplyBQSR": {
        "name_process": "ApplyBQSR",
        "string_process": "\nprocess ApplyBQSR {\n    label 'memory_singleCPU_2_task'\n    label 'cpus_2'\n\n    tag \"${idPatient}-${idSample}-${intervalBed.baseName}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(recalibrationReport), file(intervalBed) from bamApplyBQSR\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, file(\"${prefix}${idSample}.recal.bam\") into bam_recalibrated_to_merge\n\n    script:\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        ApplyBQSR \\\n        -R ${fasta} \\\n        --input ${bam} \\\n        --output ${prefix}${idSample}.recal.bam \\\n        ${intervalsOptions} \\\n        --bqsr-recal-file ${recalibrationReport}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        ApplyBQSR \\\n        -R ${fasta} \\\n        --input ${bam} \\\n        --output ${prefix}${idSample}.recal.bam \\\n        ${intervalsOptions} \\\n        --bqsr-recal-file ${recalibrationReport}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamApplyBQSR",
            "ch_dict",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 4,
        "outputs": [
            "bam_recalibrated_to_merge"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "label 'cpus_2'",
            "tag \"${idPatient}-${idSample}-${intervalBed.baseName}\""
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_BQSR": {
        "name_process": "Sentieon_BQSR",
        "string_process": "\nprocess Sentieon_BQSR {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"${idSample}_recal_result.csv\" && 'sentieon' in skipQC) \"Reports/${idSample}/Sentieon/${it}\"\n            else \"Preprocessing/${idSample}/RecalSentieon/${it}\"\n        }\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bam_sentieon_dedup\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(dict) from ch_dict\n        file(fastaFai) from ch_fai\n        file(knownIndels) from ch_known_indels\n        file(knownIndelsIndex) from ch_known_indels_tbi\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bam.bai\") into bam_sentieon_recal\n        set idPatient, idSample, file(bam), file(bai), file(\"${idSample}.recal.table\") into bam_sentieon_deduped_table\n        set idPatient, idSample into tsv_sentieon\n\n    when: params.sentieon\n\n    script:\n    known = knownIndels.collect{\"--known-sites ${it}\"}.join(' ')\n    \"\"\"\n    sentieon driver  \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${idSample}.deduped.bam \\\n        --algo QualCal \\\n        -k ${dbsnp} \\\n        ${idSample}.recal.table\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${idSample}.deduped.bam \\\n        -q ${idSample}.recal.table \\\n        --algo QualCal \\\n        -k ${dbsnp} \\\n        ${idSample}.table.post \\\n        --algo ReadWriter ${idSample}.recal.bam\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        --algo QualCal \\\n        --plot \\\n        --before ${idSample}.recal.table \\\n        --after ${idSample}.table.post \\\n        ${idSample}_recal_result.csv\n    \"\"\"\n}",
        "nb_lignes_process": 59,
        "string_script": "    known = knownIndels.collect{\"--known-sites ${it}\"}.join(' ')\n    \"\"\"\n    sentieon driver  \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${idSample}.deduped.bam \\\n        --algo QualCal \\\n        -k ${dbsnp} \\\n        ${idSample}.recal.table\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${idSample}.deduped.bam \\\n        -q ${idSample}.recal.table \\\n        --algo QualCal \\\n        -k ${dbsnp} \\\n        ${idSample}.table.post \\\n        --algo ReadWriter ${idSample}.recal.bam\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        --algo QualCal \\\n        --plot \\\n        --before ${idSample}.recal.table \\\n        --after ${idSample}.table.post \\\n        ${idSample}_recal_result.csv\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_sentieon_dedup",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_dict",
            "ch_fai",
            "ch_known_indels",
            "ch_known_indels_tbi"
        ],
        "nb_inputs": 8,
        "outputs": [
            "bam_sentieon_recal",
            "bam_sentieon_deduped_table",
            "tsv_sentieon"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"${idSample}_recal_result.csv\" && 'sentieon' in skipQC) \"Reports/${idSample}/Sentieon/${it}\" else \"Preprocessing/${idSample}/RecalSentieon/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBamRecal": {
        "name_process": "MergeBamRecal",
        "string_process": "\nprocess MergeBamRecal {\n    label 'cpus_8'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(bam) from bam_recalibrated_to_merge\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bam.bai\") into bam_recalibrated\n        set idPatient, idSample, file(\"${idSample}.recal.bam\") into bam_recalibrated_qc\n        set idPatient, idSample into tsv_bam_recalibrated\n\n    when: !(params.no_intervals)\n\n    script:\n    \"\"\"\n    samtools merge --threads ${task.cpus} ${idSample}.recal.bam ${bam}\n    samtools index ${idSample}.recal.bam\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    samtools merge --threads ${task.cpus} ${idSample}.recal.bam ${bam}\n    samtools index ${idSample}.recal.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_recalibrated_to_merge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_recalibrated",
            "bam_recalibrated_qc",
            "tsv_bam_recalibrated"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "IndexBamRecal": {
        "name_process": "IndexBamRecal",
        "string_process": "\nprocess IndexBamRecal {\n    label 'cpus_8'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(\"${idSample}.recal.bam\") from bam_recalibrated_to_index\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bam.bai\") into bam_recalibrated_indexed\n        set idPatient, idSample, file(\"${idSample}.recal.bam\") into bam_recalibrated_no_int_qc\n        set idPatient, idSample into tsv_bam_recalibrated_no_int\n\n    when: params.no_intervals\n\n    script:\n    \"\"\"\n    samtools index ${idSample}.recal.bam\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    samtools index ${idSample}.recal.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_recalibrated_to_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_recalibrated_indexed",
            "bam_recalibrated_no_int_qc",
            "tsv_bam_recalibrated_no_int"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SamtoolsStats": {
        "name_process": "SamtoolsStats",
        "string_process": "\nprocess SamtoolsStats {\n    label 'cpus_2'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/SamToolsStats\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(bam) from bam_recalibrated_samtools_stats\n\n    output:\n        file (\"${bam}.samtools.stats.out\") into samtoolsStatsReport\n\n    when: !('samtools' in skipQC)\n\n    script:\n    \"\"\"\n    samtools stats ${bam} > ${bam}.samtools.stats.out\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    samtools stats ${bam} > ${bam}.samtools.stats.out\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_recalibrated_samtools_stats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samtoolsStatsReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_2'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/SamToolsStats\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BamQC": {
        "name_process": "BamQC",
        "string_process": "\nprocess BamQC {\n    label 'memory_max'\n    label 'cpus_16'\n\n    tag \"${idPatient}-${idSample}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/bamQC\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(bam) from bamBamQC\n        file(targetBED) from ch_target_bed\n\n    output:\n        file(\"${bam.baseName}\") into bamQCReport\n\n    when: !('bamqc' in skipQC)\n\n    script:\n    use_bed = params.target_bed ? \"-gff ${targetBED}\" : ''\n    \"\"\"\n    qualimap --java-mem-size=${task.memory.toGiga()}G \\\n        bamqc \\\n        -bam ${bam} \\\n        --paint-chromosome-limits \\\n        --genome-gc-distr HUMAN \\\n        $use_bed \\\n        -nt ${task.cpus} \\\n        -skip-duplicated \\\n        --skip-dup-mode 0 \\\n        -outdir ${bam.baseName} \\\n        -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    use_bed = params.target_bed ? \"-gff ${targetBED}\" : ''\n    \"\"\"\n    qualimap --java-mem-size=${task.memory.toGiga()}G \\\n        bamqc \\\n        -bam ${bam} \\\n        --paint-chromosome-limits \\\n        --genome-gc-distr HUMAN \\\n        $use_bed \\\n        -nt ${task.cpus} \\\n        -skip-duplicated \\\n        --skip-dup-mode 0 \\\n        -outdir ${bam.baseName} \\\n        -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bamBamQC",
            "ch_target_bed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bamQCReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_max'",
            "label 'cpus_16'",
            "tag \"${idPatient}-${idSample}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/bamQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "HaplotypeCaller": {
        "name_process": "HaplotypeCaller",
        "string_process": "\nprocess HaplotypeCaller {\n    label 'memory_singleCPU_task_sq'\n    label 'cpus_2'\n\n    tag \"${idSample}-${intervalBed.baseName}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(intervalBed) from bamHaplotypeCaller\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set val(\"HaplotypeCallerGVCF\"), idPatient, idSample, file(\"${intervalBed.baseName}_${idSample}.g.vcf\") into gvcfHaplotypeCaller\n        set idPatient, idSample, file(intervalBed), file(\"${intervalBed.baseName}_${idSample}.g.vcf\") into gvcfGenotypeGVCFs\n\n    when: 'haplotypecaller' in tools\n\n    script:\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    dbsnpOptions = params.dbsnp ? \"--D ${dbsnp}\" : \"\"\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n        HaplotypeCaller \\\n        -R ${fasta} \\\n        -I ${bam} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n        -ERC GVCF\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    dbsnpOptions = params.dbsnp ? \"--D ${dbsnp}\" : \"\"\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n        HaplotypeCaller \\\n        -R ${fasta} \\\n        -I ${bam} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n        -ERC GVCF\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamHaplotypeCaller",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_dict",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 6,
        "outputs": [
            "gvcfHaplotypeCaller",
            "gvcfGenotypeGVCFs"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_task_sq'",
            "label 'cpus_2'",
            "tag \"${idSample}-${intervalBed.baseName}\""
        ],
        "when": "",
        "stub": ""
    },
    "GenotypeGVCFs": {
        "name_process": "GenotypeGVCFs",
        "string_process": "\nprocess GenotypeGVCFs {\n    tag \"${idSample}-${intervalBed.baseName}\"\n\n    input:\n        set idPatient, idSample, file(intervalBed), file(gvcf) from gvcfGenotypeGVCFs\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n    set val(\"HaplotypeCaller\"), idPatient, idSample, file(\"${intervalBed.baseName}_${idSample}.vcf\") into vcfGenotypeGVCFs\n\n    when: 'haplotypecaller' in tools\n\n    script:\n                                                                                   \n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    dbsnpOptions = params.dbsnp ? \"--D ${dbsnp}\" : \"\"\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        IndexFeatureFile \\\n        -I ${gvcf}\n\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        -V ${gvcf} \\\n        -O ${intervalBed.baseName}_${idSample}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    dbsnpOptions = params.dbsnp ? \"--D ${dbsnp}\" : \"\"\n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        IndexFeatureFile \\\n        -I ${gvcf}\n\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        -V ${gvcf} \\\n        -O ${intervalBed.baseName}_${idSample}.vcf\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "gvcfGenotypeGVCFs",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_dict",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 6,
        "outputs": [
            "vcfGenotypeGVCFs"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSample}-${intervalBed.baseName}\""
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_DNAseq": {
        "name_process": "Sentieon_DNAseq",
        "string_process": "\nprocess Sentieon_DNAseq {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idSample}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(recal) from bam_sentieon_DNAseq\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n    set val(\"SentieonDNAseq\"), idPatient, idSample, file(\"DNAseq_${idSample}.vcf\") into vcf_sentieon_DNAseq\n\n    when: 'dnaseq' in tools && params.sentieon\n\n    script:\n    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo Haplotyper \\\n        -d ${dbsnp} \\\n        DNAseq_${idSample}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo Haplotyper \\\n        -d ${dbsnp} \\\n        DNAseq_${idSample}.vcf\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_sentieon_DNAseq",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 5,
        "outputs": [
            "vcf_sentieon_DNAseq"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_DNAscope": {
        "name_process": "Sentieon_DNAscope",
        "string_process": "\nprocess Sentieon_DNAscope {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idSample}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(recal) from bam_sentieon_DNAscope\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n    set val(\"SentieonDNAscope\"), idPatient, idSample, file(\"DNAscope_${idSample}.vcf\") into vcf_sentieon_DNAscope\n    set val(\"SentieonDNAscope\"), idPatient, idSample, file(\"DNAscope_SV_${idSample}.vcf\") into vcf_sentieon_DNAscope_SV\n\n    when: 'dnascope' in tools && params.sentieon\n\n    script:\n    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo DNAscope \\\n        -d ${dbsnp} \\\n        DNAscope_${idSample}.vcf\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta}\\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo DNAscope \\\n        --var_type bnd \\\n        -d ${dbsnp} \\\n        DNAscope_${idSample}.temp.vcf\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta}\\\n        -q ${recal} \\\n        --algo SVSolver \\\n        -v DNAscope_${idSample}.temp.vcf \\\n        DNAscope_SV_${idSample}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo DNAscope \\\n        -d ${dbsnp} \\\n        DNAscope_${idSample}.vcf\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta}\\\n        -i ${bam} \\\n        -q ${recal} \\\n        --algo DNAscope \\\n        --var_type bnd \\\n        -d ${dbsnp} \\\n        DNAscope_${idSample}.temp.vcf\n\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta}\\\n        -q ${recal} \\\n        --algo SVSolver \\\n        -v DNAscope_${idSample}.temp.vcf \\\n        DNAscope_SV_${idSample}.vcf\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_sentieon_DNAscope",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 5,
        "outputs": [
            "vcf_sentieon_DNAscope",
            "vcf_sentieon_DNAscope_SV"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "StrelkaSingle": {
        "name_process": "StrelkaSingle",
        "string_process": "\nprocess StrelkaSingle {\n    label 'cpus_max'\n    label 'memory_max'\n\n    tag \"${idSample}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/Strelka\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bamStrelkaSingle\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set val(\"Strelka\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfStrelkaSingle\n\n    when: 'strelka' in tools\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaGermlineWorkflow.py \\\n        --bam ${bam} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/genome.*.vcf.gz \\\n        Strelka_${idSample}_genome.vcf.gz\n    mv Strelka/results/variants/genome.*.vcf.gz.tbi \\\n        Strelka_${idSample}_genome.vcf.gz.tbi\n    mv Strelka/results/variants/variants.vcf.gz \\\n        Strelka_${idSample}_variants.vcf.gz\n    mv Strelka/results/variants/variants.vcf.gz.tbi \\\n        Strelka_${idSample}_variants.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaGermlineWorkflow.py \\\n        --bam ${bam} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/genome.*.vcf.gz \\\n        Strelka_${idSample}_genome.vcf.gz\n    mv Strelka/results/variants/genome.*.vcf.gz.tbi \\\n        Strelka_${idSample}_genome.vcf.gz.tbi\n    mv Strelka/results/variants/variants.vcf.gz \\\n        Strelka_${idSample}_variants.vcf.gz\n    mv Strelka/results/variants/variants.vcf.gz.tbi \\\n        Strelka_${idSample}_variants.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamStrelkaSingle",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 4,
        "outputs": [
            "vcfStrelkaSingle"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/Strelka\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MantaSingle": {
        "name_process": "MantaSingle",
        "string_process": "\nprocess MantaSingle {\n    label 'cpus_max'\n    label 'memory_max'\n\n    tag \"${idSample}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/Manta\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bamMantaSingle\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set val(\"Manta\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfMantaSingle\n\n    when: 'manta' in tools\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    status = statusMap[idPatient, idSample]\n    inputbam = status == 0 ? \"--bam\" : \"--tumorBam\"\n    vcftype = status == 0 ? \"diploid\" : \"tumor\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        ${inputbam} ${bam} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSample}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/${vcftype}SV.vcf.gz \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz\n    mv Manta/results/variants/${vcftype}SV.vcf.gz.tbi \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 48,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    status = statusMap[idPatient, idSample]\n    inputbam = status == 0 ? \"--bam\" : \"--tumorBam\"\n    vcftype = status == 0 ? \"diploid\" : \"tumor\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        ${inputbam} ${bam} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSample}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/${vcftype}SV.vcf.gz \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz\n    mv Manta/results/variants/${vcftype}SV.vcf.gz.tbi \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamMantaSingle",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 4,
        "outputs": [
            "vcfMantaSingle"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/Manta\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "TIDDIT": {
        "name_process": "TIDDIT",
        "string_process": "\nprocess TIDDIT {\n    tag \"${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"TIDDIT_${idSample}.vcf\") \"VariantCalling/${idSample}/TIDDIT/${it}\"\n            else \"Reports/${idSample}/TIDDIT/${it}\"\n        }\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bamTIDDIT\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set val(\"TIDDIT\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.tbi\") into vcfTIDDIT\n        set file(\"TIDDIT_${idSample}.old.vcf\"), file(\"TIDDIT_${idSample}.ploidy.tab\"), file(\"TIDDIT_${idSample}.signals.tab\"), file(\"TIDDIT_${idSample}.wig\"), file(\"TIDDIT_${idSample}.gc.wig\") into tidditOut\n\n    when: 'tiddit' in tools\n\n    script:\n    \"\"\"\n    tiddit --sv -o TIDDIT_${idSample} --bam ${bam} --ref ${fasta}\n\n    mv TIDDIT_${idSample}.vcf TIDDIT_${idSample}.old.vcf\n\n    grep -E \"#|PASS\" TIDDIT_${idSample}.old.vcf > TIDDIT_${idSample}.vcf\n\n    bgzip --threads ${task.cpus} -c TIDDIT_${idSample}.vcf > TIDDIT_${idSample}.vcf.gz\n\n    tabix TIDDIT_${idSample}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    tiddit --sv -o TIDDIT_${idSample} --bam ${bam} --ref ${fasta}\n\n    mv TIDDIT_${idSample}.vcf TIDDIT_${idSample}.old.vcf\n\n    grep -E \"#|PASS\" TIDDIT_${idSample}.old.vcf > TIDDIT_${idSample}.vcf\n\n    bgzip --threads ${task.cpus} -c TIDDIT_${idSample}.vcf > TIDDIT_${idSample}.vcf.gz\n\n    tabix TIDDIT_${idSample}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "TIDDIT",
            "PASS"
        ],
        "tools_url": [
            "https://bio.tools/tiddit",
            "https://bio.tools/pass"
        ],
        "tools_dico": [
            {
                "name": "TIDDIT",
                "uri": "https://bio.tools/tiddit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Efficient and comprehensive structural variant caller for massive parallel sequencing data. Identify chromosomal rearrangements using Mate Pair or Paired End sequencing data. It allows identification of intra and inter-chromosomal translocations, deletions, tandem-duplications and inversions, using supplementary alignments as well as discordant pairs.",
                "homepage": "https://github.com/J35P312/TIDDIT"
            },
            {
                "name": "PASS",
                "uri": "https://bio.tools/pass",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PASS: a program to align short sequences",
                "homepage": "http://pass.cribi.unipd.it/cgi-bin/pass.pl"
            }
        ],
        "inputs": [
            "bamTIDDIT",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfTIDDIT",
            "tidditOut"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"TIDDIT_${idSample}.vcf\") \"VariantCalling/${idSample}/TIDDIT/${it}\" else \"Reports/${idSample}/TIDDIT/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "FreebayesSingle": {
        "name_process": "FreebayesSingle",
        "string_process": "\nprocess FreebayesSingle {\n    tag \"${idSample}-${intervalBed.baseName}\"\n\n    label 'cpus_1'\n    \n    input:\n        set idPatient, idSample, file(bam), file(bai), file(intervalBed) from bamFreebayesSingle\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_software_versions_yaml\n    \n    output:\n        set val(\"FreeBayes\"), idPatient, idSample, file(\"${intervalBed.baseName}_${idSample}.vcf\") into vcfFreebayesSingle\n    \n    when: 'freebayes' in tools\n\n    script:\n    intervalsOptions = params.no_intervals ? \"\" : \"-t ${intervalBed}\"\n    \"\"\"\n    freebayes \\\n        -f ${fasta} \\\n        --min-alternate-fraction 0.1 \\\n        --min-mapping-quality 1 \\\n        ${intervalsOptions} \\\n        ${bam} > ${intervalBed.baseName}_${idSample}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    intervalsOptions = params.no_intervals ? \"\" : \"-t ${intervalBed}\"\n    \"\"\"\n    freebayes \\\n        -f ${fasta} \\\n        --min-alternate-fraction 0.1 \\\n        --min-mapping-quality 1 \\\n        ${intervalsOptions} \\\n        ${bam} > ${intervalBed.baseName}_${idSample}.vcf\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FreeBayes"
        ],
        "tools_url": [
            "https://bio.tools/freebayes"
        ],
        "tools_dico": [
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            }
        ],
        "inputs": [
            "bamFreebayesSingle",
            "ch_fasta",
            "ch_software_versions_yaml"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfFreebayesSingle"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSample}-${intervalBed.baseName}\"",
            "label 'cpus_1'"
        ],
        "when": "",
        "stub": ""
    },
    "FreeBayes": {
        "name_process": "FreeBayes",
        "string_process": "\nprocess FreeBayes {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"\n\n    label 'cpus_1'\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(intervalBed) from pairBamFreeBayes\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set val(\"FreeBayes\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\") into vcfFreeBayes\n\n    when: 'freebayes' in tools\n\n    script:\n    intervalsOptions = params.no_intervals ? \"\" : \"-t ${intervalBed}\"\n    \"\"\"\n    freebayes \\\n        -f ${fasta} \\\n        --pooled-continuous \\\n        --pooled-discrete \\\n        --genotype-qualities \\\n        --report-genotype-likelihood-max \\\n        --allele-balance-priors-off \\\n        --min-alternate-fraction 0.03 \\\n        --min-repeat-entropy 1 \\\n        --min-alternate-count 2 \\\n        ${intervalsOptions} \\\n        ${bamTumor} \\\n        ${bamNormal} > ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    intervalsOptions = params.no_intervals ? \"\" : \"-t ${intervalBed}\"\n    \"\"\"\n    freebayes \\\n        -f ${fasta} \\\n        --pooled-continuous \\\n        --pooled-discrete \\\n        --genotype-qualities \\\n        --report-genotype-likelihood-max \\\n        --allele-balance-priors-off \\\n        --min-alternate-fraction 0.03 \\\n        --min-repeat-entropy 1 \\\n        --min-alternate-count 2 \\\n        ${intervalsOptions} \\\n        ${bamTumor} \\\n        ${bamNormal} > ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "FreeBayes"
        ],
        "tools_url": [
            "https://bio.tools/freebayes"
        ],
        "tools_dico": [
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            }
        ],
        "inputs": [
            "pairBamFreeBayes",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfFreeBayes"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"",
            "label 'cpus_1'"
        ],
        "when": "",
        "stub": ""
    },
    "Mutect2": {
        "name_process": "Mutect2",
        "string_process": "\nprocess Mutect2 {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"\n\n    label 'cpus_1'\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(intervalBed) from pairBamMutect2\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(germlineResource) from ch_germline_resource\n        file(germlineResourceIndex) from ch_germline_resource_tbi\n        file(intervals) from ch_intervals\n        file(pon) from ch_pon\n        file(ponIndex) from ch_pon_tbi\n\n    output:\n        set val(\"Mutect2\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\") into mutect2Output\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf.stats\") optional true into intervalStatsFiles\n        set idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf.stats\"), file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\") optional true into mutect2Stats\n\n    when: 'mutect2' in tools\n\n    script:\n                                                                \n                                                                                                                    \n    PON = params.pon ? \"--panel-of-normals ${pon}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    softClippedOption = params.ignore_soft_clipped_bases ? \"--dont-use-soft-clipped-bases true\" : \"\"\n    \"\"\"\n    # Get raw calls\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta}\\\n      -I ${bamTumor}  -tumor ${idSampleTumor} \\\n      -I ${bamNormal} -normal ${idSampleNormal} \\\n      ${intervalsOptions} \\\n      ${softClippedOption} \\\n      --germline-resource ${germlineResource} \\\n      ${PON} \\\n      -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "    PON = params.pon ? \"--panel-of-normals ${pon}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    softClippedOption = params.ignore_soft_clipped_bases ? \"--dont-use-soft-clipped-bases true\" : \"\"\n    \"\"\"\n    # Get raw calls\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta}\\\n      -I ${bamTumor}  -tumor ${idSampleTumor} \\\n      -I ${bamNormal} -normal ${idSampleNormal} \\\n      ${intervalsOptions} \\\n      ${softClippedOption} \\\n      --germline-resource ${germlineResource} \\\n      ${PON} \\\n      -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "pong",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/pong",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "pong",
                "uri": "https://bio.tools/pong",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3083",
                                    "term": "Pathway or network visualisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Freely available software package for post-processing output from clustering inference using population genetic data",
                "homepage": "http://brown.edu/Research/Ramachandran_Lab/projects/"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pairBamMutect2",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_germline_resource",
            "ch_germline_resource_tbi",
            "ch_intervals",
            "ch_pon",
            "ch_pon_tbi"
        ],
        "nb_inputs": 9,
        "outputs": [
            "mutect2Output",
            "intervalStatsFiles",
            "mutect2Stats"
        ],
        "nb_outputs": 3,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"",
            "label 'cpus_1'"
        ],
        "when": "",
        "stub": ""
    },
    "MergeMutect2Stats": {
        "name_process": "MergeMutect2Stats",
        "string_process": "\nprocess MergeMutect2Stats {\n    tag \"${idSamplePair}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSamplePair}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSamplePair, file(statsFiles), file(vcf) from mutect2Stats                                                   \n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(germlineResource) from ch_germline_resource\n        file(germlineResourceIndex) from ch_germline_resource_tbi\n        file(intervals) from ch_intervals\n\n    output:\n        set idPatient, idSamplePair, file(\"${idSamplePair}.vcf.gz.stats\") into mergedStatsFile\n\n    when: 'mutect2' in tools\n\n    script:\n               stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSamplePair}.vcf.gz.stats\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "               stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSamplePair}.vcf.gz.stats\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GOstats",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gostats",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GOstats",
                "uri": "https://bio.tools/gostats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0582",
                                "term": "Ontology"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2884",
                                "term": "Plot"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_1772",
                                "term": "Score"
                            }
                        ]
                    }
                ],
                "description": "A set of tools for interacting with GO and microarray data. A variety of basic manipulation tools for graphs, hypothesis testing and other simple calculations.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GOstats.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "mutect2Stats",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_germline_resource",
            "ch_germline_resource_tbi",
            "ch_intervals"
        ],
        "nb_inputs": 7,
        "outputs": [
            "mergedStatsFile"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSamplePair}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSamplePair}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatVCF": {
        "name_process": "ConcatVCF",
        "string_process": "\nprocess ConcatVCF {\n    label 'concat_vcf'\n    label 'cpus_8'\n\n    tag \"${variantCaller}-${idSample}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/${\"$variantCaller\"}\", mode: params.publish_dir_mode\n\n    input:\n        set variantCaller, idPatient, idSample, file(vcf) from vcfConcatenateVCFs\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n                                                                                  \n        set variantCaller, idPatient, idSample, file(\"*_*.vcf.gz\"), file(\"*_*.vcf.gz.tbi\") into vcfConcatenated\n\n    when: ('haplotypecaller' in tools || 'mutect2' in tools || 'freebayes' in tools)\n\n    script:\n    if (variantCaller == 'HaplotypeCallerGVCF')\n        outputFile = \"HaplotypeCaller_${idSample}.g.vcf\"\n    else\n        outputFile = \"${variantCaller}_${idSample}.vcf\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"-n\" : \"\"\n    \"\"\"\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outputFile} ${options} ${intervalsOptions}\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    if (variantCaller == 'HaplotypeCallerGVCF')\n        outputFile = \"HaplotypeCaller_${idSample}.g.vcf\"\n    else\n        outputFile = \"${variantCaller}_${idSample}.vcf\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"-n\" : \"\"\n    \"\"\"\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outputFile} ${options} ${intervalsOptions}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfConcatenateVCFs",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfConcatenated"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'concat_vcf'",
            "label 'cpus_8'",
            "tag \"${variantCaller}-${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/${\"$variantCaller\"}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatVCF_Mutect2": {
        "name_process": "ConcatVCF_Mutect2",
        "string_process": "\nprocess ConcatVCF_Mutect2 {\n    label 'concat_vcf'\n    label 'cpus_8'\n\n    tag \"${idSample}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n        set variantCaller, idPatient, idSample, file(vcf) from mutect2Output\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n                                                                                  \n        set variantCaller, idPatient, idSample, file(\"*_*.vcf.gz\"), file(\"*_*.vcf.gz.tbi\") into vcfConcatenatedForFilter\n\n    when: ('haplotypecaller' in tools || 'mutect2' in tools || 'freebayes' in tools)\n\n    script:\n    outputFile = \"Mutect2_unfiltered_${idSample}.vcf\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"-n\" : \"\"\n    \"\"\"\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outputFile} ${options} ${intervalsOptions}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    outputFile = \"Mutect2_unfiltered_${idSample}.vcf\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    intervalsOptions = params.no_intervals ? \"-n\" : \"\"\n    \"\"\"\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outputFile} ${options} ${intervalsOptions}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mutect2Output",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vcfConcatenatedForFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'concat_vcf'",
            "label 'cpus_8'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PileupSummariesForMutect2": {
        "name_process": "PileupSummariesForMutect2",
        "string_process": "\nprocess PileupSummariesForMutect2 {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"\n\n    label 'cpus_1'\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(bamNormal), file(baiNormal), file(bamTumor), file(baiTumor), file(intervalBed), file(statsFile) from pairBamPileupSummaries\n        file(germlineResource) from ch_germline_resource\n        file(germlineResourceIndex) from ch_germline_resource_tbi\n\n    output:\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${intervalBed.baseName}_${idSampleTumor}_pileupsummaries.table\") into pileupSummaries\n\n    when: 'mutect2' in tools\n\n    script:\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        GetPileupSummaries \\\n        -I ${bamTumor} \\\n        -V ${germlineResource} \\\n        ${intervalsOptions} \\\n        -O ${intervalBed.baseName}_${idSampleTumor}_pileupsummaries.table\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        GetPileupSummaries \\\n        -I ${bamTumor} \\\n        -V ${germlineResource} \\\n        ${intervalsOptions} \\\n        -O ${intervalBed.baseName}_${idSampleTumor}_pileupsummaries.table\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pairBamPileupSummaries",
            "ch_germline_resource",
            "ch_germline_resource_tbi"
        ],
        "nb_inputs": 3,
        "outputs": [
            "pileupSummaries"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}-${intervalBed.baseName}\"",
            "label 'cpus_1'"
        ],
        "when": "",
        "stub": ""
    },
    "MergePileupSummaries": {
        "name_process": "MergePileupSummaries",
        "string_process": "\nprocess MergePileupSummaries {\n    label 'cpus_1'\n\n    tag \"${idPatient}_${idSampleTumor}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(pileupSums) from pileupSummaries\n        file(dict) from ch_dict\n\n    output:\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleTumor}_pileupsummaries.table\") into mergedPileupFile\n\n    when: 'mutect2' in tools\n\n    script:\n    allPileups = pileupSums.collect{ \"-I ${it} \" }.join(' ')\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        GatherPileupSummaries \\\n        --sequence-dictionary ${dict} \\\n        ${allPileups} \\\n        -O ${idSampleTumor}_pileupsummaries.table\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    allPileups = pileupSums.collect{ \"-I ${it} \" }.join(' ')\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        GatherPileupSummaries \\\n        --sequence-dictionary ${dict} \\\n        ${allPileups} \\\n        -O ${idSampleTumor}_pileupsummaries.table\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pileupSummaries",
            "ch_dict"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mergedPileupFile"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${idPatient}_${idSampleTumor}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CalculateContamination": {
        "name_process": "CalculateContamination",
        "string_process": "\nprocess CalculateContamination {\n    label 'cpus_1'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(bamNormal), file(baiNormal), file(bamTumor), file(baiTumor), file(mergedPileup) from pairBamCalculateContamination\n\n     output:\n        set idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"${idSampleTumor}_contamination.table\") into contaminationTable\n\n    when: 'mutect2' in tools\n\n    script:   \n    \"\"\"\n    # calculate contamination\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CalculateContamination \\\n        -I ${idSampleTumor}_pileupsummaries.table \\\n        -O ${idSampleTumor}_contamination.table\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    # calculate contamination\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CalculateContamination \\\n        -I ${idSampleTumor}_pileupsummaries.table \\\n        -O ${idSampleTumor}_contamination.table\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pairBamCalculateContamination"
        ],
        "nb_inputs": 1,
        "outputs": [
            "contaminationTable"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "FilterMutect2Calls": {
        "name_process": "FilterMutect2Calls",
        "string_process": "\nprocess FilterMutect2Calls {\n    label 'cpus_1'\n\n    tag \"${idSamplePair}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSamplePair}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSamplePair, file(unfiltered), file(unfilteredIndex), file(stats), file(contaminationTable) from mutect2CallsToFilter\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(germlineResource) from ch_germline_resource\n        file(germlineResourceIndex) from ch_germline_resource_tbi\n        file(intervals) from ch_intervals\n\n    output:\n        set val(\"Mutect2\"), idPatient, idSamplePair, file(\"Mutect2_filtered_${idSamplePair}.vcf.gz\"), file(\"Mutect2_filtered_${idSamplePair}.vcf.gz.tbi\"), file(\"Mutect2_filtered_${idSamplePair}.vcf.gz.filteringStats.tsv\") into filteredMutect2Output\n\n    when: 'mutect2' in tools\n\n    script:\n    \"\"\"\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --contamination-table ${contaminationTable} \\\n        --stats ${stats} \\\n        -R ${fasta} \\\n        -O Mutect2_filtered_${idSamplePair}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --contamination-table ${contaminationTable} \\\n        --stats ${stats} \\\n        -R ${fasta} \\\n        -O Mutect2_filtered_${idSamplePair}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "mutect2CallsToFilter",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_germline_resource",
            "ch_germline_resource_tbi",
            "ch_intervals"
        ],
        "nb_inputs": 7,
        "outputs": [
            "filteredMutect2Output"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${idSamplePair}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSamplePair}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Sentieon_TNscope": {
        "name_process": "Sentieon_TNscope",
        "string_process": "\nprocess Sentieon_TNscope {\n    label 'cpus_max'\n    label 'memory_max'\n    label 'sentieon'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), file(recalNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(recalTumor) from bam_pair_sentieon_TNscope\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(pon) from ch_pon\n        file(ponIndex) from ch_pon_tbi\n\n    output:\n        set val(\"SentieonTNscope\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf\") into vcf_sentieon_TNscope\n\n    when: 'tnscope' in tools && params.sentieon\n\n    script:\n    PON = params.pon ? \"--pon ${pon}\" : \"\"\n    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bamTumor} \\\n        -q ${recalTumor} \\\n        -i ${bamNormal} \\\n        -q ${recalNormal} \\\n        --algo TNscope \\\n        --tumor_sample ${idSampleTumor} \\\n        --normal_sample ${idSampleNormal} \\\n        --dbsnp ${dbsnp} \\\n        ${PON} \\\n        TNscope_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    PON = params.pon ? \"--pon ${pon}\" : \"\"\n    \"\"\"\n    sentieon driver \\\n        -t ${task.cpus} \\\n        -r ${fasta} \\\n        -i ${bamTumor} \\\n        -q ${recalTumor} \\\n        -i ${bamNormal} \\\n        -q ${recalNormal} \\\n        --algo TNscope \\\n        --tumor_sample ${idSampleTumor} \\\n        --normal_sample ${idSampleNormal} \\\n        --dbsnp ${dbsnp} \\\n        ${PON} \\\n        TNscope_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "pong"
        ],
        "tools_url": [
            "https://bio.tools/pong"
        ],
        "tools_dico": [
            {
                "name": "pong",
                "uri": "https://bio.tools/pong",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3083",
                                    "term": "Pathway or network visualisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Freely available software package for post-processing output from clustering inference using population genetic data",
                "homepage": "http://brown.edu/Research/Ramachandran_Lab/projects/"
            }
        ],
        "inputs": [
            "bam_pair_sentieon_TNscope",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_pon",
            "ch_pon_tbi"
        ],
        "nb_inputs": 8,
        "outputs": [
            "vcf_sentieon_TNscope"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "label 'sentieon'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\""
        ],
        "when": "",
        "stub": ""
    },
    "CompressSentieonVCF": {
        "name_process": "CompressSentieonVCF",
        "string_process": "\nprocess CompressSentieonVCF {\n    tag \"${idSample} - ${vcf}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/${variantCaller}\", mode: params.publish_dir_mode\n\n    input:\n        set variantCaller, idPatient, idSample, file(vcf) from vcf_sentieon\n\n    output:\n        set variantCaller, idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcf_sentieon_compressed\n\n    script:\n    \"\"\"\n    bgzip < ${vcf} > ${vcf}.gz\n    tabix ${vcf}.gz\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    bgzip < ${vcf} > ${vcf}.gz\n    tabix ${vcf}.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf_sentieon"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcf_sentieon_compressed"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSample} - ${vcf}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/${variantCaller}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Strelka": {
        "name_process": "Strelka",
        "string_process": "\nprocess Strelka {\n    label 'cpus_max'\n    label 'memory_max'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamStrelka\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set val(\"Strelka\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfStrelka\n\n    when: 'strelka' in tools\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pairBamStrelka",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 5,
        "outputs": [
            "vcfStrelka"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Manta": {
        "name_process": "Manta",
        "string_process": "\nprocess Manta {\n    label 'cpus_max'\n    label 'memory_max'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Manta\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamManta\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set val(\"Manta\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfManta\n        set idPatient, idSampleNormal, idSampleTumor, file(\"*.candidateSmallIndels.vcf.gz\"), file(\"*.candidateSmallIndels.vcf.gz.tbi\") into mantaToStrelka\n\n    when: 'manta' in tools\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        --normalBam ${bamNormal} \\\n        --tumorBam ${bamTumor} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 51,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        --normalBam ${bamNormal} \\\n        --tumorBam ${bamTumor} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pairBamManta",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 4,
        "outputs": [
            "vcfManta",
            "mantaToStrelka"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Manta\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "StrelkaBP": {
        "name_process": "StrelkaBP",
        "string_process": "\nprocess StrelkaBP {\n    label 'cpus_max'\n    label 'memory_max'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(mantaCSI), file(mantaCSIi) from pairBamStrelkaBP\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set val(\"Strelka\"), idPatient, val(\"${idSampleTumor}_vs_${idSampleNormal}\"), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into vcfStrelkaBP\n\n    when: 'strelka' in tools && 'manta' in tools && !params.no_strelka_bp\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        --indelCandidates ${mantaCSI} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configureStrelkaSomaticWorkflow.py \\\n        --tumor ${bamTumor} \\\n        --normal ${bamNormal} \\\n        --referenceFasta ${fasta} \\\n        --indelCandidates ${mantaCSI} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/somatic.indels.vcf.gz \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n    mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n    mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n    mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n        StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pairBamStrelkaBP",
            "ch_dict",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 5,
        "outputs": [
            "vcfStrelkaBP"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_max'",
            "label 'memory_max'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Strelka\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CNVkit": {
        "name_process": "CNVkit",
        "string_process": "\nprocess CNVkit {\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/CNVkit\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamCNVkit\n        file(targetBED) from ch_target_bed\n        file(fasta) from ch_fasta\n\n    output:\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleTumor}*\"), file(\"${idSampleNormal}*\") into cnvkitOut\n\n    when: 'cnvkit' in tools && params.target_bed\n\n    script:\n    \"\"\"\n    cnvkit.py \\\n      batch \\\n      ${bamTumor} \\\n      --normal ${bamNormal} \\\n      --targets ${targetBED} \\\n      --fasta ${fasta} \\\n      --output-reference output_reference.cnn \\\n      --output-dir ./ \\\n      --diagram \\\n      --scatter \n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    cnvkit.py \\\n      batch \\\n      ${bamTumor} \\\n      --normal ${bamNormal} \\\n      --targets ${targetBED} \\\n      --fasta ${fasta} \\\n      --output-reference output_reference.cnn \\\n      --output-dir ./ \\\n      --diagram \\\n      --scatter \n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BatchQC"
        ],
        "tools_url": [
            "https://bio.tools/batchqc"
        ],
        "tools_dico": [
            {
                "name": "BatchQC",
                "uri": "https://bio.tools/batchqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequencing and microarray samples often are collected or processed in multiple batches or at different times. This can produce technical biases that can lead to incorrect results. This is a software tool that streamlines batch preprocessing and evaluation by providing interactive diagnostics, visualizations, and statistical analyses to explore the extent to which batch variation impacts the data. Its diagnostics help determine if batch adjustment is needed, and how correction should be applied.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/BatchQC.html"
            }
        ],
        "inputs": [
            "pairBamCNVkit",
            "ch_target_bed",
            "ch_fasta"
        ],
        "nb_inputs": 3,
        "outputs": [
            "cnvkitOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/CNVkit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MSIsensor_scan": {
        "name_process": "MSIsensor_scan",
        "string_process": "\nprocess MSIsensor_scan {\n    label 'cpus_1'\n    label 'memory_max'\n\n    tag \"${fasta}\"\n\n    input:\n    file(fasta) from ch_fasta\n    file(fastaFai) from ch_fai\n\n    output:\n    file \"microsatellites.list\" into msi_scan_ch\n\n    when: 'msisensor' in tools\n\n    script:\n    \"\"\"\n    msisensor scan -d ${fasta} -o microsatellites.list\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    msisensor scan -d ${fasta} -o microsatellites.list\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MSIsensor"
        ],
        "tools_url": [
            "https://bio.tools/msisensor"
        ],
        "tools_dico": [
            {
                "name": "MSIsensor",
                "uri": "https://bio.tools/msisensor",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Nucleic acid feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Sequence feature detection (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "C++ program for automatically detecting somatic and germline variants at microsatellite regions. It computes length distributions of microsatellites per site in paired tumor and normal sequence data, subsequently using these to statistically compare observed distributions in both samples.",
                "homepage": "https://github.com/ding-lab/msisensor"
            }
        ],
        "inputs": [
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 2,
        "outputs": [
            "msi_scan_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "label 'memory_max'",
            "tag \"${fasta}\""
        ],
        "when": "",
        "stub": ""
    },
    "MSIsensor_msi": {
        "name_process": "MSIsensor_msi",
        "string_process": "\nprocess MSIsensor_msi {\n    label 'cpus_4'\n    label 'memory_max'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/MSIsensor\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from pairBamMsisensor\n        file msiSites from msi_scan_ch\n\n    output:\n        set val(\"Msisensor\"), idPatient, file(\"${idSampleTumor}_vs_${idSampleNormal}_msisensor\"), file(\"${idSampleTumor}_vs_${idSampleNormal}_msisensor_dis\"), file(\"${idSampleTumor}_vs_${idSampleNormal}_msisensor_germline\"), file(\"${idSampleTumor}_vs_${idSampleNormal}_msisensor_somatic\") into msisensor_out_ch\n\n    when: 'msisensor' in tools\n\n    script:\n    \"\"\"\n    msisensor msi -d ${msiSites} \\\n                  -b 4 \\\n                  -n ${bamNormal} \\\n                  -t ${bamTumor} \\\n                  -o ${idSampleTumor}_vs_${idSampleNormal}_msisensor\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    msisensor msi -d ${msiSites} \\\n                  -b 4 \\\n                  -n ${bamNormal} \\\n                  -t ${bamTumor} \\\n                  -o ${idSampleTumor}_vs_${idSampleNormal}_msisensor\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "MSIsensor"
        ],
        "tools_url": [
            "https://bio.tools/msisensor"
        ],
        "tools_dico": [
            {
                "name": "MSIsensor",
                "uri": "https://bio.tools/msisensor",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Nucleic acid feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Sequence feature detection (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "C++ program for automatically detecting somatic and germline variants at microsatellite regions. It computes length distributions of microsatellites per site in paired tumor and normal sequence data, subsequently using these to statistically compare observed distributions in both samples.",
                "homepage": "https://github.com/ding-lab/msisensor"
            }
        ],
        "inputs": [
            "pairBamMsisensor",
            "msi_scan_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "msisensor_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_4'",
            "label 'memory_max'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/MSIsensor\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "AlleleCounter": {
        "name_process": "AlleleCounter",
        "string_process": "\nprocess AlleleCounter {\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSample}\"\n\n    input:\n        set idPatient, idSample, file(bam), file(bai) from bamAscat\n        file(acLoci) from ch_ac_loci\n        file(dict) from ch_dict\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.alleleCount\") into alleleCounterOut\n\n    when: 'ascat' in tools\n\n    script:\n    \"\"\"\n    alleleCounter \\\n        -l ${acLoci} \\\n        -r ${fasta} \\\n        -b ${bam} \\\n        -o ${idSample}.alleleCount;\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    alleleCounter \\\n        -l ${acLoci} \\\n        -r ${fasta} \\\n        -b ${bam} \\\n        -o ${idSample}.alleleCount;\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamAscat",
            "ch_ac_loci",
            "ch_dict",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 5,
        "outputs": [
            "alleleCounterOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "ConvertAlleleCounts": {
        "name_process": "ConvertAlleleCounts",
        "string_process": "\nprocess ConvertAlleleCounts {\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/ASCAT\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(alleleCountNormal), file(alleleCountTumor) from alleleCounterOut\n\n    output:\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleNormal}.BAF\"), file(\"${idSampleNormal}.LogR\"), file(\"${idSampleTumor}.BAF\"), file(\"${idSampleTumor}.LogR\") into convertAlleleCountsOut\n\n    when: 'ascat' in tools\n\n    script:\n    gender = genderMap[idPatient]\n    \"\"\"\n    convertAlleleCounts.r ${idSampleTumor} ${alleleCountTumor} ${idSampleNormal} ${alleleCountNormal} ${gender}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    gender = genderMap[idPatient]\n    \"\"\"\n    convertAlleleCounts.r ${idSampleTumor} ${alleleCountTumor} ${idSampleNormal} ${alleleCountNormal} ${gender}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "WormGender"
        ],
        "tools_url": [
            "https://bio.tools/wormgender"
        ],
        "tools_dico": [
            {
                "name": "WormGender",
                "uri": "https://bio.tools/wormgender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source software which designed for accurate quantification of sex ratio in Caenorhabditis elegans.  The software functions include, i) automatic recognition and counting of adult hermaphrodites and males, ii) a manual inspection feature that enables manual correction of errors, and iii) flexibility to use new training images to optimize the software for different imaging conditions.",
                "homepage": "http://www.quantworm.org/"
            }
        ],
        "inputs": [
            "alleleCounterOut"
        ],
        "nb_inputs": 1,
        "outputs": [
            "convertAlleleCountsOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/ASCAT\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Ascat": {
        "name_process": "Ascat",
        "string_process": "\nprocess Ascat {\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/ASCAT\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(bafNormal), file(logrNormal), file(bafTumor), file(logrTumor) from convertAlleleCountsOut\n        file(acLociGC) from ch_ac_loci_gc\n\n    output:\n        set val(\"ASCAT\"), idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleTumor}.*.{png,txt}\") into ascatOut\n\n    when: 'ascat' in tools\n\n    script:\n    gender = genderMap[idPatient]\n    purity_ploidy = (params.ascat_purity && params.ascat_ploidy) ? \"--purity ${params.ascat_purity} --ploidy ${params.ascat_ploidy}\" : \"\"\n    \"\"\"\n    for f in *BAF *LogR; do sed 's/chr//g' \\$f > tmpFile; mv tmpFile \\$f;done\n    run_ascat.r \\\n        --tumorbaf ${bafTumor} \\\n        --tumorlogr ${logrTumor} \\\n        --normalbaf ${bafNormal} \\\n        --normallogr ${logrNormal} \\\n        --tumorname ${idSampleTumor} \\\n        --basedir ${projectDir} \\\n        --gcfile ${acLociGC} \\\n        --gender ${gender} \\\n        ${purity_ploidy}\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    gender = genderMap[idPatient]\n    purity_ploidy = (params.ascat_purity && params.ascat_ploidy) ? \"--purity ${params.ascat_purity} --ploidy ${params.ascat_ploidy}\" : \"\"\n    \"\"\"\n    for f in *BAF *LogR; do sed 's/chr//g' \\$f > tmpFile; mv tmpFile \\$f;done\n    run_ascat.r \\\n        --tumorbaf ${bafTumor} \\\n        --tumorlogr ${logrTumor} \\\n        --normalbaf ${bafNormal} \\\n        --normallogr ${logrNormal} \\\n        --tumorname ${idSampleTumor} \\\n        --basedir ${projectDir} \\\n        --gcfile ${acLociGC} \\\n        --gender ${gender} \\\n        ${purity_ploidy}\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "WormGender"
        ],
        "tools_url": [
            "https://bio.tools/wormgender"
        ],
        "tools_dico": [
            {
                "name": "WormGender",
                "uri": "https://bio.tools/wormgender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source software which designed for accurate quantification of sex ratio in Caenorhabditis elegans.  The software functions include, i) automatic recognition and counting of adult hermaphrodites and males, ii) a manual inspection feature that enables manual correction of errors, and iii) flexibility to use new training images to optimize the software for different imaging conditions.",
                "homepage": "http://www.quantworm.org/"
            }
        ],
        "inputs": [
            "convertAlleleCountsOut",
            "ch_ac_loci_gc"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ascatOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/ASCAT\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Mpileup": {
        "name_process": "Mpileup",
        "string_process": "\nprocess Mpileup {\n    label 'cpus_1'\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSample}-${intervalBed.baseName}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup\" ? \"VariantCalling/${idSample}/Control-FREEC/${it}\" : null }\n\n    input:\n        set idPatient, idSample, file(bam), file(bai), file(intervalBed) from bamMpileup\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n\n    output:\n        set idPatient, idSample, file(\"${prefix}${idSample}.pileup\") into mpileupMerge\n        set idPatient, idSample into tsv_mpileup\n\n    when: 'controlfreec' in tools || 'mpileup' in tools\n\n    script:\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-l ${intervalBed}\"\n\n    \"\"\"\n    # Control-FREEC reads uncompresses the zipped file TWICE in single-threaded mode.\n    # we are therefore not using compressed pileups here\n    samtools mpileup \\\n        -f ${fasta} ${bam} \\\n        ${intervalsOptions} > ${prefix}${idSample}.pileup\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-l ${intervalBed}\"\n\n    \"\"\"\n    # Control-FREEC reads uncompresses the zipped file TWICE in single-threaded mode.\n    # we are therefore not using compressed pileups here\n    samtools mpileup \\\n        -f ${fasta} ${bam} \\\n        ${intervalsOptions} > ${prefix}${idSample}.pileup\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamMpileup",
            "ch_fasta",
            "ch_fai"
        ],
        "nb_inputs": 3,
        "outputs": [
            "mpileupMerge",
            "tsv_mpileup"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSample}-${intervalBed.baseName}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup\" ? \"VariantCalling/${idSample}/Control-FREEC/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeMpileup": {
        "name_process": "MergeMpileup",
        "string_process": "\nprocess MergeMpileup {\n    label 'cpus_1'\n\n    tag \"${idSample}\"\n\n    publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup\" ? \"VariantCalling/${idSample}/Control-FREEC/${it}\" : null }\n\n    input:\n        set idPatient, idSample, file(mpileup) from mpileupMerge\n\n    output:\n        set idPatient, idSample, file(\"${idSample}.pileup\") into mpileupOut\n\n    when: !(params.no_intervals) && 'controlfreec' in tools || 'mpileup' in tools\n\n    script:\n    \"\"\"\n    for i in `ls -1v *.pileup`;\n        do cat \\$i >> ${idSample}.pileup\n    done\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    for i in `ls -1v *.pileup`;\n        do cat \\$i >> ${idSample}.pileup\n    done\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mpileupMerge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mpileupOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${idSample}\"",
            "publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup\" ? \"VariantCalling/${idSample}/Control-FREEC/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "ControlFREEC": {
        "name_process": "ControlFREEC",
        "string_process": "\nprocess ControlFREEC {\n    label 'cpus_8'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Control-FREEC\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(mpileupNormal), file(mpileupTumor) from mpileupOut\n        file(chrDir) from ch_chr_dir\n        file(mappability) from ch_mappability\n        file(chrLength) from ch_chr_length\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleTumor}.pileup_CNVs\"), file(\"${idSampleTumor}.pileup_ratio.txt\"), file(\"${idSampleTumor}.pileup_BAF.txt\") into controlFreecViz\n        set file(\"*.pileup*\"), file(\"${idSampleTumor}_vs_${idSampleNormal}.config.txt\") into controlFreecOut\n\n    when: 'controlfreec' in tools\n\n    script:\n    config = \"${idSampleTumor}_vs_${idSampleNormal}.config.txt\"\n    gender = genderMap[idPatient]\n                                                                           \n    window = params.cf_window ? \"window = ${params.cf_window}\" : \"\"\n    coeffvar = params.cf_coeff ? \"coefficientOfVariation = ${params.cf_coeff}\" : \"\"\n    use_bed = params.target_bed ? \"captureRegions = ${targetBED}\" : \"\"\n                                                                                              \n                                                                                      \n                                                    \n    min_subclone = 100\n    readCountThreshold = params.target_bed ? \"50\" : \"10\"\n    breakPointThreshold = params.target_bed ? \"1.2\" : \"0.8\"\n    breakPointType = params.target_bed ? \"4\" : \"2\"\n    mappabilitystr = params.mappability ? \"gemMappabilityFile = \\${PWD}/${mappability}\" : \"\"\n\n    \"\"\"\n    touch ${config}\n    echo \"[general]\" >> ${config}\n    echo \"BedGraphOutput = TRUE\" >> ${config}\n    echo \"chrFiles = \\${PWD}/${chrDir.fileName}\" >> ${config}\n    echo \"chrLenFile = \\${PWD}/${chrLength.fileName}\" >> ${config}\n    echo \"forceGCcontentNormalization = 1\" >> ${config}\n    echo \"maxThreads = ${task.cpus}\" >> ${config}\n    echo \"minimalSubclonePresence = ${min_subclone}\" >> ${config}\n    echo \"ploidy = ${params.cf_ploidy}\" >> ${config}\n    echo \"sex = ${gender}\" >> ${config}\n    echo \"readCountThreshold = ${readCountThreshold}\" >> ${config}\n    echo \"breakPointThreshold = ${breakPointThreshold}\" >> ${config}\n    echo \"breakPointType = ${breakPointType}\" >> ${config}\n    echo \"${window}\" >> ${config}\n    echo \"${coeffvar}\" >> ${config}\n    echo \"${mappabilitystr}\" >> ${config}\n    echo \"\" >> ${config}\n    \n    echo \"[control]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupNormal}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[sample]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupTumor}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[BAF]\" >> ${config}\n    echo \"SNPfile = ${dbsnp.fileName}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[target]\" >> ${config}\n    echo \"${use_bed}\" >> ${config}\n\n    freec -conf ${config}\n    \"\"\"\n}",
        "nb_lignes_process": 80,
        "string_script": "    config = \"${idSampleTumor}_vs_${idSampleNormal}.config.txt\"\n    gender = genderMap[idPatient]\n                                                                           \n    window = params.cf_window ? \"window = ${params.cf_window}\" : \"\"\n    coeffvar = params.cf_coeff ? \"coefficientOfVariation = ${params.cf_coeff}\" : \"\"\n    use_bed = params.target_bed ? \"captureRegions = ${targetBED}\" : \"\"\n                                                                                              \n                                                                                      \n                                                    \n    min_subclone = 100\n    readCountThreshold = params.target_bed ? \"50\" : \"10\"\n    breakPointThreshold = params.target_bed ? \"1.2\" : \"0.8\"\n    breakPointType = params.target_bed ? \"4\" : \"2\"\n    mappabilitystr = params.mappability ? \"gemMappabilityFile = \\${PWD}/${mappability}\" : \"\"\n\n    \"\"\"\n    touch ${config}\n    echo \"[general]\" >> ${config}\n    echo \"BedGraphOutput = TRUE\" >> ${config}\n    echo \"chrFiles = \\${PWD}/${chrDir.fileName}\" >> ${config}\n    echo \"chrLenFile = \\${PWD}/${chrLength.fileName}\" >> ${config}\n    echo \"forceGCcontentNormalization = 1\" >> ${config}\n    echo \"maxThreads = ${task.cpus}\" >> ${config}\n    echo \"minimalSubclonePresence = ${min_subclone}\" >> ${config}\n    echo \"ploidy = ${params.cf_ploidy}\" >> ${config}\n    echo \"sex = ${gender}\" >> ${config}\n    echo \"readCountThreshold = ${readCountThreshold}\" >> ${config}\n    echo \"breakPointThreshold = ${breakPointThreshold}\" >> ${config}\n    echo \"breakPointType = ${breakPointType}\" >> ${config}\n    echo \"${window}\" >> ${config}\n    echo \"${coeffvar}\" >> ${config}\n    echo \"${mappabilitystr}\" >> ${config}\n    echo \"\" >> ${config}\n    \n    echo \"[control]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupNormal}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[sample]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupTumor}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[BAF]\" >> ${config}\n    echo \"SNPfile = ${dbsnp.fileName}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[target]\" >> ${config}\n    echo \"${use_bed}\" >> ${config}\n\n    freec -conf ${config}\n    \"\"\"",
        "nb_lignes_script": 54,
        "language_script": "bash",
        "tools": [
            "haploconfig",
            "WormGender",
            "pepwindow",
            "FREEC"
        ],
        "tools_url": [
            "https://bio.tools/haploconfig",
            "https://bio.tools/wormgender",
            "https://bio.tools/pepwindow",
            "https://bio.tools/freec"
        ],
        "tools_dico": [
            {
                "name": "haploconfig",
                "uri": "https://bio.tools/haploconfig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program that can be used to implement tests of neutrality based on the frequency distribution of haplotypes in a sample of DNA sequences (the \u201chaplotype configuration\u201d) and the number of segregating sites. The neutrality tests can be performed conditional on the standard neutral coalescent model with or without recombination, exponential population growth, or island migration.",
                "homepage": "http://www.stanford.edu/group/rosenberglab/haploconfig.html"
            },
            {
                "name": "WormGender",
                "uri": "https://bio.tools/wormgender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source software which designed for accurate quantification of sex ratio in Caenorhabditis elegans.  The software functions include, i) automatic recognition and counting of adult hermaphrodites and males, ii) a manual inspection feature that enables manual correction of errors, and iii) flexibility to use new training images to optimize the software for different imaging conditions.",
                "homepage": "http://www.quantworm.org/"
            },
            {
                "name": "pepwindow",
                "uri": "https://bio.tools/pepwindow",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein properties"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein physicochemistry"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2574",
                                    "term": "Protein hydropathy calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2886",
                                "term": "Protein sequence record"
                            },
                            {
                                "uri": "http://edamontology.org/data_1501",
                                "term": "Amino acid index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1522",
                                "term": "Protein sequence hydropathy plot"
                            }
                        ]
                    }
                ],
                "description": "Draw a hydropathy plot for a protein sequence.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/pepwindow.html"
            },
            {
                "name": "FREEC",
                "uri": "https://bio.tools/freec",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3473",
                            "term": "Data mining"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3574",
                            "term": "Human genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Copy number estimation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Whole genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Transcript copy number estimation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for control-free copy number alteration (CNA) and allelic imbalances (LOH) detection using deep-sequencing data, particularly useful for cancer studies.",
                "homepage": "http://boevalab.com/FREEC/"
            }
        ],
        "inputs": [
            "mpileupOut",
            "ch_chr_dir",
            "ch_mappability",
            "ch_chr_length",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 9,
        "outputs": [
            "controlFreecViz",
            "controlFreecOut"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Control-FREEC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ControlFREECSingle": {
        "name_process": "ControlFREECSingle",
        "string_process": "\nprocess ControlFREECSingle {\n    label 'cpus_8'\n\n    tag \"${idSampleTumor}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Control-FREEC\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleTumor, file(mpileupTumor) from mpileupOutSingle\n        file(chrDir) from ch_chr_dir\n        file(mappability) from ch_mappability\n        file(chrLength) from ch_chr_length\n        file(dbsnp) from ch_dbsnp\n        file(dbsnpIndex) from ch_dbsnp_tbi\n        file(fasta) from ch_fasta\n        file(fastaFai) from ch_fai\n        file(targetBED) from ch_target_bed\n\n    output:\n        set idPatient, idSampleTumor, file(\"${idSampleTumor}.pileup_CNVs\"), file(\"${idSampleTumor}.pileup_ratio.txt\"), file(\"${idSampleTumor}.pileup_BAF.txt\") into controlFreecVizSingle\n        set file(\"*.pileup*\"), file(\"${idSampleTumor}.config.txt\") into controlFreecOutSingle\n\n    when: 'controlfreec' in tools\n\n    script:\n    config = \"${idSampleTumor}.config.txt\"\n    gender = genderMap[idPatient]\n                                                                           \n    window = params.cf_window ? \"window = ${params.cf_window}\" : \"\"\n    coeffvar = params.cf_coeff ? \"coefficientOfVariation = ${params.cf_coeff}\" : \"\"\n    use_bed = params.target_bed ? \"captureRegions = ${targetBED}\" : \"\"\n                                                                                              \n                                                                                      \n                                                    \n    min_subclone = 100\n    readCountThreshold = params.target_bed ? \"50\" : \"10\"\n    breakPointThreshold = params.target_bed ? \"1.2\" : \"0.8\"\n    breakPointType = params.target_bed ? \"4\" : \"2\"\n    mappabilitystr = params.mappability ? \"gemMappabilityFile = \\${PWD}/${mappability}\" : \"\"\n\n    \"\"\"\n    touch ${config}\n    echo \"[general]\" >> ${config}\n    echo \"BedGraphOutput = TRUE\" >> ${config}\n    echo \"chrFiles = \\${PWD}/${chrDir.fileName}\" >> ${config}\n    echo \"chrLenFile = \\${PWD}/${chrLength.fileName}\" >> ${config}\n    echo \"forceGCcontentNormalization = 1\" >> ${config}\n    echo \"maxThreads = ${task.cpus}\" >> ${config}\n    echo \"minimalSubclonePresence = ${min_subclone}\" >> ${config}\n    echo \"ploidy = ${params.cf_ploidy}\" >> ${config}\n    echo \"sex = ${gender}\" >> ${config}\n    echo \"readCountThreshold = ${readCountThreshold}\" >> ${config}\n    echo \"breakPointThreshold = ${breakPointThreshold}\" >> ${config}\n    echo \"breakPointType = ${breakPointType}\" >> ${config}\n    echo \"${window}\" >> ${config}\n    echo \"${coeffvar}\" >> ${config}\n    echo \"${mappabilitystr}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[sample]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupTumor}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[BAF]\" >> ${config}\n    echo \"SNPfile = ${dbsnp.fileName}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[target]\" >> ${config}\n    echo \"${use_bed}\" >> ${config}\n\n    freec -conf ${config}\n    \"\"\"\n}",
        "nb_lignes_process": 74,
        "string_script": "    config = \"${idSampleTumor}.config.txt\"\n    gender = genderMap[idPatient]\n                                                                           \n    window = params.cf_window ? \"window = ${params.cf_window}\" : \"\"\n    coeffvar = params.cf_coeff ? \"coefficientOfVariation = ${params.cf_coeff}\" : \"\"\n    use_bed = params.target_bed ? \"captureRegions = ${targetBED}\" : \"\"\n                                                                                              \n                                                                                      \n                                                    \n    min_subclone = 100\n    readCountThreshold = params.target_bed ? \"50\" : \"10\"\n    breakPointThreshold = params.target_bed ? \"1.2\" : \"0.8\"\n    breakPointType = params.target_bed ? \"4\" : \"2\"\n    mappabilitystr = params.mappability ? \"gemMappabilityFile = \\${PWD}/${mappability}\" : \"\"\n\n    \"\"\"\n    touch ${config}\n    echo \"[general]\" >> ${config}\n    echo \"BedGraphOutput = TRUE\" >> ${config}\n    echo \"chrFiles = \\${PWD}/${chrDir.fileName}\" >> ${config}\n    echo \"chrLenFile = \\${PWD}/${chrLength.fileName}\" >> ${config}\n    echo \"forceGCcontentNormalization = 1\" >> ${config}\n    echo \"maxThreads = ${task.cpus}\" >> ${config}\n    echo \"minimalSubclonePresence = ${min_subclone}\" >> ${config}\n    echo \"ploidy = ${params.cf_ploidy}\" >> ${config}\n    echo \"sex = ${gender}\" >> ${config}\n    echo \"readCountThreshold = ${readCountThreshold}\" >> ${config}\n    echo \"breakPointThreshold = ${breakPointThreshold}\" >> ${config}\n    echo \"breakPointType = ${breakPointType}\" >> ${config}\n    echo \"${window}\" >> ${config}\n    echo \"${coeffvar}\" >> ${config}\n    echo \"${mappabilitystr}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[sample]\" >> ${config}\n    echo \"inputFormat = pileup\" >> ${config}\n    echo \"mateFile = \\${PWD}/${mpileupTumor}\" >> ${config}\n    echo \"mateOrientation = FR\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[BAF]\" >> ${config}\n    echo \"SNPfile = ${dbsnp.fileName}\" >> ${config}\n    echo \"\" >> ${config}\n\n    echo \"[target]\" >> ${config}\n    echo \"${use_bed}\" >> ${config}\n\n    freec -conf ${config}\n    \"\"\"",
        "nb_lignes_script": 48,
        "language_script": "bash",
        "tools": [
            "haploconfig",
            "WormGender",
            "pepwindow",
            "FREEC"
        ],
        "tools_url": [
            "https://bio.tools/haploconfig",
            "https://bio.tools/wormgender",
            "https://bio.tools/pepwindow",
            "https://bio.tools/freec"
        ],
        "tools_dico": [
            {
                "name": "haploconfig",
                "uri": "https://bio.tools/haploconfig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program that can be used to implement tests of neutrality based on the frequency distribution of haplotypes in a sample of DNA sequences (the \u201chaplotype configuration\u201d) and the number of segregating sites. The neutrality tests can be performed conditional on the standard neutral coalescent model with or without recombination, exponential population growth, or island migration.",
                "homepage": "http://www.stanford.edu/group/rosenberglab/haploconfig.html"
            },
            {
                "name": "WormGender",
                "uri": "https://bio.tools/wormgender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source software which designed for accurate quantification of sex ratio in Caenorhabditis elegans.  The software functions include, i) automatic recognition and counting of adult hermaphrodites and males, ii) a manual inspection feature that enables manual correction of errors, and iii) flexibility to use new training images to optimize the software for different imaging conditions.",
                "homepage": "http://www.quantworm.org/"
            },
            {
                "name": "pepwindow",
                "uri": "https://bio.tools/pepwindow",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein properties"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein physicochemistry"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2574",
                                    "term": "Protein hydropathy calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2886",
                                "term": "Protein sequence record"
                            },
                            {
                                "uri": "http://edamontology.org/data_1501",
                                "term": "Amino acid index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1522",
                                "term": "Protein sequence hydropathy plot"
                            }
                        ]
                    }
                ],
                "description": "Draw a hydropathy plot for a protein sequence.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/pepwindow.html"
            },
            {
                "name": "FREEC",
                "uri": "https://bio.tools/freec",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3473",
                            "term": "Data mining"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3574",
                            "term": "Human genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Copy number estimation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Whole genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Transcript copy number estimation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for control-free copy number alteration (CNA) and allelic imbalances (LOH) detection using deep-sequencing data, particularly useful for cancer studies.",
                "homepage": "http://boevalab.com/FREEC/"
            }
        ],
        "inputs": [
            "mpileupOutSingle",
            "ch_chr_dir",
            "ch_mappability",
            "ch_chr_length",
            "ch_dbsnp",
            "ch_dbsnp_tbi",
            "ch_fasta",
            "ch_fai",
            "ch_target_bed"
        ],
        "nb_inputs": 9,
        "outputs": [
            "controlFreecVizSingle",
            "controlFreecOutSingle"
        ],
        "nb_outputs": 2,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_8'",
            "tag \"${idSampleTumor}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Control-FREEC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ControlFreecViz": {
        "name_process": "ControlFreecViz",
        "string_process": "\nprocess ControlFreecViz {\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSampleTumor}_vs_${idSampleNormal}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Control-FREEC\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleNormal, idSampleTumor, file(cnvTumor), file(ratioTumor), file(bafTumor) from controlFreecViz\n\n    output:\n        set file(\"*.txt\"), file(\"*.png\"), file(\"*.bed\") into controlFreecVizOut\n\n    when: 'controlfreec' in tools\n\n    script:\n    \"\"\"\n    echo \"############### Calculating significance values for TUMOR CNVs #############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/assess_significance.R | R --slave --args ${cnvTumor} ${ratioTumor}\n\n    echo \"############### Creating graph for TUMOR ratios ###############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/makeGraph.R | R --slave --args 2 ${ratioTumor} ${bafTumor}\n\n    echo \"############### Creating BED files for TUMOR ##############\"\n    perl /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/freec2bed.pl -f ${ratioTumor} > ${idSampleTumor}.bed\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    echo \"############### Calculating significance values for TUMOR CNVs #############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/assess_significance.R | R --slave --args ${cnvTumor} ${ratioTumor}\n\n    echo \"############### Creating graph for TUMOR ratios ###############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/makeGraph.R | R --slave --args 2 ${ratioTumor} ${bafTumor}\n\n    echo \"############### Creating BED files for TUMOR ##############\"\n    perl /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/freec2bed.pl -f ${ratioTumor} > ${idSampleTumor}.bed\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "controlFreecViz"
        ],
        "nb_inputs": 1,
        "outputs": [
            "controlFreecVizOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSampleTumor}_vs_${idSampleNormal}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Control-FREEC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ControlFreecVizSingle": {
        "name_process": "ControlFreecVizSingle",
        "string_process": "\nprocess ControlFreecVizSingle {\n    label 'memory_singleCPU_2_task'\n\n    tag \"${idSampleTumor}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Control-FREEC\", mode: params.publish_dir_mode\n\n    input:\n        set idPatient, idSampleTumor, file(cnvTumor), file(ratioTumor), file(bafTumor) from controlFreecVizSingle\n\n    output:\n        set file(\"*.txt\"), file(\"*.png\"), file(\"*.bed\") into controlFreecVizOutSingle\n\n    when: 'controlfreec' in tools\n\n    script:\n    \"\"\"\n    echo \"############### Calculating significance values for TUMOR CNVs #############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/assess_significance.R | R --slave --args ${cnvTumor} ${ratioTumor}\n\n    echo \"############### Creating graph for TUMOR ratios ###############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/makeGraph.R | R --slave --args 2 ${ratioTumor} ${bafTumor}\n\n    echo \"############### Creating BED files for TUMOR ##############\"\n    perl /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/freec2bed.pl -f ${ratioTumor} > ${idSampleTumor}.bed\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    echo \"############### Calculating significance values for TUMOR CNVs #############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/assess_significance.R | R --slave --args ${cnvTumor} ${ratioTumor}\n\n    echo \"############### Creating graph for TUMOR ratios ###############\"\n    cat /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/makeGraph.R | R --slave --args 2 ${ratioTumor} ${bafTumor}\n\n    echo \"############### Creating BED files for TUMOR ##############\"\n    perl /opt/conda/envs/nf-core-sarek-${workflow.manifest.version}/bin/freec2bed.pl -f ${ratioTumor} > ${idSampleTumor}.bed\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "controlFreecVizSingle"
        ],
        "nb_inputs": 1,
        "outputs": [
            "controlFreecVizOutSingle"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'memory_singleCPU_2_task'",
            "tag \"${idSampleTumor}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}/Control-FREEC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BcftoolsStats": {
        "name_process": "BcftoolsStats",
        "string_process": "\nprocess BcftoolsStats {\n    label 'cpus_1'\n\n    tag \"${variantCaller} - ${vcf}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/BCFToolsStats\", mode: params.publish_dir_mode\n\n    input:\n        set variantCaller, idSample, file(vcf) from vcfBCFtools\n\n    output:\n        file (\"*.bcf.tools.stats.out\") into bcftoolsReport\n\n    when: !('bcftools' in skipQC)\n\n    script:\n    \"\"\"\n    bcftools stats ${vcf} > ${reduceVCF(vcf.fileName)}.bcf.tools.stats.out\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bcftools stats ${vcf} > ${reduceVCF(vcf.fileName)}.bcf.tools.stats.out\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcfBCFtools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bcftoolsReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${variantCaller} - ${vcf}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/BCFToolsStats\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Vcftools": {
        "name_process": "Vcftools",
        "string_process": "\nprocess Vcftools {\n    label 'cpus_1'\n\n    tag \"${variantCaller} - ${vcf}\"\n\n    publishDir \"${params.outdir}/Reports/${idSample}/VCFTools\", mode: params.publish_dir_mode\n\n    input:\n        set variantCaller, idSample, file(vcf) from vcfVCFtools\n\n    output:\n        file (\"${reduceVCF(vcf.fileName)}.*\") into vcftoolsReport\n\n    when: !('vcftools' in skipQC)\n\n    script:\n    \"\"\"\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-count \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-qual \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --FILTER-summary \\\n    --out ${reduceVCF(vcf.fileName)}\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-count \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-qual \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --FILTER-summary \\\n    --out ${reduceVCF(vcf.fileName)}\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "vcfVCFtools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcftoolsReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "label 'cpus_1'",
            "tag \"${variantCaller} - ${vcf}\"",
            "publishDir \"${params.outdir}/Reports/${idSample}/VCFTools\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC": {
        "name_process": "MultiQC",
        "string_process": "\nprocess MultiQC {\n    publishDir \"${params.outdir}/Reports/MultiQC\", mode: params.publish_dir_mode\n\n    input:\n        file (multiqcConfig) from ch_multiqc_config\n        file (mqc_custom_config) from ch_multiqc_custom_config.collect().ifEmpty([])\n        file (versions) from ch_software_versions_yaml.collect()\n        file workflow_summary from ch_workflow_summary.collectFile(name: \"workflow_summary_mqc.yaml\")\n        file ('bamQC/*') from bamQCReport.collect().ifEmpty([])\n        file ('BCFToolsStats/*') from bcftoolsReport.collect().ifEmpty([])\n        file ('FastQC/*') from fastQCReport.collect().ifEmpty([])\n        file ('TrimmedFastQC/*') from trimGaloreReport.collect().ifEmpty([])\n        file ('MarkDuplicates/*') from duplicates_marked_report.collect().ifEmpty([])\n        file ('DuplicatesMarked/*.recal.table') from baseRecalibratorReport.collect().ifEmpty([])\n        file ('SamToolsStats/*') from samtoolsStatsReport.collect().ifEmpty([])\n        file ('snpEff/*') from snpeffReport.collect().ifEmpty([])\n        file ('VCFTools/*') from vcftoolsReport.collect().ifEmpty([])\n\n    output:\n        file \"*multiqc_report.html\" into ch_multiqc_report\n        file \"*_data\"\n        file \"multiqc_plots\"\n\n    when: !('multiqc' in skipQC)\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f ${rtitle} ${rfilename} ${custom_config_file} .\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f ${rtitle} ${rfilename} ${custom_config_file} .\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "ch_multiqc_custom_config",
            "ch_software_versions_yaml",
            "ch_workflow_summary",
            "bamQCReport",
            "bcftoolsReport",
            "fastQCReport",
            "trimGaloreReport",
            "duplicates_marked_report",
            "baseRecalibratorReport",
            "samtoolsStatsReport",
            "snpeffReport",
            "vcftoolsReport"
        ],
        "nb_inputs": 13,
        "outputs": [
            "ch_multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/Reports/MultiQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Output_documentation": {
        "name_process": "Output_documentation",
        "string_process": "\nprocess Output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode\n\n    input:\n        file output_docs from ch_output_docs\n        file images from ch_output_docs_images\n\n    output:\n        file \"results_description.html\"\n\n    when: !('documentation' in skipQC)\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs",
            "ch_output_docs_images"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Genomic-Medicine-Linkoping__nf-core-sarek",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    }
}