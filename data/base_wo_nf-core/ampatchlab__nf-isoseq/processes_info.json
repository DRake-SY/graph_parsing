{
    "bax2bam": {
        "name_process": "bax2bam",
        "string_process": "\nprocess bax2bam {\n\n    tag { movie }\n\n    label 'bax2bam'\n\n    input:\n    tuple movie, path(bax1), path(bax2), path(bax3)\n\n    output:\n    tuple movie, path(\"${movie}.subreads.bam{,.pbi}\")\n\n    \"\"\"\n    bax2bam -o \"${movie}\" \"${bax1}\" \"${bax2}\" \"${bax3}\"\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    bax2bam -o \"${movie}\" \"${bax1}\" \"${bax2}\" \"${bax3}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bax1",
            "bax2",
            "bax3",
            "movie"
        ],
        "nb_inputs": 4,
        "outputs": [
            "movie"
        ],
        "nb_outputs": 1,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'bax2bam'"
        ],
        "when": "",
        "stub": ""
    },
    "create_filtered_subreadsets": {
        "name_process": "create_filtered_subreadsets",
        "string_process": "\nprocess create_filtered_subreadsets {\n\n    tag { movie }\n\n    label 'pbcoretools'\n\n    input:\n    tuple movie, path(indexed_subreads)\n\n    output:\n    tuple movie, path(\"${movie}.filtered.subreadset.xml\")\n\n    script:\n    def (bam, pbi) = indexed_subreads\n\n    \"\"\"\n    dataset create \\\\\n        --type SubreadSet \\\\\n        --relative \\\\\n        \"${movie}.subreadset.xml\" \\\\\n        \"${bam}\"\n    dataset filter \\\\\n        \"${movie}.subreadset.xml\" \\\\\n        \"${movie}.filtered.subreadset.xml\" \\\\\n        'rq>=${params.min_subread_quality}' \\\\\n        'length>=${params.min_subread_length}'\n    dataset relativize \"${movie}.filtered.subreadset.xml\"\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    def (bam, pbi) = indexed_subreads\n\n    \"\"\"\n    dataset create \\\\\n        --type SubreadSet \\\\\n        --relative \\\\\n        \"${movie}.subreadset.xml\" \\\\\n        \"${bam}\"\n    dataset filter \\\\\n        \"${movie}.subreadset.xml\" \\\\\n        \"${movie}.filtered.subreadset.xml\" \\\\\n        'rq>=${params.min_subread_quality}' \\\\\n        'length>=${params.min_subread_length}'\n    dataset relativize \"${movie}.filtered.subreadset.xml\"\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "MultiDataSet",
            "rqt"
        ],
        "tools_url": [
            "https://bio.tools/multidataset",
            "https://bio.tools/rqt"
        ],
        "tools_dico": [
            {
                "name": "MultiDataSet",
                "uri": "https://bio.tools/multidataset",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3391",
                            "term": "Omics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Implementation of the BRGE's (Bioinformatic Research Group in Epidemiology from Center for Research in Environmental Epidemiology) dataset and MethylationSet. It is designed for integrating multi omics data sets and MethylationSet to contain normalized methylation data. These package contains base classes for MEAL and rexposome packages.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/MultiDataSet.html"
            },
            {
                "name": "rqt",
                "uri": "https://bio.tools/rqt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Gene-level GWAS meta-analysis. The package can be easily included into bioinformatics pipeline or used stand-alone.",
                "homepage": "https://github.com/izhbannikov/rqt"
            }
        ],
        "inputs": [
            "indexed_subreads",
            "movie"
        ],
        "nb_inputs": 2,
        "outputs": [
            "movie"
        ],
        "nb_outputs": 1,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'pbcoretools'"
        ],
        "when": "",
        "stub": ""
    },
    "apply_subread_filters": {
        "name_process": "apply_subread_filters",
        "string_process": "\nprocess apply_subread_filters {\n\n    tag { movie }\n\n    label 'pbbam'\n\n    input:\n    tuple movie, path(subreadset), path(indexed_subreads)\n\n    output:\n    tuple movie, path(\"${movie}.filtered.subreads.bam{,.pbi}\")\n\n    \"\"\"\n    pbmerge \\\\\n        -o \"${movie}.filtered.subreads.bam\" \\\\\n        \"${subreadset}\"\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    pbmerge \\\\\n        -o \"${movie}.filtered.subreads.bam\" \\\\\n        \"${subreadset}\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "subreadset",
            "indexed_subreads",
            "movie"
        ],
        "nb_inputs": 3,
        "outputs": [
            "movie"
        ],
        "nb_outputs": 1,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'pbbam'"
        ],
        "when": "",
        "stub": ""
    },
    "ccs": {
        "name_process": "ccs",
        "string_process": "\nprocess ccs {\n\n    tag { movie }\n\n    label 'pbccs'\n\n    input:\n    tuple movie, path(indexed_subreads)\n\n    output:\n    tuple movie, path(\"${movie}.ccs.bam{,.pbi}\"), emit: bam\n    path \"${movie}.ccs_report.txt\", emit: report\n\n    script:\n    def (bam, pbi) = indexed_subreads\n\n    \"\"\"\n    ccs \\\\\n        --numThreads ${task.cpus} \\\\\n        --minPasses \"${params.min_ccs_passes}\" \\\\\n        --noPolish \\\\\n        --reportFile \"${movie}.ccs_report.txt\" \\\\\n        \"${bam}\" \\\\\n        \"${movie}.ccs.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    def (bam, pbi) = indexed_subreads\n\n    \"\"\"\n    ccs \\\\\n        --numThreads ${task.cpus} \\\\\n        --minPasses \"${params.min_ccs_passes}\" \\\\\n        --noPolish \\\\\n        --reportFile \"${movie}.ccs_report.txt\" \\\\\n        \"${bam}\" \\\\\n        \"${movie}.ccs.bam\"\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "ICCS"
        ],
        "tools_url": [
            "https://bio.tools/ICCS"
        ],
        "tools_dico": [
            {
                "name": "ICCS",
                "uri": "https://bio.tools/ICCS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3306",
                            "term": "Biophysics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "Nuclear magnetic resonance spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Nanoscale Distribution of Nuclear Sites by Super-Resolved Image Cross-Correlation Spectroscopy.\n\nUser-fiendly code for image cross-correlation specroscopy (ICCS) analysis based on the following article:",
                "homepage": "https://github.com/llanzano/ICCS"
            }
        ],
        "inputs": [
            "indexed_subreads",
            "movie"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'pbccs'"
        ],
        "when": "",
        "stub": ""
    },
    "lima": {
        "name_process": "lima",
        "string_process": "\nprocess lima {\n\n    tag { movie }\n\n    label 'lima'\n\n    input:\n    tuple movie, path(indexed_ccs)\n    tuple val(five_primer), val(three_primer)\n    path barcodes\n\n    output:\n    tuple movie, path(\"${movie}.fl.${five_primer}--${three_primer}.bam{,.pbi}\"), emit: bam\n    path \"${movie}.fl.lima.counts\", emit: counts\n    path \"${movie}.fl.lima.report\", emit: report\n    path \"${movie}.fl.lima.summary\", emit: summary\n\n    script:\n    def (bam, pbi) = indexed_ccs\n\n    \"\"\"\n    lima \\\\\n        --isoseq \\\\\n        --num-threads ${task.cpus} \\\\\n        \"${bam}\" \\\\\n        \"${barcodes}\" \\\\\n        \"${movie}.fl.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    def (bam, pbi) = indexed_ccs\n\n    \"\"\"\n    lima \\\\\n        --isoseq \\\\\n        --num-threads ${task.cpus} \\\\\n        \"${bam}\" \\\\\n        \"${barcodes}\" \\\\\n        \"${movie}.fl.bam\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "blima"
        ],
        "tools_url": [
            "https://bio.tools/blima"
        ],
        "tools_dico": [
            {
                "name": "blima",
                "uri": "https://bio.tools/blima",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Includes several algorithms for the preprocessing of Illumina microarray data. It focuses to the bead level analysis and provides novel approach to the quantile normalization of the vectors of unequal lengths. It provides variety of the methods for background correction including background subtraction, RMA like convolution and background outlier removal. It also implements variance stabilizing transformation on the bead level, methods for data summarization and t-test performance.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/blima.html"
            }
        ],
        "inputs": [
            "indexed_ccs",
            "movie",
            "five_primer",
            "three_primer",
            "barcodes"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'lima'"
        ],
        "when": "",
        "stub": ""
    },
    "refine": {
        "name_process": "refine",
        "string_process": "\nprocess refine {\n\n    tag { movie }\n\n    label 'isoseq3'\n\n    input:\n    tuple movie, path(indexed_ccs)\n    path barcodes\n\n    output:\n    tuple movie, path(\"${movie}.flnc.bam{,.pbi}\"), emit: bam\n    path \"${movie}.flnc.report.csv\", emit: report\n\n    script:\n    def require_polya = params.require_polya ? '--require-polya' : ''\n    def (bam, pbi) = indexed_ccs\n\n    \"\"\"\n    isoseq3 refine \\\\\n        --verbose \\\\\n        ${require_polya} \\\\\n        \"${bam}\" \\\\\n        \"${barcodes}\" \\\\\n        \"${movie}.flnc.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    def require_polya = params.require_polya ? '--require-polya' : ''\n    def (bam, pbi) = indexed_ccs\n\n    \"\"\"\n    isoseq3 refine \\\\\n        --verbose \\\\\n        ${require_polya} \\\\\n        \"${bam}\" \\\\\n        \"${barcodes}\" \\\\\n        \"${movie}.flnc.bam\"\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "indexed_ccs",
            "movie",
            "barcodes"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { movie }",
            "label 'isoseq3'"
        ],
        "when": "",
        "stub": ""
    },
    "create_transcriptsets": {
        "name_process": "create_transcriptsets",
        "string_process": "\nprocess create_transcriptsets {\n\n    tag { library }\n\n    label 'pbcoretools'\n\n    input:\n    tuple library, path(bams), path(indexes)\n\n    output:\n    tuple library, path(\"${library}.transcriptset.xml\")\n\n    script:\n    def quoted_bams = bams.collect { /\"${it}\"/ }.join(' ')\n\n    \"\"\"\n    dataset create \\\\\n        --type TranscriptSet \\\\\n        --relative \\\\\n        \"${library}.transcriptset.xml\" \\\\\n        ${quoted_bams}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    def quoted_bams = bams.collect { /\"${it}\"/ }.join(' ')\n\n    \"\"\"\n    dataset create \\\\\n        --type TranscriptSet \\\\\n        --relative \\\\\n        \"${library}.transcriptset.xml\" \\\\\n        ${quoted_bams}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "MultiDataSet"
        ],
        "tools_url": [
            "https://bio.tools/multidataset"
        ],
        "tools_dico": [
            {
                "name": "MultiDataSet",
                "uri": "https://bio.tools/multidataset",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3391",
                            "term": "Omics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Implementation of the BRGE's (Bioinformatic Research Group in Epidemiology from Center for Research in Environmental Epidemiology) dataset and MethylationSet. It is designed for integrating multi omics data sets and MethylationSet to contain normalized methylation data. These package contains base classes for MEAL and rexposome packages.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/MultiDataSet.html"
            }
        ],
        "inputs": [
            "bams",
            "indexes",
            "library"
        ],
        "nb_inputs": 3,
        "outputs": [
            "library"
        ],
        "nb_outputs": 1,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { library }",
            "label 'pbcoretools'"
        ],
        "when": "",
        "stub": ""
    },
    "cluster": {
        "name_process": "cluster",
        "string_process": "\nprocess cluster {\n\n    tag { library }\n\n    label 'isoseq3'\n\n    input:\n    tuple library, path(transcriptset), path(bams), path(indexes)\n\n    output:\n    tuple library, path(\"${library}.unpolished.bam{,.pbi}\"), emit: bam\n\n    \"\"\"\n    isoseq3 cluster \\\\\n        --num-threads ${task.cpus} \\\\\n        --verbose \\\\\n        --poa-cov \"${params.max_ccs_reads}\" \\\\\n        \"${transcriptset}\" \\\\\n        \"${library}.unpolished.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    isoseq3 cluster \\\\\n        --num-threads ${task.cpus} \\\\\n        --verbose \\\\\n        --poa-cov \"${params.max_ccs_reads}\" \\\\\n        \"${transcriptset}\" \\\\\n        \"${library}.unpolished.bam\"\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "transcriptset",
            "bams",
            "indexes",
            "library"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { library }",
            "label 'isoseq3'"
        ],
        "when": "",
        "stub": ""
    },
    "create_subreadsets": {
        "name_process": "create_subreadsets",
        "string_process": "\nprocess create_subreadsets {\n\n    tag { library }\n\n    label 'pbcoretools'\n\n    input:\n    tuple library, path(bams), path(indexes)\n\n    output:\n    tuple library, path(\"${library}.subreadset.xml\")\n\n    script:\n    def quoted_bams = bams.collect { /\"${it}\"/ }.join(' ')\n\n    \"\"\"\n    dataset create \\\\\n        --type SubreadSet \\\\\n        --relative \\\\\n        \"${library}.subreadset.xml\" \\\\\n        ${quoted_bams}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    def quoted_bams = bams.collect { /\"${it}\"/ }.join(' ')\n\n    \"\"\"\n    dataset create \\\\\n        --type SubreadSet \\\\\n        --relative \\\\\n        \"${library}.subreadset.xml\" \\\\\n        ${quoted_bams}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "MultiDataSet"
        ],
        "tools_url": [
            "https://bio.tools/multidataset"
        ],
        "tools_dico": [
            {
                "name": "MultiDataSet",
                "uri": "https://bio.tools/multidataset",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3391",
                            "term": "Omics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Implementation of the BRGE's (Bioinformatic Research Group in Epidemiology from Center for Research in Environmental Epidemiology) dataset and MethylationSet. It is designed for integrating multi omics data sets and MethylationSet to contain normalized methylation data. These package contains base classes for MEAL and rexposome packages.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/MultiDataSet.html"
            }
        ],
        "inputs": [
            "bams",
            "indexes",
            "library"
        ],
        "nb_inputs": 3,
        "outputs": [
            "library"
        ],
        "nb_outputs": 1,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { library }",
            "label 'pbcoretools'"
        ],
        "when": "",
        "stub": ""
    },
    "polish": {
        "name_process": "polish",
        "string_process": "\nprocess polish {\n\n    tag { library }\n\n    label 'isoseq3'\n\n    input:\n    val library\n    tuple path(unpolished), path(unpolished_index)\n    tuple path(subreadset), path(subreads), path(subreads_indexes)\n\n    output:\n    tuple library, path(\"${library}.polished.bam{,.pbi}\"), emit: bam\n    tuple library, path(\"${library}.polished.hq.fasta.gz\"), emit: hq_reads\n    tuple library, path(\"${library}.polished.lq.fasta.gz\"), emit: lq_reads\n    path \"${library}.polished.cluster_report.csv\", emit: report\n\n    \"\"\"\n    isoseq3 polish \\\\\n        --num-threads ${task.cpus} \\\\\n        --verbose \\\\\n        --rq-cutoff \"${params.rq_cutoff}\" \\\\\n        --coverage \"${params.max_subreads}\" \\\\\n        \"${unpolished}\" \\\\\n        \"${subreadset}\" \\\\\n        \"${library}.polished.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n    isoseq3 polish \\\\\n        --num-threads ${task.cpus} \\\\\n        --verbose \\\\\n        --rq-cutoff \"${params.rq_cutoff}\" \\\\\n        --coverage \"${params.max_subreads}\" \\\\\n        \"${unpolished}\" \\\\\n        \"${subreadset}\" \\\\\n        \"${library}.polished.bam\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "library",
            "unpolished",
            "unpolished_index",
            "subreadset",
            "subreads",
            "subreads_indexes"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { library }",
            "label 'isoseq3'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2": {
        "name_process": "minimap2",
        "string_process": "\nprocess minimap2 {\n\n    tag { library }\n\n    label 'minimap2'\n\n    input:\n    tuple library, path(reads)\n    path ref\n\n    output:\n    file \"${library}.sam\"\n\n    \"\"\"\n    minimap2 \\\\\n        -t ${task.cpus} \\\\\n        -ax splice:hq \\\\\n        -uf \\\\\n        -o \"${library}.sam\" \\\\\n        \"${ref}\" \\\\\n        \"${reads}\"\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    minimap2 \\\\\n        -t ${task.cpus} \\\\\n        -ax splice:hq \\\\\n        -uf \\\\\n        -o \"${library}.sam\" \\\\\n        \"${ref}\" \\\\\n        \"${reads}\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "reads",
            "library",
            "ref"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { library }",
            "label 'minimap2'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n\n    tag { sam.getBaseName() }\n\n    label 'samtools'\n\n    input:\n    path sam\n\n    output:\n    path \"${sam.getBaseName()}.bam\"\n\n    \"\"\"\n    samtools view -u \"${sam}\" | samtools sort -o \"${sam.getBaseName()}.bam\" -\n    samtools index \"${sam.getBaseName()}.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    samtools view -u \"${sam}\" | samtools sort -o \"${sam.getBaseName()}.bam\" -\n    samtools index \"${sam.getBaseName()}.bam\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { sam.getBaseName() }",
            "label 'samtools'"
        ],
        "when": "",
        "stub": ""
    },
    "junceval": {
        "name_process": "junceval",
        "string_process": "\nprocess junceval {\n\n    tag { sam.getBaseName() }\n\n    label 'minimap2'\n\n    input:\n    path sam\n    path gtf\n\n    output:\n    path \"${sam.getBaseName()}.junctions.tsv\"\n\n    \"\"\"\n    paftools.js junceval \\\\\n        -p \\\\\n        \"${gtf}\" \\\\\n        \"${sam}\" \\\\\n        > \"${sam.getBaseName()}.junctions.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    paftools.js junceval \\\\\n        -p \\\\\n        \"${gtf}\" \\\\\n        \"${sam}\" \\\\\n        > \"${sam.getBaseName()}.junctions.tsv\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sam",
            "gtf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ampatchlab__nf-isoseq",
        "directive": [
            "tag { sam.getBaseName() }",
            "label 'minimap2'"
        ],
        "when": "",
        "stub": ""
    }
}