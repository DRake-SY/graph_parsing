{
    "BAM_STATS": {
        "name_process": "BAM_STATS",
        "string_process": "\nprocess BAM_STATS {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${bam.baseName}.idxstats\")\n      path(\"${bam.baseName}.idxstats\"), emit: idxstats\n\n    script:\n      \"\"\"\n      samtools idxstats ${bam} > \\$(basename \"${bam}\" .bam).idxstats\n      \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "      \"\"\"\n      samtools idxstats ${bam} > \\$(basename \"${bam}\" .bam).idxstats\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "MACS2_BEDPE": {
        "name_process": "MACS2_BEDPE",
        "string_process": "\nprocess MACS2_BEDPE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bedpe)\n\n    output:\n      path '*.{bdg,broadPeak,gappedPeak,xls,narrowPeak,bed}'\n\n    script:\n      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bedpe} -f BEDPE -n ${row.sample}_narrow -g ${params.macsgenome} -q ${params.macsqval} \\\n              -B --SPMR --keep-dup all --call-summits\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bedpe} -f BEDPE -n ${row.sample}_broad -g ${params.macsgenome} \\\n              -B --SPMR --keep-dup all --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bedpe} -f BEDPE -n ${row.sample}_narrow -g ${params.macsgenome} -q ${params.macsqval} \\\n              -B --SPMR --keep-dup all --call-summits\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bedpe} -f BEDPE -n ${row.sample}_broad -g ${params.macsgenome} \\\n              -B --SPMR --keep-dup all --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bedpe",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "NGMERGE": {
        "name_process": "NGMERGE",
        "string_process": "\nprocess NGMERGE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n\n    output:\n     tuple row, file(\"${row.sample}_1.fastq.gz\"), file(\"${row.sample}_2.fastq.gz\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      NGmerge -a -v -n 8 -z -u 41 -1 ${ row.sample }_R1.fq.gz -2 ${ row.sample }_R2.fq.gz -o ${ row.sample }\n      \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      NGmerge -a -v -n 8 -z -u 41 -1 ${ row.sample }_R1.fq.gz -2 ${ row.sample }_R2.fq.gz -o ${ row.sample }\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fq1",
            "fq2",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BOWTIE2": {
        "name_process": "BOWTIE2",
        "string_process": "\nprocess BOWTIE2 {\n\n    label 'bowtie2'\n\n    tag { row.sample }\n    \n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n      path bt2_indices\n\n    output:\n      tuple row, path(\"${row.sample}.nbam\"), emit: nbam\n      path(\"${row.sample}.nbam\"), emit: nbam_path\n      tuple row, path(\"${row.sample}.bam\"), emit: bam\n      tuple row, path(\"${row.sample}.bam\"), path(\"${row.sample}.bam.bai\"), emit: bami\n      tuple row, path(\"${row.sample}.bowtie2.stats\"), emit: bowtie2_stats\n\n    script:\n      index_base = bt2_indices[0].toString() - ~/.rev.\\d.bt2?/ - ~/.\\d.bt2?/\n      \"\"\"\n      bowtie2 -x $index_base \\\n              -1 ${fq1} -2 ${fq2} \\\n              -k 10 \\\n              -N 0  \\\n              -p 8  \\\n              --very-sensitive \\\n              --no-mixed \\\n              --no-discordant \\\n              --minins 30 \\\n              --maxins 2000 \\\n              2> ${ row.sample }.bowtie2.stats | \\\n        samtools view -F 4 -F 8 -u - | \\\n        samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "      index_base = bt2_indices[0].toString() - ~/.rev.\\d.bt2?/ - ~/.\\d.bt2?/\n      \"\"\"\n      bowtie2 -x $index_base \\\n              -1 ${fq1} -2 ${fq2} \\\n              -k 10 \\\n              -N 0  \\\n              -p 8  \\\n              --very-sensitive \\\n              --no-mixed \\\n              --no-discordant \\\n              --minins 30 \\\n              --maxins 2000 \\\n              2> ${ row.sample }.bowtie2.stats | \\\n        samtools view -F 4 -F 8 -u - | \\\n        samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fq1",
            "fq2",
            "row",
            "bt2_indices"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'bowtie2'",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_COMPLEXITY_FACTORS": {
        "name_process": "BAM_COMPLEXITY_FACTORS",
        "string_process": "\nprocess BAM_COMPLEXITY_FACTORS {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'    \n\n    input:\n      path(complexityFiles)\n      val(outputName)\n\n    output:\n      path(\"${outputName}.complexityFactors\"), emit: complexityFactors\n\n    script:\n      \"\"\"\n      computeComplexityFactors.R ${outputName}\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      computeComplexityFactors.R ${outputName}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "complexityFiles",
            "outputName"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FASTQC_RAW": {
        "name_process": "FASTQC_RAW",
        "string_process": "\nprocess FASTQC_RAW {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n\n    output:\n      tuple val(\"$bySample\"), path(\"${ row.sample }_R{1,2}_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R1.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R2.fq.gz\n      \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R1.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R2.fq.gz\n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fq1",
            "fq2",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FASTQC_RAW_SE": {
        "name_process": "FASTQC_RAW_SE",
        "string_process": "\nprocess FASTQC_RAW_SE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq)\n\n    output:\n      tuple val(\"$bySample\"), path(\"${ row.sample }_R{1}_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq } ${ row.sample }_R1.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R1.fq.gz\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq } ${ row.sample }_R1.fq.gz\n      fastqc -q -t 8 ${ row.sample }_R1.fq.gz\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fq",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_READINSERTIONS": {
        "name_process": "BAM_READINSERTIONS",
        "string_process": "\nprocess BAM_READINSERTIONS {\n\n    label 'readinsertions'\n    label 'rx'\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'    \n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${row.sample}.Rdata\")\n      path(\"${row.sample}.Rdata\"), emit: bam_readinsertions_rds\n\n    script:\n      \"\"\"\n      computeReadInsertions.R ${bam} ${params.genome} ${row.sample} \n      \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "      \"\"\"\n      computeReadInsertions.R ${bam} ${params.genome} ${row.sample} \n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'readinsertions'",
            "label 'rx'",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_COMPLEXITY": {
        "name_process": "BAM_COMPLEXITY",
        "string_process": "\nprocess BAM_COMPLEXITY {\n\n    label 'complexity'\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'    \n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${bam.baseName}.complexity\")\n      path(\"${bam.baseName}.complexity\"), emit: bam_complexity\n      tuple row, path(\"${bam.baseName}.Rdata\"), emit: bam_complexity_rds\n\n    script:\n      \"\"\"\n      computeComplexity.R ${bam} ${bai} \\$(basename \"${bam}\" .bam)\n      \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "      \"\"\"\n      computeComplexity.R ${bam} ${bai} \\$(basename \"${bam}\" .bam)\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'complexity'",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "HISAT2": {
        "name_process": "HISAT2",
        "string_process": "\nprocess HISAT2 {\n\n    label \"hisat2\"\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n      path hs2_indices\n      path splice_sites\n\n    output:\n      tuple row, path(\"${row.sample}.nbam\"), emit: nbam\n      path(\"${row.sample}.nbam\"), emit: nbam_path\n      tuple row, path(\"${row.sample}.bam\"), emit: bam\n      tuple row, path(\"${row.sample}.bam\"), path(\"${row.sample}.bam.bai\"), emit: bami\n      tuple row, path(\"${row.sample}.hisat2.stats\"), emit: hisat2_stats\n\n    script:\n      index_base = hs2_indices[0].toString() - ~/.\\d.ht2?/\n      \"\"\"\n      hisat2 -x ${index_base} \\\n             -1 ${fq1} -2 ${fq2} \\\n             --known-splicesite-infile ${splice_sites} \\\n             --no-mixed \\\n             --no-discordant \\\n             -p 8 \\\n             --summary-file ${row.sample}.hisat2.stats | \\\n      samtools view -F 4 -F 8 -u - | \\\n      samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "      index_base = hs2_indices[0].toString() - ~/.\\d.ht2?/\n      \"\"\"\n      hisat2 -x ${index_base} \\\n             -1 ${fq1} -2 ${fq2} \\\n             --known-splicesite-infile ${splice_sites} \\\n             --no-mixed \\\n             --no-discordant \\\n             -p 8 \\\n             --summary-file ${row.sample}.hisat2.stats | \\\n      samtools view -F 4 -F 8 -u - | \\\n      samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "HISAT2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fq1",
            "fq2",
            "row",
            "hs2_indices",
            "splice_sites"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label \"hisat2\"",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_DEPTH_FACTORS": {
        "name_process": "BAM_DEPTH_FACTORS",
        "string_process": "\nprocess BAM_DEPTH_FACTORS {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'    \n\n    input:\n      path(depthFiles)\n      val(outputName)\n\n    output:\n      path(\"${outputName}.depthFactors\"), emit: depthFactors\n\n    script:\n      \"\"\"\n      computeDepthFactors.R ${outputName}\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      computeDepthFactors.R ${outputName}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "depthFiles",
            "outputName"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_TDF": {
        "name_process": "BAM_TDF",
        "string_process": "\nprocess BAM_TDF {\n\n    tag { row.sample }\n\n    label 'igv'\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${row.sample}.tdf\"), emit: tdf\n\n    script:\n      \"\"\"\n      igvtools count ${bam} ${row.sample}.tdf ${params.genome}\n      \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "      \"\"\"\n      igvtools count ${bam} ${row.sample}.tdf ${params.genome}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "IGVtools"
        ],
        "tools_url": [
            "https://bio.tools/igvtools"
        ],
        "tools_dico": [
            {
                "name": "IGVtools",
                "uri": "https://bio.tools/igvtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Sequence feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature table comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The igvtools utility provides a set of tools for pre-processing data files.",
                "homepage": "https://software.broadinstitute.org/software/igv/igvtools"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "label 'igv'",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "SCALE_FACTORS": {
        "name_process": "SCALE_FACTORS",
        "string_process": "\nprocess SCALE_FACTORS {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(countmatrix)\n\n    output:\n      path \"${countmatrix.simpleName}.scalefactors\", emit: scalefactors\n\n    script:\n      \"\"\"\n      #computeScaleFactors.R \"${countmatrix}\" \\$(basename \"${countmatrix}\" .*).scalefactors\n      computeScaleFactors.R \"${countmatrix}\" \\$(echo \"${countmatrix}\" | sed 's/\\\\..*\\$//g').scalefactors\n      \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      #computeScaleFactors.R \"${countmatrix}\" \\$(basename \"${countmatrix}\" .*).scalefactors\n      computeScaleFactors.R \"${countmatrix}\" \\$(echo \"${countmatrix}\" | sed 's/\\\\..*\\$//g').scalefactors\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "countmatrix"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "QRQC": {
        "name_process": "QRQC",
        "string_process": "\nprocess QRQC {\n\n    label 'qrqc'\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n\n    output:\n      path(\"${ row.sample }_R1.pdf\")\n      path(\"${ row.sample }_R2.pdf\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      plotQRQC.R ${ row.sample }_R1.fq.gz ${ row.sample }_1\n      plotQRQC.R ${ row.sample }_R2.fq.gz ${ row.sample }_2\n      \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      plotQRQC.R ${ row.sample }_R1.fq.gz ${ row.sample }_1\n      plotQRQC.R ${ row.sample }_R2.fq.gz ${ row.sample }_2\n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fq1",
            "fq2",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'qrqc'",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_BWTMM": {
        "name_process": "BAM_BWTMM",
        "string_process": "\nprocess BAM_BWTMM {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n      path(scalefactors)\n\n    output:\n      tuple row, path(\"${bam.baseName}.TMM.bw\"), emit: bw_tmm\n\n    script:\n      \"\"\"\n      # extract size factor and get reciprocal\n      SF=\\$(bc <<< \"scale=10; \\$(grep \"${bam}\" \"${scalefactors}\" | cut -f2)^-1\")\n      # create TMM normalised bigwig file\n      bamCoverage -b ${bam}                \\\n                  -p 8                     \\\n                  -bs 1                    \\\n                  --scaleFactor \\${SF}     \\\n                  --maxFragmentLength 2000 \\\n                  -o  \\$(basename \"${bam}\" .bam).TMM.bw\n      \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "      \"\"\"\n      # extract size factor and get reciprocal\n      SF=\\$(bc <<< \"scale=10; \\$(grep \"${bam}\" \"${scalefactors}\" | cut -f2)^-1\")\n      # create TMM normalised bigwig file\n      bamCoverage -b ${bam}                \\\n                  -p 8                     \\\n                  -bs 1                    \\\n                  --scaleFactor \\${SF}     \\\n                  --maxFragmentLength 2000 \\\n                  -o  \\$(basename \"${bam}\" .bam).TMM.bw\n      \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "row",
            "scalefactors"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "NPEAK_SAF": {
        "name_process": "NPEAK_SAF",
        "string_process": "\nprocess NPEAK_SAF {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(narrowpeak)\n\n    output:\n      path \"*.saf\", emit: saf\n\n    script:\n\n      \"\"\"\n      ## Make SAF file (+1 because SAF is 1-based, BED/narrowPeak is 0-based)\n      awk 'OFS=\"\\t\" {print \\$1\".\"\\$2+1\".\"\\$3, \\$1, \\$2+1, \\$3, \".\"}' ${narrowpeak} > \\$(basename \"$narrowpeak\" .narrowPeak).saf\n      \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      ## Make SAF file (+1 because SAF is 1-based, BED/narrowPeak is 0-based)\n      awk 'OFS=\"\\t\" {print \\$1\".\"\\$2+1\".\"\\$3, \\$1, \\$2+1, \\$3, \".\"}' ${narrowpeak} > \\$(basename \"$narrowpeak\" .narrowPeak).saf\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "narrowpeak"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_MERGE": {
        "name_process": "BAM_MERGE",
        "string_process": "\nprocess BAM_MERGE {\n\n    tag { group }\n    label \"bigTask\"\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple group, row, path(bams), replicatesNumber\n\n    output:\n      tuple group, row, path(\"${group}.bam\"), path(\"${group}.bam.bai\"), emit: merged_bami\n\n    script:\n      \"\"\"\n      samtools merge ${group}.bam ${bams[0]} ${bams[1]} ${bams[2]}\n      samtools index ${group}.bam\n      \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      samtools merge ${group}.bam ${bams[0]} ${bams[1]} ${bams[2]}\n      samtools index ${group}.bam\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams",
            "group"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { group }",
            "label \"bigTask\"",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BED_SLOP": {
        "name_process": "BED_SLOP",
        "string_process": "\nprocess BED_SLOP {\n\n    tag { \"$bed\" }\n\n    label \"\"\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(bed)\n\n    output:\n      path \"*.slop.bed\", emit: slop_bed\n\n    script:\n      \"\"\"\n      bedtools slop -b 200 -i \"$bed\" -g \"${params.chrom_size}\" | \\\n      sort -k1,1 -k2,2n | \\\n      bedtools merge > \\$(basename \"$bed\" .bed).slop.bed\n      \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "      \"\"\"\n      bedtools slop -b 200 -i \"$bed\" -g \"${params.chrom_size}\" | \\\n      sort -k1,1 -k2,2n | \\\n      bedtools merge > \\$(basename \"$bed\" .bed).slop.bed\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$bed\" }",
            "label \"\"",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FEATURE_COUNTS_GTF": {
        "name_process": "FEATURE_COUNTS_GTF",
        "string_process": "\nprocess FEATURE_COUNTS_GTF {\n\n   label \"featureCounts\"\n\n   publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(gtf)\n      path(nbams)\n\n    output:\n      path \"*.countmatrix.txt\", emit: countmatrix\n      path \"*.summary\", emit:fc_summaries\n\n    script:\n      \"\"\"\n      featureCounts -a ${gtf}    \\\n                    -F GTF       \\\n                    -p           \\\n                    -T 8         \\\n                    -o  ${params.pipeName}.countmatrix.txt \\\n                    *.nbam       \\\n                    2>> ${params.pipeName}.countmatrix.log\n      \"\"\"\n\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      featureCounts -a ${gtf}    \\\n                    -F GTF       \\\n                    -p           \\\n                    -T 8         \\\n                    -o  ${params.pipeName}.countmatrix.txt \\\n                    *.nbam       \\\n                    2>> ${params.pipeName}.countmatrix.log\n      \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "gtf",
            "nbams"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label \"featureCounts\"",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "TRIMGALORE": {
        "name_process": "TRIMGALORE",
        "string_process": "\nprocess TRIMGALORE {\n\n    tag { row.sample }\n    label 'trimgalore'\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n\n    output:\n      tuple row, file(\"*_val_1.fq.gz\"), file(\"*_val_2.fq.gz\"), emit: trimmedReads\n      tuple row, file(\"*trimming_report.txt\")\n      tuple row, file(\"*_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      trim_galore --paired \\\n                  --gzip \\\n                  --phred33 \\\n                  --fastqc_args \"-q\" ${ row.sample }_R1.fq.gz ${ row.sample }_R2.fq.gz\n      \"\"\"\n\n}",
        "nb_lignes_process": 25,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq1 } ${ row.sample }_R1.fq.gz\n      [ ! -f  ${ row.sample }_R2.fq.gz ] && ln -s ${ fq2 } ${ row.sample }_R2.fq.gz\n      trim_galore --paired \\\n                  --gzip \\\n                  --phred33 \\\n                  --fastqc_args \"-q\" ${ row.sample }_R1.fq.gz ${ row.sample }_R2.fq.gz\n      \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fq1",
            "fq2",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [
            "row",
            "row"
        ],
        "nb_outputs": 2,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "label 'trimgalore'",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "MERGE_BLACKLISTS": {
        "name_process": "MERGE_BLACKLISTS",
        "string_process": "\nprocess MERGE_BLACKLISTS {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(blacklist1)\n      path(blacklist2)\n\n    output:\n      path \"merged_blacklists.bed\"\n\n    script:\n      \"\"\"\n      # prepare blacklists\n      sort -k1,1 -k2,2n $blacklist1 $blacklist2 |\\\n          bedtools merge -i stdin > merged_blacklists.bed\n      # edit in place and add header chr start end\n      sed -i '1i chr\\tstart\\tend' merged_blacklists.bed\n      \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      # prepare blacklists\n      sort -k1,1 -k2,2n $blacklist1 $blacklist2 |\\\n          bedtools merge -i stdin > merged_blacklists.bed\n      # edit in place and add header chr start end\n      sed -i '1i chr\\tstart\\tend' merged_blacklists.bed\n      \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "blacklist1",
            "blacklist2"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "RGT_DIFF": {
        "name_process": "RGT_DIFF",
        "string_process": "\nprocess RGT_DIFF {\n\n    tag { \"$key\" }\n\n    label \"rgt_hint\"\n\n    publishDir \"${params.outdir}/${task.process}/${key}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple key, path(bed1), path(bed2)\n\n    output:\n      path \"match\"\n\n    script:\n      \"\"\"\n      rgt-motifanalysis matching --organism=mm9 --input-files \"$bed1\" \"$bed2\"\n      \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      rgt-motifanalysis matching --organism=mm9 --input-files \"$bed1\" \"$bed2\"\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed1",
            "bed2",
            "key"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$key\" }",
            "label \"rgt_hint\"",
            "publishDir \"${params.outdir}/${task.process}/${key}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "HOMER_FASTA_MOTIF": {
        "name_process": "HOMER_FASTA_MOTIF",
        "string_process": "\nprocess HOMER_FASTA_MOTIF {\n\n    tag { \"$fa\" }\n\n    label \"homer\"\n\n    publishDir \"${params.outdir}/${task.process}/${fa.simpleName}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(fa)\n\n\n    output:\n      path \"${fa.baseName}_results\"\n\n    script:\n      \"\"\"\n      findMotifs.pl $fa fasta \\$(basename \"$fa\" .fa)_results/ -mset vertebrates -p 4\n      \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "      \"\"\"\n      findMotifs.pl $fa fasta \\$(basename \"$fa\" .fa)_results/ -mset vertebrates -p 4\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fa"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$fa\" }",
            "label \"homer\"",
            "publishDir \"${params.outdir}/${task.process}/${fa.simpleName}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_SUBSAMPLE": {
        "name_process": "BAM_SUBSAMPLE",
        "string_process": "\nprocess BAM_SUBSAMPLE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n      path(sub_factors)\n\n    output:\n      tuple row, path(\"${bam.baseName}.sub.bam\"), path(\"${bam.baseName}.sub.bam.bai\"), emit: bami\n      tuple row, path(\"${bam.baseName}.sub.nbam\"), emit: nbam\n      tuple row, path(\"${bam.baseName}.sub.bam\"), emit: bam\n      path \"${bam.baseName}.sub.bam\", emit: bam_path\n\n    script:\n      \"\"\"\n      # factors are calculated using the compute complexity script\n      # get the factor for the current sample\n      FACTOR=\\$(awk '\\$1 == \"${bam.simpleName}\" {print \\$2}' ${sub_factors})\n      ############################################################################\n      # We added 1 to subsampling factors to serve as a seed for Samtools\n      # e.g.: 1.45 is to subsample 45% of the sample using 1 as a seed\n      # however, for the lowest sample which will not be subsampled,\n      # the subsampling factor will be (1+1=2)\n      # let's get rid of the 1 in that case to avoid samtools complaining\n      if [[ \\$FACTOR -eq 2 ]]; then FACTOR=1.0; fi\n      #############################################################################\n      samtools view -h -b -s \\$FACTOR ${bam} >  \\$(basename \"$bam\" .bam).sub.bam\n      # index bam file\n      samtools index \\$(basename \"$bam\" .bam).sub.bam\n      samtools sort -n \\$(basename \"$bam\" .bam).sub.bam -o \\$(basename \"$bam\" .bam).sub.nbam\n      \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "      \"\"\"\n      # factors are calculated using the compute complexity script\n      # get the factor for the current sample\n      FACTOR=\\$(awk '\\$1 == \"${bam.simpleName}\" {print \\$2}' ${sub_factors})\n      ############################################################################\n      # We added 1 to subsampling factors to serve as a seed for Samtools\n      # e.g.: 1.45 is to subsample 45% of the sample using 1 as a seed\n      # however, for the lowest sample which will not be subsampled,\n      # the subsampling factor will be (1+1=2)\n      # let's get rid of the 1 in that case to avoid samtools complaining\n      if [[ \\$FACTOR -eq 2 ]]; then FACTOR=1.0; fi\n      #############################################################################\n      samtools view -h -b -s \\$FACTOR ${bam} >  \\$(basename \"$bam\" .bam).sub.bam\n      # index bam file\n      samtools index \\$(basename \"$bam\" .bam).sub.bam\n      samtools sort -n \\$(basename \"$bam\" .bam).sub.bam -o \\$(basename \"$bam\" .bam).sub.nbam\n      \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row",
            "sub_factors"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BW_MEAN": {
        "name_process": "BW_MEAN",
        "string_process": "\nprocess BW_MEAN {\n\n    tag { group }\n    label \"ds3\"\n    label \"bw_mean\"\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple group, row, path(bw), rep_size\n      path chromsize\n\n    output:\n      tuple group, row, path(\"${group}.mean.bw\"), emit: bw_mean\n      path \"${group}.mean.bw\", emit: bw_mean_path\n\n    script:\n      \"\"\"\n      wiggletools write_bg ${group}.intermediate.bg mean ${bw[0]} ${bw[1]} ${bw[2]}\n      bedtools slop -i ${group}.intermediate.bg -g ${chromsize} -b 0 | bedClip stdin ${chromsize} ${group}.intermediate.bg.clip\n      LC_ALL=C sort -k1,1 -k2,2n ${group}.intermediate.bg.clip > ${group}.intermediate.bg.sorted.clip\n      bedGraphToBigWig ${group}.intermediate.bg.sorted.clip ${chromsize} ${group}.mean.bw\n      rm ${group}.intermediate.bg\n      rm ${group}.intermediate.bg.clip\n      rm ${group}.intermediate.bg.sorted.clip\n      \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "      \"\"\"\n      wiggletools write_bg ${group}.intermediate.bg mean ${bw[0]} ${bw[1]} ${bw[2]}\n      bedtools slop -i ${group}.intermediate.bg -g ${chromsize} -b 0 | bedClip stdin ${chromsize} ${group}.intermediate.bg.clip\n      LC_ALL=C sort -k1,1 -k2,2n ${group}.intermediate.bg.clip > ${group}.intermediate.bg.sorted.clip\n      bedGraphToBigWig ${group}.intermediate.bg.sorted.clip ${chromsize} ${group}.mean.bw\n      rm ${group}.intermediate.bg\n      rm ${group}.intermediate.bg.clip\n      rm ${group}.intermediate.bg.sorted.clip\n      \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BEDTools",
            "bedGraphToBigWig"
        ],
        "tools_url": [
            "https://bio.tools/bedtools",
            "https://bio.tools/bedgraphtobigwig"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "bedGraphToBigWig",
                "uri": "https://bio.tools/bedgraphtobigwig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convert bedGraph to bigWig file.",
                "homepage": "https://www.encodeproject.org/software/bedgraphtobigwig/"
            }
        ],
        "inputs": [
            "bw",
            "group",
            "chromsize"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { group }",
            "label \"ds3\"",
            "label \"bw_mean\"",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "PICARD": {
        "name_process": "PICARD",
        "string_process": "\nprocess PICARD {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${bam.baseName}.deDups.bam\"), path(\"${bam.baseName}.deDups.bam.bai\"), emit: bami\n      tuple row, path(\"${bam.baseName}.deDups.bam\"), emit: bam\n      tuple row, path(\"${bam.baseName}.deDups.txt\"), emit: txt\n      path \"${bam.baseName}.deDups.bam\", emit: bam_path\n\n    script:\n      \"\"\"\n      picard MarkDuplicates I=${bam} \\\n                            O=\\$(basename \"${bam}\" .bam).deDups.bam \\\n                            M=\\$(basename \"${bam}\" .bam).deDups.txt \\\n                            REMOVE_DUPLICATES=true\n      samtools index \\$(basename \"$bam\" .bam).deDups.bam\n      \"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "      \"\"\"\n      picard MarkDuplicates I=${bam} \\\n                            O=\\$(basename \"${bam}\" .bam).deDups.bam \\\n                            M=\\$(basename \"${bam}\" .bam).deDups.txt \\\n                            REMOVE_DUPLICATES=true\n      samtools index \\$(basename \"$bam\" .bam).deDups.bam\n      \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Picard",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_BW": {
        "name_process": "BAM_BW",
        "string_process": "\nprocess BAM_BW {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${bam.baseName}.bw\"), emit: bw\n\n    script:\n      \"\"\"\n      bamCoverage -b ${bam} \\\n                  -p 8      \\\n                  -bs 50    \\\n                  --maxFragmentLength 2000 \\\n                  -o  \\$(basename \"${bam}\" .bam).bw\n      \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "      \"\"\"\n      bamCoverage -b ${bam} \\\n                  -p 8      \\\n                  -bs 50    \\\n                  --maxFragmentLength 2000 \\\n                  -o  \\$(basename \"${bam}\" .bam).bw\n      \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_SHIFT_BEDPE": {
        "name_process": "BAM_SHIFT_BEDPE",
        "string_process": "\nprocess BAM_SHIFT_BEDPE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n      tuple row, path(\"${bam.baseName}.macs.bedpe\"), emit: bedpe_macs\n      tuple row, path(\"${bam.baseName}.std.bedpe\"), emit: bedpe_std\n\n    script:\n      \"\"\"\n      # Sort by read name\n      # fix read mates\n      # convert to BEDPE\n      # adjust Tn5 cut sites\n      # convert standard BEDPE to MACS-understandable BEDPE\n      samtools view -F 1804 -f 2 -u ${bam} | \\\n      samtools sort -O bam -n -T ${bam} -  | \\\n      samtools fixmate -r -O bam - -       | \\\n      samtools view -F 1804 -f 2 -u -      | \\\n      bedtools bamtobed -bedpe -i stdin > \\$(basename \"$bam\" .bam).std.bedpe\n      bedpeTn5shift.sh \\$(basename \"$bam\" .bam).std.bedpe > \\$(basename \"$bam\" .bam).shift.bedpe\n      bedpeMinimalConvert.sh \\$(basename \"$bam\" .bam).shift.bedpe > \\$(basename \"$bam\" .bam).macs.bedpe\n      \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "      \"\"\"\n      # Sort by read name\n      # fix read mates\n      # convert to BEDPE\n      # adjust Tn5 cut sites\n      # convert standard BEDPE to MACS-understandable BEDPE\n      samtools view -F 1804 -f 2 -u ${bam} | \\\n      samtools sort -O bam -n -T ${bam} -  | \\\n      samtools fixmate -r -O bam - -       | \\\n      samtools view -F 1804 -f 2 -u -      | \\\n      bedtools bamtobed -bedpe -i stdin > \\$(basename \"$bam\" .bam).std.bedpe\n      bedpeTn5shift.sh \\$(basename \"$bam\" .bam).std.bedpe > \\$(basename \"$bam\" .bam).shift.bedpe\n      bedpeMinimalConvert.sh \\$(basename \"$bam\" .bam).shift.bedpe > \\$(basename \"$bam\" .bam).macs.bedpe\n      \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "TRIMGALORE_SE": {
        "name_process": "TRIMGALORE_SE",
        "string_process": "\nprocess TRIMGALORE_SE {\n\n    tag { row.sample }\n    label 'trimgalore'\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq)\n\n    output:\n      tuple row, file(\"*_trimmed.fq.gz\"), emit: trimmedReads\n      tuple row, file(\"*trimming_report.txt\")\n      tuple row, file(\"*_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq } ${ row.sample }_R1.fq.gz\n      trim_galore --gzip    \\\n                  --phred33 \\\n                  --fastqc_args \"-q\" ${ row.sample }_R1.fq.gz\n      \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "      \"\"\"\n      [ ! -f  ${ row.sample }_R1.fq.gz ] && ln -s ${ fq } ${ row.sample }_R1.fq.gz\n      trim_galore --gzip    \\\n                  --phred33 \\\n                  --fastqc_args \"-q\" ${ row.sample }_R1.fq.gz\n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fq",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [
            "row",
            "row"
        ],
        "nb_outputs": 2,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "label 'trimgalore'",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "STAGE_FILE": {
        "name_process": "STAGE_FILE",
        "string_process": "\nprocess STAGE_FILE {\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(TO_STAGE_FILE)\n\n    output:\n      path \"${TO_STAGE_FILE}.staged\"\n\n    script:\n      \"\"\"\n      # a dummy process to copy a file to AWS batch\n      # to avoide multiple 'Staging foreign file...'\n      cp ${TO_STAGE_FILE} ${TO_STAGE_FILE}.staged\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      # a dummy process to copy a file to AWS batch\n      # to avoide multiple 'Staging foreign file...'\n      cp ${TO_STAGE_FILE} ${TO_STAGE_FILE}.staged\n      \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "TO_STAGE_FILE"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FASTQC_SE": {
        "name_process": "FASTQC_SE",
        "string_process": "\nprocess FASTQC_SE {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq)\n\n    output:\n      tuple val(\"$bySample\"), path(\"${ row.sample }_R1_trimmed_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      fastqc -q -t 8 ${ fq }\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      fastqc -q -t 8 ${ fq }\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fq",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "NUCLEOATAC": {
        "name_process": "NUCLEOATAC",
        "string_process": "\nprocess NUCLEOATAC {\n\n    tag { \"$bed\" }\n\n    label \"nucleoatac\"\n\n    publishDir \"${params.outdir}/${task.process}/${bed.simpleName}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bed), path(bam), path(bai)\n\n    output:\n      path \"*.{tbi,gz,eps,txt,VMat}\"\n\n    script:\n      \"\"\"\n      nucleoatac run \\\n          --bed \"$bed\" \\\n          --bam \"$bam\" \\\n          --fasta ${params.fasta} \\\n          --out \\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .pro.sub.deDups.bam) \\\n          --cores 4\n      \"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "      \"\"\"\n      nucleoatac run \\\n          --bed \"$bed\" \\\n          --bam \"$bam\" \\\n          --fasta ${params.fasta} \\\n          --out \\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .pro.sub.deDups.bam) \\\n          --cores 4\n      \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed",
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$bed\" }",
            "label \"nucleoatac\"",
            "publishDir \"${params.outdir}/${task.process}/${bed.simpleName}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "MACS2_BEDPE_GRP": {
        "name_process": "MACS2_BEDPE_GRP",
        "string_process": "\nprocess MACS2_BEDPE_GRP {\n\n    tag { group }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple group, row, path(bedpe), rep_size\n\n    output:\n      path '*.{bdg,broadPeak,gappedPeak,xls,narrowPeak,bed}'\n\n    script:\n      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t \"${bedpe[0]}\" \"${bedpe[1]}\" \"${bedpe[2]}\"   \\\n              -f BEDPE -n \"${group}\"_narrow                  \\\n              -g ${params.macsgenome} -q ${params.macsqval}  \\\n              -B --SPMR --keep-dup all --call-summits\n\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t \"${bedpe[0]}\" \"${bedpe[1]}\" \"${bedpe[2]}\"   \\\n              -f BEDPE -n \"${group}\"_broad                   \\\n              -g ${params.macsgenome}                        \\\n              -B --SPMR --keep-dup all                       \\\n              --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t \"${bedpe[0]}\" \"${bedpe[1]}\" \"${bedpe[2]}\"   \\\n              -f BEDPE -n \"${group}\"_narrow                  \\\n              -g ${params.macsgenome} -q ${params.macsqval}  \\\n              -B --SPMR --keep-dup all --call-summits\n\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t \"${bedpe[0]}\" \"${bedpe[1]}\" \"${bedpe[2]}\"   \\\n              -f BEDPE -n \"${group}\"_broad                   \\\n              -g ${params.macsgenome}                        \\\n              -B --SPMR --keep-dup all                       \\\n              --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bedpe",
            "group"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { group }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "MACS": {
        "name_process": "MACS",
        "string_process": "\nprocess MACS {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n\n    output:\n                                                                         \n                                                                        \n      path '*.{bdg,broadPeak,gappedPeak,xls,narrowPeak,bed}'\n\n    script:\n      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bam} -f BAMPE -n \\$(basename \"${bam}\" .bam) -g ${params.macsgenome} -q ${params.macsqval} \\\n              -B --SPMR --keep-dup all --call-summits\n\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bam} -f BAMPE -n \\$(basename \"${bam}\" .bam) -g ${params.macsgenome} \\\n              -B --SPMR --keep-dup all --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "      \"\"\"\n      # call narrowpeaks and summits\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bam} -f BAMPE -n \\$(basename \"${bam}\" .bam) -g ${params.macsgenome} -q ${params.macsqval} \\\n              -B --SPMR --keep-dup all --call-summits\n\n      # call broadpeaks\n      # output a read per million normalized bigwig file\n      macs2 callpeak \\\n              -t ${bam} -f BAMPE -n \\$(basename \"${bam}\" .bam) -g ${params.macsgenome} \\\n              -B --SPMR --keep-dup all --broad --broad-cutoff ${params.macsbcut}\n      \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FASTQC": {
        "name_process": "FASTQC",
        "string_process": "\nprocess FASTQC {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq1), path(fq2)\n\n    output:\n      tuple val(\"$bySample\"), path(\"*_fastqc.{zip,html}\")\n\n    script:\n      \"\"\"\n      fastqc -q -t 8 ${ fq1 }\n      fastqc -q -t 8 ${ fq2 }\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      fastqc -q -t 8 ${ fq1 }\n      fastqc -q -t 8 ${ fq2 }\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fq1",
            "fq2",
            "row"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "FEATURE_COUNTS": {
        "name_process": "FEATURE_COUNTS",
        "string_process": "\nprocess FEATURE_COUNTS {\n\n    label 'featureCounts'\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      path(saf)\n      path(bam)\n\n    output:\n      path \"*.countmatrix.txt\", emit: countmatrix\n      path \"*.summary\", emit:fc_summaries\n\n    script:\n      \"\"\"\n      featureCounts --read2pos 5 \\\n                    -a ${saf}    \\\n                    -F SAF       \\\n                    -p           \\\n                    -T 8         \\\n                    -o  \\$(basename ${saf} .saf).countmatrix.txt \\\n                    *.bam        \\\n                    2>> \\$(basename ${saf} .saf).log\n      \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "      \"\"\"\n      featureCounts --read2pos 5 \\\n                    -a ${saf}    \\\n                    -F SAF       \\\n                    -p           \\\n                    -T 8         \\\n                    -o  \\$(basename ${saf} .saf).countmatrix.txt \\\n                    *.bam        \\\n                    2>> \\$(basename ${saf} .saf).log\n      \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "saf",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'featureCounts'",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_PRO": {
        "name_process": "BAM_PRO",
        "string_process": "\nprocess BAM_PRO {\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bam), path(bai)\n      path(blacklist)\n\n    output:\n      tuple row, path(\"${row.sample}.pro.bam\"), path(\"${row.sample}.pro.bam.bai\"), emit: bami\n      tuple row, path(\"${row.sample}.pro.nbam\"), emit: nbam\n      tuple row, path(\"${row.sample}.pro.bam\"), emit: bamo\n      path \"${row.sample}.pro.bam\", emit: bam\n\n    script:\n      \"\"\"\n      # remove reads aligned to mitochondrial chromsome\n      # keep only properly-paired reads\n      # remove blacklisted regions\n      samtools view -h ${bam}                                          |\\\n        awk '(\\$3 != \"MT\" && \\$3 != \"chrM\")'                           |\\\n        samtools view -f 3 -hb - |\\\n        bedtools intersect -abam - -b merged_blacklists.bed -v > \\$(basename \"$bam\" .bam).pro.bam\n      # index bam file\n      samtools index \\$(basename \"$bam\" .bam).pro.bam\n      samtools sort -n \\$(basename \"$bam\" .bam).pro.bam -o \\$(basename \"$bam\" .bam).pro.nbam\n      \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "      \"\"\"\n      # remove reads aligned to mitochondrial chromsome\n      # keep only properly-paired reads\n      # remove blacklisted regions\n      samtools view -h ${bam}                                          |\\\n        awk '(\\$3 != \"MT\" && \\$3 != \"chrM\")'                           |\\\n        samtools view -f 3 -hb - |\\\n        bedtools intersect -abam - -b merged_blacklists.bed -v > \\$(basename \"$bam\" .bam).pro.bam\n      # index bam file\n      samtools index \\$(basename \"$bam\" .bam).pro.bam\n      samtools sort -n \\$(basename \"$bam\" .bam).pro.bam -o \\$(basename \"$bam\" .bam).pro.nbam\n      \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "row",
            "blacklist"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "RGT_HINT": {
        "name_process": "RGT_HINT",
        "string_process": "\nprocess RGT_HINT {\n\n    tag { \"$bed\" }\n\n    label \"rgt_hint\"\n\n    publishDir \"${params.outdir}/${task.process}/${bed.simpleName}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(bed), path(bam), path(bai)\n\n    output:\n      path \"*.{bed,info,bw}\"\n      path \"*.bed\", emit: bed\n\n    script:\n      \"\"\"\n      rgt-hint footprinting      \\\n                 --atac-seq      \\\n                 --paired-end    \\\n                 --organism=mm9  \\\n                 --output-prefix=\\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .bam) \\\n                 \"$bam\" \"$bed\"\n      rgt-hint tracks           \\\n                 --bc           \\\n                 --bigWig       \\\n                 --organism=mm9 \\\n                 \"$bam\" \"$bed\"  \\\n                 --output-prefix=\\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .bam)\n      \"\"\"\n\n}",
        "nb_lignes_process": 31,
        "string_script": "      \"\"\"\n      rgt-hint footprinting      \\\n                 --atac-seq      \\\n                 --paired-end    \\\n                 --organism=mm9  \\\n                 --output-prefix=\\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .bam) \\\n                 \"$bam\" \"$bed\"\n      rgt-hint tracks           \\\n                 --bc           \\\n                 --bigWig       \\\n                 --organism=mm9 \\\n                 \"$bam\" \"$bed\"  \\\n                 --output-prefix=\\$(basename \"$bed\" .slop.bed)_\\$(basename \"$bam\" .bam)\n      \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed",
            "bam",
            "bai",
            "row"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$bed\" }",
            "label \"rgt_hint\"",
            "publishDir \"${params.outdir}/${task.process}/${bed.simpleName}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "RGT_MOTIF": {
        "name_process": "RGT_MOTIF",
        "string_process": "\nprocess RGT_MOTIF {\n\n    tag { \"$key\" }\n\n    label \"rgt_hint\"\n\n    publishDir \"${params.outdir}/${task.process}/${key}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple key, path(bed1), path(bed2)\n\n    output:\n      tuple key, path(\"match\"), emit: match\n\n    script:\n      \"\"\"\n      rgt-motifanalysis matching --organism=mm9 --input-files \"$bed1\" \"$bed2\"\n      \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      rgt-motifanalysis matching --organism=mm9 --input-files \"$bed1\" \"$bed2\"\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed1",
            "bed2",
            "key"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "tag { \"$key\" }",
            "label \"rgt_hint\"",
            "publishDir \"${params.outdir}/${task.process}/${key}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "BOWTIE2_SE": {
        "name_process": "BOWTIE2_SE",
        "string_process": "\nprocess BOWTIE2_SE {\n\n    label 'bowtie2'\n\n    tag { row.sample }\n\n    publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'\n\n    input:\n      tuple row, path(fq)\n      path bt2_indices\n\n    output:\n      tuple row, path(\"${row.sample}.nbam\"), emit: nbam\n      path(\"${row.sample}.nbam\"), emit: nbam_path\n      tuple row, path(\"${row.sample}.bam\"), emit: bam\n      tuple row, path(\"${row.sample}.bam\"), path(\"${row.sample}.bam.bai\"), emit: bami\n      tuple row, path(\"${row.sample}.bowtie2.stats\"), emit: bowtie2_stats\n\n    script:\n      index_base = bt2_indices[0].toString() - ~/.rev.\\d.bt2?/ - ~/.\\d.bt2?/\n      \"\"\"\n      bowtie2 -x $index_base \\\n              -U ${fq} \\\n              -k 10 \\\n              -N 0  \\\n              -p 8  \\\n              --very-sensitive \\\n              --no-mixed \\\n              --no-discordant \\\n              --minins 30 \\\n              --maxins 2000 \\\n              2> ${ row.sample }.bowtie2.stats | \\\n        samtools view -F 4 -F 8 -u - | \\\n        samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "      index_base = bt2_indices[0].toString() - ~/.rev.\\d.bt2?/ - ~/.\\d.bt2?/\n      \"\"\"\n      bowtie2 -x $index_base \\\n              -U ${fq} \\\n              -k 10 \\\n              -N 0  \\\n              -p 8  \\\n              --very-sensitive \\\n              --no-mixed \\\n              --no-discordant \\\n              --minins 30 \\\n              --maxins 2000 \\\n              2> ${ row.sample }.bowtie2.stats | \\\n        samtools view -F 4 -F 8 -u - | \\\n        samtools sort -n -o ${ row.sample }.nbam\n      samtools sort ${ row.sample }.nbam -o ${ row.sample }.bam\n      samtools index ${ row.sample }.bam\n      \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fq",
            "row",
            "bt2_indices"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FirasSadiyah__NF-Workflow",
        "directive": [
            "label 'bowtie2'",
            "tag { row.sample }",
            "publishDir \"${params.outdir}/${task.process}\", pattern: \"\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    }
}