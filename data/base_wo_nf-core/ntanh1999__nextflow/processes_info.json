{
    "FASTQC_READS": {
        "name_process": "FASTQC_READS",
        "string_process": "\nprocess FASTQC_READS{\n    tag \"$sample_id\"\n    publishDir \"$params.result/$sample_id\", mode: 'copy'\n\n    input:\n        tuple val(sample_id), path(reads)\n    output:\n        path \"fastqc_${sample_id}\"\n    script:\n    \"\"\"\n    mkdir fastqc_${sample_id}\n    fastqc -t $task.cpus -o fastqc_${sample_id} $reads\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    mkdir fastqc_${sample_id}\n    fastqc -t $task.cpus -o fastqc_${sample_id} $reads\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "tag \"$sample_id\"",
            "publishDir \"$params.result/$sample_id\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MULTIQC_READS": {
        "name_process": "MULTIQC_READS",
        "string_process": "\nprocess MULTIQC_READS{\n    publishDir \"$params.result\", mode: 'copy'\n    \n    input:\n        path fastqc\n    \n    output:\n        path \"multiqc\"\n\n    script:\n    \"\"\"\n    multiqc -o multiqc $fastqc\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    multiqc -o multiqc $fastqc\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "publishDir \"$params.result\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "TRIM_PE_TRIMMOMATIC": {
        "name_process": "TRIM_PE_TRIMMOMATIC",
        "string_process": "\nprocess TRIM_PE_TRIMMOMATIC{\n    tag \"$sample_id\"\n    publishDir \"$params.result/$sample_id/trimmomatic\", mode: 'copy'\n\n    input:\n        tuple val(sample_id), path(reads)\n        path adapter\n    \n    output:\n        tuple \\\n            val(sample_id), \\\n            path(\"${sample_id}_R1.fastq.gz\"), \\\n            path(\"${sample_id}_R2.fastq.gz\")\n        \n        tuple \\\n            val(sample_id), \\\n            path(\"${sample_id}_S1.fastq.gz\"), \\\n            path(\"${sample_id}_S2.fastq.gz\")\n\n    script:\n    \"\"\"\n    trimmomatic PE -threads $task.cpus \\\n        $reads \\\n        ${sample_id}_R1.fastq.gz ${sample_id}_S1.fastq.gz \\\n        ${sample_id}_R2.fastq.gz ${sample_id}_S2.fastq.gz \\\n        ILLUMINACLIP:$adapter:2:30:10:2:true \\\n        SLIDINGWINDOW:4:15 LEADING:3 TRAILING:3 MINLEN:36\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    trimmomatic PE -threads $task.cpus \\\n        $reads \\\n        ${sample_id}_R1.fastq.gz ${sample_id}_S1.fastq.gz \\\n        ${sample_id}_R2.fastq.gz ${sample_id}_S2.fastq.gz \\\n        ILLUMINACLIP:$adapter:2:30:10:2:true \\\n        SLIDINGWINDOW:4:15 LEADING:3 TRAILING:3 MINLEN:36\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "Trimmomatic"
        ],
        "tools_url": [
            "https://bio.tools/trimmomatic"
        ],
        "tools_dico": [
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            }
        ],
        "inputs": [
            "sample_id",
            "reads",
            "adapter"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sample_id",
            "sample_id"
        ],
        "nb_outputs": 2,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "tag \"$sample_id\"",
            "publishDir \"$params.result/$sample_id/trimmomatic\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ASSEMBLE_SPADES": {
        "name_process": "ASSEMBLE_SPADES",
        "string_process": "\nprocess ASSEMBLE_SPADES{\n    tag \"$sample_id\"\n    publishDir \"$params.result/$sample_id\", mode: 'copy'\n\n    input:\n        tuple val(sample_id), path(read1), path(read2)\n    \n    output:\n        tuple val(sample_id), path(\"spades/${sample_id}.fasta\"), emit: spades_assembly\n        path 'spades'\n    \n    script:\n    \"\"\"\n    spades.py -t $task.cpus --careful -o spades -1 $read1 -2 $read2\n    mv spades/contigs.fasta spades/${sample_id}.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    spades.py -t $task.cpus --careful -o spades -1 $read1 -2 $read2\n    mv spades/contigs.fasta spades/${sample_id}.fasta\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "read1",
            "read2"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "tag \"$sample_id\"",
            "publishDir \"$params.result/$sample_id\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ASSEMBLY_EVAL": {
        "name_process": "ASSEMBLY_EVAL",
        "string_process": "\nprocess ASSEMBLY_EVAL{\n    tag \"$sample_id\"\n    publishDir \"$params.result/$sample_id\", mode: 'copy'\n\n    input:\n        tuple val(sample_id), path(assembly)\n\n    output:\n        path 'quast'\n\n    script:\n    \"\"\"\n    quast.py -t $task.cpus -o quast $assembly\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    quast.py -t $task.cpus -o quast $assembly\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "tag \"$sample_id\"",
            "publishDir \"$params.result/$sample_id\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ANNOTATE_PROKKA": {
        "name_process": "ANNOTATE_PROKKA",
        "string_process": "\nprocess ANNOTATE_PROKKA{\n    tag \"$sample_id\"\n    publishDir \"$params.result/$sample_id\", mode: 'copy'\n    input:\n        tuple val(sample_id), path(assembly)\n\n    output:\n        path \"prokka/${sample_id}.gff\", emit: gff\n        path 'prokka'\n    \n    script:\n    \"\"\"\n    prokka --force --cpus $task.cpus --addgenes --mincontiglen 200 \\\n    --prefix $sample_id --locus $sample_id --outdir prokka $assembly\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    prokka --force --cpus $task.cpus --addgenes --mincontiglen 200 \\\n    --prefix $sample_id --locus $sample_id --outdir prokka $assembly\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Prokka"
        ],
        "tools_url": [
            "https://bio.tools/prokka"
        ],
        "tools_dico": [
            {
                "name": "Prokka",
                "uri": "https://bio.tools/prokka",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0781",
                            "term": "Virology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "Coding region prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software tool to annotate bacterial, archaeal and viral genomes quickly and produce standards-compliant output files.",
                "homepage": "https://github.com/tseemann/prokka"
            }
        ],
        "inputs": [
            "sample_id",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "tag \"$sample_id\"",
            "publishDir \"$params.result/$sample_id\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "PANGENOME_ANALYSIS_ROARY": {
        "name_process": "PANGENOME_ANALYSIS_ROARY",
        "string_process": "\nprocess PANGENOME_ANALYSIS_ROARY{\n    publishDir \"$params.result\", mode: 'copy'\n    \n    input:\n        path gff\n    \n    output:\n        path \"roary\"\n\n    script:\n    \"\"\"\n    roary -v -z -p $task.cpus -f roary $gff\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    roary -v -z -p $task.cpus -f roary $gff\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Roary"
        ],
        "tools_url": [
            "https://bio.tools/roary"
        ],
        "tools_dico": [
            {
                "name": "Roary",
                "uri": "https://bio.tools/roary",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high speed stand alone pan genome pipeline, which takes annotated assemblies in GFF3 format (produced by Prokka (Seemann, 2014)) and calculates the pan genome.",
                "homepage": "http://sanger-pathogens.github.io/Roary/"
            }
        ],
        "inputs": [
            "gff"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ntanh1999__nextflow",
        "directive": [
            "publishDir \"$params.result\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}