{
    "Kraken2": {
        "name_process": "Kraken2",
        "string_process": "\nprocess Kraken2 {\n    tag \"${reads}\"\n    label 'process_high'\n\n    publishDir \"${params.outdir}/kraken2/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"alemenze/kraken2-docker\"\n\n    input:\n        tuple val(meta), path(reads)\n        path(db)\n        val(read_type)\n\n    output:\n        tuple val(meta), path(\"*kraken2.krona\"), emit: kraken2krona\n        tuple val(meta), path(\"*_kraken2.report\"), emit: krakenreport\n        path(\"*_bracken.tsv\")\n\n    script:\n        if (read_type=='single') {\n            input=\"$reads\"\n            read_len='250'\n        }\n        if (read_type=='paired') {\n            input=\"--gzip-compressed --paired $reads\"\n            read_len='150'\n        }\n        \"\"\"\n        kraken2 --threads ${task.cpus} -db $db --report ${meta}_kraken2.report $input > ${meta}_kraken2.output\n        cut -f 2,3 ${meta}_kraken2.output > ${meta}_kraken2.krona\n\n        bracken -d $db -r $read_len -i ${meta}_kraken2.report -l $params.kraken_tax_level -o ${meta}_bracken.tsv\n        \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "        if (read_type=='single') {\n            input=\"$reads\"\n            read_len='250'\n        }\n        if (read_type=='paired') {\n            input=\"--gzip-compressed --paired $reads\"\n            read_len='150'\n        }\n        \"\"\"\n        kraken2 --threads ${task.cpus} -db $db --report ${meta}_kraken2.report $input > ${meta}_kraken2.output\n        cut -f 2,3 ${meta}_kraken2.output > ${meta}_kraken2.krona\n\n        bracken -d $db -r $read_len -i ${meta}_kraken2.report -l $params.kraken_tax_level -o ${meta}_bracken.tsv\n        \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "kraken2",
            "Bracken"
        ],
        "tools_url": [
            "https://bio.tools/kraken2",
            "https://bio.tools/bracken"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            },
            {
                "name": "Bracken",
                "uri": "https://bio.tools/bracken",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Microbial ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Environmental microbiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Statistical method that computes the abundance of species in DNA sequences from a metagenomics sample.",
                "homepage": "https://ccb.jhu.edu/software/bracken/"
            }
        ],
        "inputs": [
            "meta",
            "reads",
            "db",
            "read_type"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "tag \"${reads}\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/kraken2/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"alemenze/kraken2-docker\""
        ],
        "when": "",
        "stub": ""
    },
    "Kraken2_db_build": {
        "name_process": "Kraken2_db_build",
        "string_process": "\nprocess Kraken2_db_build {\n\n    container \"alemenze/kraken2-docker\"\n\n    label 'process_low'\n\n    input:\n        path(kraken)\n        val(kraken_name)\n\n    output:\n        path(\"./${kraken_name}/\", type:'dir', emit: kraken2_ch)\n    \n    script:\n        \"\"\"\n        mkdir -p $kraken_name && tar -xvzf $kraken -C $kraken_name\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        mkdir -p $kraken_name && tar -xvzf $kraken -C $kraken_name\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "kraken",
            "kraken_name"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "container \"alemenze/kraken2-docker\"",
            "label 'process_low'"
        ],
        "when": "",
        "stub": ""
    },
    "Krona": {
        "name_process": "Krona",
        "string_process": "\nprocess Krona {\n\n    container \"alemenze/kraken2-docker\"\n\n    label 'process_medium'\n\n    publishDir \"${params.outdir}/kraken2_krona/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n    \n    input:\n        tuple val(meta), path(krona_in)\n    \n    output:\n        path(\"*_taxonomy_krona.html\")\n\n    script:\n        \"\"\"\n        ktImportTaxonomy -o ${meta}_kraken2_taxonomy_krona.html $krona_in\n        \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "        \"\"\"\n        ktImportTaxonomy -o ${meta}_kraken2_taxonomy_krona.html $krona_in\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "krona_in"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "container \"alemenze/kraken2-docker\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/kraken2_krona/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"${meta}\"\n    label 'process_low'\n\n    publishDir \"${params.outdir}/fastqc\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"biocontainers/fastqc:v0.11.9_cv8\"\n\n    input:\n        tuple val(meta), path(read1), path(read2)\n    \n    output:\n        tuple val(meta), path(\"*.zip\"), emit: zip\n        tuple val(meta), path(\"*.html\"), emit: html\n\n    script:\n        \"\"\"\n        fastqc -q $read1 $read2\n        \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "        \"\"\"\n        fastqc -q $read1 $read2\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "meta",
            "read1",
            "read2"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/fastqc\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"biocontainers/fastqc:v0.11.9_cv8\""
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    tag \"${meta}\"\n    label 'process_low'\n\n    publishDir \"${params.outdir}/multiqc\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"quay.io/biocontainers/multiqc:1.9--pyh9f0ad1d_0\"\n\n    input:\n        path ('fastqc/*')\n        path ('trimgalore/fastqc/*')\n        path ('trimgalore/*')\n        path ('kraken/*')\n    \n    output:\n        path \"*multiqc_report.html\", emit: report\n        path \"*_data\"              , emit: data\n\n    script:\n        \"\"\"\n        multiqc -f .\n        \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "        \"\"\"\n        multiqc -f .\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/multiqc\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"quay.io/biocontainers/multiqc:1.9--pyh9f0ad1d_0\""
        ],
        "when": "",
        "stub": ""
    },
    "trimgalore": {
        "name_process": "trimgalore",
        "string_process": "\nprocess trimgalore {\n    tag \"${meta}\"\n    label 'process_medium'\n\n    publishDir \"${params.outdir}/trimgalore/\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"quay.io/biocontainers/trim-galore:0.6.6--0\"\n\n    input:\n        tuple val(meta), path(read1), path(read2)\n\n    output:\n        tuple val(meta), path(\"*.fq.gz\"),       emit: reads\n        tuple val(meta), path(\"*report.txt\"),   emit: log\n        tuple val(meta), path(\"*.html\"),        emit: html \n        tuple val(meta), path(\"*.zip\") ,        emit: zip\n\n    script:\n        \"\"\"\n        trim_galore \\\\\n            --cores ${task.cpus} \\\\\n            --fastqc \\\\\n            --paired \\\\\n            --gzip \\\\\n            $read1 $read2\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        trim_galore \\\\\n            --cores ${task.cpus} \\\\\n            --fastqc \\\\\n            --paired \\\\\n            --gzip \\\\\n            $read1 $read2\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "read1",
            "read2"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__Illumina-ShotgunQuant",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/trimgalore/\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"quay.io/biocontainers/trim-galore:0.6.6--0\""
        ],
        "when": "",
        "stub": ""
    }
}