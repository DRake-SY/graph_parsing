{
    "QConRawReads": {
        "name_process": "QConRawReads",
        "string_process": "\nprocess QConRawReads {\n    tag  \"${read}\" \n    publishDir outputQC\n\n    input:\n    file(read) from reads_for_fastqc.flatten()\n\n    output:\n    file(\"*_fastqc.*\") into raw_fastqc_files\n\n    script:\n    \"\"\"\n    fastqc -t ${task.cpus} $read\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    fastqc -t ${task.cpus} $read\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "reads_for_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raw_fastqc_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "tag \"${read}\"",
            "publishDir outputQC"
        ],
        "when": "",
        "stub": ""
    },
    "getReadLength": {
        "name_process": "getReadLength",
        "string_process": "\nprocess getReadLength {\n    input:\n    file(single_read_pairs) from read_files_for_size.first()\n\n    output:\n    stdout into (read_length_for_index, read_length_for_profile)\n\n    script:\n    \"\"\"\n    \tif [ `echo ${single_read_pairs} | grep \"gz\"` ]; then cat=\"zcat\"; else cat=\"cat\"; fi\n    \t\\$cat ${single_read_pairs} | awk '{num++}{if (num%4==2){line++; sum+=length(\\$0)} if (line==100) {printf \"%.0f\", sum/100; exit} }'\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \tif [ `echo ${single_read_pairs} | grep \"gz\"` ]; then cat=\"zcat\"; else cat=\"cat\"; fi\n    \t\\$cat ${single_read_pairs} | awk '{num++}{if (num%4==2){line++; sum+=length(\\$0)} if (line==100) {printf \"%.0f\", sum/100; exit} }'\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_files_for_size"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "buildIndex": {
        "name_process": "buildIndex",
        "string_process": "\nprocess buildIndex {\n    publishDir \"${params.indexfolder}\"\n    label 'big_comp'\n    errorStrategy 'retry'\n    maxRetries 1\n    tag { \"${genome_file} with ${annotation_file}\" }\n    \n    input:\n    file(genome_file)\n    file annotation_file\n                                                        \n    val read_size from read_length_for_index.map { it.trim().toInteger() }\n\n    output:\n    path \"*\", type: 'dir' into STARgenomeIndex, STARgenomeIndexForCoverage\n\n    script:\n    def genome_id = genome_file.simpleName\n    def over = read_size-1\n    \"\"\"\n    mkdir ${genome_id}\n    if [ `echo ${genome_file} | grep \".gz\"` ]; then \n        zcat ${genome_file} > `basename ${genome_file} .gz` \n        STAR --runMode genomeGenerate --genomeDir ${genome_id} --runThreadN ${task.cpus} \\\n        --genomeFastaFiles `basename ${genome_file} .gz` --sjdbOverhang ${over} --sjdbGTFfile ${annotation_file} \\\n        --outFileNamePrefix `basename ${genome_file} .gz` \n        rm `basename ${genome_file} .gz`\n    else \n        STAR --runMode genomeGenerate --genomeDir ${genome_id} --runThreadN ${task.cpus} \\\n        --genomeFastaFiles ${genome_file} --sjdbOverhang ${over} --sjdbGTFfile ${annotation_file} \\\n        --outFileNamePrefix ${genome_file} \n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    def genome_id = genome_file.simpleName\n    def over = read_size-1\n    \"\"\"\n    mkdir ${genome_id}\n    if [ `echo ${genome_file} | grep \".gz\"` ]; then \n        zcat ${genome_file} > `basename ${genome_file} .gz` \n        STAR --runMode genomeGenerate --genomeDir ${genome_id} --runThreadN ${task.cpus} \\\n        --genomeFastaFiles `basename ${genome_file} .gz` --sjdbOverhang ${over} --sjdbGTFfile ${annotation_file} \\\n        --outFileNamePrefix `basename ${genome_file} .gz` \n        rm `basename ${genome_file} .gz`\n    else \n        STAR --runMode genomeGenerate --genomeDir ${genome_id} --runThreadN ${task.cpus} \\\n        --genomeFastaFiles ${genome_file} --sjdbOverhang ${over} --sjdbGTFfile ${annotation_file} \\\n        --outFileNamePrefix ${genome_file} \n    fi\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome_file",
            "annotation_file",
            "read_length_for_index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "STARgenomeIndex",
            "STARgenomeIndexForCoverage"
        ],
        "nb_outputs": 2,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "publishDir \"${params.indexfolder}\"",
            "label 'big_comp'",
            "errorStrategy 'retry'",
            "maxRetries 1",
            "tag { \"${genome_file} with ${annotation_file}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "mapping": {
        "name_process": "mapping",
        "string_process": "\nprocess mapping {\n    tag { \"${pair_id}\" }\n    label 'big_comp'\n    \tpublishDir outputCounts, pattern: \"${pair_id}/${pair_id}ReadsPerGene.out.tab\",  mode: 'copy'\n    \tpublishDir outputMapping, pattern: \"${pair_id}/*.out.bam*\",  mode: 'copy'\n    \t                                \"STAR_${pair_id}/*Log.final.out\"              \n\n        input:\n        set pair_id, file(reads) from reads_for_mapping\n        file(STARgenome) from STARgenomeIndex\n        file(variants_file)\n        \n        output:\n        set pair_id, file(\"${pair_id}/${pair_id}ReadsPerGene.out.tab\") into STAR_counts\n        set pair_id, file(\"${pair_id}/*.out.bam\") into STARmappedBam_for_filtering\n        file(\"${pair_id}/*.out.bam.bai\")\n        file(\"${pair_id}\") into Aln_folders_for_multiqc\n\n        script:\n        def output = \"${pair_id}\"\n        def variants = unzipBash(\"${variants_file}\") \n        \"\"\"\n        if [ `echo \"${reads}\"| cut -f 1 -d \" \" | grep \".gz\"` ]; then gzipped=\" --readFilesCommand zcat \"; else gzipped=\"\"; fi\n            STAR --genomeDir ${STARgenome} \\\n                 --readFilesIn ${reads} \\\n                  \\$gzipped \\\n                  --waspOutputMode SAMtag \\\n                  --outSAMunmapped Within \\\n                  --outSAMtype BAM SortedByCoordinate \\\n                  --runThreadN ${task.cpus} \\\n                  --outFileNamePrefix ${pair_id} \\\n                  --quantMode GeneCounts \\\n                  --outSAMattributes NH HI AS nM NM MD jM jI XS MC ch vA vW vG \\\n                  --varVCFfile ${variants};\n                  mkdir ${output}\n                  mv *.out.tab ${output}/\n                  mv *Aligned* ${output}/\n                  mv *Log* ${output}/\n \n        \tsamtools index ${pair_id}/*.out.bam\n        \"\"\"\n        \n}",
        "nb_lignes_process": 42,
        "string_script": "        def output = \"${pair_id}\"\n        def variants = unzipBash(\"${variants_file}\") \n        \"\"\"\n        if [ `echo \"${reads}\"| cut -f 1 -d \" \" | grep \".gz\"` ]; then gzipped=\" --readFilesCommand zcat \"; else gzipped=\"\"; fi\n            STAR --genomeDir ${STARgenome} \\\n                 --readFilesIn ${reads} \\\n                  \\$gzipped \\\n                  --waspOutputMode SAMtag \\\n                  --outSAMunmapped Within \\\n                  --outSAMtype BAM SortedByCoordinate \\\n                  --runThreadN ${task.cpus} \\\n                  --outFileNamePrefix ${pair_id} \\\n                  --quantMode GeneCounts \\\n                  --outSAMattributes NH HI AS nM NM MD jM jI XS MC ch vA vW vG \\\n                  --varVCFfile ${variants};\n                  mkdir ${output}\n                  mv *.out.tab ${output}/\n                  mv *Aligned* ${output}/\n                  mv *Log* ${output}/\n \n        \tsamtools index ${pair_id}/*.out.bam\n        \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "STAR",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/star",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "reads_for_mapping",
            "STARgenomeIndex",
            "variants_file"
        ],
        "nb_inputs": 3,
        "outputs": [
            "STAR_counts",
            "STARmappedBam_for_filtering",
            "Aln_folders_for_multiqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "tag { \"${pair_id}\" }",
            "label 'big_comp'",
            "publishDir outputCounts, pattern: \"${pair_id}/${pair_id}ReadsPerGene.out.tab\", mode: 'copy'",
            "publishDir outputMapping, pattern: \"${pair_id}/*.out.bam*\", mode: 'copy' \"STAR_${pair_id}/*Log.final.out\""
        ],
        "when": "",
        "stub": ""
    },
    "tool_report": {
        "name_process": "tool_report",
        "string_process": "\nprocess tool_report {\n\n        input:\n        file(tooldb)\n\n        output:\n        file(\"tools_mqc.txt\") into tool_report_for_multiQC\n\n        script:\n        \"\"\"\n        make_tool_desc_for_multiqc.pl -l fastqc,star,samtools,htseq > tools_mqc.txt\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        make_tool_desc_for_multiqc.pl -l fastqc,star,samtools,htseq > tools_mqc.txt\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tooldb"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tool_report_for_multiQC"
        ],
        "nb_outputs": 1,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "filterBam": {
        "name_process": "filterBam",
        "string_process": "\nprocess filterBam {\n    publishDir outputvMapping, mode: 'copy'\n    tag \"${pair_id}\"\n    label 'big_comp'\n\n    input:\n    set pair_id, file(bamfile) from STARmappedBam_for_filtering\n\n    output:\n    set pair_id, file(\"${pair_id}_*_s.bam\") into allele_bams\n    set pair_id, file(\"${pair_id}_*_s.bam.bai\") \n    \n    script:\n    \"\"\"\n\tsplitBamPerAlleles.py -i ${bamfile} -o ${pair_id} -m ${params.varcut}\n\tfor i in ${pair_id}_*.bam; do samtools sort \\$i -o `basename \\$i .bam`_s.bam; samtools index `basename \\$i .bam`_s.bam; done\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n\tsplitBamPerAlleles.py -i ${bamfile} -o ${pair_id} -m ${params.varcut}\n\tfor i in ${pair_id}_*.bam; do samtools sort \\$i -o `basename \\$i .bam`_s.bam; samtools index `basename \\$i .bam`_s.bam; done\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "STARmappedBam_for_filtering"
        ],
        "nb_inputs": 1,
        "outputs": [
            "allele_bams",
            "pair_id"
        ],
        "nb_outputs": 2,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "publishDir outputvMapping, mode: 'copy'",
            "tag \"${pair_id}\"",
            "label 'big_comp'"
        ],
        "when": "",
        "stub": ""
    },
    "countTags": {
        "name_process": "countTags",
        "string_process": "\nprocess countTags {\n\t\n\tpublishDir outputsCounts, mode: 'copy'\n    tag \"${bamfile}\"\n\n\tinput:\n\tfile(annotation_file)\n\tset pair_id, file(bamfile) from allele_bams.transpose()\n\n\toutput:\n\tset pair_id, file(\"*.counts\") into tag_counts_for_grouping       \n       \n\tscript:\n\tdef strandness = \"\"\n    if (params.strandness==\"unstranded\") {\n    \tstrandness = \"no\"\n    } else if (params.strandness==\"forward\") {\n        strandness = \"yes\"\n    } else if (params.strandness==\"reverse\") {\n         strandness = \"reverse\"\n    }\n\n    \"\"\"\n    htseq-count -s ${strandness} -f bam ${bamfile} ${annotation_file} > `basename ${bamfile} .bam`.counts\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\tdef strandness = \"\"\n    if (params.strandness==\"unstranded\") {\n    \tstrandness = \"no\"\n    } else if (params.strandness==\"forward\") {\n        strandness = \"yes\"\n    } else if (params.strandness==\"reverse\") {\n         strandness = \"reverse\"\n    }\n\n    \"\"\"\n    htseq-count -s ${strandness} -f bam ${bamfile} ${annotation_file} > `basename ${bamfile} .bam`.counts\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "htseqcount"
        ],
        "tools_url": [
            "https://bio.tools/htseqcount"
        ],
        "tools_dico": [
            {
                "name": "htseqcount",
                "uri": "https://bio.tools/htseqcount",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "This script takes an alignment file in SAM format and a feature file in GFF format and calculates for each feature the number of reads mapping to it.",
                "homepage": "https://htseq.readthedocs.io/en/release_0.9.1/"
            }
        ],
        "inputs": [
            "annotation_file",
            "allele_bams"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tag_counts_for_grouping"
        ],
        "nb_outputs": 1,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "publishDir outputsCounts, mode: 'copy'",
            "tag \"${bamfile}\""
        ],
        "when": "",
        "stub": ""
    },
    "groupCounts": {
        "name_process": "groupCounts",
        "string_process": "\nprocess groupCounts {\n\t\n\tpublishDir outputmCounts, mode: 'copy', pattern: \"*_group.counts\"\n    tag \"${pair_id}\"\n\n\tinput:\n\tfile(annotation_file)\n\tset pair_id, file(\"*\") from tag_counts_for_grouping.groupTuple()\n\n\toutput:\n\tset pair_id, file(\"*_group.counts\") into count_group_for_proportion\n\tfile(\"*_group.stats\") into counts_stats_for_report\n       \n\n    script:\n    \"\"\"\n\tjoin_counts.sh ${pair_id}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n\tjoin_counts.sh ${pair_id}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotation_file",
            "tag_counts_for_grouping"
        ],
        "nb_inputs": 2,
        "outputs": [
            "count_group_for_proportion",
            "counts_stats_for_report"
        ],
        "nb_outputs": 2,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "publishDir outputmCounts, mode: 'copy', pattern: \"*_group.counts\"",
            "tag \"${pair_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "makePropoportions": {
        "name_process": "makePropoportions",
        "string_process": "\nprocess makePropoportions {\n\ttag \"${pair_id}\"\n\tpublishDir outputProp, mode: 'copy'\n\n\tinput:\n\tset pair_id, file(group_count), file(read_count) from count_group_for_proportion.join(STAR_counts)\n\tfile(annotation_file)\n       \n\toutput:\n\tfile(\"${pair_id}_composite.txt\")\n\n    script:\n\tdef strandness = \"\"\n    if (params.strandness==\"unstranded\") {\n    \tstrandness = \"u\"\n    } else if (params.strandness==\"forward\") {\n        strandness = \"f\"\n    } else if (params.strandness==\"reverse\") {\n         strandness = \"r\"\n    }\n    \"\"\"\n\tcalc_prop.py -a ${group_count} -c ${read_count} -g ${annotation_file} -s \"${strandness}\" -o ${pair_id}_composite.txt\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\tdef strandness = \"\"\n    if (params.strandness==\"unstranded\") {\n    \tstrandness = \"u\"\n    } else if (params.strandness==\"forward\") {\n        strandness = \"f\"\n    } else if (params.strandness==\"reverse\") {\n         strandness = \"r\"\n    }\n    \"\"\"\n\tcalc_prop.py -a ${group_count} -c ${read_count} -g ${annotation_file} -s \"${strandness}\" -o ${pair_id}_composite.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "count_group_for_proportion",
            "STAR_counts",
            "annotation_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "tag \"${pair_id}\"",
            "publishDir outputProp, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiQC_report": {
        "name_process": "multiQC_report",
        "string_process": "\nprocess multiQC_report {\n    publishDir outputMultiQC,  mode: 'copy'\n\n    input:\n    file (multiconfig)\n    file 'tools_mqc.txt' from tool_report_for_multiQC\n    file '*' from Aln_folders_for_multiqc.mix(raw_fastqc_files, counts_stats_for_report).flatten().collect()\n    \n    output:\n    file(\"multiqc_report.html\") into multiQC \n\n    script:\n    \"\"\"\n    export LC_ALL=en_US.utf8\n    export LANG=en_US.utf8\n    make_conf_multiqc.sh \\'${params.title}\\' \\'${params.subtitle}\\' \\'${params.PI}\\' \\'${params.User}\\' \\'${params.email}\\' \\'${UCSCgenomeID}\\' ${multiconfig} \n    \n    cat > counts_mqc.txt << EOL\n# id: read_counts\n# plot_type: 'bargraph'\n# section_name: 'Read counts on alleles'\nSample\tGenotype A\tGenotype B\tReference\tAmbiguous\nEOL\n    grep -h -v \"#\" *.stats >> counts_mqc.txt\n    multiqc -c config.yaml .\n    \"\"\"\n\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    export LC_ALL=en_US.utf8\n    export LANG=en_US.utf8\n    make_conf_multiqc.sh \\'${params.title}\\' \\'${params.subtitle}\\' \\'${params.PI}\\' \\'${params.User}\\' \\'${params.email}\\' \\'${UCSCgenomeID}\\' ${multiconfig} \n    \n    cat > counts_mqc.txt << EOL\n# id: read_counts\n# plot_type: 'bargraph'\n# section_name: 'Read counts on alleles'\nSample\tGenotype A\tGenotype B\tReference\tAmbiguous\nEOL\n    grep -h -v \"#\" *.stats >> counts_mqc.txt\n    multiqc -c config.yaml .\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Aureolib",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/aureolib",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "Aureolib",
                "uri": "https://bio.tools/aureolib",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Proteomic signature library of Staphylococcus aureus Pathophysiology for inter-experimental expression data analyses.",
                "homepage": "http://www.aureolib.de/index.php"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiconfig",
            "tool_report_for_multiQC",
            "Aln_folders_for_multiqc",
            "raw_fastqc_files",
            "counts_stats_for_report"
        ],
        "nb_inputs": 5,
        "outputs": [
            "multiQC"
        ],
        "nb_outputs": 1,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "publishDir outputMultiQC, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "parseVCF": {
        "name_process": "parseVCF",
        "string_process": "\nprocess parseVCF {\n    tag { variants_file }\n    publishDir \"filteredVCF\",  mode: 'copy'\n\n    input:\n    file(genome_file)\n    file(variants_file)\n    \n    output:\n    file(\"*.gz\") \n\n    script:\n    \"\"\"\n    if [ `echo ${genome_file} | grep \".gz\"` ]; then\n       zcat  ${genome_file} > `basename ${genome_file} .gz`\n       parseVCF.py -i ${variants_file} -o ${params.outvcf} -1 ${params.speciesA} -2 ${params.speciesB} -g `basename ${genome_file} .gz`\n    rm `basename ${genome_file} .gz`\n    else   \n       parseVCF.py -i ${variants_file} -o ${params.outvcf} -1 ${params.speciesA} -2 ${params.speciesB} -g ${genome_file}\n    fi\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    if [ `echo ${genome_file} | grep \".gz\"` ]; then\n       zcat  ${genome_file} > `basename ${genome_file} .gz`\n       parseVCF.py -i ${variants_file} -o ${params.outvcf} -1 ${params.speciesA} -2 ${params.speciesB} -g `basename ${genome_file} .gz`\n    rm `basename ${genome_file} .gz`\n    else   \n       parseVCF.py -i ${variants_file} -o ${params.outvcf} -1 ${params.speciesA} -2 ${params.speciesB} -g ${genome_file}\n    fi\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome_file",
            "variants_file"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "biocorecrg__allele_specific_RNAseq",
        "directive": [
            "tag { variants_file }",
            "publishDir \"filteredVCF\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}