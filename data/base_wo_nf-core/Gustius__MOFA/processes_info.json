{
    "mofa": {
        "name_process": "mofa",
        "string_process": "\nprocess mofa {\n\n  output:\n  stdout mofa\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n  rm(list=ls())\n  library(MOFAtools)\n  library(magrittr)\n\n  GEdata <- read.csv(\"NormCountsElisabeth_OT2AVG.csv\", row.names=1, comment.char=\"\" , colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n  MetabData <- read.csv(\"Metabolomics_transposed.csv\", row.names=1, comment.char=\"\" , colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n  ProteomicsData <- read.csv(\"Proteomics_massaged_reordered.csv\", row.names=1, comment.char=\"\", colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n\n  MATS <- list (GEdata, MetabData, ProteomicsData)\n  names(MATS) <- c(\"GEdata\", \"MetabData\", \"ProteomicsData\")\n\n  #filtering out features without variance\n  for (i in names(MATS)) {\n    MATS[[i]] <- MATS[[i]][0<apply(MATS[[i]], 1, var),]\n  }\n\n  MATS2 <- list(GEdata=MATS\\$GEdata %>% as.matrix, MetabData=MATS\\$MetabData %>% as.matrix, ProteomicsData=MATS\\$ProteomicsData %>% as.matrix)\n  \n  str(MATS2)\n\n  MOFAobject <- createMOFAobject(MATS2)\n  MOFAobject\n\n  pdf(\"TilesData.pdf\")\n  plotTilesData(MOFAobject)\n  dev.off()\n\n  DataOptions <- getDefaultDataOptions()\n  \n  ModelOptions <- getDefaultModelOptions(MOFAobject)\n  \n\n  TrainOptions <- getDefaultTrainOptions()\n  TrainOptions\\$maxiter <- 5\n\n  MOFAobject <- prepareMOFA(\n      MOFAobject, \n      DataOptions = DataOptions,\n      ModelOptions = ModelOptions,\n      TrainOptions = TrainOptions\n      )\n\n    MOFAobject <- runMOFA(MOFAobject)\n    \n    MOFAobject\n    r2 <- calculateVarianceExplained(MOFAobject)\n  r2\n  \n  pdf(\"model.pdf\")\n  plotWeightsHeatmap(MOFAobject, \"GEdata\", factors=1:5, show_colnames=F)\n  plotWeightsHeatmap(MOFAobject, \"ProteomicsData\", factors=1:5, show_colnames=F)\n  plotWeightsHeatmap(MOFAobject, \"MetabData\", factors=1:5, show_colnames=F)\n  plotWeights(MOFAobject, view = \"MetabData\", factor = 1)\n  plotWeights(MOFAobject, view = \"GEdata\", factor = 1)\n  plotWeights(MOFAobject, view = \"ProteomicsData\", factor = 1)\n  plotTopWeights(MOFAobject, \"ProteomicsData\", 1)\n  plotTopWeights(MOFAobject, \"GEdata\", 1)\n  plotTopWeights(MOFAobject, \"MetabData\", 1)\n  dev.off()\n  \"\"\"\n}",
        "nb_lignes_process": 68,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n  rm(list=ls())\n  library(MOFAtools)\n  library(magrittr)\n\n  GEdata <- read.csv(\"NormCountsElisabeth_OT2AVG.csv\", row.names=1, comment.char=\"\" , colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n  MetabData <- read.csv(\"Metabolomics_transposed.csv\", row.names=1, comment.char=\"\" , colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n  ProteomicsData <- read.csv(\"Proteomics_massaged_reordered.csv\", row.names=1, comment.char=\"\", colClasses=c(\"character\",rep(\"numeric\",9)), strip.white=FALSE)\n\n  MATS <- list (GEdata, MetabData, ProteomicsData)\n  names(MATS) <- c(\"GEdata\", \"MetabData\", \"ProteomicsData\")\n\n  #filtering out features without variance\n  for (i in names(MATS)) {\n    MATS[[i]] <- MATS[[i]][0<apply(MATS[[i]], 1, var),]\n  }\n\n  MATS2 <- list(GEdata=MATS\\$GEdata %>% as.matrix, MetabData=MATS\\$MetabData %>% as.matrix, ProteomicsData=MATS\\$ProteomicsData %>% as.matrix)\n  \n  str(MATS2)\n\n  MOFAobject <- createMOFAobject(MATS2)\n  MOFAobject\n\n  pdf(\"TilesData.pdf\")\n  plotTilesData(MOFAobject)\n  dev.off()\n\n  DataOptions <- getDefaultDataOptions()\n  \n  ModelOptions <- getDefaultModelOptions(MOFAobject)\n  \n\n  TrainOptions <- getDefaultTrainOptions()\n  TrainOptions\\$maxiter <- 5\n\n  MOFAobject <- prepareMOFA(\n      MOFAobject, \n      DataOptions = DataOptions,\n      ModelOptions = ModelOptions,\n      TrainOptions = TrainOptions\n      )\n\n    MOFAobject <- runMOFA(MOFAobject)\n    \n    MOFAobject\n    r2 <- calculateVarianceExplained(MOFAobject)\n  r2\n  \n  pdf(\"model.pdf\")\n  plotWeightsHeatmap(MOFAobject, \"GEdata\", factors=1:5, show_colnames=F)\n  plotWeightsHeatmap(MOFAobject, \"ProteomicsData\", factors=1:5, show_colnames=F)\n  plotWeightsHeatmap(MOFAobject, \"MetabData\", factors=1:5, show_colnames=F)\n  plotWeights(MOFAobject, view = \"MetabData\", factor = 1)\n  plotWeights(MOFAobject, view = \"GEdata\", factor = 1)\n  plotWeights(MOFAobject, view = \"ProteomicsData\", factor = 1)\n  plotTopWeights(MOFAobject, \"ProteomicsData\", 1)\n  plotTopWeights(MOFAobject, \"GEdata\", 1)\n  plotTopWeights(MOFAobject, \"MetabData\", 1)\n  dev.off()\n  \"\"\"",
        "nb_lignes_script": 62,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "mofa"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gustius__MOFA",
        "directive": [],
        "when": "",
        "stub": ""
    }
}