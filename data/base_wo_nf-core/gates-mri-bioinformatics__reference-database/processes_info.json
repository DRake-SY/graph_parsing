{
    "rsem_prepare_reference": {
        "name_process": "rsem_prepare_reference",
        "string_process": "\nprocess rsem_prepare_reference {\n    publishDir \"${params.genomes_directory}/rsem-reference\",\n        mode: \"move\", overwrite: true\n\n    input:\n    path(fasta)\n    path(gtf)\n\n    output:\n    path(\"reference.chrlist\")\n    path(\"reference.grp\")\n    path(\"reference.idx.fa\")\n    path(\"reference.n2g.idx.fa\")\n    path(\"reference.seq\")\n    path(\"reference.ti\")\n    path(\"reference.transcripts.fa\")\n\n    \"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    rsem-prepare-reference \\\n    --gtf reference.gtf \\\n    reference.fa reference\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    rsem-prepare-reference \\\n    --gtf reference.gtf \\\n    reference.fa reference\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta",
            "gtf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/rsem-reference\" , mode: \"move\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "rsem_prepare_reference_with_star": {
        "name_process": "rsem_prepare_reference_with_star",
        "string_process": "\nprocess rsem_prepare_reference_with_star {\n    cpus Runtime.runtime.availableProcessors()\n\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.chrlist\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.grp\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.idx.fa\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.n2g.idx.fa\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.seq\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.ti\"\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        mode: \"copy\", overwrite: true, \\\n        pattern: \"reference.transcripts.fa\"\n        publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"Genome\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"Log.out\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"SA\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"SAindex\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"chrLength.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"chrName.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"chrNameLength.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"chrStart.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"exonGeTrInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"exonInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"geneInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"genomeParameters.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"sjdbInfo.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"sjdbList.fromGTF.out.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"sjdbList.out.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", \\\n        pattern: \"transcriptInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(fasta)\n    path(gtf)\n    val(overhang)\n\n    output:\n    path(\"reference.chrlist\")\n    path(\"reference.grp\")\n    path(\"reference.idx.fa\")\n    path(\"reference.n2g.idx.fa\")\n    path(\"reference.seq\")\n    path(\"reference.ti\")\n    path(\"reference.transcripts.fa\")\n    path(\"Genome\")\n    path(\"Log.out\")\n    path(\"SA\")\n    path(\"SAindex\")\n    path(\"chrLength.txt\")\n    path(\"chrName.txt\")\n    path(\"chrNameLength.txt\")\n    path(\"chrStart.txt\")\n    path(\"exonGeTrInfo.tab\")\n    path(\"exonInfo.tab\")\n    path(\"geneInfo.tab\")\n    path(\"genomeParameters.txt\")\n    path(\"sjdbInfo.txt\")\n    path(\"sjdbList.fromGTF.out.tab\")\n    path(\"sjdbList.out.tab\")\n    path(\"transcriptInfo.tab\")\n\n    \"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    rsem-prepare-reference \\\n        --gtf reference.gtf \\\n        --star -p ${task.cpus} \\\n        --star-sjdboverhang ${overhang} \\\n        reference.fa reference\n    \"\"\"\n}",
        "nb_lignes_process": 112,
        "string_script": "\"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    rsem-prepare-reference \\\n        --gtf reference.gtf \\\n        --star -p ${task.cpus} \\\n        --star-sjdboverhang ${overhang} \\\n        reference.fa reference\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta",
            "gtf",
            "overhang"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "cpus Runtime.runtime.availableProcessors()",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.chrlist\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.grp\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.idx.fa\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.n2g.idx.fa\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.seq\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.ti\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", mode: \"copy\", overwrite: true, pattern: \"reference.transcripts.fa\"",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"Genome\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"Log.out\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"SA\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"SAindex\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"chrLength.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"chrName.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"chrNameLength.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"chrStart.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"exonGeTrInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"exonInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"geneInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"genomeParameters.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"sjdbInfo.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"sjdbList.fromGTF.out.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"sjdbList.out.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/rsem-with-star-overhang-${overhang}\", pattern: \"transcriptInfo.tab\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "generate_star_index": {
        "name_process": "generate_star_index",
        "string_process": "\nprocess generate_star_index {\n    cpus Runtime.runtime.availableProcessors()\n\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"Genome\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"Log.out\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"SA\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"SAindex\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"chrLength.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"chrName.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"chrNameLength.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"chrStart.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"exonGeTrInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"exonInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"geneInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"genomeParameters.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"sjdbInfo.txt\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"sjdbList.fromGTF.out.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"sjdbList.out.tab\", \\\n        mode: \"copy\", overwrite: true\n    publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", \\\n        pattern: \"transcriptInfo.tab\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(fasta)\n    path(gtf)\n    val(overhang)\n\n    output:\n    path(\"Genome\")\n    path(\"Log.out\")\n    path(\"SA\")\n    path(\"SAindex\")\n    path(\"chrLength.txt\")\n    path(\"chrName.txt\")\n    path(\"chrNameLength.txt\")\n    path(\"chrStart.txt\")\n    path(\"exonGeTrInfo.tab\")\n    path(\"exonInfo.tab\")\n    path(\"geneInfo.tab\")\n    path(\"genomeParameters.txt\")\n    path(\"sjdbInfo.txt\")\n    path(\"sjdbList.fromGTF.out.tab\")\n    path(\"sjdbList.out.tab\")\n    path(\"transcriptInfo.tab\")\n\n    \"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    STAR \\\n    --runThreadN ${task.cpus} \\\n    --runMode genomeGenerate \\\n    --genomeDir . \\\n    --genomeFastaFiles reference.fa \\\n    --sjdbGTFfile reference.gtf \\\n    --sjdbOverhang ${overhang} \\\n    --genomeSAindexNbases ${params.star_genomeSAindexNbases} \\\n    --limitGenomeGenerateRAM 200000000000\n    \"\"\"\n}",
        "nb_lignes_process": 88,
        "string_script": "\"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    STAR \\\n    --runThreadN ${task.cpus} \\\n    --runMode genomeGenerate \\\n    --genomeDir . \\\n    --genomeFastaFiles reference.fa \\\n    --sjdbGTFfile reference.gtf \\\n    --sjdbOverhang ${overhang} \\\n    --genomeSAindexNbases ${params.star_genomeSAindexNbases} \\\n    --limitGenomeGenerateRAM 200000000000\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "fasta",
            "gtf",
            "overhang"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "cpus Runtime.runtime.availableProcessors()",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"Genome\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"Log.out\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"SA\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"SAindex\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"chrLength.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"chrName.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"chrNameLength.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"chrStart.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"exonGeTrInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"exonInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"geneInfo.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"genomeParameters.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"sjdbInfo.txt\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"sjdbList.fromGTF.out.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"sjdbList.out.tab\", mode: \"copy\", overwrite: true",
            "publishDir \"${genomes_directory}/index/star-overhang-${overhang}\", pattern: \"transcriptInfo.tab\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "get_reference_fasta": {
        "name_process": "get_reference_fasta",
        "string_process": "\nprocess get_reference_fasta {\n    publishDir \"${params.genomes_directory}/fasta\", \\\n        pattern: \"reference.fa.gz.url\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    val(fasta_url)\n\n    output:\n    path(\"reference.fa\")\n    path(\"reference.fa.gz.url\")\n\n    \"\"\"\n    wget -qO- ${fasta_url} | \\\n    gunzip -c > reference.fa\n    \n    printf \"${fasta_url}\\n\" > reference.fa.gz.url\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    wget -qO- ${fasta_url} | \\\n    gunzip -c > reference.fa\n    \n    printf \"${fasta_url}\\n\" > reference.fa.gz.url\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_url"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/fasta\", pattern: \"reference.fa.gz.url\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_primary_assembly": {
        "name_process": "extract_primary_assembly",
        "string_process": "\nprocess extract_primary_assembly {\n    input:\n    path(fasta)\n\n    output:\n    path(\"primary.fa\")\n\n    \"\"\"\n    awk '\n        BEGIN { p=0; }\n        \\$0 ~ /^>/ { if(\\$0 ~ /Primary Assembly/) p=1; else p=0; }\n        { if(p) print \\$0 }' ${fasta} > primary.fa\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    awk '\n        BEGIN { p=0; }\n        \\$0 ~ /^>/ { if(\\$0 ~ /Primary Assembly/) p=1; else p=0; }\n        { if(p) print \\$0 }' ${fasta} > primary.fa\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "normalize_fasta": {
        "name_process": "normalize_fasta",
        "string_process": "\nprocess normalize_fasta {\n    publishDir \"${params.genomes_directory}/fasta\", \\\n        pattern: \"reference.fa.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(fasta)\n\n    output:\n    path(\"normalized.fa\")\n    path(\"reference.fa.gz\")\n\n    \"\"\"\n    picard NormalizeFasta \\\n    --INPUT ${fasta} \\\n    --OUTPUT normalized.fa \\\n    --LINE_LENGTH 60 \\\n    --USE_JDK_DEFLATER true \\\n    --USE_JDK_INFLATER true\n    \n    bgzip -c normalized.fa > reference.fa.gz\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    picard NormalizeFasta \\\n    --INPUT ${fasta} \\\n    --OUTPUT normalized.fa \\\n    --LINE_LENGTH 60 \\\n    --USE_JDK_DEFLATER true \\\n    --USE_JDK_INFLATER true\n    \n    bgzip -c normalized.fa > reference.fa.gz\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/fasta\", pattern: \"reference.fa.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "index_fasta": {
        "name_process": "index_fasta",
        "string_process": "\nprocess index_fasta {\n    publishDir \"${params.genomes_directory}/fasta\", \\\n        pattern: \"reference.fa.gz.{fai,gzi}\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(fasta)\n\n    output:\n    path(\"reference.fa.gz.fai\")\n    path(\"reference.fa.gz.gzi\")\n\n    \"\"\"\n    samtools faidx ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    samtools faidx ${fasta}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/fasta\", pattern: \"reference.fa.gz.{fai,gzi}\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "create_sequence_dictionary": {
        "name_process": "create_sequence_dictionary",
        "string_process": "\nprocess create_sequence_dictionary {\n    publishDir \"${params.genomes_directory}/fasta\", \\\n        pattern: \"reference.dict\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(fasta)\n\n    output:\n    path(\"reference.dict\")\n\n    \"\"\"\n    picard CreateSequenceDictionary \\\n    --REFERENCE ${fasta} \\\n    --OUTPUT reference.dict \\\n    --SPECIES ${params.species} \\\n    --GENOME_ASSEMBLY ${params.assembly} \\\n    --USE_JDK_DEFLATER true \\\n    --USE_JDK_INFLATER true\n     \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    picard CreateSequenceDictionary \\\n    --REFERENCE ${fasta} \\\n    --OUTPUT reference.dict \\\n    --SPECIES ${params.species} \\\n    --GENOME_ASSEMBLY ${params.assembly} \\\n    --USE_JDK_DEFLATER true \\\n    --USE_JDK_INFLATER true\n     \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/fasta\", pattern: \"reference.dict\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "get_reference_gtf": {
        "name_process": "get_reference_gtf",
        "string_process": "\nprocess get_reference_gtf {\n    publishDir \"${params.genomes_directory}/gtf\", \\\n        pattern: \"reference.gtf.gz{.url,}\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    val(gtf_url)\n    path(fasta_fai)\n\n    output:\n    path(\"reference.gtf\")\n    path(\"reference.gtf.gz\")\n    path(\"reference.gtf.gz.url\")\n\n    \"\"\"\n    wget -O - \"${gtf_url}\" | \\\n    gunzip -c | \\\n    awk -v FS=\\$'\\t' -v OFS=\\$'\\t' '\n        (NR==FNR) { a[\\$1]++; next; }\n        (\\$0 ~ /^#/) { print \\$0; next; }\n        (\\$1 in a) { \n            gsub(/%/, \"%%\");\n            gsub(/gene \\\\\"/, \"gene_name \\\\\"\");\n            if (\\$3==\"gene\") { \n                gsub(/transcript_id \\\\\"\\\\\"/, \"\");\n            }\n            printf \\$0;\n            if (\\$0 !~ /gene_name/) { \n                printf \" gene_name \\\\\"NA\\\\\";\"; \n            }\n            if ((\\$3!=\"gene\") && (\\$0 !~ /transcript_name/)) {\n                printf \" transcript_name \\\\\"NA\\\\\";\";\n            }\n            print \"\";\n        }\n    ' ${fasta_fai} - > reference.gtf\n    gzip -c reference.gtf > reference.gtf.gz\n    printf \"${gtf_url}\" > reference.gtf.gz.url\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "\"\"\"\n    wget -O - \"${gtf_url}\" | \\\n    gunzip -c | \\\n    awk -v FS=\\$'\\t' -v OFS=\\$'\\t' '\n        (NR==FNR) { a[\\$1]++; next; }\n        (\\$0 ~ /^#/) { print \\$0; next; }\n        (\\$1 in a) { \n            gsub(/%/, \"%%\");\n            gsub(/gene \\\\\"/, \"gene_name \\\\\"\");\n            if (\\$3==\"gene\") { \n                gsub(/transcript_id \\\\\"\\\\\"/, \"\");\n            }\n            printf \\$0;\n            if (\\$0 !~ /gene_name/) { \n                printf \" gene_name \\\\\"NA\\\\\";\"; \n            }\n            if ((\\$3!=\"gene\") && (\\$0 !~ /transcript_name/)) {\n                printf \" transcript_name \\\\\"NA\\\\\";\";\n            }\n            print \"\";\n        }\n    ' ${fasta_fai} - > reference.gtf\n    gzip -c reference.gtf > reference.gtf.gz\n    printf \"${gtf_url}\" > reference.gtf.gz.url\n    \"\"\"",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [
            "NextSV",
            "Gene"
        ],
        "tools_url": [
            "https://bio.tools/nextsv",
            "https://bio.tools/Gene"
        ],
        "tools_dico": [
            {
                "name": "NextSV",
                "uri": "https://bio.tools/nextsv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A meta SV caller and a computational pipeline to perform SV calling from low coverage long-read sequencing data. It integrates three aligners and three SV callers and generates two integrated call sets (sensitive/stringent) for different analysis purpose.",
                "homepage": "http://github.com/Nextomics/NextSV"
            },
            {
                "name": "Gene",
                "uri": "https://bio.tools/Gene",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3400",
                            "term": "Allergy, clinical immunology and immunotherapeutics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> LOW CONFIDENCE! | A curated transcriptome dataset collection to investigate inborn errors of immunity | There was an error sending your bug report. Please fill out the form and try again | Your Email: (so we can get back to you when the bug has been fixed)",
                "homepage": "http://pid.gxbsidra.org/dm3/geneBrowser/list"
            }
        ],
        "inputs": [
            "gtf_url",
            "fasta_fai"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/gtf\", pattern: \"reference.gtf.gz{.url,}\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "reduce_gtf": {
        "name_process": "reduce_gtf",
        "string_process": "\nprocess reduce_gtf {\n    publishDir \"${params.genomes_directory}/gtf\", \\\n        pattern: \"reference.reduced.gtf.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(gtf)\n    path(dict)\n\n    output:\n    path(\"reference.reduced.gtf\")\n    path(\"reference.reduced.gtf.gz\")\n\n    \"\"\"\n    ReduceGtf \\\n    SEQUENCE_DICTIONARY=${dict} \\\n    GTF=${gtf} \\\n    OUTPUT=reference.reduced.gtf \\\n    ENHANCE_GTF=true \\\n    USE_JDK_DEFLATER=true \\\n    USE_JDK_INFLATER=true\n\n    gzip -c reference.reduced.gtf > reference.reduced.gtf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    ReduceGtf \\\n    SEQUENCE_DICTIONARY=${dict} \\\n    GTF=${gtf} \\\n    OUTPUT=reference.reduced.gtf \\\n    ENHANCE_GTF=true \\\n    USE_JDK_DEFLATER=true \\\n    USE_JDK_INFLATER=true\n\n    gzip -c reference.reduced.gtf > reference.reduced.gtf.gz\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf",
            "dict"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/gtf\", pattern: \"reference.reduced.gtf.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "gtf_to_refFlat": {
        "name_process": "gtf_to_refFlat",
        "string_process": "\nprocess gtf_to_refFlat {\n    publishDir \"${params.genomes_directory}/gtf\", \\\n        pattern: \"reference.refFlat\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(gtf)\n    path(dict)\n\n    output:\n    path(\"reference.refFlat\")\n\n    \"\"\"\n    ConvertToRefFlat \\\n    ANNOTATIONS_FILE=${gtf} \\\n    SEQUENCE_DICTIONARY=${dict} \\\n    OUTPUT=reference.refFlat\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    ConvertToRefFlat \\\n    ANNOTATIONS_FILE=${gtf} \\\n    SEQUENCE_DICTIONARY=${dict} \\\n    OUTPUT=reference.refFlat\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf",
            "dict"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/gtf\", pattern: \"reference.refFlat\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "gtf_to_bed": {
        "name_process": "gtf_to_bed",
        "string_process": "\nprocess gtf_to_bed {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(gtf)\n\n    output:\n    path(\"reference.bed\")\n    path(\"reference.bed.gz\")\n\n    \"\"\"\n    grep -v '^#' ${gtf} | \\\n    awk -v FS=\\$'\\t' -v OFS=\\$'\\t' '\n        {\n            print \\$1,\\$4-1,\\$5,\\$1\":\"\\$4-1\"-\"\\$5,\\$6,\\$7,\".\",\".\",\".\",\".\",\".\",\".\",\\$3,\\$9\n        }' | \\\n    sort -k1V -k2n -k3n > reference.bed\n    gzip -c reference.bed > reference.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    grep -v '^#' ${gtf} | \\\n    awk -v FS=\\$'\\t' -v OFS=\\$'\\t' '\n        {\n            print \\$1,\\$4-1,\\$5,\\$1\":\"\\$4-1\"-\"\\$5,\\$6,\\$7,\".\",\".\",\".\",\".\",\".\",\".\",\\$3,\\$9\n        }' | \\\n    sort -k1V -k2n -k3n > reference.bed\n    gzip -c reference.bed > reference.bed.gz\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_genes": {
        "name_process": "extract_genes",
        "string_process": "\nprocess extract_genes {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.genic.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(bed)\n\n    output:\n    path(\"reference.genic.bed\")\n    path(\"reference.genic.bed.gz\")\n\n    \"\"\"\n    awk '\\$13 == \"gene\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.genic.bed\n    gzip -c reference.genic.bed > reference.genic.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    awk '\\$13 == \"gene\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.genic.bed\n    gzip -c reference.genic.bed > reference.genic.bed.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.genic.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_exons": {
        "name_process": "extract_exons",
        "string_process": "\nprocess extract_exons {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.exonic.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(bed)\n\n    output:\n    path(\"reference.exonic.bed\")\n    path(\"reference.exonic.bed.gz\")\n\n    \"\"\"\n    awk '\\$13 == \"exon\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.exonic.bed\n    gzip -c reference.exonic.bed > reference.exonic.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    awk '\\$13 == \"exon\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.exonic.bed\n    gzip -c reference.exonic.bed > reference.exonic.bed.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.exonic.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_CDS": {
        "name_process": "extract_CDS",
        "string_process": "\nprocess extract_CDS {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.CDS.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(bed)\n\n    output:\n    path(\"reference.CDS.bed\")\n    path(\"reference.CDS.bed.gz\")\n\n    \"\"\"\n    awk '\\$13 == \"CDS\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.CDS.bed\n    gzip -c reference.CDS.bed > reference.CDS.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    awk '\\$13 == \"CDS\"' ${bed} | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.CDS.bed\n    gzip -c reference.CDS.bed > reference.CDS.bed.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.CDS.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_UTR": {
        "name_process": "extract_UTR",
        "string_process": "\nprocess extract_UTR {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.UTR.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(exons_bed)\n    path(CDS_bed)\n\n    output:\n    path(\"reference.UTR.bed\")\n    path(\"reference.UTR.bed.gz\")\n\n    \"\"\"\n    bedtools subtract -a ${exons_bed} -b ${CDS_bed} | \\\n    bedtools merge -i stdin > reference.UTR.bed\n    gzip -c reference.UTR.bed > reference.UTR.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    bedtools subtract -a ${exons_bed} -b ${CDS_bed} | \\\n    bedtools merge -i stdin > reference.UTR.bed\n    gzip -c reference.UTR.bed > reference.UTR.bed.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "exons_bed",
            "CDS_bed"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.UTR.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_rRNA_genes": {
        "name_process": "extract_rRNA_genes",
        "string_process": "\nprocess extract_rRNA_genes {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.rRNA.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(bed)\n\n    output:\n    path(\"reference.rRNA.bed\")\n    path(\"reference.rRNA.bed.gz\")\n\n    \"\"\"\n    grep -E 'gene_(bio)?type \"rRNA(_pseudogene)?\"' ${bed} | \\\n    awk '\\$13 == \"gene\"' | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.rRNA.bed\n    gzip -c reference.rRNA.bed > reference.rRNA.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    grep -E 'gene_(bio)?type \"rRNA(_pseudogene)?\"' ${bed} | \\\n    awk '\\$13 == \"gene\"' | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.rRNA.bed\n    gzip -c reference.rRNA.bed > reference.rRNA.bed.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.rRNA.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_MT_genes": {
        "name_process": "extract_MT_genes",
        "string_process": "\nprocess extract_MT_genes {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.MT.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n    \n    input:\n    path(bed)\n\n    output:\n    path(\"reference.MT.bed\")\n    path(\"reference.MT.bed.gz\")\n\n    \"\"\"\n    sed 's/^chr//' ${bed} | \\\n    grep -E '^(M|MT)\\t' | \\\n    awk '\\$13 == \"gene\"' | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.MT.bed\n    gzip -c reference.MT.bed > reference.MT.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    sed 's/^chr//' ${bed} | \\\n    grep -E '^(M|MT)\\t' | \\\n    awk '\\$13 == \"gene\"' | \\\n    cut -f1-6 | \\\n    bedtools merge -i stdin > reference.MT.bed\n    gzip -c reference.MT.bed > reference.MT.bed.gz\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bed"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.MT.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_intronic_regions": {
        "name_process": "extract_intronic_regions",
        "string_process": "\nprocess extract_intronic_regions {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.intronic.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(genes_bed)\n    path(exons_bed)\n\n    output:\n    path(\"reference.intronic.bed\")\n    path(\"reference.intronic.bed.gz\")\n\n    \"\"\"\n    bedtools subtract -a ${genes_bed} -b ${exons_bed} | \\\n    bedtools merge -i stdin > reference.intronic.bed\n    gzip -c reference.intronic.bed > reference.intronic.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    bedtools subtract -a ${genes_bed} -b ${exons_bed} | \\\n    bedtools merge -i stdin > reference.intronic.bed\n    gzip -c reference.intronic.bed > reference.intronic.bed.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "genes_bed",
            "exons_bed"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.intronic.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "extract_intergenic_regions": {
        "name_process": "extract_intergenic_regions",
        "string_process": "\nprocess extract_intergenic_regions {\n    publishDir \"${params.genomes_directory}/bed\", \\\n        pattern: \"reference.intergenic.bed.gz\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(genes_bed)\n    path(fasta_fai)\n\n    output:\n    path(\"reference.intergenic.bed\")\n    path(\"reference.intergenic.bed.gz\")\n\n    \"\"\"\n    awk -v OFS=\\$'\\t' '{print \\$1,\\$2}' ${fasta_fai} | \\\n    sort -k1V > chr_sizes.tsv\n\n    bedtools complement -i ${genes_bed} -g chr_sizes.tsv | \\\n    bedtools merge -i stdin > reference.intergenic.bed\n    gzip -c reference.intergenic.bed > reference.intergenic.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    awk -v OFS=\\$'\\t' '{print \\$1,\\$2}' ${fasta_fai} | \\\n    sort -k1V > chr_sizes.tsv\n\n    bedtools complement -i ${genes_bed} -g chr_sizes.tsv | \\\n    bedtools merge -i stdin > reference.intergenic.bed\n    gzip -c reference.intergenic.bed > reference.intergenic.bed.gz\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "genes_bed",
            "fasta_fai"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/bed\", pattern: \"reference.intergenic.bed.gz\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "bed_to_interval_list": {
        "name_process": "bed_to_interval_list",
        "string_process": "\nprocess bed_to_interval_list {\n    publishDir \"${params.genomes_directory}/interval-list\", \\\n        pattern: \"*.interval_list\", \\\n        mode: \"copy\", overwrite: true\n\n    input:\n    path(dict)\n    path(genes_bed)\n    path(exons_bed)\n    path(CDS_bed)\n    path(UTR_bed)\n    path(rRNA_bed)\n    path(MT_bed)\n    path(intronic_bed)\n    path(intergenic_bed)\n    \n    output:\n    path(\"reference.genes.interval_list\")\n    path(\"reference.exons.interval_list\")\n    path(\"reference.CDS.interval_list\")\n    path(\"reference.UTR.interval_list\")\n    path(\"reference.genes.rRNA.interval_list\")\n    path(\"reference.genes.MT.interval_list\")\n    path(\"reference.intronic.interval_list\")\n    path(\"reference.intergenic.interval_list\")\n\n    \"\"\"\n    declare -A files=(\n        [genes]=${genes_bed}\n        [exons]=${exons_bed}\n        [CDS]=${CDS_bed}\n        [UTR]=${UTR_bed}\n        [genes.rRNA]=${rRNA_bed}\n        [genes.MT]=${MT_bed}\n        [intronic]=${intronic_bed}\n        [intergenic]=${intergenic_bed}\n    )\n    \n    for name in \"\\${!files[@]}\"; do\n        picard BedToIntervalList \\\n        --INPUT \\${files[\\$name]} \\\n        --OUTPUT reference.\\${name}.interval_list \\\n        --SEQUENCE_DICTIONARY ${dict} \\\n        --USE_JDK_DEFLATER true \\\n        --USE_JDK_INFLATER true\n    done\n    \"\"\"\n}",
        "nb_lignes_process": 47,
        "string_script": "\"\"\"\n    declare -A files=(\n        [genes]=${genes_bed}\n        [exons]=${exons_bed}\n        [CDS]=${CDS_bed}\n        [UTR]=${UTR_bed}\n        [genes.rRNA]=${rRNA_bed}\n        [genes.MT]=${MT_bed}\n        [intronic]=${intronic_bed}\n        [intergenic]=${intergenic_bed}\n    )\n    \n    for name in \"\\${!files[@]}\"; do\n        picard BedToIntervalList \\\n        --INPUT \\${files[\\$name]} \\\n        --OUTPUT reference.\\${name}.interval_list \\\n        --SEQUENCE_DICTIONARY ${dict} \\\n        --USE_JDK_DEFLATER true \\\n        --USE_JDK_INFLATER true\n    done\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "dict",
            "genes_bed",
            "exons_bed",
            "CDS_bed",
            "UTR_bed",
            "rRNA_bed",
            "MT_bed",
            "intronic_bed",
            "intergenic_bed"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/interval-list\", pattern: \"*.interval_list\", mode: \"copy\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "star_create_index": {
        "name_process": "star_create_index",
        "string_process": "\nprocess star_create_index {\n    publishDir \"${params.genomes_directory}/star-index\", \\\n        mode: \"move\", overwrite: true\n\n    input:\n    path(fasta)\n    path(gtf)\n\n    output:\n    path(\"Genome\")\n    path(\"Log.out\")\n    path(\"SA\")\n    path(\"SAindex\")\n    path(\"chrLength.txt\")\n    path(\"chrName.txt\")\n    path(\"chrNameLength.txt\")\n    path(\"chrStart.txt\")\n    path(\"exonGeTrInfo.tab\")\n    path(\"exonInfo.tab\")\n    path(\"geneInfo.tab\")\n    path(\"genomeParameters.txt\")\n    path(\"sjdbInfo.txt\")\n    path(\"sjdbList.fromGTF.out.tab\")\n    path(\"sjdbList.out.tab\")\n    path(\"transcriptInfo.tab\")\n\n    \"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    STAR \\\n    --runThreadN ${task.cpus} \\\n    --runMode genomeGenerate \\\n    --genomeDir . \\\n    --genomeFastaFiles reference.fa \\\n    --sjdbGTFfile reference.gtf \\\n    --sjdbOverhang ${params.star_sjdbOverhang} \\\n    --genomeSAindexNbases ${params.star_genomeSAindexNbases} \\\n    --limitGenomeGenerateRAM 200000000000\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "\"\"\"\n    gunzip -c ${fasta} > reference.fa\n    gunzip -c ${gtf} > reference.gtf\n    STAR \\\n    --runThreadN ${task.cpus} \\\n    --runMode genomeGenerate \\\n    --genomeDir . \\\n    --genomeFastaFiles reference.fa \\\n    --sjdbGTFfile reference.gtf \\\n    --sjdbOverhang ${params.star_sjdbOverhang} \\\n    --genomeSAindexNbases ${params.star_genomeSAindexNbases} \\\n    --limitGenomeGenerateRAM 200000000000\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "fasta",
            "gtf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "gates-mri-bioinformatics__reference-database",
        "directive": [
            "publishDir \"${params.genomes_directory}/star-index\", mode: \"move\", overwrite: true"
        ],
        "when": "",
        "stub": ""
    }
}