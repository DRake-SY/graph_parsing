{
    "bigg_extract": {
        "name_process": "bigg_extract",
        "string_process": "\nprocess bigg_extract {\n    storeDir \"${params.storage}\"\n\n    output:\n    path 'bigg_universal_reactions.json'\n\n    \"\"\"\n    mnx-post reactions bigg extract\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post reactions bigg extract\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "bigg_transform": {
        "name_process": "bigg_transform",
        "string_process": "\nprocess bigg_transform {\n    input:\n    path universal_reactions\n\n    output:\n    path 'bigg_reaction_names.json'\n\n    \"\"\"\n    mnx-post reactions bigg transform ${universal_reactions}\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    mnx-post reactions bigg transform ${universal_reactions}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "universal_reactions"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "bigg_load": {
        "name_process": "bigg_load",
        "string_process": "\nprocess bigg_load {\n    input:\n    path db\n    path reaction_names\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions bigg load sqlite:///${db.getName()} ${reaction_names}\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions bigg load sqlite:///${db.getName()} ${reaction_names}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "reaction_names"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "expasy_extract": {
        "name_process": "expasy_extract",
        "string_process": "\nprocess expasy_extract {\n    storeDir \"${params.storage}\"\n\n    output:\n    path 'enzyme.rdf'\n\n    \"\"\"\n    mnx-post reactions expasy extract ${params.email}\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post reactions expasy extract ${params.email}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "expasy_transform": {
        "name_process": "expasy_transform",
        "string_process": "\nprocess expasy_transform {\n    input:\n    path enzymes\n\n    output:\n    path 'expasy_reaction_names.json', emit: names\n    path 'expasy_replacements.json', emit: replacements\n\n    \"\"\"\n    mnx-post reactions expasy transform ${enzymes}\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    mnx-post reactions expasy transform ${enzymes}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "enzymes"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "expasy_load": {
        "name_process": "expasy_load",
        "string_process": "\nprocess expasy_load {\n    input:\n    path db\n    path enzyme_names\n    path enzyme_replacements\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions expasy load sqlite:///${db.getName()} \\\n        ${enzyme_names} ${enzyme_replacements}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions expasy load sqlite:///${db.getName()} \\\n        ${enzyme_names} ${enzyme_replacements}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "enzyme_names",
            "enzyme_replacements"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "kegg_extract": {
        "name_process": "kegg_extract",
        "string_process": "\nprocess kegg_extract {\n    storeDir \"${params.storage}\"\n\n    output:\n    path 'kegg_compounds.json'\n\n    \"\"\"\n    mnx-post compounds kegg extract\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post compounds kegg extract\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "kegg_transform": {
        "name_process": "kegg_transform",
        "string_process": "\nprocess kegg_transform {\n    input:\n    path compounds\n\n    output:\n    path 'kegg_inchi.json'\n\n    \"\"\"\n    mnx-post compounds kegg transform --backend=${params.chem_backend} ${compounds}\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    mnx-post compounds kegg transform --backend=${params.chem_backend} ${compounds}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "compounds"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "kegg_load": {
        "name_process": "kegg_load",
        "string_process": "\nprocess kegg_load {\n    publishDir \"${params.outdir}\", mode:'link', glob: '*.json'\n\n    input:\n    path db\n    path inchis\n\n    output:\n    path \"${db.getName()}\", emit: db\n    path 'kegg_inchi_conflicts.json'\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds kegg load sqlite:///${db.getName()} ${inchis}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds kegg load sqlite:///${db.getName()} ${inchis}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "inchis"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link', glob: '*.json'"
        ],
        "when": "",
        "stub": ""
    },
    "seed_extract": {
        "name_process": "seed_extract",
        "string_process": "\nprocess seed_extract {\n    storeDir \"${params.storage}\"\n\n    output:\n    path 'seed_reactions.json'\n\n    \"\"\"\n    mnx-post reactions seed extract\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post reactions seed extract\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "seed_transform": {
        "name_process": "seed_transform",
        "string_process": "\nprocess seed_transform {\n    input:\n    path reactions\n\n    output:\n    path 'seed_reaction_names.json'\n\n    \"\"\"\n    mnx-post reactions seed transform ${reactions}\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    mnx-post reactions seed transform ${reactions}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reactions"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "seed_load": {
        "name_process": "seed_load",
        "string_process": "\nprocess seed_load {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    input:\n    path db\n    path reaction_names\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions seed load sqlite:///${db.getName()} ${reaction_names}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post reactions seed load sqlite:///${db.getName()} ${reaction_names}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "reaction_names"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "pubchem_extract": {
        "name_process": "pubchem_extract",
        "string_process": "\nprocess pubchem_extract {\n    storeDir \"${params.storage}\"\n\n    input:\n    path identifiers\n\n    output:\n    path 'pubchem_properties.json'\n    path 'pubchem_synonyms.json'\n\n    \"\"\"\n    mnx-post compounds pubchem extract ${identifiers}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    mnx-post compounds pubchem extract ${identifiers}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "identifiers"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "pubchem_transform": {
        "name_process": "pubchem_transform",
        "string_process": "\nprocess pubchem_transform {\n    input:\n    path properties\n    path synonyms\n\n    output:\n    path 'pubchem_compounds.json'\n\n    \"\"\"\n    mnx-post compounds pubchem transform ${properties} ${synonyms}\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    mnx-post compounds pubchem transform ${properties} ${synonyms}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "properties",
            "synonyms"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "pubchem_load": {
        "name_process": "pubchem_load",
        "string_process": "\nprocess pubchem_load {\n    publishDir \"${params.outdir}\", mode:'link', glob: '*.json'\n\n    input:\n    path db\n    path compounds\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds pubchem load sqlite:///${db.getName()} ${compounds}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds pubchem load sqlite:///${db.getName()} ${compounds}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "compounds"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link', glob: '*.json'"
        ],
        "when": "",
        "stub": ""
    },
    "structures_etl": {
        "name_process": "structures_etl",
        "string_process": "\nprocess structures_etl {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    input:\n    path db\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds structures etl --backend=${params.chem_backend} \\\n        sqlite:///${db.getName()}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-post compounds structures etl --backend=${params.chem_backend} \\\n        sqlite:///${db.getName()}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "mnx_info": {
        "name_process": "mnx_info",
        "string_process": "\nprocess mnx_info {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    output:\n    path 'README.md'\n\n    \"\"\"\n    mnx-sdk pull --version ${params.mnx_release} --no-compress . README.md\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-sdk pull --version ${params.mnx_release} --no-compress . README.md\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "pull_tables": {
        "name_process": "pull_tables",
        "string_process": "\nprocess pull_tables {\n    storeDir \"${params.storage}\"\n\n    input:\n    val names\n\n    output:\n    path '*.tsv.gz'\n\n    \"\"\"\n    mnx-sdk pull --version ${params.mnx_release} . ${names.join(' ')}\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    mnx-sdk pull --version ${params.mnx_release} . ${names.join(' ')}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "names"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "transform_table": {
        "name_process": "transform_table",
        "string_process": "\nprocess transform_table {\n    publishDir \"${params.outdir}/mnx-processed\", mode:'link'\n\n    input:\n    path table\n\n    output:\n    path \"processed_${table}\", emit: processed_table\n\n    \"\"\"\n    mnx-sdk etl ${table.getSimpleName().replace('_', '-')} \\\n        ${table} processed_${table}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    mnx-sdk etl ${table.getSimpleName().replace('_', '-')} \\\n        ${table} processed_${table}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "table"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}/mnx-processed\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "bigg_info": {
        "name_process": "bigg_info",
        "string_process": "\nprocess bigg_info {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    output:\n    path 'bigg_info.json'\n\n    \"\"\"\n    mnx-post bigg-info\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post bigg-info\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "kegg_info": {
        "name_process": "kegg_info",
        "string_process": "\nprocess kegg_info {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    output:\n    path 'kegg_info.txt'\n\n    \"\"\"\n    mnx-post kegg-info\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-post kegg-info\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "pull_registry": {
        "name_process": "pull_registry",
        "string_process": "\nprocess pull_registry {\n    storeDir \"${params.storage}\"\n\n    output:\n    path 'identifiers_org.json'\n\n    \"\"\"\n    mnx-assets namespaces extract-registry identifiers_org.json\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    mnx-assets namespaces extract-registry identifiers_org.json\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "storeDir \"${params.storage}\""
        ],
        "when": "",
        "stub": ""
    },
    "init_db": {
        "name_process": "init_db",
        "string_process": "\nprocess init_db {\n    output:\n    path \"${params.database}\", emit: db\n\n    \"\"\"\n    mnx-assets init --drop yes sqlite:///${params.database}\n    \"\"\"\n}",
        "nb_lignes_process": 7,
        "string_script": "\"\"\"\n    mnx-assets init --drop yes sqlite:///${params.database}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "etl_namespaces": {
        "name_process": "etl_namespaces",
        "string_process": "\nprocess etl_namespaces {\n    input:\n    path db\n    val tables\n    path registry\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets namespaces etl sqlite:///${db.getName()} \\\n        ${registry} \\\n        ${tables['chem_prop'].head()} \\\n        ${tables['chem_xref'].head()} \\\n        ${tables['comp_prop'].head()} \\\n        ${tables['comp_xref'].head()} \\\n        ${tables['reac_prop'].head()} \\\n        ${tables['reac_xref'].head()}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets namespaces etl sqlite:///${db.getName()} \\\n        ${registry} \\\n        ${tables['chem_prop'].head()} \\\n        ${tables['chem_xref'].head()} \\\n        ${tables['comp_prop'].head()} \\\n        ${tables['comp_xref'].head()} \\\n        ${tables['reac_prop'].head()} \\\n        ${tables['reac_xref'].head()}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "tables",
            "registry"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "etl_compartments": {
        "name_process": "etl_compartments",
        "string_process": "\nprocess etl_compartments {\n    input:\n    path db\n    val tables\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets compartments etl sqlite:///${db.getName()} \\\n        ${tables['comp_prop'].head()} \\\n        ${tables['comp_xref'].head()}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets compartments etl sqlite:///${db.getName()} \\\n        ${tables['comp_prop'].head()} \\\n        ${tables['comp_xref'].head()}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "tables"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "etl_compounds": {
        "name_process": "etl_compounds",
        "string_process": "\nprocess etl_compounds {\n    input:\n    path db\n    val tables\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets compounds etl sqlite:///${db.getName()} \\\n        ${tables['chem_prop'].head()} \\\n        ${tables['chem_xref'].head()}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets compounds etl sqlite:///${db.getName()} \\\n        ${tables['chem_prop'].head()} \\\n        ${tables['chem_xref'].head()}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "tables"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "etl_reactions": {
        "name_process": "etl_reactions",
        "string_process": "\nprocess etl_reactions {\n    publishDir \"${params.outdir}\", mode:'link'\n\n    input:\n    path db\n    val tables\n\n    output:\n    path \"${db.getName()}\", emit: db\n\n                                                                                        \n    \"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets reactions etl sqlite:///${db.getName()} \\\n        ${tables['reac_prop'].head()} \\\n        ${tables['reac_xref'].head()}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    cp --remove-destination \"\\$(realpath -e ${db})\" \"${db.getName()}\"\n    mnx-assets reactions etl sqlite:///${db.getName()} \\\n        ${tables['reac_prop'].head()} \\\n        ${tables['reac_xref'].head()}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db",
            "tables"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Midnighter__metanetx-nf",
        "directive": [
            "publishDir \"${params.outdir}\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    }
}