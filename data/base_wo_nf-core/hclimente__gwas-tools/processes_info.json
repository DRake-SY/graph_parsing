{
    "lasso": {
        "name_process": "lasso",
        "string_process": "\nprocess lasso {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file BED from bed\n        file FAM from fam\n        file BIM from bim\n\n    output:\n        file 'scored_snps.lasso.tsv'\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n    library(biglasso)\n    library(snpStats)\n    library(tidyverse)\n\n    # read dataset\n    gwas <- read.plink(\"${BED}\", \"${BIM}\", \"${FAM}\")\n    X <- as(gwas[['genotypes']], 'numeric')\n    ## remove NAs\n    X[is.na(X)] <- 0\t\n    X <- as.big.matrix(X) \n    y <- gwas[['fam']][['affected']] - 1\n    names(y) <- gwas[['fam']][['pedigree']] %>% as.character\n\n    rm(gwas)\n\n    # train and evaluate classifier\n    cvfit <- cv.biglasso(X, y, penalty = 'lasso', family = \"binomial\")\n\n    tibble(snp = rownames(cvfit\\$fit\\$beta), \n\t   beta = cvfit\\$fit\\$beta[,cvfit\\$lambda == cvfit\\$lambda.min][-1]) %>%\n        write_tsv('scored_snps.lasso.tsv')\n    \"\"\"\n\n}",
        "nb_lignes_process": 37,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n    library(biglasso)\n    library(snpStats)\n    library(tidyverse)\n\n    # read dataset\n    gwas <- read.plink(\"${BED}\", \"${BIM}\", \"${FAM}\")\n    X <- as(gwas[['genotypes']], 'numeric')\n    ## remove NAs\n    X[is.na(X)] <- 0\t\n    X <- as.big.matrix(X) \n    y <- gwas[['fam']][['affected']] - 1\n    names(y) <- gwas[['fam']][['pedigree']] %>% as.character\n\n    rm(gwas)\n\n    # train and evaluate classifier\n    cvfit <- cv.biglasso(X, y, penalty = 'lasso', family = \"binomial\")\n\n    tibble(snp = rownames(cvfit\\$fit\\$beta), \n\t   beta = cvfit\\$fit\\$beta[,cvfit\\$lambda == cvfit\\$lambda.min][-1]) %>%\n        write_tsv('scored_snps.lasso.tsv')\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed",
            "fam",
            "bim"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "bed2r": {
        "name_process": "bed2r",
        "string_process": "\nprocess bed2r {\n\n    input:\n        file BED from bed\n        file BIM from bim\n        file FAM from fam\n\n    output:\n        file 'gwas.RData' into rgwas_train, rgwas_test\n\n    script:\n    template 'io/bed2r.R'\n\n}",
        "nb_lignes_process": 13,
        "string_script": "    template 'io/bed2r.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "rgwas_train",
            "rgwas_test"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "create_network": {
        "name_process": "create_network",
        "string_process": "\nprocess create_network {\n\n    input:\n        file RGWAS from rgwas_network\n        val NET from params.network\n        file TAB2 from tab2\n        file SNP2GENE from snp2gene\n\n    output:\n        file 'net.RData' into RNET\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n    library(martini)\n    library(tidyverse)\n    library(igraph)\n\n    load(\"${RGWAS}\")\n    netType <- \"${NET}\"\n\n    if (netType == \"gs\") {\n        net <- get_GS_network(gwas)\n    } else if (netType %in% c('gm', 'gi')) {\n        snp2gene <- read_tsv(\"${SNP2GENE}\")\n\n        if (netType == \"gm\") {\n            net <- get_GM_network(gwas, snpMapping = snp2gene)\n        } else if (netType == \"gi\") {\n            tab2 <- read_tsv(\"${TAB2}\", col_types = cols(.default = col_character())) %>%\n                rename(gene1 = `Official Symbol Interactor A`, gene2 = `Official Symbol Interactor B`) %>%\n                select(gene1, gene2)\n            net <- get_GI_network(gwas, snpMapping = snp2gene, ppi = tab2)\n        }\n    } else {\n        stop(\"network type not recognized.\")\n    }\n\n    save(net, file = \"net.RData\")\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n    library(martini)\n    library(tidyverse)\n    library(igraph)\n\n    load(\"${RGWAS}\")\n    netType <- \"${NET}\"\n\n    if (netType == \"gs\") {\n        net <- get_GS_network(gwas)\n    } else if (netType %in% c('gm', 'gi')) {\n        snp2gene <- read_tsv(\"${SNP2GENE}\")\n\n        if (netType == \"gm\") {\n            net <- get_GM_network(gwas, snpMapping = snp2gene)\n        } else if (netType == \"gi\") {\n            tab2 <- read_tsv(\"${TAB2}\", col_types = cols(.default = col_character())) %>%\n                rename(gene1 = `Official Symbol Interactor A`, gene2 = `Official Symbol Interactor B`) %>%\n                select(gene1, gene2)\n            net <- get_GI_network(gwas, snpMapping = snp2gene, ppi = tab2)\n        }\n    } else {\n        stop(\"network type not recognized.\")\n    }\n\n    save(net, file = \"net.RData\")\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas_network",
            "params",
            "tab2",
            "snp2gene"
        ],
        "nb_inputs": 4,
        "outputs": [
            "RNET"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "scones": {
        "name_process": "scones",
        "string_process": " process scones {\n\n        publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n        input:\n            file RGWAS from rgwas_scones\n            file RNET\n            val SCORE from params.score\n            val CRITERION from params.criterion\n\n        output:\n            file 'cones.tsv'\n\n        script:\n        template 'discovery/run_old_scones.R'\n\n        }",
        "nb_lignes_process": 15,
        "string_script": "        template 'discovery/run_old_scones.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "rgwas_scones",
            "RNET",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "parametrized_scones": {
        "name_process": "parametrized_scones",
        "string_process": " process parametrized_scones {\n\n        publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n        input:\n            file RGWAS from rgwas_scones\n            file RNET\n            val SCORE from params.score\n            val CRITERION from params.criterion\n            val ETA from params.eta\n            val LAMBDA from params.lambda\n\n        output:\n            file 'cones.tsv'\n\n        script:\n        template 'discovery/run_old_scones_params.R'\n\n        }",
        "nb_lignes_process": 17,
        "string_script": "        template 'discovery/run_old_scones_params.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "rgwas_scones",
            "RNET",
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "replace_phenotype": {
        "name_process": "replace_phenotype",
        "string_process": " process replace_phenotype {\n\n        input:\n            file PHENO from pheno\n            file FAM from original_fam\n            val I from params.i\n\n        output:\n            file \"${FAM}\" into fam\n\n        script:\n        template 'io/replace_phenotype.sh'\n\n    }",
        "nb_lignes_process": 12,
        "string_script": "        template 'io/replace_phenotype.sh'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "pheno",
            "original_fam",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [
            "fam"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "run_regression": {
        "name_process": "run_regression",
        "string_process": " process run_regression {\n\n       input:\n           each I from 1..params.N\n           val N from params.N\n           file BED from bed\n           file BIM from bim\n           file FAM from fam\n\n       output:\n           file \"part.epi.??.${I}\" into parts\n\n       \"\"\"\n       plink --bfile ${BED.baseName} --epistasis --parallel ${I} ${N} --allow-no-sex --out part\n       \"\"\"\n\n    }",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n       plink --bfile ${BED.baseName} --epistasis --parallel ${I} ${N} --allow-no-sex --out part\n       \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "1",
            "params",
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 5,
        "outputs": [
            "parts"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "run_regression_with_covars": {
        "name_process": "run_regression_with_covars",
        "string_process": " process run_regression_with_covars {\n\n       input:\n           each I from 1..params.N\n           val N from params.N\n           file BED from bed\n           file BIM from bim\n           file FAM from fam\n           file COVAR from covar\n\n       output:\n           file \"part.epi.??.${I}\" into parts\n\n       \"\"\"\n       plink --bfile ${BED.baseName} --epistasis --covar ${COVAR} --parallel ${I} ${N} --allow-no-sex --out part\n       \"\"\"\n\n    }",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n       plink --bfile ${BED.baseName} --epistasis --covar ${COVAR} --parallel ${I} ${N} --allow-no-sex --out part\n       \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "1",
            "params",
            "bed",
            "bim",
            "fam",
            "covar"
        ],
        "nb_inputs": 6,
        "outputs": [
            "parts"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "join_parts": {
        "name_process": "join_parts",
        "string_process": "\nprocess join_parts {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file \"*\" from parts.collect()\n\n    output:\n        file \"scored_interactions.regression.txt\"\n\n    \"\"\"\n    cat `ls -v part.epi.*` | sed 's/^ \\\\+//' | sed 's/ \\\\+/\\t/g' | sed 's/\\t\\$//' >scored_interactions.regression.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    cat `ls -v part.epi.*` | sed 's/^ \\\\+//' | sed 's/ \\\\+/\\t/g' | sed 's/\\t\\$//' >scored_interactions.regression.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "parts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "get_null": {
        "name_process": "get_null",
        "string_process": "\nprocess get_null {\n\n    input:\n    file RGWAS from rgwas\n    val PHENO from phenotype\n\n    output:\n    file 'null.RData' into dnull\n\n    \"\"\"\n    #!/usr/bin/env Rscript \n\n    library(SKAT)\n\n    load('${RGWAS}')\n\n    y <- gwas\\$fam\\$affected\n\n    if (\"${PHENO}\" == 'D')\n        y <- y - 1\n\n    dnull <- SKAT_Null_Model(y ~ 1, out_type=\"${PHENO}\")\n\n    save(dnull, file = 'null.RData')\n    \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript \n\n    library(SKAT)\n\n    load('${RGWAS}')\n\n    y <- gwas\\$fam\\$affected\n\n    if (\"${PHENO}\" == 'D')\n        y <- y - 1\n\n    dnull <- SKAT_Null_Model(y ~ 1, out_type=\"${PHENO}\")\n\n    save(dnull, file = 'null.RData')\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas",
            "phenotype"
        ],
        "nb_inputs": 2,
        "outputs": [
            "dnull"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "skat": {
        "name_process": "skat",
        "string_process": "\nprocess skat {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"move\"\n\n    input:\n    file RGWAS from rgwas\n    file DNULL from dnull\n    file SNP2GENE from snp2gene\n\n    output:\n    file 'scored_genes.skat.tsv'\n\n    \"\"\"\n    #!/usr/bin/env Rscript \n\n    library(SKAT)\n    library(tidyverse)\n    library(snpStats)\n\n    load('${RGWAS}')\n    load('${DNULL}')\n\n    snp2gene <- read_tsv('$SNP2GENE', col_types = 'cc')\n    genes <- snp2gene\\$gene %>% unique\n\n    pvals <- lapply(genes, function(g){\n\n        print(g)\n        snps <- snp2gene\\$snp[ snp2gene\\$gene == g]\n        Z <- as(gwas\\$genotypes[,snps], 'numeric')\n        Z <- abs(Z - 2)\n        SKAT(Z, dnull)\\$p.value\n\n    }) %>% do.call(c, .)\n\n    tibble(gene = genes, p = pvals) %>%\n        write_tsv('scored_genes.skat.tsv')\n    \"\"\"\n\n}",
        "nb_lignes_process": 39,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript \n\n    library(SKAT)\n    library(tidyverse)\n    library(snpStats)\n\n    load('${RGWAS}')\n    load('${DNULL}')\n\n    snp2gene <- read_tsv('$SNP2GENE', col_types = 'cc')\n    genes <- snp2gene\\$gene %>% unique\n\n    pvals <- lapply(genes, function(g){\n\n        print(g)\n        snps <- snp2gene\\$snp[ snp2gene\\$gene == g]\n        Z <- as(gwas\\$genotypes[,snps], 'numeric')\n        Z <- abs(Z - 2)\n        SKAT(Z, dnull)\\$p.value\n\n    }) %>% do.call(c, .)\n\n    tibble(gene = genes, p = pvals) %>%\n        write_tsv('scored_genes.skat.tsv')\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas",
            "dnull",
            "snp2gene"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"move\""
        ],
        "when": "",
        "stub": ""
    },
    "r2smmb": {
        "name_process": "r2smmb",
        "string_process": "\nprocess r2smmb {\n\n    input:\n        file rdata\n\n    output:\n        file \"smmb_genotypes.txt\" into smmb_genotypes\n        file \"smmb_phenotypes.txt\" into smmb_phenotypes\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(snpStats)\n    load(\"$rdata\")\n\n    y <- gwas\\$fam\\$affected - 1\n    tibble(Class = y) %>% write_tsv('smmb_phenotypes.txt')\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    as.tibble(X) %>% write_csv(\"smmb_genotypes.txt\")\n    \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(snpStats)\n    load(\"$rdata\")\n\n    y <- gwas\\$fam\\$affected - 1\n    tibble(Class = y) %>% write_tsv('smmb_phenotypes.txt')\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    as.tibble(X) %>% write_csv(\"smmb_genotypes.txt\")\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rdata"
        ],
        "nb_inputs": 1,
        "outputs": [
            "smmb_genotypes",
            "smmb_phenotypes"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "smmb": {
        "name_process": "smmb",
        "string_process": "\nprocess smmb {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        val N_SNPS from n_snps\n        file SMMB_GENOTYPES from smmb_genotypes\n        file SMMB_PHENOTYPES from smmb_phenotypes\n\n    output:\n        file \"scored_interactions.smmb.txt\"\n\n    \"\"\"\n    cat << EOF >PARAMETERS_SMMB.txt\n    # number of header lines in the genotype file\n    header 1\n\n    # separation between fields in the genotype file\n    separator ,\n\n    # number of consecutive runs of SMMB (should be kept to this value)\n    n_smmb_runs 1\n\n    # alpha: type I error rate\n    alpha 0.05\n\n    # precision used in adaptative permutations\n    precision 0.03\n\n    # K: size of the largest subset (draw in Algorithm 1)\n    subset_size_large ${Math.sqrt(N_SNPS).intValue()}\n\n    # k: size of the smallest subset (draw in Algorithm 2)\n    subset_size_small 3\n\n    # r: Number of Markov blankets learned to make the consensus\n    n_mbs 10000\n\n    # t: maximal number of iterations if there is no convergence (top level procedure of SMMB algorithm)\n    n_trials_to_learn_mbs 100\n\n    # m: maximal number of iterations allowed to learn one Markov blanket, for one given large subset K, to escape the issue of non-modified MB.\n    # If the sampling of k variables among K variables does not allow to identify a candidate subset s which is actually added to the growing MB, then the MB would not be modified and learnMB (inner level procedure of SMMB algorithm) would stop.\n    # To palliate this problem, one coerces the exploration of the subset of K variables through n_trials_to_learn_1_mb.\n    n_trials_to_learn_1_mb 30\n    EOF\n    \n    mkdir outputs\n    SMMB ${SMMB_GENOTYPES} ${SMMB_PHENOTYPES}\n    \"\"\"\n\n}",
        "nb_lignes_process": 51,
        "string_script": "\"\"\"\n    cat << EOF >PARAMETERS_SMMB.txt\n    # number of header lines in the genotype file\n    header 1\n\n    # separation between fields in the genotype file\n    separator ,\n\n    # number of consecutive runs of SMMB (should be kept to this value)\n    n_smmb_runs 1\n\n    # alpha: type I error rate\n    alpha 0.05\n\n    # precision used in adaptative permutations\n    precision 0.03\n\n    # K: size of the largest subset (draw in Algorithm 1)\n    subset_size_large ${Math.sqrt(N_SNPS).intValue()}\n\n    # k: size of the smallest subset (draw in Algorithm 2)\n    subset_size_small 3\n\n    # r: Number of Markov blankets learned to make the consensus\n    n_mbs 10000\n\n    # t: maximal number of iterations if there is no convergence (top level procedure of SMMB algorithm)\n    n_trials_to_learn_mbs 100\n\n    # m: maximal number of iterations allowed to learn one Markov blanket, for one given large subset K, to escape the issue of non-modified MB.\n    # If the sampling of k variables among K variables does not allow to identify a candidate subset s which is actually added to the growing MB, then the MB would not be modified and learnMB (inner level procedure of SMMB algorithm) would stop.\n    # To palliate this problem, one coerces the exploration of the subset of K variables through n_trials_to_learn_1_mb.\n    n_trials_to_learn_1_mb 30\n    EOF\n    \n    mkdir outputs\n    SMMB ${SMMB_GENOTYPES} ${SMMB_PHENOTYPES}\n    \"\"\"",
        "nb_lignes_script": 37,
        "language_script": "bash",
        "tools": [
            "ALPHA",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/alpha",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "ALPHA",
                "uri": "https://bio.tools/alpha",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0324",
                                    "term": "Phylogenetic analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0324",
                                    "term": "Phylogenetic tree analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Automated Local PHylogenomic Analyses.",
                "homepage": "https://github.com/chilleo/ALPHA"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "n_snps",
            "smmb_genotypes",
            "smmb_phenotypes"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "high_order_glm": {
        "name_process": "high_order_glm",
        "string_process": "\nprocess high_order_glm {\n    \n    errorStrategy 'ignore'\n\n    input:\n        file RGWAS from rgwas\n        file INTERACTIONS from interactions\n        val I from 1..(interactions.countLines() - 1)\n        file COVARS from covars\n\n    output:\n        file \"scores_${I}.tsv\" into scores\n\n    script:\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    snps <- strsplit(read_tsv('${INTERACTIONS}')\\$snp_sets[${I}], '_') %>% unlist\n    covars <- read_tsv('${COVARS}')\n    # do some kind of matching using sample ids\n\n    load('${RGWAS}')\n\n    X <- as(gwas[['genotypes']], 'numeric')\n    X <- X[, snps]\n    X[is.na(X)] = 0 # TODO change?\n    X[X == 0] = 'AA'\n    X[X == 1] = 'Aa'\n    X[X == 2] = 'aa'\n\n    y <- gwas[['fam']][['affected']] - 1\n\n    rm(gwas)\n\n    intx <- model.matrix(~.^100,data = as.data.frame(X)) %>%\n        as_tibble %>%\n        mutate(y = y) %>%\n        bind_cols(covars)\n\n    rm(X,y)\n\n    fit <- glm(y ~ ., data = intx)\n    pvals <- coef(summary(fit))[,'Pr(>|t|)']\n\n    tibble(snp_set = paste(snps, collapse = '_'),\n           test = names(pvals),\n           p_value = pvals) %>%\n        write_tsv('scores_${I}.tsv', col_names = FALSE)\n    \"\"\"\n\n}",
        "nb_lignes_process": 52,
        "string_script": "    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    snps <- strsplit(read_tsv('${INTERACTIONS}')\\$snp_sets[${I}], '_') %>% unlist\n    covars <- read_tsv('${COVARS}')\n    # do some kind of matching using sample ids\n\n    load('${RGWAS}')\n\n    X <- as(gwas[['genotypes']], 'numeric')\n    X <- X[, snps]\n    X[is.na(X)] = 0 # TODO change?\n    X[X == 0] = 'AA'\n    X[X == 1] = 'Aa'\n    X[X == 2] = 'aa'\n\n    y <- gwas[['fam']][['affected']] - 1\n\n    rm(gwas)\n\n    intx <- model.matrix(~.^100,data = as.data.frame(X)) %>%\n        as_tibble %>%\n        mutate(y = y) %>%\n        bind_cols(covars)\n\n    rm(X,y)\n\n    fit <- glm(y ~ ., data = intx)\n    pvals <- coef(summary(fit))[,'Pr(>|t|)']\n\n    tibble(snp_set = paste(snps, collapse = '_'),\n           test = names(pvals),\n           p_value = pvals) %>%\n        write_tsv('scores_${I}.tsv', col_names = FALSE)\n    \"\"\"",
        "nb_lignes_script": 36,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas",
            "interactions",
            "1",
            "covars"
        ],
        "nb_inputs": 4,
        "outputs": [
            "scores"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "errorStrategy 'ignore'"
        ],
        "when": "",
        "stub": ""
    },
    "join_results": {
        "name_process": "join_results",
        "string_process": "\nprocess join_results {\n\n    executor = 'local'\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file \"*\" from scores.collect()\n\n    output:\n        file 'scored_interactions.high_order_glm.tsv'\n\n    \"\"\"\n    echo \"snp_set\\ttest\\tpvalue\" >scored_interactions.high_order_glm.tsv\n    for file in scores_*\n    do\n        cat \"\\$file\" >>scored_interactions.high_order_glm.tsv\n    done\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    echo \"snp_set\\ttest\\tpvalue\" >scored_interactions.high_order_glm.tsv\n    for file in scores_*\n    do\n        cat \"\\$file\" >>scored_interactions.high_order_glm.tsv\n    done\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "scores"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "executor = 'local'",
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "dmgwas": {
        "name_process": "dmgwas",
        "string_process": "\nprocess dmgwas {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file VEGAS_OUT\n        file TAB2\n        val D from params.d\n        val R from params.r\n\n    output:\n        file 'selected_genes.dmgwas.txt'\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(dmGWAS)\n    library(tidyverse)\n\n    vegas <- read_tsv('${VEGAS_OUT}') %>% \n        select(Gene, Pvalue) %>%\n        mutate(Pvalue = ifelse(Pvalue == 1, 0.99999, Pvalue)) %>%\n        as.data.frame\n    ppi <- read_tsv('${TAB2}',\n\t\t    col_types = 'cccccccccccccccccccccccc') %>%\n        rename(interactorA = `Official Symbol Interactor A`, \n               interactorB = `Official Symbol Interactor B`) %>%\n        select(interactorA, interactorB)\n\n    modules <- dms(ppi, vegas, expr1 = NULL, expr2 = NULL, r = ${R}, d = ${D})\n    top <- simpleChoose(modules)\n\n    tibble(gene = names(V(top\\$subnetwork))) %>%\n        write_tsv('selected_genes.dmgwas.txt')\n    \"\"\"\n\n}",
        "nb_lignes_process": 36,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(dmGWAS)\n    library(tidyverse)\n\n    vegas <- read_tsv('${VEGAS_OUT}') %>% \n        select(Gene, Pvalue) %>%\n        mutate(Pvalue = ifelse(Pvalue == 1, 0.99999, Pvalue)) %>%\n        as.data.frame\n    ppi <- read_tsv('${TAB2}',\n\t\t    col_types = 'cccccccccccccccccccccccc') %>%\n        rename(interactorA = `Official Symbol Interactor A`, \n               interactorB = `Official Symbol Interactor B`) %>%\n        select(interactorA, interactorB)\n\n    modules <- dms(ppi, vegas, expr1 = NULL, expr2 = NULL, r = ${R}, d = ${D})\n    top <- simpleChoose(modules)\n\n    tibble(gene = names(V(top\\$subnetwork))) %>%\n        write_tsv('selected_genes.dmgwas.txt')\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "VEGAS_OUT",
            "TAB2",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "bed2gen": {
        "name_process": "bed2gen",
        "string_process": "\nprocess bed2gen {\n\n    input:\n    file BED from bed\n    file BIM from bim\n    file FAM from fam\n\n    output:\n    file 'out.gen' into gen\n    file 'out.sample' into sample\n\n    script:\n    template 'io/bed2gen.sh'\n\n}",
        "nb_lignes_process": 14,
        "string_script": "    template 'io/bed2gen.sh'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "gen",
            "sample"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "make_pheno": {
        "name_process": "make_pheno",
        "string_process": "\nprocess make_pheno {\n\n    input:\n    file FAM from fam\n\n    output:\n    file 'pheno.csv' into pheno\n\n    script:\n    \"\"\"\n    cut -d' ' -f6 ${FAM} >pheno.csv\n    \"\"\"\n\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    cut -d' ' -f6 ${FAM} >pheno.csv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pheno"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "genepi": {
        "name_process": "genepi",
        "string_process": "\nprocess genepi {\n\n    publishDir \"$params.out\", overwrite: true, mode: 'copy'\n\n    input:\n    file GEN from gen\n    file PHENO from pheno\n    val PHENO_TYPE from pheno_type \n\n    output:\n    file 'crossGeneResult/Result.csv'\n\n    script:\n    \"\"\"\n    GenEpi -g ${GEN} -p ${PHENO} -m ${PHENO_TYPE} -o ./\n    \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    GenEpi -g ${GEN} -p ${PHENO} -m ${PHENO_TYPE} -o ./\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GenEpi"
        ],
        "tools_url": [
            "https://bio.tools/genepi"
        ],
        "tools_dico": [
            {
                "name": "GenEpi",
                "uri": "https://bio.tools/genepi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3935",
                                    "term": "Dimensionality reduction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3935",
                                    "term": "Dimension reduction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Gene-based epistasis discovery using machine learning.\n\nGenEpi is a package to uncover epistasis associated with phenotypes by a machine learning approach, developed by Yu-Chuan Chang at c4Lab of National Taiwan University and Taiwan AI Labs.",
                "homepage": "https://github.com/Chester75321/GenEpi"
            }
        ],
        "inputs": [
            "gen",
            "pheno",
            "pheno_type"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "r2aes": {
        "name_process": "r2aes",
        "string_process": "\nprocess r2aes {\n\n    input:\n        file rdata\n\n    output:\n        file \"genotypes.aes\" into aes_data\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(snpStats)\n    load(\"$rdata\")\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    Y <- gwas\\$fam\\$affected - 1\n\n    cbind(X,Y) %>% as.data.frame %>% write_csv(\"genotypes.aes\")\n    \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(snpStats)\n    load(\"$rdata\")\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    Y <- gwas\\$fam\\$affected - 1\n\n    cbind(X,Y) %>% as.data.frame %>% write_csv(\"genotypes.aes\")\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rdata"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aes_data"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "antepiseeker": {
        "name_process": "antepiseeker",
        "string_process": "\nprocess antepiseeker {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n                         \n\n    input:\n        val N from n_snps\n        file AES_IN from aes_data\n\n    output:\n        file \"scored_interactions.antepiseeker.txt\"\n\n    \"\"\"\n    cat << EOF >parameters.txt\n    iAntCount        5000         // number of ants\n    iItCountLarge    ${(N * 0.1).intValue()}   // number of iterations for the large haplotypes\n    iItCountSmall    ${(N * 0.05).intValue()}  // number of iterations for the small haplotypes\n    alpha            1            // weight given to pheromone deposited by ants\n    iTopModel        1000         // number of top ranking haplotypes in the first stage\n    iTopLoci         1000         // number of loci with top ranking pheromone in the first stage\n    rou              0.05         // evaporation rate in Ant Colony Optimization\n    phe              100          // initial pheromone level for each locus\n    largehapsize     6            // size of the large haplotypes\n    smallhapsize     3            // size of the small haplotypes\n    iEpiModel        2            // number of SNPs in an epistatic interaction\n    pvalue           0.01         // p value threshold (after Bonferroni correction)\n    INPFILE          ${AES_IN}    // input file name for case-control genotype data\n    OUTFILE          result.txt   // output file name for detected epistatic interactions\n    EOF\n\n    AntEpiSeeker\n\n    echo -e \"snp1\\\\tsnp2\\\\tchi2\\\\tp\" >scored_interactions.antepiseeker.txt\n    tail -n+3 result.txt | sed -E 's/[0-9]+\\\\(//g' | sed 's/)//g' | sed -E 's/[ \\\\t]+/\\\\t/g' >>scored_interactions.antepiseeker.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 36,
        "string_script": "\"\"\"\n    cat << EOF >parameters.txt\n    iAntCount        5000         // number of ants\n    iItCountLarge    ${(N * 0.1).intValue()}   // number of iterations for the large haplotypes\n    iItCountSmall    ${(N * 0.05).intValue()}  // number of iterations for the small haplotypes\n    alpha            1            // weight given to pheromone deposited by ants\n    iTopModel        1000         // number of top ranking haplotypes in the first stage\n    iTopLoci         1000         // number of loci with top ranking pheromone in the first stage\n    rou              0.05         // evaporation rate in Ant Colony Optimization\n    phe              100          // initial pheromone level for each locus\n    largehapsize     6            // size of the large haplotypes\n    smallhapsize     3            // size of the small haplotypes\n    iEpiModel        2            // number of SNPs in an epistatic interaction\n    pvalue           0.01         // p value threshold (after Bonferroni correction)\n    INPFILE          ${AES_IN}    // input file name for case-control genotype data\n    OUTFILE          result.txt   // output file name for detected epistatic interactions\n    EOF\n\n    AntEpiSeeker\n\n    echo -e \"snp1\\\\tsnp2\\\\tchi2\\\\tp\" >scored_interactions.antepiseeker.txt\n    tail -n+3 result.txt | sed -E 's/[0-9]+\\\\(//g' | sed 's/)//g' | sed -E 's/[ \\\\t]+/\\\\t/g' >>scored_interactions.antepiseeker.txt\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "ALPHA",
            "Rouge",
            "Pheg",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/alpha",
            "https://bio.tools/rouge",
            "https://bio.tools/pheg",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "ALPHA",
                "uri": "https://bio.tools/alpha",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0324",
                                    "term": "Phylogenetic analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0324",
                                    "term": "Phylogenetic tree analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Automated Local PHylogenomic Analyses.",
                "homepage": "https://github.com/chilleo/ALPHA"
            },
            {
                "name": "Rouge",
                "uri": "https://bio.tools/rouge",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2393",
                                "term": "mFLJ/mKIAA number"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0916",
                                "term": "Gene report"
                            }
                        ]
                    }
                ],
                "description": "A sister database of HUGE protein database which has accumulated the results of comprehensive sequence analysis of human long cDNAs (KIAA cDNAs). The database has been created to publicize the information obtained from mouse homologues of the KIAA cDNAs (mKIAA cDNAs).",
                "homepage": "http://www.kazusa.or.jp/rouge/"
            },
            {
                "name": "Pheg",
                "uri": "https://bio.tools/pheg",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Human biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3047",
                            "term": "Molecular biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Humans"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Accurate prediction of human essential genes using only nucleotide composition and association information.",
                "homepage": "http://cefg.uestc.edu.cn/Pheg/"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "n_snps",
            "aes_data"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "bed2ped": {
        "name_process": "bed2ped",
        "string_process": "\nprocess bed2ped {\n\n    input:\n        file BED from bed\n        file BIM from bim\n        file FAM from fam\n\n    output:\n        file 'out.ped' into ped\n\n    script:\n    template 'io/bed2ped.R'\n\n}",
        "nb_lignes_process": 13,
        "string_script": "    template 'io/bed2ped.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ped"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "ped2mbmdr": {
        "name_process": "ped2mbmdr",
        "string_process": "\nprocess ped2mbmdr {\n\n    input:\n        file PED from ped\n        file MAP from map\n        val MODE from params.mode\n\n    output:\n        file \"mbmdrFile\" into mbmdrFile\n        file \"labels\" into mbmdrLabels\n\n    \"\"\"\n    echo -e 'chr\\tname\\tcM\\tpos' >fixed.map\n    cat ${MAP} >>fixed.map\n\n    mbmdr --plink2mbmdr --${MODE} -ped ${PED} -map fixed.map -o mbmdrFile -tr labels\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    echo -e 'chr\\tname\\tcM\\tpos' >fixed.map\n    cat ${MAP} >>fixed.map\n\n    mbmdr --plink2mbmdr --${MODE} -ped ${PED} -map fixed.map -o mbmdrFile -tr labels\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ped",
            "map",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [
            "mbmdrFile",
            "mbmdrLabels"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "compute_top_vectors": {
        "name_process": "compute_top_vectors",
        "string_process": "\nprocess compute_top_vectors {\n\n    errorStrategy 'retry'\n    maxRetries 3\n\n    input:\n        each I from 1..params.N\n        val N from params.N\n        file INPUT from mbmdrFile_1\n        val MODE from params.mode\n\n    output:\n        file \"top*.txt\" into topFiles\n\n    \"\"\"\n    mbmdr --${MODE} --gammastep1 -r 2019 -i ${I} -N ${N} ${INPUT}\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    mbmdr --${MODE} --gammastep1 -r 2019 -i ${I} -N ${N} ${INPUT}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "1",
            "params",
            "mbmdrFile_1",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "topFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "errorStrategy 'retry'",
            "maxRetries 3"
        ],
        "when": "",
        "stub": ""
    },
    "merge_top_vectors": {
        "name_process": "merge_top_vectors",
        "string_process": "\nprocess merge_top_vectors {\n\n    input:\n        file \"top*.txt\" from topFiles.collect()\n        file INPUT from mbmdrFile_2\n        val MODE from params.mode\n        val N from params.N\n\n    output:\n        file \"topFile.txt\" into topFile\n\n    \"\"\"\n    mbmdr --${MODE} --gammastep2 -r 2019 -N ${N} ${INPUT}\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    mbmdr --${MODE} --gammastep2 -r 2019 -N ${N} ${INPUT}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "topFiles",
            "mbmdrFile_2",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "topFile"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "compute_permutations": {
        "name_process": "compute_permutations",
        "string_process": "\nprocess compute_permutations {\n\n    errorStrategy 'retry'\n    maxRetries 3\n\n    input:\n        each I from 1..params.N\n        file TOP from topFile_permutations\n        file INPUT from mbmdrFile_3\n        val MODE from params.mode\n\n    output:\n        file \"perm_*\" into permutFiles\n\n    \"\"\"\n    mbmdr --${MODE} --gammastep3 -r 2019 -p 1 -o perm_${I}.txt -t ${TOP} ${INPUT}\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    mbmdr --${MODE} --gammastep3 -r 2019 -p 1 -o perm_${I}.txt -t ${TOP} ${INPUT}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "1",
            "topFile_permutations",
            "mbmdrFile_3",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "permutFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "errorStrategy 'retry'",
            "maxRetries 3"
        ],
        "when": "",
        "stub": ""
    },
    "merge_permutations": {
        "name_process": "merge_permutations",
        "string_process": "\nprocess merge_permutations {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file \"perm_*.txt\" from permutFiles.collect()\n        val N from params.N\n        file TOP from topFile_4\n        file INPUT from mbmdrFile_4\n        val MODE from params.mode\n\n    output:\n        file \"scored_interactions.mbmdr.txt\"\n\n    \"\"\"\n    mbmdr --${MODE} --gammastep4 -r 2019 -c perm_ -q ${N} -t ${TOP} ${INPUT}\n    mv *_output.txt scored_interactions.mbmdr.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    mbmdr --${MODE} --gammastep4 -r 2019 -c perm_ -q ${N} -t ${TOP} ${INPUT}\n    mv *_output.txt scored_interactions.mbmdr.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "permutFiles",
            "params",
            "topFile_4",
            "mbmdrFile_4",
            "params"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "casmap": {
        "name_process": "casmap",
        "string_process": "\nprocess casmap {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file RGWAS from rgwas\n\n    output:\n        file 'scored_interactions.casmap.tsv'\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(CASMAP)\n    library(tidyverse)\n\n    load('${RGWAS}')\n\n    # make data files\n    X <- as(gwas[['genotypes']], 'numeric')\n    X[is.na(X)] = 0 # change?\n    X[X >= 1] = 1 # dominant encoding\n    write.table(t(X), 'genotypes.tsv', sep = ' ',\n                col.names = FALSE, row.names = FALSE)\n\n    y <- gwas[['fam']][['affected']] - 1\n    write.table(y, 'phenotypes.tsv', sep = ' ',\n                col.names = FALSE, row.names = FALSE)\n\n    # run casmap\n    cm <- CASMAP(mode=\"higherOrderEpistasis\")\n    cm\\$readFiles(genotype_file   = 'genotypes.tsv',\n                  phenotype_file  = 'phenotypes.tsv') \n                  # covariate_file  = 'covariates.tsv')\n\n    cm\\$execute()\n\n    # prepare output\n    results <- cm\\$getSignificantInteractions()\n    snps <- rownames(gwas[['map']])\n\n    mutate(results,\n           itemsets = lapply(itemsets, function(i) snps[i]) %>% lapply(paste, collapse = ',') %>% unlist) %>% \n        write_tsv(path = 'scored_interactions.casmap.tsv')\n    \"\"\"\n\n}",
        "nb_lignes_process": 46,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(CASMAP)\n    library(tidyverse)\n\n    load('${RGWAS}')\n\n    # make data files\n    X <- as(gwas[['genotypes']], 'numeric')\n    X[is.na(X)] = 0 # change?\n    X[X >= 1] = 1 # dominant encoding\n    write.table(t(X), 'genotypes.tsv', sep = ' ',\n                col.names = FALSE, row.names = FALSE)\n\n    y <- gwas[['fam']][['affected']] - 1\n    write.table(y, 'phenotypes.tsv', sep = ' ',\n                col.names = FALSE, row.names = FALSE)\n\n    # run casmap\n    cm <- CASMAP(mode=\"higherOrderEpistasis\")\n    cm\\$readFiles(genotype_file   = 'genotypes.tsv',\n                  phenotype_file  = 'phenotypes.tsv') \n                  # covariate_file  = 'covariates.tsv')\n\n    cm\\$execute()\n\n    # prepare output\n    results <- cm\\$getSignificantInteractions()\n    snps <- rownames(gwas[['map']])\n\n    mutate(results,\n           itemsets = lapply(itemsets, function(i) snps[i]) %>% lapply(paste, collapse = ',') %>% unlist) %>% \n        write_tsv(path = 'scored_interactions.casmap.tsv')\n    \"\"\"",
        "nb_lignes_script": 34,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "gpuepiscan": {
        "name_process": "gpuepiscan",
        "string_process": "\nprocess gpuepiscan {\n\n        publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n        input:\n          file RGWAS from rgwas\n\n        output:\n          file 'scored_interactions.episcan.tsv'\n\n        script:\n        \"\"\"\n        #!/usr/bin/env Rscript\n\n        library(gpuEpiScan)\n        library(tidyverse)\n        library(bigmemory)\n\n        load('${RGWAS}')\n        \n        # read dataset\n        X <- as(gwas[['genotypes']], 'numeric') # %>% as.big.matrix\n        y <- gwas[['fam']][['affected']] - 1\n\n        gpuEpiScan(geno1 = X,\n                   pheno = y,\n                   phetype = \"quantitative\",\n                   outfile = \"scored_interactions.episcan\", \n                   suffix = \".txt\" \n                  )\n        \n        system2('sed', args = c(\"'s/ /\\t/g'\", 'scored_interactions.episcan.txt'),\n                stdout = 'scored_interactions.episcan.tsv')\n        \"\"\"\n\n}",
        "nb_lignes_process": 35,
        "string_script": "        \"\"\"\n        #!/usr/bin/env Rscript\n\n        library(gpuEpiScan)\n        library(tidyverse)\n        library(bigmemory)\n\n        load('${RGWAS}')\n        \n        # read dataset\n        X <- as(gwas[['genotypes']], 'numeric') # %>% as.big.matrix\n        y <- gwas[['fam']][['affected']] - 1\n\n        gpuEpiScan(geno1 = X,\n                   pheno = y,\n                   phetype = \"quantitative\",\n                   outfile = \"scored_interactions.episcan\", \n                   suffix = \".txt\" \n                  )\n        \n        system2('sed', args = c(\"'s/ /\\t/g'\", 'scored_interactions.episcan.txt'),\n                stdout = 'scored_interactions.episcan.tsv')\n        \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "make_snp_models": {
        "name_process": "make_snp_models",
        "string_process": "\nprocess make_snp_models {\n\n    input:\n        file SNP_MODELS from gene_models_split\n        file SNP2GENE from snp2gene\n\n    output:\n        file 'snp_models_split.tsv' into snp_models_split\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    snp2gene <- read_tsv(\"${SNP2GENE}\")\n\n    read_tsv(\"${SNP_MODELS}\") %>%\n        inner_join(snp2gene, by = c('#gene1' = 'gene')) %>%\n        inner_join(snp2gene, by = c('gene2' = 'gene'), suffix = c(\"_1\", \"_2\")) %>%\n        filter(snp_1 != snp_2) %>%\n        rename(gene_1 = `#gene1`, gene_2 = gene2) %>%\n        select(snp_1, gene_1, snp_2, gene_2, `score(src-grp)`) %>%\n        separate(`score(src-grp)`, into = c('num_sources', 'num_instances'), sep = '-') %>%\n        write_tsv('snp_models_split.tsv', col_names = FALSE)\n    \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    snp2gene <- read_tsv(\"${SNP2GENE}\")\n\n    read_tsv(\"${SNP_MODELS}\") %>%\n        inner_join(snp2gene, by = c('#gene1' = 'gene')) %>%\n        inner_join(snp2gene, by = c('gene2' = 'gene'), suffix = c(\"_1\", \"_2\")) %>%\n        filter(snp_1 != snp_2) %>%\n        rename(gene_1 = `#gene1`, gene_2 = gene2) %>%\n        select(snp_1, gene_1, snp_2, gene_2, `score(src-grp)`) %>%\n        separate(`score(src-grp)`, into = c('num_sources', 'num_instances'), sep = '-') %>%\n        write_tsv('snp_models_split.tsv', col_names = FALSE)\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gene_models_split",
            "snp2gene"
        ],
        "nb_inputs": 2,
        "outputs": [
            "snp_models_split"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "preprocess_data": {
        "name_process": "preprocess_data",
        "string_process": "\nprocess preprocess_data {\n\n\tinput:\n\t\tfile BED from bed\n\t\tfile bim\n\t\tfile FAM from fam\n\t\tfile SNP2SNP from snp2snp_1 \n\t\tfile EXCLUDED from excluded_snps\n\t\tval I from params.nperm\n\n\toutput:\n\t\tset 'post_qc.bed', 'post_qc.bim', 'post_qc.fam', 'pheno' into filtered_bed_pipeline, filtered_bed_qc\n\t\tfile 'snps_75.prune.in' into qc_snps\n\n\t\"\"\"\n\t# QC + keep only SNPs in models + remove excluded SNPs\n\tcut -f3 ${SNP2SNP} >tmp\n\tcut -f4 ${SNP2SNP} >>tmp\n\tsort tmp | uniq >snps_in_models\n\tcomm -3 snps_in_models <(sort ${EXCLUDED}) >included_snps\n\tplink -bfile ${BED.baseName} -extract included_snps -maf 0.05 -hwe 0.001 -make-bed -out filtered \n\n\t# LD pruning\n\tplink -bfile filtered -indep-pairwise 50 5 0.75 -out snps_75\n\tplink -bfile filtered -extract snps_75.prune.in -make-bed -out post_qc\n\n\t# create pheno file\n\tcut -d' ' -f6 ${FAM} >orig\n\tcut -d' ' -f1,2,6 ${FAM} | sed 's/ /\\t/g'  >pheno\n\tfor i in {1..${I}}\n\tdo\n\t\tshuf orig >tmp1\n\t\tpaste pheno tmp1 >tmp2\n\t\tmv tmp2 pheno\n\tdone\n\t\"\"\"\n\n}",
        "nb_lignes_process": 37,
        "string_script": "\"\"\"\n\t# QC + keep only SNPs in models + remove excluded SNPs\n\tcut -f3 ${SNP2SNP} >tmp\n\tcut -f4 ${SNP2SNP} >>tmp\n\tsort tmp | uniq >snps_in_models\n\tcomm -3 snps_in_models <(sort ${EXCLUDED}) >included_snps\n\tplink -bfile ${BED.baseName} -extract included_snps -maf 0.05 -hwe 0.001 -make-bed -out filtered \n\n\t# LD pruning\n\tplink -bfile filtered -indep-pairwise 50 5 0.75 -out snps_75\n\tplink -bfile filtered -extract snps_75.prune.in -make-bed -out post_qc\n\n\t# create pheno file\n\tcut -d' ' -f6 ${FAM} >orig\n\tcut -d' ' -f1,2,6 ${FAM} | sed 's/ /\\t/g'  >pheno\n\tfor i in {1..${I}}\n\tdo\n\t\tshuf orig >tmp1\n\t\tpaste pheno tmp1 >tmp2\n\t\tmv tmp2 pheno\n\tdone\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "TMPD",
            "COMMA",
            "pLink",
            "GenOrigin",
            "PHENO"
        ],
        "tools_url": [
            "https://bio.tools/tmpd",
            "https://bio.tools/comma",
            "https://bio.tools/pLink-2",
            "https://bio.tools/genorigin",
            "https://bio.tools/PHENO"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            },
            {
                "name": "COMMA",
                "uri": "https://bio.tools/comma",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "COMMA (COMmunication MApping) is a method to dissect proteins dynamical architectures.",
                "homepage": "http://www.lcqb.upmc.fr/COMMA/COMMA.html"
            },
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            },
            {
                "name": "GenOrigin",
                "uri": "https://bio.tools/genorigin",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0553",
                                    "term": "Gene tree construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3672",
                                    "term": "Gene functional annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3947",
                                    "term": "Phylogenetic tree reconciliation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0553",
                                    "term": "Phylogenetic tree analysis (gene family prediction)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3672",
                                    "term": "Sequence functional annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3947",
                                    "term": "Gene tree / species tree reconciliation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Comprehensive Protein-coding Gene Origination Database on the Evolutionary Timescale of Life.",
                "homepage": "http://genorigin.chenzxlab.cn/"
            },
            {
                "name": "PHENO",
                "uri": "https://bio.tools/PHENO",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0920",
                                "term": "Genotype/phenotype report"
                            }
                        ]
                    }
                ],
                "description": "PHENO aims to provide access to plant phenotypic datasets, with a major focus on the woody plant domain.\n\nPlant phenotyping is central to plant research and breeding and is becoming increasingly throughput, with large amounts of data being generated from diverse experimental settings. Access to phenotypic datasets annotated according to widely accepted standards contributes for data interoperability, enabling powerful genotype-phenotype association studies.",
                "homepage": "https://brapi.biodata.pt"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam",
            "snp2snp_1",
            "excluded_snps",
            "params"
        ],
        "nb_inputs": 6,
        "outputs": [
            "filtered_bed_pipeline",
            "filtered_bed_qc",
            "qc_snps"
        ],
        "nb_outputs": 3,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "snp_epistasis": {
        "name_process": "snp_epistasis",
        "string_process": "\nprocess snp_epistasis {\n\n\ttag { \"${I}\" }\n\n\tinput:\n\t\teach I from 1..(params.nperm + 1)\n\t\tset file(BED), file(BIM), file(FAM), file(PHENO) from filtered_bed_pipeline\n\t\tfile SNP2SNP from snp2snp_2\n\n\toutput:\n\t\tset val(I), 'scored_interactions.regression.txt' into snp_pairs, snp_pairs_null \n\n\t\"\"\"\n\tepistasis_regression.nf --bfile ${BED.baseName} --pheno ${PHENO} --i ${I} -profile cluster\n\n\tif [ `wc -l < scored_interactions.regression.txt` -gt \"1\" ]; then\n\t\t# exhaustive LD pruning\n\t\tcut -f1 scored_interactions.regression.txt >tmp\n\t\tcut -f2 scored_interactions.regression.txt >>tmp\n\t\tsort tmp | uniq >included_snps\n\n\t\tplink -bfile ${BED.baseName} -extract included_snps -allow-no-sex -r2\n\t\tsed 's/^ \\\\+//' plink.ld | sed 's/ \\\\+/\\t/g' | sed 's/\\t\\$//' >ld.tsv\n\n\t\tR -e '\n\t\tlibrary(tidyverse); \n\t\tld_ok <- read_tsv(\"ld.tsv\", col_types = \"idcidcd\") %>%\n\t\tfilter(R2 < 0.75) %>%\n\t\tmutate(uniq_snp_id = cbind(SNP_A, SNP_B) %>% apply(1, sort) %>% apply(2, paste, collapse = \"_\")) %>%\n\t\t.\\$uniq_snp_id\n\t\tsnp_models <- read_tsv(\"${SNP2SNP}\") %>%\n\t\t.\\$uniq_snp_id\t\n\t\tread_tsv(\"scored_interactions.regression.txt\", col_types = \"ccccddd\") %>%\n\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = \"_\")) %>%\n\t\tfilter(uniq_snp_id %in% ld_ok & uniq_snp_id %in% snp_models) %>%\n\t\twrite_tsv(\"scored_interactions.regression.txt\")'\n\telse\n\t\techo \"`cat scored_interactions.regression.txt`\\tuniq_snp_id\" >header\n\t\tsed 's/\\tP\\t/\\t0.0001\\t/' header | sed 's/\\tSTAT\\t/\\t0\\t/' | sed 's/\\tBETA_INT\\t/\\t0\\t/' >vals\n\t\tcat header vals >scored_interactions.regression.txt\n\tfi\n\t\"\"\" \n\n}",
        "nb_lignes_process": 43,
        "string_script": "\"\"\"\n\tepistasis_regression.nf --bfile ${BED.baseName} --pheno ${PHENO} --i ${I} -profile cluster\n\n\tif [ `wc -l < scored_interactions.regression.txt` -gt \"1\" ]; then\n\t\t# exhaustive LD pruning\n\t\tcut -f1 scored_interactions.regression.txt >tmp\n\t\tcut -f2 scored_interactions.regression.txt >>tmp\n\t\tsort tmp | uniq >included_snps\n\n\t\tplink -bfile ${BED.baseName} -extract included_snps -allow-no-sex -r2\n\t\tsed 's/^ \\\\+//' plink.ld | sed 's/ \\\\+/\\t/g' | sed 's/\\t\\$//' >ld.tsv\n\n\t\tR -e '\n\t\tlibrary(tidyverse); \n\t\tld_ok <- read_tsv(\"ld.tsv\", col_types = \"idcidcd\") %>%\n\t\tfilter(R2 < 0.75) %>%\n\t\tmutate(uniq_snp_id = cbind(SNP_A, SNP_B) %>% apply(1, sort) %>% apply(2, paste, collapse = \"_\")) %>%\n\t\t.\\$uniq_snp_id\n\t\tsnp_models <- read_tsv(\"${SNP2SNP}\") %>%\n\t\t.\\$uniq_snp_id\t\n\t\tread_tsv(\"scored_interactions.regression.txt\", col_types = \"ccccddd\") %>%\n\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = \"_\")) %>%\n\t\tfilter(uniq_snp_id %in% ld_ok & uniq_snp_id %in% snp_models) %>%\n\t\twrite_tsv(\"scored_interactions.regression.txt\")'\n\telse\n\t\techo \"`cat scored_interactions.regression.txt`\\tuniq_snp_id\" >header\n\t\tsed 's/\\tP\\t/\\t0.0001\\t/' header | sed 's/\\tSTAT\\t/\\t0\\t/' | sed 's/\\tBETA_INT\\t/\\t0\\t/' >vals\n\t\tcat header vals >scored_interactions.regression.txt\n\tfi\n\t\"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [
            "TMPD",
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/tmpd",
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            },
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "1",
            "filtered_bed_pipeline",
            "snp2snp_2"
        ],
        "nb_inputs": 3,
        "outputs": [
            "snp_pairs",
            "snp_pairs_null"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "tag { \"${I}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "gene_epistasis": {
        "name_process": "gene_epistasis",
        "string_process": "\nprocess gene_epistasis {\n\t\n\ttag { \"${I}\" }\n\n\tinput:\n\t\tfile 'permuted_association_*' from snp_pairs_null_filtered .collect()\n\t\tset I, file(SNP_PAIRS) from snp_pairs\n\t\tfile SNP2GENE from snp2gene\n\t\tfile SNP2SNP from snp2snp_3 \n\t\tfile TAB2 from tab2\n\n\toutput:\n\t\tset val(I), 'scored_gene_pairs.tsv' into scored_gene_pairs, scored_gene_pairs_null\n\t\tfile 'sign_snp_pairs.tsv' optional true into sign_snp_pairs\n\n\t\"\"\"\n\t#!/usr/bin/env Rscript\n\n\tlibrary(tidyverse)\n\tlibrary(data.table)\n\n\tsnp2snp <- read_tsv('$SNP2SNP', col_types = 'cccccc') %>%\n\t\tdata.table\n\tsnp2gene <- read_tsv('$SNP2GENE', col_types = 'cc')\n\tthreshold <- lapply(list.files(pattern = 'permuted_association_'), function(x) {\n\t\t\tread_tsv(x, col_types = 'ccccddd') %>%\n\t\t\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\t\t\tdata.table %>%\n\t\t\t\tmerge(snp2snp, by = 'uniq_snp_id', allow.cartesian = TRUE) %>%\n\t\t\t\tarrange(P) %>%\n\t\t\t\thead(1) %>%\n\t\t\t\tselect(P)\n\t\t\t}) %>%\n\t\tdo.call(bind_rows, .) %>%\n\t\t.\\$P %>%\n\t\tquantile(.05)\n\n\tsnp_pairs <- read_tsv('${SNP_PAIRS}', col_types = 'ccccddd') %>%\n\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\tfilter(P < threshold) %>%\n\t\tmutate(Padj = (P * .05) / threshold) %>%\n\t\tinner_join(snp2snp, by = 'uniq_snp_id') %>%\n\t\tselect(uniq_snp_id, Padj)\n\n\tif (${I} == 1) {\n\t\tseparate(snp_pairs, uniq_snp_id, into = c('snp_1','snp_2'), sep = '_') %>%\n\t\t\tunique %>%\n\t\t\twrite_tsv('sign_snp_pairs.tsv')\n\t}\n\n\tread_tsv('${TAB2}', col_types = cols(.default = col_character())) %>%\n\t\tinner_join(snp2gene, ., by = c('gene' = 'Official Symbol Interactor A')) %>%\n\t\tinner_join(snp2gene, ., by = c('gene' = 'Official Symbol Interactor B'), suffix = c('_1','_2')) %>%\n\t\trename(gene_1 = gene) %>%\n\t\tmutate(uniq_snp_id = cbind(snp_1, snp_2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_'),\n\t\t\t   uniq_gene_id = cbind(gene_1, gene_2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\tinner_join(snp_pairs, by = 'uniq_snp_id') %>%\n\t\tgroup_by(uniq_gene_id) %>%\n\t\tsummarize(tau_05 = prod(Padj[Padj < 0.05]),\n\t\t\t\t  tau_01 = prod(Padj[Padj < 0.01]),\n\t\t\t\t  tau_001 = prod(Padj[Padj < 0.001]),\n\t\t\t \t  snp_pairs = paste(unique(uniq_snp_id), collapse = ',')) %>%\n        write_tsv('scored_gene_pairs.tsv')\n    \"\"\"\n\n}",
        "nb_lignes_process": 65,
        "string_script": "\"\"\"\n\t#!/usr/bin/env Rscript\n\n\tlibrary(tidyverse)\n\tlibrary(data.table)\n\n\tsnp2snp <- read_tsv('$SNP2SNP', col_types = 'cccccc') %>%\n\t\tdata.table\n\tsnp2gene <- read_tsv('$SNP2GENE', col_types = 'cc')\n\tthreshold <- lapply(list.files(pattern = 'permuted_association_'), function(x) {\n\t\t\tread_tsv(x, col_types = 'ccccddd') %>%\n\t\t\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\t\t\tdata.table %>%\n\t\t\t\tmerge(snp2snp, by = 'uniq_snp_id', allow.cartesian = TRUE) %>%\n\t\t\t\tarrange(P) %>%\n\t\t\t\thead(1) %>%\n\t\t\t\tselect(P)\n\t\t\t}) %>%\n\t\tdo.call(bind_rows, .) %>%\n\t\t.\\$P %>%\n\t\tquantile(.05)\n\n\tsnp_pairs <- read_tsv('${SNP_PAIRS}', col_types = 'ccccddd') %>%\n\t\tmutate(uniq_snp_id = cbind(SNP1, SNP2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\tfilter(P < threshold) %>%\n\t\tmutate(Padj = (P * .05) / threshold) %>%\n\t\tinner_join(snp2snp, by = 'uniq_snp_id') %>%\n\t\tselect(uniq_snp_id, Padj)\n\n\tif (${I} == 1) {\n\t\tseparate(snp_pairs, uniq_snp_id, into = c('snp_1','snp_2'), sep = '_') %>%\n\t\t\tunique %>%\n\t\t\twrite_tsv('sign_snp_pairs.tsv')\n\t}\n\n\tread_tsv('${TAB2}', col_types = cols(.default = col_character())) %>%\n\t\tinner_join(snp2gene, ., by = c('gene' = 'Official Symbol Interactor A')) %>%\n\t\tinner_join(snp2gene, ., by = c('gene' = 'Official Symbol Interactor B'), suffix = c('_1','_2')) %>%\n\t\trename(gene_1 = gene) %>%\n\t\tmutate(uniq_snp_id = cbind(snp_1, snp_2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_'),\n\t\t\t   uniq_gene_id = cbind(gene_1, gene_2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n\t\tinner_join(snp_pairs, by = 'uniq_snp_id') %>%\n\t\tgroup_by(uniq_gene_id) %>%\n\t\tsummarize(tau_05 = prod(Padj[Padj < 0.05]),\n\t\t\t\t  tau_01 = prod(Padj[Padj < 0.01]),\n\t\t\t\t  tau_001 = prod(Padj[Padj < 0.001]),\n\t\t\t \t  snp_pairs = paste(unique(uniq_snp_id), collapse = ',')) %>%\n        write_tsv('scored_gene_pairs.tsv')\n    \"\"\"",
        "nb_lignes_script": 48,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "snp_pairs_null_filtered",
            "snp_pairs",
            "snp2gene",
            "snp2snp_3",
            "tab2"
        ],
        "nb_inputs": 5,
        "outputs": [
            "scored_gene_pairs",
            "scored_gene_pairs_null",
            "sign_snp_pairs"
        ],
        "nb_outputs": 3,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "tag { \"${I}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "pathway_epistasis": {
        "name_process": "pathway_epistasis",
        "string_process": "\nprocess pathway_epistasis {\n\n\tpublishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n\tinput:\n\t\tfile 'permuted_association_*' from gene_pairs_null .collect()\n\t\tfile GENE_PAIRS from gene_pairs\n\t\tfile SNP2GENE from snp2gene\n\t\tfile TAB2 from tab2\n\t\tfile SNPS from qc_snps                                \n\n\toutput:\n\t\tfile 'sign_gene_pairs.tsv'\n\t\tfile 'sign_pathways.tsv'\n\n\t\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(igraph)\n    library(clusterProfiler)\n    library(msigdbr)\n\n    # compute gene-pair association\n    gene_pairs <- read_tsv('${GENE_PAIRS}') %>%\n        mutate(experiment = 'original')\n    studied_gene_pairs <- gene_pairs\\$uniq_gene_id\t\t\n    permutations <- list.files(pattern = 'permuted_association_')\n    N <- length(permutations) + 1\n\n    gene_pairs_assoc <- lapply(permutations, function(x) {\n        read_tsv(x, col_types = 'cdddc') %>%\n            filter(uniq_gene_id %in% studied_gene_pairs)\n    }) %>%\n        do.call(bind_rows, .) %>%\n        mutate(experiment = 'permutation') %>%\n        bind_rows(gene_pairs) %>%\n        group_by(uniq_gene_id) %>%\n        mutate(P_tau_05 = rank(tau_05) / N,\n               P_tau_01 = rank(tau_01) / N, \n               P_tau_001 = rank(tau_001) / N,\n               min_P = pmin(P_tau_05, P_tau_01, P_tau_001),\n               P = rank(min_P) / N ) %>%\n        filter(experiment == 'original') %>%\n        separate(uniq_gene_id, into = c('gene_1', 'gene_2'), sep = '_') %>%\n        select(-experiment) %>%\n        select(gene_1, gene_2, P, everything())\n    write_tsv(gene_pairs_assoc, 'sign_gene_pairs.tsv')\n    \n    sign_pairs <- filter(gene_pairs_assoc, P < .05)\n    sign_genes <- c(sign_pairs\\$gene_1, sign_pairs\\$gene_2) %>% unique\n\n    # compute pathway association\n    tab2 <- read_tsv('${TAB2}', col_types = cols(.default = col_character()))\n    net <- select(tab2, `Official Symbol Interactor A`, `Official Symbol Interactor B`) %>%\n        graph_from_data_frame(directed = FALSE)\n \n\t# create background\n    snps <- read_tsv('${SNPS}', col_names = FALSE)\\$X1\n    snp2gene <- read_tsv('${SNP2GENE}', col_types = 'cc')\n    bg <- snp2gene %>%\n        filter(!is.na(gene) & !is.na(snp)) %>%\n        filter(gene %in% c(tab2\\$`Official Symbol Interactor A`, tab2\\$`Official Symbol Interactor B`)) %>%\n        filter(snp %in% snps) %>%\n        .\\$gene\n\n    # import MSigDB Gene Sets\n    m_df = msigdbr(species = \"Homo sapiens\")\n    m_t2g = m_df %>% dplyr::select(gs_name, gene_symbol) %>% as.data.frame()\n\n    mapply(function(gene_1, gene_2) {\n        neighborhood <- delete_edges(net, paste(gene_1, gene_2, sep = '|')) %>%\n            shortest_paths(from = gene_1, to = gene_2) %>%\n            .\\$vpath %>% unlist %>% names %>%\n            intersect(sign_genes) %>%\n            sort\n        if (length(neighborhood) >= 3) {\n            enricher(neighborhood, TERM2GENE = m_t2g, universe = bg, pAdjustMethod = 'bonferroni')\n        }\n    }, sign_pairs\\$gene_1, sign_pairs\\$gene_2) %>%\n        lapply(as_tibble) %>%\n        bind_rows %>%\n        unique %>%\n        write_tsv('sign_pathways.tsv')\t\n    \"\"\"\n\n}",
        "nb_lignes_process": 86,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(igraph)\n    library(clusterProfiler)\n    library(msigdbr)\n\n    # compute gene-pair association\n    gene_pairs <- read_tsv('${GENE_PAIRS}') %>%\n        mutate(experiment = 'original')\n    studied_gene_pairs <- gene_pairs\\$uniq_gene_id\t\t\n    permutations <- list.files(pattern = 'permuted_association_')\n    N <- length(permutations) + 1\n\n    gene_pairs_assoc <- lapply(permutations, function(x) {\n        read_tsv(x, col_types = 'cdddc') %>%\n            filter(uniq_gene_id %in% studied_gene_pairs)\n    }) %>%\n        do.call(bind_rows, .) %>%\n        mutate(experiment = 'permutation') %>%\n        bind_rows(gene_pairs) %>%\n        group_by(uniq_gene_id) %>%\n        mutate(P_tau_05 = rank(tau_05) / N,\n               P_tau_01 = rank(tau_01) / N, \n               P_tau_001 = rank(tau_001) / N,\n               min_P = pmin(P_tau_05, P_tau_01, P_tau_001),\n               P = rank(min_P) / N ) %>%\n        filter(experiment == 'original') %>%\n        separate(uniq_gene_id, into = c('gene_1', 'gene_2'), sep = '_') %>%\n        select(-experiment) %>%\n        select(gene_1, gene_2, P, everything())\n    write_tsv(gene_pairs_assoc, 'sign_gene_pairs.tsv')\n    \n    sign_pairs <- filter(gene_pairs_assoc, P < .05)\n    sign_genes <- c(sign_pairs\\$gene_1, sign_pairs\\$gene_2) %>% unique\n\n    # compute pathway association\n    tab2 <- read_tsv('${TAB2}', col_types = cols(.default = col_character()))\n    net <- select(tab2, `Official Symbol Interactor A`, `Official Symbol Interactor B`) %>%\n        graph_from_data_frame(directed = FALSE)\n \n\t# create background\n    snps <- read_tsv('${SNPS}', col_names = FALSE)\\$X1\n    snp2gene <- read_tsv('${SNP2GENE}', col_types = 'cc')\n    bg <- snp2gene %>%\n        filter(!is.na(gene) & !is.na(snp)) %>%\n        filter(gene %in% c(tab2\\$`Official Symbol Interactor A`, tab2\\$`Official Symbol Interactor B`)) %>%\n        filter(snp %in% snps) %>%\n        .\\$gene\n\n    # import MSigDB Gene Sets\n    m_df = msigdbr(species = \"Homo sapiens\")\n    m_t2g = m_df %>% dplyr::select(gs_name, gene_symbol) %>% as.data.frame()\n\n    mapply(function(gene_1, gene_2) {\n        neighborhood <- delete_edges(net, paste(gene_1, gene_2, sep = '|')) %>%\n            shortest_paths(from = gene_1, to = gene_2) %>%\n            .\\$vpath %>% unlist %>% names %>%\n            intersect(sign_genes) %>%\n            sort\n        if (length(neighborhood) >= 3) {\n            enricher(neighborhood, TERM2GENE = m_t2g, universe = bg, pAdjustMethod = 'bonferroni')\n        }\n    }, sign_pairs\\$gene_1, sign_pairs\\$gene_2) %>%\n        lapply(as_tibble) %>%\n        bind_rows %>%\n        unique %>%\n        write_tsv('sign_pathways.tsv')\t\n    \"\"\"",
        "nb_lignes_script": 69,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gene_pairs_null",
            "gene_pairs",
            "snp2gene",
            "tab2",
            "qc_snps"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "adjust_snp_pairs": {
        "name_process": "adjust_snp_pairs",
        "string_process": "\tprocess adjust_snp_pairs {\n\n\t\tpublishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n\t\tinput:\n\t\t\tfile SIGN_SNP_PAIRS from sign_snp_pairs\n\t\t\tfile PRS from file(params.prs)\n\t\t\tset file(BED), file(BIM), file(FAM), file(PHENO) from filtered_bed_qc\n\n\t\toutput:\n\t\t\tfile 'prs_adjusted_sign_snp_pairs.tsv'\n\n\t\t\"\"\"\n\t\t#!/usr/bin/env Rscript\n\n\t\tlibrary(tidyverse)\n\t\tlibrary(snpStats)\n\n\t\tsnp_pairs <- read_tsv('${SIGN_SNP_PAIRS}', col_types = 'ccd')\n\t\tgwas <- read.plink(\"${BED}\", \"${BIM}\", \"${FAM}\")\n\t\tprs <- read_tsv('${PRS}')\\$prs\n\n\t\tX <- as(gwas[['genotypes']], 'numeric')\n\t\tX[X == 0] = 'AA'\n\t\tX[X == 1] = 'Aa'\n\t\tX[X == 2] = 'aa'\n\t\ty <- gwas[['fam']][['affected']]\n\n\t\tgwas <- as_tibble(X) %>%\n\t\t\tmutate(y = y, prs = prs)\n\t\trm(X,y)\n\n\t\tprs_adjust <- function(snp_1, snp_2, ...) {\n\t\t\tdf <- as.data.frame(gwas[, c('y', 'prs', snp_1, snp_2)])\n\t\t\tcolnames(df) <- c('Y', 'PRS', 'SNP1', 'SNP2')\n\t\t\tPRS_adjusted = lm(Y ~ PRS + SNP1 + SNP2 + SNP1*SNP2, df, na.action=na.exclude)\n        \t        summary(PRS_adjusted)\\$coefficients[5, 4]\n\t\t}\n\n\t\tsnp_pairs %>%\n\t\t\tmutate(prs_adjusted_p =  pmap_dbl(snp_pairs, prs_adjust)) %>%\n\t\t\twrite_tsv('prs_adjusted_sign_snp_pairs.tsv')\n\t\"\"\"\n\t}",
        "nb_lignes_process": 42,
        "string_script": "\"\"\"\n\t\t#!/usr/bin/env Rscript\n\n\t\tlibrary(tidyverse)\n\t\tlibrary(snpStats)\n\n\t\tsnp_pairs <- read_tsv('${SIGN_SNP_PAIRS}', col_types = 'ccd')\n\t\tgwas <- read.plink(\"${BED}\", \"${BIM}\", \"${FAM}\")\n\t\tprs <- read_tsv('${PRS}')\\$prs\n\n\t\tX <- as(gwas[['genotypes']], 'numeric')\n\t\tX[X == 0] = 'AA'\n\t\tX[X == 1] = 'Aa'\n\t\tX[X == 2] = 'aa'\n\t\ty <- gwas[['fam']][['affected']]\n\n\t\tgwas <- as_tibble(X) %>%\n\t\t\tmutate(y = y, prs = prs)\n\t\trm(X,y)\n\n\t\tprs_adjust <- function(snp_1, snp_2, ...) {\n\t\t\tdf <- as.data.frame(gwas[, c('y', 'prs', snp_1, snp_2)])\n\t\t\tcolnames(df) <- c('Y', 'PRS', 'SNP1', 'SNP2')\n\t\t\tPRS_adjusted = lm(Y ~ PRS + SNP1 + SNP2 + SNP1*SNP2, df, na.action=na.exclude)\n        \t        summary(PRS_adjusted)\\$coefficients[5, 4]\n\t\t}\n\n\t\tsnp_pairs %>%\n\t\t\tmutate(prs_adjusted_p =  pmap_dbl(snp_pairs, prs_adjust)) %>%\n\t\t\twrite_tsv('prs_adjusted_sign_snp_pairs.tsv')\n\t\"\"\"",
        "nb_lignes_script": 30,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sign_snp_pairs",
            "filtered_bed_qc"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "tab22igraph": {
        "name_process": "tab22igraph",
        "string_process": "\nprocess tab22igraph {\n\n    input:\n        file TAB2\n    \n    output:\n        file 'net.RData' into RNET\n\n    script:\n    template 'io/tab22igraph.R'\n\n}",
        "nb_lignes_process": 11,
        "string_script": "    template 'io/tab22igraph.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "TAB2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "RNET"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "read_vegas": {
        "name_process": "read_vegas",
        "string_process": "\nprocess read_vegas {\n\n    input:\n        file VEGAS_OUT\n\n    output:\n        file 'scores.RData' into RSCORES\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    vegas_out <- read_tsv('$VEGAS_OUT')\n\n    scores <- vegas_out[['Pvalue']]\n    names(scores) <- vegas_out[['Gene']]\n\n    save(scores, file = 'scores.RData')\n    \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n\n    vegas_out <- read_tsv('$VEGAS_OUT')\n\n    scores <- vegas_out[['Pvalue']]\n    names(scores) <- vegas_out[['Gene']]\n\n    save(scores, file = 'scores.RData')\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "VEGAS_OUT"
        ],
        "nb_inputs": 1,
        "outputs": [
            "RSCORES"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "lean": {
        "name_process": "lean",
        "string_process": "\nprocess lean {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file RSCORES\n        file RNET\n\n    output:\n        file 'scored_genes.lean.txt'\n\n    script:\n    template 'discovery/run_leanr.R'\n}",
        "nb_lignes_process": 13,
        "string_script": "    template 'discovery/run_leanr.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "RSCORES",
            "RNET"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "random_forest": {
        "name_process": "random_forest",
        "string_process": "\nprocess random_forest {\n\n    input:\n        file RGWAS from rgwas_train\n\n    output:\n        file 'forest.RData' into forest\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(ranger)\n    library(tidyverse)\n\n    load(\"${RGWAS}\")\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    X[is.na(X)] <- 0 # safeguard against missing genotypes\n    Y <- gwas\\$fam\\$affected\n\n    gwas <- as_tibble(X) %>%\n        mutate(phenotype = Y)\n\n    rf <- ranger(dependent.variable.name = 'phenotype', data = gwas, importance = 'impurity')\n    save(rf, file = 'forest.RData')\n    \"\"\"\n\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(ranger)\n    library(tidyverse)\n\n    load(\"${RGWAS}\")\n\n    X <- as(gwas\\$genotypes, \"numeric\")\n    X[is.na(X)] <- 0 # safeguard against missing genotypes\n    Y <- gwas\\$fam\\$affected\n\n    gwas <- as_tibble(X) %>%\n        mutate(phenotype = Y)\n\n    rf <- ranger(dependent.variable.name = 'phenotype', data = gwas, importance = 'impurity')\n    save(rf, file = 'forest.RData')\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rgwas_train"
        ],
        "nb_inputs": 1,
        "outputs": [
            "forest"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "extract_epistatic_snps": {
        "name_process": "extract_epistatic_snps",
        "string_process": "\nprocess extract_epistatic_snps {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file FOREST from forest\n\n    output:\n        file 'scored_interactions.rf.txt' into pairs\n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(ranger)\n    library(tidyverse)\n\n    load(\"${FOREST}\")\n\n    snps <- lapply(seq(1, 500), function(i) {\n        nodes <- treeInfo(rf,i)[['splitvarName']]\n        names(nodes) <- treeInfo(rf,i)[['nodeID']]\n        bind_rows(treeInfo(rf,i)[,c('nodeID','leftChild')] %>% rename(otherNodeID = leftChild),\n                  treeInfo(rf,i)[,c('nodeID','rightChild')] %>% rename(otherNodeID = rightChild)) %>%\n            mutate(snp1 = nodes[nodeID + 1], snp2 = nodes[otherNodeID + 1]) %>%\n            filter(!is.na(snp2) & snp1 != snp2) %>%\n            mutate(uniq_snp_id = cbind(snp1, snp2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n            select(uniq_snp_id)\n        }) %>%\n        do.call(rbind, .) %>% \n        group_by(uniq_snp_id) %>%\n        summarize(n = n()) %>%\n        ungroup() %>%\n        separate(uniq_snp_id, into=c('snp1','snp2'), sep='_')\n\n    imp <- importance(rf)\n    top_snps <- tail(sort(imp), n = floor(length(imp) * 0.2)) %>% names\n    snps %>%\n        filter(snp1 %in% top_snps | snp2 %in% top_snps) %>%\n        write_tsv('scored_interactions.rf.txt')\n    \"\"\"\n\n}",
        "nb_lignes_process": 41,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(ranger)\n    library(tidyverse)\n\n    load(\"${FOREST}\")\n\n    snps <- lapply(seq(1, 500), function(i) {\n        nodes <- treeInfo(rf,i)[['splitvarName']]\n        names(nodes) <- treeInfo(rf,i)[['nodeID']]\n        bind_rows(treeInfo(rf,i)[,c('nodeID','leftChild')] %>% rename(otherNodeID = leftChild),\n                  treeInfo(rf,i)[,c('nodeID','rightChild')] %>% rename(otherNodeID = rightChild)) %>%\n            mutate(snp1 = nodes[nodeID + 1], snp2 = nodes[otherNodeID + 1]) %>%\n            filter(!is.na(snp2) & snp1 != snp2) %>%\n            mutate(uniq_snp_id = cbind(snp1, snp2) %>% apply(1, sort) %>% apply(2, paste, collapse = '_')) %>%\n            select(uniq_snp_id)\n        }) %>%\n        do.call(rbind, .) %>% \n        group_by(uniq_snp_id) %>%\n        summarize(n = n()) %>%\n        ungroup() %>%\n        separate(uniq_snp_id, into=c('snp1','snp2'), sep='_')\n\n    imp <- importance(rf)\n    top_snps <- tail(sort(imp), n = floor(length(imp) * 0.2)) %>% names\n    snps %>%\n        filter(snp1 %in% top_snps | snp2 %in% top_snps) %>%\n        write_tsv('scored_interactions.rf.txt')\n    \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "forest"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pairs"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "build_loki": {
        "name_process": "build_loki",
        "string_process": " process build_loki {\n\n        publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n        output:\n            file \"loki_*.db\" into loki\n\n        \"\"\"\n        loki-build.py --verbose --knowledge loki_`date +%Y%m%d`.db --update\n        \"\"\"\n    \n    }",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n        loki-build.py --verbose --knowledge loki_`date +%Y%m%d`.db --update\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "loki"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "get_genes": {
        "name_process": "get_genes",
        "string_process": "\nprocess get_genes {\n\n    input:\n        file SNP2GENE from snp2gene\n\n    output:\n        file 'genes' into genes\n\n    \"\"\"\n    cut -f2 ${SNP2GENE} | tail -n +2 | sort | uniq >genes\n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    cut -f2 ${SNP2GENE} | tail -n +2 | sort | uniq >genes\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "snp2gene"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genes"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "get_gene_models": {
        "name_process": "get_gene_models",
        "string_process": "\nprocess get_gene_models {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file LOKI from loki\n        file GENES from genes\n\n    output:\n        file 'biofilter.gene.models' into gene_models\n\n    \"\"\"\n    cat << EOF >parameters.txt\n    KNOWLEDGE           ${LOKI}\n    GENE_FILE           ${GENES}\n    MODEL               gene\n    EOF\n\n    biofilter.py parameters.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    cat << EOF >parameters.txt\n    KNOWLEDGE           ${LOKI}\n    GENE_FILE           ${GENES}\n    MODEL               gene\n    EOF\n\n    biofilter.py parameters.txt\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "MoDEL",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/model",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "MoDEL",
                "uri": "https://bio.tools/model",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0842",
                                "term": "Identifier"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2080",
                                "term": "Database search results"
                            }
                        ]
                    }
                ],
                "description": "Database of protein Molecular Dynamics simulations, with 1800 trajectories representing different structural clusters of the PDB.",
                "homepage": "http://mmb.irbbarcelona.org/MoDEL"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "loki",
            "genes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "gene_models"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "join_snp_models": {
        "name_process": "join_snp_models",
        "string_process": "\nprocess join_snp_models {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"move\"\n\n    input:\n        file 'snp_models_split*' from snp_models_split.collect()\n\n    output:\n        file 'snp_models.tsv'\n\n    \"\"\"\n    echo \"snp_1\\tgene_1\\tsnp_2\\tgene_2\\tnum_sources\\tnum_instances\" >snp_models.tsv\n    cat snp_models_split* >>snp_models.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    echo \"snp_1\\tgene_1\\tsnp_2\\tgene_2\\tnum_sources\\tnum_instances\" >snp_models.tsv\n    cat snp_models_split* >>snp_models.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "snp_models_split"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"move\""
        ],
        "when": "",
        "stub": ""
    },
    "make_network": {
        "name_process": "make_network",
        "string_process": "\nprocess make_network {\n\n    input:\n        file TAB2 from tab2\n\n    output:\n        file 'node_index.tsv' into node_index\n        file 'edge_list.tsv' into edge_list\n\n    script:\n    template 'io/tab2_2hotnet.R'\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    template 'io/tab2_2hotnet.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "tab2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "node_index",
            "edge_list"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "sparse_scores": {
        "name_process": "sparse_scores",
        "string_process": "\nprocess sparse_scores {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n    file SCORES from vegas\n    val CUTOFF from params.lfdr_cutoff\n\n    output:\n    file 'scored_genes.sparse.txt' into sparse_scores\n    file 'lfdr_plot.pdf'\n\n    \"\"\"\n#!/usr/bin/env Rscript\n\nlibrary(tidyverse)\nlibrary(twilight)\nlibrary(cowplot)\n\ntheme_set(theme_cowplot())\n\nscores <- read_tsv('${SCORES}')\n\nlfdr <- twilight(scores\\$Pvalue, B=1000)\nlfdr <- tibble(Gene = scores\\$Gene[as.numeric(rownames(lfdr\\$result))],\n               vegas_p = scores\\$Pvalue[as.numeric(rownames(lfdr\\$result))],\n               lfdr = lfdr\\$result\\$fdr)\n\nggplot(lfdr, aes(x = vegas_p, y = 1 - lfdr)) +\n    geom_line() +\n    geom_vline(xintercept = ${CUTOFF}, color = 'red') +\n    labs(x = 'P-value', y = '1 - lFDR')\nggsave('lfdr_plot.pdf', width=7, height=6)\n\nlfdr %>%\n    mutate(Pvalue = ifelse(vegas_p < ${CUTOFF}, vegas_p, 1)) %>%\n    write_tsv('scored_genes.sparse.txt')\n    \"\"\"\n\n}",
        "nb_lignes_process": 39,
        "string_script": "\"\"\"\n#!/usr/bin/env Rscript\n\nlibrary(tidyverse)\nlibrary(twilight)\nlibrary(cowplot)\n\ntheme_set(theme_cowplot())\n\nscores <- read_tsv('${SCORES}')\n\nlfdr <- twilight(scores\\$Pvalue, B=1000)\nlfdr <- tibble(Gene = scores\\$Gene[as.numeric(rownames(lfdr\\$result))],\n               vegas_p = scores\\$Pvalue[as.numeric(rownames(lfdr\\$result))],\n               lfdr = lfdr\\$result\\$fdr)\n\nggplot(lfdr, aes(x = vegas_p, y = 1 - lfdr)) +\n    geom_line() +\n    geom_vline(xintercept = ${CUTOFF}, color = 'red') +\n    labs(x = 'P-value', y = '1 - lFDR')\nggsave('lfdr_plot.pdf', width=7, height=6)\n\nlfdr %>%\n    mutate(Pvalue = ifelse(vegas_p < ${CUTOFF}, vegas_p, 1)) %>%\n    write_tsv('scored_genes.sparse.txt')\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vegas",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sparse_scores"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "vegas2hotnet": {
        "name_process": "vegas2hotnet",
        "string_process": "\nprocess vegas2hotnet {\n\n    input:\n        file VEGAS from sparse_scores \n\n    output:\n        file 'scores.ht' into scores\n\n    script:\n    template 'io/vegas2hotnet.R'\n\n}",
        "nb_lignes_process": 11,
        "string_script": "    template 'io/vegas2hotnet.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "sparse_scores"
        ],
        "nb_inputs": 1,
        "outputs": [
            "scores"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "make_h5_network": {
        "name_process": "make_h5_network",
        "string_process": "\nprocess make_h5_network {\n\n    input:\n        file HOTNET2 from hotnet2_path\n        file NODE_IDX from node_index\n        file EDGE_LIST from edge_list\n        val BETA from beta\n\n    output:\n        file \"ppin_ppr_${BETA}.h5\" into h5\n        file 'permuted' into permutations\n\n    \"\"\"\n    python2 ${HOTNET2}/makeNetworkFiles.py \\\n--edgelist_file ${EDGE_LIST} \\\n--gene_index_file ${NODE_IDX} \\\n--network_name ppin \\\n--prefix ppin \\\n--beta ${BETA} \\\n--num_permutations ${network_permutations} \\\n--output_dir .\n    \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n    python2 ${HOTNET2}/makeNetworkFiles.py \\\n--edgelist_file ${EDGE_LIST} \\\n--gene_index_file ${NODE_IDX} \\\n--network_name ppin \\\n--prefix ppin \\\n--beta ${BETA} \\\n--num_permutations ${network_permutations} \\\n--output_dir .\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hotnet2_path",
            "node_index",
            "edge_list",
            "beta"
        ],
        "nb_inputs": 4,
        "outputs": [
            "h5",
            "permutations"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "make_heat_data": {
        "name_process": "make_heat_data",
        "string_process": "\nprocess make_heat_data {\n\n    input:\n        file HOTNET2 from hotnet2_path\n        file SCORES from scores\n\n    output:\n        file 'heat.json' into heat\n\n    \"\"\"\n    python2 ${HOTNET2}/makeHeatFile.py \\\nscores \\\n--heat_file ${SCORES} \\\n--output_file heat.json \\\n--name gwas\n    \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    python2 ${HOTNET2}/makeHeatFile.py \\\nscores \\\n--heat_file ${SCORES} \\\n--output_file heat.json \\\n--name gwas\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "ZFN-Scores"
        ],
        "tools_url": [
            "https://bio.tools/zfn-scores"
        ],
        "tools_dico": [
            {
                "name": "ZFN-Scores",
                "uri": "https://bio.tools/zfn-scores",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "ZFN-Scores searches a DNA sequence for good zinc finger nuclease target sites. The Extended Modular Assembly method has a 40-60% expected success rate",
                "homepage": "http://zinc.genomecenter.ucdavis.edu:8080/Plone/zfn-scoresv6"
            }
        ],
        "inputs": [
            "hotnet2_path",
            "scores"
        ],
        "nb_inputs": 2,
        "outputs": [
            "heat"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "hotnet2": {
        "name_process": "hotnet2",
        "string_process": "\nprocess hotnet2 {\n\n    input:\n        file HOTNET2 from hotnet2_path\n        file HEAT from heat\n        file NETWORK from h5\n        file PERMS from permutations\n        val BETA from beta\n\n    output:\n        file 'consensus/subnetworks.tsv' into subnetworks\n\n    \"\"\"\n    python2 ${HOTNET2}/HotNet2.py \\\n--network_files ${NETWORK} \\\n--permuted_network_path ${PERMS}/ppin_ppr_${BETA}_##NUM##.h5 \\\n--heat_files ${HEAT} \\\n--network_permutations ${network_permutations} \\\n--heat_permutations ${heat_permutations} \\\n--output_directory .\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    python2 ${HOTNET2}/HotNet2.py \\\n--network_files ${NETWORK} \\\n--permuted_network_path ${PERMS}/ppin_ppr_${BETA}_##NUM##.h5 \\\n--heat_files ${HEAT} \\\n--network_permutations ${network_permutations} \\\n--heat_permutations ${heat_permutations} \\\n--output_directory .\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hotnet2_path",
            "heat",
            "h5",
            "permutations",
            "beta"
        ],
        "nb_inputs": 5,
        "outputs": [
            "subnetworks"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "process_output": {
        "name_process": "process_output",
        "string_process": "\nprocess process_output {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file SUBNETWORKS from subnetworks\n\n    output:\n        file 'selected_genes.hotnet2.tsv'\n\n    \"\"\"\n#!/usr/bin/env Rscript\n\nlibrary(tidyverse)\n\nread_tsv('${SUBNETWORKS}', col_types = 'cc', comment = '#', col_names = F) %>%\n    select(X1) %>%\n    mutate(cluster = 1:n()) %>%\n    separate_rows(X1, sep = ' ') %>%\n    rename(gene = X1) %>%\n    write_tsv('selected_genes.hotnet2.tsv')\n    \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n#!/usr/bin/env Rscript\n\nlibrary(tidyverse)\n\nread_tsv('${SUBNETWORKS}', col_types = 'cc', comment = '#', col_names = F) %>%\n    select(X1) %>%\n    mutate(cluster = 1:n()) %>%\n    separate_rows(X1, sep = ' ') %>%\n    rename(gene = X1) %>%\n    write_tsv('selected_genes.hotnet2.tsv')\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "subnetworks"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "download_hgnc": {
        "name_process": "download_hgnc",
        "string_process": "\nprocess download_hgnc {\n\n    output:\n        file 'non_alt_loci_set.txt' into hgnc\n\n    script:\n    template 'dbs/hgnc.sh'\n    \n}",
        "nb_lignes_process": 8,
        "string_script": "    template 'dbs/hgnc.sh'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "hgnc"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "download_annotation": {
        "name_process": "download_annotation",
        "string_process": "\nprocess download_annotation {\n\n    input:\n        val GENCODE_VERSION from params.gencode_version\n        val GRCH_VERSION from params.grch_version\n\n    output:\n        file 'gff3' into gff\n    \n    script:\n    template 'dbs/gencode.sh'\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    template 'dbs/gencode.sh'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "params",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "gff"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "extract_genes": {
        "name_process": "extract_genes",
        "string_process": "\nprocess extract_genes {\n\n\tinput:\n\t\tfile gff\n\n\toutput:\n\t\tfile 'genes.gff' into genes_gff\n\n\t\"\"\"\n\tawk '\\$3 == \"gene\"' $gff >genes.gff\n\t\"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n\tawk '\\$3 == \"gene\"' $gff >genes.gff\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gff"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genes_gff"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "gff2bed": {
        "name_process": "gff2bed",
        "string_process": "\nprocess gff2bed {\n\n\tinput:\n\t\tfile genes_gff\n\t\tval BUFFER from params.buffer\n\n\toutput:\n\t\tfile 'genes.bed' into genes_bed\n\n\t\"\"\"\n\tgff2bed < $genes_gff >tmp\n\tawk '{\\$2 = \\$2 - ${BUFFER}; \\$2 = (\\$2<0?0:\\$2); \\$3 = \\$3 + ${BUFFER}; \\$3 = (\\$3<0?0:\\$3); print}' OFS='\\\\t' tmp >genes.bed\n\t\"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n\tgff2bed < $genes_gff >tmp\n\tawk '{\\$2 = \\$2 - ${BUFFER}; \\$2 = (\\$2<0?0:\\$2); \\$3 = \\$3 + ${BUFFER}; \\$3 = (\\$3<0?0:\\$3); print}' OFS='\\\\t' tmp >genes.bed\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "genes_gff",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "genes_bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "bim2bed": {
        "name_process": "bim2bed",
        "string_process": "\nprocess bim2bed {\n\n\tinput:\n\t\tfile BIM from bim\n\n\toutput:\n\t\tfile 'snps.bed' into snps_bed\n\n\t\"\"\"\n\tawk '{print \"chr\" \\$1 \"\\\\t\" \\$4 \"\\\\t\" \\$4 \"\\\\t\" \\$2 \"\\\\t.\\\\t.\" }' ${BIM} >tmp\n\tsed 's/chr23/chrX/' tmp >snps.bed\n\t\"\"\"\n\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n\tawk '{print \"chr\" \\$1 \"\\\\t\" \\$4 \"\\\\t\" \\$4 \"\\\\t\" \\$2 \"\\\\t.\\\\t.\" }' ${BIM} >tmp\n\tsed 's/chr23/chrX/' tmp >snps.bed\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "bim"
        ],
        "nb_inputs": 1,
        "outputs": [
            "snps_bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "snp2gene": {
        "name_process": "snp2gene",
        "string_process": "\nprocess snp2gene {\n\n\tinput:\n\t\tfile snps_bed\n\t\tfile genes_bed\n\n\toutput:\n\t\tfile 'snp2ensembl.tsv' into snp2ensembl\n\n\t\"\"\"\n\tbedtools intersect -a $snps_bed -b $genes_bed -wa -wb >tmp\n\tcut -f4,16 tmp | sed 's/\\\\tID=/\\\\t/' | sed 's/\\\\.[0-9]\\\\+;.\\\\+//' >snp2ensembl.tsv\n\t\"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n\tbedtools intersect -a $snps_bed -b $genes_bed -wa -wb >tmp\n\tcut -f4,16 tmp | sed 's/\\\\tID=/\\\\t/' | sed 's/\\\\.[0-9]\\\\+;.\\\\+//' >snp2ensembl.tsv\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BEDTools",
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/bedtools",
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "snps_bed",
            "genes_bed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "snp2ensembl"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "ensembl2hgnc": {
        "name_process": "ensembl2hgnc",
        "string_process": "\nprocess ensembl2hgnc {\n\n\tpublishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n\tinput:\n\t\tfile hgnc\n\t\tfile snp2ensembl\n\n\toutput:\n\t\tfile 'snp2hgnc.tsv' into snp2hgnc\n\n\t\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(tidyverse)\n\tlibrary(magrittr)\n\tensembl2hgnc <- read_tsv('$hgnc') %>%\n\t\tselect(symbol, ensembl_gene_id)\n\tread_tsv('$snp2ensembl', col_names = FALSE) %>%\n\t\tset_colnames(c('snp','ensembl_gene_id')) %>%\n\t\tinner_join(ensembl2hgnc, by = 'ensembl_gene_id') %>%\n\t\tselect(snp, symbol) %>%\n\t\twrite_tsv('snp2hgnc.tsv')\n\t\"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(tidyverse)\n\tlibrary(magrittr)\n\tensembl2hgnc <- read_tsv('$hgnc') %>%\n\t\tselect(symbol, ensembl_gene_id)\n\tread_tsv('$snp2ensembl', col_names = FALSE) %>%\n\t\tset_colnames(c('snp','ensembl_gene_id')) %>%\n\t\tinner_join(ensembl2hgnc, by = 'ensembl_gene_id') %>%\n\t\tselect(snp, symbol) %>%\n\t\twrite_tsv('snp2hgnc.tsv')\n\t\"\"\"",
        "nb_lignes_script": 11,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hgnc",
            "snp2ensembl"
        ],
        "nb_inputs": 2,
        "outputs": [
            "snp2hgnc"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "sigmod": {
        "name_process": "sigmod",
        "string_process": "\nprocess sigmod {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file VEGAS_OUT\n        file TAB2\n        file SIGMOD_PATH\n        val LAMBDAMAX from params.lambdamax\n        val NMAX from params.nmax\n        val MAXJUMP from params.maxjump\n\n    output:\n        file 'selected_genes.sigmod.txt'\n\n    script:\n    template 'discovery/run_sigmod.R'\n}",
        "nb_lignes_process": 17,
        "string_script": "    template 'discovery/run_sigmod.R'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "VEGAS_OUT",
            "TAB2",
            "SIGMOD_PATH",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "download_gencode": {
        "name_process": "download_gencode",
        "string_process": "\nprocess download_gencode {\n\n    input:\n        val GENCODE_VERSION from params.gencode\n        val GRCH_VERSION from params.genome\n\n    output:\n        file 'gff3' into gff\n    \n    script:\n    template 'dbs/gencode.sh'\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    template 'dbs/gencode.sh'",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [
            "docxtemplate"
        ],
        "tools_url": [
            "https://bio.tools/docxtemplate"
        ],
        "tools_dico": [
            {
                "name": "docxtemplate",
                "uri": "https://bio.tools/docxtemplate",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0322",
                                    "term": "Molecular model refinement"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'Phenix', 'restraints', 'Amber', 'refinement' | Improved chemistry restraints for crystallographic refinement by integrating the Amber force field into Phenix | Word templates and tools for Windows | The IUCr Word templates utilize the content management features and document styles of Word to format your manuscript and to store essential details for submission of your manuscript",
                "homepage": "http://journals.iucr.org/services/docxtemplate/"
            }
        ],
        "inputs": [
            "params",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "gff"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "make_glist": {
        "name_process": "make_glist",
        "string_process": "\nprocess make_glist {\n\n    input:\n        file gff\n        val BUFF from params.buffer\n\n    output:\n        file 'glist_ensembl' into glist_vegas, glist_chrs\n\n    \"\"\"\n    awk '\\$3 == \"gene\"' $gff >genes.gff\n    gff2bed < genes.gff | cut -f1-4 | sed 's/\\\\.[^\\\\t]\\\\+\\$//' | sed 's/^chr//' >tmp\n    awk '{\\$2 = \\$2 - ${BUFF}; \\$3 = \\$3 + ${BUFF}} 1' tmp | awk '\\$2 < 0 {\\$2 = 0} 1' >buffered_genes\n    sed 's/^XY/25/' buffered_genes | sed 's/^X/23/' | sed 's/^Y/24/' | sed 's/^M/26/' | awk '\\$1 <= 24' >glist_ensembl\n    \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    awk '\\$3 == \"gene\"' $gff >genes.gff\n    gff2bed < genes.gff | cut -f1-4 | sed 's/\\\\.[^\\\\t]\\\\+\\$//' | sed 's/^chr//' >tmp\n    awk '{\\$2 = \\$2 - ${BUFF}; \\$3 = \\$3 + ${BUFF}} 1' tmp | awk '\\$2 < 0 {\\$2 = 0} 1' >buffered_genes\n    sed 's/^XY/25/' buffered_genes | sed 's/^X/23/' | sed 's/^Y/24/' | sed 's/^M/26/' | awk '\\$1 <= 24' >glist_ensembl\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "gff",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "glist_vegas",
            "glist_chrs"
        ],
        "nb_outputs": 2,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "compute_chisq": {
        "name_process": "compute_chisq",
        "string_process": " process compute_chisq {\n\n          input:\n              file BED from bed\n              file BIM from bim\n              file FAM from fam\n\n          output:\n              file 'snp_association' into snp_association\n\n          \"\"\"\n          plink --bed ${BED} --bim ${BIM} --fam ${FAM} --assoc --allow-no-sex\n          awk 'NR > 1 && \\$9 != \"NA\" { print \\$2,\\$9 }' OFS='\\\\t' plink.assoc >snp_association\n          \"\"\"\n\n      }",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n          plink --bed ${BED} --bim ${BIM} --fam ${FAM} --assoc --allow-no-sex\n          awk 'NR > 1 && \\$9 != \"NA\" { print \\$2,\\$9 }' OFS='\\\\t' plink.assoc >snp_association\n          \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "snp_association"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "regress_phenotypes_with_covars": {
        "name_process": "regress_phenotypes_with_covars",
        "string_process": " process regress_phenotypes_with_covars {\n\n        input:\n            file BED from bed\n            file BIM from bim\n            file FAM from fam\n            file COVAR from covar\n\n        output:\n            file 'snp_association' into snp_association\n\n        \"\"\"\n        plink --bed ${BED} --bim ${BIM} --fam ${FAM} --logistic --covar ${COVAR}\n        awk 'NR > 1 && \\$5 == \"ADD\" && \\$9 != \"NA\" { print \\$2,\\$9 }' OFS='\\\\t' plink.assoc.logistic >snp_association\n        \"\"\"\n\n    }",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        plink --bed ${BED} --bim ${BIM} --fam ${FAM} --logistic --covar ${COVAR}\n        awk 'NR > 1 && \\$5 == \"ADD\" && \\$9 != \"NA\" { print \\$2,\\$9 }' OFS='\\\\t' plink.assoc.logistic >snp_association\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam",
            "covar"
        ],
        "nb_inputs": 4,
        "outputs": [
            "snp_association"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "extract_controls": {
        "name_process": "extract_controls",
        "string_process": " process extract_controls {\n\n      input:\n          file BED from bed\n          file bim\n          file fam\n\n      output:\n          file 'plink.bed' into bed_controls\n          file 'plink.bim' into bim_controls\n          file 'plink.fam' into fam_controls\n\n      \"\"\"\n      plink --bfile ${BED.baseName} --filter-controls --make-bed\n      \"\"\"\n\n  }",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n      plink --bfile ${BED.baseName} --filter-controls --make-bed\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "bed",
            "bim",
            "fam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "bed_controls",
            "bim_controls",
            "fam_controls"
        ],
        "nb_outputs": 3,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "vegas": {
        "name_process": "vegas",
        "string_process": "\nprocess vegas {\n\n    tag { \"Chr ${CHR}\" }\n\n    input:\n        file BED from bed_controls\n        file bim_controls\n        file fam_controls\n        file SNPASSOCIATION from snp_association\n        file GLIST from glist_vegas\n        val VEGAS_PARAMS from params.vegas_params\n        each CHR from chromosomes\n\n    output:\n        file 'scored_genes.vegas.txt' into vegas_out\n\n    \"\"\"\n    vegas2v2 -G -snpandp ${SNPASSOCIATION} -custom `pwd`/${BED.baseName} -glist ${GLIST} -out scored_genes -chr $CHR ${VEGAS_PARAMS}\n    sed 's/\"//g' scored_genes.out | sed 's/ /\\\\t/g' >tmp\n    R -e 'library(tidyverse); read_tsv(\"tmp\", col_types = \"iciddddddcd\") %>% filter(!duplicated(Gene)) %>% write_tsv(\"scored_genes.vegas.txt\")'\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    vegas2v2 -G -snpandp ${SNPASSOCIATION} -custom `pwd`/${BED.baseName} -glist ${GLIST} -out scored_genes -chr $CHR ${VEGAS_PARAMS}\n    sed 's/\"//g' scored_genes.out | sed 's/ /\\\\t/g' >tmp\n    R -e 'library(tidyverse); read_tsv(\"tmp\", col_types = \"iciddddddcd\") %>% filter(!duplicated(Gene)) %>% write_tsv(\"scored_genes.vegas.txt\")'\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "bed_controls",
            "bim_controls",
            "fam_controls",
            "snp_association",
            "glist_vegas",
            "params",
            "chromosomes"
        ],
        "nb_inputs": 7,
        "outputs": [
            "vegas_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "tag { \"Chr ${CHR}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_chromosomes": {
        "name_process": "merge_chromosomes",
        "string_process": "\nprocess merge_chromosomes {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file 'scored_genes_chr*' from vegas_out.collect()\n\n    output:\n        file 'scored_genes.vegas.txt'\n\n    \"\"\"\n    head -n1 scored_genes_chr1 >scored_genes.vegas.txt\n    tail -n +2 -q scored_genes_chr* | sort -n >>scored_genes.vegas.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    head -n1 scored_genes_chr1 >scored_genes.vegas.txt\n    tail -n +2 -q scored_genes_chr* | sort -n >>scored_genes.vegas.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vegas_out"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "heinz": {
        "name_process": "heinz",
        "string_process": "\nprocess heinz {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n\n    input:\n        file VEGAS from vegas\n        file TAB2 from tab2\n        val FDR from params.fdr\n\n    output:\n        file 'selected_genes.heinz.txt' \n\n    \"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(igraph)\n    library(BioNet)\n\n    vegas <- read_tsv('${VEGAS}')\n    net <- read_tsv(\"${TAB2}\") %>%\n        rename(gene1 = `Official Symbol Interactor A`, \n               gene2 = `Official Symbol Interactor B`) %>%\n        filter(gene1 %in% vegas\\$Gene & gene2 %in% vegas\\$Gene) %>%\n        select(gene1, gene2) %>%\n        graph_from_data_frame(directed = FALSE)\n    vegas <- filter(vegas, Gene %in% names(V(net)))\n\n    # search subnetworks\n    pvals <- vegas\\$Pvalue\n    names(pvals) <- vegas\\$Gene\n    fb <- fitBumModel(pvals, plot = FALSE)\n    scores <- scoreNodes(net, fb, fdr = ${FDR})\n\n    if (sum(scores > 0)) {\n        selected <- runFastHeinz(net, scores)    \n    \ttibble(gene = names(V(selected))) %>% \n            write_tsv('selected_genes.heinz.txt')\n    } else {\n        write_tsv(tibble(gene = character()), 'selected_genes.heinz.txt')\n    }\n    \"\"\"\n\n}",
        "nb_lignes_process": 43,
        "string_script": "\"\"\"\n    #!/usr/bin/env Rscript\n\n    library(tidyverse)\n    library(igraph)\n    library(BioNet)\n\n    vegas <- read_tsv('${VEGAS}')\n    net <- read_tsv(\"${TAB2}\") %>%\n        rename(gene1 = `Official Symbol Interactor A`, \n               gene2 = `Official Symbol Interactor B`) %>%\n        filter(gene1 %in% vegas\\$Gene & gene2 %in% vegas\\$Gene) %>%\n        select(gene1, gene2) %>%\n        graph_from_data_frame(directed = FALSE)\n    vegas <- filter(vegas, Gene %in% names(V(net)))\n\n    # search subnetworks\n    pvals <- vegas\\$Pvalue\n    names(pvals) <- vegas\\$Gene\n    fb <- fitBumModel(pvals, plot = FALSE)\n    scores <- scoreNodes(net, fb, fdr = ${FDR})\n\n    if (sum(scores > 0)) {\n        selected <- runFastHeinz(net, scores)    \n    \ttibble(gene = names(V(selected))) %>% \n            write_tsv('selected_genes.heinz.txt')\n    } else {\n        write_tsv(tibble(gene = character()), 'selected_genes.heinz.txt')\n    }\n    \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vegas",
            "tab2",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "pMDR": {
        "name_process": "pMDR",
        "string_process": "\nprocess pMDR {\n\n    publishDir \"$params.out\", overwrite: true, mode: \"copy\"\n                         \n\n    input:\n        val N from n_snps\n        file PED from ped\n\n    output:\n        file \"scored_interactions.pmdr.txt\"\n\n    \"\"\"\n    cat << EOF >parameters.txt\n    ########################### Input ###########################\n    # The dataset to be used\n    INPUTFILE                          ${PED}\n    # Input format. Merlin has 6 columns in ped file and an optional .dat file\n    MERLIN_FORMAT                      NO\n    # Specify the location of the optional dat file (contains the labels for each locus MERLIN_DAT                         \n    # Set the value associated with affected status\n    AFFECTED_VALUE                     2\n    # Set the value associated with the unaffected status\n    # Individuals with neither Affected nor Unaffected will be ignored by the analysis\n    UNAFFECTED_VALUE                   1\n    # Ignore 0 or more pedigrees from the data\n    EXCLUDE_PEDIGREES                  \n    # Ignore 0 or more SNPs (1...N) from the data\n    EXCLUDE_LOCUS                      \n    # Maximum amount of missing data before a SNP is ignored from analysis\n    MISSING_THRESHOLD                  0.1\n\n\n    ########################## Basic Settings ###################\n    # Describes the type of models of interest. Models consist of 1 or more SNPs.\n    # The minimum number of SNPs in a model to be investigate.\n    # Valid Settings: 1..COMBO_END\n    COMBO_START                        1\n    # The maxmimum number of SNPs to be considered.\n    # Valid Settings: [COMBO_START..MAX_INT)\n    COMBO_STOP                         2\n    # Set the number of cross validation folds are used in analysis\n    # Recommend settings: 1, 5, 10 (1 is no cross validation)\n    CROSSVALINTERVAL                   5\n    # Maximum number of models to be reported\n    REPORTMODELCOUNT                   5\n    # Threshold for reporting models. At most REPORTMODELCOUNT will be reported (those are sorted according to the T-Statistic\n    REPORT_THRESHOLD                   0\n    # Write out details regarding the contents of each cross validation fold\n    VERBOSE_FOLDING                    0\n\n\n    ######################### Permutation Tests ##################\n    # Number of permutation runs to be executed. 1000 is recommended\n    PTEST_COUNT                        1000\n    # The seed associated with the tests. Each test gets a new seed\n    PTEST_SEED                         1397\n    # Short circuit the permutation tests. See manual for explaination\n    PTEST_SHORTCIRCUIT                 0\n    # How many simultaneous threads will be run\n    # Each PTest can theoretically be run in it's own thread (Multiple threads\n    # will not benefit if no ptests are being performed)\n    THREAD_COUNT                       ${Runtime.runtime.availableProcessors()}\n    # Determine how to handle mendelian errors when encountered. \n    # Acceptable Values:\n    #   1 - Report errors, but do nothing\n    #   2 - Report errors, and zero out loci in families where genotyping error has been found\n    #   3 - Report errors and remove pedigrees where the number of genotyping errors exceeds threshold\n    MENDELIAN_ERROR_LEVEL              1\n    # Set the threshold, if level is 3\n    MENDELIAN_PEDIGREE_THRESHOLD       0\n\n\n    ######################### Report Names ########################\n    # Pedigree report (genotypes and folding details)\n    EXT_PEDIGREE                       pedigree\n    # Distribution report (each item from the distribution)\n    EXT_DISTRIBUTION                   dist\n    # Write a copy of the 'cleaned' output to file\n    WRITE_CLEAN_DATAFILE               No\n    # Extension of the file (above)\n    EXT_CLEANED_DATA                   ped\n    EOF\n\n    mdrpdt64 parameters.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 87,
        "string_script": "\"\"\"\n    cat << EOF >parameters.txt\n    ########################### Input ###########################\n    # The dataset to be used\n    INPUTFILE                          ${PED}\n    # Input format. Merlin has 6 columns in ped file and an optional .dat file\n    MERLIN_FORMAT                      NO\n    # Specify the location of the optional dat file (contains the labels for each locus MERLIN_DAT                         \n    # Set the value associated with affected status\n    AFFECTED_VALUE                     2\n    # Set the value associated with the unaffected status\n    # Individuals with neither Affected nor Unaffected will be ignored by the analysis\n    UNAFFECTED_VALUE                   1\n    # Ignore 0 or more pedigrees from the data\n    EXCLUDE_PEDIGREES                  \n    # Ignore 0 or more SNPs (1...N) from the data\n    EXCLUDE_LOCUS                      \n    # Maximum amount of missing data before a SNP is ignored from analysis\n    MISSING_THRESHOLD                  0.1\n\n\n    ########################## Basic Settings ###################\n    # Describes the type of models of interest. Models consist of 1 or more SNPs.\n    # The minimum number of SNPs in a model to be investigate.\n    # Valid Settings: 1..COMBO_END\n    COMBO_START                        1\n    # The maxmimum number of SNPs to be considered.\n    # Valid Settings: [COMBO_START..MAX_INT)\n    COMBO_STOP                         2\n    # Set the number of cross validation folds are used in analysis\n    # Recommend settings: 1, 5, 10 (1 is no cross validation)\n    CROSSVALINTERVAL                   5\n    # Maximum number of models to be reported\n    REPORTMODELCOUNT                   5\n    # Threshold for reporting models. At most REPORTMODELCOUNT will be reported (those are sorted according to the T-Statistic\n    REPORT_THRESHOLD                   0\n    # Write out details regarding the contents of each cross validation fold\n    VERBOSE_FOLDING                    0\n\n\n    ######################### Permutation Tests ##################\n    # Number of permutation runs to be executed. 1000 is recommended\n    PTEST_COUNT                        1000\n    # The seed associated with the tests. Each test gets a new seed\n    PTEST_SEED                         1397\n    # Short circuit the permutation tests. See manual for explaination\n    PTEST_SHORTCIRCUIT                 0\n    # How many simultaneous threads will be run\n    # Each PTest can theoretically be run in it's own thread (Multiple threads\n    # will not benefit if no ptests are being performed)\n    THREAD_COUNT                       ${Runtime.runtime.availableProcessors()}\n    # Determine how to handle mendelian errors when encountered. \n    # Acceptable Values:\n    #   1 - Report errors, but do nothing\n    #   2 - Report errors, and zero out loci in families where genotyping error has been found\n    #   3 - Report errors and remove pedigrees where the number of genotyping errors exceeds threshold\n    MENDELIAN_ERROR_LEVEL              1\n    # Set the threshold, if level is 3\n    MENDELIAN_PEDIGREE_THRESHOLD       0\n\n\n    ######################### Report Names ########################\n    # Pedigree report (genotypes and folding details)\n    EXT_PEDIGREE                       pedigree\n    # Distribution report (each item from the distribution)\n    EXT_DISTRIBUTION                   dist\n    # Write a copy of the 'cleaned' output to file\n    WRITE_CLEAN_DATAFILE               No\n    # Extension of the file (above)\n    EXT_CLEANED_DATA                   ped\n    EOF\n\n    mdrpdt64 parameters.txt\n    \"\"\"",
        "nb_lignes_script": 73,
        "language_script": "bash",
        "tools": [
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "n_snps",
            "ped"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hclimente__gwas-tools",
        "directive": [
            "publishDir \"$params.out\", overwrite: true, mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}