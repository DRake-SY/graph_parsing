{
    "OPERATION_1": {
        "string": "Channel\n      .fromFilePairs( \"${params.indir}/*_R{1,2}.{fastq,fq}.gz\" )\n      .ifEmpty { error \"Cannot find any *_R{1,2}.{fastq,fq}.gz files in: ${params.reads}\" }\n      .into { readsChannel; qcChannel }",
        "origin": [
            [
                "\"${params.indir}/*_R{1,2}.{fastq,fq}.gz\"",
                "A"
            ]
        ],
        "gives": [
            [
                "readsChannel",
                "P"
            ],
            [
                "qcChannel",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n      .fromPath( \"${params.indir}/*.{fastq,fq}.gz\" )\n      .map { file -> tuple( file.baseName.replaceAll(/\\.fastq|\\.fq/, ''), file ) }\n      .ifEmpty { error \"Cannot find any *.{fastq,fq}.gz files in: ${params.indir}\" }\n      .into { readsChannel; qcChannel }",
        "origin": [
            [
                "\"${params.indir}/*.{fastq,fq}.gz\"",
                "A"
            ]
        ],
        "gives": [
            [
                "readsChannel",
                "P"
            ],
            [
                "qcChannel",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.fromPath(params.multiqc_config, checkIfExists: true).set { ch_config_for_multiqc }",
        "origin": [
            [
                "params.multiqc_config, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_config_for_multiqc",
                "P"
            ]
        ]
    }
}