{
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc{\n  tag \"FastQC on $sample_id\"\n  label \"process_low\"\n  publishDir \"${params.outdir}/qc/$sample_id\", mode: 'copy'\n  \n  input:\n    tuple val(sample_id), path(reads) from qcChannel\n\n  output:\n    tuple file('*.html'), file('*.zip') into ch_out_fastqc\n  \n  script:\n\n  \"\"\"\n  fastqc --threads ${params.threads} ${reads}\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  fastqc --threads ${params.threads} ${reads}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "qcChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_out_fastqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"FastQC on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/qc/$sample_id\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_reads": {
        "name_process": "merge_reads",
        "string_process": " process merge_reads{\n      tag \"FLASh on $sample_id\"\n      label \"process_high\"\n      publishDir \"${params.outdir}/merged_reads/$sample_id\", mode: 'symlink'\n\n      input:\n        tuple val(sample_id), path(reads) from readsChannel\n\n      output:\n        set val(sample_id), file(\"${sample_id}.extendedFrags.fastq.gz\") into mergedReadsChannel\n        file \"${sample_id}.notCombined_1.fastq.gz\"\n        file \"${sample_id}.notCombined_2.fastq.gz\"\n        file \"${sample_id}.hist\"\n        file \"${sample_id}.histogram\"\n        file \"${sample_id}.flash.log\" into mergedLogChannel\n\n      script: \n      \"\"\"\n      flash -z --min-overlap=10 -t ${params.threads} --output-prefix=${sample_id} ${reads} 2> \"${sample_id}.flash.log\"\n      \"\"\"\n    }",
        "nb_lignes_process": 19,
        "string_script": "      \"\"\"\n      flash -z --min-overlap=10 -t ${params.threads} --output-prefix=${sample_id} ${reads} 2> \"${sample_id}.flash.log\"\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FLASH"
        ],
        "tools_url": [
            "https://bio.tools/flash"
        ],
        "tools_dico": [
            {
                "name": "FLASH",
                "uri": "https://bio.tools/flash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Identifies paired-end reads which overlap in the middle, converting them to single long reads",
                "homepage": "http://ccb.jhu.edu/software/FLASH/"
            }
        ],
        "inputs": [
            "readsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mergedReadsChannel",
            "mergedLogChannel"
        ],
        "nb_outputs": 2,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"FLASh on $sample_id\"",
            "label \"process_high\"",
            "publishDir \"${params.outdir}/merged_reads/$sample_id\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_reads_PE": {
        "name_process": "gunzip_reads_PE",
        "string_process": " process gunzip_reads_PE{\n    tag \"gunzip -f on $sample_id\"\n    label \"process_low\"\n  \n    input:\n      tuple val(sample_id), path(reads) from mergedReadsChannel\n\n    output:\n      set val(sample_id), file(\"${sample_id}.extendedFrags.fastq\") into prefilterReadsChannel\n  \n    script:\n    \"\"\"\n    gunzip -f ${reads}\n    \"\"\"\n    }",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    gunzip -f ${reads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mergedReadsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "prefilterReadsChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"gunzip -f on $sample_id\"",
            "label \"process_low\""
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_reads_SE": {
        "name_process": "gunzip_reads_SE",
        "string_process": " process gunzip_reads_SE{\n    tag \"gunzip -f on $sample_id\"\n    label \"process_low\"\n\n    input:\n      tuple val(sample_id), path(reads) from readsChannel\n\n    output:\n      set val(sample_id), file(\"*.fastq\") into prefilterReadsChannel\n  \n    script:\n    \"\"\"\n    gunzip -f ${reads}\n    \"\"\"\n  }",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    gunzip -f ${reads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "prefilterReadsChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"gunzip -f on $sample_id\"",
            "label \"process_low\""
        ],
        "when": "",
        "stub": ""
    },
    "filter_reads_PE": {
        "name_process": "filter_reads_PE",
        "string_process": " process filter_reads_PE{\n    tag \"fastx-toolkit fastq_filter_quality on $sample_id\"\n    label \"process_low\"\n    publishDir \"${params.outdir}/filtered_reads/\", mode: 'symlink'\n\n    input:\n      tuple val(sample_id), path(reads) from prefilterReadsChannel\n\n    output:\n      set val(sample_id), file(\"${sample_id}.filtered.fastq.gz\") into filteredReadsChannel\n      file(\"${sample_id}.filter.log\") into filteredLogChannel\n\n    script:\n    \"\"\"\n    fastq_quality_filter -z -v -p ${params.pctqual} -q ${params.minqual} -i ${reads} > ${sample_id}.filtered.fastq.gz 2> ${sample_id}.filter.log\n    \"\"\"\n  }",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    fastq_quality_filter -z -v -p ${params.pctqual} -q ${params.minqual} -i ${reads} > ${sample_id}.filtered.fastq.gz 2> ${sample_id}.filter.log\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "prefilterReadsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filteredReadsChannel",
            "filteredLogChannel"
        ],
        "nb_outputs": 2,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"fastx-toolkit fastq_filter_quality on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/filtered_reads/\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "filter_reads_SE": {
        "name_process": "filter_reads_SE",
        "string_process": " process filter_reads_SE{\n    tag \"fastx-toolkit fastq_filter_quality on $sample_id\"\n    label \"process_low\"\n    publishDir \"${params.outdir}/filtered_reads/\", mode: 'symlink'\n\n    input:\n      tuple val(sample_id), path(reads) from prefilterReadsChannel\n\n    output:\n      set val(sample_id), file(\"${sample_id}.filtered.fastq.gz\") into filteredReadsChannel\n      file(\"${sample_id}.filter.log\") into filteredLogChannel\n  \n    script:\n    \"\"\"\n    fastq_quality_filter -z -v -p ${params.pctqual} -q ${params.minqual} -i ${reads} > ${sample_id}.filtered.fastq.gz 2> ${sample_id}.filter.log\n    \"\"\" \n  }",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    fastq_quality_filter -z -v -p ${params.pctqual} -q ${params.minqual} -i ${reads} > ${sample_id}.filtered.fastq.gz 2> ${sample_id}.filter.log\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "prefilterReadsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filteredReadsChannel",
            "filteredLogChannel"
        ],
        "nb_outputs": 2,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"fastx-toolkit fastq_filter_quality on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/filtered_reads/\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "cutadapt_reads": {
        "name_process": "cutadapt_reads",
        "string_process": "\nprocess cutadapt_reads{\n  tag \"cutadapt on $sample_id\"\n  label \"process_low\"\n  publishDir \"${params.outdir}/trimmed_reads/\", mode: 'symlink'\n\n  input:\n    tuple val(sample_id), path(reads) from filteredReadsChannel\n\n  output:\n    set val(sample_id), file(\"${sample_id}.trimmed.fastq\") into trimmedReadsChannel\n    file(\"${sample_id}.cutadapt.log\") into trimmedLogChannel\n  \n  script:\n  if( params.merge )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}...${params.downconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else if( params.constants == \"both\" )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}...${params.downconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else if( params.merge && params.constants == \"up\" )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else\n    \"\"\"\n    cutadapt -g \"${params.upconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  if( params.merge )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}...${params.downconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else if( params.constants == \"both\" )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}...${params.downconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else if( params.merge && params.constants == \"up\" )\n    \"\"\"\n    cutadapt -g \"${params.upconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"\n  else\n    \"\"\"\n    cutadapt -g \"${params.upconstant}\" --trimmed-only --max-n=0 -m 15 ${reads} > ${sample_id}.trimmed.fastq 2> ${sample_id}.cutadapt.log\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "Cutadapt"
        ],
        "tools_url": [
            "https://bio.tools/cutadapt"
        ],
        "tools_dico": [
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            }
        ],
        "inputs": [
            "filteredReadsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmedReadsChannel",
            "trimmedLogChannel"
        ],
        "nb_outputs": 2,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"cutadapt on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/trimmed_reads/\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "buildIndex": {
        "name_process": "buildIndex",
        "string_process": "\nprocess buildIndex {\n  tag \"bowtie_build on $reference\"\n  label \"process_medium\"\n     \n  input:\n    path reference from params.ref\n      \n  output:\n    path 'genome.index*' into indexChannel\n  \n  script:\n  \"\"\"\n  bowtie-build $reference genome.index\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  bowtie-build $reference genome.index\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Bowtie"
        ],
        "tools_url": [
            "https://bio.tools/bowtie"
        ],
        "tools_dico": [
            {
                "name": "Bowtie",
                "uri": "https://bio.tools/bowtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Bowtie is an ultrafast, memory-efficient short read aligner.",
                "homepage": "http://bowtie-bio.sourceforge.net/index.shtml"
            }
        ],
        "inputs": [
            "params"
        ],
        "nb_inputs": 1,
        "outputs": [
            "indexChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"bowtie_build on $reference\"",
            "label \"process_medium\""
        ],
        "when": "",
        "stub": ""
    },
    "align_barcodes": {
        "name_process": "align_barcodes",
        "string_process": "\nprocess align_barcodes{\n  tag \"bowtie on $sample_id\"\n  label \"process_low\"\n  publishDir \"${params.outdir}/mapped_reads/\", mode: 'symlink'\n\n  input:\n    tuple val(sample_id), file(reads) from trimmedReadsChannel\n    path index from indexChannel\n\n  output:\n    set val(sample_id), \"${sample_id}.mapped.bam\" into mappedReadsChannel\n    file \"${sample_id}.unmapped.fastq\" optional true into unmappedReadsChannel\n    file \"${sample_id}.mapped.bam.bai\"\n    file(\"${sample_id}.bowtie.log\") into mappedLogChannel\n    \n  script:\n  \"\"\"\n  bowtie -v ${params.alnmismatches} --norc -t -p ${params.threads} --un ${sample_id}.unmapped.fastq --sam genome.index ${reads} 2> ${sample_id}.bowtie.log | samtools view -Sb - | samtools sort - > ${sample_id}.mapped.bam\n  samtools index ${sample_id}.mapped.bam ${sample_id}.mapped.bam.bai\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  \"\"\"\n  bowtie -v ${params.alnmismatches} --norc -t -p ${params.threads} --un ${sample_id}.unmapped.fastq --sam genome.index ${reads} 2> ${sample_id}.bowtie.log | samtools view -Sb - | samtools sort - > ${sample_id}.mapped.bam\n  samtools index ${sample_id}.mapped.bam ${sample_id}.mapped.bam.bai\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Bowtie",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bowtie",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Bowtie",
                "uri": "https://bio.tools/bowtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Bowtie is an ultrafast, memory-efficient short read aligner.",
                "homepage": "http://bowtie-bio.sourceforge.net/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmedReadsChannel",
            "indexChannel"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mappedReadsChannel",
            "unmappedReadsChannel",
            "mappedLogChannel"
        ],
        "nb_outputs": 3,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"bowtie on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/mapped_reads/\", mode: 'symlink'"
        ],
        "when": "",
        "stub": ""
    },
    "get_barcode_counts": {
        "name_process": "get_barcode_counts",
        "string_process": "\nprocess get_barcode_counts{\n  tag \"samtools idxstats on $sample_id\"\n  label \"process_low\"\n  publishDir \"${params.outdir}/counts/\", mode: 'copy'\n\n  input:\n    tuple val(sample_id), file(reads) from mappedReadsChannel\n\n  output:\n    set val(sample_id), file(\"${sample_id}_rawcounts.txt\") into rawCountsChannel\n  \n  shell:\n  \"\"\"\n  samtools idxstats ${reads} | cut -f1,3 > ${sample_id}_rawcounts.txt\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools idxstats ${reads} | cut -f1,3 > ${sample_id}_rawcounts.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mappedReadsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rawCountsChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "tag \"samtools idxstats on $sample_id\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/counts/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "combine_barcode_counts": {
        "name_process": "combine_barcode_counts",
        "string_process": "\nprocess combine_barcode_counts{\n  label \"process_low\"\n  publishDir \"${params.outdir}/counts/\", mode: 'copy'\n\n  input:\n  file(counts) from rawCountsChannel.collect()\n\n  output:\n    file \"all_counts_combined.txt\"\n  \n  script: \n  \"\"\"\n  Rscript $projectDir/scripts/combine_counts.R $counts all_counts_combined.txt\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  Rscript $projectDir/scripts/combine_counts.R $counts all_counts_combined.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rawCountsChannel"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "label \"process_low\"",
            "publishDir \"${params.outdir}/counts/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n  label \"process_low\"\n\n  publishDir \"${params.outdir}\", mode: 'copy', overwrite: 'true'\n\n  input:\n    file multiqc_config from ch_config_for_multiqc\n    file (fastqc: 'qc/*') from ch_out_fastqc.collect().ifEmpty([])\n    file (fastx: \"${params.outdir}/filtered_reads/*.filter.log\") from filteredLogChannel.collect().ifEmpty([])\n    file (cutadapt: \"${params.outdir}/trimmed_reads/*.cutadapt.log\") from trimmedLogChannel.collect().ifEmpty([])\n    file (bowtie: \"${params.outdir}/mapped_reads/*.bowtie.log\") from mappedLogChannel.collect().ifEmpty([])\n\n  output:\n    file \"multiqc_report.html\" into multiqc_report\n    file \"multiqc_data\"\n\n  script:\n  \"\"\"\n  export LC_ALL=C.UTF-8\n  export LANG=C.UTF-8\n  multiqc -v -f --config $multiqc_config .\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  \"\"\"\n  export LC_ALL=C.UTF-8\n  export LANG=C.UTF-8\n  multiqc -v -f --config $multiqc_config .\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_config_for_multiqc",
            "ch_out_fastqc",
            "filteredLogChannel",
            "trimmedLogChannel",
            "mappedLogChannel"
        ],
        "nb_inputs": 5,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "label \"process_low\"",
            "publishDir \"${params.outdir}\", mode: 'copy', overwrite: 'true'"
        ],
        "when": "",
        "stub": ""
    },
    "software_check": {
        "name_process": "software_check",
        "string_process": "\nprocess software_check {\n  label 'software_check'\n\n  publishDir params.outdir, mode: 'copy', overwrite: 'true'\n\n  output:\n    file(\"software_check.txt\") into versionsChannel\n\n  script:\n  \"\"\"\n  bash $projectDir/scripts/check_versions.sh software_check.txt\n  \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "  \"\"\"\n  bash $projectDir/scripts/check_versions.sh software_check.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "versionsChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "DaneVass__BARtab",
        "directive": [
            "label 'software_check'",
            "publishDir params.outdir, mode: 'copy', overwrite: 'true'"
        ],
        "when": "",
        "stub": ""
    }
}