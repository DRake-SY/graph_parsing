{
    "align_bwa": {
        "name_process": "align_bwa",
        "string_process": "\nprocess align_bwa {\n\n    input:\n        set baseName, file(fastqs) from ch_inputFiles\n    output:\n        set baseName, file(\"${baseName}.hq.sorted.bam\"), file(\"${baseName}.hq.sorted.bam.bai\") into ch_mappedBams\n\n    publishDir path: './bam_out', mode: 'copy'\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module      bwaModule\n    module      samtoolsModule\n    cpus        bwaCores\n    memory      globalMemoryM\n    time        globalTimeM\n    queue       globalQueueL\n\n    \"\"\"\n    bwa mem -M -t ${task.cpus} -R \"@RG\\\\tID:${baseName}\\\\tSM:${baseName}\\\\tPU:lib1\\\\tPL:Illumina\" $ref ${fastqs[0]} ${fastqs[1]}  \\\n        | samtools view -u -h -q 1 -f 2 -F 4 -F 8 -F 256 - \\\n        | samtools sort -@ $bwaCores -o \"${baseName}.hq.sorted.bam\"\n    samtools index \"${baseName}.hq.sorted.bam\" \"${baseName}.hq.sorted.bam.bai\"\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    bwa mem -M -t ${task.cpus} -R \"@RG\\\\tID:${baseName}\\\\tSM:${baseName}\\\\tPU:lib1\\\\tPL:Illumina\" $ref ${fastqs[0]} ${fastqs[1]}  \\\n        | samtools view -u -h -q 1 -f 2 -F 4 -F 8 -F 256 - \\\n        | samtools sort -@ $bwaCores -o \"${baseName}.hq.sorted.bam\"\n    samtools index \"${baseName}.hq.sorted.bam\" \"${baseName}.hq.sorted.bam.bai\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mappedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "run_bamClipper": {
        "name_process": "run_bamClipper",
        "string_process": "\nprocess run_bamClipper {\n    input:\n        set baseName, file(bam), file(bai) from ch_forBamClipper               \n    output: \n        set baseName, file(\"${baseName}.hq.sorted.primerclipped.bam\"), file(\"${baseName}.hq.sorted.primerclipped.bam.bai\") into ch_forperBase          \n    \n    publishDir path: './bamclipper', mode: 'copy'                                    \n    \n    executor    globalExecutor                                                    \n    stageInMode globalStageInMode                                                 \n    memory      globalMemoryM \n    time        globalTimeM\n    queue       globalQueueL \n    module      'gnuparallel/20190122'\n    module      'samtools'\n\n    \"\"\"\n    ${bamclipper_exe} -b ${bam} -p ${primer_bedpe_file} -n ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    ${bamclipper_exe} -b ${bam} -p ${primer_bedpe_file} -n ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_forBamClipper"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_forperBase"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "AmpliconMetircs": {
        "name_process": "AmpliconMetircs",
        "string_process": "\nprocess AmpliconMetircs {\n\n    label 'medium_1h'\n\n    input:\n        set sample, file(bam), file(bai) from ch_mappedBam6\n    output:\n        file(\"${sample}.amplicon.out\") into ch_AmpliconMetrics\n    \n\n    script:\n    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    bedtools coverage -f 5E-1 -a $params.restrictedBed -b $bam | sed \"s/\\$/\\t$sample/\" > ${sample}.amplicon.out \n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    bedtools coverage -f 5E-1 -a $params.restrictedBed -b $bam | sed \"s/\\$/\\t$sample/\" > ${sample}.amplicon.out \n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "ch_mappedBam6"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_AmpliconMetrics"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "catAmplicons": {
        "name_process": "catAmplicons",
        "string_process": "\nprocess catAmplicons {\n\n    label 'medium_1h'\n\n    publishDir path: './metrics/', mode: 'copy'\n\n    input:\n        file(amplicon) from ch_catAmp\n    output:\n        file(\"amplicon.stats.tsv\")\n\n    script:\n\n    \"\"\"\n    cat ${amplicon} > \"amplicon.stats.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    cat ${amplicon} > \"amplicon.stats.tsv\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_catAmp"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'",
            "publishDir path: './metrics/', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "InstersectBed": {
        "name_process": "InstersectBed",
        "string_process": "\nprocess InstersectBed {\n    label 'medium_1h'\n    input:\n        set sample, file(bam) from ch_1\n    output:\n        set sample, file(\"${sample}.intersectbed.bam\") into ch_intersectBam\n    \n    script:\n    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    intersectBed -abam ${bam} -b ${bed_target} > ${sample}.intersectbed.bam\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    intersectBed -abam ${bam} -b ${bed_target} > ${sample}.intersectbed.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_intersectBam"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "CoverageBed": {
        "name_process": "CoverageBed",
        "string_process": "\nprocess CoverageBed {\n    label 'medium_1h'\n    input:\n        set sample, file(bam) from ch_2\n    output:\n        set sample, file(\"${sample}.bedtools_hist_all.txt\") into ch_bedtools\n\n    script:\n    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    coverageBed -b ${bam} -a ${bed_target} \\\n        -sorted -hist -g ${genome_file} | \\\n        grep all > \"${sample}.bedtools_hist_all.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    coverageBed -b ${bam} -a ${bed_target} \\\n        -sorted -hist -g ${genome_file} | \\\n        grep all > \"${sample}.bedtools_hist_all.txt\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bedtools"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "ReadsMapped": {
        "name_process": "ReadsMapped",
        "string_process": "\nprocess ReadsMapped {\n    label 'medium_1h'\n    input:\n        set sample, file(bam) from ch_3\n    output:\n        set sample, file(\"${sample}.mapped_to_genome.txt\") into ch_onGenome\n\n\n    module      'samtools/1.9'\n\n    \n    script:\n    \"\"\"\n    samtools view -c -F4 ${bam} > \"${sample}.mapped_to_genome.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools view -c -F4 ${bam} > \"${sample}.mapped_to_genome.txt\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_3"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_onGenome"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "ReadsTotal": {
        "name_process": "ReadsTotal",
        "string_process": "\nprocess ReadsTotal {\n    input:\n        set sample, file(bam), file(bai) from ch_mappedBam5\n    output:\n        set sample, file(\"${sample}.total_raw_reads.txt\") into ch_onTotal\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    module      'samtools/1.9'\n    memory      globalMemoryM\n    time        globalTimeM\n    queue       globalQueueL\n    errorStrategy 'ignore'\n    \n    script:\n    \"\"\"\n    samtools view -c ${bam} > \"${sample}.total_raw_reads.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    samtools view -c ${bam} > \"${sample}.total_raw_reads.txt\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_mappedBam5"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_onTotal"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "TargetMapped": {
        "name_process": "TargetMapped",
        "string_process": "\nprocess TargetMapped {\n    \n    label 'medium_1h'\n    \n    input:\n        set sample, file(bam) from ch_intersectBam\n    output:\n        set sample, file(\"${sample}.mapped_to_target.txt\") into ch_onTarget\n    \n    module      'samtools/1.9'\n    \n    script:\n    \"\"\"\n    samtools view -c -F4 ${bam} > ${sample}.mapped_to_target.txt\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools view -c -F4 ${bam} > ${sample}.mapped_to_target.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_intersectBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_onTarget"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "collateData": {
        "name_process": "collateData",
        "string_process": "\nprocess collateData {\n    label 'medium_1h'\n    input:\n        set sample, file(bedtools), file(onGenome), file(onTarget) from ch_final2\n    output:\n        set sample, file(\"${sample}_summary_coverage.txt\") into ch_out\n    \n    publishDir path: './output/', mode: 'copy'\n\n    script:\n    \"\"\"\n    module purge\n    module load R/3.5.1\n    Rscript --vanilla /scratch/uc23/jste0021/stats.R \\\n            ${bedtools} \\\n            ${onGenome} \\\n            ${onTarget} \\\n            ${sample} \\\n            \"${sample}_summary_coverage.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    module purge\n    module load R/3.5.1\n    Rscript --vanilla /scratch/uc23/jste0021/stats.R \\\n            ${bedtools} \\\n            ${onGenome} \\\n            ${onTarget} \\\n            ${sample} \\\n            \"${sample}_summary_coverage.txt\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_final2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "catStats": {
        "name_process": "catStats",
        "string_process": "\nprocess catStats {\n\n    input:\n        file(stats) from ch_out2\n    output:\n        file(\"project_summary.txt\") into ch_out3\n    \n    publishDir path: './metrics/', mode: 'copy'\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeM\n    queue       globalQueueL\n    errorStrategy 'ignore'\n\n    script:\n    \"\"\"\n    cat ${rheader} ${stats} > \"project_summary.txt\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    cat ${rheader} ${stats} > \"project_summary.txt\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_out2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_out3"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "runFASTQC": {
        "name_process": "runFASTQC",
        "string_process": "\nprocess runFASTQC {\n\n    input:\n        set baseName, file(R1), file(R2), file(I2) from ch_forFastqc\n    output:\n        file(\"*.{html,zip}\") into ch_fastqcReports\n    \n    publishDir path: './output/metrics/fastqc', mode: 'copy'\n\n    cpus        2\n    module      'fastqc'\n    memory      globalMemoryM\n    time        '30m'\n    \n    script:\n    \n    \"\"\"\n    fastqc -t 2 -q $R1 $R2 $I2\n    \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    fastqc -t 2 -q $R1 $R2 $I2\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_forFastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqcReports"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "createUnmappedUMIBam": {
        "name_process": "createUnmappedUMIBam",
        "string_process": "\nprocess createUnmappedUMIBam {\n    \n    publishDir path: './output/intermediate', mode: 'copy'\n    \n    input:\n        set baseName, file(R1), file(R2), file(I2) from ch_inputFiles\n    output:\n        set baseName, file(\"${baseName}.unmapped.umi.bam\") into ch_unmappedUMIbams\n\n                                                            \n    \n    cpus        1\n    module      'fgbio'\n    module      'java'\n    memory      globalMemoryM\n    time        '30m'\n    \n    script:\n    \"\"\"\n    java -Xmx30g -Djava.io.tmpdir=$tmp_dir -XX:+AggressiveOpts -XX:+AggressiveHeap \\\n        -jar $fgbioJar FastqToBam --input $R1 $R2 $I2 --output \"${baseName}.unmapped.umi.bam\" --read-structures +T +T +M \\\n        --sample \"${baseName}\" --read-group-id \"${baseName}\" --library A --platform illumina --sort true\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    java -Xmx30g -Djava.io.tmpdir=$tmp_dir -XX:+AggressiveOpts -XX:+AggressiveHeap \\\n        -jar $fgbioJar FastqToBam --input $R1 $R2 $I2 --output \"${baseName}.unmapped.umi.bam\" --read-structures +T +T +M \\\n        --sample \"${baseName}\" --read-group-id \"${baseName}\" --library A --platform illumina --sort true\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_unmappedUMIbams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output/intermediate', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "markAdaptors": {
        "name_process": "markAdaptors",
        "string_process": "\nprocess markAdaptors {\n\n    publishDir path: './output/metrics/adaptor_marking', mode: 'copy', pattern: '*.tsv'\n\n    input:\n        set baseName, file(bam) from ch_unmappedUMIbams\n    output:\n        set baseName, file(\"${baseName}.unmapped.umi.marked.bam\"),\n                      file(\"${baseName}.unmapped.umi.marked_metrics.tsv\") into ch_markedUMIbams, ch_adaptorQC\n\n    cpus        1\n    module      'java'\n    memory      globalMemoryM\n    time        '30m'\n    \n\n    script:\n    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx30g -jar $picardJar MarkIlluminaAdapters \\\n        -INPUT $bam \\\n        -OUTPUT \"${baseName}.unmapped.umi.marked.bam\" \\\n        -METRICS \"${baseName}.unmapped.umi.marked_metrics.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx30g -jar $picardJar MarkIlluminaAdapters \\\n        -INPUT $bam \\\n        -OUTPUT \"${baseName}.unmapped.umi.marked.bam\" \\\n        -METRICS \"${baseName}.unmapped.umi.marked_metrics.tsv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_unmappedUMIbams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_markedUMIbams",
            "ch_adaptorQC cpus 1 module"
        ],
        "nb_outputs": 2,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output/metrics/adaptor_marking', mode: 'copy', pattern: '*.tsv'"
        ],
        "when": "",
        "stub": ""
    },
    "alignBwa": {
        "name_process": "alignBwa",
        "string_process": "\nprocess alignBwa {\n    input:\n        set baseName, file(bam), file(metrics) from ch_markedUMIbams\n    output:\n        set baseName, file(\"${baseName}.aligned.bam\") into ch_pipedBams, ch_mappedNoUMI, ch_forMetrics1\n\n    publishDir path: './output/bams', mode: 'copy'\n\n    module      bwaModule\n    module\t    'samtools'\n    module      'picard'\n    cpus        bwaCores\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    set -o pipefail\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar SamToFastq \\\n        -I \"$bam\" \\\n        -FASTQ '/dev/stdout' -CLIPPING_ATTRIBUTE XT -CLIPPING_ACTION 2 \\\n        -INTERLEAVE true -NON_PF true -TMP_DIR \"$tmp_dir\" | \\\n    bwa mem -M -t ${task.cpus} -p $ref /dev/stdin | \\\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar MergeBamAlignment \\\n        -ALIGNED_BAM '/dev/stdin' -UNMAPPED_BAM \"$bam\" \\\n        -OUTPUT \"${baseName}.aligned.bam\" -R \"$ref\" -ADD_MATE_CIGAR true \\\n        -CLIP_ADAPTERS false -MAX_INSERTIONS_OR_DELETIONS '-1' \\\n        -PRIMARY_ALIGNMENT_STRATEGY MostDistant -ATTRIBUTES_TO_RETAIN XS -TMP_DIR \"$tmp_dir\"\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    set -o pipefail\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar SamToFastq \\\n        -I \"$bam\" \\\n        -FASTQ '/dev/stdout' -CLIPPING_ATTRIBUTE XT -CLIPPING_ACTION 2 \\\n        -INTERLEAVE true -NON_PF true -TMP_DIR \"$tmp_dir\" | \\\n    bwa mem -M -t ${task.cpus} -p $ref /dev/stdin | \\\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar MergeBamAlignment \\\n        -ALIGNED_BAM '/dev/stdin' -UNMAPPED_BAM \"$bam\" \\\n        -OUTPUT \"${baseName}.aligned.bam\" -R \"$ref\" -ADD_MATE_CIGAR true \\\n        -CLIP_ADAPTERS false -MAX_INSERTIONS_OR_DELETIONS '-1' \\\n        -PRIMARY_ALIGNMENT_STRATEGY MostDistant -ATTRIBUTES_TO_RETAIN XS -TMP_DIR \"$tmp_dir\"\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "ch_markedUMIbams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_pipedBams",
            "ch_mappedNoUMI",
            "ch_forMetrics1 publishDir path"
        ],
        "nb_outputs": 3,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexPreUmiBam": {
        "name_process": "indexPreUmiBam",
        "string_process": "\nprocess indexPreUmiBam {\n    input:\n        set baseName, file(bam) from ch_mappedNoUMI\n    output:\n        set baseName, file(bam), file(\"${baseName}.aligned.bam.bai\") into ch_indexedMappedNoUMI\n    publishDir path: './output/bams', mode: 'copy'\n\n \n    module      'samtools'\n    cpus        globalCores\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    samtools index $bam ${baseName}.aligned.bam.bai\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    samtools index $bam ${baseName}.aligned.bam.bai\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_mappedNoUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indexedMappedNoUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "runVardictPREUMI": {
        "name_process": "runVardictPREUMI",
        "string_process": "\nprocess runVardictPREUMI {\n    input:\n        set sample, ttype, file(tbam), file(tbai), ntype, file(nbam), file(nbai), file(segment) from ch_vardictPREUMI\n    output:\n        set sample, file(tbam), file(nbam), file(\"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\") into ch_rawVardictSegmentsPREUMI\n\n    \n \n    cpus        6\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    \n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"${tbam}|${nbam}\" \\\n        -b \"${tbam}|${nbam}\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\"\n    \"\"\" \n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"${tbam}|${nbam}\" \\\n        -b \"${tbam}|${nbam}\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_vardictPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_rawVardictSegmentsPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "catSegmentsPREUMI": {
        "name_process": "catSegmentsPREUMI",
        "string_process": "\nprocess catSegmentsPREUMI {\n    echo true\n    input: \n        set sample, tbam, nbam, file(tsv) from ch_collatedSegmentsPREUMI\n    output: \n        set sample, tbam, nbam, file(\"${sample}.collated.vardict.tsv\") into ch_rawVardictPREUMI\n\n    \n  \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    \n    script:\n    \n    myfiles = tsv.collect().join(' ')\n\n    \"\"\"\n    cat ${myfiles} > ${sample}.collated.vardict.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "    myfiles = tsv.collect().join(' ')\n\n    \"\"\"\n    cat ${myfiles} > ${sample}.collated.vardict.tsv\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_collatedSegmentsPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_rawVardictPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "makeVCFPREUMI": {
        "name_process": "makeVCFPREUMI",
        "string_process": "\nprocess makeVCFPREUMI {\n    input:\n        set sample, tbam, nbam, file(tsv) from ch_rawVardictPREUMI\n    output:\n        set sample, file(\"${sample}.somatic.vardict.vcf\") into ch_outputVCFPREUMI\n    \n                                                           \n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/testsomatic.R | \\\n        /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_paired.pl -N \"${tbam}|${nbam}\"  \\\n        -f 0.01 > \"${sample}.somatic.vardict.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/testsomatic.R | \\\n        /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_paired.pl -N \"${tbam}|${nbam}\"  \\\n        -f 0.01 > \"${sample}.somatic.vardict.vcf\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_rawVardictPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_outputVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "reheaderPREUMIVCF": {
        "name_process": "reheaderPREUMIVCF",
        "string_process": "\nprocess reheaderPREUMIVCF {\n    input:\n        set sample, file(vcf) from ch_outputVCFPREUMI\n    output:\n        set sample, file(\"*.vcf.gz\") into ch_reheaderVCFPREUMI\n\n                                                                   \n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    module      'bcftools/1.8'\n\n    script:\n    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.vardict.sorted.vcf.gz -O z -\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.vardict.sorted.vcf.gz -O z -\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_outputVCFPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_reheaderVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "sortVCFSPREUMI": {
        "name_process": "sortVCFSPREUMI",
        "string_process": "\nprocess sortVCFSPREUMI {\n\n    input:\n        set baseName, file(vcf) from ch_reheaderVCFPREUMI\n    output:\n        set baseName, file(\"${baseName}.NoUMI.reheader.sorted.vcf.gz\") into ch_sortedVCFPREUMI\n\n    publishDir path: './output/vcf/noUMI', mode: 'copy'                                    \n    \n                                                 \n    memory      globalMemoryM \n    time        globalTimeS\n    module      'bcftools/1.8'\n\n    script:\n    \"\"\"\n    bcftools sort -o \"${baseName}.NoUMI.reheader.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    bcftools sort -o \"${baseName}.NoUMI.reheader.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_reheaderVCFPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sortedVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexVCFSPREUMI": {
        "name_process": "indexVCFSPREUMI",
        "string_process": "\nprocess indexVCFSPREUMI {\n    input:\n        set baseName, file(vcf) from ch_sortedVCFPREUMI\n    output:\n        set baseName, file(vcf), file(\"${baseName}.NoUMI.reheader.sorted.vcf.gz.tbi\") into ch_indexedVCFPREUMI\n\n    publishDir path: './output/vcf/noUMI', mode: 'copy'                                    \n    \n    \n    module      'bcftools/1.8'                                         \n    memory      globalMemoryM \n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.NoUMI.reheader.sorted.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.NoUMI.reheader.sorted.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_sortedVCFPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indexedVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "vt_decompose_normalisePREUMI": {
        "name_process": "vt_decompose_normalisePREUMI",
        "string_process": "\nprocess vt_decompose_normalisePREUMI {\n        \n    input:\n        set baseName, file(vcf), file(tbi) from ch_indexedVCFPREUMI\n    output:\n        set baseName, file(\"${baseName}.NoUMI.reheader.sorted.vt.vcf.gz\") into ch_vtDecomposeVCFPREUMI\n\n                                                                   \n\n    module      'vt'\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    \"\"\"\n    vt decompose -s $vcf | vt normalize -r $ref -o \"${baseName}.NoUMI.reheader.sorted.vt.vcf.gz\" -\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    vt decompose -s $vcf | vt normalize -r $ref -o \"${baseName}.NoUMI.reheader.sorted.vt.vcf.gz\" -\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "vt"
        ],
        "tools_url": [
            "https://bio.tools/vt"
        ],
        "tools_dico": [
            {
                "name": "vt",
                "uri": "https://bio.tools/vt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Variant tool set that discovers short variants from Next Generation Sequencing data.",
                "homepage": "http://genome.sph.umich.edu/wiki/Vt"
            }
        ],
        "inputs": [
            "ch_indexedVCFPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vtDecomposeVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "apply_vepPREUMI": {
        "name_process": "apply_vepPREUMI",
        "string_process": "\nprocess apply_vepPREUMI {\n\n    input:\n        set baseName, file(vcf) from ch_vtDecomposeVCFPREUMI\n    output:\n        set baseName, file(\"${baseName}.NoUMI.reheader.sorted.vt.vep.vcf\") into ch_vepVCFPREUMI\n\n    publishDir path: './output/vcf/noUMI', mode: 'copy'\n\n    cpus        12\n    memory      globalMemoryL\n    time        globalTimeS\n    \n    module      'vep/90'\n\n    \"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick --no_stats \\\n                      --custom $vep_brcaex,brcaex,vcf,exact,0,Clinical_significance_ENIGMA,Comment_on_clinical_significance_ENIGMA,Date_last_evaluated_ENIGMA,Pathogenicity_expert,HGVS_cDNA,HGVS_Protein,BIC_Nomenclature \\\n                      --custom $vep_gnomad,gnomAD,vcf,exact,0,AF_NFE,AN_NFE \\\n                      --custom $vep_revel,RVL,vcf,exact,0,REVEL_SCORE \\\n                      --plugin MaxEntScan,$vep_maxentscan \\\n                      --plugin ExAC,$vep_exac,AC,AN \\\n                      --plugin dbNSFP,$vep_dbnsfp,REVEL_score,REVEL_rankscore \\\n                      --plugin dbscSNV,$vep_dbscsnv \\\n                      --plugin CADD,$vep_cadd \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"${baseName}.NoUMI.reheader.sorted.vt.vep.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "\"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick --no_stats \\\n                      --custom $vep_brcaex,brcaex,vcf,exact,0,Clinical_significance_ENIGMA,Comment_on_clinical_significance_ENIGMA,Date_last_evaluated_ENIGMA,Pathogenicity_expert,HGVS_cDNA,HGVS_Protein,BIC_Nomenclature \\\n                      --custom $vep_gnomad,gnomAD,vcf,exact,0,AF_NFE,AN_NFE \\\n                      --custom $vep_revel,RVL,vcf,exact,0,REVEL_SCORE \\\n                      --plugin MaxEntScan,$vep_maxentscan \\\n                      --plugin ExAC,$vep_exac,AC,AN \\\n                      --plugin dbNSFP,$vep_dbnsfp,REVEL_score,REVEL_rankscore \\\n                      --plugin dbscSNV,$vep_dbscsnv \\\n                      --plugin CADD,$vep_cadd \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"${baseName}.NoUMI.reheader.sorted.vt.vep.vcf\"\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [
            "ch_vtDecomposeVCFPREUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vepVCFPREUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "groupreadsByUmi": {
        "name_process": "groupreadsByUmi",
        "string_process": "\nprocess groupreadsByUmi {\n    input:\n        set baseName, file(bam) from ch_pipedBams\n    output:\n        set baseName, file(\"${baseName}.piped.grouped.histogram.tsv\"), file(\"${baseName}.piped.grouped.bam\") into ch_umiGroupedBams\n    \n    publishDir path: './output/metrics/UMI/family_sizes', mode: 'copy', pattern: \"*.tsv\"\n\n    cpus        globalCores\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    \n    script:\n    \"\"\"\n    java -Xmx6g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar GroupReadsByUmi \\\n         -i ${bam} -f \"${baseName}.piped.grouped.histogram.tsv\" -o \"${baseName}.piped.grouped.bam\" -s Adjacency -e 1 \n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    java -Xmx6g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar GroupReadsByUmi \\\n         -i ${bam} -f \"${baseName}.piped.grouped.histogram.tsv\" -o \"${baseName}.piped.grouped.bam\" -s Adjacency -e 1 \n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_pipedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_umiGroupedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "generateConsensusReads": {
        "name_process": "generateConsensusReads",
        "string_process": "\nprocess generateConsensusReads {\n    input:\n        set baseName, file(hist), file(bam) from ch_umiGroupedBams\n    output:\n        set baseName, file(\"${baseName}.consensus.unmapped.bam\") into ch_unmappedConsensusBams\n                                                                \n\n    cpus        globalCores\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    java -Xmx6g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar CallMolecularConsensusReads \\\n        --input $bam --output ${baseName}.consensus.unmapped.bam \\\n        --error-rate-post-umi 30 --min-reads 1\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    java -Xmx6g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar CallMolecularConsensusReads \\\n        --input $bam --output ${baseName}.consensus.unmapped.bam \\\n        --error-rate-post-umi 30 --min-reads 1\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_umiGroupedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_unmappedConsensusBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "mapConsensusReads": {
        "name_process": "mapConsensusReads",
        "string_process": "\nprocess mapConsensusReads {\n    input:\n        set baseName, file(bam) from ch_unmappedConsensusBams\n    output:\n        set baseName, file(\"${baseName}.consensus.aligned.bam\") into ch_mappedConsensusBams, ch_forMetrics2\n    publishDir path: './output/bams', mode: 'copy'\n\n    module \t    bwaModule\n    cpus        bwaCores \n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar SamToFastq \\\n        -I \"$bam\" \\\n        -FASTQ /dev/stdout \\\n        -INTERLEAVE true -TMP_DIR $tmp_dir | \\\n    bwa mem -M -t ${task.cpus} -p $ref /dev/stdin | \\\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar MergeBamAlignment \\\n        -ALIGNED_BAM /dev/stdin -UNMAPPED_BAM \"$bam\" \\\n        -OUTPUT \"${baseName}.consensus.aligned.bam\" -R $ref -ADD_MATE_CIGAR true \\\n        -SO coordinate -CLIP_ADAPTERS false -MAX_INSERTIONS_OR_DELETIONS '-1' \\\n        -PRIMARY_ALIGNMENT_STRATEGY MostDistant -ATTRIBUTES_TO_RETAIN XS -TMP_DIR \"$tmp_dir\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar SamToFastq \\\n        -I \"$bam\" \\\n        -FASTQ /dev/stdout \\\n        -INTERLEAVE true -TMP_DIR $tmp_dir | \\\n    bwa mem -M -t ${task.cpus} -p $ref /dev/stdin | \\\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar $picardJar MergeBamAlignment \\\n        -ALIGNED_BAM /dev/stdin -UNMAPPED_BAM \"$bam\" \\\n        -OUTPUT \"${baseName}.consensus.aligned.bam\" -R $ref -ADD_MATE_CIGAR true \\\n        -SO coordinate -CLIP_ADAPTERS false -MAX_INSERTIONS_OR_DELETIONS '-1' \\\n        -PRIMARY_ALIGNMENT_STRATEGY MostDistant -ATTRIBUTES_TO_RETAIN XS -TMP_DIR \"$tmp_dir\"\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "ch_unmappedConsensusBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mappedConsensusBams",
            "ch_forMetrics2 publishDir path"
        ],
        "nb_outputs": 2,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexBam": {
        "name_process": "indexBam",
        "string_process": "\nprocess indexBam {\n    input:\n        set baseName, file(bam) from ch_mappedConsensusBams\n    output:\n        set baseName, file(bam), file(\"${baseName}.consensus.aligned.bam.bai\") into ch_indexedConsensusBams\n    publishDir path: './output/bams', mode: 'copy'\n\n \n    module      'samtools'\n    cpus        globalCores\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n    \"\"\"\n    samtools index $bam ${baseName}.consensus.aligned.bam.bai\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    samtools index $bam ${baseName}.consensus.aligned.bam.bai\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_mappedConsensusBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indexedConsensusBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "runVardict": {
        "name_process": "runVardict",
        "string_process": "\nprocess runVardict {\n    input:\n        set sample, ttype, file(tbam), file(tbai), ntype, file(nbam), file(nbai), file(segment) from ch_vardictInput\n    output:\n        set sample, file(tbam), file(nbam), file(\"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\") into ch_rawVardictSegments\n\n \n    cpus        6\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    \n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"${tbam}|${nbam}\" \\\n        -b \"${tbam}|${nbam}\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\"\n    \"\"\" \n\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"${tbam}|${nbam}\" \\\n        -b \"${tbam}|${nbam}\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${sample}.${ttype}_v_${ntype}.${segment}.somatic.vardict.tsv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_vardictInput"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_rawVardictSegments"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "catSegments": {
        "name_process": "catSegments",
        "string_process": "\nprocess catSegments {\n    echo true\n    input: \n        set sample, tbam, nbam, file(tsv) from ch_collatedSegments\n    output: \n        set sample, tbam, nbam, file(\"${sample}.collated.vardict.tsv\") into ch_rawVardict\n\n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    \n    script:  \n    myfiles = tsv.collect().join(' ')\n    \"\"\"\n    cat ${myfiles} > ${sample}.collated.vardict.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    myfiles = tsv.collect().join(' ')\n    \"\"\"\n    cat ${myfiles} > ${sample}.collated.vardict.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_collatedSegments"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_rawVardict"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "makeVCF": {
        "name_process": "makeVCF",
        "string_process": "\nprocess makeVCF {\n    input:\n        set sample, tbam, nbam, file(tsv) from ch_rawVardict\n    output:\n        set sample, file(\"${sample}.somatic.vardict.vcf\") into ch_outputVCF\n    \n                                                                \n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n\n    script:\n \n    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/testsomatic.R | \\\n    /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_paired.pl -N \"${tbam}|${nbam}\" -f 0.01 > \"${sample}.somatic.vardict.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/testsomatic.R | \\\n    /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_paired.pl -N \"${tbam}|${nbam}\" -f 0.01 > \"${sample}.somatic.vardict.vcf\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_rawVardict"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_outputVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "reheaderUMIVCF": {
        "name_process": "reheaderUMIVCF",
        "string_process": "\nprocess reheaderUMIVCF {\n    input:\n        set sample, file(vcf) from ch_outputVCF\n    output:\n        set sample, file(\"*.vcf.gz\") into ch_reheaderVCF\n\n                                                                \n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    module      'bcftools/1.8'\n\n    script:\n  \n    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.vardict.sorted.vcf.gz -O z -\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.vardict.sorted.vcf.gz -O z -\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_outputVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_reheaderVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "sortVCFS": {
        "name_process": "sortVCFS",
        "string_process": "\nprocess sortVCFS {\n\n    input:\n        set baseName, file(vcf) from ch_reheaderVCF\n    output:\n        set baseName, file(\"${baseName}.UMI.reheader.sorted.vcf.gz\") into ch_sortedVCF\n\n    publishDir path: './output/vcf/UMI', mode: 'copy'                                    \n    \n    module     'bcftools/1.8'                       \n    memory      globalMemoryM \n    time        globalTimeS\n    \n\n    script:\n \n    \"\"\"\n    bcftools sort -o \"${baseName}.UMI.reheader.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bcftools sort -o \"${baseName}.UMI.reheader.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_reheaderVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sortedVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexVCFS": {
        "name_process": "indexVCFS",
        "string_process": "\nprocess indexVCFS {\n  \n    label 'small_1'\n\n    input:\n        set baseName, file(vcf) from ch_vcfIN\n    output:\n        set baseName, file(vcf), file(\"${baseName}.vcf.gz.tbi\") into ch_indexedVCF\n\n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    module     'bcftools/1.8'\n    \n    script:\n    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_vcfIN"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indexedVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_1'"
        ],
        "when": "",
        "stub": ""
    },
    "vt_decompose_normalise": {
        "name_process": "vt_decompose_normalise",
        "string_process": "\nprocess vt_decompose_normalise {\n\n    label 'medium_6h'\n        \n    input:\n        set baseName, file(vcf), file(tbi) from ch_indexedVCF\n    output:\n        set baseName, file(\"${baseName}.vt.vcf.gz\") into ch_vtDecomposeVCF\n\n    publishDir path: './variants_raw_out', mode: 'copy'\n\n    \n    module      'vt'\n    \n    \"\"\"\n    vt decompose -s $vcf | vt normalize -n -r $ref -o \"${baseName}.vt.vcf.gz\" -\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    vt decompose -s $vcf | vt normalize -n -r $ref -o \"${baseName}.vt.vcf.gz\" -\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "vt"
        ],
        "tools_url": [
            "https://bio.tools/vt"
        ],
        "tools_dico": [
            {
                "name": "vt",
                "uri": "https://bio.tools/vt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Variant tool set that discovers short variants from Next Generation Sequencing data.",
                "homepage": "http://genome.sph.umich.edu/wiki/Vt"
            }
        ],
        "inputs": [
            "ch_indexedVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vtDecomposeVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_6h'"
        ],
        "when": "",
        "stub": ""
    },
    "apply_vep": {
        "name_process": "apply_vep",
        "string_process": "\nprocess apply_vep {\n\n    label 'vep'\n\n    input:\n        set baseName, file(vcf) from ch_vtDecomposeVCF\n    output:\n        set baseName, file(\"${baseName}.vt.vep.vcf\") into ch_vepVCF\n\n    publishDir path: './annotated_variants', mode: 'copy'\n\n    \n    \n    module      'vep/90'\n\n    \"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick --no_stats \\\n                      --uniprot --protein --ccds --canonical --domains \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"${baseName}.vt.vep.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick --no_stats \\\n                      --uniprot --protein --ccds --canonical --domains \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"${baseName}.vt.vep.vcf\"\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [
            "ch_vtDecomposeVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vepVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'vep'"
        ],
        "when": "",
        "stub": ""
    },
    "collectHSMetrics": {
        "name_process": "collectHSMetrics",
        "string_process": "\nprocess collectHSMetrics {\n\n    input:\n        set sample, file(bam) from ch_forHSMetrics\n    output:\n        set sample, file(\"*.HSmetrics.txt\"), file(\"*.pertarget.txt\") into ch_metrics\n    \n    publishDir path: './output/metrics/coverage', mode: 'copy'\n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    \n    script:\n\n    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectHsMetrics \\\n        -I ${bam} \\\n        -O \"${bam.baseName}.HSmetrics.txt\" \\\n        -R ${ref} \\\n        -BI $panel_int \\\n        -TI $padded_int \\\n        --PER_TARGET_COVERAGE \"${bam.baseName}.pertarget.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectHsMetrics \\\n        -I ${bam} \\\n        -O \"${bam.baseName}.HSmetrics.txt\" \\\n        -R ${ref} \\\n        -BI $panel_int \\\n        -TI $padded_int \\\n        --PER_TARGET_COVERAGE \"${bam.baseName}.pertarget.txt\"\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_forHSMetrics"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_metrics"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "collectMultipleMetrics": {
        "name_process": "collectMultipleMetrics",
        "string_process": "\nprocess collectMultipleMetrics {\n\n    input:\n        set sample, file(bam) from ch_forMultipleMetrics\n    output:\n        set sample, file(\"*multiple_metrics*\") into ch_metrics2\n    \n    publishDir path: './output/metrics/multiple', mode: 'copy'\n    \n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n \n    script:\n\n    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectMultipleMetrics \\\n        -I $bam \\\n        -O ${bam.baseName}.multiple_metrics \\\n        -R $ref\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectMultipleMetrics \\\n        -I $bam \\\n        -O ${bam.baseName}.multiple_metrics \\\n        -R $ref\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_forMultipleMetrics"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_metrics2"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "multiQC": {
        "name_process": "multiQC",
        "string_process": "\nprocess multiQC {\n\n    input:\n        file('coverage/*') from ch_metrics2.collect()\n        file('multiple/*') from ch_metrics.collect()\n        file('fastqc/*') from ch_fastqcReports.collect()\n        file('adaptor/*') from ch_adaptorQC.collect()\n    output:\n        set file(\"*multiqc_report.html\"), file(\"*multiqc_data\") into ch_multiQCOut\n\n    publishDir path: './output/metrics/report', mode: 'copy'\n\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeS\n    module      condaModule\n    conda       '/home/jste0021/.conda/envs/py3.5/'\n\n    script:\n    \n    \"\"\"\n    multiqc -f -v .\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    multiqc -f -v .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_metrics2",
            "ch_metrics",
            "ch_fastqcReports",
            "ch_adaptorQC"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_multiQCOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "surecallTrimmer": {
        "name_process": "surecallTrimmer",
        "string_process": "\nprocess surecallTrimmer {\n    input:\n        set baseName, file(fastqs) from inputFiles\n    output:\n        set baseName, file(\"${baseName}_R{1,2}.fastq.gz*\") into processedInputFiles,forFastqc\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    java -Xmx4g -jar ${surecalltrimmerJar} \\\n       -fq1 ${fastqs[0]} -fq2 ${fastqs[1]} -xt -out_loc .  \n    \"\"\"\n       \n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    java -Xmx4g -jar ${surecalltrimmerJar} \\\n       -fq1 ${fastqs[0]} -fq2 ${fastqs[1]} -xt -out_loc .  \n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "processedInputFiles",
            "forFastqc executor globalExecutor stageInMode globalStageInMode cpus 1 memory globalMemoryL time globalTimeL queue globalQueueL"
        ],
        "nb_outputs": 2,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "fastQC": {
        "name_process": "fastQC",
        "string_process": "\nprocess fastQC {\n    publishDir path: './fastqc_results', mode: 'copy'\n    input:\n        set baseName, file(fastq) from forFastqc\n    output:\n        set baseName, file(\"${baseName}*.zip\"), file(\"${baseName}*.html\") into fastQCOutput\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    module      'fastqc'\n    memory      globalMemoryS\n    time        globalTimeM\n    queue       globalQueueL\n\n    \"\"\"\n    fastqc $fastq\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    fastqc $fastq\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "forFastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastQCOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './fastqc_results', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sortBWA": {
        "name_process": "sortBWA",
        "string_process": "\nprocess sortBWA {\n    input:\n        set baseName, file(bam) from bamFiles\n    output:\n        set baseName, file(\"${baseName}.sorted.bam\") into sortedBams\n    \n    publishDir path: './bam_out', mode: 'copy'\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module      bwaModule\n    module      'samtools'\n    cpus        bwaCores\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    samtools sort -@ $bwaCores -o ${baseName}.sorted.bam $bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    samtools sort -@ $bwaCores -o ${baseName}.sorted.bam $bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sortedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "runLocatit": {
        "name_process": "runLocatit",
        "string_process": "\nprocess runLocatit {\n    input:\n        set baseName, file(bam), file(index) from locatitInput\n    output:\n        set baseName, file(\"${baseName}.locatit.bam\") into locatitBams\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module\t'java'\n    cpus        globalCores\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    java -Xmx14g -jar '/projects/vh83/local_software/agent/LocatIt_v4.0.1.jar' \\\n         -i -C -U -q 25 -m 3 -c 2500 -d 0 -IB -OB -b ${panel_bed}  \\\n         -o ${baseName}.locatit.bam ${bam} ${index}\n    \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    java -Xmx14g -jar '/projects/vh83/local_software/agent/LocatIt_v4.0.1.jar' \\\n         -i -C -U -q 25 -m 3 -c 2500 -d 0 -IB -OB -b ${panel_bed}  \\\n         -o ${baseName}.locatit.bam ${bam} ${index}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "locatitInput"
        ],
        "nb_inputs": 1,
        "outputs": [
            "locatitBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "generate_bam_index": {
        "name_process": "generate_bam_index",
        "string_process": "\nprocess generate_bam_index {\n    label 'small_short'\n\n    input:\n        set baseName, file(bam) from ch_inputFiles             \n    output: \n        set baseName, file(bam), file(\"${baseName}.bam.bai\") into ch_mappedBams           \n    \n    module samtoolsModule\n\n    script:\n    \"\"\"\n    samtools index $bam \"${baseName}.bam.bai\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools index $bam \"${baseName}.bam.bai\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mappedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_short'"
        ],
        "when": "",
        "stub": ""
    },
    "run_vardict_halo": {
        "name_process": "run_vardict_halo",
        "string_process": "\nprocess run_vardict_halo {\n\n    label 'vardict_small'\n\n    input:\n        set baseName, file(bam), file(bai) from ch_mappedBam_split.halo               \n    output: \n        set baseName, file(\"${baseName}.tsv\") into ch_vardict_halo_TSV           \n    \n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/git_controlled/vardict_testing/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" -p --nosv -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.intervalFile} > \"${baseName}.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/git_controlled/vardict_testing/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" -p --nosv -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.intervalFile} > \"${baseName}.tsv\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_mappedBam_split"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardict_halo_TSV"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'vardict_small'"
        ],
        "when": "",
        "stub": ""
    },
    "run_vardict_hiplex": {
        "name_process": "run_vardict_hiplex",
        "string_process": "\nprocess run_vardict_hiplex {\n\n    label 'vardict_small'\n\n    input:\n        set baseName, file(bam), file(bai) from ch_mappedBam_split.hiplex               \n    output: \n        set baseName, file(\"${baseName}.tsv\") into ch_vardict_hiplex_TSV           \n    \n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/git_controlled/vardict_testing/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" -p --nosv -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.vardictBed} > \"${baseName}.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/git_controlled/vardict_testing/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" -p --nosv -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.vardictBed} > \"${baseName}.tsv\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_mappedBam_split"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardict_hiplex_TSV"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'vardict_small'"
        ],
        "when": "",
        "stub": ""
    },
    "reheaderVCF": {
        "name_process": "reheaderVCF",
        "string_process": "\nprocess reheaderVCF {\n\n    label 'genomics_1'\n\n    input:\n        set baseName, file(vcf) from ch_vardictVCFs\n    \n    output:\n        set baseName, file(\"${baseName}.reheader.vcf.gz\") into ch_reheaderVCF\n\n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    module     'bcftools/1.8'\n\n    script:\n    \"\"\"\n    bcftools annotate -h ${header} -O z -o \"${baseName}.reheader.vcf.gz\" ${vcf}\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bcftools annotate -h ${header} -O z -o \"${baseName}.reheader.vcf.gz\" ${vcf}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_vardictVCFs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_reheaderVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'genomics_1'"
        ],
        "when": "",
        "stub": ""
    },
    "mergeVCFS": {
        "name_process": "mergeVCFS",
        "string_process": "\nprocess mergeVCFS {\n\n    label 'medium_6h'\n\n    echo true\n\n    publishDir './variants_merged/', mode: 'copy'\n\n    input:\n    file list from ch_list_f\n    file '*' from ch_all_files\n    \n    output:\n    file \"final_merge.vardict.vcf.gz\" into ch_mergedfinalVCF\n\n    module     'bcftools/1.8'\n    \n    script: \n    \n    \"\"\"\n    split -l 500 list2.txt temp_shorter_list_\n    for i in temp_shorter_*; do bcftools merge -m none --gvcf ${ref} -l \\$i -O z -o \\$i.merged.vcf.gz; bcftools index -t \\$i.merged.vcf.gz; done\n    ls *merged.vcf.gz > list3.txt\n    bcftools merge -m none -O z -o \"final_merge.vardict.vcf.gz\" -l list3.txt\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    split -l 500 list2.txt temp_shorter_list_\n    for i in temp_shorter_*; do bcftools merge -m none --gvcf ${ref} -l \\$i -O z -o \\$i.merged.vcf.gz; bcftools index -t \\$i.merged.vcf.gz; done\n    ls *merged.vcf.gz > list3.txt\n    bcftools merge -m none -O z -o \"final_merge.vardict.vcf.gz\" -l list3.txt\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_list_f",
            "ch_all_files"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_mergedfinalVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_6h'",
            "echo true",
            "publishDir './variants_merged/', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mergeGVCFS": {
        "name_process": "mergeGVCFS",
        "string_process": "\nprocess mergeGVCFS {\n    \n    label 'gatk_unknown'\n    echo 'true'\n    input:\n        file(vcf) from ch_gVcfs.collect()\n    output:\n        file(\"combined.g.vcf\") into ch_combinedGVCF\n\n    module gatkModule\n\n    script:\n\n    myfiles = vcf.join(' -V ')\n    \n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T CombineGVCFs -R ${ref} \\\n                  --disable_auto_index_creation_and_locking_when_reading_rods \\\n                  -V $myfiles -o \"combined.g.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    myfiles = vcf.join(' -V ')\n    \n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T CombineGVCFs -R ${ref} \\\n                  --disable_auto_index_creation_and_locking_when_reading_rods \\\n                  -V $myfiles -o \"combined.g.vcf\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_gVcfs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_combinedGVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'",
            "echo 'true'"
        ],
        "when": "",
        "stub": ""
    },
    "genotypeGVCF": {
        "name_process": "genotypeGVCF",
        "string_process": "\nprocess genotypeGVCF {\n    \n    label 'gatk_unknown'\n    \n    input:\n        file(vcf) from ch_combinedGVCF\n    output:\n        file 'genotyped.vcf' into ch_genotypedGVCFsnp, ch_genotypedGVCFindel, ch_forCombining\n    \n    module gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T GenotypeGVCFs -R ${ref} \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    --variant $vcf --out \"genotyped.vcf\" \\\n                    --variant ${ceu_mergeGvcf} --variant ${gbr_mergeGvcf} --variant ${fin_mergeGvcf}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T GenotypeGVCFs -R ${ref} \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    --variant $vcf --out \"genotyped.vcf\" \\\n                    --variant ${ceu_mergeGvcf} --variant ${gbr_mergeGvcf} --variant ${fin_mergeGvcf}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_combinedGVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_genotypedGVCFsnp",
            "ch_genotypedGVCFindel",
            "ch_forCombining module gatkModule"
        ],
        "nb_outputs": 3,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "snpRecalibrate": {
        "name_process": "snpRecalibrate",
        "string_process": "\nprocess snpRecalibrate {\n\n    label 'gatk_unknown'\n    \n    input:\n        file(vcf) from ch_genotypedGVCFsnp\n    output:\n        set file(vcf), file(\"output.recal_snp\"), file(\"output.tranches_snp\"), file(\"output.plots_snp\") into ch_applysnpRecal\n\n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T VariantRecalibrator \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --num_threads ${task.cpus} \\\n                    -resource:hapmap,known=false,training=true,truth=true,prior=15.0 $hapmap \\\n                    -resource:omni,known=false,training=true,truth=true,prior=12.0 $one_k_g_snps \\\n                    -resource:1000G,known=false,training=true,truth=false,prior=10.0 $one_k_g_highconf_snps \\\n                    -an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -an InbreedingCoeff \\\n                    -input $vcf --recal_file \"output.recal_snp\" --tranches_file \"output.tranches_snp\" \\\n                    -rscriptFile \"output.plots_snp\" -mode SNP\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T VariantRecalibrator \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --num_threads ${task.cpus} \\\n                    -resource:hapmap,known=false,training=true,truth=true,prior=15.0 $hapmap \\\n                    -resource:omni,known=false,training=true,truth=true,prior=12.0 $one_k_g_snps \\\n                    -resource:1000G,known=false,training=true,truth=false,prior=10.0 $one_k_g_highconf_snps \\\n                    -an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -an InbreedingCoeff \\\n                    -input $vcf --recal_file \"output.recal_snp\" --tranches_file \"output.tranches_snp\" \\\n                    -rscriptFile \"output.plots_snp\" -mode SNP\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_genotypedGVCFsnp"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_applysnpRecal"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "indelRecalibrate": {
        "name_process": "indelRecalibrate",
        "string_process": "\nprocess indelRecalibrate {\n    \n    label 'gatk_unknown'\n    \n    input:\n    file(vcf) from ch_genotypedGVCFindel\n    output:\n    set file(vcf), file(\"output.recal_indel\"), file(\"output.tranches_indel\"), file(\"output.plots_indel\") into ch_applyindelRecal\n    \n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar  -T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods\\\n                    -R $ref --num_threads ${task.cpus} \\\n                    -resource:mills,known=false,training=true,truth=true,prior=12.0 $mills_grch37 \\\n                    -resource:1000G,known=false,training=true,truth=true,prior=10.0 $one_k_g_indels \\\n                    --maxGaussians 4 -an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum -an InbreedingCoeff \\\n                    -input $vcf -recalFile \"output.recal_indel\" \\\n                    -tranchesFile \"output.tranches_indel\" -rscriptFile \"output.plots_indel\" \\\n                    -mode INDEL\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar  -T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods\\\n                    -R $ref --num_threads ${task.cpus} \\\n                    -resource:mills,known=false,training=true,truth=true,prior=12.0 $mills_grch37 \\\n                    -resource:1000G,known=false,training=true,truth=true,prior=10.0 $one_k_g_indels \\\n                    --maxGaussians 4 -an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum -an InbreedingCoeff \\\n                    -input $vcf -recalFile \"output.recal_indel\" \\\n                    -tranchesFile \"output.tranches_indel\" -rscriptFile \"output.plots_indel\" \\\n                    -mode INDEL\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_genotypedGVCFindel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_applyindelRecal"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "applySNPrecal": {
        "name_process": "applySNPrecal",
        "string_process": "\nprocess applySNPrecal{\n\n    label 'gatk_unknown'\n    \n    input:\n        set file(vcf), file(recal), file(tranch), file(plots) from ch_applysnpRecal\n    output:\n        file(\"snp_recal.vcf\") into ch_snpRecal\n    \n    module      gatkModule\n\n    script:\n    \"\"\"   \n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T ApplyRecalibration \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --ts_filter_level 99.5 --excludeFiltered --num_threads ${task.cpus} \\\n                    -input $vcf -recalFile $recal -tranchesFile $tranch \\\n                    -mode SNP -o \"snp_recal.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"   \n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T ApplyRecalibration \\\n                    --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --ts_filter_level 99.5 --excludeFiltered --num_threads ${task.cpus} \\\n                    -input $vcf -recalFile $recal -tranchesFile $tranch \\\n                    -mode SNP -o \"snp_recal.vcf\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_applysnpRecal"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_snpRecal"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "applyINDELrecal": {
        "name_process": "applyINDELrecal",
        "string_process": "\nprocess applyINDELrecal{\n    \n    label 'gatk_unknown'\n\n    input:\n        set file(vcf), file(recal), file(tranch), file(plots) from ch_applyindelRecal\n    output:\n        file(\"indel_recal.vcf\") into ch_indelRecal    \n    \n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --ts_filter_level 99.0 --excludeFiltered --num_threads ${task.cpus} \\\n                    -input $vcf -recalFile $recal -tranchesFile $tranch \\\n                    -mode INDEL -o \"indel_recal.vcf\"\n\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    -R $ref --ts_filter_level 99.0 --excludeFiltered --num_threads ${task.cpus} \\\n                    -input $vcf -recalFile $recal -tranchesFile $tranch \\\n                    -mode INDEL -o \"indel_recal.vcf\"\n\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_applyindelRecal"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indelRecal"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "combineAllRecal": {
        "name_process": "combineAllRecal",
        "string_process": "\nprocess combineAllRecal {\n    \n    label 'gatk_unknown'\n    \n    input:\n        file(snp_recal) from ch_snpRecal\n        file(indel_recal) from ch_indelRecal\n    output:\n        file(\"recalibrated.vcf\") into ch_finalGATKvcf\n                                                    \n\n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T CombineVariants \\\n                    -R $ref --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    --num_threads ${task.cpus} --genotypemergeoption UNSORTED --variant $snp_recal \\\n                    --variant $indel_recal -o \"recalibrated.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T CombineVariants \\\n                    -R $ref --disable_auto_index_creation_and_locking_when_reading_rods \\\n                    --num_threads ${task.cpus} --genotypemergeoption UNSORTED --variant $snp_recal \\\n                    --variant $indel_recal -o \"recalibrated.vcf\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_snpRecal",
            "ch_indelRecal"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_finalGATKvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "apply_vep_GATK": {
        "name_process": "apply_vep_GATK",
        "string_process": "\nprocess apply_vep_GATK {\n    \n    label 'vep'\n\n    input:\n        file(vcf) from ch_finalGATKvcf\n    output:\n        file(\"gatk.merged.vt.vep.vcf\") into ch_annotateGATK\n\n    publishDir path: './processed/gatk', mode: 'copy', pattern: \"*.vcf\"\n    \n    module      'vep/90'\n\n    script:\n\n    \"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick \\\n                      --custom $vep_brcaex,brcaex,vcf,exact,0,Clinical_significance_ENIGMA,Comment_on_clinical_significance_ENIGMA,Date_last_evaluated_ENIGMA,Pathogenicity_expert,HGVS_cDNA,HGVS_Protein,BIC_Nomenclature \\\n                      --custom $vep_gnomad,gnomAD,vcf,exact,0,AF_NFE,AN_NFE \\\n                      --custom $vep_revel,RVL,vcf,exact,0,REVEL_SCORE \\\n                      --plugin MaxEntScan,$vep_maxentscan \\\n                      --plugin ExAC,$vep_exac,AC,AN \\\n                      --plugin dbNSFP,$vep_dbnsfp,REVEL_score,REVEL_rankscore \\\n                      --plugin dbscSNV,$vep_dbscsnv \\\n                      --plugin CADD,$vep_cadd \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"gatk.merged.vt.vep.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    vep --cache --dir_cache $other_vep \\\n                      --assembly GRCh37 --refseq --offline \\\n                      --fasta $ref \\\n                      --sift b --polyphen b --symbol --numbers --biotype \\\n                      --total_length --hgvs --format vcf \\\n                      --vcf --force_overwrite --flag_pick \\\n                      --custom $vep_brcaex,brcaex,vcf,exact,0,Clinical_significance_ENIGMA,Comment_on_clinical_significance_ENIGMA,Date_last_evaluated_ENIGMA,Pathogenicity_expert,HGVS_cDNA,HGVS_Protein,BIC_Nomenclature \\\n                      --custom $vep_gnomad,gnomAD,vcf,exact,0,AF_NFE,AN_NFE \\\n                      --custom $vep_revel,RVL,vcf,exact,0,REVEL_SCORE \\\n                      --plugin MaxEntScan,$vep_maxentscan \\\n                      --plugin ExAC,$vep_exac,AC,AN \\\n                      --plugin dbNSFP,$vep_dbnsfp,REVEL_score,REVEL_rankscore \\\n                      --plugin dbscSNV,$vep_dbscsnv \\\n                      --plugin CADD,$vep_cadd \\\n                      --fork ${task.cpus} \\\n                      -i ${vcf} \\\n                      -o \"gatk.merged.vt.vep.vcf\"\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [
            "ch_finalGATKvcf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_annotateGATK"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'vep'"
        ],
        "when": "",
        "stub": ""
    },
    "run_vardict": {
        "name_process": "run_vardict",
        "string_process": "\nprocess run_vardict {\n\n    label 'vardict_small'\n\n    input:\n        set baseName, file(bam), file(bai) from ch_mappedBam1               \n    output: \n        set baseName, file(\"${baseName}.tsv\") into ch_vardictTSV           \n    \n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    \"\"\"\n    export PATH=/projects/vh83/local_software/vardict/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" --nosv -p -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.intervalFile} > \"${baseName}.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    export PATH=/projects/vh83/local_software/vardict/VarDictJava/build/install/VarDict/bin/:$PATH\n    VarDict -G ${ref} -f 0.1 -N \"${baseName}\" --nosv -p -b ${bam} -c 1 -S 2 -E 3 -g 4 ${params.intervalFile} > \"${baseName}.tsv\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_mappedBam1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardictTSV"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'vardict_small'"
        ],
        "when": "",
        "stub": ""
    },
    "runBazam": {
        "name_process": "runBazam",
        "string_process": "\nprocess runBazam {\n\n  label 'medium_6h'\n\n  publishDir path: './BAZAM', mode: 'copy'\n\n  input:\n    set sample, file(bam) from ch_bams\n  output:\n    set sample, file(\"${sample}_R1.fastq.gz\"), file(\"${sample}_R2.fastq.gz\")\n\n  module 'samtools'\n  \n  script:\n  \"\"\"\n  samtools index $bam\n  java -Xmx${task.memory.toGiga() - 2}g -jar $bazamJar -n ${task.cpus} -bam ${bam} -r1 ${sample}_R1.fastq.gz -r2 ${sample}_R2.fastq.gz\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  samtools index $bam\n  java -Xmx${task.memory.toGiga() - 2}g -jar $bazamJar -n ${task.cpus} -bam ${bam} -r1 ${sample}_R1.fastq.gz -r2 ${sample}_R2.fastq.gz\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sample"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_6h'",
            "publishDir path: './BAZAM', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "IntersectBed": {
        "name_process": "IntersectBed",
        "string_process": "\nprocess IntersectBed {\n\n    label 'medium_1h'\n\n    input:\n        set sample, file(bam), file(bai) from ch_mappedBam2\n    output:\n        set sample, file(\"${sample}.intersectbed.bam\") into ch_intersectBam\n    \n    script:\n    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    intersectBed -abam ${bam} -b ${intervalFile} > ${sample}.intersectbed.bam\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    module load bedtools/2.27.1-gcc5\n    intersectBed -abam ${bam} -b ${intervalFile} > ${sample}.intersectbed.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_mappedBam2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_intersectBam"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_1h'"
        ],
        "when": "",
        "stub": ""
    },
    "runDQC": {
        "name_process": "runDQC",
        "string_process": "\nprocess runDQC {\n\n    label 'small_short'\n\n    input:\n        file list from ch_celList_QC\n        file '*' from ch_cels_QC   \n    output:\n        set file(\"raw_dqc.txt\"), file(\"pass_DQC.txt\") into ch_DCQCout\n\n    publishDir path: './output/DQC', mode: 'copy'\n    \n    script:\n\n    \"\"\"\n    apt-geno-qc --analysis-files-path ${chip_library_path} \\\n    --xml-file ${chip_library_path}/Axiom_ABC.r2.apt-geno-qc.AxiomQC1.xml \\\n    --cel-files cel.txt \\\n    --out-file raw_dqc.txt \n    awk 'BEGIN{FS=OFS=\"\\t\"}{if(NR == 1){print}else if(\\$18 >= 0.82){ print \\$1}}' raw_dqc.txt > pass_DQC.txt\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    apt-geno-qc --analysis-files-path ${chip_library_path} \\\n    --xml-file ${chip_library_path}/Axiom_ABC.r2.apt-geno-qc.AxiomQC1.xml \\\n    --cel-files cel.txt \\\n    --out-file raw_dqc.txt \n    awk 'BEGIN{FS=OFS=\"\\t\"}{if(NR == 1){print}else if(\\$18 >= 0.82){ print \\$1}}' raw_dqc.txt > pass_DQC.txt\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_celList_QC",
            "ch_cels_QC"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_DCQCout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_short'"
        ],
        "when": "",
        "stub": ""
    },
    "runGTQC": {
        "name_process": "runGTQC",
        "string_process": "\nprocess runGTQC {\n\n    label 'small_short'\n\n    input:\n        set file(raw_dqc), file (pass_dqc) from ch_DCQCout\n        file '*' from ch_cels_GTQC   \n    output:\n        file(\"*\") into ch_GTQCout\n        \n    publishDir path: './output/GTQC', mode: 'copy'\n    \n    script:\n    \"\"\"\n    apt-genotype-axiom --analysis-files-path ${chip_library_path} \\\n    --arg-file  ${chip_library_path}/Axiom_ABC_96orMore_Step1.r2.apt-genotype-axiom.AxiomGT1.apt2.xml \\\n    --dual-channel-normalization true \\\n    --cel-files ./pass_DQC.txt \\\n    --table-output false \\\n    --out-dir . \\\n    --log-file ./apt2-axiom.log\n    awk 'BEGIN{FS=OFS=\"\\t\"}{if(\\$0 ~ /^#/){next}else if(\\$1 ~ /cel_files/){print}else if(\\$3 >= 97.0){ print \\$1}}' AxiomGT1.report.txt > pass_GT.txt\n    cut -f1 pass_GT.txt > pass_GT_cel_list.txt\n    \"\"\"\n  }",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    apt-genotype-axiom --analysis-files-path ${chip_library_path} \\\n    --arg-file  ${chip_library_path}/Axiom_ABC_96orMore_Step1.r2.apt-genotype-axiom.AxiomGT1.apt2.xml \\\n    --dual-channel-normalization true \\\n    --cel-files ./pass_DQC.txt \\\n    --table-output false \\\n    --out-dir . \\\n    --log-file ./apt2-axiom.log\n    awk 'BEGIN{FS=OFS=\"\\t\"}{if(\\$0 ~ /^#/){next}else if(\\$1 ~ /cel_files/){print}else if(\\$3 >= 97.0){ print \\$1}}' AxiomGT1.report.txt > pass_GT.txt\n    cut -f1 pass_GT.txt > pass_GT_cel_list.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_DCQCout",
            "ch_cels_GTQC"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_GTQCout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_short'"
        ],
        "when": "",
        "stub": ""
    },
    "createUnmappedBam": {
        "name_process": "createUnmappedBam",
        "string_process": "\nprocess createUnmappedBam {\n    \n    label 'small3h_6g' \n\n                                                            \n    \n    input:\n        set baseName, file(R1), file(R2) from ch_inputFiles\n    output:\n        set baseName, file(\"${baseName}.unmapped.bam\") into ch_unmappedBams\n\n    publishDir path: './output/intermediate', mode: 'copy'\n    \n    module      'fgbio'\n    module      'java'\n    \n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -Djava.io.tmpdir=$tmp_dir -XX:+AggressiveOpts -XX:+AggressiveHeap \\\n        -jar $fgbioJar FastqToBam --input $R1 $R2 --output \"${baseName}.unmapped.bam\" --read-structures +T +T \\\n        --sample \"${baseName}\" --read-group-id \"${baseName}\" --library A --platform illumina --sort true\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -Djava.io.tmpdir=$tmp_dir -XX:+AggressiveOpts -XX:+AggressiveHeap \\\n        -jar $fgbioJar FastqToBam --input $R1 $R2 --output \"${baseName}.unmapped.bam\" --read-structures +T +T \\\n        --sample \"${baseName}\" --read-group-id \"${baseName}\" --library A --platform illumina --sort true\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_unmappedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small3h_6g'"
        ],
        "when": "",
        "stub": ""
    },
    "markDuplicatesPicard": {
        "name_process": "markDuplicatesPicard",
        "string_process": "\nprocess markDuplicatesPicard {\n    \n    label 'small3h_6g'\n\n    input:\n        set baseName, bam from ch_mappedBams \n    output:\n        set baseName, file(\"${baseName}.mapped.marked.bam\") into ch_markedBamFiles\n        set baseName, file(\"${baseName}.markduplicates.metrics\") into ch_metrics\n\n    publishDir path: './output/metrics/markduplicates', mode: 'copy'\n\n    script:\n    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx${task.memory.toGiga() - 2}g -jar $picardJar MarkDuplicates \\\n        -INPUT $bam \\\n        -OUTPUT ${baseName}.mapped.marked.bam \\\n        -METRICS_FILE ${baseName}.markduplicates.metrics \\\n        -VALIDATION_STRINGENCY SILENT \\\n        -OPTICAL_DUPLICATE_PIXEL_DISTANCE 2500 \\\n        -ASSUME_SORT_ORDER queryname\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx${task.memory.toGiga() - 2}g -jar $picardJar MarkDuplicates \\\n        -INPUT $bam \\\n        -OUTPUT ${baseName}.mapped.marked.bam \\\n        -METRICS_FILE ${baseName}.markduplicates.metrics \\\n        -VALIDATION_STRINGENCY SILENT \\\n        -OPTICAL_DUPLICATE_PIXEL_DISTANCE 2500 \\\n        -ASSUME_SORT_ORDER queryname\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_mappedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_markedBamFiles",
            "ch_metrics"
        ],
        "nb_outputs": 2,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small3h_6g'"
        ],
        "when": "",
        "stub": ""
    },
    "sortBam": {
        "name_process": "sortBam",
        "string_process": "\nprocess sortBam {\n\n    label 'small3h_6g'\n\n    input:\n        set baseName, file(markedBam) from ch_markedBamFiles\n    output:\n        set baseName, file(\"${baseName}.mapped.marked.sorted.bam\") into ch_sortedBamFiles\n\n    script:\n    \"\"\"\n    java -Djava.io.tmpdir=$tmp_dir -Dpicard.useLegacyParser=false -Xmx${task.memory.toGiga() - 2}g -jar $picardJar SortSam \\\n        -INPUT $markedBam \\\n        -OUTPUT ${baseName}.mapped.marked.sorted.bam \\\n        -SORT_ORDER coordinate \\\n        -CREATE_INDEX false \\\n        -CREATE_MD5_FILE false \\\n        -MAX_RECORDS_IN_RAM 300000\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    java -Djava.io.tmpdir=$tmp_dir -Dpicard.useLegacyParser=false -Xmx${task.memory.toGiga() - 2}g -jar $picardJar SortSam \\\n        -INPUT $markedBam \\\n        -OUTPUT ${baseName}.mapped.marked.sorted.bam \\\n        -SORT_ORDER coordinate \\\n        -CREATE_INDEX false \\\n        -CREATE_MD5_FILE false \\\n        -MAX_RECORDS_IN_RAM 300000\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_markedBamFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sortedBamFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small3h_6g'"
        ],
        "when": "",
        "stub": ""
    },
    "generateBqsrModel": {
        "name_process": "generateBqsrModel",
        "string_process": "\nprocess generateBqsrModel {\n\n    label 'gatk_unknown'\n\n    input:\n        set baseName, file(sortedBam), file(bamIndex) from ch_forGATK\n    output:\n        set baseName, file(sortedBam), file(bamIndex), file(\"${baseName}.recalreport\") into ch_recalReportsBams\n\n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T BaseRecalibrator \\\n        -R $ref \\\n        -I $sortedBam \\\n        -o ${baseName}.recalreport \\\n        -knownSites $millsIndels \\\n        -knownSites $knownIndels \\\n        -knownSites $dbSNP \\\n        -L ${panel_int}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T BaseRecalibrator \\\n        -R $ref \\\n        -I $sortedBam \\\n        -o ${baseName}.recalreport \\\n        -knownSites $millsIndels \\\n        -knownSites $knownIndels \\\n        -knownSites $dbSNP \\\n        -L ${panel_int}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_forGATK"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_recalReportsBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "applyBqsrModel": {
        "name_process": "applyBqsrModel",
        "string_process": "\nprocess applyBqsrModel {\n\n    label 'gatk_unknown'\n\n    input:\n        set baseName, file(sortedBam), file(bamIndex), file(recalReport) from ch_recalReportsBams\n    output:\n        set baseName, file(\"${baseName}.mapped.marked.sorted.recal.bam\") into ch_recalibratedBams\n\n    module      gatkModule\n\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T PrintReads -R ${ref} -I ${sortedBam} --BQSR ${recalReport} \\\n                   -o ${baseName}.mapped.marked.sorted.recal.bam\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T PrintReads -R ${ref} -I ${sortedBam} --BQSR ${recalReport} \\\n                   -o ${baseName}.mapped.marked.sorted.recal.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_recalReportsBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_recalibratedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "call_variants": {
        "name_process": "call_variants",
        "string_process": "\nprocess call_variants {\n\n    label 'gatk_unknown'\n\n    input:\n        set baseName, file(bam) from ch_recalibratedBams\n    output:\n        file(\"${baseName}.mapped.marked.sorted.recal.g.vcf\") into ch_gVcfs\n    \n    publishDir path: './output/variants/GATK/gvcf', mode: 'copy'\n\n    module      gatkModule\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T HaplotypeCaller -R ${ref} --min_base_quality_score 20 \\\n                    --emitRefConfidence GVCF \\\n                    --num_cpu_threads_per_data_thread 8 \\\n                    -I ${bam} -L ${padded_int} -o \"${baseName}.mapped.marked.sorted.recal.g.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -jar $gatkJar -T HaplotypeCaller -R ${ref} --min_base_quality_score 20 \\\n                    --emitRefConfidence GVCF \\\n                    --num_cpu_threads_per_data_thread 8 \\\n                    -I ${bam} -L ${padded_int} -o \"${baseName}.mapped.marked.sorted.recal.g.vcf\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_recalibratedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_gVcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'gatk_unknown'"
        ],
        "when": "",
        "stub": ""
    },
    "vardict": {
        "name_process": "vardict",
        "string_process": "\nprocess vardict {\n    \n    label 'medium_6h'\n\n    input:\n        set baseName, file(bam), file(bai), file(segment) from ch_vardict\n    output:\n        set baseName, file(\"${baseName}.${segment}.vardict.tsv\") into ch_vardictSegments\n\n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"$baseName\" \\\n        -b \"$bam\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${baseName}.${segment}.vardict.tsv\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"$baseName\" \\\n        -b \"$bam\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${baseName}.${segment}.vardict.tsv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_vardict"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardictSegments"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_6h'"
        ],
        "when": "",
        "stub": ""
    },
    "index_bam": {
        "name_process": "index_bam",
        "string_process": "\nprocess index_bam{\n    label 'small_1'\n\n    module      samtoolsModule\n    \n    input:\n        set baseName, file(bam) from ch_inputFiles               \n    output: \n        set baseName, file(bam), file(\"${baseName}.bam.bai\") into ch_mappedBam           \n    \n    publishDir path: './variants_raw_out', mode: 'copy'                                    \n    \n    \"\"\"\n    samtools index ${baseName}.bam ${baseName}.bam.bai\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    samtools index ${baseName}.bam ${baseName}.bam.bai\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mappedBam"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_1'",
            "module samtoolsModule"
        ],
        "when": "",
        "stub": ""
    },
    "summary_callrates": {
        "name_process": "summary_callrates",
        "string_process": "\nprocess summary_callrates {\n\n  label 'small_3'\n\n    input:\n        file '*' from ch_GTQCout\n        file '*' from ch_cels_Summary \n\n    output:\n        file(\"*\") into ch_Summaryout\n        \n    publishDir path: './output/summary', mode: 'copy'\n\n  script:\n  \"\"\"\n  apt-genotype-axiom \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC.r2.apt-genotype-axiom.AxiomCN_GT1.apt2.xml \\\n  --cel-files $workflow.launchDir/output/GTQC/pass_GT_cel_list.txt \\\n  --out-dir ./ \\\n  --log-file ./apt2-axiom.log\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  \"\"\"\n  apt-genotype-axiom \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC.r2.apt-genotype-axiom.AxiomCN_GT1.apt2.xml \\\n  --cel-files $workflow.launchDir/output/GTQC/pass_GT_cel_list.txt \\\n  --out-dir ./ \\\n  --log-file ./apt2-axiom.log\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_GTQCout",
            "ch_cels_Summary"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_Summaryout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_3'"
        ],
        "when": "",
        "stub": ""
    },
    "CNV": {
        "name_process": "CNV",
        "string_process": "\nprocess CNV {\n\n  label 'small_3'\n\n    input:\n        file '*' from ch_Summaryout\n    output:\n        file(\"*\") into ch_CNVout\n    \n    publishDir path: './output/cn', mode: 'copy'\n\n  script:\n  \"\"\"\n  apt-copynumber-axiom-cnvmix \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC.r2.apt-copynumber-axiom-cnvmix.AxiomCNVmix.apt2.xml \\\n  --mapd-max 0.35 \\\n  --waviness-sd-max 0.1 \\\n  --summary-file $workflow.launchDir/output/summary/AxiomGT1.summary.a5 \\\n  --report-file $workflow.launchDir/output/summary/AxiomGT1.report.txt \\\n  --out-dir ./ \\\n  --log-file ./apt-copynumber-axiom.log\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "  \"\"\"\n  apt-copynumber-axiom-cnvmix \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC.r2.apt-copynumber-axiom-cnvmix.AxiomCNVmix.apt2.xml \\\n  --mapd-max 0.35 \\\n  --waviness-sd-max 0.1 \\\n  --summary-file $workflow.launchDir/output/summary/AxiomGT1.summary.a5 \\\n  --report-file $workflow.launchDir/output/summary/AxiomGT1.report.txt \\\n  --out-dir ./ \\\n  --log-file ./apt-copynumber-axiom.log\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_Summaryout"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_CNVout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_3'"
        ],
        "when": "",
        "stub": ""
    },
    "run_finalGT": {
        "name_process": "run_finalGT",
        "string_process": "\nprocess run_finalGT {\n   \n  label 'small_3'\n\n    input:\n        file '*' from ch_CNVout\n        file '*' from ch_cels_GT\n\n    output:\n        file(\"*\") into ch_GTout\n    \n    publishDir path: './output/genotypes', mode: 'copy'\n\n\n  script:\n  \"\"\"\n  apt-genotype-axiom \\\n  --copynumber-probeset-calls-file $workflow.launchDir/output/cn/AxiomCNVMix.cnpscalls.txt \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC_96orMore_Step2.r2.apt-genotype-axiom.mm.SnpSpecificPriors.AxiomGT1.apt2.xml \\\n  --dual-channel-normalization true \\\n  --cel-files $workflow.launchDir/output/GTQC/pass_GT_cel_list.txt \\\n  --out-dir ./ \\\n  --batch-folder ./ \\\n  --log-file ./apt2-axiom.log \\\n  --allele-summaries true \\\n  --write-models\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "  \"\"\"\n  apt-genotype-axiom \\\n  --copynumber-probeset-calls-file $workflow.launchDir/output/cn/AxiomCNVMix.cnpscalls.txt \\\n  --analysis-files-path ${chip_library_path} \\\n  --arg-file ${chip_library_path}/Axiom_ABC_96orMore_Step2.r2.apt-genotype-axiom.mm.SnpSpecificPriors.AxiomGT1.apt2.xml \\\n  --dual-channel-normalization true \\\n  --cel-files $workflow.launchDir/output/GTQC/pass_GT_cel_list.txt \\\n  --out-dir ./ \\\n  --batch-folder ./ \\\n  --log-file ./apt2-axiom.log \\\n  --allele-summaries true \\\n  --write-models\n  \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_CNVout",
            "ch_cels_GT"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_GTout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_3'"
        ],
        "when": "",
        "stub": ""
    },
    "run_snpQC": {
        "name_process": "run_snpQC",
        "string_process": "\nprocess run_snpQC {\n  \n  label 'small_3'\n\n  input:\n    file '*' from ch_GTout\n        \n\n  output:\n   file '*' into ch_snpQCout\n    \n  publishDir path: './output/SNPolisher', mode: 'copy'\n\n  script:\n  \"\"\"\n  ps-metrics \\\n  --posterior-file $workflow.launchDir/output/genotypes/AxiomGT1.snp-posteriors.txt \\\n  --multi-posterior-file $workflow.launchDir/output/genotypes/AxiomGT1.snp-posteriors.multi.txt \\\n  --batch-folder $workflow.launchDir/output/genotypes/ \\\n  --summary-file $workflow.launchDir/output/genotypes/AxiomGT1.summary.txt \\\n  --report-file $workflow.launchDir/output/genotypes/AxiomGT1.report.txt \\\n  --special-snps ${chip_library_path}/Axiom_ABC.r2.specialSNPs \\\n  --use-multi-allele true \\\n  --y-restrict 0.2 \\\n  --metrics-file ./metrics.txt \\\n  --multi-metrics-file ./metrics.multi.txt \\\n  --log-file ./ps_metrics.log\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "  \"\"\"\n  ps-metrics \\\n  --posterior-file $workflow.launchDir/output/genotypes/AxiomGT1.snp-posteriors.txt \\\n  --multi-posterior-file $workflow.launchDir/output/genotypes/AxiomGT1.snp-posteriors.multi.txt \\\n  --batch-folder $workflow.launchDir/output/genotypes/ \\\n  --summary-file $workflow.launchDir/output/genotypes/AxiomGT1.summary.txt \\\n  --report-file $workflow.launchDir/output/genotypes/AxiomGT1.report.txt \\\n  --special-snps ${chip_library_path}/Axiom_ABC.r2.specialSNPs \\\n  --use-multi-allele true \\\n  --y-restrict 0.2 \\\n  --metrics-file ./metrics.txt \\\n  --multi-metrics-file ./metrics.multi.txt \\\n  --log-file ./ps_metrics.log\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_GTout"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_snpQCout"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_3'"
        ],
        "when": "",
        "stub": ""
    },
    "run_snpClassification": {
        "name_process": "run_snpClassification",
        "string_process": "\nprocess run_snpClassification {\n  \n  label 'small_3'\n\n  input:\n    set file(axiom), file(pass), file('*') from ch_snpQCout\n        \n\n  output:\n    file '*' into ch_snpClassOut\n    \n  publishDir path: './output/SNPolisher', mode: 'copy'\n\n\n  script:\n  \"\"\"\n   ps-classification \\\n  --metrics-file $workflow.launchDir/output/SNPolisher/metrics.txt \\\n  --multi-metrics-file $workflow.launchDir/output/SNPolisher/metrics.multi.txt \\\n  --ps2snp-file ${chip_library_path}/Axiom_ABC.r2.ps2snp_map.ps  \\\n  --species-type Human \\\n  --cr-cutoff 95 \\\n  --fld-cutoff 3.6 \\\n  --het-so-cutoff -0.1 \\\n  --het-so-XChr-cutoff -0.1 \\\n  --het-so-otv-cutoff -0.3 \\\n  --hom-ro-1-cutoff 0.6 \\\n  --hom-ro-2-cutoff 0.3 \\\n  --hom-ro-3-cutoff -0.9 \\\n  --hom-ro true \\\n  --hom-het true \\\n  --num-minor-allele-cutoff 2 \\\n  --hom-ro-hap-1-cutoff 0.1 \\\n  --hom-ro-hap-1-XChr-cutoff 0.1 \\\n  --hom-ro-hap-1-MTChr-cutoff 0.4 \\\n  --hom-ro-hap-2-cutoff -0.9 \\\n  --hom-ro-hap-2-XChr-cutoff 0.05 \\\n  --hom-ro-hap-2-MTChr-cutoff 0.2 \\\n  --hom-hap-X-cutoff -1 \\\n  --hom-hap-Y-lower-cutoff 1 \\\n  --hom-hap-Y-upper-cutoff 1 \\\n  --CN0-hap-X-cutoff -1 \\\n  --CN0-hap-Y-cutoff -1 \\\n  --CN0-dip-X-cutoff -1 \\\n  --CN0-dip-Y-cutoff -1 \\\n  --aaf-XChr-cut 0.36 \\\n  --fld-XChr-cut 4 \\\n  --homfld-XChr-cut 6.5 \\\n  --homfld-YChr-cut 6.5 \\\n  --min-YChr-samples-cut 5 \\\n  --sign-diff-hom-1-cutoff 0.4 \\\n  --sign-diff-hom-2-cutoff 0.4 \\\n  --min-mean-cp2-cutoff 8.5 \\\n  --max-mean-cp2-cutoff 15 \\\n  --priority-order PolyHighResolution,NoMinorHom,OTV,MonoHighResolution,CallRateBelowThreshold \\\n  --recommended PolyHighResolution,NoMinorHom,MonoHighResolution,Hemizygous \\\n  --use-multi-allele true \\\n  --output-dir ./ \\\n  --log-file ./\n  \"\"\"\n}",
        "nb_lignes_process": 60,
        "string_script": "  \"\"\"\n   ps-classification \\\n  --metrics-file $workflow.launchDir/output/SNPolisher/metrics.txt \\\n  --multi-metrics-file $workflow.launchDir/output/SNPolisher/metrics.multi.txt \\\n  --ps2snp-file ${chip_library_path}/Axiom_ABC.r2.ps2snp_map.ps  \\\n  --species-type Human \\\n  --cr-cutoff 95 \\\n  --fld-cutoff 3.6 \\\n  --het-so-cutoff -0.1 \\\n  --het-so-XChr-cutoff -0.1 \\\n  --het-so-otv-cutoff -0.3 \\\n  --hom-ro-1-cutoff 0.6 \\\n  --hom-ro-2-cutoff 0.3 \\\n  --hom-ro-3-cutoff -0.9 \\\n  --hom-ro true \\\n  --hom-het true \\\n  --num-minor-allele-cutoff 2 \\\n  --hom-ro-hap-1-cutoff 0.1 \\\n  --hom-ro-hap-1-XChr-cutoff 0.1 \\\n  --hom-ro-hap-1-MTChr-cutoff 0.4 \\\n  --hom-ro-hap-2-cutoff -0.9 \\\n  --hom-ro-hap-2-XChr-cutoff 0.05 \\\n  --hom-ro-hap-2-MTChr-cutoff 0.2 \\\n  --hom-hap-X-cutoff -1 \\\n  --hom-hap-Y-lower-cutoff 1 \\\n  --hom-hap-Y-upper-cutoff 1 \\\n  --CN0-hap-X-cutoff -1 \\\n  --CN0-hap-Y-cutoff -1 \\\n  --CN0-dip-X-cutoff -1 \\\n  --CN0-dip-Y-cutoff -1 \\\n  --aaf-XChr-cut 0.36 \\\n  --fld-XChr-cut 4 \\\n  --homfld-XChr-cut 6.5 \\\n  --homfld-YChr-cut 6.5 \\\n  --min-YChr-samples-cut 5 \\\n  --sign-diff-hom-1-cutoff 0.4 \\\n  --sign-diff-hom-2-cutoff 0.4 \\\n  --min-mean-cp2-cutoff 8.5 \\\n  --max-mean-cp2-cutoff 15 \\\n  --priority-order PolyHighResolution,NoMinorHom,OTV,MonoHighResolution,CallRateBelowThreshold \\\n  --recommended PolyHighResolution,NoMinorHom,MonoHighResolution,Hemizygous \\\n  --use-multi-allele true \\\n  --output-dir ./ \\\n  --log-file ./\n  \"\"\"",
        "nb_lignes_script": 44,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_snpQCout"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_snpClassOut"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_3'"
        ],
        "when": "",
        "stub": ""
    },
    "generatePerbaseMetrics": {
        "name_process": "generatePerbaseMetrics",
        "string_process": "\nprocess generatePerbaseMetrics {\n    echo true\n    input:\n        set baseName, file(bam), file(index) from ch_forperBase\n                 \n    output: \n        set baseName, file(\"${baseName}.mpileup.sorted.vcf.gz\"), file(\"${baseName}.mpileup.sorted.vcf.gz.tbi\")  into ch_mpileupOUT                                    \n    \n    \n    executor    globalExecutor                                                    \n    stageInMode globalStageInMode                                                 \n    memory      globalMemoryL \n    time        globalTimeM\n    queue       globalQueueL \n    module      'samtools'\n    cpus        '2'\n    module      'bcftools'\n    \n\n    \n    \"\"\"\n    bcftools mpileup --threads ${task.cpus} -Ou -d 250 -B -R ${restrictedBed} \\\n        -a \"FORMAT/DP\" -f ${ref} ${bam} | bcftools sort -o \"${baseName}.mpileup.sorted.vcf.gz\" -O z\n    bcftools index -f --tbi \"${baseName}.sorted.vcf.gz\"\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\"\"\"\n    bcftools mpileup --threads ${task.cpus} -Ou -d 250 -B -R ${restrictedBed} \\\n        -a \"FORMAT/DP\" -f ${ref} ${bam} | bcftools sort -o \"${baseName}.mpileup.sorted.vcf.gz\" -O z\n    bcftools index -f --tbi \"${baseName}.sorted.vcf.gz\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_forperBase"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mpileupOUT"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "sortpileupVCFS": {
        "name_process": "sortpileupVCFS",
        "string_process": "\nprocess sortpileupVCFS {\n\n    input:\n        set baseName, file(vcf) from ch_mpileupOUT\n    output:\n        set baseName, file(\"${baseName}.mpileup.sorted.vcf.gz\") into ch_mpileupsortedVCF\n \n    module     'bcftools/1.8'\n    executor    globalExecutor                                                    \n    stageInMode globalStageInMode                                                 \n    module      bwaModule\n    memory      globalMemoryM \n    time        globalTimeM\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    bcftools sort -o \"${baseName}.mpileup.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bcftools sort -o \"${baseName}.mpileup.sorted.vcf.gz\" -O z ${vcf}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_mpileupOUT"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mpileupsortedVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexpileupVCFS": {
        "name_process": "indexpileupVCFS",
        "string_process": "\nprocess indexpileupVCFS {\n    input:\n        set baseName, file(vcf) from ch_mpileupsortedVCF\n    output:\n        set baseName, file(vcf), file(\"*.tbi\") into ch_indexedmpileupVCF\n\n    publishDir path: './mpileup_out', mode: 'copy'                                    \n    \n    module     'bcftools/1.8'\n    executor    globalExecutor                                                    \n    stageInMode globalStageInMode                                                 \n    module      bwaModule\n    memory      globalMemoryM \n    time        globalTimeM\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.mpileup.sorted.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    bcftools index -f --tbi ${vcf} -o ${baseName}.mpileup.sorted.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_mpileupsortedVCF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_indexedmpileupVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "namesort": {
        "name_process": "namesort",
        "string_process": "\nprocess namesort {\n\n    input:\n        set baseName, file(bam) from ch_inputFiles\n    output:\n        set baseName, file(\"${baseName}.qsort.bam\") into ch_sortedBams\n            \n    cache       'lenient'\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        4\n    module      'samtools'\n    memory      globalMemoryM\n    time        '3h'\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    samtools sort -n -@${task.cpus} ${bam} -o ${baseName}.qsort.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    samtools sort -n -@${task.cpus} ${bam} -o ${baseName}.qsort.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sortedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "makeFastq": {
        "name_process": "makeFastq",
        "string_process": "\nprocess makeFastq {\n\n    publishDir path: './processed', mode: 'copy' \n    input:\n        set baseName, file(bam) from ch_sortedBams\n    output:\n        file(\"*.fastq.gz\") into ch_fastqs\n            \n    cache       'lenient'\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    module      'bedtools'\n    memory      globalMemoryM\n    time        '3h'\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx30g -jar $picardJar SamToFastq \\\n     -I $bam \\\n     -F ${baseName}_R1.fastq.gz \\\n     -F2 ${baseName}_R2.fastq.gz \\\n     \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    java -Dpicard.useLegacyParser=false -Xmx30g -jar $picardJar SamToFastq \\\n     -I $bam \\\n     -F ${baseName}_R1.fastq.gz \\\n     -F2 ${baseName}_R2.fastq.gz \\\n     \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_sortedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqs"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './processed', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "catFastqs": {
        "name_process": "catFastqs",
        "string_process": "\nprocess catFastqs {\n\n    label 'small_1'\n    input:\n        set baseName, file(fastq1), file(fastq2), file(fastq3), file(fastq4) from ch_joined\n    output:\n        set baseName, file(\"${baseName}.merged_R1_001.fastq.gz\"), file(\"${baseName}.merged_R2_001.fastq.gz\") into ch_mergedFastqs\n\n    publishDir path: './fastqs', mode: 'copy' \n\n    \"\"\"\n    cat $fastq1 $fastq3 > ${baseName}.merged_R1_001.fastq.gz\n    cat $fastq2 $fastq4 > ${baseName}.merged_R2_001.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    cat $fastq1 $fastq3 > ${baseName}.merged_R1_001.fastq.gz\n    cat $fastq2 $fastq4 > ${baseName}.merged_R2_001.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_joined"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mergedFastqs"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'small_1'"
        ],
        "when": "",
        "stub": ""
    },
    "flairAlign": {
        "name_process": "flairAlign",
        "string_process": "\nprocess flairAlign {\n    \n    publishDir path: './output', mode: 'copy'\n    \n    input:\n        file(fastq) from ch_catFastq\n    output:\n        set file(\"${project_name}.flair_aligned.sam\"), file(\"${project_name}.flair_aligned.bed\")  into ch_align, ch_align2\n\n    publishDir path: './output', mode: 'copy'\n    \n    cache       'lenient'\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        8\n    module      condaModule\n    conda       '/home/jste0021/.conda/envs/py3.5/'\n    module      samtoolsModule\n    memory      globalMemoryM\n    time        '6h'\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py align -v1.3 -g ${ref} -r ${fastq} -t ${task.cpus} \\\n           -o \"${project_name}.flair_aligned\"\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py align -v1.3 -g ${ref} -r ${fastq} -t ${task.cpus} \\\n           -o \"${project_name}.flair_aligned\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_catFastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_align",
            "ch_align2 cache"
        ],
        "nb_outputs": 2,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeBam": {
        "name_process": "makeBam",
        "string_process": "\nprocess makeBam{\n\n    publishDir path: './output', mode: 'copy'\n    \n    input:\n        set file(sam), file(bed) from ch_align2\n    output:\n        set file(\"*.bam\"), file(\"*.bai\") into ch_bams\n\n    publishDir path: './output', mode: 'copy'\n    \n    cache         'lenient'\n    executor      globalExecutor\n    stageInMode   globalStageInMode\n    cpus          1\n    module        samtoolsModule\n    memory        globalMemoryM\n    time          '6h'\n    queue         globalQueueL\n    errorStrategy 'ignore'\n\n    script:\n    \"\"\"\n    samtools view -bS ${sam} | sort -o \"${sam}.bam\"\n    samtools index \"${sam}.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    samtools view -bS ${sam} | sort -o \"${sam}.bam\"\n    samtools index \"${sam}.bam\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_align2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "flairCorrect": {
        "name_process": "flairCorrect",
        "string_process": "\nprocess flairCorrect {\n    \n    publishDir path: './output', mode: 'copy'\n    \n    input:\n        set file(sam), file(bed) from ch_align\n    output:\n        set file(\"*_all_corrected.bed\"), file(\"*_all_inconsistent.bed\"), file(\"*.psl\") into ch_correct\n\n    publishDir path: './output', mode: 'copy'\n    \n    cache       'lenient'\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        8\n    module      condaModule\n    conda       '/home/jste0021/.conda/envs/py3.5/'\n    module      samtoolsModule\n    memory      globalMemoryM\n    time        '6h'\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py correct -g ${ref} -q ${bed} -f $humanGTF -c $chromsizes -t ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py correct -g ${ref} -q ${bed} -f $humanGTF -c $chromsizes -t ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_align"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_correct"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "flairCollapse": {
        "name_process": "flairCollapse",
        "string_process": "\nprocess flairCollapse {\n    \n    publishDir path: './output', mode: 'copy'\n    \n    input:\n        set file(corrected), file(inconsistent), file(psl) from ch_correct\n        file(fastq) from ch_catFastq2\n    output:\n        set file(\"*isoforms.psl\"), file(\"*isoforms.gtf\"), file(\"*isoforms.fa\") into ch_collapse\n\n    publishDir path: './output', mode: 'copy'\n    \n    cache       'lenient'\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        8\n    module      condaModule\n    conda       '/home/jste0021/.conda/envs/py3.5/'\n    module      samtoolsModule\n    memory      globalMemoryM\n    time        '6h'\n    queue       globalQueueL\n\n    script:\n    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py collapse --keep_intermediate -g ${ref} -r ${fastq} -q ${psl} -t ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    python ~/scripts/git_controlled/flair/flair.py collapse --keep_intermediate -g ${ref} -r ${fastq} -q ${psl} -t ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_correct",
            "ch_catFastq2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_collapse"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "publishDir path: './output', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "vardictPreUMI": {
        "name_process": "vardictPreUMI",
        "string_process": "\nprocess vardictPreUMI {\n    \n    input:\n        set baseName, file(bam), file(bai), file(segment) from ch_vardictPreUMI\n    output:\n        set baseName, file(\"${baseName}.${segment}.vardict.tsv\") into ch_vardictPreUMISegments\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        6\n    memory      globalMemoryM\n    time        globalTimeL\n    queue       globalQueueL\n    errorStrategy 'retry'\n    maxRetries 3\n    \n    script:\n    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"$baseName\" \\\n        -b \"$bam\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${baseName}.${segment}.vardict.tsv\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    export PATH=/home/jste0021/scripts/VarDict-1.5.8/bin/:$PATH\n    VarDict -G ${ref} -f 0.01 -N \"$baseName\" \\\n        -b \"$bam\" -th ${task.cpus} --nosv -c 1 -S 2 -E 3 -g 4 ${segment} \\\n        > \"${baseName}.${segment}.vardict.tsv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_vardictPreUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardictPreUMISegments"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "catSegmentspreUMI": {
        "name_process": "catSegmentspreUMI",
        "string_process": "\nprocess catSegmentspreUMI {\n    echo true\n\n    input: \n        set baseName, file(tsv) from ch_collatedSegmentspreUMI\n    output: \n        set baseName, file(\"${baseName}.collated.vardict.tsv\") into ch_vardictPreUMICollated\n    \n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeL\n    queue       globalQueueL\n    \n    script:\n    \n    myfiles = tsv.collect().join(' ')\n\n    \"\"\"\n    cat ${myfiles} > ${baseName}.collated.vardict.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "    myfiles = tsv.collect().join(' ')\n\n    \"\"\"\n    cat ${myfiles} > ${baseName}.collated.vardict.tsv\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_collatedSegmentspreUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vardictPreUMICollated"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "makeVCFpreUMI": {
        "name_process": "makeVCFpreUMI",
        "string_process": "\nprocess makeVCFpreUMI {\n    input:\n        set sample, file(tsv) from ch_vardictPreUMICollated\n    output:\n        set sample, file(\"${sample}.vardict.vcf\") into ch_outputVCFpreUMI\n    \n    publishDir path: './output/intermediate', mode: 'copy'\n    \n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeL\n    queue       globalQueueL\n\n    script:\n    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/teststrandbias.R | \\\n    /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_valid.pl -N \"$sample\" -f 0.01 > \"${sample}.vardict.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"  \n    module purge\n    module load R/3.5.1\n    cat $tsv | /home/jste0021/scripts/VarDict-1.5.8/bin/teststrandbias.R | \\\n    /home/jste0021/scripts/VarDict-1.5.8/bin/var2vcf_valid.pl -N \"$sample\" -f 0.01 > \"${sample}.vardict.vcf\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_vardictPreUMICollated"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_outputVCFpreUMI"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "reheaderPreUMIVCF": {
        "name_process": "reheaderPreUMIVCF",
        "string_process": "\nprocess reheaderPreUMIVCF {\n    input:\n        set sample, file(vcf) from ch_outputVCFpreUMI\n    output:\n        set sample, file(\"*.vcf.gz\") into ch_finalpreUMIVCF\n\n    publishDir path: './output/intermediate', mode: 'copy'\n    \n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeL\n    queue       globalQueueL\n    module      'bcftools/1.8'\n\n    script:\n    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.varditc.sorted.vcf.gz -O z -\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    bcftools annotate -h ~/vh83/reference/genomes/b37/vcf_contig_header_lines.txt -O v ${vcf} | \\\n        bcftools sort -o ${sample}.varditc.sorted.vcf.gz -O z -\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_outputVCFpreUMI"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_finalpreUMIVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "collectMetrics": {
        "name_process": "collectMetrics",
        "string_process": "\nprocess collectMetrics {\n\n    input:\n        set sample, file(bam) from ch_forMetrics\n    output:\n        set sample, file(\"*multiple_metrics*\") into ch_metrics\n    \n    publishDir path: './output/metrics', mode: 'copy'\n    \n    executor    globalExecutor\n    stageInMode globalStageInMode\n    cpus        1\n    memory      globalMemoryM\n    time        globalTimeL\n    queue       globalQueueL\n\n    script:\n\n    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectMultipleMetrics \\\n        -I $bam \\\n        -O ${sample}.multiple_metrics \\\n        -R $ref \n    \"\"\"\n\n\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    module purge\n    module load R/3.5.1\n    java -Dpicard.useLegacyParser=false -Xmx6G -jar ${picardJar} CollectMultipleMetrics \\\n        -I $bam \\\n        -O ${sample}.multiple_metrics \\\n        -R $ref \n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_forMetrics"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_metrics"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "AnnotateBamWithUmis": {
        "name_process": "AnnotateBamWithUmis",
        "string_process": "\nprocess AnnotateBamWithUmis {\n    input:\n        set baseName, file(bam), file(index) from umiMap\n    output:\n        set baseName, file(\"${baseName}.umi.bam\") into umiMarkedBams\n\n    publishDir path: './bam_out', mode: 'copy'    \n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module\t'java'\n    module      'fgbio'\n    cpus        globalCores\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    java -Xmx62g -jar '/usr/local/fgbio/0.9.0/target/fgbio-0.9.0-17cb5fb-SNAPSHOT.jar' AnnotateBamWithUmis \\\n         -i ${bam} -f ${index} -o \"${baseName}.umi.bam\" \n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    java -Xmx62g -jar '/usr/local/fgbio/0.9.0/target/fgbio-0.9.0-17cb5fb-SNAPSHOT.jar' AnnotateBamWithUmis \\\n         -i ${bam} -f ${index} -o \"${baseName}.umi.bam\" \n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "umiMap"
        ],
        "nb_inputs": 1,
        "outputs": [
            "umiMarkedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "markDuplicates": {
        "name_process": "markDuplicates",
        "string_process": "\nprocess markDuplicates {\n    input:\n        set baseName, file(bam) from umiMarkedBams \n    output:\n        set baseName, file(\"${baseName}.umi.dedup.bam\"), file(\"${baseName}.dedup.metrics.txt\") into dedupBams \n    \n    publishDir path: './bam_out', mode: 'copy'\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module \t'picard'\n    cpus        globalCores\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    java -Xmx62g -jar /usr/local/picard/2.9.2/bin/picard.jar MarkDuplicates I=$bam O=${baseName}.umi.dedup.bam M=\"${baseName}.dedup.metrics.txt\" BARCODE_TAG=RX\n    \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    java -Xmx62g -jar /usr/local/picard/2.9.2/bin/picard.jar MarkDuplicates I=$bam O=${baseName}.umi.dedup.bam M=\"${baseName}.dedup.metrics.txt\" BARCODE_TAG=RX\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "umiMarkedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "dedupBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indexUmiBam": {
        "name_process": "indexUmiBam",
        "string_process": "\nprocess indexUmiBam {\n    input:\n        set baseName, file(hist), file(bam) from umiGroupedBams\n    output:\n        set baseName, file(hist), file(bam), file(\"${baseName}.umi.grouped.bam.bai\") into indexedBams\n\n    executor    globalExecutor\n    stageInMode globalStageInMode\n    module      'samtools'\n    cpus        globalCores\n    memory      globalMemoryL\n    time        globalTimeL\n    queue       globalQueueL\n\n    \"\"\"\n    samtools index $bam ${baseName}.umi.grouped.bam.bai\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    samtools index $bam ${baseName}.umi.grouped.bam.bai\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "umiGroupedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "indexedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "merge_gvcf": {
        "name_process": "merge_gvcf",
        "string_process": "process merge_gvcf{\n    \"\"\"\n    g_vcf_files = ' '.join(['--variant ' + vcf for vcf in vcf_files_in])\n        gatk_args = \"-T CombineGVCFs -R {reference} \" \\\n                    \"--disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"{g_vcf_files} -o {vcf_out}\".f\n    \"\"\"\n\n\n}",
        "nb_lignes_process": 8,
        "string_script": "\"\"\"\n    g_vcf_files = ' '.join(['--variant ' + vcf for vcf in vcf_files_in])\n        gatk_args = \"-T CombineGVCFs -R {reference} \" \\\n                    \"--disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"{g_vcf_files} -o {vcf_out}\".f\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "snp_recal": {
        "name_process": "snp_recal",
        "string_process": "\nprocess snp_recal {\n\n    \"\"\"\n    gatk_args = \"-T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"-R {reference} --num_threads {cores} \" \\\n                    \"-resource:hapmap,known=false,training=true,truth=true,prior=15.0 {hapmap} \" \\\n                    \"-resource:omni,known=false,training=true,truth=true,prior=12.0 {one_k_g_snps} \" \\\n                    \"-resource:1000G,known=false,training=true,truth=false,prior=10.0 {one_k_g_highconf_snps} \" \\\n                    \"-an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -an InbreedingCoeff \" \\\n                    \"-input {genotype_vcf} --recal_file {recal_snp} --tranches_file {tranches_snp} \n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    gatk_args = \"-T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"-R {reference} --num_threads {cores} \" \\\n                    \"-resource:hapmap,known=false,training=true,truth=true,prior=15.0 {hapmap} \" \\\n                    \"-resource:omni,known=false,training=true,truth=true,prior=12.0 {one_k_g_snps} \" \\\n                    \"-resource:1000G,known=false,training=true,truth=false,prior=10.0 {one_k_g_highconf_snps} \" \\\n                    \"-an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -an InbreedingCoeff \" \\\n                    \"-input {genotype_vcf} --recal_file {recal_snp} --tranches_file {tranches_snp} \n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "indel_recal": {
        "name_process": "indel_recal",
        "string_process": "\nprocess indel_recal {\n\n    \"\"\"\n    java -Xmx6g -jar gatkJar -T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"-R {reference} --num_threads {cores} \" \\\n                    \"-resource:mills,known=false,training=true,truth=true,prior=12.0 {mills_grch37} \" \\\n                    \"-resource:1000G,known=false,training=true,truth=true,prior=10.0 {one_k_g_indels} \" \\\n                    \"--maxGaussians 4 -an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum -an InbreedingCoeff \" \\\n                    \"-input {genotype_vcf} -recalFile {recal_indel} \" \\\n                    \"-tranchesFile {tranches_indel} -rscriptFile {indel_plots} \" \\\n                    \" -mode INDEL\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    java -Xmx6g -jar gatkJar -T VariantRecalibrator --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n                    \"-R {reference} --num_threads {cores} \" \\\n                    \"-resource:mills,known=false,training=true,truth=true,prior=12.0 {mills_grch37} \" \\\n                    \"-resource:1000G,known=false,training=true,truth=true,prior=10.0 {one_k_g_indels} \" \\\n                    \"--maxGaussians 4 -an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum -an InbreedingCoeff \" \\\n                    \"-input {genotype_vcf} -recalFile {recal_indel} \" \\\n                    \"-tranchesFile {tranches_indel} -rscriptFile {indel_plots} \" \\\n                    \" -mode INDEL\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "apply_indel": {
        "name_process": "apply_indel",
        "string_process": "\nprocess apply_indel{\n    \"\"\"\n    gatk_args = \"-T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n#                    \"-R {reference} --ts_filter_level 99.0 --excludeFiltered --num_threads {cores} \" \\\n#                    \"-input {genotype_vcf} -recalFile {recal_indel} -tranchesFile {tranches_indel} \" \\\n#                    \"-mode INDEL -o {vcf_out}\"\n    \"\"\"\n\n\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n    gatk_args = \"-T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n#                    \"-R {reference} --ts_filter_level 99.0 --excludeFiltered --num_threads {cores} \" \\\n#                    \"-input {genotype_vcf} -recalFile {recal_indel} -tranchesFile {tranches_indel} \" \\\n#                    \"-mode INDEL -o {vcf_out}\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "apply_snp": {
        "name_process": "apply_snp",
        "string_process": "\nprocess apply_snp {\n\n \"\"\"\n gatk_args = \"-T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n#                    \"-R {reference} --ts_filter_level 99.5 --excludeFiltered --num_threads {cores} \" \\\n#                    \"-input {genotype_vcf} -recalFile {recal_snp} -tranchesFile {tranches_snp} \" \\\n#                    \"-mode SNP -o {vcf_out}\"\n\"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "\"\"\"\n gatk_args = \"-T ApplyRecalibration --disable_auto_index_creation_and_locking_when_reading_rods \" \\\n#                    \"-R {reference} --ts_filter_level 99.5 --excludeFiltered --num_threads {cores} \" \\\n#                    \"-input {genotype_vcf} -recalFile {recal_snp} -tranchesFile {tranches_snp} \" \\\n#                    \"-mode SNP -o {vcf_out}\"\n\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "correctUmi": {
        "name_process": "correctUmi",
        "string_process": "\nprocess correctUmi {\n    \n    label 'medium_6h'\n\n    input:\n        set baseName, file(bam) from ch_pipedBams\n\n    output:\n        set baseName, file(\"${baseName}.piped.corrected.bam\"), file(\"${baseName}.UMI.correction.txt\") into ch_umiCorrectedBams\n\n    publishDir path: './output/metrics/UMI/correction_stats', mode: 'copy', pattern: \"*.txt\"\n\n    script:\n    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar CorrectUmis \\\n         -i $bam -o \"${baseName}.piped.corrected.bam\" -M \"${baseName}.UMI.correction.txt\" -U $umiSeqs --max-mismatches 3 --min-distance 1\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    java -Xmx${task.memory.toGiga() - 2}g -Djava.io.tmpdir=$tmp_dir -jar $fgbioJar CorrectUmis \\\n         -i $bam -o \"${baseName}.piped.corrected.bam\" -M \"${baseName}.UMI.correction.txt\" -U $umiSeqs --max-mismatches 3 --min-distance 1\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_pipedBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_umiCorrectedBams"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label 'medium_6h'"
        ],
        "when": "",
        "stub": ""
    },
    "chunkBEDfile": {
        "name_process": "chunkBEDfile",
        "string_process": "\nprocess chunkBEDfile {\n    \n    label \"small_1\"\n\n    output: \n    file(\"*.bed\") into ch_bedSegments mode flatten\n\n    module 'bedtools/2.27.1-gcc5'\n\n    script:\n    \"\"\"\n    bedtools split -i \"$padded_bed\" -n 12\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    bedtools split -i \"$padded_bed\" -n 12\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_bedSegments"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "label \"small_1\""
        ],
        "when": "",
        "stub": ""
    },
    "mergepileupVCFS": {
        "name_process": "mergepileupVCFS",
        "string_process": "\nprocess mergepileupVCFS {\n    echo true\n    publishDir './variants_merged/', mode: 'copy'\n    input:\n    set file(vcf), file(index) from ch_fucks_given\n        \n    output:\n    file \"full_merged_mpileup.vcf.gz\" into ch_mergedVCF\n\n    module     'bcftools/1.8'\n    executor    globalExecutor                                                    \n    stageInMode globalStageInMode                                                 \n    memory      globalMemoryM \n    time        globalTimeM\n    queue       globalQueueL\n\n    \n    script: \n    \n    \"\"\"\n    ls *.vcf.gz | split -l10 split_vcf_\n    for i in split_vcf_*; do bcftools merge -O z -o \"\\${i}.mpileup_merged.vcf.gz\"  \\\n        -l \\$i; mpileup index -f --tbi \\${i}.mpileup_merged.vcf.gz; done\n    ls \"*.mpileup_merged.vcf.gz\" > temp.txt\n    bcftools merge -l temp.txt -O z -o \"full_merged_mpileup.vcf.gz\"\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    ls *.vcf.gz | split -l10 split_vcf_\n    for i in split_vcf_*; do bcftools merge -O z -o \"\\${i}.mpileup_merged.vcf.gz\"  \\\n        -l \\$i; mpileup index -f --tbi \\${i}.mpileup_merged.vcf.gz; done\n    ls \"*.mpileup_merged.vcf.gz\" > temp.txt\n    bcftools merge -l temp.txt -O z -o \"full_merged_mpileup.vcf.gz\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "mpileup",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/mpileup",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "mpileup",
                "uri": "https://bio.tools/mpileup",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3695",
                                    "term": "Filtering"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Filter bam file using mpileup on coverage and SNPs.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_fucks_given"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_mergedVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "SoutheyLab__nextflow-workflows",
        "directive": [
            "echo true",
            "publishDir './variants_merged/', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}