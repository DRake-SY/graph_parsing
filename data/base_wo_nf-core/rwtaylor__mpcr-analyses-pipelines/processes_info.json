{
    "Sample_bam_stats": {
        "name_process": "Sample_bam_stats",
        "string_process": "\nprocess Sample_bam_stats {\n  publishDir path:\"${params.publish_directory}/sample_bam_stats\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  file(bam) from bamFiles\n  file(bais) from baiFiles.toList()\n\n  output:\n  file(\"${bam.baseName}.stats\") into bam_stats\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools stats -in ${bam} > ${bam.baseName}.stats\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools stats -in ${bam} > ${bam.baseName}.stats\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BamTools"
        ],
        "tools_url": [
            "https://bio.tools/bamtools"
        ],
        "tools_dico": [
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            }
        ],
        "inputs": [
            "bamFiles",
            "baiFiles"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bam_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}/sample_bam_stats\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Taget_coverage": {
        "name_process": "Taget_coverage",
        "string_process": "\nprocess Taget_coverage {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  file(bams) from bamFiles1.toList()\n  file(bais) from baiFiles1.toList()\n\n  output:\n  file(\"target_sample_coverage.txt\") into target_sample_coverage\n\n  script:\n  header = bams.collect{\"$it.baseName\"}.join('\\t')\n  header = \"chrom\\tstart\\tstop\\tsnp\\t\" + header\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  echo \"${header}\" > target_sample_coverage.txt\n  bedtools multicov -bed ${params.mapping_targets_bed} -bams ${bams} >> target_sample_coverage.txt\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  header = bams.collect{\"$it.baseName\"}.join('\\t')\n  header = \"chrom\\tstart\\tstop\\tsnp\\t\" + header\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  echo \"${header}\" > target_sample_coverage.txt\n  bedtools multicov -bed ${params.mapping_targets_bed} -bams ${bams} >> target_sample_coverage.txt\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bamFiles1",
            "baiFiles1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "target_sample_coverage"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Concatenate_bams": {
        "name_process": "Concatenate_bams",
        "string_process": "\nprocess Concatenate_bams {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  file(bams) from bamFiles2.toList()\n  file(bais) from baiFiles2.toList()\n\n  output:\n  set file(\"all_samples.bam\"), file(\"all_samples.bam.bai\") into all_samples_bam\n\n  script:\n  input_bams = bams.collect{\"-in $it\"}.join(' ')\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools merge ${input_bams} | bamtools sort -out all_samples.bam\n  bamtools index -in all_samples.bam\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  input_bams = bams.collect{\"-in $it\"}.join(' ')\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools merge ${input_bams} | bamtools sort -out all_samples.bam\n  bamtools index -in all_samples.bam\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BamTools"
        ],
        "tools_url": [
            "https://bio.tools/bamtools"
        ],
        "tools_dico": [
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            }
        ],
        "inputs": [
            "bamFiles2",
            "baiFiles2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "all_samples_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Target_coverage_across_samples": {
        "name_process": "Target_coverage_across_samples",
        "string_process": "\nprocess Target_coverage_across_samples {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  set file(allsamplesbam), file(allsamplesbai) from all_samples_bam\n\n  output:\n  file(\"target_coverage.txt\") into target_coverage\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools coverage -a ${params.mapping_targets_bed} -b $allsamplesbam > target_coverage.txt\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools coverage -a ${params.mapping_targets_bed} -b $allsamplesbam > target_coverage.txt\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "all_samples_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "target_coverage"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Ontarget_hits": {
        "name_process": "Ontarget_hits",
        "string_process": "\nprocess Ontarget_hits {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  set file(allsamplesbam), file(allsamplesbai) from all_samples_bam1\n\n  output:\n  set file(\"ontarget_reads.bam\"), file(\"ontarget_reads_stats.txt\") into ontarget_reads\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools intersect -a $allsamplesbam -b ${params.mapping_targets_bed} > ontarget_reads.bam\n  bamtools stats -in ontarget_reads.bam > ontarget_reads_stats.txt\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools intersect -a $allsamplesbam -b ${params.mapping_targets_bed} > ontarget_reads.bam\n  bamtools stats -in ontarget_reads.bam > ontarget_reads_stats.txt\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools",
            "BamTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools",
            "https://bio.tools/bamtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            }
        ],
        "inputs": [
            "all_samples_bam1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ontarget_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Offsite_hits": {
        "name_process": "Offsite_hits",
        "string_process": "\nprocess Offsite_hits {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  set file(allsamplesbam), file(allsamplesbai) from all_samples_bam2\n\n  output:\n  set file(\"off_target_reads.bam\"), file(\"off_target_reads_stats.txt\") into offtarget_reads\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools subtract -A -a $allsamplesbam -b ${params.mapping_targets_bed} > off_target_reads.bam\n  bamtools stats -in off_target_reads.bam > off_target_reads_stats.txt\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bedtools subtract -A -a $allsamplesbam -b ${params.mapping_targets_bed} > off_target_reads.bam\n  bamtools stats -in off_target_reads.bam > off_target_reads_stats.txt\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools",
            "BamTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools",
            "https://bio.tools/bamtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            }
        ],
        "inputs": [
            "all_samples_bam2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "offtarget_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Filter_mapping_quality": {
        "name_process": "Filter_mapping_quality",
        "string_process": "\nprocess Filter_mapping_quality {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  set file(allsamplesbam), file(allsamplesbai) from all_samples_bam3\n  each filter from Channel.from([[\">=20\",\"overequal_mq20\"],[\"<20\",\"under_mq20\"]])\n\n  output:\n  set file(\"all_samples_${filter[1]}.bam\"), file(\"all_samples_${filter[1]}.targetcoverage.txt\") into filtered_bams\n\n  \"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools filter -mapQuality \"${filter[0]}\" -in $allsamplesbam -out all_samples_${filter[1]}.bam\n  bedtools coverage -a ${params.mapping_targets_bed} -b all_samples_${filter[1]}.bam > all_samples_${filter[1]}.targetcoverage.txt\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"  \n  set -e -o pipefail\n  mkdir -p temp\n  bamtools filter -mapQuality \"${filter[0]}\" -in $allsamplesbam -out all_samples_${filter[1]}.bam\n  bedtools coverage -a ${params.mapping_targets_bed} -b all_samples_${filter[1]}.bam > all_samples_${filter[1]}.targetcoverage.txt\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BamTools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bamtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "all_samples_bam3"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filtered_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Trim_galore": {
        "name_process": "Trim_galore",
        "string_process": " process Trim_galore {\n    publishDir path:\"${params.publish_directory}/trimmed-fastqs\", mode: \"copy\", overwrite: true\n\n    tag \"${params.output_prefix}-${sampleID}\"\n\n    cpus 1\n    memory { task.cpus * 4.GB }\n    \n    input:\n    set sampleID, file(r1), file(r2) from fastqFiles\n\n    output:\n    set sampleID, file(\"*_val_1.fq.gz\"), file(\"*_val_2.fq.gz\") into trimmedFastqs\n\n    \"\"\"\n    /usr/local/bin/trim_galore --paired --length 5 --gzip ${r1} ${r2}\n    \"\"\"\n  }",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    /usr/local/bin/trim_galore --paired --length 5 --gzip ${r1} ${r2}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastqFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmedFastqs"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}/trimmed-fastqs\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}-${sampleID}\"",
            "cpus 1",
            "memory { task.cpus * 4.GB }"
        ],
        "when": "",
        "stub": ""
    },
    "Mapping_bwa": {
        "name_process": "Mapping_bwa",
        "string_process": " process Mapping_bwa {\n    publishDir path:\"${params.publish_directory}/bams\", mode: \"copy\", overwrite: true\n    tag \"${params.output_prefix}-${sampleID}\"\n\n    cpus 2\n    memory { task.cpus * 4.GB }\n\n    input:\n    set sampleID, file(fq1), file(fq2) from trimmedFastqs\n\n    output:\n    file(\"*.bam\") into bwaMappedBams\n    file(\"*.bam.bai\") into bamIndexes\n\n    script:\n    readGroupString=\"\\\"@RG\\\\tID:${sampleID}\\\\tSM:${sampleID}\\\\tLB:${sampleID}\\\\tPL:illumina\\\"\"\n\n    \"\"\"\n    set -eo pipefail\n    /usr/local/bin/bwa mem -M -R ${readGroupString} -B 3 -t ${task.cpus} ${params.reference} ${fq1} ${fq2} | \\\n    /usr/local/bin/samtools view -hu - | /usr/local/bin/samtools sort --threads ${task.cpus} -O bam - > ${sampleID}.bam\n    /usr/local/bin/samtools index ${sampleID}.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 22,
        "string_script": "    readGroupString=\"\\\"@RG\\\\tID:${sampleID}\\\\tSM:${sampleID}\\\\tLB:${sampleID}\\\\tPL:illumina\\\"\"\n\n    \"\"\"\n    set -eo pipefail\n    /usr/local/bin/bwa mem -M -R ${readGroupString} -B 3 -t ${task.cpus} ${params.reference} ${fq1} ${fq2} | \\\n    /usr/local/bin/samtools view -hu - | /usr/local/bin/samtools sort --threads ${task.cpus} -O bam - > ${sampleID}.bam\n    /usr/local/bin/samtools index ${sampleID}.bam\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmedFastqs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwaMappedBams",
            "bamIndexes"
        ],
        "nb_outputs": 2,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}/bams\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}-${sampleID}\"",
            "cpus 2",
            "memory { task.cpus * 4.GB }"
        ],
        "when": "",
        "stub": ""
    },
    "Pileup_call_target": {
        "name_process": "Pileup_call_target",
        "string_process": "\nprocess Pileup_call_target {\n  container = '/zstor/containers/singularity/biobase.img'\n  publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true\n  tag \"${params.output_prefix}-${target_name}\"\n\n  cpus 1\n  memory { 8.GB }\n  time { 6.h }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 5\n  maxErrors '-1'\n\n  input:\n  set target_name, target_region from targetTasks\n  file(bams) from bwaMappedBams.toList()\n  file(bais) from bamIndexes.toList()\n\n  output:\n  file(\"${params.output_prefix}.${target_name}.target.vcf.gz\") into target_vcfs\n  file(\"${params.output_prefix}.${target_name}.target.vcf.gz.tbi\") into target_vcf_indexes\n\n  \"\"\"\n  set -e -o pipefail\n  mkdir -p temp\n  /usr/local/bin/bcftools mpileup -r ${target_region} -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth 100000 -f ${params.reference} ${bams} |\\\n   bcftools call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.${target_name}.target.vcf.gz\n   tabix -p vcf ${params.output_prefix}.${target_name}.target.vcf.gz\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n  set -e -o pipefail\n  mkdir -p temp\n  /usr/local/bin/bcftools mpileup -r ${target_region} -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth 100000 -f ${params.reference} ${bams} |\\\n   bcftools call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.${target_name}.target.vcf.gz\n   tabix -p vcf ${params.output_prefix}.${target_name}.target.vcf.gz\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "targetTasks",
            "bwaMappedBams",
            "bamIndexes"
        ],
        "nb_inputs": 3,
        "outputs": [
            "target_vcfs",
            "target_vcf_indexes"
        ],
        "nb_outputs": 2,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "container = '/zstor/containers/singularity/biobase.img'",
            "publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}-${target_name}\"",
            "cpus 1",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Pileup_call_regions": {
        "name_process": "Pileup_call_regions",
        "string_process": " process Pileup_call_regions {\n    tag \"${params.output_prefix}-${target_name}\"\n\n    cpus 2\n    memory { 8.GB }\n    time { 6.h }\n    errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n    maxRetries 5\n    maxErrors '-1'\n\n    input:\n    region from regions\n    file(bams) from wgBams.toList()\n    file(bais) from wgBamIndexes.toList()\n\n    output:\n    file(\"${params.output_prefix}.region.${region[0]}.vcf.gz\") into region_vcfs\n    file(\"${params.output_prefix}.region.${region[0]}.vcf.gz.tbi\") into region_vcf_indexes\n\n    \"\"\"\n    set -e -o pipefail\n    mkdir -p temp\n    bcftools mpileup -r ${region[1]} -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth ${params.maximum_depth} -f ${params.reference} ${bams} |\\\n     bcftools +fill-tags call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.region.${region[0]}.vcf.gz\n     tabix -p vcf ${params.output_prefix}.region.${region[0]}.vcf.gz\n    \"\"\"\n  }",
        "nb_lignes_process": 25,
        "string_script": "\"\"\"\n    set -e -o pipefail\n    mkdir -p temp\n    bcftools mpileup -r ${region[1]} -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth ${params.maximum_depth} -f ${params.reference} ${bams} |\\\n     bcftools +fill-tags call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.region.${region[0]}.vcf.gz\n     tabix -p vcf ${params.output_prefix}.region.${region[0]}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "wgBams",
            "wgBamIndexes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "region_vcfs",
            "region_vcf_indexes"
        ],
        "nb_outputs": 2,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "tag \"${params.output_prefix}-${target_name}\"",
            "cpus 2",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatenateVCFs": {
        "name_process": "ConcatenateVCFs",
        "string_process": " process ConcatenateVCFs {\n    publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true\n\n    cpus {  task.attempt == 1 ? 8: 16  }\n    memory { task.attempt == 1 ? 30.GB: 48.GB }\n    errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n    maxRetries 2\n    maxErrors '-1'\n\n    input:\n    file(vcfs) from region_vcfs\n    file(vcfindexes) from region_vcf_indexes\n\n    output:\n    set file(\"${params.output_prefix}.wg.vcf.gz\" ), file(\"${params.output_prefix}.wg.vcf.gz.tbi\") into vcf_wg\n\n    script:\n    input_vcfs = vcfs.collect{\"$it\"}.join(' ')\n\n    \"\"\"\n    set -e -o pipefail\n    bcftools concat --remove-duplicates -oz --threads ${task.cpus - 1} ${params.output_prefix}.region*.vcf.gz\n    tabix -p vcf ${params.output_prefix}.wg.vcf.gz\n    \"\"\"\n  }",
        "nb_lignes_process": 23,
        "string_script": "    input_vcfs = vcfs.collect{\"$it\"}.join(' ')\n\n    \"\"\"\n    set -e -o pipefail\n    bcftools concat --remove-duplicates -oz --threads ${task.cpus - 1} ${params.output_prefix}.region*.vcf.gz\n    tabix -p vcf ${params.output_prefix}.wg.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "region_vcfs",
            "region_vcf_indexes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcf_wg"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true",
            "cpus { task.attempt == 1 ? 8: 16 }",
            "memory { task.attempt == 1 ? 30.GB: 48.GB }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 2",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "Pileup_call": {
        "name_process": "Pileup_call",
        "string_process": " process Pileup_call {\n    publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true\n    tag \"${params.output_prefix}-${target_name}\"\n\n    cpus 2\n    memory { 8.GB }\n    time { 6.h }\n    errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n    maxRetries 5\n    maxErrors '-1'\n\n    input:\n    file(bams) from mappedBams.toList()\n    file(bais) from bamIndexes.toList()\n\n    output:\n    set file(\"${params.output_prefix}.wg.vcf.gz\" ), file(\"${params.output_prefix}.wg.vcf.gz.tbi\") into vcf_wg\n\n    \"\"\"\n    set -e -o pipefail\n    mkdir -p temp\n    bcftools mpileup -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth ${params.maximum_depth} -f ${params.reference} ${bams} |\\\n     bcftools +fill-tags call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.wg.vcf.gz\n     tabix -p vcf ${params.output_prefix}.wg.vcf.gz\n    \"\"\"\n  }",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    set -e -o pipefail\n    mkdir -p temp\n    bcftools mpileup -a INFO/AD,FORMAT/AD,FORMAT/DP -Ou --max-depth ${params.maximum_depth} -f ${params.reference} ${bams} |\\\n     bcftools +fill-tags call -Ou -m | bcftools sort --temp-dir temp -Oz -o ${params.output_prefix}.wg.vcf.gz\n     tabix -p vcf ${params.output_prefix}.wg.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mappedBams",
            "bamIndexes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "vcf_wg"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}/vcfs\", mode: \"copy\", overwrite: true",
            "tag \"${params.output_prefix}-${target_name}\"",
            "cpus 2",
            "memory { 8.GB }",
            "time { 6.h }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 5",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    },
    "ConvertToTSV": {
        "name_process": "ConvertToTSV",
        "string_process": "\nprocess ConvertToTSV {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n  container = '/zstor/containers/singularity/biobase.img'\n  publishDir \"${params.publish_directory}/tsvs\", mode: 'copy'\n\n  cpus 1\n\n  input:\n  set file(vcf), file(index) from vcfs\n\n  output:\n  file(\"*.tsv\") into tsv_files\n\n  script:\n  output_prefix = vcf.baseName - ~/\\.vcf*/\n\n  \"\"\"\n  bcftools query -H -f '%CHROM\\t%POS\\t%INDEL\\t%QUAL\\t%REF\\t%ALT{0}\\t%DP[\\t%PL:%GT:%AC]\\n' -o ${output_prefix}.tsv $vcf\n  \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "  output_prefix = vcf.baseName - ~/\\.vcf*/\n\n  \"\"\"\n  bcftools query -H -f '%CHROM\\t%POS\\t%INDEL\\t%QUAL\\t%REF\\t%ALT{0}\\t%DP[\\t%PL:%GT:%AC]\\n' -o ${output_prefix}.tsv $vcf\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcfs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tsv_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "container = '/zstor/containers/singularity/biobase.img'",
            "publishDir \"${params.publish_directory}/tsvs\", mode: 'copy'",
            "cpus 1"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatenateTargetVCFs": {
        "name_process": "ConcatenateTargetVCFs",
        "string_process": "\nprocess ConcatenateTargetVCFs {\n  publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true\n\n  cpus {  task.attempt == 1 ? 8: 16  }\n  memory { task.attempt == 1 ? 96.GB: 192.GB }\n  errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }\n  maxRetries 2\n  maxErrors '-1'\n\n  input:\n  file(vcfs) from target_vcfs.toList()\n  file(vcfindexes) from target_vcf_indexes.toList()\n\n  output:\n  set file(\"${params.output_prefix}.target.vcf.gz\" ), file(\"${params.output_prefix}.target.vcf.gz.tbi\") into target_vcf\n\n  script:\n  input_vcfs = vcfs.collect{\"$it\"}.join(' ')\n\n  \"\"\"\n  set -e -o pipefail\n  mkdir -p temp\n  ls *.target.vcf.gz | awk -F '.' '{print \\$1\".\"\\$2}'  | xargs -t -I '{}' cp {}.target.vcf.gz {}.cptarget.vcf.gz\n  ls *.target.vcf.gz.tbi | awk -F '.' '{print \\$1\".\"\\$2}'  | xargs -t -I '{}' cp {}.target.vcf.gz.tbi {}.cptarget.vcf.gz.tbi\n  vcf-concat *.cptarget.vcf.gz | vcf-sort --temporary-directory temp | bgzip -@ ${task.cpus} > ${params.output_prefix}.target.vcf.gz\n  tabix -p vcf ${params.output_prefix}.target.vcf.gz\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  input_vcfs = vcfs.collect{\"$it\"}.join(' ')\n\n  \"\"\"\n  set -e -o pipefail\n  mkdir -p temp\n  ls *.target.vcf.gz | awk -F '.' '{print \\$1\".\"\\$2}'  | xargs -t -I '{}' cp {}.target.vcf.gz {}.cptarget.vcf.gz\n  ls *.target.vcf.gz.tbi | awk -F '.' '{print \\$1\".\"\\$2}'  | xargs -t -I '{}' cp {}.target.vcf.gz.tbi {}.cptarget.vcf.gz.tbi\n  vcf-concat *.cptarget.vcf.gz | vcf-sort --temporary-directory temp | bgzip -@ ${task.cpus} > ${params.output_prefix}.target.vcf.gz\n  tabix -p vcf ${params.output_prefix}.target.vcf.gz\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "target_vcfs",
            "target_vcf_indexes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "target_vcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "rwtaylor__mpcr-analyses-pipelines",
        "directive": [
            "publishDir path:\"${params.publish_directory}\", mode: \"copy\", overwrite: true",
            "cpus { task.attempt == 1 ? 8: 16 }",
            "memory { task.attempt == 1 ? 96.GB: 192.GB }",
            "errorStrategy { task.exitStatus == 143 ? 'retry' : 'finish' }",
            "maxRetries 2",
            "maxErrors '-1'"
        ],
        "when": "",
        "stub": ""
    }
}