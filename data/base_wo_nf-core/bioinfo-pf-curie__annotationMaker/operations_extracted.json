{
    "OPERATION_1": {
        "string": "Channel.fromPath(\"${params.fasta}\")\n    .ifEmpty { exit 1, \"Reference Genome not found: ${params.fasta}\" }\n    .into { chFasta; chFastaBwa; chFastaStar; chFastaBowtie2; chFastaHisat2; chFastaCellranger; chFastaSalmon }",
        "origin": [
            [
                "\"${params.fasta}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "chFasta",
                "P"
            ],
            [
                "chFastaBwa",
                "P"
            ],
            [
                "chFastaStar",
                "P"
            ],
            [
                "chFastaBowtie2",
                "P"
            ],
            [
                "chFastaHisat2",
                "P"
            ],
            [
                "chFastaCellranger",
                "P"
            ],
            [
                "chFastaSalmon",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "chFastaLink = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "chFastaLink",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.from(fasta)\n        .ifEmpty { exit 1, \"Reference Genome not found: ${fasta}\" }\n        .set { chFastaLink }",
        "origin": [
            [
                "fasta",
                "V"
            ]
        ],
        "gives": [
            [
                "chFastaLink",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel.fromPath(fasta)\n        .ifEmpty { exit 1, \"Reference Genome not found: ${fasta}\" }\n        .into { chFasta; chFastaBwa; chFastaStar; chFastaBowtie2; chFastaHisat2; chFastaCellranger; chFastaSalmon }",
        "origin": [
            [
                "fasta",
                "A"
            ]
        ],
        "gives": [
            [
                "chFasta",
                "P"
            ],
            [
                "chFastaBwa",
                "P"
            ],
            [
                "chFastaStar",
                "P"
            ],
            [
                "chFastaBowtie2",
                "P"
            ],
            [
                "chFastaHisat2",
                "P"
            ],
            [
                "chFastaCellranger",
                "P"
            ],
            [
                "chFastaSalmon",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "chFastaLink = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "chFastaLink",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel.fromPath(\"${params.transcripts}\")\n    .ifEmpty { exit 1, \"Reference Genome not found: ${params.transcripts}\" }\n    .into { chTranscriptsSalmon; chTranscriptsKallisto }",
        "origin": [
            [
                "\"${params.transcripts}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "chTranscriptsSalmon",
                "P"
            ],
            [
                "chTranscriptsKallisto",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "chTrsLink = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "chTrsLink",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "Channel.from(transcriptome)\n        .ifEmpty { exit 1, \"Reference annotation not found: ${transcriptome}\" }\n        .set { chTrsLink }",
        "origin": [
            [
                "transcriptome",
                "V"
            ]
        ],
        "gives": [
            [
                "chTrsLink",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "Channel\n        .fromPath(transcriptome)\n        .ifEmpty { exit 1, \"Reference annotation file not found: ${transcriptome}\" }\n        .into { chTranscriptsSalmon; chTranscriptsKallisto }",
        "origin": [
            [
                "transcriptome",
                "A"
            ]
        ],
        "gives": [
            [
                "chTranscriptsSalmon",
                "P"
            ],
            [
                "chTranscriptsKallisto",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "Channel.empty().into{ chTrsLink; chTranscriptsSalmon; chTranscriptsKallisto }",
        "origin": [],
        "gives": [
            [
                "chTrsLink",
                "P"
            ],
            [
                "chTranscriptsSalmon",
                "P"
            ],
            [
                "chTranscriptsKallisto",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "Channel.empty().into{ chTrsLink; chTranscriptsSalmon; chTranscriptsKallisto }",
        "origin": [],
        "gives": [
            [
                "chTrsLink",
                "P"
            ],
            [
                "chTranscriptsSalmon",
                "P"
            ],
            [
                "chTranscriptsKallisto",
                "P"
            ]
        ]
    },
    "OPERATION_12": {
        "string": "Channel\n    .fromPath(params.gtf)\n    .ifEmpty { exit 1, \"GTF annotation file not found: ${params.gtf}\" }\n    .into { chGtf; chGtfHisat2Splicesites; chGtfHisat2Index; chGtfBed12; chGtfGene; chGtfCellranger }",
        "origin": [
            [
                "params.gtf",
                "A"
            ]
        ],
        "gives": [
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfHisat2Splicesites",
                "P"
            ],
            [
                "chGtfHisat2Index",
                "P"
            ],
            [
                "chGtfBed12",
                "P"
            ],
            [
                "chGtfGene",
                "P"
            ],
            [
                "chGtfCellranger",
                "P"
            ]
        ]
    },
    "OPERATION_13": {
        "string": "Channel.empty().into{ chGff; chGtfLink; chGffLink }",
        "origin": [],
        "gives": [
            [
                "chGff",
                "P"
            ],
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_14": {
        "string": "Channel\n    .fromPath(params.gff)\n    .ifEmpty { exit 1, \"GFF annotation file not found: ${params.gtf}\" }\n    .set { chGff }",
        "origin": [
            [
                "params.gff",
                "A"
            ]
        ],
        "gives": [
            [
                "chGff",
                "P"
            ]
        ]
    },
    "OPERATION_15": {
        "string": "Channel.empty().into{ chGtf; chGtfLink; chGffLink }",
        "origin": [],
        "gives": [
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_16": {
        "string": "Channel.from(gtf)\n        .ifEmpty { exit 1, \"GTF annotation not found: ${gtf}\" }\n        .set { chGtfLink }",
        "origin": [
            [
                "gtf",
                "V"
            ]
        ],
        "gives": [
            [
                "chGtfLink",
                "P"
            ]
        ]
    },
    "OPERATION_17": {
        "string": "chGffLink = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_18": {
        "string": "Channel\n        .fromPath(gtf)\n        .ifEmpty { exit 1, \"GTF annotation file not found: ${gtf}\" }\n        .into { chGtf; chGtfHisat2Splicesites; chGtfHisat2Index; chGtfBed12; chGtfGene; chGtfCellranger }",
        "origin": [
            [
                "gtf",
                "A"
            ]
        ],
        "gives": [
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfHisat2Splicesites",
                "P"
            ],
            [
                "chGtfHisat2Index",
                "P"
            ],
            [
                "chGtfBed12",
                "P"
            ],
            [
                "chGtfGene",
                "P"
            ],
            [
                "chGtfCellranger",
                "P"
            ]
        ]
    },
    "OPERATION_19": {
        "string": "Channel.empty().into{ chGtfLink; chGffLink }",
        "origin": [],
        "gives": [
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_20": {
        "string": "Channel.from(gff)\n        .ifEmpty { exit 1, \"Reference annotation not found: ${gff}\" }\n        .set { chGffLink }",
        "origin": [
            [
                "gff",
                "V"
            ]
        ],
        "gives": [
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_21": {
        "string": "chGtfLink = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "chGtfLink",
                "P"
            ]
        ]
    },
    "OPERATION_22": {
        "string": "Channel\n        .fromPath(gff)\n        .ifEmpty { exit 1, \"GFF annotation file not found: ${gff}\" }\n        .set { chGff }",
        "origin": [
            [
                "gff",
                "A"
            ]
        ],
        "gives": [
            [
                "chGff",
                "P"
            ]
        ]
    },
    "OPERATION_23": {
        "string": "Channel.empty().into{ chGtfLink; chGffLink }",
        "origin": [],
        "gives": [
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ]
        ]
    },
    "OPERATION_24": {
        "string": "Channel.empty().into{ chGff; chGtf; chGtfBed12; chGtfGene; chGtfHisat2Splicesites; chGtfHisat2Index; chGffLink; chGtfLink; chGtfCellranger }",
        "origin": [],
        "gives": [
            [
                "chGff",
                "P"
            ],
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfBed12",
                "P"
            ],
            [
                "chGtfGene",
                "P"
            ],
            [
                "chGtfHisat2Splicesites",
                "P"
            ],
            [
                "chGtfHisat2Index",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ],
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGtfCellranger",
                "P"
            ]
        ]
    },
    "OPERATION_25": {
        "string": "Channel.empty().into{ chGtf; chGtfBed12; chGtfGene; chGtfHisat2Splicesites; chGtfHisat2Index; chGffLink; chGtfLink; chGtfCellranger }",
        "origin": [],
        "gives": [
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfBed12",
                "P"
            ],
            [
                "chGtfGene",
                "P"
            ],
            [
                "chGtfHisat2Splicesites",
                "P"
            ],
            [
                "chGtfHisat2Index",
                "P"
            ],
            [
                "chGffLink",
                "P"
            ],
            [
                "chGtfLink",
                "P"
            ],
            [
                "chGtfCellranger",
                "P"
            ]
        ]
    },
    "OPERATION_26": {
        "string": "summary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_27": {
        "string": "chFastaURL.into{chFasta; chFastaBwa; chFastaStar; chFastaBowtie2; chFastaHisat2; chFastaCellranger; chFastaKallisto; chFastaSalmon}",
        "origin": [
            [
                "chFastaURL",
                "P"
            ]
        ],
        "gives": [
            [
                "chFasta",
                "P"
            ],
            [
                "chFastaBwa",
                "P"
            ],
            [
                "chFastaStar",
                "P"
            ],
            [
                "chFastaBowtie2",
                "P"
            ],
            [
                "chFastaHisat2",
                "P"
            ],
            [
                "chFastaCellranger",
                "P"
            ],
            [
                "chFastaKallisto",
                "P"
            ],
            [
                "chFastaSalmon",
                "P"
            ]
        ]
    },
    "OPERATION_28": {
        "string": "chTrsURL.into{chTranscriptsSalmon; chTranscriptsKallisto}",
        "origin": [
            [
                "chTrsURL",
                "P"
            ]
        ],
        "gives": [
            [
                "chTranscriptsSalmon",
                "P"
            ],
            [
                "chTranscriptsKallisto",
                "P"
            ]
        ]
    },
    "OPERATION_29": {
        "string": "chAnnotURL.into{chGtfHisat2Splicesites; chGtfHisat2Index; chGtf; chGtfBed12; chGtfGene; chGtfCellranger}",
        "origin": [
            [
                "chAnnotURL",
                "P"
            ]
        ],
        "gives": [
            [
                "chGtfHisat2Splicesites",
                "P"
            ],
            [
                "chGtfHisat2Index",
                "P"
            ],
            [
                "chGtf",
                "P"
            ],
            [
                "chGtfBed12",
                "P"
            ],
            [
                "chGtfGene",
                "P"
            ],
            [
                "chGtfCellranger",
                "P"
            ]
        ]
    },
    "OPERATION_30": {
        "string": "chAnnotURL.set{chGff}",
        "origin": [
            [
                "chAnnotURL",
                "P"
            ]
        ],
        "gives": [
            [
                "chGff",
                "P"
            ]
        ]
    },
    "OPERATION_31": {
        "string": "endWfSummary = endSummary.collect { k,v -> \"${k.padRight(30, '.')}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "endSummary",
                "P"
            ]
        ],
        "gives": [
            [
                "endWfSummary",
                "P"
            ]
        ]
    }
}