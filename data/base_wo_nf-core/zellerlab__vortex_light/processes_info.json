{
    "qc_bbmerge": {
        "name_process": "qc_bbmerge",
        "string_process": "\nprocess qc_bbmerge {\n    input:\n    tuple val(sample), path(reads)\n\n    output:\n    tuple val(\"${sample}.singles\"), path(\"${sample}.singles/${sample}.singles_M.fastq.gz\"), optional: true, emit: merged\n    tuple val(sample), path(\"${sample}/${sample}_R*.fastq.gz\"), optional: true, emit: pairs\n\n    script:\n\tdef maxmem = task.memory.toGiga()\n    def merge_params = \"rsem=t extend2=20 iterations=5 ecct vstrict\"\n\n    \"\"\"\n    mkdir -p ${sample} ${sample}.merged\n\n    bbmerge.sh -Xmx${maxmem}g t=${task.cpus} ${merge_params} in=${sample}_R1.fastq.gz in2=${sample}_R2.fastq.gz out=${sample}.singles/${sample}.singles_M.fastq.gz outu1=${sample}/${sample}_R1.fastq.gz outu2=${sample}/${sample}_R2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\tdef maxmem = task.memory.toGiga()\n    def merge_params = \"rsem=t extend2=20 iterations=5 ecct vstrict\"\n\n    \"\"\"\n    mkdir -p ${sample} ${sample}.merged\n\n    bbmerge.sh -Xmx${maxmem}g t=${task.cpus} ${merge_params} in=${sample}_R1.fastq.gz in2=${sample}_R2.fastq.gz out=${sample}.singles/${sample}.singles_M.fastq.gz outu1=${sample}/${sample}_R1.fastq.gz outu2=${sample}/${sample}_R2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "pathseq": {
        "name_process": "pathseq",
        "string_process": "process pathseq {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(bam)\n\tpath(pathseq_db)\n\n    output:\n    tuple val(sample), path(\"${sample.id}/${sample.id}.pathseq.score*\"), emit: scores\n    tuple val(sample), path(\"${sample.id}/${sample.id}.pathseq.bam*\"), emit: bam\n\n    script:\n    def maxmem = task.memory.toGiga()\n    \"\"\"\n    mkdir -p ${sample.id}\n    gatk --java-options \\\"-Xmx${maxmem}g\\\" PathSeqPipelineSpark \\\\\n        --input $bam \\\\\n        --filter-bwa-image ${pathseq_db}/reference.fasta.img \\\\\n        --kmer-file ${pathseq_db}/host.hss \\\\\n        --min-clipped-read-length ${params.pathseq_min_clipped_read_length} \\\\\n        --microbe-fasta ${pathseq_db}/microbe.fasta \\\\\n        --microbe-bwa-image ${pathseq_db}/microbe.fasta.img \\\\\n        --taxonomy-file ${pathseq_db}/microbe.db \\\\\n        --output ${sample.id}/${sample.id}.pathseq.bam \\\\\n        --scores-output ${sample.id}/${sample.id}.pathseq.scores \\\\\n        --score-metrics ${sample.id}/${sample.id}.pathseq.score_metrics\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    def maxmem = task.memory.toGiga()\n    \"\"\"\n    mkdir -p ${sample.id}\n    gatk --java-options \\\"-Xmx${maxmem}g\\\" PathSeqPipelineSpark \\\\\n        --input $bam \\\\\n        --filter-bwa-image ${pathseq_db}/reference.fasta.img \\\\\n        --kmer-file ${pathseq_db}/host.hss \\\\\n        --min-clipped-read-length ${params.pathseq_min_clipped_read_length} \\\\\n        --microbe-fasta ${pathseq_db}/microbe.fasta \\\\\n        --microbe-bwa-image ${pathseq_db}/microbe.fasta.img \\\\\n        --taxonomy-file ${pathseq_db}/microbe.db \\\\\n        --output ${sample.id}/${sample.id}.pathseq.bam \\\\\n        --scores-output ${sample.id}/${sample.id}.pathseq.scores \\\\\n        --score-metrics ${sample.id}/${sample.id}.pathseq.score_metrics\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample",
            "bam",
            "pathseq_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "flagstats": {
        "name_process": "flagstats",
        "string_process": "process flagstats {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(bam)\n\n    output:\n    tuple val(sample), path(\"${sample.id}/${sample.id}.flagstats.txt\"), emit: flagstats\n\n    script:\n    \"\"\"\n    mkdir -p ${sample.id}\n    samtools flagstat $bam > \"${sample.id}/${sample.id}.flagstats.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    mkdir -p ${sample.id}\n    samtools flagstat $bam > \"${sample.id}/${sample.id}.flagstats.txt\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "count_reads_flagstats": {
        "name_process": "count_reads_flagstats",
        "string_process": "\nprocess count_reads_flagstats {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(flagstats)\n\n    output:\n    tuple val(sample), path(\"${sample.id}/${sample.id}.libsize.txt\"), emit: counts\n    tuple val(sample), path(\"${sample.id}/${sample.id}.is_paired.txt\"), emit: is_paired\n                                                                                         \n\n    script:\n    \"\"\"\n    mkdir -p ${sample.id}\n    head -n 1 \"${flagstats[0]}\" | awk '{print \\$1 + \\$3}' > \"${sample.id}/${sample.id}.libsize.txt\"\n    grep -m 1 \"paired in sequencing\" \"${flagstats[0]}\" | awk '{npaired = \\$1 + \\$3; if (npaired==0) {print \"unpaired\"} else {print \"paired\"};}' > \"${sample.id}/${sample.id}.is_paired.txt\"\n    \"\"\"\n                                                                        \n                                                                                                                             \n                                                                                                                                                                                                                     \n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    mkdir -p ${sample.id}\n    head -n 1 \"${flagstats[0]}\" | awk '{print \\$1 + \\$3}' > \"${sample.id}/${sample.id}.libsize.txt\"\n    grep -m 1 \"paired in sequencing\" \"${flagstats[0]}\" | awk '{npaired = \\$1 + \\$3; if (npaired==0) {print \"unpaired\"} else {print \"paired\"};}' > \"${sample.id}/${sample.id}.is_paired.txt\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample",
            "flagstats"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "remove_host_kraken2": {
        "name_process": "remove_host_kraken2",
        "string_process": "process remove_host_kraken2 {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(fq)\n\tpath(kraken_db)\n\n    output:\n    tuple val(sample), path(\"no_host/${sample.id}/${sample.id}_R*.fastq.gz\"), emit: reads\n\n    script:\n    def out_options = (sample.is_paired) ? \"--paired --unclassified-out ${sample.id}#.fastq\" : \"--unclassified-out ${sample.id}_1.fastq\"\n    def move_r2 = (sample.is_paired) ? \"gzip -c ${sample.id}_2.fastq > no_host/${sample.id}/${sample.id}_R2.fastq.gz\" : \"\"\n\n    \"\"\"\n    mkdir -p no_host/${sample.id}\n    kraken2 --threads $task.cpus --db ${kraken_db} ${out_options} --output kraken_read_report.txt --report kraken_report.txt --report-minimizer-data --gzip-compressed --minimum-hit-groups ${params.kraken2_min_hit_groups} $fq\n\n    gzip -c ${sample.id}_1.fastq > no_host/${sample.id}/${sample.id}_R1.fastq.gz\n    ${move_r2}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    def out_options = (sample.is_paired) ? \"--paired --unclassified-out ${sample.id}#.fastq\" : \"--unclassified-out ${sample.id}_1.fastq\"\n    def move_r2 = (sample.is_paired) ? \"gzip -c ${sample.id}_2.fastq > no_host/${sample.id}/${sample.id}_R2.fastq.gz\" : \"\"\n\n    \"\"\"\n    mkdir -p no_host/${sample.id}\n    kraken2 --threads $task.cpus --db ${kraken_db} ${out_options} --output kraken_read_report.txt --report kraken_report.txt --report-minimizer-data --gzip-compressed --minimum-hit-groups ${params.kraken2_min_hit_groups} $fq\n\n    gzip -c ${sample.id}_1.fastq > no_host/${sample.id}/${sample.id}_R1.fastq.gz\n    ${move_r2}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "sample",
            "fq",
            "kraken_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "bam2fq": {
        "name_process": "bam2fq",
        "string_process": "process bam2fq {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(bam)\n\n    output:\n    stdout\n    tuple val(sample), path(\"fastq/${sample.id}/${sample.id}*.fastq.gz\"), emit: reads\n\n    script:\n    \"\"\"\n    set -o pipefail\n    mkdir -p fastq/${sample.id}\n    samtools collate -@ $task.cpus -u -O $bam | samtools fastq -F 0x900 -0 ${sample.id}_other.fastq.gz -1 ${sample.id}_R1.fastq.gz -2 ${sample.id}_R2.fastq.gz\n\n    if [[ \"\\$?\" -eq 0 ]];\n    then\n\n        if [[ -z \"\\$(gzip -dc ${sample.id}_R1.fastq.gz | head -n 1)\" ]];\n        then\n            if [[ ! -z \"\\$(gzip -dc ${sample.id}_other.fastq.gz | head -n 1)\" ]];\n            then\n                mv -v ${sample.id}_other.fastq.gz fastq/${sample.id}/${sample.id}_R1.fastq.gz;\n            fi;\n        else\n                mv -v ${sample.id}_R1.fastq.gz fastq/${sample.id}/;\n                if [[ ! -z \"\\$(gzip -dc ${sample.id}_R2.fastq.gz | head -n 1)\" ]];\n                then\n                    mv -v ${sample.id}_R2.fastq.gz fastq/${sample.id}/;\n                fi;\n        fi;\n\n        ls -l *.fastq.gz\n        ls -l fastq/${sample.id}/*.fastq.gz\n        rm -rf *.fastq.gz\n    fi;\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    \"\"\"\n    set -o pipefail\n    mkdir -p fastq/${sample.id}\n    samtools collate -@ $task.cpus -u -O $bam | samtools fastq -F 0x900 -0 ${sample.id}_other.fastq.gz -1 ${sample.id}_R1.fastq.gz -2 ${sample.id}_R2.fastq.gz\n\n    if [[ \"\\$?\" -eq 0 ]];\n    then\n\n        if [[ -z \"\\$(gzip -dc ${sample.id}_R1.fastq.gz | head -n 1)\" ]];\n        then\n            if [[ ! -z \"\\$(gzip -dc ${sample.id}_other.fastq.gz | head -n 1)\" ]];\n            then\n                mv -v ${sample.id}_other.fastq.gz fastq/${sample.id}/${sample.id}_R1.fastq.gz;\n            fi;\n        else\n                mv -v ${sample.id}_R1.fastq.gz fastq/${sample.id}/;\n                if [[ ! -z \"\\$(gzip -dc ${sample.id}_R2.fastq.gz | head -n 1)\" ]];\n                then\n                    mv -v ${sample.id}_R2.fastq.gz fastq/${sample.id}/;\n                fi;\n        fi;\n\n        ls -l *.fastq.gz\n        ls -l fastq/${sample.id}/*.fastq.gz\n        rm -rf *.fastq.gz\n    fi;\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "fq2bam": {
        "name_process": "fq2bam",
        "string_process": "\nprocess fq2bam {\n    input:\n    tuple val(sample), path(fq)\n\n    output:\n    tuple val(sample), path(\"out/${sample.id}.bam\"), emit: reads\n\n    script:\n\tdef maxmem = task.memory.toGiga()\n\tdef r2 = (sample.is_paired) ? \"in2=${sample.id}_R2.fastq.gz\" : \"\"\n\n\t\"\"\"\n\tmkdir -p out/\n\treformat.sh -Xmx${maxmem}g in=${sample.id}_R1.fastq.gz ${r2} trimreaddescription=t out=stdout.bam | samtools addreplacerg -r \"ID:A\" -r \"SM:${sample.id}\" -o out/${sample.id}.bam -\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\tdef maxmem = task.memory.toGiga()\n\tdef r2 = (sample.is_paired) ? \"in2=${sample.id}_R2.fastq.gz\" : \"\"\n\n\t\"\"\"\n\tmkdir -p out/\n\treformat.sh -Xmx${maxmem}g in=${sample.id}_R1.fastq.gz ${r2} trimreaddescription=t out=stdout.bam | samtools addreplacerg -r \"ID:A\" -r \"SM:${sample.id}\" -o out/${sample.id}.bam -\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample",
            "fq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "prepare_fastqs": {
        "name_process": "prepare_fastqs",
        "string_process": "\nprocess prepare_fastqs {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(fq)\n\n    output:\n    tuple val(sample), path(\"fastq/${sample.id}/${sample.id}_R*.fastq.gz\"), emit: reads\n\n    script:\n    if (sample.is_paired) {\n        \"\"\"\n        mkdir -p fastq/${sample.id}\n        ln -sf ../../${fq[0]} fastq/${sample.id}/${sample.id}_R1.fastq.gz\n        ln -sf ../../${fq[1]} fastq/${sample.id}/${sample.id}_R2.fastq.gz\n        \"\"\"\n    } else {\n        \"\"\"\n        mkdir -p fastq/${sample.id}\n        ln -sf ../../${fq[0]} fastq/${sample.id}/${sample.id}_R1.fastq.gz\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 22,
        "string_script": "    if (sample.is_paired) {\n        \"\"\"\n        mkdir -p fastq/${sample.id}\n        ln -sf ../../${fq[0]} fastq/${sample.id}/${sample.id}_R1.fastq.gz\n        ln -sf ../../${fq[1]} fastq/${sample.id}/${sample.id}_R2.fastq.gz\n        \"\"\"\n    } else {\n        \"\"\"\n        mkdir -p fastq/${sample.id}\n        ln -sf ../../${fq[0]} fastq/${sample.id}/${sample.id}_R1.fastq.gz\n        \"\"\"\n    }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample",
            "fq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "concat_singles": {
        "name_process": "concat_singles",
        "string_process": "\nprocess concat_singles {\n    input:\n    tuple val(sample), path(reads)\n\n    output:\n    tuple val(sample), path(\"${sample}/${sample}.singles_R1.fastq.gz\"), emit: reads\n\n    script:\n    \"\"\"\n    mkdir -p $sample\n    cat ${reads} > ${sample}/${sample}.singles_R1.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    mkdir -p $sample\n    cat ${reads} > ${sample}/${sample}.singles_R1.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "process multiqc {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    path(reports)\n\tpath(multiqc_config)\n\n    output:\n    path(\"multiqc_report.html\")\n\n    script:\n    def send_report = (params.email) ? \"echo . | mailx -s 'multiqc_report' -a multiqc_report.html ${params.email}\" : \"\"\n    \"\"\"\n    multiqc -c ${multiqc_config} .\n    ${send_report}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    def send_report = (params.email) ? \"echo . | mailx -s 'multiqc_report' -a multiqc_report.html ${params.email}\" : \"\"\n    \"\"\"\n    multiqc -c ${multiqc_config} .\n    ${send_report}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "reports",
            "multiqc_config"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "kraken2": {
        "name_process": "kraken2",
        "string_process": "process kraken2 {\n    publishDir params.output_dir, mode: params.publish_mode\n\n    input:\n    tuple val(sample), path(reads)\n\tpath(kraken_db)\n\n    output:\n    tuple val(sample), path(\"${sample.id}/${sample.id}.kraken2_report.txt\"), emit: kraken2_out\n\n    script:\n    def is_paired = (sample.is_paired) ? \"--paired\" : \"\";\n    \"\"\"\n    mkdir -p ${sample.id}\n    kraken2 --db ${kraken_db} --threads $task.cpus --minimum-hit-groups ${params.kraken2_min_hit_groups} --gzip-compressed --report ${sample.id}/${sample.id}.kraken2_report.txt ${is_paired} \\$(ls $reads)\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    def is_paired = (sample.is_paired) ? \"--paired\" : \"\";\n    \"\"\"\n    mkdir -p ${sample.id}\n    kraken2 --db ${kraken_db} --threads $task.cpus --minimum-hit-groups ${params.kraken2_min_hit_groups} --gzip-compressed --report ${sample.id}/${sample.id}.kraken2_report.txt ${is_paired} \\$(ls $reads)\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "sample",
            "reads",
            "kraken_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "process fastqc {\n    publishDir params.output_dir, mode: params.publish_mode, pattern: \"raw_counts/*.txt\"\n\n    input:\n    tuple val(sample), path(reads)\n\n    output:\n    tuple val(sample), path(\"fastqc/*/*fastqc_data.txt\"), emit: reports\n    tuple val(sample), path(\"raw_counts/${sample.id}.txt\"), emit: counts\n\n    script:\n    def process_r2 = (sample.is_paired) ? \"fastqc -t $task.cpus --extract --outdir=fastqc ${sample.id}_R2.fastq.gz && mv fastqc/${sample.id}_R2_fastqc/fastqc_data.txt fastqc/${sample.id}_R2_fastqc/${sample.id}_R2_fastqc_data.txt\" : \"\";\n\n    \"\"\"\n    mkdir -p fastqc\n    mkdir -p raw_counts\n    fastqc -t $task.cpus --extract --outdir=fastqc ${sample.id}_R1.fastq.gz && mv fastqc/${sample.id}_R1_fastqc/fastqc_data.txt fastqc/${sample.id}_R1_fastqc/${sample.id}_R1_fastqc_data.txt\n    ${process_r2}\n\n    grep \"Total Sequences\" fastqc/*/*data.txt > seqcount.txt\n    echo \\$(wc -l seqcount.txt)\\$'\\t'\\$(head -n1 seqcount.txt | cut -f 2) > raw_counts/${sample.id}.txt\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    def process_r2 = (sample.is_paired) ? \"fastqc -t $task.cpus --extract --outdir=fastqc ${sample.id}_R2.fastq.gz && mv fastqc/${sample.id}_R2_fastqc/fastqc_data.txt fastqc/${sample.id}_R2_fastqc/${sample.id}_R2_fastqc_data.txt\" : \"\";\n\n    \"\"\"\n    mkdir -p fastqc\n    mkdir -p raw_counts\n    fastqc -t $task.cpus --extract --outdir=fastqc ${sample.id}_R1.fastq.gz && mv fastqc/${sample.id}_R1_fastqc/fastqc_data.txt fastqc/${sample.id}_R1_fastqc/${sample.id}_R1_fastqc_data.txt\n    ${process_r2}\n\n    grep \"Total Sequences\" fastqc/*/*data.txt > seqcount.txt\n    echo \\$(wc -l seqcount.txt)\\$'\\t'\\$(head -n1 seqcount.txt | cut -f 2) > raw_counts/${sample.id}.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sample",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir params.output_dir, mode: params.publish_mode, pattern: \"raw_counts/*.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "qc_bbduk": {
        "name_process": "qc_bbduk",
        "string_process": "\nprocess qc_bbduk {\n\tpublishDir path: params.output_dir, mode: params.publish_mode, pattern: \"${sample.id}/${sample.id}.bbduk_stats.txt\"\n\n    input:\n    tuple val(sample), path(reads)\n\tpath(adapters)\n\n    output:\n    tuple val(sample), path(\"${sample.id}/${sample.id}_R*.fastq.gz\"), emit: reads\n    tuple val(sample), path(\"${sample.id}/${sample.id}_O.fastq.gz\"), emit: orphans, optional: true\n    path(\"${sample.id}/${sample.id}.bbduk_stats.txt\")\n\n    script:\n\tdef maxmem = task.memory.toGiga()\n    def read1 = \"in1=${sample.id}_R1.fastq.gz out1=${sample.id}/${sample.id}_R1.fastq.gz\"\n    def read2 = sample.is_paired ? \"in2=${sample.id}_R2.fastq.gz out2=${sample.id}/${sample.id}_R2.fastq.gz outs=${sample.id}/${sample.id}_O.fastq.gz\" : \"\"\n\n    \"\"\"\n    mkdir -p ${sample.id}\n    bbduk.sh -Xmx${maxmem}g t=${task.cpus} ${params.qc_params} ref=${adapters} stats=${sample.id}/${sample.id}.bbduk_stats.txt ${read1} ${read2}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\tdef maxmem = task.memory.toGiga()\n    def read1 = \"in1=${sample.id}_R1.fastq.gz out1=${sample.id}/${sample.id}_R1.fastq.gz\"\n    def read2 = sample.is_paired ? \"in2=${sample.id}_R2.fastq.gz out2=${sample.id}/${sample.id}_R2.fastq.gz outs=${sample.id}/${sample.id}_O.fastq.gz\" : \"\"\n\n    \"\"\"\n    mkdir -p ${sample.id}\n    bbduk.sh -Xmx${maxmem}g t=${task.cpus} ${params.qc_params} ref=${adapters} stats=${sample.id}/${sample.id}.bbduk_stats.txt ${read1} ${read2}\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample",
            "reads",
            "adapters"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir path: params.output_dir, mode: params.publish_mode, pattern: \"${sample.id}/${sample.id}.bbduk_stats.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "dehumanise": {
        "name_process": "dehumanise",
        "string_process": "process dehumanise {\n    publishDir \"$output_dir\", mode: params.publish_mode, pattern: \"no_human/*/*.fastq.gz\"\n\n    input:\n    tuple val(sample), path(fq)\n\n    output:\n    tuple val(sample), path(\"no_human/${sample}/${sample}.bam\"), emit: bam\n    tuple val(sample), path(\"no_human/${sample}/${sample}*.fastq.gz\"), emit: fq\n    tuple val(\"${sample}.full\"), path(\"${sample}.full.bam\"), emit: full_bam\n\n    script:\n    def in_fq = (fq.size() == 2) ? \"in=${fq[0]} in2=${fq[1]}\" : \"in=${fq[0]}\";\n    def maxmem = task.memory.toGiga()\n    \"\"\"\n    set -o pipefail\n    mkdir -p no_human/${sample}\n    ln -s ${params.decon_ref}\n    bbmap.sh -Xmx${maxmem}g t=$task.cpus ${in_fq} outu=unmapped.sam outm=mapped.sam idfilter=${params.decon_minid}\n    cp unmapped.sam full.sam\n    samtools view mapped.sam >> full.sam\n    samtools view -f 4 mapped.sam >> unmapped.sam\n    samtools view -f 8 mapped.sam >> unmapped.sam\n\n    samtools collate -@ $task.cpus -O unmapped.sam | samtools view -buh > unmapped.bam\n\n    if [[ \"\\$?\" -eq 0 ]];\n    then\n        samtools fastq -@ task.cpus -0 ${sample}_other.fastq.gz -1 ${sample}_R1.fastq.gz -2 ${sample}_R2.fastq.gz unmapped.bam\n        if  [[ \"\\$?\" -eq 0 ]];\n        then\n\n            if [[ -z \"\\$(gzip -dc ${sample}_R1.fastq.gz | head -n 1)\" ]];\n            then\n                if [[ ! -z \"\\$(gzip -dc ${sample}_other.fastq.gz | head -n 1)\" ]];\n                then\n                    mv -v ${sample}_other.fastq.gz no_human/${sample}/${sample}_R1.fastq.gz;\n                fi;\n            else\n                    mv -v ${sample}_R1.fastq.gz no_human/${sample}/;\n                    if [[ ! -z \"\\$(gzip -dc ${sample}_R2.fastq.gz | head -n 1)\" ]];\n                    then\n                        mv -v ${sample}_R2.fastq.gz no_human/${sample}/;\n                    fi;\n            fi;\n\n            mv -v unmapped.bam no_human/${sample}/${sample}.bam\n            ls -l *.fastq.gz\n            ls -l no_human/${sample}/\n            rm -rf *.fastq.gz\n\n            samtools view -buh full.sam > ${sample}.full.bam\n        fi;\n    fi;\n\n    \"\"\"\n}",
        "nb_lignes_process": 55,
        "string_script": "    def in_fq = (fq.size() == 2) ? \"in=${fq[0]} in2=${fq[1]}\" : \"in=${fq[0]}\";\n    def maxmem = task.memory.toGiga()\n    \"\"\"\n    set -o pipefail\n    mkdir -p no_human/${sample}\n    ln -s ${params.decon_ref}\n    bbmap.sh -Xmx${maxmem}g t=$task.cpus ${in_fq} outu=unmapped.sam outm=mapped.sam idfilter=${params.decon_minid}\n    cp unmapped.sam full.sam\n    samtools view mapped.sam >> full.sam\n    samtools view -f 4 mapped.sam >> unmapped.sam\n    samtools view -f 8 mapped.sam >> unmapped.sam\n\n    samtools collate -@ $task.cpus -O unmapped.sam | samtools view -buh > unmapped.bam\n\n    if [[ \"\\$?\" -eq 0 ]];\n    then\n        samtools fastq -@ task.cpus -0 ${sample}_other.fastq.gz -1 ${sample}_R1.fastq.gz -2 ${sample}_R2.fastq.gz unmapped.bam\n        if  [[ \"\\$?\" -eq 0 ]];\n        then\n\n            if [[ -z \"\\$(gzip -dc ${sample}_R1.fastq.gz | head -n 1)\" ]];\n            then\n                if [[ ! -z \"\\$(gzip -dc ${sample}_other.fastq.gz | head -n 1)\" ]];\n                then\n                    mv -v ${sample}_other.fastq.gz no_human/${sample}/${sample}_R1.fastq.gz;\n                fi;\n            else\n                    mv -v ${sample}_R1.fastq.gz no_human/${sample}/;\n                    if [[ ! -z \"\\$(gzip -dc ${sample}_R2.fastq.gz | head -n 1)\" ]];\n                    then\n                        mv -v ${sample}_R2.fastq.gz no_human/${sample}/;\n                    fi;\n            fi;\n\n            mv -v unmapped.bam no_human/${sample}/${sample}.bam\n            ls -l *.fastq.gz\n            ls -l no_human/${sample}/\n            rm -rf *.fastq.gz\n\n            samtools view -buh full.sam > ${sample}.full.bam\n        fi;\n    fi;\n\n    \"\"\"",
        "nb_lignes_script": 43,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample",
            "fq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "zellerlab__vortex_light",
        "directive": [
            "publishDir \"$output_dir\", mode: params.publish_mode, pattern: \"no_human/*/*.fastq.gz\""
        ],
        "when": "",
        "stub": ""
    }
}