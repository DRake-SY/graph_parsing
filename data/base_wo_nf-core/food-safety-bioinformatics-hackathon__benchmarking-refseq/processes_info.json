{
    "simulation": {
        "name_process": "simulation",
        "string_process": "\nprocess simulation {\npublishDir \"${params.output}/simulation\", mode: \"copy\"\ntag {seed}\ninput:\nfile(ref) from refs\neach sim from 1..params.sim\n\noutput:\nset seed, file(\"sim_${name}_${seed}_1.fq\"), file(\"sim_${name}_${seed}_2.fq\") into (sim_ch_shovill, sim_ch_refrank, sim_ch_refseq, sim_ch_get_cov)\nfile ref into sim_ref_ch\n\nscript:\nseed = params.seed + sim\nname = ref.getBaseName()\n\"\"\"\nwgsim $params.wgsim_options -1 ${params.length_reads} -2 ${params.length_reads} -S ${seed} ${ref} sim_${name}_${seed}_1.fq sim_${name}_${seed}_2.fq\n\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "seed = params.seed + sim\nname = ref.getBaseName()\n\"\"\"\nwgsim $params.wgsim_options -1 ${params.length_reads} -2 ${params.length_reads} -S ${seed} ${ref} sim_${name}_${seed}_1.fq sim_${name}_${seed}_2.fq\n\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Seed",
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/seed-eco",
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "Seed",
                "uri": "https://bio.tools/seed-eco",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3365",
                            "term": "Data architecture, analysis and design"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An R/Shiny package for visualizing ecological data. It provides a visual interface for generating a wide variety of plots, including histograms, scatterplots, bar plots, stacked bar plots, PCoA plots, cluster dendrograms, and heatmaps.",
                "homepage": "https://github.com/danlbek/Seed"
            },
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "refs",
            "1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "",
            "sim_ref_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/simulation\", mode: \"copy\"",
            "tag {seed}"
        ],
        "when": "",
        "stub": ""
    },
    "shovill": {
        "name_process": "shovill",
        "string_process": " process shovill {\n  publishDir \"${params.output}/shovill\", saveAS: {\"sim_${seed}\"}, mode: \"copy\"\n  cpus 8\n  tag {seed}\n  input:\n  set seed, file(r1), file(r2) from sim_ch_shovill\n\n  output:\n  set seed, file(\"output\") into shovill_ch\n\n  script:\n\n  \"\"\"\n  shovill --outdir output --R1 $r1 --R2 $r1\n  \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  shovill --outdir output --R1 $r1 --R2 $r1\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "shovill"
        ],
        "tools_url": [
            "https://bio.tools/shovill"
        ],
        "tools_dico": [
            {
                "name": "shovill",
                "uri": "https://bio.tools/shovill",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Shovill is a pipeline for assembly of bacterial isolate genomes from Illumina paired-end reads.  Shovill uses SPAdes at its core, but alters the steps before and after the primary assembly step to get similar results in less time. Shovill also supports other assemblers like SKESA, Velvet and Megahit, so you can take advantage of the pre- and post-processing the Shovill provides with those too.",
                "homepage": "https://github.com/tseemann/shovill"
            }
        ],
        "inputs": [
            "sim_ch_shovill"
        ],
        "nb_inputs": 1,
        "outputs": [
            "shovill_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/shovill\", saveAS: {\"sim_${seed}\"}, mode: \"copy\"",
            "cpus 8",
            "tag {seed}"
        ],
        "when": "",
        "stub": ""
    },
    "refseq_masher_assembly": {
        "name_process": "refseq_masher_assembly",
        "string_process": " process refseq_masher_assembly {\n  publishDir \"${params.output}/refseq_masher_assembly\"\n  tag {seed}\n  input:\n  set seed, file(output) from shovill_ch\n\n  output:\n  file(\"refseq_masher_assembly_${seed}.tsv\") into masher_assembly_ch\n\n  script:\n\n  \"\"\"\n  refseq_masher matches --top-n-results 50 --output \"refseq_masher_assembly_${seed}.tsv\" output/contigs.fa\n  \"\"\"\n  }",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  refseq_masher matches --top-n-results 50 --output \"refseq_masher_assembly_${seed}.tsv\" output/contigs.fa\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "shovill_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "masher_assembly_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/refseq_masher_assembly\"",
            "tag {seed}"
        ],
        "when": "",
        "stub": ""
    },
    "refseq_masher_reads": {
        "name_process": "refseq_masher_reads",
        "string_process": "\nprocess refseq_masher_reads {\npublishDir \"${params.output}/refseq_masher_reads\", mode: \"copy\"\n\ncpus 4\n\ninput:\nset seed, file(r1), file(r2) from sim_ch_refseq\n\noutput:\nfile(\"refseq_masher_reads_${name}_${seed}.tsv\") into masher_reads_ch\n\nscript:\nname = r1.getBaseName()\n\"\"\"\nrefseq_masher contains --top-n-results 50 --parallelism ${task.cpus} --output \"refseq_masher_reads_${name}_${seed}.tsv\" $r1 $r2\n\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "name = r1.getBaseName()\n\"\"\"\nrefseq_masher contains --top-n-results 50 --parallelism ${task.cpus} --output \"refseq_masher_reads_${name}_${seed}.tsv\" $r1 $r2\n\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "sim_ch_refseq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "masher_reads_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/refseq_masher_reads\", mode: \"copy\"",
            "cpus 4"
        ],
        "when": "",
        "stub": ""
    },
    "find_GCF": {
        "name_process": "find_GCF",
        "string_process": "\nprocess find_GCF {\n\tpublishDir \"${params.output}/top10hits\", mode: \"move\" \n  input:\n  file tsv from masher_reads_ch\n  output:\n  file(\"${name}_hits.tsv\") into find_gcf_ch\n  \n  script:\n  name = tsv.getBaseName()\n\n\"\"\"\n  #!/usr/bin/env python\nimport re\nwith open(\"${tsv}\",\"r\") as ifh:\n    lines = ifh.readlines()\n    headers = lines[0].split(\"\\\\t\")\n    assembly_accession_index = headers.index(\"assembly_accession\")\n    hits = []\n    counter = 0\n    for line in lines[1:]:\n        asm = line.split(\"\\\\t\")[assembly_accession_index]\n        if (re.match(\"^GCF\", asm)) and (counter < 10):\n            hits.append(line.split(\"\\\\t\")[assembly_accession_index])\n            counter += 1\n    with open(\"${name}_hits.tsv\", \"w\") as ofh:\n        for hit in hits:\n            ofh.write(\"{}\\\\n\".format(hit))\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "  name = tsv.getBaseName()\n\n\"\"\"\n  #!/usr/bin/env python\nimport re\nwith open(\"${tsv}\",\"r\") as ifh:\n    lines = ifh.readlines()\n    headers = lines[0].split(\"\\\\t\")\n    assembly_accession_index = headers.index(\"assembly_accession\")\n    hits = []\n    counter = 0\n    for line in lines[1:]:\n        asm = line.split(\"\\\\t\")[assembly_accession_index]\n        if (re.match(\"^GCF\", asm)) and (counter < 10):\n            hits.append(line.split(\"\\\\t\")[assembly_accession_index])\n            counter += 1\n    with open(\"${name}_hits.tsv\", \"w\") as ofh:\n        for hit in hits:\n            ofh.write(\"{}\\\\n\".format(hit))\n  \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "masher_reads_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "find_gcf_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/top10hits\", mode: \"move\""
        ],
        "when": "",
        "stub": ""
    },
    "get_coverage": {
        "name_process": "get_coverage",
        "string_process": "\nprocess get_coverage {\npublishDir \"${params.output}/top10hits\"\ntag {name}\n\ninput:\nset seed, file(r1), file(r2) from sim_ch_get_cov\nfile(top10hits) from find_gcf_ch\nfile(ref) from sim_ref_ch\n\noutput:\nfile(\"final_scores.csv\")\n\nshell:\nname = ref.getBaseName()\n\n'''\nfor gcf in `cat ${top10hits}`; do\n\tHITTREF=`\\\\ls /home/centos/benchmarking-refseq/data/noplasmids/${gcf}*`\n\tbwa index $HITREF\n\tbwa mem $HITREF !{r1} !{r2} | samtools view -S -b - | samtools sort > sort.bam\n\tbamcov -H sort.bam >> scores.csv\ndone\nbwa index !{ref}\nbwa mem !{ref} !{r1} !{r2} | samtools view -S -b - | samtools sort > sort.bam\nbamcov -H sort.bam >> scores.csv\nscore.py scores.csv > final_scores_!{name}_!{seed}.csv\n'''\n}",
        "nb_lignes_process": 27,
        "string_script": "name = ref.getBaseName()\n\n'''\nfor gcf in `cat ${top10hits}`; do\n\tHITTREF=`\\\\ls /home/centos/benchmarking-refseq/data/noplasmids/${gcf}*`\n\tbwa index $HITREF\n\tbwa mem $HITREF !{r1} !{r2} | samtools view -S -b - | samtools sort > sort.bam\n\tbamcov -H sort.bam >> scores.csv\ndone\nbwa index !{ref}\nbwa mem !{ref} !{r1} !{r2} | samtools view -S -b - | samtools sort > sort.bam\nbamcov -H sort.bam >> scores.csv\nscore.py scores.csv > final_scores_!{name}_!{seed}.csv\n'''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "goname",
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/goname",
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sim_ch_get_cov",
            "find_gcf_ch",
            "sim_ref_ch"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [
            "publishDir \"${params.output}/top10hits\"",
            "tag {name}"
        ],
        "when": "",
        "stub": ""
    },
    "ref_rank": {
        "name_process": "ref_rank",
        "string_process": " process ref_rank {\n  input:\n  set seed, file(r1), file(r2) from sim_ch_refrank\n  output:\n\n  script:\n\n  \"\"\"\n  refrank.py --ref *fna --fastq sim_${sim}_1.fq sim_${sim}_2.fq\n  \"\"\"\n\t}",
        "nb_lignes_process": 9,
        "string_script": "  \"\"\"\n  refrank.py --ref *fna --fastq sim_${sim}_1.fq sim_${sim}_2.fq\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sim_ch_refrank"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "score": {
        "name_process": "score",
        "string_process": "\nprocess score {\ninput:\nfile(\"refseq_masher_reads_${seed}.tsv\") from \nfile(\"refseq_masher_assembly_${seed}.tsv\")\noutput:\n\nscript:\n\n\"\"\"\n#!/usr/bin/python\nwith open(\"${paraarams.ref}.out\", \"w\") as out_fh:\n  with open(\"refseq_masher_reads_${seed}.tsv\", \"r\") as in_fh:\n    lines = fh.readlines()\n\"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n#!/usr/bin/python\nwith open(\"${paraarams.ref}.out\", \"w\") as out_fh:\n  with open(\"refseq_masher_reads_${seed}.tsv\", \"r\") as in_fh:\n    lines = fh.readlines()\n\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "food-safety-bioinformatics-hackathon__benchmarking-refseq",
        "directive": [],
        "when": "",
        "stub": ""
    }
}