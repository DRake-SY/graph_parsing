{
    "say_it": {
        "name_process": "say_it",
        "string_process": "\nprocess say_it {\n\n                                                                       \n                          \n\n  input: val word\n  output: tuple val(word), path('hello.out')\n\n  shell:\n    '''\n    echo \"!{word} world, my userid is $(whoami)\" > hello.out\n    '''\n}",
        "nb_lignes_process": 12,
        "string_script": "    '''\n    echo \"!{word} world, my userid is $(whoami)\" > hello.out\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TheJacksonLaboratory__crf_nextflow_basics",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "check_sums": {
        "name_process": "check_sums",
        "string_process": "\nprocess check_sums {\n\n                                                                          \n                                                                                   \n                                                                  \n\n  input: tuple val(word), path(file_in)\n  output: tuple val(word), path('*.{md5,sha256,sha512}')\n\n  shell:\n    '''\n    # can nest single quoted strings w/i 3x single quoted multi-line string.\n    echo \"file_in: '!{file_in}'\"\n    md5sum '!{file_in}' > '!{file_in}.md5'\n    sha256sum '!{file_in}' > '!{file_in}.sha256'\n    sha512sum '!{file_in}' > '!{file_in}.sha512'\n    '''\n}",
        "nb_lignes_process": 17,
        "string_script": "    '''\n    # can nest single quoted strings w/i 3x single quoted multi-line string.\n    echo \"file_in: '!{file_in}'\"\n    md5sum '!{file_in}' > '!{file_in}.md5'\n    sha256sum '!{file_in}' > '!{file_in}.sha256'\n    sha512sum '!{file_in}' > '!{file_in}.sha512'\n    '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TheJacksonLaboratory__crf_nextflow_basics",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "greet_list": {
        "name_process": "greet_list",
        "string_process": "\nprocess greet_list {\n\n  input: val words_in\n  output: path 'words.out'\n\n  shell:\n    '''\n    echo \"greeting words: !{words_in}\" > 'words.out'\n    '''\n\n  stub:\n    \"\"\"\n    touch words.out\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    '''\n    echo \"greeting words: !{words_in}\" > 'words.out'\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TheJacksonLaboratory__crf_nextflow_basics",
        "directive": [],
        "when": "",
        "stub": "\n    \"\"\"\n    touch words.out\n    \"\"\""
    }
}