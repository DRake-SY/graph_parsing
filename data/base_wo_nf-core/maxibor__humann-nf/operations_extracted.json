{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs( params.reads, size: params.pairedEnd ? 2 : 1 )\n    .ifEmpty { exit 1, \"Cannot find any reads matching: ${params.reads}\\n\" }\n\t.set {reads_to_trim}",
        "origin": [
            [
                "params.reads, size: params.pairedEnd ? 2 : 1",
                "A"
            ]
        ],
        "gives": [
            [
                "reads_to_trim",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath( params.chocophlanDB, checkIfExists: true )\n    .ifEmpty { exit 1, \"Cannot find any chocophlanDB matching: ${params.chocophlanDB}\\n\" }\n    .first()\n    .set {chocophlanDB}",
        "origin": [
            [
                "params.chocophlanDB, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "chocophlanDB",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath( params.unirefDB, checkIfExists: true )\n    .ifEmpty { exit 1, \"Cannot find any unirefDB matching: ${params.unirefDB}\\n\" }\n    .first()\n    .set {unirefDB}",
        "origin": [
            [
                "params.unirefDB, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "unirefDB",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "mpa_db_path_wait = Channel.value( \"${params.mpa_db_name}\" )",
        "origin": [],
        "gives": [
            [
                "mpa_db_path_wait",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "trimmed_reads_humann\n    .join(metaphlan_out)\n    .set {humann_ch}",
        "origin": [
            [
                "trimmed_reads_humann",
                "P"
            ],
            [
                "metaphlan_out",
                "P"
            ]
        ],
        "gives": [
            [
                "humann_ch",
                "P"
            ]
        ]
    }
}