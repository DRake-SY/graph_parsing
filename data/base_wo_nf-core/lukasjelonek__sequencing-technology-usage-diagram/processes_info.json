{
    "lookup_data": {
        "name_process": "lookup_data",
        "string_process": "\nprocess lookup_data {\n    publishDir params.out, mode: 'copy'\n    \n    container \"quay.io/biocontainers/entrez-direct:10.2--pl526_0\"\n\n    input:\n    set val(start), val(end) from ch_years\n\n    output:\n    file 'data.csv' into ch_data\n\n    shell:\n    '''\n    #!/bin/bash\n    PLATFORM=(\"abi solid\" \"bgiseq\" \"capillary\" \"complete genomics\" \"helicos\" \"illumina\" \"ion torrent\" \"ls454\" \"oxford nanopore\" \"pacbio smrt\")\n    TYPE=(\"genomic\" \"genomic single cell\" \"metagenomic\" \"metatranscriptomic\" \"other\" \"synthetic\" \"transcriptomic\" \"transcriptomic single cell\" \"viral rna\")\n    echo \"technology,type,year,count\" > data.csv\n    for p in \"${PLATFORM[@]}\"; do\n      for t in \"${TYPE[@]}\"; do\n        for y in $(seq !{start} !{end}); do\n          COUNT=$(esearch -db sra -query \"(((\\\\\"$y/01/01\\\\\"[Modification Date] : \\\\\"$y/12/31\\\\\"[Modification Date])) AND \\\\\"$p\\\\\"[Platform]) AND \\\\\"$t\\\\\"[Source]\" | xtract -pattern ENTREZ_DIRECT -element Count)\n          echo ${p},${t},${y},${COUNT} >> data.csv\n        done\n      done\n    done\n    '''\n}",
        "nb_lignes_process": 26,
        "string_script": "    '''\n    #!/bin/bash\n    PLATFORM=(\"abi solid\" \"bgiseq\" \"capillary\" \"complete genomics\" \"helicos\" \"illumina\" \"ion torrent\" \"ls454\" \"oxford nanopore\" \"pacbio smrt\")\n    TYPE=(\"genomic\" \"genomic single cell\" \"metagenomic\" \"metatranscriptomic\" \"other\" \"synthetic\" \"transcriptomic\" \"transcriptomic single cell\" \"viral rna\")\n    echo \"technology,type,year,count\" > data.csv\n    for p in \"${PLATFORM[@]}\"; do\n      for t in \"${TYPE[@]}\"; do\n        for y in $(seq !{start} !{end}); do\n          COUNT=$(esearch -db sra -query \"(((\\\\\"$y/01/01\\\\\"[Modification Date] : \\\\\"$y/12/31\\\\\"[Modification Date])) AND \\\\\"$p\\\\\"[Platform]) AND \\\\\"$t\\\\\"[Source]\" | xtract -pattern ENTREZ_DIRECT -element Count)\n          echo ${p},${t},${y},${COUNT} >> data.csv\n        done\n      done\n    done\n    '''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "XTRACT"
        ],
        "tools_url": [
            "https://bio.tools/XTRACT"
        ],
        "tools_dico": [
            {
                "name": "XTRACT",
                "uri": "https://bio.tools/XTRACT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRI"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3337",
                            "term": "Biobank"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3384",
                            "term": "Medical imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3067",
                            "term": "Anatomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Nuclear magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "NMRI"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3337",
                            "term": "biobanking"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3337",
                            "term": "Tissue collection"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Standardised protocols for automated tractography and connectivity blueprints in the human and macaque brain.\n\nWM tract atlases for the human (HCP and UK Biobank) and Macaque brain and connectivity blueprint atlases for the human (HCP) and macaque brain.\n\nReference: Warrington S, Bryant KL, Khrapitchev AA, Sallet J, Charquero-Ballester M, Douaud G, Jbabdi S, Mars RB*, Sotiropoulos SN* (in prep.) XTRACT - Standardised protocols for automated tractography and connectivity blueprints in the human and macaque brain.\n\nXTRACT - a command-line tool for automated tractography.\n\nXTRACT can be used to automatically extract a set of carefully dissected tracts in humans and macaques (other species to come). It can also be used to define one's own tractography protocols where all the user needs to do is to define a set of masks in standard space (e.g. MNI152)",
                "homepage": "http://www.fmrib.ox.ac.uk/fsl/XTRACT"
            }
        ],
        "inputs": [
            "ch_years"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_data"
        ],
        "nb_outputs": 1,
        "name_workflow": "lukasjelonek__sequencing-technology-usage-diagram",
        "directive": [
            "publishDir params.out, mode: 'copy'",
            "container \"quay.io/biocontainers/entrez-direct:10.2--pl526_0\""
        ],
        "when": "",
        "stub": ""
    },
    "plot": {
        "name_process": "plot",
        "string_process": "\nprocess plot {\n    publishDir params.out, mode: 'copy'\n    \n    container \"r-ggplot2:latest\"\n\n    input:\n    file 'data.csv' from ch_data\n\n    output:\n    file \"*\" into ch_end\n\n    script:\n    '''\n    #!/usr/bin/env Rscript\n    library(ggplot2)\n    library(scales)\n    # prepare data\n    data = read.csv(\"data.csv\")\n    df = data.frame(data)\n    df$year = as.character(df$year)\n\n\n    # prepare common plot elements \n    p_palette = scale_fill_brewer(palette=\"Set1\")\n    p_scale_log = scale_y_continuous(labels=comma, trans=\"log10\")\n    p_scale_norm = scale_y_continuous(labels=comma)\n    \n    # plot \n    ggplot(data = df[which(df$count>0),], aes(x=year, y=count, fill=type)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge(preserve = \"single\")) +\n        p_palette +\n        facet_grid(facets =  technology ~ .) +\n        p_scale_log + \n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.87), legend.text = element_text(size=8), legend.box.background=element_rect(colour = \"black\")) + \n        labs(title=\"New public experiments in SRA per year by platform and source\", x=\"Year\", y=\"#Experiments\", fill=\"Sample source\")\n    ggsave(\"experiment_count_log_by_platform_and_source.svg\", width=16, height=24, units=\"cm\")\n    ggsave(\"experiment_count_log_by_platform_and_source.png\", width=16, height=24, units=\"cm\")\n\n    aggregate_by_technology = aggregate.data.frame(df$count, by=list(technology=df$technology, year=df$year), FUN=sum)\n    ggplot(data = aggregate_by_technology[which(aggregate_by_technology$x>0),], aes(x=year, y=x, fill=technology)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge()) +\n        p_palette +\n        p_scale_norm +\n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.6), legend.text = element_text(size=8), legend.background=element_blank()) + \n        labs(title=\"New public experiments in SRA per year by platform\", x=\"Year\", y=\"#Experiments\", fill=\"Sequencing platform\")\n    ggsave(\"experiment_count_by_platform.svg\", width=16, height=12, units=\"cm\")\n    ggsave(\"experiment_count_by_platform.png\", width=16, height=12, units=\"cm\")\n\n    aggregate_by_type = aggregate.data.frame(df$count, by=list(type=df$type, year=df$year), FUN=sum)\n    ggplot(data = aggregate_by_type[which(aggregate_by_type$x>0),], aes(x=year, y=x, fill=type)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge()) +\n        p_palette +\n        p_scale_norm +\n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.7), legend.text = element_text(size=8), legend.background=element_blank()) + \n        labs(title=\"New public experiments in SRA per year by source\", x=\"Year\", y=\"#Experiments\", fill=\"Sample source\")\n  ggsave(\"experiment_count_by_source.svg\", width=16, height=12, units=\"cm\")\n  ggsave(\"experiment_count_by_source.png\", width=16, height=12, units=\"cm\")\n    '''\n}",
        "nb_lignes_process": 61,
        "string_script": "    '''\n    #!/usr/bin/env Rscript\n    library(ggplot2)\n    library(scales)\n    # prepare data\n    data = read.csv(\"data.csv\")\n    df = data.frame(data)\n    df$year = as.character(df$year)\n\n\n    # prepare common plot elements \n    p_palette = scale_fill_brewer(palette=\"Set1\")\n    p_scale_log = scale_y_continuous(labels=comma, trans=\"log10\")\n    p_scale_norm = scale_y_continuous(labels=comma)\n    \n    # plot \n    ggplot(data = df[which(df$count>0),], aes(x=year, y=count, fill=type)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge(preserve = \"single\")) +\n        p_palette +\n        facet_grid(facets =  technology ~ .) +\n        p_scale_log + \n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.87), legend.text = element_text(size=8), legend.box.background=element_rect(colour = \"black\")) + \n        labs(title=\"New public experiments in SRA per year by platform and source\", x=\"Year\", y=\"#Experiments\", fill=\"Sample source\")\n    ggsave(\"experiment_count_log_by_platform_and_source.svg\", width=16, height=24, units=\"cm\")\n    ggsave(\"experiment_count_log_by_platform_and_source.png\", width=16, height=24, units=\"cm\")\n\n    aggregate_by_technology = aggregate.data.frame(df$count, by=list(technology=df$technology, year=df$year), FUN=sum)\n    ggplot(data = aggregate_by_technology[which(aggregate_by_technology$x>0),], aes(x=year, y=x, fill=technology)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge()) +\n        p_palette +\n        p_scale_norm +\n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.6), legend.text = element_text(size=8), legend.background=element_blank()) + \n        labs(title=\"New public experiments in SRA per year by platform\", x=\"Year\", y=\"#Experiments\", fill=\"Sequencing platform\")\n    ggsave(\"experiment_count_by_platform.svg\", width=16, height=12, units=\"cm\")\n    ggsave(\"experiment_count_by_platform.png\", width=16, height=12, units=\"cm\")\n\n    aggregate_by_type = aggregate.data.frame(df$count, by=list(type=df$type, year=df$year), FUN=sum)\n    ggplot(data = aggregate_by_type[which(aggregate_by_type$x>0),], aes(x=year, y=x, fill=type)) +\n        theme_bw() +\n        geom_bar(stat='identity', position=position_dodge()) +\n        p_palette +\n        p_scale_norm +\n        theme(axis.text.x = element_text(angle=45, hjust=1), legend.position=c(0.15,0.7), legend.text = element_text(size=8), legend.background=element_blank()) + \n        labs(title=\"New public experiments in SRA per year by source\", x=\"Year\", y=\"#Experiments\", fill=\"Sample source\")\n  ggsave(\"experiment_count_by_source.svg\", width=16, height=12, units=\"cm\")\n  ggsave(\"experiment_count_by_source.png\", width=16, height=12, units=\"cm\")\n    '''",
        "nb_lignes_script": 48,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_end"
        ],
        "nb_outputs": 1,
        "name_workflow": "lukasjelonek__sequencing-technology-usage-diagram",
        "directive": [
            "publishDir params.out, mode: 'copy'",
            "container \"r-ggplot2:latest\""
        ],
        "when": "",
        "stub": ""
    }
}