{
    "generate_data": {
        "name_process": "generate_data",
        "string_process": "\nprocess generate_data {\n    def id = \"01_generate_data\"\n    conda \"envs/run_notebook.yml\"                                       \n    publishDir \"$RES_DIR/$id\"\n\n    input:\n        file notebook from Channel.fromPath(\"analyses/${id}.ipynb\")\n\n    output:\n        file \"iris.csv\" into generate_data_csv \n        file \"${id}.html\" into generate_data_html \n\n\n    \"\"\"\n    reportsrender ${notebook} \\\n        ${id}.html \\\n        --cpus=${task.cpus} \\\n        --params=\"output_file=iris.csv\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    reportsrender ${notebook} \\\n        ${id}.html \\\n        --cpus=${task.cpus} \\\n        --params=\"output_file=iris.csv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "generate_data_csv",
            "generate_data_html"
        ],
        "nb_outputs": 2,
        "name_workflow": "grst__universal_analysis_pipeline",
        "directive": [
            "conda \"envs/run_notebook.yml\"",
            "publishDir \"$RES_DIR/$id\""
        ],
        "when": "",
        "stub": ""
    },
    "visualize_data": {
        "name_process": "visualize_data",
        "string_process": "\nprocess visualize_data {\n    def id = \"02_visualize_data\"\n    conda \"envs/run_notebook.yml\"                                               \n    publishDir \"$RES_DIR/$id\"\n\n    input:\n        file notebook from Channel.fromPath(\"analyses/${id}.Rmd\")\n        file 'iris.csv' from generate_data_csv \n\n    output:\n        file \"${id}.html\" into visualize_data_html \n\n\n    \"\"\"\n    reportsrender ${notebook} \\\n        ${id}.html \\\n        --cpus=${task.cpus} \\\n        --params=\"input_file=iris.csv\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    reportsrender ${notebook} \\\n        ${id}.html \\\n        --cpus=${task.cpus} \\\n        --params=\"input_file=iris.csv\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "generate_data_csv"
        ],
        "nb_inputs": 1,
        "outputs": [
            "visualize_data_html"
        ],
        "nb_outputs": 1,
        "name_workflow": "grst__universal_analysis_pipeline",
        "directive": [
            "conda \"envs/run_notebook.yml\"",
            "publishDir \"$RES_DIR/$id\""
        ],
        "when": "",
        "stub": ""
    },
    "deploy": {
        "name_process": "deploy",
        "string_process": "\nprocess deploy {\n    conda \"envs/run_notebook.yml\"\n    publishDir \"${params.deployDir}\", mode: \"copy\"\n\n    input:\n        file 'input/*' from Channel.from().mix(\n            generate_data_html,\n            visualize_data_html \n        ).collect()\n\n    output:\n        file \"*.html\"\n                                                             \n                                        \n        file \"index.md\"\n\n                                                                 \n                               \n                                                                         \n    \"\"\"\n    cp input/*.html .\n    reportsrender index *.html --index=\"index.md\" --title=\"Examples\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    cp input/*.html .\n    reportsrender index *.html --index=\"index.md\" --title=\"Examples\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "generate_data_html",
            "visualize_data_html"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "grst__universal_analysis_pipeline",
        "directive": [
            "conda \"envs/run_notebook.yml\"",
            "publishDir \"${params.deployDir}\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}