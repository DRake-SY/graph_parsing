{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs( params.reads, flat:true )\n    .ifEmpty { error \"Cannot find any reads matching: ${params.reads}\" }\n    .set { read_pairs_ch }",
        "origin": [
            [
                "params.reads, flat:true",
                "A"
            ]
        ],
        "gives": [
            [
                "read_pairs_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath( params.fasta )\n    .ifEmpty { error \"Cannot find any FASTA file matching: ${params.fasta}\" }\n    .into { fasta1; fasta2; fasta3; fasta4; fasta5 }",
        "origin": [
            [
                "params.fasta",
                "A"
            ]
        ],
        "gives": [
            [
                "fasta1",
                "P"
            ],
            [
                "fasta2",
                "P"
            ],
            [
                "fasta3",
                "P"
            ],
            [
                "fasta4",
                "P"
            ],
            [
                "fasta5",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath( params.dict )\n    .ifEmpty { error \"Cannot find any GATK sequence dictionary matching: ${params.dict}\" }\n    .into { dict1; dict2; dict3; dict4}",
        "origin": [
            [
                "params.dict",
                "A"
            ]
        ],
        "gives": [
            [
                "dict1",
                "P"
            ],
            [
                "dict2",
                "P"
            ],
            [
                "dict3",
                "P"
            ],
            [
                "dict4",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n    .fromPath( params.fai )\n    .ifEmpty { error \"Cannot find any samtools .fai index matching: ${params.fai}\" }\n    .into { fai1; fai2; fai3; fai4}",
        "origin": [
            [
                "params.fai",
                "A"
            ]
        ],
        "gives": [
            [
                "fai1",
                "P"
            ],
            [
                "fai2",
                "P"
            ],
            [
                "fai3",
                "P"
            ],
            [
                "fai4",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n    .fromPath( params.bwt )\n    .ifEmpty { error \"Cannot find any bwa .bwt file matching: ${params.bwt}\" }\n    .set { bwt }",
        "origin": [
            [
                "params.bwt",
                "A"
            ]
        ],
        "gives": [
            [
                "bwt",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel\n    .fromPath( params.ann )\n    .ifEmpty { error \"Cannot find any bwa .ann file matching: ${params.ann}\" }\n    .set { ann }",
        "origin": [
            [
                "params.ann",
                "A"
            ]
        ],
        "gives": [
            [
                "ann",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "Channel\n    .fromPath( params.pac )\n    .ifEmpty { error \"Cannot find any bwa .pac file matching: ${params.pac}\" }\n    .set { pac }",
        "origin": [
            [
                "params.pac",
                "A"
            ]
        ],
        "gives": [
            [
                "pac",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "Channel\n    .fromPath( params.sa )\n    .ifEmpty { error \"Cannot find any bwa .sa file matching: ${params.sa}\" }\n    .set { sa }",
        "origin": [
            [
                "params.sa",
                "A"
            ]
        ],
        "gives": [
            [
                "sa",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "Channel\n    .fromPath( params.amb )\n    .ifEmpty { error \"Cannot find any bwa .amb file matching: ${params.amb}\" }\n    .set { amb }",
        "origin": [
            [
                "params.amb",
                "A"
            ]
        ],
        "gives": [
            [
                "amb",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "bwa_index = ann.merge(bwt, pac, sa, amb, fasta1)",
        "origin": [
            [
                "ann",
                "P"
            ],
            [
                "bwt",
                "P"
            ],
            [
                "pac",
                "P"
            ],
            [
                "sa",
                "P"
            ],
            [
                "amb",
                "P"
            ],
            [
                "fasta1",
                "P"
            ]
        ],
        "gives": [
            [
                "bwa_index",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "ref1 = trimmed_reads.combine(bwa_index)",
        "origin": [
            [
                "trimmed_reads",
                "P"
            ],
            [
                "bwa_index",
                "P"
            ]
        ],
        "gives": [
            [
                "ref1",
                "P"
            ]
        ]
    }
}