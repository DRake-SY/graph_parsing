{
    "create_bowtie2_index": {
        "name_process": "create_bowtie2_index",
        "string_process": "\nprocess create_bowtie2_index {\n\tpublishDir path: \"$outDir/index\", mode: \"copy\"\n\n\tinput:\n\ttuple val(base), file(ref) from reference_ch\n\n\toutput:\n\ttuple val(base), file(\"*.bt2\") into index_ch\n\n\tscript:\n\t\"\"\"\n\tbowtie2-build ${ref} ${base}\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\tbowtie2-build ${ref} ${base}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reference_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "index_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/index\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "get_restriction_fragments": {
        "name_process": "get_restriction_fragments",
        "string_process": "\nprocess get_restriction_fragments {\n        publishDir path: \"$outDir/index\", mode: \"copy\"\n\n        input:\n        file(fasta) from fasta_for_resfrag_ch\n\n        output:\n        file(\"*.bed\") into res_frag_ch\n\n        script:\n        \"\"\"\n        python $project_dir/digest_genome.py \\\\\n        -r A^AGCTT \\\\\n        -o restriction_fragments.bed ${fasta[1]}\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        python $project_dir/digest_genome.py \\\\\n        -r A^AGCTT \\\\\n        -o restriction_fragments.bed ${fasta[1]}\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_for_resfrag_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "res_frag_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/index\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "bowtie2_end_to_end": {
        "name_process": "bowtie2_end_to_end",
        "string_process": "\nprocess bowtie2_end_to_end {\n\tpublishDir path: \"$outDir/align\", mode: \"copy\"\n\n\tinput:\n\teach(reads) from reads_ch\n\ttuple val(base), file(index) from index_ch\n\n\toutput:\n\ttuple val(prefix), file(\"${name}.bam\") into end_to_end_bam\n\n\tscript:\n\tname = reads[0]\n\tprefix = name.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)$/\n\n        \"\"\"\n        bowtie2 -x ${base} \\\\\n        -U ${reads[1]} \\\\\n        -S ${reads[0]}.bam \\\\\n        --very-sensitive \\\\\n        -L 30 \\\\\n        --score-min L,-0.6,-0.2 \\\\\n        --end-to-end \\\\\n        --reorder\n        \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\tname = reads[0]\n\tprefix = name.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)$/\n\n        \"\"\"\n        bowtie2 -x ${base} \\\\\n        -U ${reads[1]} \\\\\n        -S ${reads[0]}.bam \\\\\n        --very-sensitive \\\\\n        -L 30 \\\\\n        --score-min L,-0.6,-0.2 \\\\\n        --end-to-end \\\\\n        --reorder\n        \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "goname",
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/goname",
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "reads_ch",
            "index_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "end_to_end_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/align\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "trim_reads": {
        "name_process": "trim_reads",
        "string_process": "\nprocess trim_reads {\n\tpublishDir path: \"$outDir/align\", mode: \"copy\"\n\n\tinput:\n\teach(reads) from unmapped_ch\n\n\toutput:\n\ttuple val(file), file(name) into trimmed_ch\n\n\tscript:\n\tfile = reads[0]\n\tname = \"${file}_unmap.fastq.trimmed\"\n\n\t\"\"\"\n\thomerTools trim -3 AAGCTAGCTT \\\\\n\t-mis 0 \\\\\n\t-matchStart 20 \\\\\n\t-min 20 \\\\\n\t${reads[1]}\n\tmv ${reads[1]}.trimmed ${name}\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\tfile = reads[0]\n\tname = \"${file}_unmap.fastq.trimmed\"\n\n\t\"\"\"\n\thomerTools trim -3 AAGCTAGCTT \\\\\n\t-mis 0 \\\\\n\t-matchStart 20 \\\\\n\t-min 20 \\\\\n\t${reads[1]}\n\tmv ${reads[1]}.trimmed ${name}\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "mrcfile",
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/mrcfile",
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "mrcfile",
                "uri": "https://bio.tools/mrcfile",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_1317",
                            "term": "Structural biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0611",
                            "term": "Electron microscopy"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "mrcfile is a Python implementation of the MRC2014 file format, which is used in structural biology to store image and volume data.\n\nIt allows MRC files to be created and opened easily using a very simple API, which exposes the file\u2019s header and data as numpy arrays. The code runs in Python 2 and 3 and is fully unit-tested.\n\nThis library aims to allow users and developers to read and write standard-compliant MRC files in Python as easily as possible, and with no dependencies on any compiled libraries except numpy. You can use it interactively to inspect files, correct headers and so on, or in scripts and larger software packages to provide basic MRC file I/O functions.",
                "homepage": "https://mrcfile.readthedocs.io/en/latest/readme.html"
            },
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "unmapped_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/align\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "bowtie2_on_trimmed_reads": {
        "name_process": "bowtie2_on_trimmed_reads",
        "string_process": "\nprocess bowtie2_on_trimmed_reads {\n\tpublishDir path: \"$outDir/align\", mode: \"copy\"\n\n\tinput:\n\teach(reads) from trimmed_ch\n\ttuple val(name), file(index) from index_trimmed_ch\n\n\toutput:\n\ttuple val(prefix), file(\"${reads[0]}.trimmed.bam\") into trimmed_bam_ch\n\n\tscript:\n\tprefix = reads[0]\n\n\t\"\"\"\n\tbowtie2 -x ${name} \\\\\n\t-U ${reads[1]} \\\\\n\t-S ${reads[0]}.trimmed.bam \\\\\n\t--very-sensitive \\\\\n\t-L 20 \\\\\n\t--score-min L,-0.6,-0.2 \\\\\n\t--end-to-end \\\\\n\t--reorder\n\t\"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\tprefix = reads[0]\n\n\t\"\"\"\n\tbowtie2 -x ${name} \\\\\n\t-U ${reads[1]} \\\\\n\t-S ${reads[0]}.trimmed.bam \\\\\n\t--very-sensitive \\\\\n\t-L 20 \\\\\n\t--score-min L,-0.6,-0.2 \\\\\n\t--end-to-end \\\\\n\t--reorder\n\t\"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "trimmed_ch",
            "index_trimmed_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "trimmed_bam_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/align\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_mapping_steps": {
        "name_process": "merge_mapping_steps",
        "string_process": "\nprocess merge_mapping_steps{\n\tpublishDir path: \"$outDir/align\", mode: \"copy\",\n\t\tsaveAs: {filename ->\n\t\tfilename.indexOf(\".mapstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}\n\n\tinput:\n\ttuple val(prefix), file(bam1), file(bam2) from end_to_end_bam_ch.join(trimmed_bam_ch)\n\n\toutput:\n\ttuple val(sample), file(\"${prefix}_bwt2merged.bam\") into bwt2_merged_bam\n\ttuple val(oname), file(\"${prefix}.mapstat\") into all_mapstat\n\n\tscript:\n\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)$/\n\toname = prefix.toString() - ~/(\\.[0-9]+)$/\n\ttag = \"$sample = $bam1 + $bam2\"\n\n\t\"\"\"\n\tsamtools merge -f ${prefix}_bwt2merged.bam \\\\\n\t${bam1} ${bam2}\n\tsamtools sort -n -T /tmp/ \\\\\n\t-o ${prefix}_bwt2merged.sorted.bam \\\\\n\t${prefix}_bwt2merged.bam\n\tmv ${prefix}_bwt2merged.sorted.bam ${prefix}_bwt2merged.bam\n\techo \"## ${prefix}\" >> ${prefix}.mapstat\n\techo -n \"total_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c ${prefix}_bwt2merged.bam >> ${prefix}.mapstat\n\techo -n \"mapped_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${prefix}_bwt2merged.bam >> ${prefix}.mapstat\n\techo -n \"global_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${bam1} >> ${prefix}.mapstat\n\techo -n \"local_${tag}\\t\"  >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${bam2} >> ${prefix}.mapstat\n\t\"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)$/\n\toname = prefix.toString() - ~/(\\.[0-9]+)$/\n\ttag = \"$sample = $bam1 + $bam2\"\n\n\t\"\"\"\n\tsamtools merge -f ${prefix}_bwt2merged.bam \\\\\n\t${bam1} ${bam2}\n\tsamtools sort -n -T /tmp/ \\\\\n\t-o ${prefix}_bwt2merged.sorted.bam \\\\\n\t${prefix}_bwt2merged.bam\n\tmv ${prefix}_bwt2merged.sorted.bam ${prefix}_bwt2merged.bam\n\techo \"## ${prefix}\" >> ${prefix}.mapstat\n\techo -n \"total_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c ${prefix}_bwt2merged.bam >> ${prefix}.mapstat\n\techo -n \"mapped_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${prefix}_bwt2merged.bam >> ${prefix}.mapstat\n\techo -n \"global_${tag}\\t\" >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${bam1} >> ${prefix}.mapstat\n\techo -n \"local_${tag}\\t\"  >> ${prefix}.mapstat\n\tsamtools view -c -F 4 ${bam2} >> ${prefix}.mapstat\n\t\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "SAMPLE",
            "goname",
            "TAG",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/sample",
            "https://bio.tools/goname",
            "https://bio.tools/tag",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            },
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            },
            {
                "name": "TAG",
                "uri": "https://bio.tools/tag",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for metatranscriptome assembly using de Bruijn graph of matched metagenome as the reference.",
                "homepage": "http://omics.informatics.indiana.edu/TAG/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "end_to_end_bam_ch",
            "trimmed_bam_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bwt2_merged_bam",
            "all_mapstat"
        ],
        "nb_outputs": 2,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/align\", mode: \"copy\" , saveAs: {filename -> filename.indexOf(\".mapstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "combine_mapped_files": {
        "name_process": "combine_mapped_files",
        "string_process": "\nprocess combine_mapped_files{\n\tpublishDir path: \"$outDir/align\", mode: \"copy\",\n\t\tsaveAs: {filename ->\n\t\tfilename.indexOf(\".pairstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}\n\n\tinput:\n\ttuple val(sample), file(aligned_bam) from end_to_end_bam.groupTuple()\n\n\toutput:\n\ttuple val(sample), file(\"${sample}_bwt2pairs.bam\") into paired_bam\n\ttuple val(oname), file(\"*.pairstat\") into all_pairstat\n\n\tscript:\n\toname = sample.toString() - ~/(\\.[0-9]+)$/\n\n\t\"\"\"\n\tpython $project_dir/mergeSAM.py \\\\\n\t-f ${aligned_bam[0]} \\\\\n\t-r ${aligned_bam[1]} \\\\\n\t-o ${sample}_bwt2pairs.bam \\\\\n\t--single --multi -t\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\toname = sample.toString() - ~/(\\.[0-9]+)$/\n\n\t\"\"\"\n\tpython $project_dir/mergeSAM.py \\\\\n\t-f ${aligned_bam[0]} \\\\\n\t-r ${aligned_bam[1]} \\\\\n\t-o ${sample}_bwt2pairs.bam \\\\\n\t--single --multi -t\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "end_to_end_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "paired_bam",
            "all_pairstat"
        ],
        "nb_outputs": 2,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/align\", mode: \"copy\" , saveAs: {filename -> filename.indexOf(\".pairstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "get_valid_interaction": {
        "name_process": "get_valid_interaction",
        "string_process": " process get_valid_interaction{\n\tpublishDir path: \"$outDir/valid\", mode: \"copy\",\n\t\tsaveAs: {filename ->\n\t\tfilename.indexOf(\".RSstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}\n\n\tinput:\n\ttuple val(sample), file(pe_bam) from paired_bam\n\tfile(frag_file) from res_frag_ch.collect()\n\n\toutput:\n\ttuple val(sample), file(\"*.validPairs\") into valid_pairs\n\ttuple val(sample), file(\"*.validPairs\") into valid_pairs_4cool\n\ttuple val(sample), file(\"*.RSstat\") into all_rsstat\n\n\tscript:\n\t\"\"\"\n\tpython $project_dir/mapped_2hic_fragments.py \\\\\n\t-f ${frag_file} \\\\\n\t-r ${pe_bam} \\\\\n\tsort -T /tmp/ -k2,2V -k3,3n -k5,5V -k6,6n\n\t\"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\t\"\"\"\n\tpython $project_dir/mapped_2hic_fragments.py \\\\\n\t-f ${frag_file} \\\\\n\t-r ${pe_bam} \\\\\n\tsort -T /tmp/ -k2,2V -k3,3n -k5,5V -k6,6n\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "paired_bam",
            "res_frag_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "valid_pairs",
            "valid_pairs_4cool",
            "all_rsstat"
        ],
        "nb_outputs": 3,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/valid\", mode: \"copy\" , saveAs: {filename -> filename.indexOf(\".RSstat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "remove_duplicates": {
        "name_process": "remove_duplicates",
        "string_process": "\nprocess remove_duplicates {\n\tpublishDir path: \"$outDir/valid\", mode: \"copy\",\n\t\tsaveAs: {filename ->\n\t\tfilename.indexOf(\".mergestat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}\n\n\tinput:\n\ttuple val(sample), file(vpairs) from valid_pairs.groupTuple()\n\n\toutput:\n\ttuple val(sample), file(\"*.allValidPairs\") into all_valid_pairs\n\ttuple val(sample), file(\"*.allValidPairs\") into all_valid_pairs_4cool\n\tfile(\"*\") into all_mergestat\n\n\tscript:\n\t\"\"\"\n\t## Sort valid pairs and remove read pairs with same starts (i.e duplicated read pairs)\n\tsort -T /tmp/ -S 50% -k2,2V -k3,3n -k5,5V -k6,6n -m ${vpairs} | \\\n\tawk -F\"\\\\t\" 'BEGIN{c1=0;c2=0;s1=0;s2=0}(c1!=\\$2 || c2!=\\$5 || s1!=\\$3 || s2!=\\$6){print;c1=\\$2;c2=\\$5;s1=\\$3;s2=\\$6}' >> ${sample}.allValidPairs\n\techo -n \"valid_interaction\\t\" >> ${sample}_allValidPairs.mergestat\n\tcat ${vpairs} | wc -l >> ${sample}_allValidPairs.mergestat\n\techo -n \"valid_interaction_rmdup\\t\" >> ${sample}_allValidPairs.mergestat\n\tcat ${sample}.allValidPairs | wc -l >> ${sample}_allValidPairs.mergestat\n\t## Count short range (<20000) vs long range contacts\n\tawk 'BEGIN{cis=0;trans=0;sr=0;lr=0} \\$2 == \\$5{cis=cis+1; d=\\$6>\\$3?\\$6-\\$3:\\$3-\\$6; if (d<=20000){sr=sr+1}else{lr=lr+1}} \\$2!=\\$5{trans=trans+1}END{print \"trans_interaction\\\\t\"trans\"\\\\ncis_interaction\\\\t\"cis\"\\\\ncis_shortRange\\\\t\"sr\"\\\\ncis_longRange\\\\t\"lr}' ${sample}.allValidPairs >> ${sample}_allValidPairs.mergestat\n\t\"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\t\"\"\"\n\t## Sort valid pairs and remove read pairs with same starts (i.e duplicated read pairs)\n\tsort -T /tmp/ -S 50% -k2,2V -k3,3n -k5,5V -k6,6n -m ${vpairs} | \\\n\tawk -F\"\\\\t\" 'BEGIN{c1=0;c2=0;s1=0;s2=0}(c1!=\\$2 || c2!=\\$5 || s1!=\\$3 || s2!=\\$6){print;c1=\\$2;c2=\\$5;s1=\\$3;s2=\\$6}' >> ${sample}.allValidPairs\n\techo -n \"valid_interaction\\t\" >> ${sample}_allValidPairs.mergestat\n\tcat ${vpairs} | wc -l >> ${sample}_allValidPairs.mergestat\n\techo -n \"valid_interaction_rmdup\\t\" >> ${sample}_allValidPairs.mergestat\n\tcat ${sample}.allValidPairs | wc -l >> ${sample}_allValidPairs.mergestat\n\t## Count short range (<20000) vs long range contacts\n\tawk 'BEGIN{cis=0;trans=0;sr=0;lr=0} \\$2 == \\$5{cis=cis+1; d=\\$6>\\$3?\\$6-\\$3:\\$3-\\$6; if (d<=20000){sr=sr+1}else{lr=lr+1}} \\$2!=\\$5{trans=trans+1}END{print \"trans_interaction\\\\t\"trans\"\\\\ncis_interaction\\\\t\"cis\"\\\\ncis_shortRange\\\\t\"sr\"\\\\ncis_longRange\\\\t\"lr}' ${sample}.allValidPairs >> ${sample}_allValidPairs.mergestat\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "valid_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "all_valid_pairs",
            "all_valid_pairs_4cool",
            "all_mergestat"
        ],
        "nb_outputs": 3,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/valid\", mode: \"copy\" , saveAs: {filename -> filename.indexOf(\".mergestat\") > 0 ? \"$outDir/stats/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "make_chrom_size": {
        "name_process": "make_chrom_size",
        "string_process": "\nprocess make_chrom_size {\n        publishDir path: \"$outDir/chrom_size\", mode: \"copy\"\n\n        input:\n        tuple val(base), file(fasta) from fasta_for_chromsize\n\n        output:\n        file(\"*.size\") into chromosome_size, chromosome_size_cool\n\n        script:\n        \"\"\"\n\tsamtools faidx ${fasta}\n\tcut -f1,2 ${fasta}.fai > chrom.size\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n\tsamtools faidx ${fasta}\n\tcut -f1,2 ${fasta}.fai > chrom.size\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta_for_chromsize"
        ],
        "nb_inputs": 1,
        "outputs": [
            "chromosome_size",
            "chromosome_size_cool"
        ],
        "nb_outputs": 2,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/chrom_size\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "build_contact_maps": {
        "name_process": "build_contact_maps",
        "string_process": "\nprocess build_contact_maps {\n\tpublishDir path: \"$outDir/matrix/raw\", mode: \"copy\"\n\n\tinput:\n\ttuple val(sample), file(vpairs), val(mres) from all_valid_pairs.combine(map_res)\n\tfile chrsize from chromosome_size.collect()\n\n\toutput:\n\tfile(\"*.matrix\") into raw_maps\n\tfile \"*.bed\"\n\n\tscript:\n\t\"\"\"\n\t${project_dir}/build_matrix --matrix-format upper  \\\\\n\t--binsize ${mres} \\\\\n\t--chrsizes ${chrsize} \\\\\n\t--ifile ${vpairs} \\\\\n\t--oprefix ${sample}_${mres}\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\t\"\"\"\n\t${project_dir}/build_matrix --matrix-format upper  \\\\\n\t--binsize ${mres} \\\\\n\t--chrsizes ${chrsize} \\\\\n\t--ifile ${vpairs} \\\\\n\t--oprefix ${sample}_${mres}\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "all_valid_pairs",
            "map_res",
            "chromosome_size"
        ],
        "nb_inputs": 3,
        "outputs": [
            "raw_maps"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir path: \"$outDir/matrix/raw\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "run_ice": {
        "name_process": "run_ice",
        "string_process": "\nprocess run_ice{\n\tpublishDir \"$outDir/matrix/iced\", mode: \"copy\"\n\n\tinput:\n\tfile(rmaps) from raw_maps\n\n\toutput:\n\tfile(\"*iced.matrix\") into iced_maps\n\n\tscript:\n\tprefix = rmaps.toString() - ~/(\\.matrix)?$/\n\t\"\"\"\n\tice --filter_low_counts_perc 0.02 \\\n\t--results_filename ${prefix}_iced.matrix \\\n\t--filter_high_counts_perc 0 \\\n\t--max_iter 100 --eps 0.1 --remove-all-zeros-loci --output-bias 1 --verbose 1 ${rmaps}\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\tprefix = rmaps.toString() - ~/(\\.matrix)?$/\n\t\"\"\"\n\tice --filter_low_counts_perc 0.02 \\\n\t--results_filename ${prefix}_iced.matrix \\\n\t--filter_high_counts_perc 0 \\\n\t--max_iter 100 --eps 0.1 --remove-all-zeros-loci --output-bias 1 --verbose 1 ${rmaps}\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "ICE"
        ],
        "tools_url": [
            "https://bio.tools/ice"
        ],
        "tools_dico": [
            {
                "name": "ICE",
                "uri": "https://bio.tools/ice",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3339",
                            "term": "Microbial collection"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Cloud-based freely open-source DNA part, plasmid, microbial strain, and Arabidopsis seed repository with physical sample tracking capabilities.",
                "homepage": "https://github.com/JBEI/ice"
            }
        ],
        "inputs": [
            "raw_maps"
        ],
        "nb_inputs": 1,
        "outputs": [
            "iced_maps"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir \"$outDir/matrix/iced\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_stats": {
        "name_process": "merge_stats",
        "string_process": "\nprocess merge_stats {\n\tpublishDir \"$outDir/mstats\", mode: \"copy\"\n\n\tinput:\n\ttuple val(prefix), file(fstat) from all_rsstat.groupTuple().concat(all_pairstat.groupTuple())\n\n\toutput:\n\tfile(\"*\") into all_mstats\n\n\tscript:\n\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)/\n\tif ( (fstat =~ /.pairstat/) ){ ext = \"mpairstat\" }\n\tif ( (fstat =~ /.RSstat/) ){ ext = \"mRSstat\" }\n\n\t\"\"\"\n        python $scripts/merge_statfiles.py -f ${fstat} > ${prefix}.${ext}\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)/\n\tif ( (fstat =~ /.pairstat/) ){ ext = \"mpairstat\" }\n\tif ( (fstat =~ /.RSstat/) ){ ext = \"mRSstat\" }\n\n\t\"\"\"\n        python $scripts/merge_statfiles.py -f ${fstat} > ${prefix}.${ext}\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMPLE"
        ],
        "tools_url": [
            "https://bio.tools/sample"
        ],
        "tools_dico": [
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            }
        ],
        "inputs": [
            "all_rsstat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "all_mstats"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir \"$outDir/mstats\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n\tinput:\n\ttuple val(sample), file(reads) from reads_for_fastqc\n\n\toutput:\n\tfile \"*_fastqc.{zip,html}\" into fastqc_results\n\n\tscript:\n\t\"\"\"\n\tfastqc -q ${reads}\n\t\"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\t\"\"\"\n\tfastqc -q ${reads}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "reads_for_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\tpublishDir \"$outDir\", mode: \"copy\"\n\n\tinput:\n\tfile ('*') from fastqc_results.collect().ifEmpty([])\n\n\toutput:\n\tfile \"multiqc_report.html\" into multiqc_report\n\tfile \"multiqc_data\"\n\n\tscript:\n\t\"\"\"\n\tmultiqc .\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tmultiqc .\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_results"
        ],
        "nb_inputs": 1,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir \"$outDir\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_sample": {
        "name_process": "merge_sample",
        "string_process": "\nprocess merge_sample {\n\tpublishDir \"$outDir/mstats\", mode: \"copy\"\n\n\tinput:\n\ttuple val(prefix), file(fstat) from all_rsstat.groupTuple().concat(all_pairstat.groupTuple())\n\n\toutput:\n\tfile(\"*\") into all_mstats\n\n\tscript:\n\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)/\n\tif ( (fstat =~ /.mapstat/) ){ ext = \"mmapstat\" }\n\tif ( (fstat =~ /.pairstat/) ){ ext = \"mpairstat\" }\n\tif ( (fstat =~ /.RSstat/) ){ ext = \"mRSstat\" }\n\n\t\"\"\"\n        mkdir -p $outDir/mstats/${sample}\n        python $project_dir/merge_statfiles.py -f ${fstat} > ${prefix}.${ext}\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\tsample = prefix.toString() - ~/(_R1|_R2|_val_1|_val_2|_1|_2)/\n\tif ( (fstat =~ /.mapstat/) ){ ext = \"mmapstat\" }\n\tif ( (fstat =~ /.pairstat/) ){ ext = \"mpairstat\" }\n\tif ( (fstat =~ /.RSstat/) ){ ext = \"mRSstat\" }\n\n\t\"\"\"\n        mkdir -p $outDir/mstats/${sample}\n        python $project_dir/merge_statfiles.py -f ${fstat} > ${prefix}.${ext}\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "SAMPLE"
        ],
        "tools_url": [
            "https://bio.tools/sample"
        ],
        "tools_dico": [
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            }
        ],
        "inputs": [
            "all_rsstat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "all_mstats"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__groupnextflow",
        "directive": [
            "publishDir \"$outDir/mstats\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}