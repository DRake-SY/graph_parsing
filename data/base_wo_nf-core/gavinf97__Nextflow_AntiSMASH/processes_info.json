{
    "FastQC": {
        "name_process": "FastQC",
        "string_process": "\nprocess FastQC {\n    container \"allin.sif\"\n\n    publishDir \"${params.accession}_results/qc/fastqc/untrimmed/\", mode:'copy'\n\n    input:\n        tuple val(key), file(reads) from reads1_ch\n\n    output:\n        file(\"*.zip\") into fastqc_ch\n\n    script:\n        \"\"\"\n        fastqc $reads\n        \"\"\" \n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        fastqc $reads\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "reads1_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container \"allin.sif\"",
            "publishDir \"${params.accession}_results/qc/fastqc/untrimmed/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC": {
        "name_process": "MultiQC",
        "string_process": "\nprocess MultiQC {\n    container \"allin.sif\"\n\n    publishDir \"${params.accession}_results/qc/multiqc/untrimmed/\", mode:'copy'\n\n    input:\n        file(zips) from fastqc_ch.collect()\n    \n    output: \n        file(\"*multiqc_report.html\") into multiqc_report_ch\n    \n    script:\n        \"\"\"\n        multiqc $zips\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        multiqc $zips\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "multiqc_report_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container \"allin.sif\"",
            "publishDir \"${params.accession}_results/qc/multiqc/untrimmed/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "BB_Trim": {
        "name_process": "BB_Trim",
        "string_process": "\nprocess BB_Trim {\n    container 'allin.sif'\n\n    publishDir \"${params.accession}_results/trimmed_reads\", mode:'copy', pattern: \"*.fastq.gz\"\n\n    input:\n        tuple val(key), file(reads1) from reads2_ch\n\n    output:\n        tuple val(key), file(\"*.fastq.gz\") into trimmed_reads_ch\n        tuple val(key), file(\"*.fastq.gz\") into repeat_trimmed_reads_ch\n\n    script:\n        \"\"\"\n        bbduk.sh \\\n        in1=${reads1[0]} \\\n        in2=${reads1[1]} \\\n        out1=${key}_1_trim.fastq.gz \\\n        out2=${key}_2_trim.fastq.gz \\\n        minlen=30 \\\n        qtrim=rl \\\n        trimq=20 \\\n        \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "        \"\"\"\n        bbduk.sh \\\n        in1=${reads1[0]} \\\n        in2=${reads1[1]} \\\n        out1=${key}_1_trim.fastq.gz \\\n        out2=${key}_2_trim.fastq.gz \\\n        minlen=30 \\\n        qtrim=rl \\\n        trimq=20 \\\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads2_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads_ch",
            "repeat_trimmed_reads_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container 'allin.sif'",
            "publishDir \"${params.accession}_results/trimmed_reads\", mode:'copy', pattern: \"*.fastq.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "FastQC_trim": {
        "name_process": "FastQC_trim",
        "string_process": "\nprocess FastQC_trim {\n        container 'allin.sif'\n\n        publishDir \"${params.accession}_results/qc/fastqc/trimmed/\", mode:'copy'\n\n        input:\n                tuple val(key), file(reads2) from trimmed_reads_ch\n\n        output:\n                file(\"*.zip\") into trimmed_fastqc_ch\n\n        script:\n        \"\"\"\n        fastqc $reads2\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        fastqc $reads2\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "trimmed_reads_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_fastqc_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container 'allin.sif'",
            "publishDir \"${params.accession}_results/qc/fastqc/trimmed/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC_trim": {
        "name_process": "MultiQC_trim",
        "string_process": "\nprocess MultiQC_trim {\n    container 'allin.sif'\n\n    publishDir \"${params.accession}_results/qc/multiqc/trimmed/\", mode:'copy'\n\n    input:\n        file(zip1) from trimmed_fastqc_ch.collect()\n\n    output:\n        file(\"*multiqc_report.html\") into trimmed_multiqc_ch\n\n        script:\n        \"\"\"\n        multiqc $zip1\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        multiqc $zip1\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "trimmed_fastqc_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_multiqc_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container 'allin.sif'",
            "publishDir \"${params.accession}_results/qc/multiqc/trimmed/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "FormContigs": {
        "name_process": "FormContigs",
        "string_process": "\nprocess FormContigs {\n    container 'allin.sif'\n\n    publishDir \"${params.accession}_results/contigs/\", mode:'copy'\n\n    input:\n        tuple val(readname), file(reads2) from repeat_trimmed_reads_ch\n        \n    output:\n        file(\"*/*.fa\") into (contigs1_ch, contigs2_ch)\n\n    script:\n    \"\"\"\n    megahit -1 ${reads2[0]} -2 ${reads2[1]} --min-contig-len 1000 --out-prefix $readname\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    megahit -1 ${reads2[0]} -2 ${reads2[1]} --min-contig-len 1000 --out-prefix $readname\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MEGAHIT"
        ],
        "tools_url": [
            "https://bio.tools/megahit"
        ],
        "tools_dico": [
            {
                "name": "MEGAHIT",
                "uri": "https://bio.tools/megahit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Single node assembler for large and complex metagenomics NGS reads, such as soil. It makes use of succinct de Bruijn graph to achieve low memory usage, whereas its goal is not to make memory usage as low as possible.",
                "homepage": "https://github.com/voutcn/megahit"
            }
        ],
        "inputs": [
            "repeat_trimmed_reads_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container 'allin.sif'",
            "publishDir \"${params.accession}_results/contigs/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MetaQuast": {
        "name_process": "MetaQuast",
        "string_process": "\nprocess MetaQuast {\n    container 'allin.sif'\n\n    publishDir \"${params.accession}_results/qc/metaquast/\", mode:'copy'\n\n    input:\n        file(contig2) from contigs2_ch\n\n    output:\n         file(\"quast_results\") into metaquast_ch\n\n    script:\n    \"\"\"\n    metaquast.py $contig2\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    metaquast.py $contig2\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "contigs2_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "metaquast_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "container 'allin.sif'",
            "publishDir \"${params.accession}_results/qc/metaquast/\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "Antismash": {
        "name_process": "Antismash",
        "string_process": "\nprocess Antismash {\n    publishDir \"${params.accession}_results/antismash\", mode:'copy'\n\n    input:\n        file(contig) from contigs1_ch\n\n    output:\n         file(\"${contig.baseName}/${contig.baseName}.zip\") into antismash_ch\n\n    script:\n    \"\"\"\n    antismash $contig --genefinding-tool prodigal --output-dir $contig.baseName --logfile nextflow.log\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    antismash $contig --genefinding-tool prodigal --output-dir $contig.baseName --logfile nextflow.log\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "antiSMASH"
        ],
        "tools_url": [
            "https://bio.tools/antismash"
        ],
        "tools_dico": [
            {
                "name": "antiSMASH",
                "uri": "https://bio.tools/antismash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differentially expressed gene identification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Rapid genome-wide identification, annotation and analysis of secondary metabolite biosynthesis gene clusters in bacterial and fungal genomes. It integrates and cross-links with a large number of in silico secondary metabolite analysis tools that have been published earlier.",
                "homepage": "http://antismash.secondarymetabolites.org"
            }
        ],
        "inputs": [
            "contigs1_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "antismash_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "gavinf97__Nextflow_AntiSMASH",
        "directive": [
            "publishDir \"${params.accession}_results/antismash\", mode:'copy'"
        ],
        "when": "",
        "stub": ""
    }
}