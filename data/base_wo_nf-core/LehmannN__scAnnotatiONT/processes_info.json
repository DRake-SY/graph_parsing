{
    "findCodingRegions": {
        "name_process": "findCodingRegions",
        "string_process": "\nprocess findCodingRegions {\n\n    tag \"findCodingRegions\"\n    publishDir \"${params.outDir}/reannotation\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"findCodingRegions\"",
            "publishDir \"${params.outDir}/reannotation\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "createRDS": {
        "name_process": "createRDS",
        "string_process": "\nprocess createRDS {\n\n    tag \"createRDS\"\n    publishDir \"${params.outDir}/single-cell-analyses\", mode: 'copy'\n\n    input:\n    file script\n    file counts\n\n    output:\n    file 'matrix.rds'\n\n    script:\n    \"\"\"\n    Rscript --vanilla $script --input $counts --output matrix.rds\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    Rscript --vanilla $script --input $counts --output matrix.rds\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "script",
            "counts"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"createRDS\"",
            "publishDir \"${params.outDir}/single-cell-analyses\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "buildUCSCTrackhub": {
        "name_process": "buildUCSCTrackhub",
        "string_process": "\nprocess buildUCSCTrackhub {\n\n    tag \"UCSC trackhub\"\n    publishDir \"${params.outDir}/trackhub\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"UCSC trackhub\"",
            "publishDir \"${params.outDir}/trackhub\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sortBAMFiles": {
        "name_process": "sortBAMFiles",
        "string_process": "\nprocess sortBAMFiles {\n\n    tag \"Sort BAM Files\"\n    publishDir \"${params.outDir}/sortBAM\", mode: 'copy'\n\n    input:\n    file bam\n\n    output:\n    file '*.bam'\n    file '*.bam.bai'\n\n    script:\n    \"\"\"\n\tsamtools sort -@ ${params.threads} $bam -o featureCountsBAMsorted.bam\n\tsamtools index -@ ${params.threads} featureCountsBAMsorted.bam\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n\tsamtools sort -@ ${params.threads} $bam -o featureCountsBAMsorted.bam\n\tsamtools index -@ ${params.threads} featureCountsBAMsorted.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"Sort BAM Files\"",
            "publishDir \"${params.outDir}/sortBAM\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "buildCountMatrix": {
        "name_process": "buildCountMatrix",
        "string_process": "\nprocess buildCountMatrix{\n\n    tag \"Build single-cell count matrix with UMI-tools count\"\n    publishDir \"${params.outDir}/quantif\", mode: 'copy'\n\n    input:\n    file bam\n    file bai\n\n    output:\n    file 'counts.tsv.gz'\n    file 'umicount.log'\n\n    script:\n    \"\"\"\n\tumi_tools count --per-gene \\\n\t\t--gene-tag=XT \\\n\t\t--assigned-status-tag=XS \\\n\t\t--per-cell \\\n\t\t--method=directional \\\n\t\t-L umicount.log \\\n\t\t-I $bam \\\n\t\t-S counts.tsv.gz\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n\tumi_tools count --per-gene \\\n\t\t--gene-tag=XT \\\n\t\t--assigned-status-tag=XS \\\n\t\t--per-cell \\\n\t\t--method=directional \\\n\t\t-L umicount.log \\\n\t\t-I $bam \\\n\t\t-S counts.tsv.gz\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"Build single-cell count matrix with UMI-tools count\"",
            "publishDir \"${params.outDir}/quantif\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "compareGTF": {
        "name_process": "compareGTF",
        "string_process": "\nprocess compareGTF {\n\n    tag \"GffCompare\"\n    publishDir \"${params.outDir}/gffcomp\",\n        mode: 'copy',\n        pattern: 'gffcmp*'\n\n    input:\n    file gtfREF\n    file gtfNOVEL\n\n    output:\n    file \"gffcmp*\"\n\n    script:\n    \"\"\"\n    gffcompare -r $gtfREF \\\n        -o gffcmp \\\n        $gtfNOVEL\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    gffcompare -r $gtfREF \\\n        -o gffcmp \\\n        $gtfNOVEL\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "gffcompare"
        ],
        "tools_url": [
            "https://bio.tools/gffcompare"
        ],
        "tools_dico": [
            {
                "name": "gffcompare",
                "uri": "https://bio.tools/gffcompare",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0361",
                                    "term": "Sequence annotation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program for comparing, annotating, merging and tracking transcripts in GFF files.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/gff.shtml"
            }
        ],
        "inputs": [
            "gtfREF",
            "gtfNOVEL"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"GffCompare\"",
            "publishDir \"${params.outDir}/gffcomp\" , mode: 'copy' , pattern: 'gffcmp*'"
        ],
        "when": "",
        "stub": ""
    },
    "mergeGTF": {
        "name_process": "mergeGTF",
        "string_process": "\nprocess mergeGTF {\n\n    tag \"Merge GTF\"\n    publishDir \"${params.outDir}\", mode: 'copy'\n\n    input:\n    file gtfREF\n    file gtfNOVEL\n    file genomeREF\n\n    output:\n    file 'merged*'\n\n    script:\n    if( params.mergeTool == 'agat' ) {\n    \t\"\"\"\n    \tagat_sp_merge_annotations.pl --gff $gtfREF \\\n        \t--gff $gtfNOVEL \\\n        \t--output merged\n    \t\"\"\"\n    } else if ( params.mergeTool == 'cuffmerge' ) {\n\t\t\"\"\"\n        echo $gtfNOVEL > listGTF.txt\n\n        cuffmerge -p $params.threads \\\n            --min-isoform-fraction $params.cuffmerge_min_isoform_fraction \\\n            --ref-gtf $gtfREF \\\n            --ref-sequence $genomeREF \\\n            -o . \\\n            listGTF.txt\n        \"\"\"\n    } else if ( params.mergeTool == 'stringtie-merge' ) {\n\t\t\"\"\"\n\t\techo TBA\n\t\t\"\"\"\n    } else\n\t\terror \"Invalid merging tool\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    if( params.mergeTool == 'agat' ) {\n    \t\"\"\"\n    \tagat_sp_merge_annotations.pl --gff $gtfREF \\\n        \t--gff $gtfNOVEL \\\n        \t--output merged\n    \t\"\"\"\n    } else if ( params.mergeTool == 'cuffmerge' ) {\n\t\t\"\"\"\n        echo $gtfNOVEL > listGTF.txt\n\n        cuffmerge -p $params.threads \\\n            --min-isoform-fraction $params.cuffmerge_min_isoform_fraction \\\n            --ref-gtf $gtfREF \\\n            --ref-sequence $genomeREF \\\n            -o . \\\n            listGTF.txt\n        \"\"\"\n    } else if ( params.mergeTool == 'stringtie-merge' ) {\n\t\t\"\"\"\n\t\techo TBA\n\t\t\"\"\"\n    } else\n\t\terror \"Invalid merging tool\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtfREF",
            "gtfNOVEL",
            "genomeREF"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"Merge GTF\"",
            "publishDir \"${params.outDir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "filterGTF": {
        "name_process": "filterGTF",
        "string_process": "\nprocess filterGTF {\n\n    tag \"filterGTF\"\n    publishDir \"${params.outDir}/gtf-processing\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"filterGTF\"",
            "publishDir \"${params.outDir}/gtf-processing\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "reannotate": {
        "name_process": "reannotate",
        "string_process": "\nprocess reannotate {\n\n    tag \"reannotate\"\n    publishDir \"${params.outDir}/reannotation\", mode: 'copy'\n\n    input:\n    file gtfREF\n    file bamONT\n\n    output:\n    file \"${params.reannotationTool}.gtf\"\n    path \"${params.reannotationTool}.std*\"\n\n    script:\n\tif( params.reannotationTool == 'stringtie' ) {\n    \t\"\"\"\n    \tstringtie -L -m 50 -g 50 -c 1 -s 2 -j 1 \\\n        \t-p $params.threads \\\n        \t-G $gtfREF \\\n        \t-o \"${params.reannotationTool}.gtf\" \\\n        \t$bamONT \\\n             1> \"${params.reannotationTool}.stdout\" \\\n             2> \"${params.reannotationTool}.stderr\"\n\n    \t\"\"\"\n    } else if ( params.reannotationTool == 'scallop' ) {\n\t\t\"\"\"\n\t\tscallop -i $bamONT \\\n        \t-o \"${params.reannotationTool}.gtf\" \\\n        \t--library_type unstranded \\\n            1> \"${params.reannotationTool}.stdout\" \\\n            2> \"${params.reannotationTool}.stderr\"\n    \t\"\"\"\n    } else\n        error \"Invalid reannotation tool\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tif( params.reannotationTool == 'stringtie' ) {\n    \t\"\"\"\n    \tstringtie -L -m 50 -g 50 -c 1 -s 2 -j 1 \\\n        \t-p $params.threads \\\n        \t-G $gtfREF \\\n        \t-o \"${params.reannotationTool}.gtf\" \\\n        \t$bamONT \\\n             1> \"${params.reannotationTool}.stdout\" \\\n             2> \"${params.reannotationTool}.stderr\"\n\n    \t\"\"\"\n    } else if ( params.reannotationTool == 'scallop' ) {\n\t\t\"\"\"\n\t\tscallop -i $bamONT \\\n        \t-o \"${params.reannotationTool}.gtf\" \\\n        \t--library_type unstranded \\\n            1> \"${params.reannotationTool}.stdout\" \\\n            2> \"${params.reannotationTool}.stderr\"\n    \t\"\"\"\n    } else\n        error \"Invalid reannotation tool\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "StringTie",
            "Scallop-LR"
        ],
        "tools_url": [
            "https://bio.tools/stringtie",
            "https://bio.tools/Scallop-LR"
        ],
        "tools_dico": [
            {
                "name": "StringTie",
                "uri": "https://bio.tools/stringtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/"
            },
            {
                "name": "Scallop-LR",
                "uri": "https://bio.tools/Scallop-LR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Read binning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning shotgun reads"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Differential splicing analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Splice transcript prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Accurate reference-based transcript assembler.",
                "homepage": "https://github.com/Kingsford-Group/scallop"
            }
        ],
        "inputs": [
            "gtfREF",
            "bamONT"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"reannotate\"",
            "publishDir \"${params.outDir}/reannotation\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fixOrientationONT": {
        "name_process": "fixOrientationONT",
        "string_process": "\nprocess fixOrientationONT {\n\n    tag \"fixOrientationONT\"\n    publishDir \"${params.outDir}/reannotation\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"fixOrientationONT\"",
            "publishDir \"${params.outDir}/reannotation\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "getStatsGTF": {
        "name_process": "getStatsGTF",
        "string_process": "\nprocess getStatsGTF {\n\n    tag \"getStats on GTF file\"\n    publishDir \"${params.outDir}/stats\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"getStats on GTF file\"",
            "publishDir \"${params.outDir}/stats\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "featureCounts": {
        "name_process": "featureCounts",
        "string_process": "\nprocess featureCounts {\n\n    tag \"FeatureCounts\"\n    publishDir \"${params.outDir}/featureCounts\", mode: 'copy'\n\n    input:\n    file gtf\n    file bamScRNA\n\n    output:\n    path \"*featureCounts.*\"\n\n    script:\n    \"\"\"\n\tfeatureCounts -T ${params.threads} \\\n        -F GTF \\\n        -R BAM \\\n        -t exon \\\n        -g gene_id \\\n        -s 1 \\\n        -a $gtf \\\n        -o featureCounts.gtf \\\n        $bamScRNA \\\n        1> featureCounts.stdout \\\n        2> featureCounts.stderr\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n\tfeatureCounts -T ${params.threads} \\\n        -F GTF \\\n        -R BAM \\\n        -t exon \\\n        -g gene_id \\\n        -s 1 \\\n        -a $gtf \\\n        -o featureCounts.gtf \\\n        $bamScRNA \\\n        1> featureCounts.stdout \\\n        2> featureCounts.stderr\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "gtf",
            "bamScRNA"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"FeatureCounts\"",
            "publishDir \"${params.outDir}/featureCounts\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "runMultiQC": {
        "name_process": "runMultiQC",
        "string_process": "\nprocess runMultiQC {\n\n    tag \"MultiQC\"\n    publishDir \"${params.outDir}/stats\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"MultiQC\"",
            "publishDir \"${params.outDir}/stats\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fixGTF": {
        "name_process": "fixGTF",
        "string_process": "\nprocess fixGTF {\n\n    tag \"fixGTF\"\n    publishDir \"${params.outDir}/gtf-processing\", mode: 'copy'\n\n    input:\n\n    output:\n\n    script:\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"fixGTF\"",
            "publishDir \"${params.outDir}/gtf-processing\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "preprocessRDS": {
        "name_process": "preprocessRDS",
        "string_process": "\nprocess preprocessRDS {\n\n    tag \"preprocessRDS\"\n    publishDir \"${params.outDir}/single-cell-analyses\", mode: 'copy'\n\n    input:\n    file rds\n\n    output:\n    path rmd\n\n    script:\n    \"\"\"\n    Rscript --vanilla preprocessRDS.R --input rds\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    Rscript --vanilla preprocessRDS.R --input rds\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rds"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rmd"
        ],
        "nb_outputs": 1,
        "name_workflow": "LehmannN__scAnnotatiONT",
        "directive": [
            "tag \"preprocessRDS\"",
            "publishDir \"${params.outDir}/single-cell-analyses\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}