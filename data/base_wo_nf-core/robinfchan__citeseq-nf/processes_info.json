{
    "unzip_10x_barcodes": {
        "name_process": "unzip_10x_barcodes",
        "string_process": "\nprocess unzip_10x_barcodes {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"${params.chemistry}\"\n    label 'mini_memory'\n    publishDir \"${params.outdir}/reference_data/barcodes\", mode: 'copy'\n\n    input:\n    file gzipped from barcode_whitelist_gzipped\n\n    output:\n    file \"${gzipped.simpleName}\" into barcode_whitelist_csc_unzip\n\n    when: params.type == '10x' && !params.barcode_whitelist\n\n    script:\n    \"\"\"\n    gunzip -c $gzipped > ${gzipped.simpleName}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    gunzip -c $gzipped > ${gzipped.simpleName}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "barcode_whitelist_gzipped"
        ],
        "nb_inputs": 1,
        "outputs": [
            "barcode_whitelist_csc_unzip"
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"${params.chemistry}\"",
            "label 'mini_memory'",
            "publishDir \"${params.outdir}/reference_data/barcodes\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fasta_gtf_rec_matching": {
        "name_process": "fasta_gtf_rec_matching",
        "string_process": "\nprocess fasta_gtf_rec_matching {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"${gtf}\"\n    label 'midi_memory'\n    publishDir \"${params.outdir}/reference_data/trimmed_gtf\", mode: 'copy'\n\n    input:\n    file genome_fasta from genome_fasta_matching\n    file gtf from gtf_matching\n\n    output:\n    file \"trimmed_genes.gtf\" into ( gtf_extract_transcriptome_trimmed, gtf_alevin_trimmed )\n\n    when:\n    !params.transcriptome_fasta && !params.skip_rna \n    \n    script:\n    \"\"\"\n    record_matching.r $genome_fasta $gtf\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    record_matching.r $genome_fasta $gtf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome_fasta_matching",
            "gtf_matching"
        ],
        "nb_inputs": 2,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"${gtf}\"",
            "label 'midi_memory'",
            "publishDir \"${params.outdir}/reference_data/trimmed_gtf\", mode: 'copy'"
        ],
        "when": "!params.transcriptome_fasta && !params.skip_rna",
        "stub": ""
    },
    "extract_transcriptome": {
        "name_process": "extract_transcriptome",
        "string_process": "\nprocess extract_transcriptome {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"${genome_fasta}\"\n    label 'midi_memory'\n    publishDir \"${params.outdir}/reference_data/extract_transcriptome\", mode: 'copy'\n\n    input:\n    file genome_fasta from genome_fasta_extract_transcriptome\n    file gtf from gtf_extract_transcriptome_trimmed\n\n    output:\n    file \"${genome_fasta}.transcriptome.fa\" into transcriptome_fasta_alevin_extracted\n\n    when:\n    !params.transcriptome_fasta && !params.skip_rna \n    \n    script:\n                                                        \n    \"\"\"\n    gffread -F $gtf -w \"${genome_fasta}.transcriptome.fa\" -g $genome_fasta\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    gffread -F $gtf -w \"${genome_fasta}.transcriptome.fa\" -g $genome_fasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "gffread"
        ],
        "tools_url": [
            "https://bio.tools/gffread"
        ],
        "tools_dico": [
            {
                "name": "gffread",
                "uri": "https://bio.tools/gffread",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0361",
                                    "term": "Sequence annotation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "program for filtering, converting and manipulating GFF files",
                "homepage": "https://ccb.jhu.edu/software/stringtie/gff.shtml"
            }
        ],
        "inputs": [
            "genome_fasta_extract_transcriptome",
            "gtf_extract_transcriptome_trimmed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "transcriptome_fasta_alevin_extracted"
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"${genome_fasta}\"",
            "label 'midi_memory'",
            "publishDir \"${params.outdir}/reference_data/extract_transcriptome\", mode: 'copy'"
        ],
        "when": "!params.transcriptome_fasta && !params.skip_rna",
        "stub": ""
    },
    "build_salmon_index": {
        "name_process": "build_salmon_index",
        "string_process": "\nprocess build_salmon_index {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"$fasta\"\n    label 'mini_memory'\n    publishDir \"${params.outdir}/reference_genome/salmon_index\", mode: 'copy'\n\n    input:\n    file fasta from transcriptome_fasta_alevin.mix(transcriptome_fasta_alevin_extracted)\n\n    output:\n    file \"salmon_index\" into salmon_index_alevin\n\n    when:\n    !params.salmon_index && !params.skip_rna\n\n    script:\n    \"\"\"\n    salmon index -i salmon_index --gencode -k 31 -p 4 -t $fasta\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    salmon index -i salmon_index --gencode -k 31 -p 4 -t $fasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "transcriptome_fasta_alevin",
            "transcriptome_fasta_alevin_extracted"
        ],
        "nb_inputs": 2,
        "outputs": [
            "salmon_index_alevin"
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"$fasta\"",
            "label 'mini_memory'",
            "publishDir \"${params.outdir}/reference_genome/salmon_index\", mode: 'copy'"
        ],
        "when": "!params.salmon_index && !params.skip_rna",
        "stub": ""
    },
    "build_txp2gene": {
        "name_process": "build_txp2gene",
        "string_process": "\nprocess build_txp2gene {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"$gtf\"\n    label 'midi_memory'\n    publishDir \"${params.outdir}/reference_data/\", mode: 'copy'\n\n    input:\n    file gtf from gtf_alevin.mix(gtf_alevin_trimmed)\n\n    output:\n    file \"txp2gene.tsv\" into txp2gene\n\n    when:\n    !params.txp2gene && !params.skip_rna\n\n    script:\n\n    \"\"\"\n    txp2gene.r $gtf\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    txp2gene.r $gtf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf_alevin",
            "gtf_alevin_trimmed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "txp2gene"
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"$gtf\"",
            "label 'midi_memory'",
            "publishDir \"${params.outdir}/reference_data/\", mode: 'copy'"
        ],
        "when": "!params.txp2gene && !params.skip_rna",
        "stub": ""
    },
    "alevin": {
        "name_process": "alevin",
        "string_process": "\nprocess alevin {\n    if (params.custom_container) container \"${params.custom_container}\"\n    \n    tag \"$name\"\n    label 'maxi_memory'\n    publishDir \"${params.outdir}/alevin/alevin\", mode: 'copy'\n\n    input:\n    set val(name), file(reads) from read_files_alevin\n    file index from salmon_index_alevin.collect()\n    file txp2gene from txp2gene.collect()\n\n    output:\n    file \"${name}_alevin_results\" into ( alevin_results, alevin_logs )\n    \n    when:\n    !params.skip_rna\n\n    script:\n    read1 = reads[0]\n    read2 = reads[1]\n    \"\"\"\n    salmon alevin -l ISR -1 ${read1} -2 ${read2} \\\n      ${scrna_config_string} \\\n      -i $index \\\n      -o ${name}_alevin_results \\\n      -p ${task.cpus} \\\n      --tgMap $txp2gene \\\n      --dumpFeatures \\\n      \u2013-dumpMtx\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    read1 = reads[0]\n    read2 = reads[1]\n    \"\"\"\n    salmon alevin -l ISR -1 ${read1} -2 ${read2} \\\n      ${scrna_config_string} \\\n      -i $index \\\n      -o ${name}_alevin_results \\\n      -p ${task.cpus} \\\n      --tgMap $txp2gene \\\n      --dumpFeatures \\\n      \u2013-dumpMtx\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "read_files_alevin",
            "salmon_index_alevin",
            "txp2gene"
        ],
        "nb_inputs": 3,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "tag \"$name\"",
            "label 'maxi_memory'",
            "publishDir \"${params.outdir}/alevin/alevin\", mode: 'copy'"
        ],
        "when": "!params.skip_rna",
        "stub": ""
    },
    "cite_seq_count": {
        "name_process": "cite_seq_count",
        "string_process": "\nprocess cite_seq_count {\n   if (params.custom_container) container \"${params.custom_container}\"\n   \n   label 'maxi_memory'\n   publishDir \"${params.outdir}/CITE-seq-Count\", mode: 'copy'\n\n   input:\n   set val(name), file(reads) from read_files_csc\n   file adts from adt_tags\n   file whitelist from barcode_whitelist_csc.mix(barcode_whitelist_csc_unzip).collect()\n   \n   output:\n   file \"results/umi_count/matrix.mtx.gz\"\n   file \"results/umi_count/features.tsv.gz\"\n   file \"results/umi_count/barcodes.tsv.gz\"\n   file \"results/read_count/matrix.mtx.gz\"\n   file \"results/read_count/features.tsv.gz\"\n   file \"results/read_count/barcodes.tsv.gz\"\n   file \"results/unmapped.csv\"\n   file \"results/run_report.yaml\"\n\n   when:\n   !params.skip_adt\n\n   script:\n   read1 = reads[0]\n   read2 = reads[1]\n   \"\"\"\n   CITE-seq-Count -R1 ${read1} \\\n                  -R2 ${read2} \\\n                  -t $adts \\\n                  -cbf ${params.cbf} \\\n                  -cbl ${params.cbl} \\\n                  -umif ${params.umif} \\\n                  -umil ${params.umil} \\\n                  -cells ${params.n_cells} \\\n                  -wl $whitelist \\\n                  ${no_umi_correction_string} \\\n                  -o results\n   \"\"\"\n }",
        "nb_lignes_process": 40,
        "string_script": "   read1 = reads[0]\n   read2 = reads[1]\n   \"\"\"\n   CITE-seq-Count -R1 ${read1} \\\n                  -R2 ${read2} \\\n                  -t $adts \\\n                  -cbf ${params.cbf} \\\n                  -cbl ${params.cbl} \\\n                  -umif ${params.umif} \\\n                  -umil ${params.umil} \\\n                  -cells ${params.n_cells} \\\n                  -wl $whitelist \\\n                  ${no_umi_correction_string} \\\n                  -o results\n   \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "CITE-seq-Count"
        ],
        "tools_url": [
            "https://bio.tools/CITE-seq-Count"
        ],
        "tools_dico": [
            {
                "name": "CITE-seq-Count",
                "uri": "https://bio.tools/CITE-seq-Count",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1022",
                                "term": "Sequence feature label"
                            },
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2084",
                                "term": "Nucleic acid report"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Tool for counting antibody TAGS from a CITE-seq and/or cell hashing experiment.",
                "homepage": "https://hoohm.github.io/CITE-seq-Count/"
            }
        ],
        "inputs": [
            "read_files_csc",
            "adt_tags",
            "barcode_whitelist_csc",
            "barcode_whitelist_csc_unzip"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "robinfchan__citeseq-nf",
        "directive": [
            "label 'maxi_memory'",
            "publishDir \"${params.outdir}/CITE-seq-Count\", mode: 'copy'"
        ],
        "when": "!params.skip_adt",
        "stub": ""
    }
}