{
    "VARIANT_CALLING_BCFTOOLS": {
        "name_process": "VARIANT_CALLING_BCFTOOLS",
        "string_process": "\nprocess VARIANT_CALLING_BCFTOOLS {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n        val(reference)\n\n    output:\n        tuple val(name), val(\"bcftools\"), file(\"${name}.bcftools.bcf\")\n\n    \"\"\"\n    bcftools mpileup \\\n    --redo-BAQ \\\n    --max-depth 0 \\\n    --min-BQ ${params.min_base_quality} \\\n    --min-MQ ${params.min_mapping_quality} \\\n    --count-orphans \\\n    --fasta-ref ${reference} \\\n    --annotate AD ${bam} | \\\n    bcftools call \\\n    --multiallelic-caller \\\n    --variants-only \\\n     --ploidy 1 \\\n     --output-type b - > ${name}.bcftools.bcf\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\"\"\"\n    bcftools mpileup \\\n    --redo-BAQ \\\n    --max-depth 0 \\\n    --min-BQ ${params.min_base_quality} \\\n    --min-MQ ${params.min_mapping_quality} \\\n    --count-orphans \\\n    --fasta-ref ${reference} \\\n    --annotate AD ${bam} | \\\n    bcftools call \\\n    --multiallelic-caller \\\n    --variants-only \\\n     --ploidy 1 \\\n     --output-type b - > ${name}.bcftools.bcf\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_CALLING_LOFREQ": {
        "name_process": "VARIANT_CALLING_LOFREQ",
        "string_process": "\nprocess VARIANT_CALLING_LOFREQ {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 bioconda::lofreq=2.1.5\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n        val(reference)\n\n    output:\n        tuple val(name), val(\"lofreq\"), file(\"${name}.lofreq.bcf\")\n\n    \"\"\"\n    lofreq call \\\n    --min-bq ${params.min_base_quality} \\\n    --min-alt-bq ${params.min_base_quality} \\\n    --min-mq ${params.min_mapping_quality} \\\n    --ref ${reference} \\\n    --call-indels \\\n    <( lofreq indelqual --dindel --ref ${reference} ${bam} ) | bgzip > ${name}.lofreq.vcf.gz\n\n    # NOTE: adding the tabix index is a dirty fix to deal with LoFreq VCF missing the chromosome in the header\n    bcftools index ${name}.lofreq.vcf.gz\n    bcftools view --output-type b ${name}.lofreq.vcf.gz > ${name}.lofreq.bcf\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "\"\"\"\n    lofreq call \\\n    --min-bq ${params.min_base_quality} \\\n    --min-alt-bq ${params.min_base_quality} \\\n    --min-mq ${params.min_mapping_quality} \\\n    --ref ${reference} \\\n    --call-indels \\\n    <( lofreq indelqual --dindel --ref ${reference} ${bam} ) | bgzip > ${name}.lofreq.vcf.gz\n\n    # NOTE: adding the tabix index is a dirty fix to deal with LoFreq VCF missing the chromosome in the header\n    bcftools index ${name}.lofreq.vcf.gz\n    bcftools view --output-type b ${name}.lofreq.vcf.gz > ${name}.lofreq.bcf\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 bioconda::lofreq=2.1.5\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_CALLING_GATK": {
        "name_process": "VARIANT_CALLING_GATK",
        "string_process": "\nprocess VARIANT_CALLING_GATK {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 bioconda::gatk4=4.2.0.0\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n        val(reference)\n\n    output:\n        tuple val(name), val(\"gatk\"), file(\"${name}.gatk.bcf\")\n\n    \"\"\"\n    mkdir tmp\n    gatk HaplotypeCaller \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=tmp' \\\n    --input $bam \\\n    --output ${name}.gatk.vcf \\\n    --reference ${reference} \\\n    --ploidy 1 \\\n    --min-base-quality-score ${params.min_base_quality} \\\n    --minimum-mapping-quality ${params.min_mapping_quality} \\\n    --annotation AlleleFraction\n\n    bcftools view --output-type b ${name}.gatk.vcf > ${name}.gatk.bcf\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\"\"\"\n    mkdir tmp\n    gatk HaplotypeCaller \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=tmp' \\\n    --input $bam \\\n    --output ${name}.gatk.vcf \\\n    --reference ${reference} \\\n    --ploidy 1 \\\n    --min-base-quality-score ${params.min_base_quality} \\\n    --minimum-mapping-quality ${params.min_mapping_quality} \\\n    --annotation AlleleFraction\n\n    bcftools view --output-type b ${name}.gatk.vcf > ${name}.gatk.bcf\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GATK",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/gatk",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 bioconda::gatk4=4.2.0.0\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_CALLING_IVAR": {
        "name_process": "VARIANT_CALLING_IVAR",
        "string_process": "\nprocess VARIANT_CALLING_IVAR {\n    cpus params.cpus\n    memory params.memory\n    publishDir \"${params.output}\", mode: \"copy\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::samtools=1.12 bioconda::ivar=1.3.1\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n        val(reference)\n        file(gff)\n\n    output:\n        tuple val(name), file(\"${name}.ivar.tsv\")\n\n    \"\"\"\n    samtools mpileup \\\n    -aa \\\n    --count-orphans \\\n    --max-depth 0 \\\n    --redo-BAQ \\\n    --min-BQ ${params.min_base_quality} \\\n    --min-MQ ${params.min_mapping_quality} \\\n    ${bam} | \\\n    ivar variants \\\n    -p ${name}.ivar \\\n    -q ${params.min_base_quality} \\\n    -t 0.03 \\\n    -r ${reference} \\\n    -g ${gff}\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\"\"\"\n    samtools mpileup \\\n    -aa \\\n    --count-orphans \\\n    --max-depth 0 \\\n    --redo-BAQ \\\n    --min-BQ ${params.min_base_quality} \\\n    --min-MQ ${params.min_mapping_quality} \\\n    ${bam} | \\\n    ivar variants \\\n    -p ${name}.ivar \\\n    -q ${params.min_base_quality} \\\n    -t 0.03 \\\n    -r ${reference} \\\n    -g ${gff}\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "AIVAR"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/AIVAR"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "AIVAR",
                "uri": "https://bio.tools/AIVAR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Virulence prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Pathogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Assessing concordance among human, in silico predictions and functional assays on genetic variant classification.",
                "homepage": "https://github.com/TopGene/AIvar"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai",
            "reference",
            "gff"
        ],
        "nb_inputs": 5,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "publishDir \"${params.output}\", mode: \"copy\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::samtools=1.12 bioconda::ivar=1.3.1\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "IVAR2VCF": {
        "name_process": "IVAR2VCF",
        "string_process": "\nprocess IVAR2VCF {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 conda-forge::python=3.8.5 conda-forge::pandas=1.1.5 conda-forge::dataclasses=0.8 bioconda::pysam=0.17.0\" : null)\n\n    input:\n        tuple val(name), file(tsv)\n        val(reference)\n\n    output:\n        tuple val(name), val(\"ivar\"), file(\"${name}.ivar.bcf\")\n\n    \"\"\"\n    ivar2vcf.py \\\n    --fasta ${reference} \\\n    --ivar ${tsv} \\\n    --output-vcf ${name}.ivar.vcf\n\n    bcftools view --output-type b ${name}.ivar.vcf > ${name}.ivar.bcf\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\"\"\"\n    ivar2vcf.py \\\n    --fasta ${reference} \\\n    --ivar ${tsv} \\\n    --output-vcf ${name}.ivar.vcf\n\n    bcftools view --output-type b ${name}.ivar.vcf > ${name}.ivar.bcf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "tsv",
            "reference"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14 conda-forge::python=3.8.5 conda-forge::pandas=1.1.5 conda-forge::dataclasses=0.8 bioconda::pysam=0.17.0\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_CALLING_ASSEMBLY": {
        "name_process": "VARIANT_CALLING_ASSEMBLY",
        "string_process": "\nprocess VARIANT_CALLING_ASSEMBLY {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::python=3.8.5 conda-forge::biopython=1.79\" : null)\n\n    input:\n        tuple val(name), val(caller), file(fasta)\n        val(reference)\n\n    output:\n        tuple val(name), val(caller), file(\"${name}.${caller}.vcf\")\n\n    \"\"\"\n    assembly_variant_caller.py \\\n    --fasta ${fasta} \\\n    --reference ${reference} \\\n    --output-vcf ${name}.${caller}.vcf \\\n    --match-score $params.match_score \\\n    --mismatch-score $params.mismatch_score \\\n    --open-gap-score $params.open_gap_score \\\n    --extend-gap-score $params.extend_gap_score\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n    assembly_variant_caller.py \\\n    --fasta ${fasta} \\\n    --reference ${reference} \\\n    --output-vcf ${name}.${caller}.vcf \\\n    --match-score $params.match_score \\\n    --mismatch-score $params.mismatch_score \\\n    --open-gap-score $params.open_gap_score \\\n    --extend-gap-score $params.extend_gap_score\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "caller",
            "fasta",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "caller"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::python=3.8.5 conda-forge::biopython=1.79\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "BGZIP": {
        "name_process": "BGZIP",
        "string_process": "\nprocess BGZIP {\n    cpus params.cpus\n    memory params.memory\n    tag \"${name}\"\n    publishDir \"${params.output}\", mode: \"copy\"\n\n    conda (params.enable_conda ? \"bioconda::samtools=1.12\" : null)\n\n    input:\n    tuple val(name), val(caller), file(vcf)\n\n    output:\n    tuple val(name), file(\"${name}.${caller}.vcf.gz\"), file(\"${name}.${caller}.vcf.gz.tbi\"), emit: compressed_vcfs\n\n    script:\n    \"\"\"\n    bgzip -c ${vcf} > ${name}.${caller}.vcf.gz\n    tabix -p vcf ${name}.${caller}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bgzip -c ${vcf} > ${name}.${caller}.vcf.gz\n    tabix -p vcf ${name}.${caller}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "caller",
            "vcf"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "tag \"${name}\"",
            "publishDir \"${params.output}\", mode: \"copy\"",
            "conda (params.enable_conda ? \"bioconda::samtools=1.12\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "BAM_PREPROCESSING": {
        "name_process": "BAM_PREPROCESSING",
        "string_process": "\nprocess BAM_PREPROCESSING {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.deduplication_metrics.txt\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::gatk4=4.2.0.0\" : null)\n\n    input:\n        tuple val(name), file(bam)\n        val(reference)\n\n    output:\n        tuple val(name), file(\"${name}.preprocessed.bam\"), file(\"${name}.preprocessed.bai\"), emit: preprocessed_bam\n        file(\"${name}.deduplication_metrics.txt\")\n\n    \"\"\"\n    mkdir tmp\n\n    gatk CleanSam \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam} \\\n    --OUTPUT /dev/stdout | \\\n    gatk AddOrReplaceReadGroups \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=./tmp' \\\n    --VALIDATION_STRINGENCY SILENT \\\n    --INPUT /dev/stdin \\\n    --OUTPUT ${bam.baseName}.prepared.bam \\\n    --REFERENCE_SEQUENCE ${reference} \\\n    --RGPU 1 \\\n    --RGID 1 \\\n    --RGSM ${name} \\\n    --RGLB 1 \\\n    --RGPL ILLUMINA \\\n    --SORT_ORDER queryname\n\n    gatk MarkDuplicates \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.prepared.bam \\\n    --METRICS_FILE ${name}.deduplication_metrics.txt \\\n    --OUTPUT ${bam.baseName}.dedup.bam \\\n    --REMOVE_DUPLICATES true\n\n    gatk SortSam \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.dedup.bam \\\n    --OUTPUT ${bam.baseName}.preprocessed.bam \\\n    --SORT_ORDER coordinate\n\n    gatk BuildBamIndex --INPUT ${bam.baseName}.preprocessed.bam\n    \"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": "\"\"\"\n    mkdir tmp\n\n    gatk CleanSam \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam} \\\n    --OUTPUT /dev/stdout | \\\n    gatk AddOrReplaceReadGroups \\\n    --java-options '-Xmx${params.memory} -Djava.io.tmpdir=./tmp' \\\n    --VALIDATION_STRINGENCY SILENT \\\n    --INPUT /dev/stdin \\\n    --OUTPUT ${bam.baseName}.prepared.bam \\\n    --REFERENCE_SEQUENCE ${reference} \\\n    --RGPU 1 \\\n    --RGID 1 \\\n    --RGSM ${name} \\\n    --RGLB 1 \\\n    --RGPL ILLUMINA \\\n    --SORT_ORDER queryname\n\n    gatk MarkDuplicates \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.prepared.bam \\\n    --METRICS_FILE ${name}.deduplication_metrics.txt \\\n    --OUTPUT ${bam.baseName}.dedup.bam \\\n    --REMOVE_DUPLICATES true\n\n    gatk SortSam \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.dedup.bam \\\n    --OUTPUT ${bam.baseName}.preprocessed.bam \\\n    --SORT_ORDER coordinate\n\n    gatk BuildBamIndex --INPUT ${bam.baseName}.preprocessed.bam\n    \"\"\"",
        "nb_lignes_script": 34,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "reference"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.deduplication_metrics.txt\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::gatk4=4.2.0.0\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "PRIMER_TRIMMING_IVAR": {
        "name_process": "PRIMER_TRIMMING_IVAR",
        "string_process": "\nprocess PRIMER_TRIMMING_IVAR {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.deduplication_metrics.txt\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::gatk4=4.2.0.0 bioconda::ivar=1.3.1\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n        file(primers)\n\n    output:\n        tuple val(name), file(\"${bam.baseName}.trimmed.sorted.bam\"), file(\"${bam.baseName}.trimmed.sorted.bai\"), emit: trimmed_bam\n\n    \"\"\"\n    ivar trim \\\n    -i ${bam} \\\n    -b ${primers} \\\n    -p ${bam.baseName}.trimmed\n\n    gatk SortSam \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.trimmed.bam \\\n    --OUTPUT ${bam.baseName}.trimmed.sorted.bam \\\n    --SORT_ORDER coordinate\n\n    gatk BuildBamIndex --INPUT ${bam.baseName}.trimmed.sorted.bam\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\"\"\"\n    ivar trim \\\n    -i ${bam} \\\n    -b ${primers} \\\n    -p ${bam.baseName}.trimmed\n\n    gatk SortSam \\\n    --java-options '-Xmx${params.memory}  -Djava.io.tmpdir=./tmp' \\\n    --INPUT ${bam.baseName}.trimmed.bam \\\n    --OUTPUT ${bam.baseName}.trimmed.sorted.bam \\\n    --SORT_ORDER coordinate\n\n    gatk BuildBamIndex --INPUT ${bam.baseName}.trimmed.sorted.bam\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "AIVAR",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/AIVAR",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "AIVAR",
                "uri": "https://bio.tools/AIVAR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Virulence prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Pathogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Assessing concordance among human, in silico predictions and functional assays on genetic variant classification.",
                "homepage": "https://github.com/TopGene/AIvar"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai",
            "primers"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.deduplication_metrics.txt\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::gatk4=4.2.0.0 bioconda::ivar=1.3.1\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "COVERAGE_ANALYSIS": {
        "name_process": "COVERAGE_ANALYSIS",
        "string_process": "\nprocess COVERAGE_ANALYSIS {\n    cpus params.cpus\n    memory params.memory\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.coverage.tsv\"\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.depth.tsv\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::samtools=1.12\" : null)\n\n    input:\n        tuple val(name), file(bam), file(bai)\n\n    output:\n        file(\"${name}.coverage.tsv\")\n        file(\"${name}.depth.tsv\")\n\n\n    \"\"\"\n    samtools coverage ${bam} > ${name}.coverage.tsv\n    samtools depth -s -d 0 -H ${bam} > ${name}.depth.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n    samtools coverage ${bam} > ${name}.coverage.tsv\n    samtools depth -s -d 0 -H ${bam} > ${name}.depth.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam",
            "bai"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.coverage.tsv\"",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"${name}.depth.tsv\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::samtools=1.12\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_NORMALIZATION": {
        "name_process": "VARIANT_NORMALIZATION",
        "string_process": "\nprocess VARIANT_NORMALIZATION {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)\n\n    input:\n        tuple val(name), val(caller), file(vcf)\n        val(reference)\n\n    output:\n      tuple val(name), val(caller), file(\"${name}.${caller}.normalized.vcf\")\n\n    script:\n    \"\"\"\n    # initial sort of the VCF\n    bcftools sort ${vcf} | \\\n\n    # checks reference genome, decompose multiallelics, trim and left align indels\n    bcftools norm --multiallelics -any --check-ref e --fasta-ref ${reference} \\\n    --old-rec-tag OLD_CLUMPED - | \\\n\n    # remove duplicates after normalisation\n    bcftools norm --rm-dup exact -o ${name}.${caller}.normalized.vcf -\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    # initial sort of the VCF\n    bcftools sort ${vcf} | \\\n\n    # checks reference genome, decompose multiallelics, trim and left align indels\n    bcftools norm --multiallelics -any --check-ref e --fasta-ref ${reference} \\\n    --old-rec-tag OLD_CLUMPED - | \\\n\n    # remove duplicates after normalisation\n    bcftools norm --rm-dup exact -o ${name}.${caller}.normalized.vcf -\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "caller",
            "vcf",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "caller"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "PHASING": {
        "name_process": "PHASING",
        "string_process": "\nprocess PHASING {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::python=3.8.5 conda-forge::pandas=1.1.5 bioconda::pysam=0.17.0 bioconda::gtfparse=1.2.1 bioconda::cyvcf2=0.30.14\" : null)\n\n    input:\n        tuple val(name), val(caller), file(vcf)\n        val(fasta)\n        val(gtf)\n\n    output:\n      tuple val(name), val(caller), file(\"${name}.${caller}.phased.vcf\")\n\n    script:\n    \"\"\"\n    phasing.py \\\n    --fasta ${fasta} \\\n    --gtf ${gtf} \\\n    --input-vcf ${vcf} \\\n    --output-vcf ${name}.${caller}.phased.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    phasing.py \\\n    --fasta ${fasta} \\\n    --gtf ${gtf} \\\n    --input-vcf ${vcf} \\\n    --output-vcf ${name}.${caller}.phased.vcf\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "caller",
            "vcf",
            "fasta",
            "gtf"
        ],
        "nb_inputs": 5,
        "outputs": [
            "caller"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::python=3.8.5 conda-forge::pandas=1.1.5 bioconda::pysam=0.17.0 bioconda::gtfparse=1.2.1 bioconda::cyvcf2=0.30.14\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "ALIGNMENT_PAIRED_END": {
        "name_process": "ALIGNMENT_PAIRED_END",
        "string_process": "\nprocess ALIGNMENT_PAIRED_END {\n    cpus params.cpus\n    memory params.memory\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::bwa=0.7.17 bioconda::samtools=1.12\" : null)\n\n    input:\n        tuple val(name), file(fastq1), file(fastq2)\n        val(reference)\n\n    output:\n        tuple val(name), file(\"${name}.bam\")\n\n    \"\"\"\n    bwa mem -t ${task.cpus} ${reference} ${fastq1} ${fastq2} | \\\n    samtools view -uS - | \\\n    samtools sort - > ${name}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    bwa mem -t ${task.cpus} ${reference} ${fastq1} ${fastq2} | \\\n    samtools view -uS - | \\\n    samtools sort - > ${name}.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "fastq1",
            "fastq2",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::bwa=0.7.17 bioconda::samtools=1.12\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "ALIGNMENT_SINGLE_END": {
        "name_process": "ALIGNMENT_SINGLE_END",
        "string_process": "\nprocess ALIGNMENT_SINGLE_END {\n    cpus params.cpus\n    memory params.memory\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::bwa=0.7.17 bioconda::samtools=1.12\" : null)\n\n    input:\n        tuple val(name), file(fastq1)\n        val(reference)\n\n    output:\n        tuple val(name), file(\"${name}.bam\")\n\n    \"\"\"\n    bwa mem -t ${task.cpus} ${reference} ${fastq1} | \\\n    samtools view -uS - | \\\n    samtools sort - > ${name}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    bwa mem -t ${task.cpus} ${reference} ${fastq1} | \\\n    samtools view -uS - | \\\n    samtools sort - > ${name}.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "fastq1",
            "reference"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::bwa=0.7.17 bioconda::samtools=1.12\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_ANNOTATION": {
        "name_process": "VARIANT_ANNOTATION",
        "string_process": "\nprocess VARIANT_ANNOTATION {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::snpeff=5.0\" : null)\n\n    input:\n    tuple val(name), val(caller), file(vcf)\n    val(snpeff_data)\n    val(snpeff_config)\n    val(snpeff_organism)\n\n    output:\n    tuple val(name), val(caller), file(\"${name}.${caller}.annotated.vcf\"), emit: annotated_vcfs\n\n    \"\"\"\n    # for some reason the snpEff.config file needs to be in the folder where snpeff runs...\n    cp ${snpeff_config} .\n\n    snpEff eff -dataDir ${snpeff_data} \\\n    -noStats -no-downstream -no-upstream -no-intergenic -no-intron -onlyProtein -hgvs1LetterAa -noShiftHgvs \\\n    ${snpeff_organism}  ${vcf} > ${name}.${caller}.annotated.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n    # for some reason the snpEff.config file needs to be in the folder where snpeff runs...\n    cp ${snpeff_config} .\n\n    snpEff eff -dataDir ${snpeff_data} \\\n    -noStats -no-downstream -no-upstream -no-intergenic -no-intron -onlyProtein -hgvs1LetterAa -noShiftHgvs \\\n    ${snpeff_organism}  ${vcf} > ${name}.${caller}.annotated.vcf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [
            "name",
            "caller",
            "vcf",
            "snpeff_data",
            "snpeff_config",
            "snpeff_organism"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::snpeff=5.0\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_VAF_ANNOTATION": {
        "name_process": "VARIANT_VAF_ANNOTATION",
        "string_process": "\nprocess VARIANT_VAF_ANNOTATION {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)\n\n    input:\n        tuple val(name), val(caller), file(vcf)\n\n    output:\n        tuple val(name), val(caller), file(\"${name}.${caller}.vcf\"), emit: vaf_annotated\n\n    \"\"\"\n    bgzip -c ${vcf} > ${name}.vcf.gz\n\n    tabix -p vcf ${name}.vcf.gz\n\n    # annotates low frequency and subclonal variants\n    bcftools view -Ob ${name}.vcf.gz | \\\n    bcftools filter \\\n    --exclude 'INFO/vafator_af < ${params.low_frequency_variant_threshold}' \\\n    --soft-filter LOW_FREQUENCY - | \\\n    bcftools filter \\\n    --exclude 'INFO/vafator_af >= ${params.low_frequency_variant_threshold} && INFO/vafator_af < ${params.subclonal_variant_threshold}' \\\n    --soft-filter SUBCLONAL \\\n    --output-type v - > ${name}.${caller}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\"\"\"\n    bgzip -c ${vcf} > ${name}.vcf.gz\n\n    tabix -p vcf ${name}.vcf.gz\n\n    # annotates low frequency and subclonal variants\n    bcftools view -Ob ${name}.vcf.gz | \\\n    bcftools filter \\\n    --exclude 'INFO/vafator_af < ${params.low_frequency_variant_threshold}' \\\n    --soft-filter LOW_FREQUENCY - | \\\n    bcftools filter \\\n    --exclude 'INFO/vafator_af >= ${params.low_frequency_variant_threshold} && INFO/vafator_af < ${params.subclonal_variant_threshold}' \\\n    --soft-filter SUBCLONAL \\\n    --output-type v - > ${name}.${caller}.vcf\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "caller",
            "vcf"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VARIANT_SARSCOV2_ANNOTATION": {
        "name_process": "VARIANT_SARSCOV2_ANNOTATION",
        "string_process": "\nprocess VARIANT_SARSCOV2_ANNOTATION {\n    cpus params.cpus\n    memory params.memory\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)\n\n    input:\n    tuple val(name), val(caller), file(vcf)\n\n    output:\n    tuple val(name), val(caller), file(\"${name}.${caller}.annotated_sarscov2.vcf\"), emit: annotated_vcfs\n\n    \"\"\"\n    bcftools annotate \\\n    --annotations ${params.conservation_sarscov2} \\\n    --header-lines ${params.conservation_sarscov2_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_SARS_COV_2 \\\n    --output-type z ${vcf} | \\\n    bcftools annotate \\\n    --annotations ${params.conservation_sarbecovirus} \\\n    --header-lines ${params.conservation_sarbecovirus_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_SARBECOVIRUS \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.conservation_vertebrate} \\\n    --header-lines ${params.conservation_vertebrate_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_VERTEBRATE_COV \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.pfam_names} \\\n    --header-lines ${params.pfam_names_header} \\\n    -c CHROM,FROM,TO,PFAM_NAME \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.pfam_descriptions} \\\n    --header-lines ${params.pfam_descriptions_header} \\\n    -c CHROM,FROM,TO,PFAM_DESCRIPTION - > ${name}.${caller}.annotated_sarscov2.vcf\n\n    # TODO: include this step for GISAID data\n    #bcftools annotate \\\n    #--annotations ${params.problematic_sites} \\\n    #--columns FILTER \\\n    #--output-type b - > ${vcf.baseName}.annotated.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 48,
        "string_script": "\"\"\"\n    bcftools annotate \\\n    --annotations ${params.conservation_sarscov2} \\\n    --header-lines ${params.conservation_sarscov2_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_SARS_COV_2 \\\n    --output-type z ${vcf} | \\\n    bcftools annotate \\\n    --annotations ${params.conservation_sarbecovirus} \\\n    --header-lines ${params.conservation_sarbecovirus_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_SARBECOVIRUS \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.conservation_vertebrate} \\\n    --header-lines ${params.conservation_vertebrate_header} \\\n    -c CHROM,FROM,TO,CONS_HMM_VERTEBRATE_COV \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.pfam_names} \\\n    --header-lines ${params.pfam_names_header} \\\n    -c CHROM,FROM,TO,PFAM_NAME \\\n    --output-type z - | \\\n    bcftools annotate \\\n    --annotations ${params.pfam_descriptions} \\\n    --header-lines ${params.pfam_descriptions_header} \\\n    -c CHROM,FROM,TO,PFAM_DESCRIPTION - > ${name}.${caller}.annotated_sarscov2.vcf\n\n    # TODO: include this step for GISAID data\n    #bcftools annotate \\\n    #--annotations ${params.problematic_sites} \\\n    #--columns FILTER \\\n    #--output-type b - > ${vcf.baseName}.annotated.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 31,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "caller",
            "vcf"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "VAFATOR": {
        "name_process": "VAFATOR",
        "string_process": "\nprocess VAFATOR {\n    cpus params.cpus\n    memory params.memory\n    tag \"${name}\"\n    if (params.keep_intermediate) {\n        publishDir \"${params.output}\", mode: \"copy\"\n    }\n\n    conda (params.enable_conda ? \"bioconda::vafator=1.2.5\" : null)\n\n    input:\n    tuple val(name), val(caller), file(vcf), file(bam), file(bai)\n\n    output:\n    tuple val(name), val(caller), file(\"${name}.${caller}.vaf.vcf\"), emit: annotated_vcf\n\n    script:\n    mq_param = params.vafator_min_mapping_quality != false ? \"--mapping-quality \" + params.vafator_min_mapping_quality : \"\"\n    bq_param = params.vafator_min_base_quality != false ? \"--base-call-quality \" + params.vafator_min_base_quality : \"\"\n    \"\"\"\n    vafator \\\n    --input-vcf ${vcf} \\\n    --output-vcf ${name}.${caller}.vaf.vcf \\\n    --bam vafator ${bam} ${mq_param} ${bq_param}\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    mq_param = params.vafator_min_mapping_quality != false ? \"--mapping-quality \" + params.vafator_min_mapping_quality : \"\"\n    bq_param = params.vafator_min_base_quality != false ? \"--base-call-quality \" + params.vafator_min_base_quality : \"\"\n    \"\"\"\n    vafator \\\n    --input-vcf ${vcf} \\\n    --output-vcf ${name}.${caller}.vaf.vcf \\\n    --bam vafator ${bam} ${mq_param} ${bq_param}\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "caller",
            "vcf",
            "bam",
            "bai"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "tag \"${name}\" if (params.keep_intermediate) { publishDir \"${params.output}\", mode: \"copy\" }",
            "conda (params.enable_conda ? \"bioconda::vafator=1.2.5\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "READ_TRIMMING_PAIRED_END": {
        "name_process": "READ_TRIMMING_PAIRED_END",
        "string_process": "\nprocess READ_TRIMMING_PAIRED_END {\n    cpus params.cpus\n    memory params.memory\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"*fastp_stats*\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::fastp=0.20.1\" : null)\n\n    input:\n        tuple val(name), file(fastq1), file(fastq2)\n\n    output:\n        tuple val(name), file(\"${fastq1.baseName}.trimmed.fq.gz\"), file(\"${fastq2.baseName}.trimmed.fq.gz\")\n        file(\"${name}.fastp_stats.json\")\n        file(\"${name}.fastp_stats.html\")\n\n    \"\"\"\n    # --input_files needs to be forced, otherwise it is inherited from profile in tests\n    fastp \\\n    --in1 ${fastq1} \\\n    --in2 ${fastq2} \\\n    --out1 ${fastq1.baseName}.trimmed.fq.gz \\\n    --out2 ${fastq2.baseName}.trimmed.fq.gz \\\n    --json ${name}.fastp_stats.json \\\n    --html ${name}.fastp_stats.html\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n    # --input_files needs to be forced, otherwise it is inherited from profile in tests\n    fastp \\\n    --in1 ${fastq1} \\\n    --in2 ${fastq2} \\\n    --out1 ${fastq1.baseName}.trimmed.fq.gz \\\n    --out2 ${fastq2.baseName}.trimmed.fq.gz \\\n    --json ${name}.fastp_stats.json \\\n    --html ${name}.fastp_stats.html\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "name",
            "fastq1",
            "fastq2"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"*fastp_stats*\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::fastp=0.20.1\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "READ_TRIMMING_SINGLE_END": {
        "name_process": "READ_TRIMMING_SINGLE_END",
        "string_process": "\nprocess READ_TRIMMING_SINGLE_END {\n    cpus params.cpus\n    memory params.memory\n    publishDir \"${params.output}\", mode: \"copy\", pattern: \"*fastp_stats*\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::fastp=0.20.1\" : null)\n\n    input:\n        tuple val(name), file(fastq1)\n\n    output:\n        tuple val(name), file(\"${fastq1.baseName}.trimmed.fq.gz\")\n        file(\"${name}.fastp_stats.json\")\n        file(\"${name}.fastp_stats.html\")\n\n    \"\"\"\n    # --input_files needs to be forced, otherwise it is inherited from profile in tests\n    fastp \\\n    --in1 ${fastq1} \\\n    --out1 ${fastq1.baseName}.trimmed.fq.gz \\\n    --json ${name}.fastp_stats.json \\\n    --html ${name}.fastp_stats.html\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    # --input_files needs to be forced, otherwise it is inherited from profile in tests\n    fastp \\\n    --in1 ${fastq1} \\\n    --out1 ${fastq1.baseName}.trimmed.fq.gz \\\n    --json ${name}.fastp_stats.json \\\n    --html ${name}.fastp_stats.html\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "name",
            "fastq1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "publishDir \"${params.output}\", mode: \"copy\", pattern: \"*fastp_stats*\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::fastp=0.20.1\" : null)"
        ],
        "when": "",
        "stub": ""
    },
    "PANGOLIN_LINEAGE": {
        "name_process": "PANGOLIN_LINEAGE",
        "string_process": "\nprocess PANGOLIN_LINEAGE {\n    cpus params.cpus\n    memory params.memory\n    publishDir \"${params.output}\", mode: \"copy\"\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"bioconda::pangolin=3.1.19\" : null)\n\n    input:\n        tuple val(name), val(caller), file(fasta)\n\n    output:\n        file(\"${name}.${caller}.pangolin.csv\")\n\n    when:\n                                                                \n        caller == \"lofreq\" || caller == \"assembly\"\n\n    shell:\n    \"\"\"\n    mkdir tmp\n\n    #--decompress-model\n    pangolin \\\n    ${fasta} \\\n    --outfile ${name}.${caller}.pangolin.csv \\\n    --tempdir ./tmp \\\n    --threads ${params.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    mkdir tmp\n\n    #--decompress-model\n    pangolin \\\n    ${fasta} \\\n    --outfile ${name}.${caller}.pangolin.csv \\\n    --tempdir ./tmp \\\n    --threads ${params.cpus}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "caller",
            "fasta"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "publishDir \"${params.output}\", mode: \"copy\"",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"bioconda::pangolin=3.1.19\" : null)"
        ],
        "when": "caller == \"lofreq\" || caller == \"assembly\"",
        "stub": ""
    },
    "VCF2FASTA": {
        "name_process": "VCF2FASTA",
        "string_process": "\nprocess VCF2FASTA {\n    cpus params.cpus\n    memory params.memory\n    tag \"${name}\"\n\n    conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)\n\n    input:\n        tuple val(name), val(caller), file(vcf)\n        val(reference)\n\n    output:\n        tuple val(name), val(caller), file(\"${name}.${caller}.fasta\")\n\n    shell:\n    \"\"\"\n    bcftools index ${vcf}\n\n    # GATK results have all FILTER=\".\"\n    bcftools consensus --fasta-ref ${reference} \\\n    --include 'FILTER=\"PASS\" | FILTER=\".\"' \\\n    --output ${name}.${caller}.fasta \\\n    ${vcf}\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    bcftools index ${vcf}\n\n    # GATK results have all FILTER=\".\"\n    bcftools consensus --fasta-ref ${reference} \\\n    --include 'FILTER=\"PASS\" | FILTER=\".\"' \\\n    --output ${name}.${caller}.fasta \\\n    ${vcf}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "caller",
            "vcf",
            "reference"
        ],
        "nb_inputs": 4,
        "outputs": [
            "caller"
        ],
        "nb_outputs": 1,
        "name_workflow": "TRON-Bioinformatics__covigator-ngs-pipeline",
        "directive": [
            "cpus params.cpus",
            "memory params.memory",
            "tag \"${name}\"",
            "conda (params.enable_conda ? \"conda-forge::gsl=2.7 bioconda::bcftools=1.14\" : null)"
        ],
        "when": "",
        "stub": ""
    }
}