{
    "svaba": {
        "name_process": "svaba",
        "string_process": "\nprocess svaba {\n\tcpus params.cpu\n     memory params.mem+'G'\n     tag { sampleID }\n\n     publishDir params.output_folder, mode: 'copy'\n\n     input :\n     set val(sampleID),file(tumorBam),file(tumorBai),file(normalBam),file(normalBai) from bams\n     file fasta_ref\n     file fasta_ref_fai\n     file fasta_ref_sa\n     file fasta_ref_bwt\n     file fasta_ref_ann\n     file fasta_ref_amb\n     file fasta_ref_pac\n     file fasta_ref_alt\n\n     output:\n     set val(sampleID), file(\"${sampleID}*.vcf\") into vcf\n     file \"${sampleID}.alignments.txt.gz\" into alignments\n\n     shell :\n     if(params.targets) targets=\"-k ${params.targets}\"\n     else targets=\"\"\n     if(normalBam.baseName == 'None' ) normal=\"\"\n     else  normal=\"-n ${normalBam}\"\n     '''\n     svaba run -t !{tumorBam} !{normal} -p !{params.cpu} !{dbsnp_par} !{params.dbsnp} -a somatic_run -G !{fasta_ref} !{targets} !{params.options}\n     mv somatic_run.alignments.txt.gz !{sampleID}.alignments.txt.gz\n     for f in `ls *.vcf`; do mv $f !{sampleID}.$f; done\n     '''\n}",
        "nb_lignes_process": 32,
        "string_script": "     if(params.targets) targets=\"-k ${params.targets}\"\n     else targets=\"\"\n     if(normalBam.baseName == 'None' ) normal=\"\"\n     else  normal=\"-n ${normalBam}\"\n     '''\n     svaba run -t !{tumorBam} !{normal} -p !{params.cpu} !{dbsnp_par} !{params.dbsnp} -a somatic_run -G !{fasta_ref} !{targets} !{params.options}\n     mv somatic_run.alignments.txt.gz !{sampleID}.alignments.txt.gz\n     for f in `ls *.vcf`; do mv $f !{sampleID}.$f; done\n     '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bams",
            "fasta_ref",
            "fasta_ref_fai",
            "fasta_ref_sa",
            "fasta_ref_bwt",
            "fasta_ref_ann",
            "fasta_ref_amb",
            "fasta_ref_pac",
            "fasta_ref_alt"
        ],
        "nb_inputs": 9,
        "outputs": [
            "vcf",
            "alignments"
        ],
        "nb_outputs": 2,
        "name_workflow": "IARCbioinfo__svaba-nf",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { sampleID }",
            "publishDir params.output_folder, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}