{
    "mutect2": {
        "name_process": "mutect2",
        "string_process": "\nprocess mutect2 {\n    tag \"${patient}_${T}_${N}_${chromosome}_${start}_${end}\"\n    cpus 4                                      \n\n    input:\n        tuple val(patient), \n\t\t\tval(T), \n\t\t\tpath(T_bam), \n\t\t\tpath(T_bai), \n\t\t\tval(N), \n\t\t\tpath(N_bam),\n\t\t\tpath(N_bai),\n            val(chromosome),\n            val(start), \n            val(end)\n        path(reference_file)\n        path(reference_dict)\n        path(reference_index)\n            \n    output:\n        tuple val(patient), val(T), val(N), \n\t\t\tpath(\"mutect2_${patient}_${T}_${N}_${chromosome}_${start}_${end}.vcf\") \n            \n                                                                                            \n                                                                                               \n                                                                                              \n                                                 \n    script:\n    \"\"\"\n        start_plus_1=\\$((${start}+1))\n\n        /usr/TMB/gatk-4.0.10.0/gatk Mutect2 \\\n        -R ${reference_file} \\\n        -I ${T_bam} \\\n        -tumor ${patient}_${T} \\\n        -I ${N_bam} \\\n        -normal ${patient}_${N} \\\n        -O mutect2_${patient}_${T}_${N}_${chromosome}_${start}_${end}.vcf \\\n        --intervals ${chromosome}:\\${start_plus_1}-${end}\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    \"\"\"\n        start_plus_1=\\$((${start}+1))\n\n        /usr/TMB/gatk-4.0.10.0/gatk Mutect2 \\\n        -R ${reference_file} \\\n        -I ${T_bam} \\\n        -tumor ${patient}_${T} \\\n        -I ${N_bam} \\\n        -normal ${patient}_${N} \\\n        -O mutect2_${patient}_${T}_${N}_${chromosome}_${start}_${end}.vcf \\\n        --intervals ${chromosome}:\\${start_plus_1}-${end}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "chromosome",
            "start",
            "end",
            "T_bam",
            "T_bai",
            "N_bam",
            "N_bai",
            "reference_file",
            "reference_dict",
            "reference_index"
        ],
        "nb_inputs": 13,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}_${chromosome}_${start}_${end}\"",
            "cpus 4"
        ],
        "when": "",
        "stub": ""
    },
    "split_reference": {
        "name_process": "split_reference",
        "string_process": "\nprocess split_reference {   \n    input:\n        path(reference_fa)\n        path(reference_dict)\n        path(reference_index)\n        val(bin_size)\n\n    output:\n        path(\"${reference_fa.baseName}_${bin_size}.bed\")\n\n    script:\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk PreprocessIntervals -R ${reference_fa} -O ${reference_fa.baseName}_${bin_size}.ilist --bin-length ${bin_size} --padding 0\n        /usr/TMB/gatk-4.0.10.0/gatk IntervalListToBed -I ${reference_fa.baseName}_${bin_size}.ilist -O ${reference_fa.baseName}_${bin_size}.bed\n        grep -v hs37d5 ${reference_fa.baseName}_${bin_size}.bed > tmp.tmp\n        mv tmp.tmp ${reference_fa.baseName}_${bin_size}.bed\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk PreprocessIntervals -R ${reference_fa} -O ${reference_fa.baseName}_${bin_size}.ilist --bin-length ${bin_size} --padding 0\n        /usr/TMB/gatk-4.0.10.0/gatk IntervalListToBed -I ${reference_fa.baseName}_${bin_size}.ilist -O ${reference_fa.baseName}_${bin_size}.bed\n        grep -v hs37d5 ${reference_fa.baseName}_${bin_size}.bed > tmp.tmp\n        mv tmp.tmp ${reference_fa.baseName}_${bin_size}.bed\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "reference_fa",
            "reference_dict",
            "reference_index",
            "bin_size"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "merge_vcf_and_stats_files": {
        "name_process": "merge_vcf_and_stats_files",
        "string_process": "\nprocess merge_vcf_and_stats_files {\n    tag \"${patient}_${T}_${N}\"\n\n    input:\n        tuple val(id), path(unmerged_vcfs_files), path(unmerged_stats_files)\n\n    output:\n        tuple val(id), path(\"${patient}_${T}_${N}_merged_unfiltered.vcf\"), path(\"${patient}_${T}_${N}_merged_unfiltered.vcf.stats\")\n\n    script:\n    vcf_file_list = unmerged_vcfs_files.collect{ \"-I ${it} \" }.join(' ')\n    stats_file_list = unmerged_stats_files.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk MergeVcfs\\\n        ${vcf_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf\n\n        /usr/TMB/gatk-4.0.10.0/gatk MergeMutectStats\\\n        ${stats_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf.stats\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    vcf_file_list = unmerged_vcfs_files.collect{ \"-I ${it} \" }.join(' ')\n    stats_file_list = unmerged_stats_files.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk MergeVcfs\\\n        ${vcf_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf\n\n        /usr/TMB/gatk-4.0.10.0/gatk MergeMutectStats\\\n        ${stats_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf.stats\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "id",
            "unmerged_vcfs_files",
            "unmerged_stats_files"
        ],
        "nb_inputs": 3,
        "outputs": [
            "id"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_vcf_files": {
        "name_process": "merge_vcf_files",
        "string_process": "\nprocess merge_vcf_files {\n    tag \"${params.out_dir}/${patient}_${T}_${N}/mutect_raw/\"\n\n    input:\n        tuple val(patient), val(T), val(N), path(unmerged_vcfs_files)\n\n    output:\n        tuple val(patient), val(T), val(N), path(\"${patient}_${T}_${N}_merged_unfiltered.vcf\")\n\n    script:\n    vcf_file_list = unmerged_vcfs_files.collect{ \"-I ${it} \" }.join(' ')\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk MergeVcfs\\\n        ${vcf_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf\n\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    vcf_file_list = unmerged_vcfs_files.collect{ \"-I ${it} \" }.join(' ')\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk MergeVcfs\\\n        ${vcf_file_list} \\\n        -O ${patient}_${T}_${N}_merged_unfiltered.vcf\n\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "unmerged_vcfs_files"
        ],
        "nb_inputs": 4,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${params.out_dir}/${patient}_${T}_${N}/mutect_raw/\""
        ],
        "when": "",
        "stub": ""
    },
    "mark_pass_vcfs": {
        "name_process": "mark_pass_vcfs",
        "string_process": "\nprocess mark_pass_vcfs {\n    tag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}\", mode: 'copy'\n\n    input:\n        tuple val(patient), val(T), val(N), path(merged_vcf_file)\n        path(reference_fa)\n        path(reference_index)\n        path(reference_dict)                                                   \n\n    output:\n        tuple val(patient), val(T), val(N), path(\"${merged_vcf_file.simpleName}.passmarked.vcf\")\n\n    script:\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk FilterMutectCalls\\\n        -V ${merged_vcf_file} \\\n        -O ${merged_vcf_file.simpleName}.passmarked.vcf \\\n        -R ${reference_fa}\n    \"\"\"  \n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk FilterMutectCalls\\\n        -V ${merged_vcf_file} \\\n        -O ${merged_vcf_file.simpleName}.passmarked.vcf \\\n        -R ${reference_fa}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "merged_vcf_file",
            "reference_fa",
            "reference_index",
            "reference_dict"
        ],
        "nb_inputs": 7,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "create_pass_vcfs": {
        "name_process": "create_pass_vcfs",
        "string_process": "\nprocess create_pass_vcfs {\n    tag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_passed/\", mode: 'copy'\n\n    input:\n        tuple val(patient), val(T), val(N), path(vcf_file)\n        \n    output:\n        tuple val(patient), val(T), val(N), path(\"${patient}_${T}_${N}.PASS.vcf\")\n\n    script:\n    \"\"\"\n        java -Xmx2g -jar /usr/TMB/snpEff/SnpSift.jar filter \"(FILTER = 'PASS')\"  ${vcf_file} > ${patient}_${T}_${N}.PASS.vcf\n    \"\"\"  \n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n        java -Xmx2g -jar /usr/TMB/snpEff/SnpSift.jar filter \"(FILTER = 'PASS')\"  ${vcf_file} > ${patient}_${T}_${N}.PASS.vcf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "patient",
            "T",
            "N",
            "vcf_file"
        ],
        "nb_inputs": 4,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_passed/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "gatk_index_feature": {
        "name_process": "gatk_index_feature",
        "string_process": "\nprocess gatk_index_feature {\n    tag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_indexed/\", mode: 'copy'\n\n    input:\n        tuple val(patient), val(T), val(N), path(vcf_file)\n        \n    output:\n        tuple val(patient), val(T), val(N), path(vcf_file), path(\"${vcf_file}.idx\")\n\n    script:\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk IndexFeatureFile -F ${vcf_file}\n    \"\"\"  \n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk IndexFeatureFile -F ${vcf_file}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "vcf_file"
        ],
        "nb_inputs": 4,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_indexed/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "split_vcfs_into_SNVs_and_INDELs": {
        "name_process": "split_vcfs_into_SNVs_and_INDELs",
        "string_process": "\nprocess split_vcfs_into_SNVs_and_INDELs {\n    tag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_snv_indel_split/\", mode: 'copy'\n\n    input:\n        tuple val(patient), val(T), val(N), path(vcf_file), path(vcf_index)\n        \n    output:\n        tuple val(\"Mutect2\"), \n        val(patient), \n        val(T), \n        val(N), \n        path(\"mutect_${patient}_${T}_${N}.PASS.indel.vcf.gz\"), \n        path(\"mutect_${patient}_${T}_${N}.PASS.snv.vcf.gz\"),\n        path(\"mutect_${patient}_${T}_${N}.PASS.indel.vcf.gz.tbi\"), \n        path(\"mutect_${patient}_${T}_${N}.PASS.snv.vcf.gz.tbi\")\n\n    script:\n    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk SplitVcfs \\\n        -I ${vcf_file} \\\n        --INDEL_OUTPUT mutect_${patient}_${T}_${N}.PASS.indel.vcf.gz \\\n        --SNP_OUTPUT mutect_${patient}_${T}_${N}.PASS.snv.vcf.gz \\\n        --STRICT false\n    \"\"\"  \n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk SplitVcfs \\\n        -I ${vcf_file} \\\n        --INDEL_OUTPUT mutect_${patient}_${T}_${N}.PASS.indel.vcf.gz \\\n        --SNP_OUTPUT mutect_${patient}_${T}_${N}.PASS.snv.vcf.gz \\\n        --STRICT false\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "vcf_file",
            "vcf_index"
        ],
        "nb_inputs": 5,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/mutect_snv_indel_split/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "copy_reference": {
        "name_process": "copy_reference",
        "string_process": "\nprocess copy_reference {\n\ttag \"$fasta_name\"\n\tinput:\n\t\tval(fasta_name) \n\n\toutput:\n\t\tpath(\"*.fa\") \n\n\tscript:\n\t\"\"\"\n\t\techo ${fasta_name} | xargs -i cp {} .\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n\t\techo ${fasta_name} | xargs -i cp {} .\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_name"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta_name\""
        ],
        "when": "",
        "stub": ""
    },
    "bwa_index_reference": {
        "name_process": "bwa_index_reference",
        "string_process": "\nprocess bwa_index_reference {\n\ttag \"$fasta\"\n\tinput:\n\t\tpath(fasta) \n\n\toutput:\n\t\tpath(\"${fasta}.*\") \n\t\t\n\tscript:\n\t\"\"\"\n\t\t/usr/TMB/bwa index ${fasta}\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n\t\t/usr/TMB/bwa index ${fasta}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "samtools_index_reference": {
        "name_process": "samtools_index_reference",
        "string_process": "\nprocess samtools_index_reference {\n\ttag \"$fasta\"\n\tinput:\n\t\tpath(fasta) \n\n\toutput:\n\t\tpath(\"${fasta}.fai\") \n        \n\tscript:\n\t\"\"\"\n\t\t/usr/TMB/samtools faidx ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n\t\t/usr/TMB/samtools faidx ${fasta}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "gatk_index_reference": {
        "name_process": "gatk_index_reference",
        "string_process": "\nprocess gatk_index_reference {\n\ttag \"$fasta\"\n\tinput:\n\t\tpath(fasta) \n\n\toutput:\n        path(\"${fasta.baseName}.dict\")\n\n\tscript:\n\t\"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk CreateSequenceDictionary -R ${fasta}\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n        /usr/TMB/gatk-4.0.10.0/gatk CreateSequenceDictionary -R ${fasta}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "create_RTG_reference": {
        "name_process": "create_RTG_reference",
        "string_process": "\nprocess create_RTG_reference {\n\ttag \"$fasta\"\n\tinput:\n\t\tpath(fasta) \n\n\toutput:\n        path(\"SDF\")\n\n\tscript:\n\t\"\"\"\n        /usr/TMB/rtg-tools-3.11/rtg format -o SDF ${fasta}\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n        /usr/TMB/rtg-tools-3.11/rtg format -o SDF ${fasta}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "sortgff"
        ],
        "tools_url": [
            "https://bio.tools/sortgff"
        ],
        "tools_dico": [
            {
                "name": "sortgff",
                "uri": "https://bio.tools/sortgff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Sorts a gff file.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "count_fasta_bases": {
        "name_process": "count_fasta_bases",
        "string_process": "\nprocess count_fasta_bases {\n\ttag \"$fasta\"\n\tinput:\n\t\tpath(fasta) \n\n\toutput:\n\t\tpath(\"base_count.txt\") \n\n\tscript:\n\t\"\"\"\n\t\tseqtk comp ${fasta} | grep -E '^[123456789XY]{1,2}\\\\s' | awk '{ print \\$3+\\$4+\\$5+\\$6 }' | paste -sd+ | bc > base_count.txt\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n\t\tseqtk comp ${fasta} | grep -E '^[123456789XY]{1,2}\\\\s' | awk '{ print \\$3+\\$4+\\$5+\\$6 }' | paste -sd+ | bc > base_count.txt\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "count_CDS_bases": {
        "name_process": "count_CDS_bases",
        "string_process": "\nprocess count_CDS_bases {\n\ttag \"$anno\"\n\tinput:\n\t\tval(anno) \n\n\toutput:\n\t\tpath(\"CDS_size.txt\"), emit: CDS_size_file\n\t\tpath(\"CDS.bed\"), emit: CDS_bed\n\n\tscript:\n\t\"\"\"\n\t\tjava -jar /usr/TMB/snpEff/snpEff.jar  dump -v -bed $anno > ${anno}.bed\n\t\tgrep -E '^[1234567890XY]{1,2}\\\\s' ${anno}.bed | grep CDS | bedtools sort | bedtools merge > CDS.bed\n\t\tawk '{ print \\$3-\\$2 }' CDS.bed | paste -sd+ | bc > CDS_size.txt\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\t\"\"\"\n\t\tjava -jar /usr/TMB/snpEff/snpEff.jar  dump -v -bed $anno > ${anno}.bed\n\t\tgrep -E '^[1234567890XY]{1,2}\\\\s' ${anno}.bed | grep CDS | bedtools sort | bedtools merge > CDS.bed\n\t\tawk '{ print \\$3-\\$2 }' CDS.bed | paste -sd+ | bc > CDS_size.txt\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "anno"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$anno\""
        ],
        "when": "",
        "stub": ""
    },
    "trim_pair": {
        "name_process": "trim_pair",
        "string_process": "\nprocess trim_pair {\n    tag \"$an_id\"\n\tcpus 10\n\n\tinput:\n\t\ttuple val(an_id), val(patient), val(tissue), path(reads1), path(reads2)\n\n\toutput:\n        tuple val(an_id), val(patient), val(tissue), path(\"${reads1}.fastp.trimmed.fq.gz\"),\n\t\t\tpath(\"${reads2}.fastp.trimmed.fq.gz\"),  emit: fastqs\n        path(\"${an_id}.fastp.json\"),                emit: jsons\n\t\t\n\tscript:\n \t\"\"\"\n\t\tfastp \\\n\t\t-i ${reads1} \\\n\t\t-I ${reads2} \\\n\t\t-o ${reads1}.fastp.trimmed.fq.gz \\\n\t\t-O ${reads2}.fastp.trimmed.fq.gz \\\n\t\t--json ${an_id}.fastp.json\n \t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": " \t\"\"\"\n\t\tfastp \\\n\t\t-i ${reads1} \\\n\t\t-I ${reads2} \\\n\t\t-o ${reads1}.fastp.trimmed.fq.gz \\\n\t\t-O ${reads2}.fastp.trimmed.fq.gz \\\n\t\t--json ${an_id}.fastp.json\n \t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "an_id",
            "patient",
            "tissue",
            "reads1",
            "reads2"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$an_id\"",
            "cpus 10"
        ],
        "when": "",
        "stub": ""
    },
    "align_reads": {
        "name_process": "align_reads",
        "string_process": "\nprocess align_reads {\n\ttag \"$an_id\"\n\tcpus 48\n\tmemory \"48 GB\"\n\n\tinput:\n\t\ttuple val(an_id), val(patient), val(tissue), path(trim1), path(trim2) \n\t\tpath(reference_fasta) \n\t\tpath(bwa_index) \n\n\toutput:\n\t\ttuple val(an_id), val(patient), val(tissue), path(\"${an_id}.bam\") \n\n\tscript:\n\t\"\"\"\n\t\tbwa mem \\\n\t\t${reference_fasta} \\\n\t\t-R '@RG\\\\tID:${an_id}_${patient}_${tissue}\\\\tSM:${patient}_${tissue}\\\\tLB:${an_id}_${patient}_${tissue}\\\\tPL:ILLUMINA' \\\n\t\t-t 48 ${trim1} ${trim2}  | /usr/TMB/samtools view -S -b - > ${an_id}.bam\n\t\"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\t\"\"\"\n\t\tbwa mem \\\n\t\t${reference_fasta} \\\n\t\t-R '@RG\\\\tID:${an_id}_${patient}_${tissue}\\\\tSM:${patient}_${tissue}\\\\tLB:${an_id}_${patient}_${tissue}\\\\tPL:ILLUMINA' \\\n\t\t-t 48 ${trim1} ${trim2}  | /usr/TMB/samtools view -S -b - > ${an_id}.bam\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "an_id",
            "patient",
            "tissue",
            "trim1",
            "trim2",
            "reference_fasta",
            "bwa_index"
        ],
        "nb_inputs": 7,
        "outputs": [
            "tissue"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$an_id\"",
            "cpus 48",
            "memory \"48 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "sort_bam": {
        "name_process": "sort_bam",
        "string_process": "\nprocess sort_bam {\n\ttag \"$an_id\"\n\tcpus 10\n\n\tinput:\n\t\ttuple val(an_id), val(patient), val(tissue), path(bam_file) \n\n\toutput: \n\t\ttuple val(patient), val(tissue), val(an_id), path(\"${bam_file.baseName}.sorted.bam\") \n\n\tscript:\n\t\"\"\"\n\t\t/usr/TMB/samtools sort -@ 10 -T . -o ${bam_file.baseName}.sorted.bam ${bam_file}\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\t\t/usr/TMB/samtools sort -@ 10 -T . -o ${bam_file.baseName}.sorted.bam ${bam_file}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "an_id",
            "patient",
            "tissue",
            "bam_file"
        ],
        "nb_inputs": 4,
        "outputs": [
            "an_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"$an_id\"",
            "cpus 10"
        ],
        "when": "",
        "stub": ""
    },
    "merge_bams": {
        "name_process": "merge_bams",
        "string_process": "\nprocess merge_bams {\n\ttag \"${patient}_${tissue}\"\n\tmemory \"64 GB\"\n\tcpus 16\n\n\tinput:\n\t\ttuple val(patient), val(tissue), val(an_id), path(bams_to_merge)\n\n\toutput:\n\t\ttuple val(patient), val(tissue), path(\"${patient}-${tissue}_merged.bam\") \n\n\tscript:\n\t\"\"\"\n\t\tsambamba merge ${patient}-${tissue}_merged.bam $bams_to_merge\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\t\"\"\"\n\t\tsambamba merge ${patient}-${tissue}_merged.bam $bams_to_merge\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "patient",
            "tissue",
            "an_id",
            "bams_to_merge"
        ],
        "nb_inputs": 4,
        "outputs": [
            "tissue"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${tissue}\"",
            "memory \"64 GB\"",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "mark_duplicates": {
        "name_process": "mark_duplicates",
        "string_process": "\nprocess mark_duplicates {\n\ttag \"${patient}_${tissue}\"\n\tpublishDir \"${params.out_dir}/bams/${patient}_bams\"\n\tmemory \"128 GB\"\n\tcpus 8\n\n\tinput:\n\t\ttuple val(patient), val(tissue), path(bam_file)\n\n\toutput:\n\t\ttuple val(patient), val(tissue), path(\"${bam_file.baseName}.dup.bam\"),\n\t\tpath(\"${bam_file.baseName}.dup.bam.bai\") \n\n\tscript:\n\t\"\"\"\n\t\tsambamba markdup \\\n\t\t--nthreads 8 \\\n\t\t--tmpdir . \\\n\t\t--hash-table-size 5000000 \\\n\t\t--overflow-list-size 5000000 \\\n\t\t--io-buffer-size 1024 ${bam_file} ${bam_file.baseName}.dup.bam\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\t\"\"\"\n\t\tsambamba markdup \\\n\t\t--nthreads 8 \\\n\t\t--tmpdir . \\\n\t\t--hash-table-size 5000000 \\\n\t\t--overflow-list-size 5000000 \\\n\t\t--io-buffer-size 1024 ${bam_file} ${bam_file.baseName}.dup.bam\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "patient",
            "tissue",
            "bam_file"
        ],
        "nb_inputs": 3,
        "outputs": [
            "tissue"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${tissue}\"",
            "publishDir \"${params.out_dir}/bams/${patient}_bams\"",
            "memory \"128 GB\"",
            "cpus 8"
        ],
        "when": "",
        "stub": ""
    },
    "MSIsensor2": {
        "name_process": "MSIsensor2",
        "string_process": "\nprocess MSIsensor2 {\n\ttag \"${patient}_${T}_${N}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/MSIsensor2\"\n\tcpus 32\n\n\tinput:\n\t\ttuple val(patient), \n\t\t\tval(T), \n\t\t\tpath(T_bam), \n\t\t\tpath(T_bai), \n\t\t\tval(N), \n\t\t\tpath(N_bam),\n\t\t\tpath(N_bai) \n\t\t\n\toutput:\n\t\ttuple val(\"msisensor2\"), val(patient), val(T), val(N), \n\t\t\tpath(\"msisensor2_${patient}_${T}_${N}.txt\") \n\n\tscript:                                                                                        \n\t\"\"\"\n\t\tmsisensor msi \\\n\t\t-t ${T_bam} \\\n\t\t-n ${N_bam} \\\n\t\t-d /usr/TMB/msisensor2/models_b37_HumanG1Kv37/1030c0aa35ca5c263daeae866ad18632 \\\n\t\t-b 32 \\\n\t\t-o msisensor2_${patient}_${T}_${N}.txt 2> msisensor2_out_${patient}_${T}_${N}.log\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\t\"\"\"\n\t\tmsisensor msi \\\n\t\t-t ${T_bam} \\\n\t\t-n ${N_bam} \\\n\t\t-d /usr/TMB/msisensor2/models_b37_HumanG1Kv37/1030c0aa35ca5c263daeae866ad18632 \\\n\t\t-b 32 \\\n\t\t-o msisensor2_${patient}_${T}_${N}.txt 2> msisensor2_out_${patient}_${T}_${N}.log\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "MSIsensor"
        ],
        "tools_url": [
            "https://bio.tools/msisensor"
        ],
        "tools_dico": [
            {
                "name": "MSIsensor",
                "uri": "https://bio.tools/msisensor",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Nucleic acid feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Sequence feature detection (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "C++ program for automatically detecting somatic and germline variants at microsatellite regions. It computes length distributions of microsatellites per site in paired tumor and normal sequence data, subsequently using these to statistically compare observed distributions in both samples.",
                "homepage": "https://github.com/ding-lab/msisensor"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "T_bam",
            "T_bai",
            "N_bam",
            "N_bai"
        ],
        "nb_inputs": 7,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/MSIsensor2\"",
            "cpus 32"
        ],
        "when": "",
        "stub": ""
    },
    "manta": {
        "name_process": "manta",
        "string_process": "\nprocess manta {\n\ttag \"${patient}_${T}_${N}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/Manta\"\n\tcpus 48\n\n\tinput:\n\t\ttuple val(patient), \n\t\t\tval(T), \n\t\t\tpath(T_bam), \n\t\t\tpath(T_bai), \n\t\t\tval(N), \n\t\t\tpath(N_bam),\n\t\t\tpath(N_bai) \n\t\tpath(fai_file)\n\t\tpath(reference) \n\n\toutput:\n\t\ttuple val(\"Manta\"), \n\t\t\tval(patient), \n\t\t\tval(T), \n\t\t\tpath(T_bam), \n\t\t\tpath(T_bai), \n\t\t\tval(N), \n\t\t\tpath(N_bam),\n\t\t\tpath(N_bai), \n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz\"), \n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz.tbi\"),\n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz\"), \n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz.tbi\"),\n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz\"), \n\t\t\tpath(\"Manta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz.tbi\")\n\n \tscript:\n \t\"\"\"\n\t\t/usr/TMB/manta-1.6.0.centos6_x86_64/bin/configManta.py \\\n\t\t\t--normalBam=${N_bam} \\\n\t\t\t--tumorBam=${T_bam} \\\n\t\t\t--referenceFasta=${reference}  \\\n\t\t\t--runDir Manta\n\t\tpython Manta/runWorkflow.py -m local -j 48\n\n\t\tmv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz\n\t\tmv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz.tbi\n\t\tmv Manta/results/variants/candidateSV.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz\n\t\tmv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz.tbi\n\t\tmv Manta/results/variants/somaticSV.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz\n\t\tmv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz.tbi\n \"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": " \t\"\"\"\n\t\t/usr/TMB/manta-1.6.0.centos6_x86_64/bin/configManta.py \\\n\t\t\t--normalBam=${N_bam} \\\n\t\t\t--tumorBam=${T_bam} \\\n\t\t\t--referenceFasta=${reference}  \\\n\t\t\t--runDir Manta\n\t\tpython Manta/runWorkflow.py -m local -j 48\n\n\t\tmv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz\n\t\tmv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSmallIndels.vcf.gz.tbi\n\t\tmv Manta/results/variants/candidateSV.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz\n\t\tmv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.candidateSV.vcf.gz.tbi\n\t\tmv Manta/results/variants/somaticSV.vcf.gz \\\n\t\t\tManta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz\n\t\tmv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n\t\t\tManta_${patient}_${T}_vs_${N}.somaticSV.vcf.gz.tbi\n \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "patient",
            "T",
            "N",
            "T_bam",
            "T_bai",
            "N_bam",
            "N_bai",
            "fai_file",
            "reference"
        ],
        "nb_inputs": 9,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/Manta\"",
            "cpus 48"
        ],
        "when": "",
        "stub": ""
    },
    "strelka": {
        "name_process": "strelka",
        "string_process": "\nprocess strelka {\n\ttag \"${patient}_${T}_${N}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/strelka\"\n\tcpus 48\n\n\tinput:\n\t\ttuple val(tool), \n\t\t\tval(patient), \n\t\t\tval(T), \n\t\t\tpath(T_bam), \n\t\t\tpath(T_bai), \n\t\t\tval(N), \n\t\t\tpath(N_bam),\n\t\t\tpath(N_bai), \n\t\t\tpath(SmallIndels), \n\t\t\tpath(SmallIndels_index),\n\t\t\tpath(candidateSV), \n\t\t\tpath(candidateSV_index),\n\t\t\tpath(somaticSV), \n\t\t\tpath(somaticSV_index)\n\t\tpath(fai_file)\n\t\tpath(reference) \n\n\toutput:\n\t\ttuple val(\"Strelka2\"), val(patient), val(T), val(N), \n\t\t\tpath(\"Strelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz\"),\n\t\t\tpath(\"Strelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz\"),\n\t\t\tpath(\"Strelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz.tbi\"),\n\t\t\tpath(\"Strelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz.tbi\")\n\n\n\tscript:\n\t\"\"\"\n\t\t/usr/TMB/strelka-2.9.2.centos6_x86_64/bin//configureStrelkaSomaticWorkflow.py \\\n\t\t    --tumor ${T_bam} \\\n\t\t\t--normal ${N_bam} \\\n\t\t\t--referenceFasta ${reference} \\\n\t\t\t--runDir Strelka \\\n\t\t\t--indelCandidates ${SmallIndels}\n\t\tpython Strelka/runWorkflow.py -m local -j 48\n\n\t\trm -f *gz *tbi\n\n\t\tmv Strelka/results/variants/somatic.indels.vcf.gz \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz\n\t\tmv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz.tbi\n\t\tmv Strelka/results/variants/somatic.snvs.vcf.gz \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz\n\t\tmv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz.tbi\n\t\"\"\"\n}",
        "nb_lignes_process": 52,
        "string_script": "\t\"\"\"\n\t\t/usr/TMB/strelka-2.9.2.centos6_x86_64/bin//configureStrelkaSomaticWorkflow.py \\\n\t\t    --tumor ${T_bam} \\\n\t\t\t--normal ${N_bam} \\\n\t\t\t--referenceFasta ${reference} \\\n\t\t\t--runDir Strelka \\\n\t\t\t--indelCandidates ${SmallIndels}\n\t\tpython Strelka/runWorkflow.py -m local -j 48\n\n\t\trm -f *gz *tbi\n\n\t\tmv Strelka/results/variants/somatic.indels.vcf.gz \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz\n\t\tmv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_indels.vcf.gz.tbi\n\t\tmv Strelka/results/variants/somatic.snvs.vcf.gz \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz\n\t\tmv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n\t\t\tStrelka_${patient}_${T}_vs_${N}_somatic_snvs.vcf.gz.tbi\n\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tool",
            "patient",
            "T",
            "N",
            "T_bam",
            "T_bai",
            "N_bam",
            "N_bai",
            "SmallIndels",
            "SmallIndels_index",
            "candidateSV",
            "candidateSV_index",
            "somaticSV",
            "somaticSV_index",
            "fai_file",
            "reference"
        ],
        "nb_inputs": 16,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/strelka\"",
            "cpus 48"
        ],
        "when": "",
        "stub": ""
    },
    "create_pass_vcfs_strelka": {
        "name_process": "create_pass_vcfs_strelka",
        "string_process": "\nprocess create_pass_vcfs_strelka {\n    tag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}/strelka_passed\", mode: 'copy'\n\n    input:\n        tuple val(caller), val(patient), val(T), val(N), \n\t\t\tpath(strelka_indels),\n\t\t\tpath(strelka_snvs),\n\t\t\tpath(strelka_indels_index),\n\t\t\tpath(strelka_snvs_index)\n        \n    output:\n        tuple val(\"${caller}\"), val(patient), val(T), val(N), \n\t\t\tpath(\"strelka_${patient}_${T}_${N}.PASS.indel.vcf.gz\"),\n\t\t\tpath(\"strelka_${patient}_${T}_${N}.PASS.snv.vcf.gz\"),\n\t\t\tpath(\"strelka_${patient}_${T}_${N}.PASS.indel.vcf.gz.tbi\"),\n\t\t\tpath(\"strelka_${patient}_${T}_${N}.PASS.snv.vcf.gz.tbi\")\n\n    script:\n    \"\"\"\n        ${snpSift} filter \"(FILTER = 'PASS')\"  ${strelka_indels} > strelka_${patient}_${T}_${N}.PASS.indel.vcf\n\t\t${snpSift} filter \"(FILTER = 'PASS')\"  ${strelka_snvs} > strelka_${patient}_${T}_${N}.PASS.snv.vcf \n\t\t/usr/TMB/rtg-tools-3.11/rtg bgzip strelka_${patient}_${T}_${N}.PASS.indel.vcf \n\t\t/usr/TMB/rtg-tools-3.11/rtg bgzip strelka_${patient}_${T}_${N}.PASS.snv.vcf \n        /usr/TMB/rtg-tools-3.11/rtg index strelka_${patient}_${T}_${N}.PASS.indel.vcf.gz\n\t\t/usr/TMB/rtg-tools-3.11/rtg index strelka_${patient}_${T}_${N}.PASS.snv.vcf.gz\n    \"\"\"  \n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n        ${snpSift} filter \"(FILTER = 'PASS')\"  ${strelka_indels} > strelka_${patient}_${T}_${N}.PASS.indel.vcf\n\t\t${snpSift} filter \"(FILTER = 'PASS')\"  ${strelka_snvs} > strelka_${patient}_${T}_${N}.PASS.snv.vcf \n\t\t/usr/TMB/rtg-tools-3.11/rtg bgzip strelka_${patient}_${T}_${N}.PASS.indel.vcf \n\t\t/usr/TMB/rtg-tools-3.11/rtg bgzip strelka_${patient}_${T}_${N}.PASS.snv.vcf \n        /usr/TMB/rtg-tools-3.11/rtg index strelka_${patient}_${T}_${N}.PASS.indel.vcf.gz\n\t\t/usr/TMB/rtg-tools-3.11/rtg index strelka_${patient}_${T}_${N}.PASS.snv.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "sortgff"
        ],
        "tools_url": [
            "https://bio.tools/sortgff"
        ],
        "tools_dico": [
            {
                "name": "sortgff",
                "uri": "https://bio.tools/sortgff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Sorts a gff file.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            }
        ],
        "inputs": [
            "caller",
            "patient",
            "T",
            "N",
            "strelka_indels",
            "strelka_snvs",
            "strelka_indels_index",
            "strelka_snvs_index"
        ],
        "nb_inputs": 8,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/strelka_passed\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "rtg_intersect_calls": {
        "name_process": "rtg_intersect_calls",
        "string_process": "\nprocess rtg_intersect_calls {\n   \ttag \"${patient}_${T}_${N}\"\n    publishDir \"${params.out_dir}/${patient}_${T}_${N}/variant_intersect\", mode: 'copy'\n\tcpus 10\n\tmemory \"16 GB\"\n\n    input:\n\t\ttuple val(patient), val(T), val(N), \n\t\t\tval(strelka_name),\n\t\t\tpath(strelka_indels),\n\t\t\tpath(strelka_snvs),\n\t\t\tpath(strelka_indels_index),\n\t\t\tpath(strelka_snvs_index),\n\t\t\tval(mutect_name),\n\t\t\tpath(mutect_indels),\n\t\t\tpath(mutect_snvs),\n\t\t\tpath(mutect_indels_index),\n\t\t\tpath(mutect_snvs_index)\n\t\tpath(rtg_reference)\n    \n    output:\n        tuple val(\"intersected_variants\"), val(patient), val(T), val(N), \n\t\t\tpath(\"${patient}_${T}_${N}_snv_strelka_only.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_mutect_only.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_both.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_strelka_only.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_mutect_only.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_both.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_strelka_only.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_mutect_only.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_both.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_strelka_only.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_mutect_only.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_both.vcf.gz.tbi\"), emit: all_calls\n\t\ttuple val(\"intersected_variants\"), val(patient), val(T), val(N), \n\t\t\tpath(\"${patient}_${T}_${N}_snv_both.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_snv_both.vcf.gz.tbi\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_both.vcf.gz\"),\n\t\t\tpath(\"${patient}_${T}_${N}_indel_both.vcf.gz.tbi\"), emit: joined_calls\n\n\t\t\t\n    script:\n    \"\"\"\n\t\t/usr/TMB/rtg-tools-3.11/rtg RTG_MEM=16G vcfeval \\\n\t\t-b ${strelka_snvs} \\\n\t\t-c ${mutect_snvs} \\\n\t\t-t ${rtg_reference} \\\n\t\t-o SNV_intersect \\\n\t\t--sample ALT,ALT \\\n\t\t--squash-ploidy \\\n\t\t--vcf-score-field INFO.QSS \n\n\t\tmv SNV_intersect/fp.vcf.gz ${patient}_${T}_${N}_snv_mutect_only.vcf.gz\n\t\tmv SNV_intersect/fn.vcf.gz ${patient}_${T}_${N}_snv_strelka_only.vcf.gz\n\t\tmv SNV_intersect/tp.vcf.gz ${patient}_${T}_${N}_snv_both.vcf.gz\n\t\tmv SNV_intersect/fp.vcf.gz.tbi ${patient}_${T}_${N}_snv_mutect_only.vcf.gz.tbi\n\t\tmv SNV_intersect/fn.vcf.gz.tbi ${patient}_${T}_${N}_snv_strelka_only.vcf.gz.tbi\n\t\tmv SNV_intersect/tp.vcf.gz.tbi ${patient}_${T}_${N}_snv_both.vcf.gz.tbi\n\n\t\t/usr/TMB/rtg-tools-3.11/rtg RTG_MEM=16G vcfeval \\\n\t\t-b ${strelka_indels} \\\n\t\t-c ${mutect_indels} \\\n\t\t-t ${rtg_reference} \\\n\t\t-o INDEL_intersect \\\n\t\t--squash-ploidy \\\n\t\t--sample ALT,ALT \\\n\t\t--vcf-score-field INFO.QSS\n\n\t\tmv INDEL_intersect/fp.vcf.gz ${patient}_${T}_${N}_indel_mutect_only.vcf.gz\n\t\tmv INDEL_intersect/fn.vcf.gz ${patient}_${T}_${N}_indel_strelka_only.vcf.gz\n\t\tmv INDEL_intersect/tp.vcf.gz ${patient}_${T}_${N}_indel_both.vcf.gz\n\t\tmv INDEL_intersect/fp.vcf.gz.tbi ${patient}_${T}_${N}_indel_mutect_only.vcf.gz.tbi\n\t\tmv INDEL_intersect/fn.vcf.gz.tbi ${patient}_${T}_${N}_indel_strelka_only.vcf.gz.tbi\n\t\tmv INDEL_intersect/tp.vcf.gz.tbi ${patient}_${T}_${N}_indel_both.vcf.gz.tbi\n    \"\"\"  \n\n}",
        "nb_lignes_process": 76,
        "string_script": "    \"\"\"\n\t\t/usr/TMB/rtg-tools-3.11/rtg RTG_MEM=16G vcfeval \\\n\t\t-b ${strelka_snvs} \\\n\t\t-c ${mutect_snvs} \\\n\t\t-t ${rtg_reference} \\\n\t\t-o SNV_intersect \\\n\t\t--sample ALT,ALT \\\n\t\t--squash-ploidy \\\n\t\t--vcf-score-field INFO.QSS \n\n\t\tmv SNV_intersect/fp.vcf.gz ${patient}_${T}_${N}_snv_mutect_only.vcf.gz\n\t\tmv SNV_intersect/fn.vcf.gz ${patient}_${T}_${N}_snv_strelka_only.vcf.gz\n\t\tmv SNV_intersect/tp.vcf.gz ${patient}_${T}_${N}_snv_both.vcf.gz\n\t\tmv SNV_intersect/fp.vcf.gz.tbi ${patient}_${T}_${N}_snv_mutect_only.vcf.gz.tbi\n\t\tmv SNV_intersect/fn.vcf.gz.tbi ${patient}_${T}_${N}_snv_strelka_only.vcf.gz.tbi\n\t\tmv SNV_intersect/tp.vcf.gz.tbi ${patient}_${T}_${N}_snv_both.vcf.gz.tbi\n\n\t\t/usr/TMB/rtg-tools-3.11/rtg RTG_MEM=16G vcfeval \\\n\t\t-b ${strelka_indels} \\\n\t\t-c ${mutect_indels} \\\n\t\t-t ${rtg_reference} \\\n\t\t-o INDEL_intersect \\\n\t\t--squash-ploidy \\\n\t\t--sample ALT,ALT \\\n\t\t--vcf-score-field INFO.QSS\n\n\t\tmv INDEL_intersect/fp.vcf.gz ${patient}_${T}_${N}_indel_mutect_only.vcf.gz\n\t\tmv INDEL_intersect/fn.vcf.gz ${patient}_${T}_${N}_indel_strelka_only.vcf.gz\n\t\tmv INDEL_intersect/tp.vcf.gz ${patient}_${T}_${N}_indel_both.vcf.gz\n\t\tmv INDEL_intersect/fp.vcf.gz.tbi ${patient}_${T}_${N}_indel_mutect_only.vcf.gz.tbi\n\t\tmv INDEL_intersect/fn.vcf.gz.tbi ${patient}_${T}_${N}_indel_strelka_only.vcf.gz.tbi\n\t\tmv INDEL_intersect/tp.vcf.gz.tbi ${patient}_${T}_${N}_indel_both.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 32,
        "language_script": "bash",
        "tools": [
            "sortgff"
        ],
        "tools_url": [
            "https://bio.tools/sortgff"
        ],
        "tools_dico": [
            {
                "name": "sortgff",
                "uri": "https://bio.tools/sortgff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Sorts a gff file.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            }
        ],
        "inputs": [
            "patient",
            "T",
            "N",
            "strelka_name",
            "mutect_name",
            "strelka_indels",
            "strelka_snvs",
            "strelka_indels_index",
            "strelka_snvs_index",
            "mutect_indels",
            "mutect_snvs",
            "mutect_indels_index",
            "mutect_snvs_index",
            "rtg_reference"
        ],
        "nb_inputs": 14,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/variant_intersect\", mode: 'copy'",
            "cpus 10",
            "memory \"16 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "annotate_small_variants": {
        "name_process": "annotate_small_variants",
        "string_process": "\nprocess annotate_small_variants {\n\ttag \"${patient}_${T}_${N}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/annotated_variants\", mode: 'copy'\n\tmemory '48 GB'\n\n\tinput:\n\t\ttuple val(names), val(patient), val(T), val(N), \n\t\t\tpath(snv_calls),\n\t\t\tpath(snv_index),\n\t\t\tpath(indel_calls),\n\t\t\tpath(indel_index)\n\n\toutput:\n\t\ttuple val(\"snpEff\"), val(patient), val(T), val(N), \n\t\t\tpath(\"${snv_calls.baseName}.snpEff.vcf\"),\n\t\t\tpath(\"${indel_calls.baseName}.snpEff.vcf\"), emit: annnotations\n\t\ttuple val(\"snpEff\"), val(patient), val(T), val(N), \n\t\t\tpath(\"${patient}_${T}_${N}_somatic.snv.html\"),\n\t\t\tpath(\"${patient}_${T}_${N}_somatic.indel.html\"),\n\t\t\tpath(\"${patient}_${T}_${N}_somatic.snv.genes.txt\"),\n\t\t\tpath(\"${patient}_${T}_${N}_somatic.indel.genes.txt\"), emit: stats_files\n\n\tscript:\n\t\"\"\"\n\t\tjava -Xmx48g -jar /usr/TMB/snpEff/snpEff.jar GRCh37.75 -s ${patient}_${T}_${N}_somatic.snv.html ${snv_calls} > ${snv_calls.baseName}.snpEff.vcf\n\t\tjava -Xmx48g -jar /usr/TMB/snpEff/snpEff.jar GRCh37.75 -s ${patient}_${T}_${N}_somatic.indel.html ${indel_calls} > ${indel_calls.baseName}.snpEff.vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\t\"\"\"\n\t\tjava -Xmx48g -jar /usr/TMB/snpEff/snpEff.jar GRCh37.75 -s ${patient}_${T}_${N}_somatic.snv.html ${snv_calls} > ${snv_calls.baseName}.snpEff.vcf\n\t\tjava -Xmx48g -jar /usr/TMB/snpEff/snpEff.jar GRCh37.75 -s ${patient}_${T}_${N}_somatic.indel.html ${indel_calls} > ${indel_calls.baseName}.snpEff.vcf\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "names",
            "patient",
            "T",
            "N",
            "snv_calls",
            "snv_index",
            "indel_calls",
            "indel_index"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/annotated_variants\", mode: 'copy'",
            "memory '48 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "create_signatures": {
        "name_process": "create_signatures",
        "string_process": "\nprocess create_signatures {\n\ttag \"${patient}_${T}_${N}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/signatures\", mode: 'copy'\n\t\n\tinput:\n\t\ttuple val(names), val(patient), val(T), val(N), \n\t\t\tpath(snv_calls),\n\t\t\tpath(snv_index),\n\t\t\tpath(indel_calls),\n\t\t\tpath(indel_index)\n\n\toutput:\n\t\ttuple val(\"SigProfiler\"), val(patient), val(T), val(N), \n\t\t\tpath(\"mutation_signature_output\"), emit: mutsig_output\n\t\t\n\tscript:\n\t\"\"\"\n\t\t/usr/TMB/gatk-4.0.10.0/gatk MergeVcfs -I ${snv_calls} -I ${indel_calls} -O all_passed_merged_variants.vcf\n\t\tmkdir vcf_input\n\t\tmv all_passed_merged_variants.vcf vcf_input\n\t\tpython3 /usr/TMB/plot_mutation_spectrum.py -v vcf_input -n ${patient}_${T}_${N}\n\t\tmv vcf_input/output ./mutation_signature_output\n\t\"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\t\"\"\"\n\t\t/usr/TMB/gatk-4.0.10.0/gatk MergeVcfs -I ${snv_calls} -I ${indel_calls} -O all_passed_merged_variants.vcf\n\t\tmkdir vcf_input\n\t\tmv all_passed_merged_variants.vcf vcf_input\n\t\tpython3 /usr/TMB/plot_mutation_spectrum.py -v vcf_input -n ${patient}_${T}_${N}\n\t\tmv vcf_input/output ./mutation_signature_output\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "names",
            "patient",
            "T",
            "N",
            "snv_calls",
            "snv_index",
            "indel_calls",
            "indel_index"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}_${T}_${N}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/signatures\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "create_panel_report": {
        "name_process": "create_panel_report",
        "string_process": "\nprocess create_panel_report {\n\ttag \"${patient}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/report\", mode: 'copy', overwrite: true\n\tmemory '48 GB'\n\t\n\tinput:\n\t\tpath(base_count) \n\t\tpath(cds_count)\n\t\tpath(cds_bed)\n\t\tpath(cosmic_vcf)\n\t\ttuple val(patient), val(T), val(N), val(dont_use1),\n\t\t\tpath(msi_out),\n\t\t\tval(dont_use2),\n\t\t\tpath(snv_vcf),\n\t\t\tpath(indel_vcf)\n\n\toutput:\n\t\ttuple val(patient), val(T), val(N), path(\"TMB_panel_estimates.txt\")\n\n\tscript:\n\t                                                      \n\tif( cosmic_vcf.exists() )           \n\t\"\"\"\n\t\ttotal_CDS_bases=`cat ${cds_count}`\n\t\techo \"indel file: ${indel_vcf}\" > TMB_panel_estimates.txt\n\t\techo \"snv file: ${snv_vcf}\" >> TMB_panel_estimates.txt\n\n\t\t#Get variants in the panel genes\n\t\t\t${snpSift} filter -s /usr/TMB/panel_gene_list_20200218.txt \\\n\t\t\t\t\"(ANN[*].GENE in SET[0])\" \\\n\t\t\t\t${snv_vcf} > ${snv_vcf.simpleName}_panel.vcf\n\t\t\t${snpSift} filter -s /usr/TMB/panel_gene_list_20200218.txt \\\n\t\t\t\t\"(ANN[*].GENE in SET[0])\" \\\n\t\t\t\t${indel_vcf} > ${indel_vcf.simpleName}_panel.vcf\n\t\t\tpanel_SNV_count=`grep -v ^# ${snv_vcf.simpleName}_panel.vcf | wc -l`\n\t\t\tpanel_INDEL_count=`grep -v ^# ${indel_vcf.simpleName}_panel.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel: %3f\\\\n\" \\${panel_SNV_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel : %3f\\\\n\" \\${panel_INDEL_count} >> TMB_panel_estimates.txt \t\n\t\t \n\t\t#limit to the CDS of the genes in the panel\n\t\t\tbedtools intersect -a ${snv_vcf.simpleName}_panel.vcf -b ${cds_bed} -header > ${snv_vcf.simpleName}_panel_CDS.vcf\n\t\t\tbedtools intersect -a ${indel_vcf.simpleName}_panel.vcf -b ${cds_bed} -header > ${indel_vcf.simpleName}_panel_CDS.vcf\n\t\t\tpanel_CDS_SNV_count=`grep -v ^# ${snv_vcf.simpleName}_panel_CDS.vcf | wc -l`\n\t\t\tpanel_CDS_INDEL_count=`grep -v ^# ${indel_vcf.simpleName}_panel_CDS.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel+CDS: %3f\\\\n\" \\${panel_CDS_SNV_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel+CDS : %3f\\\\n\" \\${panel_CDS_INDEL_count} >> TMB_panel_estimates.txt \n\n\t\t#Annotate calls with COSMIC\n\t\t\t${snpSift} annotate ${cosmic_vcf} ${snv_vcf.simpleName}_panel_CDS.vcf > ${snv_vcf.simpleName}_panel_CDS_cosmic.vcf\n\t\t\t${snpSift} annotate ${cosmic_vcf} ${indel_vcf.simpleName}_panel_CDS.vcf > ${indel_vcf.simpleName}_panel_CDS_cosmic.vcf\n\n\t\t#Remove COSMIC variants\n\t\t\t${snpSift} filter \"( ID !~ 'COS' )\"  ${snv_vcf.simpleName}_panel_CDS_cosmic.vcf > ${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf \n\t\t\t${snpSift} filter \"( ID !~ 'COS' )\"  ${indel_vcf.simpleName}_panel_CDS_cosmic.vcf > ${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf \n\t\t\tpanel_CDS_SNV_noCosmic_count=`grep -v ^# ${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | wc -l`\n\t\t\tpanel_CDS_INDEL_noCosmic_count=`grep -v ^# ${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel+CDS-COSMIC: %3f\\\\n\" \\${panel_CDS_SNV_noCosmic_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel+CDS-COSMIC : %3f\\\\n\" \\${panel_CDS_INDEL_noCosmic_count} >> TMB_panel_estimates.txt\n\n\t\t#Take the above (in panel, in CDS, not in COSMIC) and filter for specific TSG variants.\n\t\t# Looking for remaining nonsense SNVs in TSGs or protein changing INDELs\n\t\t\tTSG_nonsense_SNV=`${snpSift} filter -s /usr/TMB/TSG_list.txt \\\n\t\t\t\t\\\"(EFF[*].EFFECT has 'stop_gained') && (ANN[*].GENE in SET[0])\\\" \\\n\t\t\t\t${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | grep -v ^# | wc -l`\n\t\t\tTSG_protein_INDEL=`${snpSift} filter -s /usr/TMB/TSG_list.txt  \\\n\t\t\t\t\\\"(ANN[*].GENE in SET[0]) && ((EFF[*].IMPACT = 'LOW') | (EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH'))\\\" \\\n\t\t\t\t${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | grep -v ^# | wc -l`\n\t\t\tprintf \"NONSENSE SNVs in panel in TSG list not in COSMIC: %3f\\\\n\" \\${TSG_nonsense_SNV} >> TMB_panel_estimates.txt\n\t\t\tprintf \"Coding INDELs in panel in TSG list not in COSMIC: %3f\\\\n\" \\${TSG_protein_INDEL} >> TMB_panel_estimates.txt\n\n\t\t# calculate panel tmb after filtering cosmic mutations and tumour suppressor indels\n\t\t# Got the panel size estimate from Laura\n\t\t\tfm_tmb_mut_count=\\$(expr \\$panel_CDS_SNV_noCosmic_count + \\$panel_CDS_INDEL_noCosmic_count - \\$TSG_nonsense_SNV - \\$TSG_protein_INDEL)\n\t\t\tpanel_size=794514\n\t\t\tfm_tmb=\\$(echo \"scale=8; \\$fm_tmb_mut_count/\\$panel_size*1000000\" | bc)\n\t\t\tprintf \"Panel TMB estimate: %3.2f\\\\n\" \\$fm_tmb >> TMB_panel_estimates.txt \n\t\t\n\t\"\"\"\n\telse\n\t\"\"\"\n\t\techo \"No panel based counts reported because no COSMIC vcf was supplied\" >> TMB_panel_estimates.txt\n\t\"\"\"\n}",
        "nb_lignes_process": 82,
        "string_script": "\tif( cosmic_vcf.exists() )           \n\t\"\"\"\n\t\ttotal_CDS_bases=`cat ${cds_count}`\n\t\techo \"indel file: ${indel_vcf}\" > TMB_panel_estimates.txt\n\t\techo \"snv file: ${snv_vcf}\" >> TMB_panel_estimates.txt\n\n\t\t#Get variants in the panel genes\n\t\t\t${snpSift} filter -s /usr/TMB/panel_gene_list_20200218.txt \\\n\t\t\t\t\"(ANN[*].GENE in SET[0])\" \\\n\t\t\t\t${snv_vcf} > ${snv_vcf.simpleName}_panel.vcf\n\t\t\t${snpSift} filter -s /usr/TMB/panel_gene_list_20200218.txt \\\n\t\t\t\t\"(ANN[*].GENE in SET[0])\" \\\n\t\t\t\t${indel_vcf} > ${indel_vcf.simpleName}_panel.vcf\n\t\t\tpanel_SNV_count=`grep -v ^# ${snv_vcf.simpleName}_panel.vcf | wc -l`\n\t\t\tpanel_INDEL_count=`grep -v ^# ${indel_vcf.simpleName}_panel.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel: %3f\\\\n\" \\${panel_SNV_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel : %3f\\\\n\" \\${panel_INDEL_count} >> TMB_panel_estimates.txt \t\n\t\t \n\t\t#limit to the CDS of the genes in the panel\n\t\t\tbedtools intersect -a ${snv_vcf.simpleName}_panel.vcf -b ${cds_bed} -header > ${snv_vcf.simpleName}_panel_CDS.vcf\n\t\t\tbedtools intersect -a ${indel_vcf.simpleName}_panel.vcf -b ${cds_bed} -header > ${indel_vcf.simpleName}_panel_CDS.vcf\n\t\t\tpanel_CDS_SNV_count=`grep -v ^# ${snv_vcf.simpleName}_panel_CDS.vcf | wc -l`\n\t\t\tpanel_CDS_INDEL_count=`grep -v ^# ${indel_vcf.simpleName}_panel_CDS.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel+CDS: %3f\\\\n\" \\${panel_CDS_SNV_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel+CDS : %3f\\\\n\" \\${panel_CDS_INDEL_count} >> TMB_panel_estimates.txt \n\n\t\t#Annotate calls with COSMIC\n\t\t\t${snpSift} annotate ${cosmic_vcf} ${snv_vcf.simpleName}_panel_CDS.vcf > ${snv_vcf.simpleName}_panel_CDS_cosmic.vcf\n\t\t\t${snpSift} annotate ${cosmic_vcf} ${indel_vcf.simpleName}_panel_CDS.vcf > ${indel_vcf.simpleName}_panel_CDS_cosmic.vcf\n\n\t\t#Remove COSMIC variants\n\t\t\t${snpSift} filter \"( ID !~ 'COS' )\"  ${snv_vcf.simpleName}_panel_CDS_cosmic.vcf > ${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf \n\t\t\t${snpSift} filter \"( ID !~ 'COS' )\"  ${indel_vcf.simpleName}_panel_CDS_cosmic.vcf > ${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf \n\t\t\tpanel_CDS_SNV_noCosmic_count=`grep -v ^# ${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | wc -l`\n\t\t\tpanel_CDS_INDEL_noCosmic_count=`grep -v ^# ${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | wc -l`\n\t\t\tprintf \"SNVs in panel+CDS-COSMIC: %3f\\\\n\" \\${panel_CDS_SNV_noCosmic_count} >> TMB_panel_estimates.txt\n\t\t\tprintf \"INDELs in panel+CDS-COSMIC : %3f\\\\n\" \\${panel_CDS_INDEL_noCosmic_count} >> TMB_panel_estimates.txt\n\n\t\t#Take the above (in panel, in CDS, not in COSMIC) and filter for specific TSG variants.\n\t\t# Looking for remaining nonsense SNVs in TSGs or protein changing INDELs\n\t\t\tTSG_nonsense_SNV=`${snpSift} filter -s /usr/TMB/TSG_list.txt \\\n\t\t\t\t\\\"(EFF[*].EFFECT has 'stop_gained') && (ANN[*].GENE in SET[0])\\\" \\\n\t\t\t\t${snv_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | grep -v ^# | wc -l`\n\t\t\tTSG_protein_INDEL=`${snpSift} filter -s /usr/TMB/TSG_list.txt  \\\n\t\t\t\t\\\"(ANN[*].GENE in SET[0]) && ((EFF[*].IMPACT = 'LOW') | (EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH'))\\\" \\\n\t\t\t\t${indel_vcf.simpleName}_panel_CDS_cosmic_filt.vcf | grep -v ^# | wc -l`\n\t\t\tprintf \"NONSENSE SNVs in panel in TSG list not in COSMIC: %3f\\\\n\" \\${TSG_nonsense_SNV} >> TMB_panel_estimates.txt\n\t\t\tprintf \"Coding INDELs in panel in TSG list not in COSMIC: %3f\\\\n\" \\${TSG_protein_INDEL} >> TMB_panel_estimates.txt\n\n\t\t# calculate panel tmb after filtering cosmic mutations and tumour suppressor indels\n\t\t# Got the panel size estimate from Laura\n\t\t\tfm_tmb_mut_count=\\$(expr \\$panel_CDS_SNV_noCosmic_count + \\$panel_CDS_INDEL_noCosmic_count - \\$TSG_nonsense_SNV - \\$TSG_protein_INDEL)\n\t\t\tpanel_size=794514\n\t\t\tfm_tmb=\\$(echo \"scale=8; \\$fm_tmb_mut_count/\\$panel_size*1000000\" | bc)\n\t\t\tprintf \"Panel TMB estimate: %3.2f\\\\n\" \\$fm_tmb >> TMB_panel_estimates.txt \n\t\t\n\t\"\"\"\n\telse\n\t\"\"\"\n\t\techo \"No panel based counts reported because no COSMIC vcf was supplied\" >> TMB_panel_estimates.txt\n\t\"\"\"",
        "nb_lignes_script": 60,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "base_count",
            "cds_count",
            "cds_bed",
            "cosmic_vcf",
            "patient",
            "T",
            "N",
            "dont_use1",
            "dont_use2",
            "msi_out",
            "snv_vcf",
            "indel_vcf"
        ],
        "nb_inputs": 12,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/report\", mode: 'copy', overwrite: true",
            "memory '48 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "create_report": {
        "name_process": "create_report",
        "string_process": "\nprocess create_report {\n\ttag \"${patient}\"\n\tpublishDir \"${params.out_dir}/${patient}_${T}_${N}/report\", mode: 'copy', overwrite: true\n\t\n\tinput:\n\t\tpath(base_count) \n\t\tpath(cds_count)\n\t\tpath(cds_bed)\n\t\ttuple val(patient), val(T), val(N), val(dont_use1),\n\t\t\tpath(msi_out),\n\t\t\tval(dont_use2),\n\t\t\tpath(snv_vcf),\n\t\t\tpath(indel_vcf)\n\t\tval(release_val)\n\t\t\n\toutput:\n\t\ttuple val(patient), val(T), val(N), path(\"TMB_counts.txt\"), path(\"passed_SNV_AF_counts.txt\"),\n\t\t\tpath(\"passed_SNV_coding_AF_counts.txt\") \n\n\tscript:\n\t\"\"\"\n\t\techo \"TMB Pipeline ${release_val}\" > TMB_counts.txt\n\t\techo \"Config file ${params.samples_file}\" >> TMB_counts.txt\n\t\techo \"Patient: ${patient}\" >> TMB_counts.txt\n\t\techo \"Tumour: ${T}\" >> TMB_counts.txt\n\t\techo \"Normal: ${N}\" >> TMB_counts.txt\n\t\t\n\t\t#AF work - perhaps should go into its own process\n\t\tjava -jar /usr/TMB/snpEff//SnpSift.jar extractFields ${snv_vcf} GEN[1].AF > AF.csv\n\t\tfor i in \\$(seq 0 0.1 0.9); do \\\n\t\t\tcount=`awk -v var=\\$i '{if (\\$1 > var && \\$1 <= var+0.1 ) print \\$1}' AF.csv | wc -l`; \n\t\t\tprintf \"%s-%s %d\\\\n\"  \\$i \\$(echo \\$i + 0.1 | bc) \\$count; \n\t\tdone > passed_SNV_AF_counts.txt\n\n\t\tjava -Xmx16g -jar /usr/TMB/snpEff/SnpSift.jar filter \"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | \\\n\t\t\tjava -jar /usr/TMB/snpEff/SnpSift.jar extractFields - GEN[1].AF > AF_coding.csv\n\t\tfor i in \\$(seq 0 0.1 0.9); do \\\n\t\t\tcount=`awk -v var=\\$i '{if (\\$1 > var && \\$1 <= var+0.1 ) print \\$1}' AF_coding.csv | wc -l`; \n\t\t\tprintf \"%s-%s %d\\\\n\"  \\$i \\$(echo \\$i + 0.1 | bc) \\$count; \n\t\tdone > passed_SNV_coding_AF_counts.txt\n\n\t\t#GENOME WIDE TMB \n\t\t\t#uses coords from 1-22,X,Y with non-N reference bases\n\t\t\ttotal_bases=`cat ${base_count}`\n\t\t\ttotal_SNVs=`cat ${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\ttotal_Indels=`cat ${indel_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"Non-N bases in 1-22,X,Y: %d\\\\n\" \\${total_bases} >> TMB_counts.txt \n\t\t\tprintf \"Total genome SNVs: %d\\\\n\" \\${total_SNVs} >> TMB_counts.txt  \n\t\t\tprintf \"Total genome Indels: %d\\\\n\" \\${total_Indels} >> TMB_counts.txt  \n\t\t\tprintf \"Genome SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_SNVs} * 1000000 / \\${total_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"Genome Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_Indels} * 1000000 / \\${total_bases}\" | bc` >> TMB_counts.txt  \n\t\t\n\t\t#CDS COORDINATE TMB - simply bedtools intersect with CDS coords\n\t\t\ttotal_CDS_bases=`cat ${cds_count}`\n\t\t\ttotal_CDS_SNVs=`bedtools intersect -a ${snv_vcf} -b ${cds_bed} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\ttotal_CDS_Indels=`bedtools intersect -a ${indel_vcf} -b ${cds_bed} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"CDS bases in 1-22,X,Y: %d\\\\n\" \\${total_CDS_bases} >> TMB_counts.txt\n\t\t\tprintf \"CDS SNVs: %d\\\\n\" \\${total_CDS_SNVs} >> TMB_counts.txt  \n\t\t\tprintf \"CDS Indels: %d\\\\n\" \\${total_CDS_Indels} >> TMB_counts.txt\n\t\t\tprintf \"CDS SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_CDS_SNVs} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"CDS Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_CDS_Indels} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\n\t\t#CODING/PROTEIN TMB\n\t\t\ttotal_protein_SNVs=`${snpSift} filter \\\n\t\t\t\t\"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t\t${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n  \t\t\ttotal_protein_Indels=`${snpSift} filter \\\n\t\t  \t\t\"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t\t${indel_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"Protein SNVs: %d\\\\n\" \\${total_protein_SNVs} >> TMB_counts.txt\n\t\t\tprintf \"Protein INDELs: %d\\\\n\" \\${total_protein_Indels} >> TMB_counts.txt\n\t\t\tprintf \"Protein SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_protein_SNVs} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"Protein Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_protein_Indels} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\n\t\t#MSI \n\t\t\tmsi_score=`awk 'NR==2 { print \\$NF }' ${msi_out}`\n    \t\tprintf \"MSI score: %3.2f\\\\n\" \\${msi_score} >> TMB_counts.txt  \n\t\t\n\t\tprintf \"Report Complete!\" >> TMB_counts.txt  \n\t\"\"\"\n\n\n}",
        "nb_lignes_process": 83,
        "string_script": "\t\"\"\"\n\t\techo \"TMB Pipeline ${release_val}\" > TMB_counts.txt\n\t\techo \"Config file ${params.samples_file}\" >> TMB_counts.txt\n\t\techo \"Patient: ${patient}\" >> TMB_counts.txt\n\t\techo \"Tumour: ${T}\" >> TMB_counts.txt\n\t\techo \"Normal: ${N}\" >> TMB_counts.txt\n\t\t\n\t\t#AF work - perhaps should go into its own process\n\t\tjava -jar /usr/TMB/snpEff//SnpSift.jar extractFields ${snv_vcf} GEN[1].AF > AF.csv\n\t\tfor i in \\$(seq 0 0.1 0.9); do \\\n\t\t\tcount=`awk -v var=\\$i '{if (\\$1 > var && \\$1 <= var+0.1 ) print \\$1}' AF.csv | wc -l`; \n\t\t\tprintf \"%s-%s %d\\\\n\"  \\$i \\$(echo \\$i + 0.1 | bc) \\$count; \n\t\tdone > passed_SNV_AF_counts.txt\n\n\t\tjava -Xmx16g -jar /usr/TMB/snpEff/SnpSift.jar filter \"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | \\\n\t\t\tjava -jar /usr/TMB/snpEff/SnpSift.jar extractFields - GEN[1].AF > AF_coding.csv\n\t\tfor i in \\$(seq 0 0.1 0.9); do \\\n\t\t\tcount=`awk -v var=\\$i '{if (\\$1 > var && \\$1 <= var+0.1 ) print \\$1}' AF_coding.csv | wc -l`; \n\t\t\tprintf \"%s-%s %d\\\\n\"  \\$i \\$(echo \\$i + 0.1 | bc) \\$count; \n\t\tdone > passed_SNV_coding_AF_counts.txt\n\n\t\t#GENOME WIDE TMB \n\t\t\t#uses coords from 1-22,X,Y with non-N reference bases\n\t\t\ttotal_bases=`cat ${base_count}`\n\t\t\ttotal_SNVs=`cat ${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\ttotal_Indels=`cat ${indel_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"Non-N bases in 1-22,X,Y: %d\\\\n\" \\${total_bases} >> TMB_counts.txt \n\t\t\tprintf \"Total genome SNVs: %d\\\\n\" \\${total_SNVs} >> TMB_counts.txt  \n\t\t\tprintf \"Total genome Indels: %d\\\\n\" \\${total_Indels} >> TMB_counts.txt  \n\t\t\tprintf \"Genome SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_SNVs} * 1000000 / \\${total_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"Genome Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_Indels} * 1000000 / \\${total_bases}\" | bc` >> TMB_counts.txt  \n\t\t\n\t\t#CDS COORDINATE TMB - simply bedtools intersect with CDS coords\n\t\t\ttotal_CDS_bases=`cat ${cds_count}`\n\t\t\ttotal_CDS_SNVs=`bedtools intersect -a ${snv_vcf} -b ${cds_bed} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\ttotal_CDS_Indels=`bedtools intersect -a ${indel_vcf} -b ${cds_bed} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"CDS bases in 1-22,X,Y: %d\\\\n\" \\${total_CDS_bases} >> TMB_counts.txt\n\t\t\tprintf \"CDS SNVs: %d\\\\n\" \\${total_CDS_SNVs} >> TMB_counts.txt  \n\t\t\tprintf \"CDS Indels: %d\\\\n\" \\${total_CDS_Indels} >> TMB_counts.txt\n\t\t\tprintf \"CDS SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_CDS_SNVs} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"CDS Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_CDS_Indels} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\n\t\t#CODING/PROTEIN TMB\n\t\t\ttotal_protein_SNVs=`${snpSift} filter \\\n\t\t\t\t\"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t\t${snv_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n  \t\t\ttotal_protein_Indels=`${snpSift} filter \\\n\t\t  \t\t\"(EFF[*].IMPACT = 'MODERATE') | (EFF[*].IMPACT = 'HIGH')\" \\\n\t\t\t\t${indel_vcf} | grep -E '^[1234567890XY]{1,2}\\\\s' | wc -l`\n\t\t\tprintf \"Protein SNVs: %d\\\\n\" \\${total_protein_SNVs} >> TMB_counts.txt\n\t\t\tprintf \"Protein INDELs: %d\\\\n\" \\${total_protein_Indels} >> TMB_counts.txt\n\t\t\tprintf \"Protein SNV TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_protein_SNVs} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\t\t\tprintf \"Protein Indel TMB: %3.2f\\\\n\" `echo \"scale=8; \\${total_protein_Indels} * 1000000 / \\${total_CDS_bases}\" | bc` >> TMB_counts.txt  \n\n\t\t#MSI \n\t\t\tmsi_score=`awk 'NR==2 { print \\$NF }' ${msi_out}`\n    \t\tprintf \"MSI score: %3.2f\\\\n\" \\${msi_score} >> TMB_counts.txt  \n\t\t\n\t\tprintf \"Report Complete!\" >> TMB_counts.txt  \n\t\"\"\"",
        "nb_lignes_script": 60,
        "language_script": "bash",
        "tools": [
            "KvarQ",
            "ProteinDBS"
        ],
        "tools_url": [
            "https://bio.tools/kvarq",
            "https://bio.tools/proteindbs"
        ],
        "tools_dico": [
            {
                "name": "KvarQ",
                "uri": "https://bio.tools/kvarq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This program performs rapid in silico genotyping for selected loci (e.g. phylogenetic SNPs, drug resistance mutations) in bacterial genome sequences in FastQ format. Mapping to a whole-genome reference sequence or de novo assembly or the short reads is not necessary.",
                "homepage": "https://www.swisstph.ch/en/about/mpi/tuberculosis-research/kvarq-targeted-and-direct-variant-calling-in-fastq-reads-of-bacterial-genomes/"
            },
            {
                "name": "ProteinDBS",
                "uri": "https://bio.tools/proteindbs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein structural motifs and surfaces"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein 3D motifs"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2487",
                                    "term": "Protein structure comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0295",
                                    "term": "Structure alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0510",
                                    "term": "Global structure alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0360",
                                    "term": "Structural similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2487",
                                    "term": "Structure comparison (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0295",
                                    "term": "Structural alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0510",
                                    "term": "Structure alignment (global)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0360",
                                    "term": "Structure database search (by structure)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0360",
                                    "term": "Structure retrieval by structure"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "ProteinDBS takes a PDB ID or structure as input, and searches for similar protein tertiary structures using computer visualization techniques.  The superposition of structures and the aligned component of the sequence can then be viewed over the web. ProteinDBS v2.0 applies advanced feature extraction algorithms and scalable indexing techniques to achieve a fast computation time.",
                "homepage": "http://proteindbs.rnet.missouri.edu/"
            }
        ],
        "inputs": [
            "base_count",
            "cds_count",
            "cds_bed",
            "patient",
            "T",
            "N",
            "dont_use1",
            "dont_use2",
            "msi_out",
            "snv_vcf",
            "indel_vcf",
            "release_val"
        ],
        "nb_inputs": 12,
        "outputs": [
            "N"
        ],
        "nb_outputs": 1,
        "name_workflow": "bcgsc__TMBur",
        "directive": [
            "tag \"${patient}\"",
            "publishDir \"${params.out_dir}/${patient}_${T}_${N}/report\", mode: 'copy', overwrite: true"
        ],
        "when": "",
        "stub": ""
    }
}