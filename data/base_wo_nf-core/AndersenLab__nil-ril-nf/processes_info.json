{
    "generate_sitelist": {
        "name_process": "generate_sitelist",
        "string_process": "\nprocess generate_sitelist {\n\n    publishDir params.out + \"/sitelist\", mode: 'copy'\n    \n    input:\n        file(\"parental.vcf.gz\")\n\n    output:\n        tuple file(\"${params.A}.${params.B}.sitelist.tsv.gz\"), file(\"${params.A}.${params.B}.sitelist.tsv.gz.tbi\"), emit: site_list\n        tuple val(\"merge\"), file(\"${params.A}.${params.B}.parental.vcf.gz\"), file(\"${params.A}.${params.B}.parental.vcf.gz.csi\"), emit: parental_vcf_only\n\n    \"\"\"\n    # Generate parental VCF\n    bcftools view --samples ${params.A},${params.B} -m 2 -M 2 parental.vcf.gz | \\\\\n    awk '\\$0 ~ \"^#\" || (\\$0 ~ \"0/0\" && \\$0 ~ \"1/1\") { print }' | \\\\\n    bcftools filter -O z --include 'FORMAT/GT == \"0/0\" || FORMAT/GT == \"1/1\"' > ${params.A}.${params.B}.parental.vcf.gz\n    bcftools index ${params.A}.${params.B}.parental.vcf.gz\n    # Generate Sitelist\n    bcftools query --include 'FORMAT/GT == \"0/0\" || FORMAT/GT == \"1/1\"' -f \"%CHROM\\\\t%POS\\\\t%REF,%ALT\\\\n\" ${params.A}.${params.B}.parental.vcf.gz > ${params.A}.${params.B}.sitelist.tsv\n    bgzip ${params.A}.${params.B}.sitelist.tsv\n    tabix -s 1 -b 2 -e 2 ${params.A}.${params.B}.sitelist.tsv.gz\n    \"\"\"   \n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    # Generate parental VCF\n    bcftools view --samples ${params.A},${params.B} -m 2 -M 2 parental.vcf.gz | \\\\\n    awk '\\$0 ~ \"^#\" || (\\$0 ~ \"0/0\" && \\$0 ~ \"1/1\") { print }' | \\\\\n    bcftools filter -O z --include 'FORMAT/GT == \"0/0\" || FORMAT/GT == \"1/1\"' > ${params.A}.${params.B}.parental.vcf.gz\n    bcftools index ${params.A}.${params.B}.parental.vcf.gz\n    # Generate Sitelist\n    bcftools query --include 'FORMAT/GT == \"0/0\" || FORMAT/GT == \"1/1\"' -f \"%CHROM\\\\t%POS\\\\t%REF,%ALT\\\\n\" ${params.A}.${params.B}.parental.vcf.gz > ${params.A}.${params.B}.sitelist.tsv\n    bgzip ${params.A}.${params.B}.sitelist.tsv\n    tabix -s 1 -b 2 -e 2 ${params.A}.${params.B}.sitelist.tsv.gz\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "PGT"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/pgt"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "PGT",
                "uri": "https://bio.tools/pgt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software to find motifs using random projections.",
                "homepage": "http://www1.cse.wustl.edu/~jbuhler/pgt/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/sitelist\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "kmer_counting": {
        "name_process": "kmer_counting",
        "string_process": "\nprocess kmer_counting {\n\n    container null\n\n    cpus params.cores\n\n    tag { ID }\n\n    input:\n        tuple SM, ID, LB, fq1, fq2\n    output:\n        file(\"${ID}.kmer.tsv\")\n\n    \"\"\"\n    # fqs will have same number of lines\n    export OFS=\"\\t\"\n    fq_wc=\"`zcat ${fq1} | awk 'NR % 4 == 0' | wc -l`\"\n    zcat ${fq1} ${fq2} | fastq-kmers -k 6 | awk -v OFS=\"\\t\" -v ID=${ID} -v SM=${SM} -v fq_wc=\"\\${fq_wc}\" 'NR > 1 { print \\$0, SM, ID, fq_wc }' - > ${ID}.kmer.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    # fqs will have same number of lines\n    export OFS=\"\\t\"\n    fq_wc=\"`zcat ${fq1} | awk 'NR % 4 == 0' | wc -l`\"\n    zcat ${fq1} ${fq2} | fastq-kmers -k 6 | awk -v OFS=\"\\t\" -v ID=${ID} -v SM=${SM} -v fq_wc=\"\\${fq_wc}\" 'NR > 1 { print \\$0, SM, ID, fq_wc }' - > ${ID}.kmer.tsv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "container null",
            "cpus params.cores",
            "tag { ID }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_kmer": {
        "name_process": "merge_kmer",
        "string_process": "\nprocess merge_kmer {\n    \n    publishDir params.out + \"/phenotype\", mode: 'copy'\n\n    input:\n        file(\"kmer*.tsv\")\n\n    output:\n        file(\"kmers.tsv\")\n\n    \"\"\"\n        cat <(echo \"kmer\\tfrequency\\tSM\\tID\\twc\") *.tsv > kmers.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        cat <(echo \"kmer\\tfrequency\\tSM\\tID\\twc\") *.tsv > kmers.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/phenotype\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "perform_alignment": {
        "name_process": "perform_alignment",
        "string_process": "\nprocess perform_alignment {\n\n    cpus params.cores\n\n    tag { ID }\n\n    input:\n        tuple SM, ID, LB, fq1, fq2\n\n    output:\n        tuple SM, ID, LB, file(\"${ID}.bam\"), file(\"${ID}.bam.bai\"), emit: aligned_bams\n        tuple SM, file(\"${ID}.bam\"), emit: sample_aligned_bams\n\n    \"\"\"\n        bwa mem -t ${task.cpus} -R '@RG\\\\tID:${ID}\\\\tLB:${LB}\\\\tSM:${SM}' ${reference_handle} ${fq1} ${fq2} | \\\\\n        sambamba view --nthreads=${task.cpus} --show-progress --sam-input --format=bam --with-header /dev/stdin | \\\\\n        sambamba sort --nthreads=${task.cpus} --show-progress --tmpdir=${params.tmpdir} --out=${ID}.bam /dev/stdin 2>&1\n        sambamba index --nthreads=${task.cpus} ${ID}.bam\n        if [[ ! \\$(samtools view ${ID}.bam | head -n 10) ]]; then\n            exit 1;\n        fi\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n        bwa mem -t ${task.cpus} -R '@RG\\\\tID:${ID}\\\\tLB:${LB}\\\\tSM:${SM}' ${reference_handle} ${fq1} ${fq2} | \\\\\n        sambamba view --nthreads=${task.cpus} --show-progress --sam-input --format=bam --with-header /dev/stdin | \\\\\n        sambamba sort --nthreads=${task.cpus} --show-progress --tmpdir=${params.tmpdir} --out=${ID}.bam /dev/stdin 2>&1\n        sambamba index --nthreads=${task.cpus} ${ID}.bam\n        if [[ ! \\$(samtools view ${ID}.bam | head -n 10) ]]; then\n            exit 1;\n        fi\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BWA",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "cpus params.cores",
            "tag { ID }"
        ],
        "when": "",
        "stub": ""
    },
    "fq_idx_stats": {
        "name_process": "fq_idx_stats",
        "string_process": "\nprocess fq_idx_stats {\n    \n    tag { ID }\n\n    input:\n        tuple SM, ID, LB, file(\"${ID}.bam\"), file(\"${ID}.bam.bai\")\n\n    output:\n        file 'fq_idxstats'\n\n    \"\"\"\n        samtools idxstats ${ID}.bam | awk '{ print \"${ID}\\\\t\" \\$0 }' > fq_idxstats\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n        samtools idxstats ${ID}.bam | awk '{ print \"${ID}\\\\t\" \\$0 }' > fq_idxstats\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { ID }"
        ],
        "when": "",
        "stub": ""
    },
    "fq_combine_idx_stats": {
        "name_process": "fq_combine_idx_stats",
        "string_process": "\nprocess fq_combine_idx_stats {\n\n    publishDir params.out + \"/fq\", mode: 'copy'\n\n    input:\n        val bam_idxstats\n\n    output:\n        file(\"fq_bam_idxstats.tsv\")\n\n    \"\"\"\n        echo -e \"SM\\\\treference\\\\treference_length\\\\tmapped_reads\\\\tunmapped_reads\" > fq_bam_idxstats.tsv\n        cat ${bam_idxstats.join(\" \")} >> fq_bam_idxstats.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        echo -e \"SM\\\\treference\\\\treference_length\\\\tmapped_reads\\\\tunmapped_reads\" > fq_bam_idxstats.tsv\n        cat ${bam_idxstats.join(\" \")} >> fq_bam_idxstats.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_idxstats"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/fq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fq_bam_stats": {
        "name_process": "fq_bam_stats",
        "string_process": "\nprocess fq_bam_stats {\n\n    tag { ID }\n\n    input:\n        tuple SM, ID, LB, file(\"${ID}.bam\"), file(\"${ID}.bam.bai\")\n\n    output:\n        file 'bam_stat'\n\n    \"\"\"\n        cat <(samtools stats ${ID}.bam | grep ^SN | cut -f 2- | awk '{ print \"${ID}\\t\" \\$0 }' | sed 's/://g') > bam_stat\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n        cat <(samtools stats ${ID}.bam | grep ^SN | cut -f 2- | awk '{ print \"${ID}\\t\" \\$0 }' | sed 's/://g') > bam_stat\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { ID }"
        ],
        "when": "",
        "stub": ""
    },
    "combine_bam_stats": {
        "name_process": "combine_bam_stats",
        "string_process": "\nprocess combine_bam_stats {\n\n    publishDir params.out + \"/fq\", mode: 'copy'\n\n    input:\n        val stat_files\n\n    output:\n        file(\"fq_bam_stats.tsv\")\n\n    \"\"\"\n        echo -e \"fq_pair_id\\\\tvariable\\\\tvalue\\\\tcomment\" > fq_bam_stats.tsv\n        cat ${stat_files.join(\" \")} >> fq_bam_stats.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        echo -e \"fq_pair_id\\\\tvariable\\\\tvalue\\\\tcomment\" > fq_bam_stats.tsv\n        cat ${stat_files.join(\" \")} >> fq_bam_stats.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "stat_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/fq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fq_coverage": {
        "name_process": "fq_coverage",
        "string_process": "\nprocess fq_coverage {\n\n    tag { ID }\n\n    input:\n        tuple SM, ID, LB, file(\"${ID}.bam\"), file(\"${ID}.bam.bai\")\n    output:\n        file(\"${ID}.coverage.tsv\")\n\n\n    \"\"\"\n        bam coverage ${ID}.bam > ${ID}.coverage.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n        bam coverage ${ID}.bam > ${ID}.coverage.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BaMM"
        ],
        "tools_url": [
            "https://bio.tools/bamm"
        ],
        "tools_dico": [
            {
                "name": "BaMM",
                "uri": "https://bio.tools/bamm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence motif recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Sequence motif discovery"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Motif scanning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Motif discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "de-novo motif discovery and regulatory sequence analysis.\nDiscovery of regulatory motifs with higher-order Bayesian Markov Models (BaMMs)",
                "homepage": "https://bammmotif.mpibpc.mpg.de"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { ID }"
        ],
        "when": "",
        "stub": ""
    },
    "fq_coverage_merge": {
        "name_process": "fq_coverage_merge",
        "string_process": "\nprocess fq_coverage_merge {\n\n    publishDir params.out + \"/fq\", mode: 'copy'\n\n    input:\n        val fq_set\n\n    output:\n        file(\"fq_coverage.full.tsv\")\n        path \"fq_coverage.tsv\", emit: fq_coverage_plot\n\n    \"\"\"\n        echo -e 'bam\\\\tcontig\\\\tstart\\\\tend\\\\tproperty\\\\tvalue' > fq_coverage.full.tsv\n        cat ${fq_set.join(\" \")} >> fq_coverage.full.tsv\n        cat <(echo -e 'fq\\\\tcoverage') <( cat fq_coverage.full.tsv | grep 'genome' | grep 'depth_of_coverage' | cut -f 1,6) > fq_coverage.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n        echo -e 'bam\\\\tcontig\\\\tstart\\\\tend\\\\tproperty\\\\tvalue' > fq_coverage.full.tsv\n        cat ${fq_set.join(\" \")} >> fq_coverage.full.tsv\n        cat <(echo -e 'fq\\\\tcoverage') <( cat fq_coverage.full.tsv | grep 'genome' | grep 'depth_of_coverage' | cut -f 1,6) > fq_coverage.tsv\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fq_set"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/fq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fq_concordance": {
        "name_process": "fq_concordance",
        "string_process": "\nprocess fq_concordance {\n\n    cpus params.cores\n    echo true\n    tag { SM }\n\n    input:\n        tuple val(SM), val(ID), val(LIB), file(\"input.bam\"), file(\"input.bam.bai\"), file('sitelist.tsv.gz'), file('sitelist.tsv.gz.tbi')\n\n    output:\n        file('out.tsv')\n\n    \"\"\"\n        # Split bam file into individual read groups; Ignore MtDNA\n        contigs=\"`samtools view -H input.bam | awk '\\$0 ~ \"^@SQ\" { gsub(\"SN:\", \"\", \\$2); print \\$2 }' | grep -v 'MtDNA' | tr ' ' '\\\\n'`\"\n        rg_list=\"`samtools view -H input.bam | awk '\\$0 ~ \"^@RG\"' | grep -oP 'ID:([^ \\\\t]+)' | sed 's/ID://g'`\"\n        samtools split -f '%!.%.' input.bam\n        # DO NOT INDEX ORIGINAL BAM; ELIMINATES CACHE!\n        bam_list=\"`ls -1 *.bam | grep -v 'input.bam'`\"\n        ls -1 *.bam | grep -v 'input.bam' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools index {}\"\n        # Call a union set of variants\n        for rg in \\$rg_list; do\n            echo \\${contigs} | tr ' ' '\\\\n' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools mpileup --redo-BAQ -r {} --BCF --output-tags DP,AD,ADF,ADR,SP --fasta-ref ${reference_handle} \\${rg}.bam | bcftools call -T sitelist.tsv.gz --skip-variants indels --multiallelic-caller -O z > {}.\\${rg}.vcf.gz\"\n            order=`echo \\${contigs} | tr ' ' '\\\\n' | awk -v rg=\\${rg} '{ print \\$1 \".\" rg \".vcf.gz\" }'`\n            # Output variant sites\n            bcftools concat \\${order} -O v | \\\\\n            vk geno het-polarization - | \\\\\n            bcftools query -f '%CHROM\\\\t%POS[\\\\t%GT\\\\t${SM}\\\\n]' | grep -v '0/1' | awk -v rg=\\${rg} '{ print \\$0 \"\\\\t\" rg }' > \\${rg}.rg_gt.tsv\n        done;\n        cat *.rg_gt.tsv > rg_gt.tsv\n        touch out.tsv\n        Rscript --vanilla ${workflow.projectDir}/bin/fq_concordance.R\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\"\"\"\n        # Split bam file into individual read groups; Ignore MtDNA\n        contigs=\"`samtools view -H input.bam | awk '\\$0 ~ \"^@SQ\" { gsub(\"SN:\", \"\", \\$2); print \\$2 }' | grep -v 'MtDNA' | tr ' ' '\\\\n'`\"\n        rg_list=\"`samtools view -H input.bam | awk '\\$0 ~ \"^@RG\"' | grep -oP 'ID:([^ \\\\t]+)' | sed 's/ID://g'`\"\n        samtools split -f '%!.%.' input.bam\n        # DO NOT INDEX ORIGINAL BAM; ELIMINATES CACHE!\n        bam_list=\"`ls -1 *.bam | grep -v 'input.bam'`\"\n        ls -1 *.bam | grep -v 'input.bam' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools index {}\"\n        # Call a union set of variants\n        for rg in \\$rg_list; do\n            echo \\${contigs} | tr ' ' '\\\\n' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools mpileup --redo-BAQ -r {} --BCF --output-tags DP,AD,ADF,ADR,SP --fasta-ref ${reference_handle} \\${rg}.bam | bcftools call -T sitelist.tsv.gz --skip-variants indels --multiallelic-caller -O z > {}.\\${rg}.vcf.gz\"\n            order=`echo \\${contigs} | tr ' ' '\\\\n' | awk -v rg=\\${rg} '{ print \\$1 \".\" rg \".vcf.gz\" }'`\n            # Output variant sites\n            bcftools concat \\${order} -O v | \\\\\n            vk geno het-polarization - | \\\\\n            bcftools query -f '%CHROM\\\\t%POS[\\\\t%GT\\\\t${SM}\\\\n]' | grep -v '0/1' | awk -v rg=\\${rg} '{ print \\$0 \"\\\\t\" rg }' > \\${rg}.rg_gt.tsv\n        done;\n        cat *.rg_gt.tsv > rg_gt.tsv\n        touch out.tsv\n        Rscript --vanilla ${workflow.projectDir}/bin/fq_concordance.R\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BCFtools",
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bcftools",
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [
            "SM",
            "ID",
            "LIB"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "cpus params.cores",
            "echo true",
            "tag { SM }"
        ],
        "when": "",
        "stub": ""
    },
    "combine_fq_concordance": {
        "name_process": "combine_fq_concordance",
        "string_process": "\nprocess combine_fq_concordance {\n\n    publishDir params.out + \"/concordance\", mode: 'copy', overwrite: true\n\n    input:\n        file(\"out*.tsv\")\n\n    output:\n        file(\"fq_concordance.tsv\")\n\n    \"\"\"\n        cat <(echo 'a\\tb\\tconcordant_sites\\ttotal_sites\\tconcordance\\tSM') out*.tsv > fq_concordance.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        cat <(echo 'a\\tb\\tconcordant_sites\\ttotal_sites\\tconcordance\\tSM') out*.tsv > fq_concordance.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/concordance\", mode: 'copy', overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "merge_bam": {
        "name_process": "merge_bam",
        "string_process": "\nprocess merge_bam {\n\n    echo true\n\n    storeDir params.out + \"/bam\"\n\n    tag { SM }\n\n    cpus params.cores\n\n    memory { 16.GB * task.attempt }\n\n    errorStrategy { task.exitStatus == 137 ? 'retry' : 'terminate' }\n\n    input:\n        tuple SM, bam \n\n    output:\n        tuple val(SM), file(\"${SM}.bam\"), file(\"${SM}.bam.bai\"), emit: merged_SM\n        path \"${SM}.duplicates.txt\", emit: duplicates_file\n\n    \"\"\"\n    count=`echo ${bam.join(\" \")} | tr ' ' '\\\\n' | wc -l`\n    if [ \"\\${count}\" -eq \"1\" ]; then\n        ln -s ${bam[0]} ${SM}.merged.bam\n        ln -s ${bam[0]}.bai ${SM}.merged.bam.bai\n    else\n        sambamba merge --nthreads=${task.cpus} --show-progress ${SM}.merged.bam ${bam.join(\" \")}\n        sambamba index --nthreads=${task.cpus} ${SM}.merged.bam\n    fi\n    picard MarkDuplicates I=${SM}.merged.bam O=${SM}.bam M=${SM}.duplicates.txt VALIDATION_STRINGENCY=SILENT REMOVE_DUPLICATES=false\n    sambamba index --nthreads=${task.cpus} ${SM}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\"\"\"\n    count=`echo ${bam.join(\" \")} | tr ' ' '\\\\n' | wc -l`\n    if [ \"\\${count}\" -eq \"1\" ]; then\n        ln -s ${bam[0]} ${SM}.merged.bam\n        ln -s ${bam[0]}.bai ${SM}.merged.bam.bai\n    else\n        sambamba merge --nthreads=${task.cpus} --show-progress ${SM}.merged.bam ${bam.join(\" \")}\n        sambamba index --nthreads=${task.cpus} ${SM}.merged.bam\n    fi\n    picard MarkDuplicates I=${SM}.merged.bam O=${SM}.bam M=${SM}.duplicates.txt VALIDATION_STRINGENCY=SILENT REMOVE_DUPLICATES=false\n    sambamba index --nthreads=${task.cpus} ${SM}.bam\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Sambamba",
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/sambamba",
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "echo true",
            "storeDir params.out + \"/bam\"",
            "tag { SM }",
            "cpus params.cores",
            "memory { 16.GB * task.attempt }",
            "errorStrategy { task.exitStatus == 137 ? 'retry' : 'terminate' }"
        ],
        "when": "",
        "stub": ""
    },
    "idx_stats_SM": {
        "name_process": "idx_stats_SM",
        "string_process": "\nprocess idx_stats_SM {\n    \n    tag { SM }\n\n    input:\n        tuple SM, file(\"${SM}.bam\"), file(\"${SM}.bam.bai\")\n    output:\n        file 'SM_bam_idxstats'\n\n    \"\"\"\n        samtools idxstats ${SM}.bam | awk '{ print \"${SM}\\\\t\" \\$0 }' > SM_bam_idxstats\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n        samtools idxstats ${SM}.bam | awk '{ print \"${SM}\\\\t\" \\$0 }' > SM_bam_idxstats\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { SM }"
        ],
        "when": "",
        "stub": ""
    },
    "combine_idx_stats": {
        "name_process": "combine_idx_stats",
        "string_process": "\nprocess combine_idx_stats {\n\n    publishDir params.out +\"/SM\", mode: 'copy'\n\n    input:\n        val bam_idxstats\n\n    output:\n        file(\"SM_bam_idxstats.tsv\")\n\n    \"\"\"\n        echo -e \"SM\\\\treference\\\\treference_length\\\\tmapped_reads\\\\tunmapped_reads\" > SM_bam_idxstats.tsv\n        cat ${bam_idxstats.join(\" \")} >> SM_bam_idxstats.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        echo -e \"SM\\\\treference\\\\treference_length\\\\tmapped_reads\\\\tunmapped_reads\" > SM_bam_idxstats.tsv\n        cat ${bam_idxstats.join(\" \")} >> SM_bam_idxstats.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_idxstats"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out +\"/SM\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "SM_bam_stats": {
        "name_process": "SM_bam_stats",
        "string_process": "\nprocess SM_bam_stats {\n\n    tag { SM }\n\n    input:\n        tuple SM, file(\"${SM}.bam\"), file(\"${SM}.bam.bai\")\n\n    output:\n        file 'bam_stat' \n\n    \"\"\"\n        cat <(samtools stats ${SM}.bam | grep ^SN | cut -f 2- | awk '{ print \"${SM}\\t\" \\$0 }' | sed 's/://g') > bam_stat\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n        cat <(samtools stats ${SM}.bam | grep ^SN | cut -f 2- | awk '{ print \"${SM}\\t\" \\$0 }' | sed 's/://g') > bam_stat\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { SM }"
        ],
        "when": "",
        "stub": ""
    },
    "combine_SM_bam_stats": {
        "name_process": "combine_SM_bam_stats",
        "string_process": "\nprocess combine_SM_bam_stats {\n\n    publishDir params.out + \"/SM\", mode: 'copy'\n\n    input:\n        val stat_files\n\n    output:\n        file(\"SM_bam_stats.tsv\")\n\n    \"\"\"\n        echo -e \"fq_pair_id\\\\tvariable\\\\tvalue\\\\tcomment\" > SM_bam_stats.tsv\n        cat ${stat_files.join(\" \")} >> SM_bam_stats.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        echo -e \"fq_pair_id\\\\tvariable\\\\tvalue\\\\tcomment\" > SM_bam_stats.tsv\n        cat ${stat_files.join(\" \")} >> SM_bam_stats.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "stat_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/SM\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "format_duplicates": {
        "name_process": "format_duplicates",
        "string_process": "\nprocess format_duplicates {\n\n    publishDir params.out + \"/duplicates\", mode: 'copy'\n\n    input:\n        val duplicates_set \n\n    output:\n        file(\"bam_duplicates.tsv\")\n\n    \"\"\"\n        echo -e 'filename\\\\tlibrary\\\\tunpaired_reads_examined\\\\tread_pairs_examined\\\\tsecondary_or_supplementary_rds\\\\tunmapped_reads\\\\tunpaired_read_duplicates\\\\tread_pair_duplicates\\\\tread_pair_optical_duplicates\\\\tpercent_duplication\\\\testimated_library_size' > bam_duplicates.tsv\n        for i in ${duplicates_set.join(\" \")}; do\n            f=\\$(basename \\${i})\n            cat \\${i} | awk -v f=\\${f/.duplicates.txt/} 'NR >= 8 && \\$0 !~ \"##.*\" && \\$0 != \"\"  { print f \"\\\\t\" \\$0 } NR >= 8 && \\$0 ~ \"##.*\" { exit }'  >> bam_duplicates.tsv\n        done;\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n        echo -e 'filename\\\\tlibrary\\\\tunpaired_reads_examined\\\\tread_pairs_examined\\\\tsecondary_or_supplementary_rds\\\\tunmapped_reads\\\\tunpaired_read_duplicates\\\\tread_pair_duplicates\\\\tread_pair_optical_duplicates\\\\tpercent_duplication\\\\testimated_library_size' > bam_duplicates.tsv\n        for i in ${duplicates_set.join(\" \")}; do\n            f=\\$(basename \\${i})\n            cat \\${i} | awk -v f=\\${f/.duplicates.txt/} 'NR >= 8 && \\$0 !~ \"##.*\" && \\$0 != \"\"  { print f \"\\\\t\" \\$0 } NR >= 8 && \\$0 ~ \"##.*\" { exit }'  >> bam_duplicates.tsv\n        done;\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "duplicates_set"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/duplicates\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "SM_coverage": {
        "name_process": "SM_coverage",
        "string_process": "\nprocess SM_coverage {\n\n    tag { SM }\n\n    input:\n        tuple SM, file(\"${SM}.bam\"), file(\"${SM}.bam.bai\") \n\n    output:\n        file(\"${SM}.coverage.tsv\")\n\n    \"\"\"\n        bam coverage ${SM}.bam > ${SM}.coverage.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n        bam coverage ${SM}.bam > ${SM}.coverage.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BaMM"
        ],
        "tools_url": [
            "https://bio.tools/bamm"
        ],
        "tools_dico": [
            {
                "name": "BaMM",
                "uri": "https://bio.tools/bamm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence motif recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Sequence motif discovery"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Motif scanning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Motif discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "de-novo motif discovery and regulatory sequence analysis.\nDiscovery of regulatory motifs with higher-order Bayesian Markov Models (BaMMs)",
                "homepage": "https://bammmotif.mpibpc.mpg.de"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { SM }"
        ],
        "when": "",
        "stub": ""
    },
    "SM_coverage_merge": {
        "name_process": "SM_coverage_merge",
        "string_process": "\nprocess SM_coverage_merge {\n\n    publishDir params.out + \"/SM\", mode: 'copy'\n\n\n    input:\n        val sm_set \n\n    output:\n        file(\"SM_coverage.full.tsv\")\n        path \"SM_coverage.tsv\", emit: SM_coverage_plot\n\n    \"\"\"\n        echo -e 'SM\\\\tcontig\\\\tstart\\\\tend\\\\tproperty\\\\tvalue' > SM_coverage.full.tsv\n        cat ${sm_set.join(\" \")} >> SM_coverage.full.tsv\n        # Generate condensed version\n        cat <(echo -e 'strain\\\\tcoverage') <(cat SM_coverage.full.tsv | grep 'genome' | grep 'depth_of_coverage' | cut -f 1,6) > SM_coverage.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n        echo -e 'SM\\\\tcontig\\\\tstart\\\\tend\\\\tproperty\\\\tvalue' > SM_coverage.full.tsv\n        cat ${sm_set.join(\" \")} >> SM_coverage.full.tsv\n        # Generate condensed version\n        cat <(echo -e 'strain\\\\tcoverage') <(cat SM_coverage.full.tsv | grep 'genome' | grep 'depth_of_coverage' | cut -f 1,6) > SM_coverage.tsv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sm_set"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/SM\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "call_variants_union": {
        "name_process": "call_variants_union",
        "string_process": "\nprocess call_variants_union {\n\n    echo true\n\n    cpus params.cores\n\n    tag { SM }\n\n    stageInMode 'copy'\n\n    input:\n        tuple SM, file(\"${SM}.bam\"), file(\"${SM}.bam.bai\"), file('sitelist.tsv.gz'), file('sitelist.tsv.gz.tbi')\n\n    output:\n        val SM, emit: union_vcf_SM\n        path \"${SM}.union.vcf.gz\", emit: union_vcf_set\n        path \"${SM}.union.vcf.gz.csi\", emit: union_vcf_set_indices\n\n    \"\"\"\n        # Re-index the sitelist...because\n        # tabix -s 1 -b 2 -e 2 -f sitelist.tsv.gz\n        \n        contigs=\"`samtools view -H ${SM}.bam | grep -Po 'SN:([^\\\\W]+)' | cut -c 4-40`\"\n        echo \\${contigs} | tr ' ' '\\\\n' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools mpileup --redo-BAQ --region {} --BCF --output-tags DP,AD,ADF,ADR,INFO/AD,SP --fasta-ref ${reference_handle} ${SM}.bam | bcftools call -T sitelist.tsv.gz --skip-variants indels  --multiallelic-caller -O z  -  > ${SM}.{}.union.vcf.gz\"\n        order=`echo \\${contigs} | tr ' ' '\\\\n' | awk '{ print \"${SM}.\" \\$1 \".union.vcf.gz\" }'`\n        # Output variant sites\n        bcftools concat \\${order} -O v | \\\\\n        vk geno het-polarization - | \\\\\n        bcftools view -O z > ${SM}.union.vcf.gz\n        bcftools index ${SM}.union.vcf.gz\n        rm \\${order}\n    \"\"\"\n\n}",
        "nb_lignes_process": 33,
        "string_script": "\"\"\"\n        # Re-index the sitelist...because\n        # tabix -s 1 -b 2 -e 2 -f sitelist.tsv.gz\n        \n        contigs=\"`samtools view -H ${SM}.bam | grep -Po 'SN:([^\\\\W]+)' | cut -c 4-40`\"\n        echo \\${contigs} | tr ' ' '\\\\n' | xargs --verbose -I {} -P ${task.cpus} sh -c \"samtools mpileup --redo-BAQ --region {} --BCF --output-tags DP,AD,ADF,ADR,INFO/AD,SP --fasta-ref ${reference_handle} ${SM}.bam | bcftools call -T sitelist.tsv.gz --skip-variants indels  --multiallelic-caller -O z  -  > ${SM}.{}.union.vcf.gz\"\n        order=`echo \\${contigs} | tr ' ' '\\\\n' | awk '{ print \"${SM}.\" \\$1 \".union.vcf.gz\" }'`\n        # Output variant sites\n        bcftools concat \\${order} -O v | \\\\\n        vk geno het-polarization - | \\\\\n        bcftools view -O z > ${SM}.union.vcf.gz\n        bcftools index ${SM}.union.vcf.gz\n        rm \\${order}\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [
            "SM"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "echo true",
            "cpus params.cores",
            "tag { SM }",
            "stageInMode 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_union_vcf_list": {
        "name_process": "generate_union_vcf_list",
        "string_process": "\nprocess generate_union_vcf_list {\n\n    cpus 1 \n\n    publishDir params.out + \"/SM\", mode: 'copy'\n\n    input:\n       val vcf_set\n\n    output:\n       file(\"SM_union_vcfs.txt\")\n\n    script:\n        print vcf_set\n\n    \"\"\"\n        echo ${vcf_set.join(\" \")} | tr ' ' '\\\\n' > SM_union_vcfs.txt\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        print vcf_set\n\n    \"\"\"\n        echo ${vcf_set.join(\" \")} | tr ' ' '\\\\n' > SM_union_vcfs.txt\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf_set"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "cpus 1",
            "publishDir params.out + \"/SM\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_union_vcf_chromosome": {
        "name_process": "merge_union_vcf_chromosome",
        "string_process": "\nprocess merge_union_vcf_chromosome {\n\n    tag { chrom }\n\n    input:\n        tuple file(union_vcfs:\"union_vcfs.txt\"), val(chrom)\n\n    output:\n        tuple val(\"merge\"), file(\"${chrom}.merged.raw.vcf.gz\")\n\n    \"\"\"\n        bcftools merge --regions ${chrom} -O z -m all --file-list ${union_vcfs} > ${chrom}.merged.raw.vcf.gz\n        bcftools index ${chrom}.merged.raw.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        bcftools merge --regions ${chrom} -O z -m all --file-list ${union_vcfs} > ${chrom}.merged.raw.vcf.gz\n        bcftools index ${chrom}.merged.raw.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "chrom",
            "union_vcfs"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "tag { chrom }"
        ],
        "when": "",
        "stub": ""
    },
    "concatenate_union_vcf": {
        "name_process": "concatenate_union_vcf",
        "string_process": "\nprocess concatenate_union_vcf {\n\n    publishDir params.out + \"/vcf\", mode: 'copy'\n\n    input:\n        tuple val(\"merge\"), file(\"*.merged.raw.vcf.gz\"), file(\"${params.A}.${params.B}.parental.vcf.gz\"), file(\"${params.A}.${params.B}.parental.vcf.gz.tbi\")\n\n    output:\n        tuple file(\"NIL.filtered.vcf.gz\"), file(\"NIL.filtered.vcf.gz.csi\")\n\n    \"\"\"\n        bcftools concat ${\"*.merged.raw.vcf.gz\"} | \\\\\n        vk geno het-polarization - | \\\\\n        bcftools view -O z > merged.raw.vcf.gz\n        bcftools index merged.raw.vcf.gz\n        # Add parental strains\n        bcftools merge -O z ${params.A}.${params.B}.parental.vcf.gz merged.raw.vcf.gz > NIL.filtered.vcf.gz\n        bcftools index NIL.filtered.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n        bcftools concat ${\"*.merged.raw.vcf.gz\"} | \\\\\n        vk geno het-polarization - | \\\\\n        bcftools view -O z > merged.raw.vcf.gz\n        bcftools index merged.raw.vcf.gz\n        # Add parental strains\n        bcftools merge -O z ${params.A}.${params.B}.parental.vcf.gz merged.raw.vcf.gz > NIL.filtered.vcf.gz\n        bcftools index NIL.filtered.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/vcf\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "stat_tsv": {
        "name_process": "stat_tsv",
        "string_process": "\nprocess stat_tsv {\n\n    publishDir params.out + \"/vcf\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.filter.vcf.gz\"), file(\"NIL.filter.vcf.gz.csi\") \n\n    output:\n        file(\"NIL.filtered.stats.txt\")\n\n    \"\"\"\n        bcftools stats --verbose NIL.filter.vcf.gz > NIL.filtered.stats.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        bcftools stats --verbose NIL.filter.vcf.gz > NIL.filtered.stats.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/vcf\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_hmm": {
        "name_process": "output_hmm",
        "string_process": "\nprocess output_hmm {\n\n    publishDir params.out + \"/hmm\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.filter.vcf.gz\"), file(\"NIL.filter.vcf.gz.csi\")\n\n    output:\n        file(\"gt_hmm.tsv\")\n\n    \"\"\"\n        vk hmm --transition=${params.transition} --A=${params.A} --B=${params.B} NIL.filter.vcf.gz > gt_hmm.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        vk hmm --transition=${params.transition} --A=${params.A} --B=${params.B} NIL.filter.vcf.gz > gt_hmm.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/hmm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_hmm_fill": {
        "name_process": "output_hmm_fill",
        "string_process": "\nprocess output_hmm_fill {\n\n    publishDir params.out + \"/hmm\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.filter.vcf.gz\"), file(\"NIL.filter.vcf.gz.csi\") \n\n    output:\n        file(\"gt_hmm_fill.tsv\") \n\n    \"\"\"\n        vk hmm --transition=${params.transition} --infill --endfill --A=${params.A} --B=${params.B} NIL.filter.vcf.gz > gt_hmm_fill.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        vk hmm --transition=${params.transition} --infill --endfill --A=${params.A} --B=${params.B} NIL.filter.vcf.gz > gt_hmm_fill.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/hmm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_hmm_vcf": {
        "name_process": "output_hmm_vcf",
        "string_process": "\nprocess output_hmm_vcf {\n\n    publishDir params.out + \"/hmm\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.vcf.gz\"), file(\"NIL.vcf.gz.csi\") \n\n    output:\n        tuple file(\"NIL.hmm.vcf.gz\"), file(\"NIL.hmm.vcf.gz.csi\") \n\n    \"\"\"\n        vk hmm --transition=${params.transition} --vcf-out --A=${params.A} --B=${params.B} NIL.vcf.gz | bcftools view -O z > NIL.hmm.vcf.gz\n        bcftools index NIL.hmm.vcf.gz\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        vk hmm --transition=${params.transition} --vcf-out --A=${params.A} --B=${params.B} NIL.vcf.gz | bcftools view -O z > NIL.hmm.vcf.gz\n        bcftools index NIL.hmm.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "VKCDB",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vkcdb",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/hmm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "plot_hmm": {
        "name_process": "plot_hmm",
        "string_process": "\nprocess plot_hmm {\n\n    publishDir params.out + \"/hmm\", mode: 'copy'\n\n    input:\n        file(\"gt_hmm_fill.tsv\")\n\n    output:\n        file(\"gt_hmm.png\")\n        file(\"gt_hmm.pdf\")\n\n    \"\"\"\n        Rscript --vanilla ${workflow.projectDir}/bin/plot_hmm.R \"${params.cA}\" \"${params.cB}\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        Rscript --vanilla ${workflow.projectDir}/bin/plot_hmm.R \"${params.cA}\" \"${params.cB}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/hmm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_issue_plots": {
        "name_process": "generate_issue_plots",
        "string_process": "\nprocess generate_issue_plots {\n\n    publishDir params.out + \"/plots\", mode: 'copy'\n\n    errorStrategy 'ignore'\n\n    input:\n        tuple file(\"fq_coverage.tsv\"), file(\"SM_bam_idxstats.tsv\"), file(\"SM_coverage.tsv\"), file(\"bam_duplicates.tsv\")\n\n    output:\n        file(\"coverage_comparison.png\")\n                                         \n        file(\"unmapped_reads.png\")\n                                    \n        file(\"duplicates.png\")\n        file(\"duplicates.pdf\")\n\n    \"\"\"\n        Rscript --vanilla ${workflow.projectDir}/bin/qc_plots.R\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n        Rscript --vanilla ${workflow.projectDir}/bin/qc_plots.R\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/plots\", mode: 'copy'",
            "errorStrategy 'ignore'"
        ],
        "when": "",
        "stub": ""
    },
    "output_tsv": {
        "name_process": "output_tsv",
        "string_process": "\nprocess output_tsv {\n\n    publishDir params.out + \"/hmm\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.hmm.vcf.gz\"), file(\"NIL.hmm.vcf.gz.csi\")\n\n    output:\n        file(\"gt_hmm_genotypes.tsv\")\n\n    \"\"\"\n        cat <(echo -e \"CHROM\\tPOS\\tSAMPLE\\tGT\\tGT_ORIG\\tAD\") <(bcftools query -f '[%CHROM\\t%POS\\t%SAMPLE\\t%GT\\t%GT_ORIG\\t%AD\\n]' NIL.hmm.vcf.gz | sed 's/0\\\\/0/0/g' | sed 's/1\\\\/1/1/g') > gt_hmm_genotypes.tsv\n    \"\"\"\n\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        cat <(echo -e \"CHROM\\tPOS\\tSAMPLE\\tGT\\tGT_ORIG\\tAD\") <(bcftools query -f '[%CHROM\\t%POS\\t%SAMPLE\\t%GT\\t%GT_ORIG\\t%AD\\n]' NIL.hmm.vcf.gz | sed 's/0\\\\/0/0/g' | sed 's/1\\\\/1/1/g') > gt_hmm_genotypes.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/hmm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_cross_object": {
        "name_process": "generate_cross_object",
        "string_process": "\nprocess generate_cross_object {\n\n    publishDir params.out + \"/cross_object\", mode: 'copy'\n\n    input:\n        tuple file(\"NIL.hmm.vcf.gz\"), file(\"NIL.hmm.vcf.gz.csi\"), file(\"SM_coverage.tsv\"), file(\"gt_hmm_fill.tsv\")\n\n    output:\n                                 \n                                 \n                                 \n                         \n                           \n                            \n                                     \n        file(\"cross_obj_geno.tsv\")\n                                     \n        file(\"cross_obj_strains.tsv\")\n        file(\"breakpoint_sites.tsv.gz\")\n\n    \"\"\"\n    # Generate breakpoint sites\n    cat <(cut -f 1,2 gt_hmm_fill.tsv) <(cut -f 1,3 gt_hmm_fill.tsv) |\\\n    grep -v 'chrom' |\\\n    sort -k1,1 -k2,2n |\\\n    uniq > breakpoint_sites.tsv\n    bgzip breakpoint_sites.tsv -c > breakpoint_sites.tsv.gz && tabix -s1 -b2 -e2 breakpoint_sites.tsv.gz\n    # Generate output strains list\n    awk  '\\$2 != \"coverage\" { print }'  SM_coverage.tsv  |\\\n    cut -f 1 |\\\n    grep -v '${params.A}' |\\\n    grep -v '${params.B}' |\\\n    sort -V > cross_obj_strains.tsv\n    paste <(echo -e \"marker\\\\tchrom\\\\tpos\") <(cat cross_obj_strains.tsv| tr '\\n' '\\t' | sed 's/\\t\\$//g') > cross_obj_geno.tsv\n    bcftools view -T breakpoint_sites.tsv.gz -m 2 -M 2 NIL.hmm.vcf.gz |\\\n    vk filter MISSING --max=0.00001 - |\\\n    bcftools query --samples-file cross_obj_strains.tsv -f '%CHROM\\\\_%POS\\\\t%CHROM\\\\t%POS[\\\\t%GT]\\n' |\\\n    awk  -v OFS='\\t' '''\n            {   \n                gsub(\"0/0\", \"0\", \\$0);\n                gsub(\"1/1\", \"1\", \\$0);\n                gsub(\"./.\",\"\", \\$0);\n                \\$3;\n                print\n            }\n        ''' - >> cross_obj_geno.tsv\n    \n    # Rscript --vanilla `which generate_cross_object.R`\n    \"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "\"\"\"\n    # Generate breakpoint sites\n    cat <(cut -f 1,2 gt_hmm_fill.tsv) <(cut -f 1,3 gt_hmm_fill.tsv) |\\\n    grep -v 'chrom' |\\\n    sort -k1,1 -k2,2n |\\\n    uniq > breakpoint_sites.tsv\n    bgzip breakpoint_sites.tsv -c > breakpoint_sites.tsv.gz && tabix -s1 -b2 -e2 breakpoint_sites.tsv.gz\n    # Generate output strains list\n    awk  '\\$2 != \"coverage\" { print }'  SM_coverage.tsv  |\\\n    cut -f 1 |\\\n    grep -v '${params.A}' |\\\n    grep -v '${params.B}' |\\\n    sort -V > cross_obj_strains.tsv\n    paste <(echo -e \"marker\\\\tchrom\\\\tpos\") <(cat cross_obj_strains.tsv| tr '\\n' '\\t' | sed 's/\\t\\$//g') > cross_obj_geno.tsv\n    bcftools view -T breakpoint_sites.tsv.gz -m 2 -M 2 NIL.hmm.vcf.gz |\\\n    vk filter MISSING --max=0.00001 - |\\\n    bcftools query --samples-file cross_obj_strains.tsv -f '%CHROM\\\\_%POS\\\\t%CHROM\\\\t%POS[\\\\t%GT]\\n' |\\\n    awk  -v OFS='\\t' '''\n            {   \n                gsub(\"0/0\", \"0\", \\$0);\n                gsub(\"1/1\", \"1\", \\$0);\n                gsub(\"./.\",\"\", \\$0);\n                \\$3;\n                print\n            }\n        ''' - >> cross_obj_geno.tsv\n    \n    # Rscript --vanilla `which generate_cross_object.R`\n    \"\"\"",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "VKCDB"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/vkcdb"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "VKCDB",
                "uri": "https://bio.tools/vkcdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Voltage-gated K(+) Channel DataBase contains full-length or nearly full-length unique channel sequences from Bacteria, Archaea and Eukaryotes. Corresponding nucleotide sequences of the open reading frames corresponding to the amino acid sequences are now available and can be extracted in parallel with sets of protein sequences. Channels are categorized into subfamilies by phylogenetic analysis and by using hidden Markov model analyses.",
                "homepage": "http://vkcdb.biology.ualberta.ca"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__nil-ril-nf",
        "directive": [
            "publishDir params.out + \"/cross_object\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}