{
    "makeContigsDB": {
        "name_process": "makeContigsDB",
        "string_process": "\nprocess makeContigsDB {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n\n    input:\n    file contigs from contig_file\n\n    output:\n    file \"${params.output_name}-CONTIGS.db\" into db_for_HMM\n\n    \"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-gen-contigs-database -f ${contigs} \\\n                          -o ${params.output_name}-CONTIGS.db\n\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-gen-contigs-database -f ${contigs} \\\n                          -o ${params.output_name}-CONTIGS.db\n\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "contig_file"
        ],
        "nb_inputs": 1,
        "outputs": [
            "db_for_HMM"
        ],
        "nb_outputs": 1,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "runHMM": {
        "name_process": "runHMM",
        "string_process": "\nprocess runHMM {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    publishDir \"${params.output_folder}\"\n\n    input: \n    file db_for_HMM \n\n    output: \n    file \"${db_for_HMM}\" into HMM_db\n\n    afterScript \"rm -rf *\"\n\n    \"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-run-hmms -c ${db_for_HMM} \\\n              --num-threads 4 \n\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-run-hmms -c ${db_for_HMM} \\\n              --num-threads 4 \n\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "db_for_HMM"
        ],
        "nb_inputs": 1,
        "outputs": [
            "HMM_db"
        ],
        "nb_outputs": 1,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "setupNCBIcogs": {
        "name_process": "setupNCBIcogs",
        "string_process": "\nprocess setupNCBIcogs {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    \n    output:\n    file \"COGS_DIR.tar\" into anvio_cogs_tar\n\n    afterScript \"rm -rf *\"\n\n    \"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-setup-ncbi-cogs --num-threads 4 --cog-data-dir COGS_DIR --just-do-it\ntar cvf COGS_DIR.tar COGS_DIR\n\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-setup-ncbi-cogs --num-threads 4 --cog-data-dir COGS_DIR --just-do-it\ntar cvf COGS_DIR.tar COGS_DIR\n\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "anvio_cogs_tar"
        ],
        "nb_outputs": 1,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "annotateGenesWithCogs": {
        "name_process": "annotateGenesWithCogs",
        "string_process": "\nprocess annotateGenesWithCogs {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    publishDir \"${params.output_folder}\"\n    \n    input:\n    file contigs_db from HMM_db\n    file anvio_cogs_tar\n    \n    output:\n    file \"${contigs_db}\" into annotated_contigsDB, contigsDB_for_merge\n\n    \"\"\"\n#!/bin/bash\n\nset -e\n\ntar xvf ${anvio_cogs_tar}\nanvi-run-ncbi-cogs -c \"${contigs_db}\" --num-threads 4 --cog-data-dir COGS_DIR\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\ntar xvf ${anvio_cogs_tar}\nanvi-run-ncbi-cogs -c \"${contigs_db}\" --num-threads 4 --cog-data-dir COGS_DIR\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "HMM_db",
            "anvio_cogs_tar"
        ],
        "nb_inputs": 2,
        "outputs": [
            "annotated_contigsDB",
            "contigsDB_for_merge"
        ],
        "nb_outputs": 2,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "refineBams": {
        "name_process": "refineBams",
        "string_process": "\nprocess refineBams {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    publishDir \"${params.output_folder}\"\n    \n    input: \n    file bam from raw_bam_ch \n\n    output: \n    set file(\"${bam.name.replaceAll(/.bam/,\"_refined.bam\")}\"), file(\"${bam.name.replaceAll(/.bam/,\"_refined.bam\")}.bai\") into bam_ch\n\n        \"\"\"\n#!/bin/bash \n\nset -e\n\n#Refine the bams and put them in the output folder\nanvi-init-bam ${bam} -o ${params.output_folder} \\\n                     --output-file ${bam.name.replaceAll(/.bam/,\"_refined.bam\")}\n\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n#!/bin/bash \n\nset -e\n\n#Refine the bams and put them in the output folder\nanvi-init-bam ${bam} -o ${params.output_folder} \\\n                     --output-file ${bam.name.replaceAll(/.bam/,\"_refined.bam\")}\n\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "raw_bam_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "anvioProfile": {
        "name_process": "anvioProfile",
        "string_process": "\nprocess anvioProfile {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    publishDir \"${params.output_folder}\"\n\n    input: \n    set file(bam), file(bai) from bam_ch\n    file db from annotated_contigsDB\n\n    output: file \"${bam.name.replaceAll('.bam','_PROFILE.db')}\" into bam_profiles\n\n    \"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-profile -i ${bam} \\\n             -c ${db} \\\n             --sample-name ${bam.name.replaceAll('.bam','')} \\\n             --output-dir profiles\n\n#Anvio demands an output directory and names each profile PROFILE.db\n#rename the profile to be more specific\nmv profiles/PROFILE.db ${bam.name.replaceAll('.bam','_PROFILE.db')}\n\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-profile -i ${bam} \\\n             -c ${db} \\\n             --sample-name ${bam.name.replaceAll('.bam','')} \\\n             --output-dir profiles\n\n#Anvio demands an output directory and names each profile PROFILE.db\n#rename the profile to be more specific\nmv profiles/PROFILE.db ${bam.name.replaceAll('.bam','_PROFILE.db')}\n\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_ch",
            "annotated_contigsDB"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "mergeProfiles": {
        "name_process": "mergeProfiles",
        "string_process": "\nprocess mergeProfiles {\n    container \"meren/anvio:5.5\"\n    cpus 4\n    memory \"8 GB\"\n    publishDir \"${params.output_folder}\"\n\n    input: \n    file profile_list from bam_profiles.collect()\n    file contigsDB from contigsDB_for_merge\n\n    output:\n    file \"${params.output_name}-MERGED-PROFILE.db\"\n    \n    \"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-merge ${profile_list} \\\n           --contigs-db ${params.output_name}-CONTIGS.db \\\n           --sample-name ${params.output_name}_MERGED \\\n           --output-dir profile\n\n#anvi-merge outputs a file called PROFILE.DB\n#Rename this file\nmv profile/PROFILE.db ${params.output_name}-MERGED-PROFILE.db \n\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n#!/bin/bash\n\nset -e\n\nanvi-merge ${profile_list} \\\n           --contigs-db ${params.output_name}-CONTIGS.db \\\n           --sample-name ${params.output_name}_MERGED \\\n           --output-dir profile\n\n#anvi-merge outputs a file called PROFILE.DB\n#Rename this file\nmv profile/PROFILE.db ${params.output_name}-MERGED-PROFILE.db \n\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_profiles",
            "contigsDB_for_merge"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FredHutch__nf-anvio-metagenomics",
        "directive": [
            "container \"meren/anvio:5.5\"",
            "cpus 4",
            "memory \"8 GB\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    }
}