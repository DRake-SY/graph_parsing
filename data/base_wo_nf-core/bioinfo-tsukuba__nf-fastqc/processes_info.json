{
    "FASTQC": {
        "name_process": "FASTQC",
        "string_process": "\nprocess FASTQC {\n    label 'process_low'\n    tag \"$name\"\n    \n    publishDir \"${params.outdir}/${options.publish_dir}\", mode: 'copy',\n        saveAs: { filename ->\n                      filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"\n                }\n\n    input:\n    tuple val(name), file(reads)\n\n    output:\n    path \"*_fastqc.{zip,html}\", emit: fastqc_results\n\n    script:\n    def prefix = options.suffix ? \"${name}${options.suffix}\" : \"${name}\"\n    def prefix_1 = options.suffix ? \"${name}_1${options.suffix}\" : \"${name}_1\"\n    def prefix_2 = options.suffix ? \"${name}_2${options.suffix}\" : \"${name}_2\"\n\n    if (params.single_end) {\n        newfastq = (reads.getName() =~ /\\.gz$/) ? \"${prefix}.fastq.gz\" : \"${prefix}.fastq\"\n        \"\"\"\n        if [ ! -f $newfastq ]; then\n            ln -s $reads $newfastq\n        fi\n        fastqc $options.args --threads $task.cpus $newfastq\n        \"\"\"\n    } else {\n        newfastq1 = (reads[0].getName() =~ /\\.gz$/) ? \"${prefix_1}.fastq.gz\" : \"${prefix_1}}.fastq\"\n        newfastq2 = (reads[1].getName() =~ /\\.gz$/) ? \"${prefix_2}.fastq.gz\" : \"${prefix_2}.fastq\"\n        \"\"\"\n        if [ ! -f $newfastq1 ]; then\n            ln -s ${reads[0]} $newfastq1\n            ln -s ${reads[1]} $newfastq2\n        fi\n        fastqc $options.args --threads $task.cpus $newfastq1\n        fastqc $options.args --threads $task.cpus $newfastq2\n        \"\"\"\n    }",
        "nb_lignes_process": 39,
        "string_script": "    def prefix = options.suffix ? \"${name}${options.suffix}\" : \"${name}\"\n    def prefix_1 = options.suffix ? \"${name}_1${options.suffix}\" : \"${name}_1\"\n    def prefix_2 = options.suffix ? \"${name}_2${options.suffix}\" : \"${name}_2\"\n\n    if (params.single_end) {\n        newfastq = (reads.getName() =~ /\\.gz$/) ? \"${prefix}.fastq.gz\" : \"${prefix}.fastq\"\n        \"\"\"\n        if [ ! -f $newfastq ]; then\n            ln -s $reads $newfastq\n        fi\n        fastqc $options.args --threads $task.cpus $newfastq\n        \"\"\"\n    } else {\n        newfastq1 = (reads[0].getName() =~ /\\.gz$/) ? \"${prefix_1}.fastq.gz\" : \"${prefix_1}}.fastq\"\n        newfastq2 = (reads[1].getName() =~ /\\.gz$/) ? \"${prefix_2}.fastq.gz\" : \"${prefix_2}.fastq\"\n        \"\"\"\n        if [ ! -f $newfastq1 ]; then\n            ln -s ${reads[0]} $newfastq1\n            ln -s ${reads[1]} $newfastq2\n        fi\n        fastqc $options.args --threads $task.cpus $newfastq1\n        fastqc $options.args --threads $task.cpus $newfastq2\n        \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-tsukuba__nf-fastqc",
        "directive": [
            "label 'process_low'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/${options.publish_dir}\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    }
}