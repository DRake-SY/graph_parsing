{
    "SALMON_INDEX": {
        "name_process": "SALMON_INDEX",
        "string_process": "\nprocess SALMON_INDEX {\n  label 'Ex90N50'\n\n  input:\n  tuple val(name), file(assembly)\n\n  output:\n  file(\"salmon_${name}/\")\n  tuple val(name), file(assembly)\n\n  shell:\n    \"\"\"\n    salmon index --keepDuplicates -t ${assembly} -i salmon_${name} -p !{params.threads}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    salmon index --keepDuplicates -t ${assembly} -i salmon_${name} -p !{params.threads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'Ex90N50'"
        ],
        "when": "",
        "stub": ""
    },
    "SALMON_QUASIMAPPING": {
        "name_process": "SALMON_QUASIMAPPING",
        "string_process": "\nprocess SALMON_QUASIMAPPING {\n  label 'Ex90N50'\n\n  input:\n  file(reads)\n  file('*')\n  tuple val(name), file(assembly)\n\n  output:\n  file('*')\n  tuple val(name), file(assembly)\n\n  shell:\n    \"\"\"\n    salmon quant -l A -i salmon_${name} -r ${reads} -o salmon_quant_${name} -p !{params.threads}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    salmon quant -l A -i salmon_${name} -r ${reads} -o salmon_quant_${name} -p !{params.threads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "reads",
            "name",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'Ex90N50'"
        ],
        "when": "",
        "stub": ""
    },
    "ABUNDANCE_ESTIMATES_TO_MATRIX": {
        "name_process": "ABUNDANCE_ESTIMATES_TO_MATRIX",
        "string_process": "\nprocess ABUNDANCE_ESTIMATES_TO_MATRIX {\n  label 'Ex90N50'\n\n  input:\n  file('*')\n  tuple val(name), file(assembly)\n\n  output:\n  file('*')\n  tuple val(name), file(assembly)\n\n  shell:\n  \"\"\"\n  abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map none --out_prefix salmon_quant_${name} --name_sample_by_basedir salmon_quant_${name}/quant.sf\n  \"\"\" \n  }",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map none --out_prefix salmon_quant_${name} --name_sample_by_basedir salmon_quant_${name}/quant.sf\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'Ex90N50'"
        ],
        "when": "",
        "stub": ""
    },
    "CONTIG_EXN50_STATISTIC": {
        "name_process": "CONTIG_EXN50_STATISTIC",
        "string_process": "\nprocess CONTIG_EXN50_STATISTIC {\n  label 'Ex90N50'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}_ExN50.stats\"\n\n  input:\n  file('*')\n  tuple val(name), file(assembly)\n\n  output:\n  file(\"${name}_ExN50.stats\")\n  \n  shell:\n  \"\"\"\n  contig_ExN50_statistic.pl salmon_quant_${name}.isoform.TPM.not_cross_norm ${assembly} > ${name}_ExN50.stats\n  \"\"\" \n  }",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  contig_ExN50_statistic.pl salmon_quant_${name}.isoform.TPM.not_cross_norm ${assembly} > ${name}_ExN50.stats\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'Ex90N50'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}_ExN50.stats\""
        ],
        "when": "",
        "stub": ""
    },
    "TRANSRATE": {
        "name_process": "TRANSRATE",
        "string_process": "\nprocess TRANSRATE {\n  label 'TRANSRATE'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}/assemblies.csv\"\n\n  input:\n  set val(name), file(assembly)\n\n  output:\n  set val(name), file(\"${name}/assemblies.csv\")\n  \n  \n  shell:\n  \"\"\"\n  transrate --output !{name} --assembly !{assembly} --reference ${params.transcripts}\n  \"\"\" \n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  transrate --output !{name} --assembly !{assembly} --reference ${params.transcripts}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'TRANSRATE'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}/assemblies.csv\""
        ],
        "when": "",
        "stub": ""
    },
    "ESTIMATE_TRANSCRIPTS_LENGTH_PARAMETERS": {
        "name_process": "ESTIMATE_TRANSCRIPTS_LENGTH_PARAMETERS",
        "string_process": "\nprocess ESTIMATE_TRANSCRIPTS_LENGTH_PARAMETERS {\n  label 'DETONATE'\n\n  input:\n  file(transcripts)\n\n  output:\n  file('transcript_length_parameters.txt')\n\n  shell:\n  \"\"\"\n  rsem-eval-estimate-transcript-length-distribution ${transcripts} transcript_length_parameters.txt\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  rsem-eval-estimate-transcript-length-distribution ${transcripts} transcript_length_parameters.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "transcripts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM_PREPARE_REFERENCE": {
        "name_process": "RSEM_PREPARE_REFERENCE",
        "string_process": "\nprocess RSEM_PREPARE_REFERENCE {\n  label 'RSEM'\n\n  input:\n  file(transcripts)\n\n  output:\n  file(\"rsem_ref*\")\n  \n  shell:\n  \"\"\"\n  rsem-prepare-reference --bowtie ${transcripts} rsem_ref\n  \"\"\" \n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  rsem-prepare-reference --bowtie ${transcripts} rsem_ref\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "transcripts"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RSEM'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM_CALCULATE_EXPRESSION": {
        "name_process": "RSEM_CALCULATE_EXPRESSION",
        "string_process": "\nprocess RSEM_CALCULATE_EXPRESSION {\n  label 'RSEM'\n\n  input:\n  file(assemblies)\n  file(reads)\n  \n  output:\n    file(\"rsem_expr*\")\n  \n  shell:\n  \"\"\"\n  rsem-calculate-expression -p !{params.threads} ${reads} rsem_ref rsem_expr\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  rsem-calculate-expression -p !{params.threads} ${reads} rsem_ref rsem_expr\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assemblies",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RSEM'"
        ],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_SORT": {
        "name_process": "SAMTOOLS_SORT",
        "string_process": "\nprocess SAMTOOLS_SORT {\n  label 'DETONATE'\n\n  input:\n  file(sorted_bam)\n  \n  output:\n  file(\"rsem_expr.transcript.sorted.bam\")\n  \n  shell:\n  \"\"\"\n  samtools sort --threads !{params.threads} -o rsem_expr.transcript.sorted.bam rsem_expr.transcript.bam\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  samtools sort --threads !{params.threads} -o rsem_expr.transcript.sorted.bam rsem_expr.transcript.bam\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "REF_EVAL_ESTIMATE_TRUE_ASSEMBLY": {
        "name_process": "REF_EVAL_ESTIMATE_TRUE_ASSEMBLY",
        "string_process": "\nprocess REF_EVAL_ESTIMATE_TRUE_ASSEMBLY {\n  label 'DETONATE'\n\n  input:\n  file(rsem_ref)\n  file(rsem_expr)\n  file(sorted_bam)\n\n  output:\n  file('ta_0.fa')\n  \n  shell:\n  \"\"\"\n  ref-eval-estimate-true-assembly --reference rsem_ref --expression rsem_expr --assembly ta --alignment-policy best\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  ref-eval-estimate-true-assembly --reference rsem_ref --expression rsem_expr --assembly ta --alignment-policy best\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rsem_ref",
            "rsem_expr",
            "sorted_bam"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM_PREPARE_REFERENCE_2": {
        "name_process": "RSEM_PREPARE_REFERENCE_2",
        "string_process": "\nprocess RSEM_PREPARE_REFERENCE_2 {\n  label 'RSEM'\n\n  input:\n  file('ta_0.fa')  \n\n  output:\n  file('ta_0_ref*')\n  \n  shell:\n  \"\"\"\n  rsem-prepare-reference --bowtie ta_0.fa ta_0_ref\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  rsem-prepare-reference --bowtie ta_0.fa ta_0_ref\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RSEM'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM_CALCULATE_EXPRESSION_2": {
        "name_process": "RSEM_CALCULATE_EXPRESSION_2",
        "string_process": "\nprocess RSEM_CALCULATE_EXPRESSION_2 {\n  label 'RSEM'\n\n  input:\n  file('*')\n  file(reads)\n  \n  output:\n  file('ta_0_expr*')\n  \n  shell:\n  \"\"\"\n  rsem-calculate-expression -p !{params.threads} ${reads} ta_0_ref ta_0_expr\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  rsem-calculate-expression -p !{params.threads} ${reads} ta_0_ref ta_0_expr\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RSEM'"
        ],
        "when": "",
        "stub": ""
    },
    "NUMBER_OF_READS": {
        "name_process": "NUMBER_OF_READS",
        "string_process": "\nprocess NUMBER_OF_READS {\n  label 'DETONATE'\n\n  input:\n  file(reads)\n\n  output:\n  stdout()\n  \n  shell:\n  \"\"\"\n    # Estimate the num-reads parameter, this is the number of reads times the read length equals the total number of nucleotides in the read set.\n    awk '{s++}END{printf s/4}' ${reads}\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n    # Estimate the num-reads parameter, this is the number of reads times the read length equals the total number of nucleotides in the read set.\n    awk '{s++}END{printf s/4}' ${reads}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "READ_LENGTH": {
        "name_process": "READ_LENGTH",
        "string_process": "\nprocess READ_LENGTH {\n  label 'DETONATE'\n\n  input:\n  file(sorted_bam)\n\n  output:\n  stdout()\n  \n  shell:\n  \"\"\"\n    # Get read length and insert size info via the mapped bam file from bowtie\n    samtools stats rsem_expr.transcript.sorted.bam | grep -e '^SN\\tmaximum length' | awk -F\" \" '{printf(\\$4)}'\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n    # Get read length and insert size info via the mapped bam file from bowtie\n    samtools stats rsem_expr.transcript.sorted.bam | grep -e '^SN\\tmaximum length' | awk -F\" \" '{printf(\\$4)}'\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM_EVAL_CALCULATE_SCORE": {
        "name_process": "RSEM_EVAL_CALCULATE_SCORE",
        "string_process": "\nprocess RSEM_EVAL_CALCULATE_SCORE {\n  label 'DETONATE'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"rsem_eval_${name}.score\"\n\n  input:\n  file('transcript_length_parameters.txt')\n  file(reads)\n  tuple val(name), file(assembly)\n  val (read_length)\n\n  output:\n    file(\"rsem_eval*\")\n  \n  shell:\n  \"\"\"\n  rsem-eval-calculate-score ${reads} ${assembly} rsem_eval_${name} ${read_length} --transcript-length-parameters transcript_length_parameters.txt -p !{params.threads}\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  rsem-eval-calculate-score ${reads} ${assembly} rsem_eval_${name} ${read_length} --transcript-length-parameters transcript_length_parameters.txt -p !{params.threads}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads",
            "name",
            "assembly",
            "read_length"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"rsem_eval_${name}.score\""
        ],
        "when": "",
        "stub": ""
    },
    "REF_EVAL_KC": {
        "name_process": "REF_EVAL_KC",
        "string_process": "\nprocess REF_EVAL_KC {\n  label 'DETONATE'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"kc_${name}.txt\"\n\n  input:\n  tuple val(name), file(assembly)\n  file('*')\n  file(test)\n  val (number_of_reads)\n  val (read_length)\n  \n  output:\n  file(\"kc_${name}.txt\")\n  \n  shell:\n  \"\"\"\n  ref-eval --scores kc --A-seqs ${assembly} --B-seqs ta_0.fa --B-expr ta_0_expr.isoforms.results --kmerlen ${read_length} --readlen ${read_length} --num-reads ${number_of_reads} | tee kc_${name}.txt\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  ref-eval --scores kc --A-seqs ${assembly} --B-seqs ta_0.fa --B-expr ta_0_expr.isoforms.results --kmerlen ${read_length} --readlen ${read_length} --num-reads ${number_of_reads} | tee kc_${name}.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly",
            "test",
            "number_of_reads",
            "read_length"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"kc_${name}.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "BLAT": {
        "name_process": "BLAT",
        "string_process": "\nprocess BLAT {\n  label 'DETONATE'\n\n  input:\n  tuple val(name), file(assembly)\n  file('ta_0.fa')\n\n  output:\n  tuple file(\"ta_0_to_${name}.psl\"), file(\"${name}_to_ta_0.psl\")\n  tuple val(name), file(assembly)\n  file('ta_0.fa')\n  \n  shell:\n  \"\"\"\n  blat -minIdentity=80 ${assembly} ta_0.fa ta_0_to_${name}.psl\n  blat -minIdentity=80 ta_0.fa ${assembly} ${name}_to_ta_0.psl\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  blat -minIdentity=80 ${assembly} ta_0.fa ta_0_to_${name}.psl\n  blat -minIdentity=80 ta_0.fa ${assembly} ${name}_to_ta_0.psl\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BLAT"
        ],
        "tools_url": [
            "https://bio.tools/blat"
        ],
        "tools_dico": [
            {
                "name": "BLAT",
                "uri": "https://bio.tools/blat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast, accurate spliced alignment of DNA sequences.",
                "homepage": "http://genome.ucsc.edu/cgi-bin/hgBlat?command=start"
            }
        ],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'"
        ],
        "when": "",
        "stub": ""
    },
    "REF_EVAL_CONTIG": {
        "name_process": "REF_EVAL_CONTIG",
        "string_process": "\nprocess REF_EVAL_CONTIG {\n  label 'DETONATE'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"contig_nucl_${name}.txt\"\n\n  input:\n  tuple file(ta_to_assembly), file(assembly_to_ta)\n  tuple val(name), file(assembly)\n  file('ta_0.fa')\n\n\n  output:\n  file(\"contig_nucl_${name}.txt\")\n  \n  shell:\n  \"\"\"\n  ref-eval --scores contig,nucl --weighted no --A-seqs ${assembly} --B-seqs ta_0.fa --A-to-B ${assembly_to_ta} --B-to-A ${ta_to_assembly} --min-frac-identity 0.90 > contig_nucl_${name}.txt\n  \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  ref-eval --scores contig,nucl --weighted no --A-seqs ${assembly} --B-seqs ta_0.fa --A-to-B ${assembly_to_ta} --B-to-A ${ta_to_assembly} --min-frac-identity 0.90 > contig_nucl_${name}.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ta_to_assembly",
            "assembly_to_ta",
            "name",
            "assembly"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'DETONATE'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"contig_nucl_${name}.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "COLLECT_INFO": {
        "name_process": "COLLECT_INFO",
        "string_process": "\nprocess COLLECT_INFO {\n  label 'HEATMAP'\n  publishDir \"${params.output}/\", mode:'copy', pattern: \"*.svg\"\n  publishDir \"${params.output}/\", mode:'copy', pattern: \"*.csv\"\n\n  input:\n    file(mapping)\n    file(busco_metric)\n    file(rnaquast)\n    file(kc)\n    file(contig)\n    file(rsem)\n    file(ex90n50)\n\n  output:\n  file(\"all_metrics.csv\")\n  file(\"selected_metrics.csv\")\n  file(\"selected_normalized_metrics.csv\")\n  file(\"heatmap.svg\")\n  \n  \"\"\"\n  create_heatmap.py\n  \"\"\" \n  }",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n  create_heatmap.py\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mapping",
            "busco_metric",
            "rnaquast",
            "kc",
            "contig",
            "rsem",
            "ex90n50"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'HEATMAP'",
            "publishDir \"${params.output}/\", mode:'copy', pattern: \"*.svg\"",
            "publishDir \"${params.output}/\", mode:'copy', pattern: \"*.csv\""
        ],
        "when": "",
        "stub": ""
    },
    "get_database": {
        "name_process": "get_database",
        "string_process": "\nprocess get_database {\n  storeDir \"nextflow-autodownload-databases/busco/${params.busco}\"\n  stageOutMode 'move'\n  containerOptions = \"--user root\"\n  label 'BASICS'\n\n  output:\n    file(\"${params.busco}.tar.gz\")\n    \n  script:\n    \"\"\"\n    wget --quiet http://busco.ezlab.org/v2/datasets/${params.busco}.tar.gz \n    #tar -xzf ${params.busco}.tar.gz \n    #rm ${params.busco}.tar.gz\n    #rm ${params.busco}/${params.busco}.tar.gz\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    wget --quiet http://busco.ezlab.org/v2/datasets/${params.busco}.tar.gz \n    #tar -xzf ${params.busco}.tar.gz \n    #rm ${params.busco}.tar.gz\n    #rm ${params.busco}/${params.busco}.tar.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "storeDir \"nextflow-autodownload-databases/busco/${params.busco}\"",
            "stageOutMode 'move'",
            "containerOptions = \"--user root\"",
            "label 'BASICS'"
        ],
        "when": "",
        "stub": ""
    },
    "HISAT2_SINGLE": {
        "name_process": "HISAT2_SINGLE",
        "string_process": "\nprocess HISAT2_SINGLE {\n  label 'HISAT2'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}.sorted.bam\"\n\n  input:\n  tuple val(name), file(assembly)\n  file(reads)\n\n  output:\n  tuple val(name), file(\"${name}.sorted.bam\")\n  \n  shell:\n  '''\n  hisat2-build !{assembly} !{name} \n  hisat2 -x !{name} -U !{reads} -p !{params.threads} | samtools view -bS | samtools sort -T tmp --threads !{params.threads} > !{name}.sorted.bam\n  ''' \n}",
        "nb_lignes_process": 16,
        "string_script": "  '''\n  hisat2-build !{assembly} !{name} \n  hisat2 -x !{name} -U !{reads} -p !{params.threads} | samtools view -bS | samtools sort -T tmp --threads !{params.threads} > !{name}.sorted.bam\n  '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "HISAT2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "assembly",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'HISAT2'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}.sorted.bam\""
        ],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_FLAGSTATS": {
        "name_process": "SAMTOOLS_FLAGSTATS",
        "string_process": "\nprocess SAMTOOLS_FLAGSTATS {\n  label 'HISAT2'\n  input:\n    tuple val(name), file(assembly)\n\n  output:\n    tuple val (name), file('flagstats.txt')\n  \n  shell:\n  \"\"\"\n  samtools flagstat ${assembly} > \"flagstats.txt\"\n  \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "  \"\"\"\n  samtools flagstat ${assembly} > \"flagstats.txt\"\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'HISAT2'"
        ],
        "when": "",
        "stub": ""
    },
    "CALCULATE_MAPPED_READS": {
        "name_process": "CALCULATE_MAPPED_READS",
        "string_process": "\nprocess CALCULATE_MAPPED_READS {\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}_mapping_stats.txt\"\n  label 'BASICS'\n\n  input:\n    tuple val(name), file(mapping_stats)\n\n  output:\n    file(\"${name}_mapping_stats.txt\")  \n  \n  \"\"\"\n  mapping_percentage.py --in ${mapping_stats} --out ${name}_mapping_stats.txt\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n  mapping_percentage.py --in ${mapping_stats} --out ${name}_mapping_stats.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "mapping_stats"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}_mapping_stats.txt\"",
            "label 'BASICS'"
        ],
        "when": "",
        "stub": ""
    },
    "run_busco": {
        "name_process": "run_busco",
        "string_process": "\nprocess run_busco {\n  label 'BUSCO'\n  publishDir \"${params.output}/${params.dir}/\", mode: 'copy', pattern: \"short_summary_${name}.txt\"\n                                                                                                    \n\n  input:\n  tuple val(name), file(assembly)\n  file(db)\n\n  output:\n  file(\"short_summary_${name}.txt\")\n\n  shell:\n  \"\"\"\n  tar -xzf ${db}\n  export AUGUSTUS_CONFIG_PATH=\"/opt/conda/config/\"\n  # run BUSCO\n  run_BUSCO.py -i ${assembly} -o ${name} -l ${db.simpleName} -m tran -c ${params.threads} -t ./ -z\n  cp run_${name}/short_summary_${name}.txt short_summary_${name}.txt\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  \"\"\"\n  tar -xzf ${db}\n  export AUGUSTUS_CONFIG_PATH=\"/opt/conda/config/\"\n  # run BUSCO\n  run_BUSCO.py -i ${assembly} -o ${name} -l ${db.simpleName} -m tran -c ${params.threads} -t ./ -z\n  cp run_${name}/short_summary_${name}.txt short_summary_${name}.txt\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'BUSCO'",
            "publishDir \"${params.output}/${params.dir}/\", mode: 'copy', pattern: \"short_summary_${name}.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "plot_busco": {
        "name_process": "plot_busco",
        "string_process": "\nprocess plot_busco {\n  label 'BUSCO'\n  publishDir \"${params.output}/${params.dir}/\", mode: 'copy', pattern: \"busco_figure.pdf\"\n\n  input:\n  file('*')\n\n  output:\n  file (\"busco_figure.pdf\")\n\n  script:\n  \"\"\"\n  export AUGUSTUS_CONFIG_PATH=\"/opt/conda/config/\"\n  mkdir run_results\n  cp *.txt run_results/\n  # generate Plot and rehack Rscript\n  generate_plot.py -wd run_results/\n  sed -i 's/busco_figure.png/busco_figure.pdf/g' run_results/busco_figure.R\n  Rscript run_results/busco_figure.R\n  cp run_results/busco_figure.pdf busco_figure.pdf\n  \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  export AUGUSTUS_CONFIG_PATH=\"/opt/conda/config/\"\n  mkdir run_results\n  cp *.txt run_results/\n  # generate Plot and rehack Rscript\n  generate_plot.py -wd run_results/\n  sed -i 's/busco_figure.png/busco_figure.pdf/g' run_results/busco_figure.R\n  Rscript run_results/busco_figure.R\n  cp run_results/busco_figure.pdf busco_figure.pdf\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'BUSCO'",
            "publishDir \"${params.output}/${params.dir}/\", mode: 'copy', pattern: \"busco_figure.pdf\""
        ],
        "when": "",
        "stub": ""
    },
    "RNAQUAST_SINGLE": {
        "name_process": "RNAQUAST_SINGLE",
        "string_process": "\nprocess RNAQUAST_SINGLE {\n  label 'RNAQUAST'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"short_report.tsv\"\n\n  input:\n  file(assemblies)\n  val(names)\n  file(reads)\n  file(reference)\n  file(annotation)\n\n  output:\n  file(\"short_report.tsv\")\n  \n  shell:\n  \"\"\"\n  rnaQUAST.py --single_reads ${reads} \\\n            --reference ${reference} \\\n\t\t\t\t\t\t--gtf ${annotation} \\\n\t\t\t\t\t\t--output_dir . \\\n\t\t\t\t\t\t--threads !{params.threads} \\\n\t\t\t\t\t\t--transcripts ${assemblies} \\\n\t\t\t\t\t\t--labels ${names} \\\n            --no_plots \\\n            --prokaryote\n  \"\"\" \n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  rnaQUAST.py --single_reads ${reads} \\\n            --reference ${reference} \\\n\t\t\t\t\t\t--gtf ${annotation} \\\n\t\t\t\t\t\t--output_dir . \\\n\t\t\t\t\t\t--threads !{params.threads} \\\n\t\t\t\t\t\t--transcripts ${assemblies} \\\n\t\t\t\t\t\t--labels ${names} \\\n            --no_plots \\\n            --prokaryote\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assemblies",
            "names",
            "reads",
            "reference",
            "annotation"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RNAQUAST'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"short_report.tsv\""
        ],
        "when": "",
        "stub": ""
    },
    "RNAQUAST_PAIRED": {
        "name_process": "RNAQUAST_PAIRED",
        "string_process": "\nprocess RNAQUAST_PAIRED {\n  label 'RNAQUAST'\n  publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}/short_report.tsv\"\n\n  input:\n  tuple val(name), file(assembly)\n  tuple val(read_id), file(reads)\n  file(reference)\n  file(annotation)\n\n  output:\n  tuple val(name), file(\"${name}/short_report.tsv\")\n  \n  shell:\n  \"\"\"\n  rnaQUAST.py --left_reads {input.R1} \\\n\t\t\t\t\t\t  --right_reads {input.R2} \\\n\t\t\t\t\t\t  --reference {input.refGenome} \\\n\t\t\t\t\t\t  --gtf {input.refGTF} \\\n\t\t\t\t\t\t  -output_dir {params.outDir} \\\n\t\t\t\t\t\t  --threads {threads} \\\n\t\t\t\t\t\t  --transcripts {params.paths} \\\n\t\t\t\t\t\t  --labels {params.names} \\\n              {params.prokaryote}\n  \"\"\" \n}",
        "nb_lignes_process": 25,
        "string_script": "  \"\"\"\n  rnaQUAST.py --left_reads {input.R1} \\\n\t\t\t\t\t\t  --right_reads {input.R2} \\\n\t\t\t\t\t\t  --reference {input.refGenome} \\\n\t\t\t\t\t\t  --gtf {input.refGTF} \\\n\t\t\t\t\t\t  -output_dir {params.outDir} \\\n\t\t\t\t\t\t  --threads {threads} \\\n\t\t\t\t\t\t  --transcripts {params.paths} \\\n\t\t\t\t\t\t  --labels {params.names} \\\n              {params.prokaryote}\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "assembly",
            "read_id",
            "reads",
            "reference",
            "annotation"
        ],
        "nb_inputs": 6,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__treat",
        "directive": [
            "label 'RNAQUAST'",
            "publishDir \"${params.output}/${params.dir}/\", mode:'copy', pattern: \"${name}/short_report.tsv\""
        ],
        "when": "",
        "stub": ""
    }
}