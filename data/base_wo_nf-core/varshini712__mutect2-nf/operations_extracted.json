{
    "OPERATION_1": {
        "string": "Channel.fromPath( file(params.targetbed) ).into { targets_bed; targets_bed2 }",
        "origin": [
            [
                "file(params.targetbed",
                "A"
            ]
        ],
        "gives": [
            [
                "targets_bed",
                "P"
            ],
            [
                "targets_bed2",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel.fromPath( file(params.ref_fa) ).into { ref_fasta; ref_fasta2 }",
        "origin": [
            [
                "file(params.ref_fa",
                "A"
            ]
        ],
        "gives": [
            [
                "ref_fasta",
                "P"
            ],
            [
                "ref_fasta2",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.fromPath( file(params.ref_fai) ).into { ref_fai; ref_fai2 }",
        "origin": [
            [
                "file(params.ref_fai",
                "A"
            ]
        ],
        "gives": [
            [
                "ref_fai",
                "P"
            ],
            [
                "ref_fai2",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel.fromPath( file(params.ref_dict) ).into { ref_dict; ref_dict2 }",
        "origin": [
            [
                "file(params.ref_dict",
                "A"
            ]
        ],
        "gives": [
            [
                "ref_dict",
                "P"
            ],
            [
                "ref_dict2",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel.fromPath( file(params.germline_resource_gz) ).set { germline_resource_gz }",
        "origin": [
            [
                "file(params.germline_resource_gz",
                "A"
            ]
        ],
        "gives": [
            [
                "germline_resource_gz",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel.fromPath( file(params.germline_resource_gz_tbi) ).set { germline_resource_gz_tbi }",
        "origin": [
            [
                "file(params.germline_resource_gz_tbi",
                "A"
            ]
        ],
        "gives": [
            [
                "germline_resource_gz_tbi",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "Channel.fromPath( file(params.samplesheet) )\n       .splitCsv(header: true, sep: '\\t')\n       .map{row ->\n         def sampleID = row['Sample']\n         def tumorID = row['Tumor']\n         def normalID = row['Normal']\n         def tumorBam = row['Tumor_Bam'].tokenize( ',' ).collect { file(it) }\n         def tumorBai = row['Tumor_Bai'].tokenize( ',' ).collect { file(it) }\n         def normalBam = row['Normal_Bam'].tokenize( ',' ).collect { file(it) }\n         def normalBai = row['Normal_Bai'].tokenize( ',' ).collect { file(it) }\n         return [ sampleID, tumorID, normalID, tumorBam, tumorBai, normalBam, normalBai ]\n       }\n       .tap { samples_bam_bai;  samples_bam_bai2}",
        "origin": [
            [
                "file(params.samplesheet",
                "A"
            ]
        ],
        "gives": []
    },
    "OPERATION_8": {
        "string": "samples_bam_bai.combine(ref_fasta)\n               .combine(ref_fai)\n               .combine(ref_dict)\n               .combine(targets_bed)\n               .combine(germline_resource_gz)\n               .combine(germline_resource_gz_tbi)\n               .set { sample_bam_pairs_ref_germlinevcf }",
        "origin": [
            [
                "samples_bam_bai",
                "P"
            ],
            [
                "ref_fasta",
                "P"
            ],
            [
                "ref_fai",
                "P"
            ],
            [
                "ref_dict",
                "P"
            ],
            [
                "targets_bed",
                "P"
            ],
            [
                "germline_resource_gz",
                "P"
            ],
            [
                "germline_resource_gz_tbi",
                "P"
            ]
        ],
        "gives": [
            [
                "sample_bam_pairs_ref_germlinevcf",
                "P"
            ]
        ]
    }
}