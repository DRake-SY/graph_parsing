{
    "module2": {
        "name_process": "module2",
        "string_process": "\nprocess module2 {\n  label 'label'  \n  publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"${name}.${params.variable2}.gz\"\n  \n  input:\n    tuple val(name), file(combined)\n  \n  output:\n    tuple val(name), file(\"${name}.${params.variable2}.gz\")\n  \n  script:\n    \"\"\"\n    gzip -f ${combined}\n    mv ${combined}.gz ${name}.${params.variable2}.gz\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    gzip -f ${combined}\n    mv ${combined}.gz ${name}.${params.variable2}.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "combined"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__nf_template",
        "directive": [
            "label 'label'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"${name}.${params.variable2}.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "module1": {
        "name_process": "module1",
        "string_process": "\nprocess module1 {\n  label 'label'  \n  publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"${name}.${params.variable1}.fasta\"\n\n  input:\n    tuple val(name), file(read)\n    file(db)\n\n  output:\n    tuple val(name), file(\"${name}.${params.variable1}.fasta\")\n\n  script:\n    \"\"\"\n    cat ${read} ${db} > ${name}.${params.variable1}.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    cat ${read} ${db} > ${name}.${params.variable1}.fasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "read",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer-lab__nf_template",
        "directive": [
            "label 'label'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"${name}.${params.variable1}.fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "example_db": {
        "name_process": "example_db",
        "string_process": "\nprocess example_db {\n  label 'label'\n  if (params.cloudProcess) { \n    publishDir \"${params.cloudDatabase}/test_db/\", mode: 'copy', pattern: \"Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa\" \n  }\n  else { \n    storeDir \"nextflow-autodownload-databases/test_db/\" \n  }  \n\n  output:\n    file(\"Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa\")\n\n  script:\n    \"\"\"\n    wget ftp://ftp.ensemblgenomes.org/pub/bacteria/release-45/fasta/bacteria_44_collection/chlamydia_gallinacea_08_1274_3/dna/Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa.gz\n    gunzip Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa.gz\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    wget ftp://ftp.ensemblgenomes.org/pub/bacteria/release-45/fasta/bacteria_44_collection/chlamydia_gallinacea_08_1274_3/dna/Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa.gz\n    gunzip Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer-lab__nf_template",
        "directive": [
            "label 'label' if (params.cloudProcess) { publishDir \"${params.cloudDatabase}/test_db/\", mode: 'copy', pattern: \"Chlamydia_gallinacea_08_1274_3.ASM47102v2.dna.toplevel.fa\" } else { storeDir \"nextflow-autodownload-databases/test_db/\" }"
        ],
        "when": "",
        "stub": ""
    }
}