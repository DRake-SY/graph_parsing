{
    "rawReadsQuality": {
        "name_process": "rawReadsQuality",
        "string_process": "\nprocess rawReadsQuality {\n  conda \"$baseDir/environment.yml\"\n  publishDir \"${params.output}/quality_control_pre-trimming\", mode: 'copy'\n\n  input:\n  tuple val(name), path(reads)\n\n  output:\n  path \"*_fastqc.{zip,html}\"\n  path \"fastqc_command.txt\"\n\n  when:\n  ! params.skip_qc\n\n  script:\n  \"\"\"\n  fastqc_command=\"fastqc --threads ${task.cpus} --quiet $reads\"\n  \\$fastqc_command\n  echo \"\\$fastqc_command\" > 'fastqc_command.txt'\n  rename 's/_fastqc\\\\.zip\\$/_pre-trimming_fastqc.zip/' *_fastqc.zip\n  rename 's/_fastqc\\\\.html\\$/_pre-trimming_fastqc.html/' *_fastqc.html\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  \"\"\"\n  fastqc_command=\"fastqc --threads ${task.cpus} --quiet $reads\"\n  \\$fastqc_command\n  echo \"\\$fastqc_command\" > 'fastqc_command.txt'\n  rename 's/_fastqc\\\\.zip\\$/_pre-trimming_fastqc.zip/' *_fastqc.zip\n  rename 's/_fastqc\\\\.html\\$/_pre-trimming_fastqc.html/' *_fastqc.html\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Animal-Evolution-and-Biodiversity__trimming",
        "directive": [
            "conda \"$baseDir/environment.yml\"",
            "publishDir \"${params.output}/quality_control_pre-trimming\", mode: 'copy'"
        ],
        "when": "! params.skip_qc",
        "stub": ""
    },
    "trimming": {
        "name_process": "trimming",
        "string_process": "\nprocess trimming {\n  conda \"$baseDir/environment.yml\"\n  publishDir \"${params.output}/trimmed_reads\", mode: 'copy'\n\n  input:\n  tuple val(name), path(reads)\n\n  output:\n  tuple val(name), path(\"*.fq.gz\")\n  path \"*.txt\"\n  path \"*.{zip,html}\"\n\n  when:\n  ! params.skip_trimming\n\n  script:\n  flagsTrimming = \"--fastqc --gzip --quality $params.trim_quality \\\n--length $params.trim_min_length --cores $task.cpus\"\n  if ( params.trim_phred64 )\n    flagsTrimming += \" --phred64\"\n  if ( params.trim_forward_leading )\n    flagsTrimming += \" --clip_R1 $params.trim_forward_leading\"\n  if ( params.trim_forward_trailing )\n    flagsTrimming += \" --three_prime_clip_R1 $params.trim_forward_trailing\"\n  if ( params.trim_reverse_leading )\n    flagsTrimming += \" --clip_R2 $params.trim_reverse_leading\"\n  if ( params.trim_reverse_trailing )\n    flagsTrimming += \" --three_prime_clip_R2 $params.trim_reverse_trailing\"\n  if ( ! params.single_end )\n    flagsTrimming += \" --paired --retain_unpaired\"\n  commandTrimming = \"trim_galore $flagsTrimming $reads\"\n\n  \"\"\"\n  $commandTrimming\n  echo \"$commandTrimming\" > 'trim_galore_command.txt'\n  \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "  flagsTrimming = \"--fastqc --gzip --quality $params.trim_quality \\\n--length $params.trim_min_length --cores $task.cpus\"\n  if ( params.trim_phred64 )\n    flagsTrimming += \" --phred64\"\n  if ( params.trim_forward_leading )\n    flagsTrimming += \" --clip_R1 $params.trim_forward_leading\"\n  if ( params.trim_forward_trailing )\n    flagsTrimming += \" --three_prime_clip_R1 $params.trim_forward_trailing\"\n  if ( params.trim_reverse_leading )\n    flagsTrimming += \" --clip_R2 $params.trim_reverse_leading\"\n  if ( params.trim_reverse_trailing )\n    flagsTrimming += \" --three_prime_clip_R2 $params.trim_reverse_trailing\"\n  if ( ! params.single_end )\n    flagsTrimming += \" --paired --retain_unpaired\"\n  commandTrimming = \"trim_galore $flagsTrimming $reads\"\n\n  \"\"\"\n  $commandTrimming\n  echo \"$commandTrimming\" > 'trim_galore_command.txt'\n  \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "Animal-Evolution-and-Biodiversity__trimming",
        "directive": [
            "conda \"$baseDir/environment.yml\"",
            "publishDir \"${params.output}/trimmed_reads\", mode: 'copy'"
        ],
        "when": "! params.skip_trimming",
        "stub": ""
    }
}