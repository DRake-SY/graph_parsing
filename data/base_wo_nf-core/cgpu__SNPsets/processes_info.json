{
    "create_union_vcf": {
        "name_process": "create_union_vcf",
        "string_process": "\nprocess create_union_vcf {\n\n    tag \"max minimumN = $params.minimumN_value\"\n    container \"broadinstitute/gatk3:3.8-1\"\n    publishDir \"${params.outdir}/SNPsets\", mode: 'copy'\n    echo true\n\n    input:\n    set val(minN_value), file(all_the_vcfs) from minN_vcf_idx_combined_channel_to_use\n    each file(fasta) from fasta_for_create_union_vcf\n    each file(fai) from fai_for_create_union_vcf\n    each file(dict) from dict_for_create_union_vcf\n\n    output:\n    file(\"unionVCF_SNPpresent_in_at_least*\") into union_vcf_channel\n\n    shell:\n    '''\n    minN_value=$(echo !{minN_value})\n    echo -n \"java -jar /usr/GenomeAnalysisTK.jar -T CombineVariants -R !{fasta} --minimumN ${minN_value} -genotypeMergeOptions UNIQUIFY \" > combine_variants.sh\n    for vcf in $(ls *.vcf); do\n    echo -n \"--variant:$(basename $vcf | cut -d. -f1) $vcf  \" >> combine_variants.sh\n    done\n    echo -n \"-o 'unionVCF_SNPpresent_in_at_least_${minN_value}.vcf' \"  >> combine_variants.sh\n    chmod ugo+xr combine_variants.sh\n    bash combine_variants.sh &> log_minN_${minN_value}.txt\n    chmod -R ugo+xrw \"unionVCF_SNPpresent_in_at_least_${minN_value}.vcf\"\n    '''\n}",
        "nb_lignes_process": 28,
        "string_script": "    '''\n    minN_value=$(echo !{minN_value})\n    echo -n \"java -jar /usr/GenomeAnalysisTK.jar -T CombineVariants -R !{fasta} --minimumN ${minN_value} -genotypeMergeOptions UNIQUIFY \" > combine_variants.sh\n    for vcf in $(ls *.vcf); do\n    echo -n \"--variant:$(basename $vcf | cut -d. -f1) $vcf  \" >> combine_variants.sh\n    done\n    echo -n \"-o 'unionVCF_SNPpresent_in_at_least_${minN_value}.vcf' \"  >> combine_variants.sh\n    chmod ugo+xr combine_variants.sh\n    bash combine_variants.sh &> log_minN_${minN_value}.txt\n    chmod -R ugo+xrw \"unionVCF_SNPpresent_in_at_least_${minN_value}.vcf\"\n    '''",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "minN_vcf_idx_combined_channel_to_use",
            "fasta_for_create_union_vcf",
            "fai_for_create_union_vcf",
            "dict_for_create_union_vcf"
        ],
        "nb_inputs": 4,
        "outputs": [
            "union_vcf_channel"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__SNPsets",
        "directive": [
            "tag \"max minimumN = $params.minimumN_value\"",
            "container \"broadinstitute/gatk3:3.8-1\"",
            "publishDir \"${params.outdir}/SNPsets\", mode: 'copy'",
            "echo true"
        ],
        "when": "",
        "stub": ""
    }
}