{
    "alignment": {
        "name_process": "alignment",
        "string_process": "\nprocess alignment {\n                                   \n    label 'alignment'\n\n    tag \"${sample_id}-${sample_type}\"\n\n    input:\n        path ref_fasta\n        path ref_index\n        tuple val(sample_id), val(sample_type), file(fastq1), file(fastq2) from fastqs\n\n    output:\n        tuple val(sample_id), val(sample_type), file(\"${sample_id}.${sample_type}.raw.bam\") into raw_bams\n\n                                                              \n\n                                                                                            \n    script:\n    \"\"\" \n    bwa mem \\\n       -R \"@RG\\\\tID:${sample_id}\\\\tPL:ILLUMINA\\\\tPU:NA\\\\tSM:${sample_id}\\\\t\" \\\n       -K 100000000 \\\n       -t ${task.cpus}  \\\n       ${ref_fasta} ${fastq1} ${fastq2} 2> log.txt \\\n     | samtools sort -t${task.cpus} -m4G - -o ${sample_id}.${sample_type}.raw.bam\n     \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\" \n    bwa mem \\\n       -R \"@RG\\\\tID:${sample_id}\\\\tPL:ILLUMINA\\\\tPU:NA\\\\tSM:${sample_id}\\\\t\" \\\n       -K 100000000 \\\n       -t ${task.cpus}  \\\n       ${ref_fasta} ${fastq1} ${fastq2} 2> log.txt \\\n     | samtools sort -t${task.cpus} -m4G - -o ${sample_id}.${sample_type}.raw.bam\n     \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ref_fasta",
            "ref_index",
            "fastqs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "raw_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'alignment'",
            "tag \"${sample_id}-${sample_type}\""
        ],
        "when": "",
        "stub": ""
    },
    "picard_remove_duplicates": {
        "name_process": "picard_remove_duplicates",
        "string_process": "\nprocess picard_remove_duplicates {\n    label 'picard'\n\n    tag \"${sample_id}-${sample_type}\"\n\n    input:\n        tuple val(sample_id), val(sample_type), file(bam_file) from raw_bams\n\n    output:\n        tuple val(sample_id), val(sample_type), file(\"${sample_id}.${sample_type}.rmdup.bam\"), file(\"${sample_id}.${sample_type}.rmdup.bai\") into rmdup_bams\n\n                                                             \n\n    script:\n    \"\"\"\n    picard -Xmx${task.memory.toGiga()}g -Djava.io.tmpdir=./ -Dpicard.useLegacyParser=false \\\n    MarkDuplicates \\\n    -INPUT ${bam_file} \\\n    -OUTPUT ${sample_id}.${sample_type}.rmdup.bam \\\n    -METRICS_FILE ${sample_id}.${sample_type}.quality_metrics \\\n    -REMOVE_DUPLICATES true \\\n    -ASSUME_SORTED true \\\n    -VALIDATION_STRINGENCY SILENT \\\n    -CREATE_INDEX true 2> picard_rmdupes.log\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    picard -Xmx${task.memory.toGiga()}g -Djava.io.tmpdir=./ -Dpicard.useLegacyParser=false \\\n    MarkDuplicates \\\n    -INPUT ${bam_file} \\\n    -OUTPUT ${sample_id}.${sample_type}.rmdup.bam \\\n    -METRICS_FILE ${sample_id}.${sample_type}.quality_metrics \\\n    -REMOVE_DUPLICATES true \\\n    -ASSUME_SORTED true \\\n    -VALIDATION_STRINGENCY SILENT \\\n    -CREATE_INDEX true 2> picard_rmdupes.log\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Picard",
            "MarkDuplicates (IP)"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/markduplicates_ip"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "MarkDuplicates (IP)",
                "uri": "https://bio.tools/markduplicates_ip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Marks all duplicate reads in a provided SAM or BAM file and either removes them or flags them.",
                "homepage": "https://galaxy.pasteur.fr/tool_runner?tool_id=toolshed.pasteur.fr/repos/fmareuil/picard_pasteur_wrapper/rgPicardMarkDups/1.56.0"
            }
        ],
        "inputs": [
            "raw_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rmdup_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'picard'",
            "tag \"${sample_id}-${sample_type}\""
        ],
        "when": "",
        "stub": ""
    },
    "gatk_bqsr": {
        "name_process": "gatk_bqsr",
        "string_process": "\nprocess gatk_bqsr {\n    label 'gatk'\n\n    tag \"${sample_id}-${sample_type}\"\n\n    input:\n        path ref_fasta\n        path ref_index\n        path gatk_mills\n        path gatk_mills_index\n        path gatk_1kg\n        path gatk_1kg_index\n        tuple val(sample_id), val(sample_type), file(bam_file), file(bam_bai) from rmdup_bams\n\n    output:\n        tuple val(sample_id), val(sample_type), file(\"${sample_id}.${sample_type}.bqsr.bam\") into bqsr_bams\n\n                                                             \n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n    BaseRecalibrator \\\n    --reference ${ref_fasta} \\\n    --input ${bam_file} \\\n    --known-sites ${gatk_mills} \\\n    --known-sites ${gatk_1kg} \\\n    --output ${sample_id}.${sample_type}.recal_table\n\n    gatk ApplyBQSR \\\n    --reference ${ref_fasta} \\\n    --input ${bam_file} \\\n    --bqsr-recal-file ${sample_id}.${sample_type}.recal_table \\\n    --output ${sample_id}.${sample_type}.bqsr.bam\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n    BaseRecalibrator \\\n    --reference ${ref_fasta} \\\n    --input ${bam_file} \\\n    --known-sites ${gatk_mills} \\\n    --known-sites ${gatk_1kg} \\\n    --output ${sample_id}.${sample_type}.recal_table\n\n    gatk ApplyBQSR \\\n    --reference ${ref_fasta} \\\n    --input ${bam_file} \\\n    --bqsr-recal-file ${sample_id}.${sample_type}.recal_table \\\n    --output ${sample_id}.${sample_type}.bqsr.bam\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "ref_fasta",
            "ref_index",
            "gatk_mills",
            "gatk_mills_index",
            "gatk_1kg",
            "gatk_1kg_index",
            "rmdup_bams"
        ],
        "nb_inputs": 7,
        "outputs": [
            "bqsr_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'gatk'",
            "tag \"${sample_id}-${sample_type}\""
        ],
        "when": "",
        "stub": ""
    },
    "samtools_final_bam": {
        "name_process": "samtools_final_bam",
        "string_process": "\nprocess samtools_final_bam {\n    label 'samtools'\n\n    tag \"${sample_id}-${sample_type}\"\n\n    input:\n        tuple val(sample_id), val(sample_type), file(bqsr_bam) from bqsr_bams\n\n    output:\n        tuple val(sample_id), val(sample_type), file(\"${sample_id}.${sample_type}.final.bam\") into final_bams\n        file(\"*.bai\")\n\n    publishDir params.output, mode: 'copy', overwrite: true\n\n    script:\n    \"\"\"\n    samtools sort ${bqsr_bam} -o ${sample_id}.${sample_type}.final.bam\n\n    samtools index ${sample_id}.${sample_type}.final.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    samtools sort ${bqsr_bam} -o ${sample_id}.${sample_type}.final.bam\n\n    samtools index ${sample_id}.${sample_type}.final.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bqsr_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'samtools'",
            "tag \"${sample_id}-${sample_type}\""
        ],
        "when": "",
        "stub": ""
    },
    "samtools_mpileup": {
        "name_process": "samtools_mpileup",
        "string_process": "\nprocess samtools_mpileup {\n    label 'samtools'\n\n    tag \"${sample_id}-${sample_type}\"\n\n\n    input:\n        path ref_fasta\n        tuple val(sample_id), val(sample_type), file(final_bam) from final_bams\n\n    output:\n        tuple val(sample_id), file(\"${sample_id}.${sample_type}.mpileup\") into mpileups\n\n    publishDir params.output, mode: 'copy', overwrite: true\n\n                     \n                  \n                    \n    script:\n    \"\"\"\n    samtools mpileup -f ${ref_fasta} -d 1000000 -A -B ${final_bam} > ${sample_id}.${sample_type}.mpileup\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    samtools mpileup -f ${ref_fasta} -d 1000000 -A -B ${final_bam} > ${sample_id}.${sample_type}.mpileup\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ref_fasta",
            "final_bams"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mpileups"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'samtools'",
            "tag \"${sample_id}-${sample_type}\""
        ],
        "when": "",
        "stub": ""
    },
    "sequenza_pileup2seqz": {
        "name_process": "sequenza_pileup2seqz",
        "string_process": "\nprocess sequenza_pileup2seqz {\n    label 'sequenza'\n\n    tag \"${sample_id}\"\n\n    echo true\n\n    paired_mpileups = mpileups\n        .groupTuple(size: 2)\n        .map{\n            sample_id, mpileup_files -> tuple( sample_id, mpileup_files.sort{ it.getName() } )\n            }\n\n    input:\n        path gc_window\n        tuple val(sample_id), file(mpileup_files) from paired_mpileups\n                                                        \n\n    output:\n        tuple val(sample_id), file(\"${sample_id}.seqz\") into sequenza_seqz\n\n    publishDir params.output, mode: 'copy', overwrite: true\n\n    script:\n    \"\"\"\n    sequenza-utils bam2seqz -gc ${gc_window} -p -n ${mpileup_files[0]} -t ${mpileup_files[1]} -o ${sample_id}.seqz\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    sequenza-utils bam2seqz -gc ${gc_window} -p -n ${mpileup_files[0]} -t ${mpileup_files[1]} -o ${sample_id}.seqz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gc_window",
            "paired_mpileups"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sequenza_seqz"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'sequenza'",
            "tag \"${sample_id}\"",
            "echo true paired_mpileups = mpileups .groupTuple(size: 2) .map{ sample_id, mpileup_files -> tuple( sample_id, mpileup_files.sort{ it.getName() } ) }"
        ],
        "when": "",
        "stub": ""
    },
    "sequenza_seqz_binning": {
        "name_process": "sequenza_seqz_binning",
        "string_process": "\nprocess sequenza_seqz_binning {\n    label 'sequenza'\n\n    tag \"${sample_id}\"\n\n               \n\n    input:\n        tuple val(sample_id), file(seqz_gz) from sequenza_seqz.filter{ it[1].countLines() > 1 }\n                                                                            \n\n    output:\n        tuple val(sample_id), file(\"${sample_id}.binned.seqz.gz\") into binned_seqz\n\n                                                             \n\n    script:\n    \"\"\"\n    sequenza-utils seqz_binning -w 50 -s ${seqz_gz} -o ${sample_id}.binned.seqz.gz\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    sequenza-utils seqz_binning -w 50 -s ${seqz_gz} -o ${sample_id}.binned.seqz.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sequenza_seqz"
        ],
        "nb_inputs": 1,
        "outputs": [
            "binned_seqz"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'sequenza'",
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "sequenza_R": {
        "name_process": "sequenza_R",
        "string_process": "\nprocess sequenza_R {\n    label 'sequenza'\n\n    tag \"${sample_id}\"\n\n               \n\n    input:\n        tuple val(sample_id), file(binned_seqz_gz) from binned_seqz\n\n    output:\n        tuple val(sample_id), file(\"${sample_id}.nitz.cellularity.txt\"), file(\"${sample_id}.nitz.ploidy.txt\"), file(\"${sample_id}.nitz.ave_depth.txt\"), file(\"${sample_id}.nitz.copynumber_calls.txt\"), file(\"${sample_id}_genome_view.pdf\") into sequenza_R_files\n\n    publishDir params.output, mode: 'copy', overwrite: true\n\n    shell:\n    '''\n\t#-----------------------------------------------------------------------------------------------\n\t#RUN SEQUENZA, R\n\t#-----------------------------------------------------------------------------------------------\n\t#Create an executable R script, run it and quit it!\n\techo 'library(\\\"sequenza\\\")'>!{sample_id}.sequenza.r\n\techo 'data.file <- \\\"!{binned_seqz_gz}\\\"' >> !{sample_id}.sequenza.r\n\techo 'seqz.data <- read.seqz(data.file)' >> !{sample_id}.sequenza.r\n\techo 'gc.stats <- gc.sample.stats(data.file)' >> !{sample_id}.sequenza.r\n\techo 'test <- sequenza.extract(data.file)' >> !{sample_id}.sequenza.r\n\techo 'CP.example <- sequenza.fit(test)' >> !{sample_id}.sequenza.r\n\techo 'sequenza.results(sequenza.extract = test, cp.table = CP.example, sample.id = \\\"!{sample_id}\\\", out.dir=\\\"./\\\")' >> !{sample_id}.sequenza.r\n\techo 'cint <- get.ci(CP.example)' >> !{sample_id}.sequenza.r\n\n\t#Plot cellularity\n\techo 'jpeg(\\\"!{sample_id}.nitz.cellularity.jpg\\\")' >> !{sample_id}.sequenza.r\n\techo 'cp.plot(CP.example)' >> !{sample_id}.sequenza.r\n\techo 'cp.plot.contours(CP.example, add = TRUE, likThresh=c(0.95))' >> !{sample_id}.sequenza.r\n\techo 'dev.off()' >> !{sample_id}.sequenza.r\n\n\t#Call CNVs\n\techo 'cellularity <- cint\\$max.cellularity' >> !{sample_id}.sequenza.r\n\techo 'ploidy <- cint\\$max.ploidy' >> !{sample_id}.sequenza.r\n    echo 'seg_table <- read.table(\\\"!{sample_id}_segments.txt\\\", header = TRUE, sep = \\\"\\\\t\\\", dec = \\\".\\\")' >> !{sample_id}.sequenza.r\n\techo 'avg.depth.ratio <- mean(seg_table$depth.ratio)' >> !{sample_id}.sequenza.r\n\n\t#Save parameters to file\n\techo 'cellularity' >> !{sample_id}.sequenza.r\n\techo 'write(cellularity, file = \\\"!{sample_id}.nitz.cellularity.txt\\\")' >> !{sample_id}.sequenza.r\n\techo 'write(ploidy, file = \\\"!{sample_id}.nitz.ploidy.txt\\\")' >>!{sample_id}.sequenza.r\n\techo 'write(avg.depth.ratio, file = \\\"!{sample_id}.nitz.ave_depth.txt\\\")' >> !{sample_id}.sequenza.r\n\n\t#Detect variant alleles\n\techo 'mut.tab <- na.exclude(do.call(rbind, test\\$mutations))' >> !{sample_id}.sequenza.r\n\techo 'mut.alleles <- mufreq.bayes(mufreq = mut.tab\\$F, depth.ratio = mut.tab\\$adjusted.ratio, cellularity = cellularity, ploidy = ploidy, avg.depth.ratio = avg.depth.ratio)' >> !{sample_id}.sequenza.r\n\n\t#Detect CN variation\n\techo 'seg.tab <- na.exclude(do.call(rbind, test\\$segments))' >> !{sample_id}.sequenza.r\n\techo 'cn.alleles <- baf.bayes(Bf = seg.tab\\$Bf, depth.ratio = seg.tab\\$depth.ratio, cellularity = cellularity, ploidy = ploidy, avg.depth.ratio = avg.depth.ratio)' >> !{sample_id}.sequenza.r\n\techo 'seg.tab <- cbind(seg.tab, cn.alleles)' >>!{sample_id}.sequenza.r\n\techo 'seg.tab' >> !{sample_id}.sequenza.r\n\n\t#write sequenza matrix to file, this will serve as input to loss score script's 2nd arg\n\techo 'write.table(seg.tab, file = \\\"!{sample_id}.nitz.copynumber_calls.txt\\\", append = FALSE)' >> !{sample_id}.sequenza.r\n\t#exit\n\techo 'q()' >> !{sample_id}.sequenza.r\n\techo 'n' >> !{sample_id}.sequenza.r\n\n\t#execute the R script\n\tR --vanilla < !{sample_id}.sequenza.r\n    '''\n}",
        "nb_lignes_process": 67,
        "string_script": "    '''\n\t#-----------------------------------------------------------------------------------------------\n\t#RUN SEQUENZA, R\n\t#-----------------------------------------------------------------------------------------------\n\t#Create an executable R script, run it and quit it!\n\techo 'library(\\\"sequenza\\\")'>!{sample_id}.sequenza.r\n\techo 'data.file <- \\\"!{binned_seqz_gz}\\\"' >> !{sample_id}.sequenza.r\n\techo 'seqz.data <- read.seqz(data.file)' >> !{sample_id}.sequenza.r\n\techo 'gc.stats <- gc.sample.stats(data.file)' >> !{sample_id}.sequenza.r\n\techo 'test <- sequenza.extract(data.file)' >> !{sample_id}.sequenza.r\n\techo 'CP.example <- sequenza.fit(test)' >> !{sample_id}.sequenza.r\n\techo 'sequenza.results(sequenza.extract = test, cp.table = CP.example, sample.id = \\\"!{sample_id}\\\", out.dir=\\\"./\\\")' >> !{sample_id}.sequenza.r\n\techo 'cint <- get.ci(CP.example)' >> !{sample_id}.sequenza.r\n\n\t#Plot cellularity\n\techo 'jpeg(\\\"!{sample_id}.nitz.cellularity.jpg\\\")' >> !{sample_id}.sequenza.r\n\techo 'cp.plot(CP.example)' >> !{sample_id}.sequenza.r\n\techo 'cp.plot.contours(CP.example, add = TRUE, likThresh=c(0.95))' >> !{sample_id}.sequenza.r\n\techo 'dev.off()' >> !{sample_id}.sequenza.r\n\n\t#Call CNVs\n\techo 'cellularity <- cint\\$max.cellularity' >> !{sample_id}.sequenza.r\n\techo 'ploidy <- cint\\$max.ploidy' >> !{sample_id}.sequenza.r\n    echo 'seg_table <- read.table(\\\"!{sample_id}_segments.txt\\\", header = TRUE, sep = \\\"\\\\t\\\", dec = \\\".\\\")' >> !{sample_id}.sequenza.r\n\techo 'avg.depth.ratio <- mean(seg_table$depth.ratio)' >> !{sample_id}.sequenza.r\n\n\t#Save parameters to file\n\techo 'cellularity' >> !{sample_id}.sequenza.r\n\techo 'write(cellularity, file = \\\"!{sample_id}.nitz.cellularity.txt\\\")' >> !{sample_id}.sequenza.r\n\techo 'write(ploidy, file = \\\"!{sample_id}.nitz.ploidy.txt\\\")' >>!{sample_id}.sequenza.r\n\techo 'write(avg.depth.ratio, file = \\\"!{sample_id}.nitz.ave_depth.txt\\\")' >> !{sample_id}.sequenza.r\n\n\t#Detect variant alleles\n\techo 'mut.tab <- na.exclude(do.call(rbind, test\\$mutations))' >> !{sample_id}.sequenza.r\n\techo 'mut.alleles <- mufreq.bayes(mufreq = mut.tab\\$F, depth.ratio = mut.tab\\$adjusted.ratio, cellularity = cellularity, ploidy = ploidy, avg.depth.ratio = avg.depth.ratio)' >> !{sample_id}.sequenza.r\n\n\t#Detect CN variation\n\techo 'seg.tab <- na.exclude(do.call(rbind, test\\$segments))' >> !{sample_id}.sequenza.r\n\techo 'cn.alleles <- baf.bayes(Bf = seg.tab\\$Bf, depth.ratio = seg.tab\\$depth.ratio, cellularity = cellularity, ploidy = ploidy, avg.depth.ratio = avg.depth.ratio)' >> !{sample_id}.sequenza.r\n\techo 'seg.tab <- cbind(seg.tab, cn.alleles)' >>!{sample_id}.sequenza.r\n\techo 'seg.tab' >> !{sample_id}.sequenza.r\n\n\t#write sequenza matrix to file, this will serve as input to loss score script's 2nd arg\n\techo 'write.table(seg.tab, file = \\\"!{sample_id}.nitz.copynumber_calls.txt\\\", append = FALSE)' >> !{sample_id}.sequenza.r\n\t#exit\n\techo 'q()' >> !{sample_id}.sequenza.r\n\techo 'n' >> !{sample_id}.sequenza.r\n\n\t#execute the R script\n\tR --vanilla < !{sample_id}.sequenza.r\n    '''",
        "nb_lignes_script": 50,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "binned_seqz"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sequenza_R_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'sequenza'",
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "loh_score": {
        "name_process": "loh_score",
        "string_process": "\nprocess loh_score {\n    label 'sequenza'\n\n    tag \"${sample_id}\"\n\n               \n\n    input:\n        path centromere_file\n        tuple val(sample_id), file(cellularity), file(ploidy), file(ave_depth), file(copynumber_calls), file(genome_pdf) from sequenza_R_files\n\n    output:\n        tuple val(sample_id), file(\"${sample_id}.nitz.score.txt\") into scoring_output\n\n    publishDir params.output, mode: 'copy', overwrite: true\n\n    script:\n    \"\"\"\n    LOH_score_chr_arms_V4.py ${centromere_file} ${copynumber_calls} ${sample_id}.nitz.score.txt 0.75\n    echo \"\" >> ${sample_id}.nitz.score.txt\n    echo -n \"Estimated tumor cellularity: \" >> ${sample_id}.nitz.score.txt\n    cat ${cellularity} >> ${sample_id}.nitz.score.txt\n    echo -n \"Estimated ploidy: \" >> ${sample_id}.nitz.score.txt\n    cat ${ploidy} >> ${sample_id}.nitz.score.txt\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    LOH_score_chr_arms_V4.py ${centromere_file} ${copynumber_calls} ${sample_id}.nitz.score.txt 0.75\n    echo \"\" >> ${sample_id}.nitz.score.txt\n    echo -n \"Estimated tumor cellularity: \" >> ${sample_id}.nitz.score.txt\n    cat ${cellularity} >> ${sample_id}.nitz.score.txt\n    echo -n \"Estimated ploidy: \" >> ${sample_id}.nitz.score.txt\n    cat ${ploidy} >> ${sample_id}.nitz.score.txt\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "centromere_file",
            "sequenza_R_files"
        ],
        "nb_inputs": 2,
        "outputs": [
            "scoring_output"
        ],
        "nb_outputs": 1,
        "name_workflow": "sheenamt__hrd_pipeline",
        "directive": [
            "label 'sequenza'",
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    }
}