{
    "remove_tech_duplicates": {
        "name_process": "remove_tech_duplicates",
        "string_process": "\nprocess remove_tech_duplicates {\n    publishDir \"${params.results_dir}\", mode: 'copy'\n    conda \"${baseDir}/envs/cell_types_analysis.yaml\"\n    input:\n        file(ref_labels_file) from REF_LABELS_FILE\n    output:\n        file(\"metadata_filtered.tsv\") into REF_LABELS_FILTERED\n\tfile('metadata_filt') into REF_LABELS_FILTERED_DIR\n    \"\"\"\n    remove_tech_duplicates.R\\\n                --input-metadata ${ref_labels_file}\\\n                --barcode-col-ref ${params.barcode_col_ref}\\\n                --output-file metadata_filtered.tsv\n    \n    mkdir -p metadata_filt/\n    cp metadata_filtered.tsv metadata_filt \n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    remove_tech_duplicates.R\\\n                --input-metadata ${ref_labels_file}\\\n                --barcode-col-ref ${params.barcode_col_ref}\\\n                --output-file metadata_filtered.tsv\n    \n    mkdir -p metadata_filt/\n    cp metadata_filtered.tsv metadata_filt \n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "REF_LABELS_FILE"
        ],
        "nb_inputs": 1,
        "outputs": [
            "REF_LABELS_FILTERED",
            "REF_LABELS_FILTERED_DIR"
        ],
        "nb_outputs": 2,
        "name_workflow": "ebi-gene-expression-group__label-analysis-eval-workflow",
        "directive": [
            "publishDir \"${params.results_dir}\", mode: 'copy'",
            "conda \"${baseDir}/envs/cell_types_analysis.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "build_cell_ontology_dict": {
        "name_process": "build_cell_ontology_dict",
        "string_process": "\nprocess build_cell_ontology_dict{\n    publishDir \"${params.results_dir}\", mode: 'copy'\n    conda \"${baseDir}/envs/cell_types_analysis.yaml\"\n    input:\n\tfile('metadata_filt') from REF_LABELS_FILTERED_DIR\n    output: \n        file(\"${params.ontology_dict}\") into ONTOLOGY_DICT\n\n    \"\"\"\n    build_cell_ontology_dict.R\\\n    \t--input-dir ${metadata_filt}\\\n\t--condensed-sdrf ${params.condensed_sdrf}\\\n\t--barcode-col-name ${params.barcode_col_ref}\\\n\t--cell-label-col-name ${params.label_column_ref}\\\n\t--cell-ontology-col-name ${params.cell_ontology_col}\\\n\t--output-dict-path ${params.ontology_dict}\\\n\t--output-text-path ${params.ontology_table}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    build_cell_ontology_dict.R\\\n    \t--input-dir ${metadata_filt}\\\n\t--condensed-sdrf ${params.condensed_sdrf}\\\n\t--barcode-col-name ${params.barcode_col_ref}\\\n\t--cell-label-col-name ${params.label_column_ref}\\\n\t--cell-ontology-col-name ${params.cell_ontology_col}\\\n\t--output-dict-path ${params.ontology_dict}\\\n\t--output-text-path ${params.ontology_table}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "REF_LABELS_FILTERED_DIR"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ONTOLOGY_DICT"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__label-analysis-eval-workflow",
        "directive": [
            "publishDir \"${params.results_dir}\", mode: 'copy'",
            "conda \"${baseDir}/envs/cell_types_analysis.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "get_tool_performance_table": {
        "name_process": "get_tool_performance_table",
        "string_process": "\nprocess get_tool_performance_table {\n    publishDir \"${params.results_dir}\", mode: 'copy'\n    conda \"${baseDir}/envs/cell_types_analysis.yaml\"\n    input:\n        file(pred_labels_dir) from PRED_LABELS_DIR\n        file(ref_labels_file) from REF_LABELS_FILTERED\n        file(cl_dictionary) from ONTOLOGY_DICT\n\tfile(ontology_graph) from ONTOLOGY_GRAPH\n    output:\n        file(\"${params.tool_perf_table}\") into TOOL_PERF_TABLE\n\n    \"\"\"\n    get_tool_performance_table.R\\\n                 --input-dir ${pred_labels_dir}\\\n                 --ref-file ${ref_labels_file}\\\n                 --lab-cl-mapping ${cl_dictionary}\\\n                 --ontology-graph ${ontology_graph}\\\n                 --barcode-col-ref ${params.barcode_col_ref}\\\n                 --barcode-col-pred ${params.barcode_col_pred}\\\n                 --label-column-ref ${params.label_column_ref}\\\n                 --label-column-pred ${params.label_column_pred}\\\n                 --semantic-sim-metric ${params.semantic_sim_metric}\\\n                 --output-path ${params.tool_perf_table}\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\n    get_tool_performance_table.R\\\n                 --input-dir ${pred_labels_dir}\\\n                 --ref-file ${ref_labels_file}\\\n                 --lab-cl-mapping ${cl_dictionary}\\\n                 --ontology-graph ${ontology_graph}\\\n                 --barcode-col-ref ${params.barcode_col_ref}\\\n                 --barcode-col-pred ${params.barcode_col_pred}\\\n                 --label-column-ref ${params.label_column_ref}\\\n                 --label-column-pred ${params.label_column_pred}\\\n                 --semantic-sim-metric ${params.semantic_sim_metric}\\\n                 --output-path ${params.tool_perf_table}\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "PRED_LABELS_DIR",
            "REF_LABELS_FILTERED",
            "ONTOLOGY_DICT",
            "ONTOLOGY_GRAPH"
        ],
        "nb_inputs": 4,
        "outputs": [
            "TOOL_PERF_TABLE"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__label-analysis-eval-workflow",
        "directive": [
            "publishDir \"${params.results_dir}\", mode: 'copy'",
            "conda \"${baseDir}/envs/cell_types_analysis.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "generate_empirical_cdf": {
        "name_process": "generate_empirical_cdf",
        "string_process": "\nprocess generate_empirical_cdf {\n    conda \"${baseDir}/envs/cell_types_analysis.yaml\"\n    input:\n        file(ref_labels_file) from REF_LABELS_FILTERED\n\tfile(ontology_dict) from ONTOLOGY_DICT\n\n    output: \n        file(\"${params.empirical_dist}\") into EMP_DISTRIBUTION\n\n    \"\"\"\n    get_empirical_dist.R\\\n            --input-ref-file ${ref_labels_file}\\\n            --label-column-ref ${params.label_column_ref}\\\n            --lab-cl-mapping ${ontology_dict}\\\n            --num-iterations ${params.num_iter}\\\n            --num-cores ${params.num_cores}\\\n\t    --ontology-graph ${params.ontology_graph}\\\n            --semantic-sim-metric ${params.semantic_sim_metric}\\\n            --output-path ${params.empirical_dist}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    get_empirical_dist.R\\\n            --input-ref-file ${ref_labels_file}\\\n            --label-column-ref ${params.label_column_ref}\\\n            --lab-cl-mapping ${ontology_dict}\\\n            --num-iterations ${params.num_iter}\\\n            --num-cores ${params.num_cores}\\\n\t    --ontology-graph ${params.ontology_graph}\\\n            --semantic-sim-metric ${params.semantic_sim_metric}\\\n            --output-path ${params.empirical_dist}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "REF_LABELS_FILTERED",
            "ONTOLOGY_DICT"
        ],
        "nb_inputs": 2,
        "outputs": [
            "EMP_DISTRIBUTION"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__label-analysis-eval-workflow",
        "directive": [
            "conda \"${baseDir}/envs/cell_types_analysis.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "get_pvals": {
        "name_process": "get_pvals",
        "string_process": "\nprocess get_pvals {\n    publishDir \"${params.results_dir}\", mode: 'copy'\n     conda \"${baseDir}/envs/cell_types_analysis.yaml\"\n     input:\n        file(tool_perf_table) from TOOL_PERF_TABLE\n        file(emp_dist) from EMP_DISTRIBUTION\n\n     output:\n        file(\"${params.tool_table_pvals}\") into TOOL_TABLE_PVALS\n\n     \"\"\"\n     get_tool_pvals.R\\\n             --input-table ${tool_perf_table}\\\n             --emp-dist-list ${emp_dist}\\\n             --output-table ${params.tool_table_pvals}\n     \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n     get_tool_pvals.R\\\n             --input-table ${tool_perf_table}\\\n             --emp-dist-list ${emp_dist}\\\n             --output-table ${params.tool_table_pvals}\n     \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "TOOL_PERF_TABLE",
            "EMP_DISTRIBUTION"
        ],
        "nb_inputs": 2,
        "outputs": [
            "TOOL_TABLE_PVALS"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__label-analysis-eval-workflow",
        "directive": [
            "publishDir \"${params.results_dir}\", mode: 'copy'",
            "conda \"${baseDir}/envs/cell_types_analysis.yaml\""
        ],
        "when": "",
        "stub": ""
    }
}