{
    "Idx": {
        "name_process": "Idx",
        "string_process": "process Idx {\n\n    label 'process_idx'\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"salmon=1.6.0\"}\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n\n    input:\n    path(txtome)\n    path(genome) \n    val(idxname)\n        \n    output:\n    path(\"decoynames.txt\")\n    path(\"gentrome.fa.gz\")\n    path(idxname), emit: idx\n    \n    script: \n\n    def decoynames  = \"decoynames.txt\"\n    def gentrome    = \"gentrome.fa.gz\"\n\n    \"\"\"\n    gzip -cd $genome | grep '^>' | cut -d \" \" -f 1 | awk '{gsub(\\\">\\\",\\\"\\\");print}' > $decoynames\n\n    cat $txtome $genome > $gentrome\n\n    salmon index --no-version-check \\\n        -t $gentrome \\\n        -d $decoynames \\\n        -i $idxname \\\n        -p $task.cpus \\\n        $params.additional\n    \"\"\"                \n\n}",
        "nb_lignes_process": 39,
        "string_script": "    def decoynames  = \"decoynames.txt\"\n    def gentrome    = \"gentrome.fa.gz\"\n\n    \"\"\"\n    gzip -cd $genome | grep '^>' | cut -d \" \" -f 1 | awk '{gsub(\\\">\\\",\\\"\\\");print}' > $decoynames\n\n    cat $txtome $genome > $gentrome\n\n    salmon index --no-version-check \\\n        -t $gentrome \\\n        -d $decoynames \\\n        -i $idxname \\\n        -p $task.cpus \\\n        $params.additional\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "txtome",
            "genome",
            "idxname"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "label 'process_idx'",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"salmon=1.6.0\"} if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    },
    "Tximport": {
        "name_process": "Tximport",
        "string_process": "process Tximport {\n\n    label 'process_tximport'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda params.environment }\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n    \n    input:\n    path(quants) \n    val(outname)                                       \n    path(tx2gene)\n        \n    output:\n    path(\"*counts_genelevel.txt.gz\")\n                                              \n            \n    script: \n    def q = quants.join(',').toString()\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/tximport.R $q $outname $tx2gene\n    \"\"\"      \n\n}",
        "nb_lignes_process": 24,
        "string_script": "    def q = quants.join(',').toString()\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/tximport.R $q $outname $tx2gene\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "quants",
            "outname",
            "tx2gene"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "label 'process_tximport'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda params.environment } if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    },
    "FastQC": {
        "name_process": "FastQC",
        "string_process": "process FastQC {\n\n    tag \"$sampleid\"\n\n    cpus   1\n    memory 1.GB\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda params.environment }\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n\n\n    input:\n    tuple val(sampleid), path(r1), path(r2)\n            \n    output:\n    path(\"*.html\"), emit: html\n    path(\"*.zip\") , emit: zip\n    \n    script: \n                                                        \n    def reads = r2.toString() == \"null\" ? r1 : \"$r1 $r2\"\n    \"\"\"\n    fastqc --threads 1 $reads\n    \"\"\"     \n\n}",
        "nb_lignes_process": 29,
        "string_script": "    def reads = r2.toString() == \"null\" ? r1 : \"$r1 $r2\"\n    \"\"\"\n    fastqc --threads 1 $reads\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "sampleid",
            "r1",
            "r2"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "tag \"$sampleid\"",
            "cpus 1",
            "memory 1.GB",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda params.environment } if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC": {
        "name_process": "MultiQC",
        "string_process": "process MultiQC {\n\n    cpus   1\n    memory 1.GB\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda params.environment }\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n\n    input:\n    path(everything)\n            \n    output:\n    path \"*multiqc_report.html\"\n    path \"*_data\" \n    \n    script: \n    \"\"\"\n    multiqc .\n    \"\"\"     \n\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    multiqc .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "everything"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "cpus 1",
            "memory 1.GB",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda params.environment } if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    },
    "Quant": {
        "name_process": "Quant",
        "string_process": "process Quant {\n\n    tag \"$sample_id\"\n\n    label 'process_quant'\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"salmon=1.6.0\" }\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n\n    input:\n    tuple val(sample_id), path(r1), path(r2), val(libtype)\n    path(idx)     \n    path(tx2gene)                    \n\n    output:\n    tuple val(sample_id), path(sample_id), emit: quants\n    path(\"$sample_id/tx2gene.txt\"), emit: tx2gene\n    \n    script:\n    def lib_type = libtype.toString().replaceAll('\\\\[|\\\\]|\\'', '')\n    \n                                                        \n    def reads = r2.toString() == \"null\" ? \"-r $r1\" : \"-1 $r1 -2 $r2\"\n\n                                       \n    if(r2.toString() == \"null\"){\n        additional = params.quant_additional.replaceAll('--gcBias', '')\n    } else additional = params.quant_additional\n\n    \"\"\"\n    salmon quant --no-version-check --validateMappings \\\n        -i $idx -o $sample_id -l $lib_type -p $task.cpus $additional $reads\n    \n    cat $tx2gene > ${sample_id}/tx2gene.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 40,
        "string_script": "    def lib_type = libtype.toString().replaceAll('\\\\[|\\\\]|\\'', '')\n    \n                                                        \n    def reads = r2.toString() == \"null\" ? \"-r $r1\" : \"-1 $r1 -2 $r2\"\n\n                                       \n    if(r2.toString() == \"null\"){\n        additional = params.quant_additional.replaceAll('--gcBias', '')\n    } else additional = params.quant_additional\n\n    \"\"\"\n    salmon quant --no-version-check --validateMappings \\\n        -i $idx -o $sample_id -l $lib_type -p $task.cpus $additional $reads\n    \n    cat $tx2gene > ${sample_id}/tx2gene.txt\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "sample_id",
            "libtype",
            "r1",
            "r2",
            "idx",
            "tx2gene"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "tag \"$sample_id\"",
            "label 'process_quant'",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"salmon=1.6.0\" } if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    },
    "Tx2Gene": {
        "name_process": "Tx2Gene",
        "string_process": "process Tx2Gene {\n\n    label 'process_tx2gene'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda params.environment }\n    if(workflow.profile.contains('docker')) { container params.container }\n    if(workflow.profile.contains('singularity')) { container params.container }\n\n    input:\n    path(gtf)\n            \n    output:\n    path(\"tx2gene.txt\"), emit: tx2gene\n        \n    script:    \n    \"\"\"\n    Rscript --vanilla ${baseDir}/bin/tx2gene.R \\\n        $gtf tx2gene.txt $params.transcript_id $params.transcript_name $params.gene_id $params.gene_name $params.gene_type\n    \"\"\"                \n\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    Rscript --vanilla ${baseDir}/bin/tx2gene.R \\\n        $gtf tx2gene.txt $params.transcript_id $params.transcript_name $params.gene_id $params.gene_name $params.gene_type\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__rnaseq_preprocess",
        "directive": [
            "label 'process_tx2gene'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda params.environment } if(workflow.profile.contains('docker')) { container params.container } if(workflow.profile.contains('singularity')) { container params.container }"
        ],
        "when": "",
        "stub": ""
    }
}