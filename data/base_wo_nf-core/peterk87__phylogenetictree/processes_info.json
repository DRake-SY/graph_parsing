{
    "BUILDPHYLOGENETIC_IQTREE": {
        "name_process": "BUILDPHYLOGENETIC_IQTREE",
        "string_process": "process BUILDPHYLOGENETIC_IQTREE {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(msa_mafft)\n\n    output:\n    path \"*.iqtree\", emit: ch_iqtree\n    path \"*.treefile\", emit: ch_iqtree_newick\n\n    script:\n    \"\"\"\n    iqtree -s ${msa_mafft} -m ${params.substitution_model} -o ${params.reference_name}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    iqtree -s ${msa_mafft} -m ${params.substitution_model} -o ${params.reference_name}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "msa_mafft"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "ASSIGNLINEAGES_PANGOLIN": {
        "name_process": "ASSIGNLINEAGES_PANGOLIN",
        "string_process": "\nprocess ASSIGNLINEAGES_PANGOLIN {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(cat_consensus_seqeuences)\n\n    output:\n    path \"*.csv\", emit: ch_lineage_report\n\n\n    script:\n    \"\"\"\n    pangolin -t 2 --outfile lineage_report.csv ${cat_consensus_seqeuences}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    pangolin -t 2 --outfile lineage_report.csv ${cat_consensus_seqeuences}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "cat_consensus_seqeuences"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "REROOT_PHYLOGENETICTREE": {
        "name_process": "REROOT_PHYLOGENETICTREE",
        "string_process": "\nprocess REROOT_PHYLOGENETICTREE {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(tree_newick)\n    file(ch_reference_fasta)\n\n\n    output:\n    path \"*.nwk\", emit: ch_reroot_iqtree\n\n    script:\n    \"\"\"\n    nw_reroot ${tree_newick} `head -1 $ch_reference_fasta | tr -d \\\">\\\"` > reroot_phylogenetic_tree.nwk\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    nw_reroot ${tree_newick} `head -1 $ch_reference_fasta | tr -d \\\">\\\"` > reroot_phylogenetic_tree.nwk\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tree_newick",
            "ch_reference_fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "DETERMINE_SNPS": {
        "name_process": "DETERMINE_SNPS",
        "string_process": "\nprocess DETERMINE_SNPS {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(msa_mafft)\n\n    output:\n    path \"*.tsv\", emit: ch_alleles\n\n    script:\n    \"\"\"\n    align2alleles.py --reference-name ${params.reference_name} ${msa_mafft} > alleles.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    align2alleles.py --reference-name ${params.reference_name} ${msa_mafft} > alleles.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "msa_mafft"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "PHYLOGENTICTREE_SNPS": {
        "name_process": "PHYLOGENTICTREE_SNPS",
        "string_process": "\nprocess PHYLOGENTICTREE_SNPS {\n\n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(newick_tree)\n    file(lineage_report)\n    file(alleles_info)\n\n    output:\n    path \"*.pdf\", emit: ch_visualization_phylogenetic_tree\n\n    script:\n    \"\"\"\n    phylogenetic_tree_snps.r phylogentic_tree_snps.pdf ${newick_tree}  ${alleles_info} ${lineage_report} \n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    phylogenetic_tree_snps.r phylogentic_tree_snps.pdf ${newick_tree}  ${alleles_info} ${lineage_report} \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "newick_tree",
            "lineage_report",
            "alleles_info"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "PHYLOGENTICTREE_SHIPTV": {
        "name_process": "PHYLOGENTICTREE_SHIPTV",
        "string_process": "\nprocess PHYLOGENTICTREE_SHIPTV {\n\n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(newick_tree)\n\n    output:\n    path \"*.html\", emit: ch_shiptv_html_visualization\n    path \"*.tsv\", emit: ch_shiptv_metadata\n\n    script:\n    \"\"\"\n    shiptv -n ${newick_tree} -o shiptv_phylogenetic_tree.html -m shiptv_metadata.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    shiptv -n ${newick_tree} -o shiptv_phylogenetic_tree.html -m shiptv_metadata.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "newick_tree"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "MSA_MAFFT": {
        "name_process": "MSA_MAFFT",
        "string_process": "\nprocess MSA_MAFFT {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(cat_consensus_seqeuences)\n    file(ch_reference_fasta)\n\n    output:\n    path \"msa.aln\", emit: ch_msa_mafft\n\n    script:\n    \"\"\"\n    mafft \\\\\n        --thread ${task.cpus} \\\\\n        --6merpair \\\\\n        --addfragments ${cat_consensus_seqeuences} \\\\\n        $ch_reference_fasta > msa.aln\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    mafft \\\\\n        --thread ${task.cpus} \\\\\n        --6merpair \\\\\n        --addfragments ${cat_consensus_seqeuences} \\\\\n        $ch_reference_fasta > msa.aln\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "MAFFT"
        ],
        "tools_url": [
            "https://bio.tools/MAFFT"
        ],
        "tools_dico": [
            {
                "name": "MAFFT",
                "uri": "https://bio.tools/MAFFT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ]
                    }
                ],
                "description": "MAFFT (Multiple Alignment using Fast Fourier Transform) is a high speed multiple sequence alignment program.",
                "homepage": "http://mafft.cbrc.jp/alignment/server/index.html"
            }
        ],
        "inputs": [
            "cat_consensus_seqeuences",
            "ch_reference_fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    },
    "FILTER_GISIAD_SEQUENCES": {
        "name_process": "FILTER_GISIAD_SEQUENCES",
        "string_process": "\nprocess FILTER_GISIAD_SEQUENCES {\n    \n    tag { params.prefix }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\"\n\n    input:\n    file(ch_gisaid_sequence)\n    file(ch_gisaid_metadata)\n\n    output:\n    path \"*.fasta\", emit: ch_filter_gisiad_sequences\n    path \"*.tsv\", emit: ch_filter_gisiad_metadata\n\n\n    script:\n    filtered_fasta_output =\"filtered_gisiad_sequences.fasta\"\n    filtered_metadata_output1 =\"filtered_metadata_new_format.tsv\"\n    filtered_metadata_output2 =\"filtered_metadata_old_format.tsv\"\n    \"\"\"\n    filter_gisaid_sequences.py -i $ch_gisaid_sequence -m $ch_gisaid_metadata \\\\\n                               -s '${params.sample_lineage}' -r '${params.region}' -c '${params.country}' \\\\\n                               -of $filtered_fasta_output -om1 $filtered_metadata_output1 -om2 $filtered_metadata_output2 \\\\\n                               -lmin ${params.lmin} -lmax ${params.lmax} -x ${params.xambig}\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    filtered_fasta_output =\"filtered_gisiad_sequences.fasta\"\n    filtered_metadata_output1 =\"filtered_metadata_new_format.tsv\"\n    filtered_metadata_output2 =\"filtered_metadata_old_format.tsv\"\n    \"\"\"\n    filter_gisaid_sequences.py -i $ch_gisaid_sequence -m $ch_gisaid_metadata \\\\\n                               -s '${params.sample_lineage}' -r '${params.region}' -c '${params.country}' \\\\\n                               -of $filtered_fasta_output -om1 $filtered_metadata_output1 -om2 $filtered_metadata_output2 \\\\\n                               -lmin ${params.lmin} -lmax ${params.lmax} -x ${params.xambig}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_gisaid_sequence",
            "ch_gisaid_metadata"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "peterk87__phylogenetictree",
        "directive": [
            "tag { params.prefix }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\""
        ],
        "when": "",
        "stub": ""
    }
}