{
    "makeMethylpyIndex": {
        "name_process": "makeMethylpyIndex",
        "string_process": "\nprocess makeMethylpyIndex {\n  tag { \"$accID\" }\n  storeDir \"$reffol/${refid}_methylpy\"\n\n  input:\n  set val(accID), genome_file, reads from input_genomes\n\n  output:\n  set val(accID), genome, file(\"${refid}*\") into methylpy_indices\n\n  script:\n  genome = file(genome_file)\n  reffol = genome.parent\n  refid = genome.baseName\n  f_ref = \"$reffol/${refid}_methylpy/${refid}_f\"\n  r_ref = \"$reffol/${refid}_methylpy/${refid}_r\"\n  \"\"\"\n  samtools faidx ${genome}\n  methylpy build-reference --input-files ${genome} --output-prefix ${refid}\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  genome = file(genome_file)\n  reffol = genome.parent\n  refid = genome.baseName\n  f_ref = \"$reffol/${refid}_methylpy/${refid}_f\"\n  r_ref = \"$reffol/${refid}_methylpy/${refid}_r\"\n  \"\"\"\n  samtools faidx ${genome}\n  methylpy build-reference --input-files ${genome} --output-prefix ${refid}\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Mgenome",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/mgenome",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Mgenome",
                "uri": "https://bio.tools/mgenome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Designed to find the optimal trees for multiple genome rearrangement by signed reversals. The problem is modeled as: For a given collection of genomes represented by signed permutations on genes, find a tree to connect the given genomes by reversal paths such that the number of all signed reversals is minimized.",
                "homepage": "http://xungulab.com/software/mgenome/mgenome.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "input_genomes"
        ],
        "nb_inputs": 1,
        "outputs": [
            "methylpy_indices"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"$accID\" }",
            "storeDir \"$reffol/${refid}_methylpy\""
        ],
        "when": "",
        "stub": ""
    },
    "reads_preprocess": {
        "name_process": "reads_preprocess",
        "string_process": " process reads_preprocess {\n    tag { \"${accID}_${read_files.baseName}\" }\n    storeDir \"${params.tmpdir}/rawreads\"\n    label 'env_picard_small'\n\n    input:\n    set val(accID), reads, library_id from read_files_processing\n\n    output:\n    set val(accID), file(\"${prefix}*fastq\"), val(library) into read_files_fastqc\n    set val(accID), file(\"${prefix}*fastq\"), val(library) into read_files_trimming\n\n    script:\n    read_files = file(reads)\n    file_ext = read_files.getExtension()\n    prefix = read_files.baseName.toString() - ~/(\\.sra)?(\\.bam)?$/\n    library = library_id.toInteger()\n    if (library == 1) {\n      if (file_ext == \"sra\") {\n        \"\"\"\n        fastq-dump $read_files\n        \"\"\"\n      } else if (file_ext == \"bam\") {\n        \"\"\"\n        java -jar \\${EBROOTPICARD}/picard.jar SamToFastq I=$read_files FASTQ=${prefix}.fastq VALIDATION_STRINGENCY=LENIENT\n        \"\"\"\n      }\n    } else {\n      if (file_ext == \"sra\") {\n        \"\"\"\n        fastq-dump --split-files $read_files\n        \"\"\"\n      } else if (file_ext == \"bam\") {\n        \"\"\"\n        java -jar \\${EBROOTPICARD}/picard.jar SamToFastq I=$read_files FASTQ=${prefix}_1.fastq SECOND_END_FASTQ=${prefix}_2.fastq VALIDATION_STRINGENCY=LENIENT\n        \"\"\"\n      }\n    }\n  }",
        "nb_lignes_process": 37,
        "string_script": "    read_files = file(reads)\n    file_ext = read_files.getExtension()\n    prefix = read_files.baseName.toString() - ~/(\\.sra)?(\\.bam)?$/\n    library = library_id.toInteger()\n    if (library == 1) {\n      if (file_ext == \"sra\") {\n        \"\"\"\n        fastq-dump $read_files\n        \"\"\"\n      } else if (file_ext == \"bam\") {\n        \"\"\"\n        java -jar \\${EBROOTPICARD}/picard.jar SamToFastq I=$read_files FASTQ=${prefix}.fastq VALIDATION_STRINGENCY=LENIENT\n        \"\"\"\n      }\n    } else {\n      if (file_ext == \"sra\") {\n        \"\"\"\n        fastq-dump --split-files $read_files\n        \"\"\"\n      } else if (file_ext == \"bam\") {\n        \"\"\"\n        java -jar \\${EBROOTPICARD}/picard.jar SamToFastq I=$read_files FASTQ=${prefix}_1.fastq SECOND_END_FASTQ=${prefix}_2.fastq VALIDATION_STRINGENCY=LENIENT\n        \"\"\"\n      }\n    }",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [
            "MLibrary"
        ],
        "tools_url": [
            "https://bio.tools/mlibrary"
        ],
        "tools_dico": [
            {
                "name": "MLibrary",
                "uri": "https://bio.tools/mlibrary",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3767",
                                    "term": "Protein identification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3767",
                                    "term": "Protein inference"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0944",
                                "term": "Peptide mass fingerprint"
                            },
                            {
                                "uri": "http://edamontology.org/data_0943",
                                "term": "Mass spectrum"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0945",
                                "term": "Peptide identification"
                            }
                        ]
                    }
                ],
                "description": "Database search engine developed to assist the user in the detection and identification of small compounds, such as anabolic androgenic steroids, using the soft ionisation technique Matrix Assisted Laser Desorption/Ionisation (MALDI) coupled with mass spectrometry. It compares the results of the experimental data with theoretic values included in the database. It simplifies the interpretation of the mass spectrometry data and reduces the amount of time required to analyze the results manually.",
                "homepage": "http://www.sing-group.org/MLibrary/"
            }
        ],
        "inputs": [
            "read_files_processing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "read_files_fastqc",
            "read_files_trimming"
        ],
        "nb_outputs": 2,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${accID}_${read_files.baseName}\" }",
            "storeDir \"${params.tmpdir}/rawreads\"",
            "label 'env_picard_small'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag { \"${accID}_$reads\" }\n    label 'env_quality'\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n    input:\n    set val(accID), file(reads), val(library_id) from read_files_fastqc\n\n    output:\n    file '*_fastqc.{zip,html}' into fastqc_results\n\n    script:\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${accID}_$reads\" }",
            "label 'env_quality'",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "trim_galore": {
        "name_process": "trim_galore",
        "string_process": " process trim_galore {\n        tag { \"${accID}_$reads\" }\n        label 'env_quality'\n        publishDir \"${params.outdir}/trim_galore\", mode: 'copy',\n            saveAs: {filename ->\n                if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\"\n                else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\"\n                else params.saveTrimmed ? filename : null\n            }\n\n        input:\n        set val(accID), file(reads), val(library_id) from read_files_trimming\n\n        output:\n        set val(accID), file('*fq.gz'), val(library_id) into trimmed_reads\n        file \"*trimming_report.txt\" into trimgalore_results\n        file \"*_fastqc.{zip,html}\" into trimgalore_fastqc_reports\n\n        script:\n        c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n        c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n        tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n        tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n        rrbs = params.rrbs ? \"--rrbs\" : ''\n        illumina = params.illumina ? \"--illumina\" : ''\n        non_directional = params.rrbs && params.non_directional ? \"--non_directional\" : ''\n        if (library_id == 1) {\n            \"\"\"\n            trim_galore --fastqc --gzip $illumina $rrbs $c_r1 $tpc_r1 $reads\n            \"\"\"\n        } else {\n            \"\"\"\n            trim_galore --paired --fastqc --gzip $illumina $rrbs $c_r1 $c_r2 $tpc_r1 $tpc_r2 $reads\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 34,
        "string_script": "        c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n        c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n        tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n        tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n        rrbs = params.rrbs ? \"--rrbs\" : ''\n        illumina = params.illumina ? \"--illumina\" : ''\n        non_directional = params.rrbs && params.non_directional ? \"--non_directional\" : ''\n        if (library_id == 1) {\n            \"\"\"\n            trim_galore --fastqc --gzip $illumina $rrbs $c_r1 $tpc_r1 $reads\n            \"\"\"\n        } else {\n            \"\"\"\n            trim_galore --paired --fastqc --gzip $illumina $rrbs $c_r1 $c_r2 $tpc_r1 $tpc_r2 $reads\n            \"\"\"\n        }",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "RRBSsim",
            "illumina"
        ],
        "tools_url": [
            "https://bio.tools/RRBSsim",
            "https://bio.tools/illumina"
        ],
        "tools_dico": [
            {
                "name": "RRBSsim",
                "uri": "https://bio.tools/RRBSsim",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "Methylated DNA immunoprecipitation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "mDIP"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-chip"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3206",
                                    "term": "Whole genome methylation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0430",
                                    "term": "CpG island and isochore detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3206",
                                    "term": "Global methylation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3206",
                                    "term": "Methylation level analysis (global)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3206",
                                    "term": "Genome methylation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0430",
                                    "term": "CpG island and isochores detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0430",
                                    "term": "CpG island and isochores rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Reduced representation bisulfite sequencing simulator for next-generation sequencing.",
                "homepage": "https://github.com/xwBio/RRBSsim"
            },
            {
                "name": "illumina",
                "uri": "https://bio.tools/illumina",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "R Library for preprocessing Illumina Whole Genome Expression BeadChips.",
                "homepage": "http://bioinf.wehi.edu.au/illumina/index.html"
            }
        ],
        "inputs": [
            "read_files_trimming"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads",
            "trimgalore_results",
            "trimgalore_fastqc_reports"
        ],
        "nb_outputs": 3,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${accID}_$reads\" }",
            "label 'env_quality'",
            "publishDir \"${params.outdir}/trim_galore\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\" else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\" else params.saveTrimmed ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "methylpy_align": {
        "name_process": "methylpy_align",
        "string_process": "\nprocess methylpy_align {\n  tag { \"${accID}_$reads\" }\n  publishDir \"${params.outdir}\", mode: 'copy',\n      saveAs: {filename ->\n          if (filename.indexOf(\".bam\") > 0) \"alignedBams/$filename\"\n          else if (filename =~ '^allc' ) \"allc/$filename\"\n          else if (filename =~ '^conversion' ) \"info/$filename\"\n          else if (filename =~ '^log' ) \"info/log.${name}.txt\"\n        }\n  label 'env_methylpy'\n\n  input:\n  set val(accID), file(reads), val(library_id), file(genome), file(meth_index) from input_reads_methylpy\n\n  output:\n  set val(prefix), file(\"*processed_reads_no_clonal.bam\") into bam_aligned\n  set val(prefix), file(\"allc_*tsv.gz*\") into allc\n  set val(prefix), file(\"conversion_rate_${prefix}.txt\") into conv_rate\n\n  script:\n  reffol = genome.parent\n  refid = genome.baseName\n  if (library_id == 1) {\n      prefix = reads.toString() - ~/(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n      \"\"\"\n      export TMPDIR=\"${params.tmpdir}\"\n      methylpy single-end-pipeline --read-files ${reads} --sample $prefix --forward-ref ${refid}_f  --reverse-ref ${refid}_r  --ref-fasta  $genome   --num-procs ${task.cpus}  --remove-clonal True   --binom-test True  --unmethylated-control ${params.umeth} --java-options=\"-Djava.io.tmpdir=${params.tmpdir}\" > log.txt 2>&1\n      cat log.txt | grep \"non-conversion rate\" > conversion_rate_${prefix}.txt\n      \"\"\"\n  } else {\n      prefix = reads[0].toString() - ~/(_1)?(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n      \"\"\"\n      export TMPDIR=\"${params.tmpdir}\"\n      methylpy paired-end-pipeline --read1-files ${reads[0]}  --read2-files ${reads[1]}  --sample $prefix  --forward-ref ${refid}_f  --reverse-ref ${refid}_r  --ref-fasta  $genome  --num-procs ${task.cpus}  --remove-clonal True  --binom-test True  --unmethylated-control ${params.umeth} --java-options=\"-Djava.io.tmpdir=${params.tmpdir}\" > log.txt 2>&1\n      cat log.txt | grep \"non-conversion rate\" > conversion_rate_${prefix}.txt\n      \"\"\"\n  }\n}",
        "nb_lignes_process": 37,
        "string_script": "  reffol = genome.parent\n  refid = genome.baseName\n  if (library_id == 1) {\n      prefix = reads.toString() - ~/(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n      \"\"\"\n      export TMPDIR=\"${params.tmpdir}\"\n      methylpy single-end-pipeline --read-files ${reads} --sample $prefix --forward-ref ${refid}_f  --reverse-ref ${refid}_r  --ref-fasta  $genome   --num-procs ${task.cpus}  --remove-clonal True   --binom-test True  --unmethylated-control ${params.umeth} --java-options=\"-Djava.io.tmpdir=${params.tmpdir}\" > log.txt 2>&1\n      cat log.txt | grep \"non-conversion rate\" > conversion_rate_${prefix}.txt\n      \"\"\"\n  } else {\n      prefix = reads[0].toString() - ~/(_1)?(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n      \"\"\"\n      export TMPDIR=\"${params.tmpdir}\"\n      methylpy paired-end-pipeline --read1-files ${reads[0]}  --read2-files ${reads[1]}  --sample $prefix  --forward-ref ${refid}_f  --reverse-ref ${refid}_r  --ref-fasta  $genome  --num-procs ${task.cpus}  --remove-clonal True  --binom-test True  --unmethylated-control ${params.umeth} --java-options=\"-Djava.io.tmpdir=${params.tmpdir}\" > log.txt 2>&1\n      cat log.txt | grep \"non-conversion rate\" > conversion_rate_${prefix}.txt\n      \"\"\"\n  }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_reads_methylpy"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_aligned",
            "allc",
            "conv_rate"
        ],
        "nb_outputs": 3,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${accID}_$reads\" }",
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") > 0) \"alignedBams/$filename\" else if (filename =~ '^allc' ) \"allc/$filename\" else if (filename =~ '^conversion' ) \"info/$filename\" else if (filename =~ '^log' ) \"info/log.${name}.txt\" }",
            "label 'env_methylpy'"
        ],
        "when": "",
        "stub": ""
    },
    "bam_index": {
        "name_process": "bam_index",
        "string_process": "\nprocess bam_index {\n  tag { \"${prefix}\" }\n  publishDir \"${params.outdir}/alignedBams\", mode: 'copy'\n  label 'env_picard_small'\n\n  input:\n  set val(prefix), file(bam) from bam_aligned\n\n  output:\n  set val(prefix), file(\"*processed_reads_no_clonal.bam.bai\") into aligned_bam_index\n\n  script:\n  \"\"\"\n  samtools index $bam\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools index $bam\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_aligned"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aligned_bam_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${prefix}\" }",
            "publishDir \"${params.outdir}/alignedBams\", mode: 'copy'",
            "label 'env_picard_small'"
        ],
        "when": "",
        "stub": ""
    },
    "make_hdf5": {
        "name_process": "make_hdf5",
        "string_process": "\nprocess make_hdf5 {\n  tag { \"${prefix}\" }\n  publishDir \"${params.outdir}/hdf5\", mode: 'copy'\n  label 'env_pybshap'\n\n  input:\n  set val(prefix), file(allc) from allc\n\n  output:\n  set val(prefix), file(\"*hdf5\") into hdf5_out\n\n  script:\n  \"\"\"\n  bshap methylation_percentage -i $allc -a new -b Chr1,1,100 -o temp -v\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  bshap methylation_percentage -i $allc -a new -b Chr1,1,100 -o temp -v\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "allc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hdf5_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag { \"${prefix}\" }",
            "publishDir \"${params.outdir}/hdf5\", mode: 'copy'",
            "label 'env_pybshap'"
        ],
        "when": "",
        "stub": ""
    },
    "add_readgroups": {
        "name_process": "add_readgroups",
        "string_process": " process add_readgroups {\n    tag \"$name\"\n    label 'env_picard'\n\n    input:\n    set val(name), file(bam) from bams_snpcall\n\n    output:\n    set val(name), file(\"${name}.modified.bam\"), file(\"${name}.modified.bam.bai\") into modifiedbam\n\n    script:\n    \"\"\"\n    picard AddOrReplaceReadGroups INPUT=$bam OUTPUT=${name}.modified.bam ID=${name} LB=${name} PL=illumina PU=none SM=${name}\n    samtools index ${name}.modified.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    picard AddOrReplaceReadGroups INPUT=$bam OUTPUT=${name}.modified.bam ID=${name} LB=${name} PL=illumina PU=none SM=${name}\n    samtools index ${name}.modified.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Picard",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams_snpcall"
        ],
        "nb_inputs": 1,
        "outputs": [
            "modifiedbam"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag \"$name\"",
            "label 'env_picard'"
        ],
        "when": "",
        "stub": ""
    },
    "do_realignindel": {
        "name_process": "do_realignindel",
        "string_process": " process do_realignindel {\n    tag \"$name\"\n    label 'env_snpcall_small'\n\n    input:\n    set val(name), file(bam), file(bam_index) from modifiedbam\n\n    output:\n    set val(name), file(\"${name}.realignedBam.bam\"), file(\"${name}.realignedBam.bam.bai\") into realignedbam\n\n    script:\n    \"\"\"\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar -T RealignerTargetCreator -R $reffol/${refid}.fasta -I $bam -o ${name}.forIndelRealigner.intervals\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar -T IndelRealigner -R $reffol/${refid}.fasta -I $bam -targetIntervals ${name}.forIndelRealigner.intervals -o ${name}.realignedBam.bam\n    samtools index ${name}.realignedBam.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar -T RealignerTargetCreator -R $reffol/${refid}.fasta -I $bam -o ${name}.forIndelRealigner.intervals\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar -T IndelRealigner -R $reffol/${refid}.fasta -I $bam -targetIntervals ${name}.forIndelRealigner.intervals -o ${name}.realignedBam.bam\n    samtools index ${name}.realignedBam.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "modifiedbam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "realignedbam"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag \"$name\"",
            "label 'env_snpcall_small'"
        ],
        "when": "",
        "stub": ""
    },
    "do_snpcall": {
        "name_process": "do_snpcall",
        "string_process": " process do_snpcall {\n    tag \"$name\"\n    label 'env_snpcall'\n\n    input:\n    set val(name), file(bam), file(bam_index) from realignedbam\n\n    output:\n    set val(name), file(\"${name}.vcf\") into vcffile\n\n    script:\n    \"\"\"\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar \\\n    -T HaplotypeCaller -R $reffol/${refid}.fasta \\\n    -I $bam \\\n    -o ${name}.vcf \\\n    -nct ${task.cpus} \\\n    --output_mode EMIT_ALL_SITES \\\n    --genotyping_mode DISCOVERY \\\n    \"\"\"\n  }",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    java -Djava.io.tmpdir=${params.tmpdir} -jar \\$EBROOTGATK/GenomeAnalysisTK.jar \\\n    -T HaplotypeCaller -R $reffol/${refid}.fasta \\\n    -I $bam \\\n    -o ${name}.vcf \\\n    -nct ${task.cpus} \\\n    --output_mode EMIT_ALL_SITES \\\n    --genotyping_mode DISCOVERY \\\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "realignedbam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcffile"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag \"$name\"",
            "label 'env_snpcall'"
        ],
        "when": "",
        "stub": ""
    },
    "get_snps_from_vcf": {
        "name_process": "get_snps_from_vcf",
        "string_process": " process get_snps_from_vcf {\n    tag \"$name\"\n    publishDir \"${params.outdir}/vcfbed\", mode: 'copy'\n    label 'env_snpcall_small'\n\n    input:\n    set val(name), file(vcf) from vcffile\n\n    output:\n    set val(name), file(\"${name}.snpvcf.bed\") into snpbed\n\n    script:\n    \"\"\"\n    bcftools query -f \"%CHROM\\t%POS\\t%REF\\t%ALT[\\t%GT][\\t%AD]\\n\" $vcf | awk '\\$3 !~ /C|G/ && length(\\$3) == 1 && length(\\$4) == 1 && \\$4 !~ /T/ {print \\$1 \"\\t\" \\$2 \"\\t\" \\$5 \"\\t\" \\$6}'  > ${name}.snpvcf.bed\n    \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    bcftools query -f \"%CHROM\\t%POS\\t%REF\\t%ALT[\\t%GT][\\t%AD]\\n\" $vcf | awk '\\$3 !~ /C|G/ && length(\\$3) == 1 && length(\\$4) == 1 && \\$4 !~ /T/ {print \\$1 \"\\t\" \\$2 \"\\t\" \\$5 \"\\t\" \\$6}'  > ${name}.snpvcf.bed\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcffile"
        ],
        "nb_inputs": 1,
        "outputs": [
            "snpbed"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/vcfbed\", mode: 'copy'",
            "label 'env_snpcall_small'"
        ],
        "when": "",
        "stub": ""
    },
    "identify_libraries": {
        "name_process": "identify_libraries",
        "string_process": " process identify_libraries{\n    label 'env_picard_small'\n    tag { \"${accID}_${read_files.baseName}\" }\n\n    input:\n    set val(accID), genome, reads from input_reads\n\n    output:\n    set val(accID), reads, stdout into read_files_processing\n\n    script:\n    read_files = file(reads)\n    file_ext = read_files.getExtension()\n    if (file_ext == \"sra\"){\n      \"\"\"\n      fastq-dump -I -X 1 -Z --split-spot $read_files  | awk ' NR % 2 == 1 {print substr(\\$1,length(\\$1),1) } ' | uniq | wc -l\n      \"\"\"\n    } else if (file_ext == \"bam\"){\n      \"\"\"\n      (samtools view -h $read_files | head -n 100 | samtools view -f 0x1 | wc -l | awk '{print \\$0 + 1 }' ) || true\n      \"\"\"\n    }\n  }",
        "nb_lignes_process": 21,
        "string_script": "    read_files = file(reads)\n    file_ext = read_files.getExtension()\n    if (file_ext == \"sra\"){\n      \"\"\"\n      fastq-dump -I -X 1 -Z --split-spot $read_files  | awk ' NR % 2 == 1 {print substr(\\$1,length(\\$1),1) } ' | uniq | wc -l\n      \"\"\"\n    } else if (file_ext == \"bam\"){\n      \"\"\"\n      (samtools view -h $read_files | head -n 100 | samtools view -f 0x1 | wc -l | awk '{print \\$0 + 1 }' ) || true\n      \"\"\"\n    }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "input_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "read_files_processing"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__nf-methylpy",
        "directive": [
            "label 'env_picard_small'",
            "tag { \"${accID}_${read_files.baseName}\" }"
        ],
        "when": "",
        "stub": ""
    }
}