{
    "OPERATION_1": {
        "string": "ch_multiqc_config = Channel.fromPath(params.multiqc_config)",
        "origin": [
            [
                "params.multiqc_config",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_multiqc_config",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "ch_output_docs = Channel.fromPath(\"$baseDir/docs/output.md\")",
        "origin": [
            [
                "\"$baseDir/docs/output.md\"",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_output_docs",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "files = Channel.create()",
        "origin": [],
        "gives": [
            [
                "files",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "files_to_fastqc = Channel.create()",
        "origin": [],
        "gives": [
            [
                "files_to_fastqc",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "files_preprocessed = Channel.create()",
        "origin": [],
        "gives": [
            [
                "files_preprocessed",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "files_filtered = Channel.create()",
        "origin": [],
        "gives": [
            [
                "files_filtered",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "files_pilon = Channel.create()",
        "origin": [],
        "gives": [
            [
                "files_pilon",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "assembly_nopilon = Channel.create()",
        "origin": [],
        "gives": [
            [
                "assembly_nopilon",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "assembly_pilon = Channel.create()",
        "origin": [],
        "gives": [
            [
                "assembly_pilon",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "assembly_merged = Channel.create()",
        "origin": [],
        "gives": [
            [
                "assembly_merged",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "summary.collect { k,v -> \"${k.padRight(18)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_12": {
        "string": "files_lr_filtered\n    .choice(files_preprocessed, files_to_fastqc){\n        longReadOnly ? 0 : 1\n        }",
        "origin": [
            [
                "files_lr_filtered",
                "P"
            ]
        ],
        "gives": [
            [
                "files_preprocessed",
                "P"
            ],
            [
                "files_to_fastqc",
                "P"
            ]
        ]
    },
    "OPERATION_13": {
        "string": "files_preprocessed\n    .mix(files_filtered)\n    .into{\n        files_pre_unicycler;\n        files_pre_miniasm;\n        files_pre_wtdbg2;\n        }",
        "origin": [
            [
                "files_preprocessed",
                "P"
            ],
            [
                "files_filtered",
                "P"
            ]
        ],
        "gives": [
            [
                "files_pre_unicycler",
                "P"
            ],
            [
                "files_pre_miniasm",
                "P"
            ],
            [
                "files_pre_wtdbg2",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    },
    "OPERATION_14": {
        "string": "files_unpolished_racon         \n                            \n    .choice(files_pilon, assembly_nopilon){\n        longReadOnly ? 1 : 0}",
        "origin": [
            [
                "files_unpolished_racon",
                "P"
            ]
        ],
        "gives": [
            [
                "files_pilon",
                "P"
            ],
            [
                "assembly_nopilon",
                "P"
            ]
        ]
    },
    "OPERATION_15": {
        "string": "assembly_merged = assembly_nopilon\n    .map{it -> [it[0], it[4], it[5]]}\n    .mix(\n        assembly_unicycler,\n        assembly_pilon \n        )\n    .into{asm_quast; asm_format}",
        "origin": [
            [
                "assembly_nopilon",
                "P"
            ],
            [
                "assembly_unicycler",
                "P"
            ],
            [
                "assembly_pilon",
                "P"
            ]
        ],
        "gives": [
            [
                "assembly_merged",
                "P"
            ],
            [
                "asm_quast",
                "P"
            ],
            [
                "asm_format",
                "P"
            ]
        ]
    }
}