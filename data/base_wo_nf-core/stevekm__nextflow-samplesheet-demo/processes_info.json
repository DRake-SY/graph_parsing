{
    "make_file": {
        "name_process": "make_file",
        "string_process": "\nprocess make_file {\n    input:\n    val(sampleID) from samples\n\n    output:\n    file \"${sampleID}\" into samples_files, samples_files2\n\n    script:\n    \"\"\"\n    echo \"${sampleID}\" > \"${sampleID}\"\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "    \"\"\"\n    echo \"${sampleID}\" > \"${sampleID}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_files",
            "samples_files2"
        ],
        "nb_outputs": 2,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "tumor_normal_compare": {
        "name_process": "tumor_normal_compare",
        "string_process": "\nprocess tumor_normal_compare {\n    echo true\n    executor \"local\"\n\n    input:\n    set val(tumorID), file(tumorFile), val(normalID), file(normalFile) from sample_file_pairs\n\n    script:\n    \"\"\"\n    echo \"[tumor_normal_compare] tumorID: ${tumorID}, tumorFile: ${tumorFile}, normalID: ${normalID}, normalFile: ${normalFile}\"\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "    \"\"\"\n    echo \"[tumor_normal_compare] tumorID: ${tumorID}, tumorFile: ${tumorFile}, normalID: ${normalID}, normalFile: ${normalFile}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_file_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "executor \"local\""
        ],
        "when": "",
        "stub": ""
    },
    "get_samples_files": {
        "name_process": "get_samples_files",
        "string_process": "\nprocess get_samples_files {\n    tag { \"${sample_ID}\" }\n    executor \"local\"\n    echo true\n    input:\n    set val(sample_ID), file(reads1: \"*\"), file(reads2: \"*\") from samples_R1_R2_2\n\n    script:\n    \"\"\"\n    echo \"[get_samples_files] sample_ID: ${sample_ID}, reads1: ${reads1}, reads2: ${reads2}\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    echo \"[get_samples_files] sample_ID: ${sample_ID}, reads1: ${reads1}, reads2: ${reads2}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_R1_R2_2"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${sample_ID}\" }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "get_file": {
        "name_process": "get_file",
        "string_process": "\nprocess get_file {\n    tag { \"${fastq}\" }\n    executor \"local\"\n    echo true\n    input:\n    val(fastq) from samples_fastqs\n\n    script:\n    def output_html = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.html\")\n    def output_zip = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.zip\")\n    \"\"\"\n    echo \"[get_file] fastq: ${fastq}, output_html: ${output_html}, output_zip: ${output_zip}\"\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    def output_html = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.html\")\n    def output_zip = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.zip\")\n    \"\"\"\n    echo \"[get_file] fastq: ${fastq}, output_html: ${output_html}, output_zip: ${output_zip}\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${fastq}\" }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "check_var": {
        "name_process": "check_var",
        "string_process": "\nprocess check_var {\n    tag { \"${fastq}\" }\n    executor \"local\"\n    echo true\n    input:\n    val(fastq) from samples_fastqs2\n\n    script:\n    \"\"\"\n    # export SOMEVAR=fooooooo\n    check_var.sh\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    # export SOMEVAR=fooooooo\n    check_var.sh\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_fastqs2"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${fastq}\" }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "make_txt": {
        "name_process": "make_txt",
        "string_process": "\nprocess make_txt {\n    tag { \"${sample_ID}\" }\n    executor \"local\"\n    echo true\n\n    input:\n    val(sample_ID) from samples_list\n\n    output:\n    file \"${sample_ID}.txt\" into samples_files, samples_files2\n\n    script:\n\n    \"\"\"\n    echo \"[make_txt] ${sample_ID}\"\n    echo \"[make_txt] ${sample_ID}\" > \"${sample_ID}.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    echo \"[make_txt] ${sample_ID}\"\n    echo \"[make_txt] ${sample_ID}\" > \"${sample_ID}.txt\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_files",
            "samples_files2"
        ],
        "nb_outputs": 2,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${sample_ID}\" }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "make_dir": {
        "name_process": "make_dir",
        "string_process": "\nprocess make_dir {\n    echo true\n    stageInMode \"copy\"\n\n    input:\n    file(\"*\") from samples_files.collect()\n\n    output:\n    file(\"samples_dir\") into samples_dir\n\n    script:\n    \"\"\"\n    echo \"[make_dir]\"\n    pwd\n    for item in *; do\n        mkdir -p samples_dir\n        mv \"\\${item}\" samples_dir/\n    done\n    tree\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    echo \"[make_dir]\"\n    pwd\n    for item in *; do\n        mkdir -p samples_dir\n        mv \"\\${item}\" samples_dir/\n    done\n    tree\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "RTREE"
        ],
        "tools_url": [
            "https://bio.tools/rtree"
        ],
        "tools_dico": [
            {
                "name": "RTREE",
                "uri": "https://bio.tools/rtree",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2990",
                                    "term": "Classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0283",
                                    "term": "Linkage analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Analyze relative risk and conducts sib pair linkage analysis using tree-based methods.",
                "homepage": "http://c2s2.yale.edu/software/rtree/"
            }
        ],
        "inputs": [
            "samples_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "stageInMode \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "use_dir": {
        "name_process": "use_dir",
        "string_process": "\nprocess use_dir {\n    echo true\n\n    input:\n    file(dir) from samples_dir\n\n    script:\n    \"\"\"\n    echo \"[use_dir]\"\n    pwd\n    tree \"${dir}/\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    echo \"[use_dir]\"\n    pwd\n    tree \"${dir}/\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "RTREE"
        ],
        "tools_url": [
            "https://bio.tools/rtree"
        ],
        "tools_dico": [
            {
                "name": "RTREE",
                "uri": "https://bio.tools/rtree",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2990",
                                    "term": "Classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0283",
                                    "term": "Linkage analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Analyze relative risk and conducts sib pair linkage analysis using tree-based methods.",
                "homepage": "http://c2s2.yale.edu/software/rtree/"
            }
        ],
        "inputs": [
            "samples_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "make_files": {
        "name_process": "make_files",
        "string_process": "\nprocess make_files {\n    executor \"local\"\n    echo true\n\n    input:\n    val(fastq) from samples_fastqs\n\n    output:\n    file(output_html)\n    file(output_zip)\n\n    script:\n    output_html = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.html\")\n    output_zip = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.zip\")\n    \"\"\"\n    touch \"${output_html}\"\n    touch \"${output_zip}\"\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    output_html = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.html\")\n    output_zip = \"${fastq}\".replaceFirst(/.fastq.gz$/, \"_fastqc.zip\")\n    \"\"\"\n    touch \"${output_html}\"\n    touch \"${output_zip}\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "output_html",
            "output_zip"
        ],
        "nb_outputs": 2,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "get_files": {
        "name_process": "get_files",
        "string_process": "\nprocess get_files {\n    echo true\n    executor \"local\"\n\n    input:\n    set val(sampleID), file(sampleTXT), file(sampleTXT2) from samples_file3\n\n    script:\n    \"\"\"\n    echo \"[get_files] sampleID: ${sampleID}, sampleTXT: ${sampleTXT}, sampleTXT2: ${sampleTXT2}\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    echo \"[get_files] sampleID: ${sampleID}, sampleTXT: ${sampleTXT}, sampleTXT2: ${sampleTXT2}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_file3"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "executor \"local\""
        ],
        "when": "",
        "stub": ""
    },
    "get_files2": {
        "name_process": "get_files2",
        "string_process": "\nprocess get_files2 {\n    echo true\n    executor \"local\"\n\n    input:\n    set val(sampleID), file(sampleTXT), file(sampleTXT2) from samples_file4\n\n    script:\n    \"\"\"\n    echo \"[get_files2] sampleID: ${sampleID}, sampleTXT: ${sampleTXT}, sampleTXT2: ${sampleTXT2}\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    echo \"[get_files2] sampleID: ${sampleID}, sampleTXT: ${sampleTXT}, sampleTXT2: ${sampleTXT2}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_file4"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "executor \"local\""
        ],
        "when": "",
        "stub": ""
    },
    "python_test": {
        "name_process": "python_test",
        "string_process": "\nprocess python_test {\n    echo true\n    executor \"local\"\n\n    input:\n    file 'file*' from samples_files.collect()\n\n    script:\n    \"\"\"\n    python - file* <<E0F\nimport sys\nprint(sys.argv)\nE0F\n    \"\"\"\n\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    python - file* <<E0F\nimport sys\nprint(sys.argv)\nE0F\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "tximport"
        ],
        "tools_url": [
            "https://bio.tools/tximport"
        ],
        "tools_dico": [
            {
                "name": "tximport",
                "uri": "https://bio.tools/tximport",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An R/Bioconductor package that imports transcript-level abundance, estimated counts and transcript lengths, and summarizes into matrices for use with downstream gene-level analysis packages.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/tximport.html"
            }
        ],
        "inputs": [
            "samples_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "executor \"local\""
        ],
        "when": "",
        "stub": ""
    },
    "analyze_pairs": {
        "name_process": "analyze_pairs",
        "string_process": "\nprocess analyze_pairs {\n    tag { \"${sampleComparison}\" }\n    executor \"local\"\n    echo true\n\n    input:\n    set val(sampleComparison), val(sampleID), val(tumorID), val(normalID), val(sampleVal1), val(sampleVal2) from sample_pairs\n\n    script:\n    \"\"\"\n    echo \"[analyze_pairs] sampleComparison: ${sampleComparison}, sampleID: ${sampleID}, tumorID: ${tumorID}, normalID: ${normalID},  sampleVal1: ${sampleVal1}, sampleVal2: ${sampleVal2}\"\n\n    normalVal1=\"\\$(echo \"${sampleVal1}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f1 -d' ')\"\n    tumorVal1=\"\\$(echo \"${sampleVal1}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f2 -d' ')\"\n\n    normalVal2=\"\\$(echo \"${sampleVal2}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f1 -d' ')\"\n    tumorVal2=\"\\$(echo \"${sampleVal2}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f2 -d' ')\"\n\n    echo \"[analyze_pairs] normalVal1: \\${normalVal1}, tumorVal1: \\${tumorVal1}, normalVal2: \\${normalVal2}, tumorVal2: \\${tumorVal2} \"\n\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    echo \"[analyze_pairs] sampleComparison: ${sampleComparison}, sampleID: ${sampleID}, tumorID: ${tumorID}, normalID: ${normalID},  sampleVal1: ${sampleVal1}, sampleVal2: ${sampleVal2}\"\n\n    normalVal1=\"\\$(echo \"${sampleVal1}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f1 -d' ')\"\n    tumorVal1=\"\\$(echo \"${sampleVal1}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f2 -d' ')\"\n\n    normalVal2=\"\\$(echo \"${sampleVal2}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f1 -d' ')\"\n    tumorVal2=\"\\$(echo \"${sampleVal2}\" | tr -d '[' | tr -d ',' | tr -d ']' | cut -f2 -d' ')\"\n\n    echo \"[analyze_pairs] normalVal1: \\${normalVal1}, tumorVal1: \\${tumorVal1}, normalVal2: \\${normalVal2}, tumorVal2: \\${tumorVal2} \"\n\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${sampleComparison}\" }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "print_row": {
        "name_process": "print_row",
        "string_process": "\nprocess print_row {\n    echo true\n    input:\n    val(row) from all_samples\n    script:\n    \"\"\"\n    echo \"print_row: ${row}\"\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    echo \"print_row: ${row}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "all_samples"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "combine_chrom_samples": {
        "name_process": "combine_chrom_samples",
        "string_process": "\nprocess combine_chrom_samples {\n    tag { \"${sampleID}.${chrom}.${regions_file}\" }\n    publishDir \"output/chroms\"\n\n    input:\n    set val(chrom), val(sampleID), file(regions_file) from chroms.combine(samples).combine(regions_file_ch)\n\n    output:\n    file \"${sampleID}.${chrom}.bed\"\n\n    script:\n    \"\"\"\n    $params.subset_bed_script \"${chrom}\" \"${regions_file}\" > \"${sampleID}.${chrom}.bed\"\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    $params.subset_bed_script \"${chrom}\" \"${regions_file}\" > \"${sampleID}.${chrom}.bed\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chroms",
            "samples",
            "regions_file_ch"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { \"${sampleID}.${chrom}.${regions_file}\" }",
            "publishDir \"output/chroms\""
        ],
        "when": "",
        "stub": ""
    },
    "gather_files": {
        "name_process": "gather_files",
        "string_process": "\nprocess gather_files {\n    echo true\n    input:\n    file \"*\" from samples_files.toList()\n\n    script:\n    \"\"\"\n    pwd\n    echo *\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "    \"\"\"\n    pwd\n    echo *\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "print_values": {
        "name_process": "print_values",
        "string_process": "\nprocess print_values {\n    tag { value }\n    echo true\n\n    input:\n    val(value) from values\n\n    output:\n    file \"${value}.txt\" into value_files\n\n    script:\n    \"\"\"\n    echo \"value is ${value}\"\n    echo \"heres your value: ${value}\" > \"${value}.txt\"\n    cat \"${value}.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    echo \"value is ${value}\"\n    echo \"heres your value: ${value}\" > \"${value}.txt\"\n    cat \"${value}.txt\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "values"
        ],
        "nb_inputs": 1,
        "outputs": [
            "value_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { value }",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "print_samples": {
        "name_process": "print_samples",
        "string_process": "\nprocess print_samples {\n    tag { sample_ID }\n    executor \"local\"\n    echo true\n\n    input:\n    set val(sample_ID), file(sample_bam), file(sample_bai) from samples_print\n\n    script:\n    \"\"\"\n    echo \"sample: ${sample_ID}, bam: ${sample_bam}, bai: ${sample_bai}\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    echo \"sample: ${sample_ID}, bam: ${sample_bam}, bai: ${sample_bai}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_print"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { sample_ID }",
            "executor \"local\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "make_samples_foo_txt": {
        "name_process": "make_samples_foo_txt",
        "string_process": "\nprocess make_samples_foo_txt {\n    tag { sample_ID }\n    executor \"local\"\n    publishDir \"${params.output_dir}/samples_foo_txt\"\n\n    input:\n    set val(sample_ID), file(sample_bam), file(sample_bai) from samples_check\n\n    output:\n    file \"${sample_ID}.foo.txt\" into samples_files, samples_files2\n\n    script:\n    \"\"\"\n    if [ -e \"${sample_ID}.bam\" ]; then echo \"sample_bam exists\"; else echo \"sample_bam does not exist\" && exit 1 ; fi\n    if [ -e \"${sample_ID}.bam.bai\" ]; then echo \"sample_bai exists\"; else echo \"sample_bai does not exist\" && exit 1 ; fi\n    echo \"${sample_ID}\" > \"${sample_ID}.foo.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    if [ -e \"${sample_ID}.bam\" ]; then echo \"sample_bam exists\"; else echo \"sample_bam does not exist\" && exit 1 ; fi\n    if [ -e \"${sample_ID}.bam.bai\" ]; then echo \"sample_bai exists\"; else echo \"sample_bai does not exist\" && exit 1 ; fi\n    echo \"${sample_ID}\" > \"${sample_ID}.foo.txt\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_check"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_files",
            "samples_files2"
        ],
        "nb_outputs": 2,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "tag { sample_ID }",
            "executor \"local\"",
            "publishDir \"${params.output_dir}/samples_foo_txt\""
        ],
        "when": "",
        "stub": ""
    },
    "files_list_file": {
        "name_process": "files_list_file",
        "string_process": "\nprocess files_list_file {\n    executor \"local\"\n    publishDir \"${params.output_dir}/files_list_file\"\n\n    input:\n    file \"*.foo.txt\" from samples_files.toList()\n\n    output:\n    file \"files.txt\"\n\n    script:\n    \"\"\"\n    echo \"*.foo.txt\" > files.txt\n    \"\"\"\n\n\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    echo \"*.foo.txt\" > files.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "executor \"local\"",
            "publishDir \"${params.output_dir}/files_list_file\""
        ],
        "when": "",
        "stub": ""
    },
    "print_samples_pairs": {
        "name_process": "print_samples_pairs",
        "string_process": "\nprocess print_samples_pairs {\n    echo true\n    publishDir \"${params.output_dir}/samples_pairs_txt\"\n\n    input:\n    set val(sample_comparison_ID), val(sample_tumor_ID), file(sample_tumor_bam), file(sample_tumor_bai), val(sample_normal_ID), file(sample_normal_bam), file(sample_normal_bai) from samples_pairs\n\n    output:\n    file \"${sample_comparison_ID}.txt\" into samples_pairs_txt\n\n    script:\n    \"\"\"\n    echo \"sample_comparison_ID: ${sample_comparison_ID}, sample_tumor_ID: ${sample_tumor_ID}, sample_tumor_bam: ${sample_tumor_bam}, sample_tumor_bai: ${sample_tumor_bai}, sample_normal_ID: ${sample_normal_ID}, sample_normal_bam: ${sample_normal_bam}, sample_normal_bai: ${sample_normal_bai}\"\n    echo \"${sample_comparison_ID}\" > \"${sample_comparison_ID}.txt\"\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    echo \"sample_comparison_ID: ${sample_comparison_ID}, sample_tumor_ID: ${sample_tumor_ID}, sample_tumor_bam: ${sample_tumor_bam}, sample_tumor_bai: ${sample_tumor_bai}, sample_normal_ID: ${sample_normal_ID}, sample_normal_bam: ${sample_normal_bam}, sample_normal_bai: ${sample_normal_bai}\"\n    echo \"${sample_comparison_ID}\" > \"${sample_comparison_ID}.txt\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_pairs_txt"
        ],
        "nb_outputs": 1,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "publishDir \"${params.output_dir}/samples_pairs_txt\""
        ],
        "when": "",
        "stub": ""
    },
    "gather_samples_pairs_txt": {
        "name_process": "gather_samples_pairs_txt",
        "string_process": "\nprocess gather_samples_pairs_txt {\n    echo true\n    publishDir \"${params.output_dir}/gather_samples_pairs_txt\"\n\n    input:\n    file \"*\" from samples_pairs_txt.toList()\n\n    output:\n    file \"gather_samples_pairs.txt\"\n\n    script:\n    \"\"\"\n    echo \"*\"\n    echo \"*\" > gather_samples_pairs.txt\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    echo \"*\"\n    echo \"*\" > gather_samples_pairs.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_pairs_txt"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "publishDir \"${params.output_dir}/gather_samples_pairs_txt\""
        ],
        "when": "",
        "stub": ""
    },
    "make_samples_list_files": {
        "name_process": "make_samples_list_files",
        "string_process": "\nprocess make_samples_list_files {\n    echo true\n    publishDir \"${params.output_dir}/make_samples_list_files\"\n\n    input:\n    val(sampleID) from samples_list\n\n    output:\n    file \"${sampleID}\" into samples_list_files, samples_list_files2, samples_list_files3, samples_list_files4\n\n    script:\n    \"\"\"\n    echo \"${sampleID}\" > \"${sampleID}\"\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    echo \"${sampleID}\" > \"${sampleID}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samples_list_files",
            "samples_list_files2",
            "samples_list_files3",
            "samples_list_files4"
        ],
        "nb_outputs": 4,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "publishDir \"${params.output_dir}/make_samples_list_files\""
        ],
        "when": "",
        "stub": ""
    },
    "print_samples_list": {
        "name_process": "print_samples_list",
        "string_process": "\nprocess print_samples_list {\n    echo true\n\n    input:\n    val(sampleID) from samples_list2.toList()\n\n    script:\n    \"\"\"\n    echo \"print_samples_list: ${sampleID.join(' ')}\"\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "    \"\"\"\n    echo \"print_samples_list: ${sampleID.join(' ')}\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list2"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "print_samples_list_files": {
        "name_process": "print_samples_list_files",
        "string_process": "\nprocess print_samples_list_files {\n    echo true\n    publishDir \"${params.output_dir}/gather_samples_list_files\"\n\n    input:\n    file \"*\" from samples_list_files.toList()\n\n    script:\n    \"\"\"\n    pwd\n    echo *\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    pwd\n    echo *\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true",
            "publishDir \"${params.output_dir}/gather_samples_list_files\""
        ],
        "when": "",
        "stub": ""
    },
    "test_py": {
        "name_process": "test_py",
        "string_process": "\nprocess test_py {\n    echo true\n\n    input:\n    file \"*\" from samples_list_files4.toList()\n\n    script:\n    \"\"\"\n    test.py\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "    \"\"\"\n    test.py\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list_files4"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "test_R": {
        "name_process": "test_R",
        "string_process": "\nprocess test_R {\n    echo true\n\n    input:\n    file \"*\" from samples_list_files3.toList()\n\n    script:\n    \"\"\"\n    test.R\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "    \"\"\"\n    test.R\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples_list_files3"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "stevekm__nextflow-samplesheet-demo",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    }
}