{
    "merge_fastq": {
        "name_process": "merge_fastq",
        "string_process": "\nprocess merge_fastq {\n    \n  tag{ library }\n    \n  input: set library, indiv, fastqR1, fastqR2 from fastq_mergeFastq_ch\n\n  output: set library, indiv, \"*fastq.gz\" into mergedFastq_ch\n\n  script:\n  def fastqR1String = fastqR1.join(\" \")\n  def fastqR2String = fastqR2.join(\" \")\n  def fastqcount = fastqR1.size()\n  \"\"\"\n  if [ ${fastqcount} == 1 ]\n  then\n    ln -s ${fastqR1String} ${library}_R1.fastq.gz\n    ln -s ${fastqR2String} ${library}_R2.fastq.gz\n  else\n    zcat ${fastqR1String} | gzip > ${library}_R1.fastq.gz\n    zcat ${fastqR2String} | gzip > ${library}_R2.fastq.gz\n  fi\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  def fastqR1String = fastqR1.join(\" \")\n  def fastqR2String = fastqR2.join(\" \")\n  def fastqcount = fastqR1.size()\n  \"\"\"\n  if [ ${fastqcount} == 1 ]\n  then\n    ln -s ${fastqR1String} ${library}_R1.fastq.gz\n    ln -s ${fastqR2String} ${library}_R2.fastq.gz\n  else\n    zcat ${fastqR1String} | gzip > ${library}_R1.fastq.gz\n    zcat ${fastqR2String} | gzip > ${library}_R2.fastq.gz\n  fi\n  \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library } input: set library, indiv, fastqR1, fastqR2 from fastq_mergeFastq_ch output: set library, indiv, \"*fastq.gz\" into mergedFastq_ch"
        ],
        "when": "",
        "stub": ""
    },
    "seqprep": {
        "name_process": "seqprep",
        "string_process": "\nprocess seqprep {\n  \n  tag { library }\n\n  cache 'deep'\n  \n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if( filename.endsWith(\".log\")) \"log/$filename\"\n    else if( filename.endsWith(\".stats\")) \"qc/$filename\" }\n  \n  input: set library, indiv, fastqfiles from mergedFastq_ch\n  \n  output: set library, indiv, \"*SeqPrep.fastq.gz\" into seqprep_ch\n  output: file \"*.log\" into seqprep_log_ch\n  output: file \"*.stats\" into seqprep_stats_ch\n  \n  script:\n  \"\"\"\n  SeqPrep \\\n    -f ${fastqfiles[0]} \\\n    -r ${fastqfiles[1]} \\\n    -1 ${library}.SeqPrep_R1.fastq.gz \\\n    -2 ${library}_SeqPrep_R2.fastq.gz \\\n    -A CTGTCTCTTATA -B CTGTCTCTTATA \\\n    -s ${library}.SeqPrep.fastq.gz > ${library}.SeqPrep.log 2>&1\n  cp ${library}.SeqPrep.log ${library}.SeqPrep.stats\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "  \"\"\"\n  SeqPrep \\\n    -f ${fastqfiles[0]} \\\n    -r ${fastqfiles[1]} \\\n    -1 ${library}.SeqPrep_R1.fastq.gz \\\n    -2 ${library}_SeqPrep_R2.fastq.gz \\\n    -A CTGTCTCTTATA -B CTGTCTCTTATA \\\n    -s ${library}.SeqPrep.fastq.gz > ${library}.SeqPrep.log 2>&1\n  cp ${library}.SeqPrep.log ${library}.SeqPrep.stats\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SeqPrep"
        ],
        "tools_url": [
            "https://bio.tools/seqprep"
        ],
        "tools_dico": [
            {
                "name": "SeqPrep",
                "uri": "https://bio.tools/seqprep",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3095",
                                    "term": "Nucleic acid design"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Strips adapters and optionally merges overlapping paired-end (or paired-end contamination in mate-pair libraries) illumina style reads.",
                "homepage": "https://github.com/jstjohn/SeqPrep"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag { library }",
            "cache 'deep'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".log\")) \"log/$filename\" else if( filename.endsWith(\".stats\")) \"qc/$filename\" } input: set library, indiv, fastqfiles from mergedFastq_ch output: set library, indiv, \"*SeqPrep.fastq.gz\" into seqprep_ch output: file \"*.log\" into seqprep_log_ch output: file \"*.stats\" into seqprep_stats_ch"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_aln": {
        "name_process": "bwa_aln",
        "string_process": "\nprocess bwa_aln {\n  \n  tag{ library }\n  \n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if( filename.endsWith(\".log\")) \"log/$filename\" }\n\t\n  input:\n    set library, indiv, fastq from seqprep_ch\n                                           \n  \n  output:\n\tset library, indiv, fastq, \"*.sai\" into bwa_aln_ch\n\tfile \"*.log\" into bwa_aln_log_ch\n    \n  script:\n  \"\"\"\n  bwa \\\n    aln -t ${task.cpus} \\\n    -l 16500 \\\n    -n 0.01 \\\n    -o 2 \\\n    ${params.bwa_idx} \\\n    ${fastq} > ${library}.sai 2> ${library}_bwa_aln_.log\n  \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  bwa \\\n    aln -t ${task.cpus} \\\n    -l 16500 \\\n    -n 0.01 \\\n    -o 2 \\\n    ${params.bwa_idx} \\\n    ${fastq} > ${library}.sai 2> ${library}_bwa_aln_.log\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BWA",
            "topaln"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/topaln"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "topaln",
                "uri": "https://bio.tools/topaln",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3383",
                            "term": "Bioimaging"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3383",
                            "term": "Biological imaging"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This program implements an integer linear programming approach for topologically aligning two segmented images as the linking step in cell tracking.",
                "homepage": "http://www.bioinf.rub.de/software/topaln.html.en"
            }
        ],
        "inputs": [
            "seqprep_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwa_aln_ch",
            "bwa_aln_log_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".log\")) \"log/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_bam": {
        "name_process": "bwa_bam",
        "string_process": "\nprocess bwa_bam {\n\n    tag{ library }\n\n    input:\n\tset library, indiv, fastq, sais from bwa_aln_ch\n                                           \n  \n    output:\n    set library, indiv, \"*.bam\" into bwa_bam_markdups_ch, bwa_bam_qc_ch\n    file \"*.log\" into bwa_bam_log_ch\n    \n    script:\n\n    def rg=\"\\'@RG\\\\tID:${library}\\\\tSM:${library}\\\\tPL:illumina\\\\tLB:1\\\\tPU:1\\'\"\n    \"\"\"\n    bwa samse \\\n    -r $rg ${params.bwa_idx} \\\n    ${sais} \\\n    ${fastq} > ${library}.sam 2> ${library}_bwa_sam.log\n    samtools view -b -o ${library}_unsorted.bam ${library}.sam\n    samtools sort -o ${library}.bam ${library}_unsorted.bam\n    samtools index ${library}.bam\n    rm ${library}.sam\n    rm ${library}_unsorted.bam\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    def rg=\"\\'@RG\\\\tID:${library}\\\\tSM:${library}\\\\tPL:illumina\\\\tLB:1\\\\tPU:1\\'\"\n    \"\"\"\n    bwa samse \\\n    -r $rg ${params.bwa_idx} \\\n    ${sais} \\\n    ${fastq} > ${library}.sam 2> ${library}_bwa_sam.log\n    samtools view -b -o ${library}_unsorted.bam ${library}.sam\n    samtools sort -o ${library}.bam ${library}_unsorted.bam\n    samtools index ${library}.bam\n    rm ${library}.sam\n    rm ${library}_unsorted.bam\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bwa_aln_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwa_bam_markdups_ch",
            "bwa_bam_qc_ch",
            "bwa_bam_log_ch"
        ],
        "nb_outputs": 3,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }"
        ],
        "when": "",
        "stub": ""
    },
    "remove_duplicates": {
        "name_process": "remove_duplicates",
        "string_process": "\nprocess remove_duplicates {\n  \n  tag{ library }\n\n  label 'picard'\n  \n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n\tif( filename.endsWith(\".bam\")) \"results/alignments/$filename\"\n\telse if (filename.endsWith(\".bai\")) \"results/alignments/$filename\"\n\telse if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n\telse if (filename.endsWith(\"MarkDuplicates.metrics.txt\")) \"qc/data/$filename\"\n\telse if (filename.endsWith(\"flagstat\" )) \"qc/data/$filename\"\n\telse if (filename.endsWith(\"idxstats\" )) \"qc/data/$filename\" }\n\n  input:\n  set library, indiv, bamfile from bwa_bam_markdups_ch\n\n  output:\n  set library, indiv, \"*.bam\" into(\n    remove_duplicates_ch,\n    remove_duplicates_pmdtools_metrics_lib_ch,\n    remove_duplicates_oxoG_metrics_lib_ch,\n    remove_duplicates_wgs_metrics_lib_ch,\n    remove_duplicates_insert_size_lib_ch,\n    remove_duplicates_collect_alignment_metrics_library_ch,\n    remove_duplicates_bam_to_vcf_library_ch )\n  file \"*.log\" into remove_duplicates_log_ch\n  file \"*.MarkDuplicates.metrics.txt\" into remove_duplicates_metrics_ch\n  file \"*.flagstat\" into remove_duplicates_flagstat_ch\n  file \"*.idxstats\" into remove_duplicates_idxstats_ch\n\n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar MarkDuplicates \\\n    VALIDATION_STRINGENCY=LENIENT \\\n    REMOVE_DUPLICATES=true \\\n    ASSUME_SORTED=true \\\n    TMP_DIR=./ \\\n    INPUT=${bamfile} \\\n    OUTPUT=${library}.dedup.bam \\\n    METRICS_FILE=${library}.MarkDuplicates.metrics.txt \\\n    >> ${library}.MarkDuplicates.log 2>&1\n  samtools index ${library}.dedup.bam\n  samtools flagstat ${library}.dedup.bam > ${library}.bam.flagstat\n  samtools idxstats ${library}.dedup.bam > ${library}.bam.idxstats\n  \"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar MarkDuplicates \\\n    VALIDATION_STRINGENCY=LENIENT \\\n    REMOVE_DUPLICATES=true \\\n    ASSUME_SORTED=true \\\n    TMP_DIR=./ \\\n    INPUT=${bamfile} \\\n    OUTPUT=${library}.dedup.bam \\\n    METRICS_FILE=${library}.MarkDuplicates.metrics.txt \\\n    >> ${library}.MarkDuplicates.log 2>&1\n  samtools index ${library}.dedup.bam\n  samtools flagstat ${library}.dedup.bam > ${library}.bam.flagstat\n  samtools idxstats ${library}.dedup.bam > ${library}.bam.idxstats\n  \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bwa_bam_markdups_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "library",
            "remove_duplicates_log_ch",
            "remove_duplicates_metrics_ch",
            "remove_duplicates_flagstat_ch",
            "remove_duplicates_idxstats_ch"
        ],
        "nb_outputs": 5,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".bam\")) \"results/alignments/$filename\" else if (filename.endsWith(\".bai\")) \"results/alignments/$filename\" else if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"MarkDuplicates.metrics.txt\")) \"qc/data/$filename\" else if (filename.endsWith(\"flagstat\" )) \"qc/data/$filename\" else if (filename.endsWith(\"idxstats\" )) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "pmdtools_lib": {
        "name_process": "pmdtools_lib",
        "string_process": "\nprocess pmdtools_lib {\n\n  tag{ library }\n\n  errorStrategy 'ignore'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set library, indiv, bamfile from remove_duplicates_pmdtools_metrics_lib_ch\n\n  output:\n  file \"*.log\" into pmd_metrics_lib_log_ch\n  file \"*.stats\" into pmd_metrics_lib_stats_ch\n  \n  script:\n  \"\"\"\n  samtools view -q30 ${bamfile} | pmdtools --first \\\n  2> ${library}.pmdtools_first.log\n  cp ${library}.pmdtools_first.log ${library}.pmdtools_first.stats\n  ## To compute deamination-derived damage patterns separating CpG and non-CpG sites\n  samtools view -q30 ${bamfile} | pmdtools --platypus > ${library}.pmdtools_platypus.stats \\\n  2>  ${library}.pmdtools_platypus.log\n  samtools view -q30 ${bamfile} | pmdtools --deamination --range 30 --CpG \\\n  > ${library}.pmdtools_deamination.stats 2> ${library}.pmdtools_deamination.log\n  \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  \"\"\"\n  samtools view -q30 ${bamfile} | pmdtools --first \\\n  2> ${library}.pmdtools_first.log\n  cp ${library}.pmdtools_first.log ${library}.pmdtools_first.stats\n  ## To compute deamination-derived damage patterns separating CpG and non-CpG sites\n  samtools view -q30 ${bamfile} | pmdtools --platypus > ${library}.pmdtools_platypus.stats \\\n  2>  ${library}.pmdtools_platypus.log\n  samtools view -q30 ${bamfile} | pmdtools --deamination --range 30 --CpG \\\n  > ${library}.pmdtools_deamination.stats 2> ${library}.pmdtools_deamination.log\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "remove_duplicates_pmdtools_metrics_lib_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pmd_metrics_lib_log_ch",
            "pmd_metrics_lib_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "errorStrategy 'ignore'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "oxoG_metrics_lib": {
        "name_process": "oxoG_metrics_lib",
        "string_process": "\nprocess oxoG_metrics_lib {\n\n  tag{ library }\n\n  label 'picard'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set library, indiv, bamfile from remove_duplicates_oxoG_metrics_lib_ch\n\n  output:\n  file \"*.log\" into oxoG_metrics_lib_log_ch\n  file \"*.stats\" into oxoG_metrics_lib_stats_ch\n  \n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectOxoGMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.oxoG_metrics_lib.stats > ${library}.oxoG_metrics_lib.log\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectOxoGMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.oxoG_metrics_lib.stats > ${library}.oxoG_metrics_lib.log\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "remove_duplicates_oxoG_metrics_lib_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "oxoG_metrics_lib_log_ch",
            "oxoG_metrics_lib_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "wgs_metrics_lib": {
        "name_process": "wgs_metrics_lib",
        "string_process": "\nprocess wgs_metrics_lib {\n\n  tag{ library }\n\n  label 'picard'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set library, indiv, bamfile from remove_duplicates_wgs_metrics_lib_ch\n\n  output:\n  file \"*.log\" into wgs_metrics_lib_log_ch\n  file \"*.stats\" into wgs_metrics_lib_stats_ch\n  \n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.wgs_metrics_lib.stats > ${library}.wgs_metrics_lib.log\n  #java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n  #  -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetricsWithNonZeroCoverage  \\\n  #  R=${params.fasta} \\\n  #  I=${bamfile} \\\n  #  CHART=chart.pdf \\\n  #  O=${library}.wgs_metrics_nonzero_lib.stats > ${library}.wgs_metrics_nonzero_lib.log\n  \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.wgs_metrics_lib.stats > ${library}.wgs_metrics_lib.log\n  #java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n  #  -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetricsWithNonZeroCoverage  \\\n  #  R=${params.fasta} \\\n  #  I=${bamfile} \\\n  #  CHART=chart.pdf \\\n  #  O=${library}.wgs_metrics_nonzero_lib.stats > ${library}.wgs_metrics_nonzero_lib.log\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "remove_duplicates_wgs_metrics_lib_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "wgs_metrics_lib_log_ch",
            "wgs_metrics_lib_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "collect_alignment_metrics_library": {
        "name_process": "collect_alignment_metrics_library",
        "string_process": "\nprocess collect_alignment_metrics_library {\n\n  tag{ library }\n\n  label 'picard'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set library, indiv, bamfile from remove_duplicates_collect_alignment_metrics_library_ch\n\n  output:\n  file \"*.log\" into collect_alignment_metrics_library_log_ch\n  file \"*.stats\" into collect_alignment_metrics_library_stats_ch\n  \n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectAlignmentSummaryMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.collect_alignment_metrics.stats > ${library}.collect_alignment_metrics.log\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectAlignmentSummaryMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${library}.collect_alignment_metrics.stats > ${library}.collect_alignment_metrics.log\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "remove_duplicates_collect_alignment_metrics_library_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "collect_alignment_metrics_library_log_ch",
            "collect_alignment_metrics_library_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "bam_to_vcf_library": {
        "name_process": "bam_to_vcf_library",
        "string_process": "\nprocess bam_to_vcf_library {\n\n  tag{ library }\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set library, indiv, bamfile from remove_duplicates_bam_to_vcf_library_ch\n\n  output:\n  file \"*.log\" into bam_to_vcf_library_log_ch\n  file \"*.stats\" into bam_to_vcf_library_stats_ch\n  \n  script:\n  \"\"\"\n  samtools mpileup -vf ${params.fasta} ${bamfile} > ${library}.vcf.gz 2> ${library}_bam_to_vcf_library.log\n  bcftools stats ${library}.vcf.gz > ${library}.vcf.stats\n  \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  samtools mpileup -vf ${params.fasta} ${bamfile} > ${library}.vcf.gz 2> ${library}_bam_to_vcf_library.log\n  bcftools stats ${library}.vcf.gz > ${library}.vcf.stats\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "remove_duplicates_bam_to_vcf_library_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_to_vcf_library_log_ch",
            "bam_to_vcf_library_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ library }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_bams": {
        "name_process": "merge_bams",
        "string_process": "\nprocess merge_bams {\n\n  tag{ indiv }\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if( filename.endsWith(\".bam\")) \"results/alignments/$filename\"\n    else if (filename.endsWith(\".bai\")) \"results/alignments/$filename\"\n    else if (filename.endsWith(\"flagstat\" )) \"qc/data/$filename\"\n    else if (filename.endsWith(\"idxstats\" )) \"qc/data/$filename\" }\n    \n  input:\n  set librarys, indiv, bamfiles from indiv_merge_bams_ch\n\n  output:\n  set indiv, \"*.bam\" into(\n    merged_bams_pmdtools_metrics_ch,\n    merged_bams_bam_to_vcf_ch,\n    merged_bams_insert_size_ch,\n    merged_bams_wgs_metrics_ch,\n    merged_bams_collect_alignment_metrics_ch,\n    merged_bams_randfa_ch )\n  file \"*.flagstat\" into merge_bams_flagstat_ch\n  file \"*.idxstats\" into merge_bams_idxstats_ch\n  \n  script:\n  def bams_string = bamfiles.join(\" \")\n                        \n  \"\"\"\n  samtools merge ${indiv}.merged.bam ${bams_string}\n  samtools sort -@ ${task.cpus} -o ${indiv}.bam ${indiv}.merged.bam\n  samtools index ${indiv}.bam\n  samtools flagstat ${indiv}.bam > ${indiv}.bam.flagstat\n  samtools idxstats ${indiv}.bam > ${indiv}.bam.idxstats\n  rm ${indiv}.merged.bam\n  \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "  def bams_string = bamfiles.join(\" \")\n                        \n  \"\"\"\n  samtools merge ${indiv}.merged.bam ${bams_string}\n  samtools sort -@ ${task.cpus} -o ${indiv}.bam ${indiv}.merged.bam\n  samtools index ${indiv}.bam\n  samtools flagstat ${indiv}.bam > ${indiv}.bam.flagstat\n  samtools idxstats ${indiv}.bam > ${indiv}.bam.idxstats\n  rm ${indiv}.merged.bam\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "indiv_merge_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "indiv",
            "merge_bams_flagstat_ch",
            "merge_bams_idxstats_ch"
        ],
        "nb_outputs": 3,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".bam\")) \"results/alignments/$filename\" else if (filename.endsWith(\".bai\")) \"results/alignments/$filename\" else if (filename.endsWith(\"flagstat\" )) \"qc/data/$filename\" else if (filename.endsWith(\"idxstats\" )) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "pmdtools": {
        "name_process": "pmdtools",
        "string_process": "\nprocess pmdtools {\n\n  tag{ indiv }\n\n  errorStrategy 'ignore'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set indiv, bamfile from merged_bams_pmdtools_metrics_ch\n\n  output:\n  file \"*.log\" into pmd_metrics_log_ch\n  file \"*.stats\" into pmd_metrics_stats_ch\n  \n  script:\n  \"\"\"\n  samtools view -q30 ${bamfile} | pmdtools --first \\\n  2> ${indiv}.pmdtools.log\n  cp ${indiv}.pmdtools.log ${indiv}.pmdtools.stats\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  samtools view -q30 ${bamfile} | pmdtools --first \\\n  2> ${indiv}.pmdtools.log\n  cp ${indiv}.pmdtools.log ${indiv}.pmdtools.stats\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "merged_bams_pmdtools_metrics_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pmd_metrics_log_ch",
            "pmd_metrics_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "errorStrategy 'ignore'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "wgs_metrics": {
        "name_process": "wgs_metrics",
        "string_process": "\nprocess wgs_metrics {\n\n  tag{ indiv }\n\n  label 'picard'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set indiv, bamfile from merged_bams_wgs_metrics_ch\n\n  output:\n  file \"*.log\" into wgs_metrics_log_ch\n  file \"*.stats\" into wgs_metrics_stats_ch\n  \n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${indiv}.wgs_metrics.stats > ${indiv}.wgs_metrics.log\n  #java -Xmx${java_mem}g\t-Djava.io.tmpdir=./ \\\n  #  -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetricsWithNonZeroCoverage  \\\n  #  R=${params.fasta} \\\n  #  I=${bamfile} \\\n  #  CHART=chart.pdf \\\n  #  O=${indiv}.wgs_metrics_nonzero.stats > ${indiv}.wgs_metrics_nonzero.log\n  \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${indiv}.wgs_metrics.stats > ${indiv}.wgs_metrics.log\n  #java -Xmx${java_mem}g\t-Djava.io.tmpdir=./ \\\n  #  -jar \\${EBROOTPICARD}/picard.jar CollectWgsMetricsWithNonZeroCoverage  \\\n  #  R=${params.fasta} \\\n  #  I=${bamfile} \\\n  #  CHART=chart.pdf \\\n  #  O=${indiv}.wgs_metrics_nonzero.stats > ${indiv}.wgs_metrics_nonzero.log\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "merged_bams_wgs_metrics_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "wgs_metrics_log_ch",
            "wgs_metrics_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "collect_alignment_metrics": {
        "name_process": "collect_alignment_metrics",
        "string_process": "\nprocess collect_alignment_metrics {\n\n  tag{ indiv }\n\n  label 'picard'\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set indiv, bamfile from merged_bams_collect_alignment_metrics_ch\n\n  output:\n  file \"*.log\" into collect_alignment_metrics_log_ch\n  file \"*.stats\" into collect_alignment_metrics_stats_ch\n  \n  script:\n  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectAlignmentSummaryMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${indiv}.collect_alignment_metrics.stats > ${indiv}.collect_alignment_metrics.log\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  def java_mem = new String( task.memory.toString() ).replace( \" GB\", \"\" )\n  \"\"\"\n  java -Xmx${java_mem}g -Djava.io.tmpdir=./ \\\n    -jar \\${EBROOTPICARD}/picard.jar CollectAlignmentSummaryMetrics \\\n    R=${params.fasta} \\\n    I=${bamfile} \\\n    O=${indiv}.collect_alignment_metrics.stats > ${indiv}.collect_alignment_metrics.log\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "merged_bams_collect_alignment_metrics_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "collect_alignment_metrics_log_ch",
            "collect_alignment_metrics_stats_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "label 'picard'",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "bam_to_vcf": {
        "name_process": "bam_to_vcf",
        "string_process": "\nprocess bam_to_vcf {\n\n  tag{ indiv }\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if( filename.endsWith(\".vcf.gz\") ) \"results/vcf/$filename\"\n    else if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\"\n    else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }\n\t\n  input:\n  set indiv, bamfile from merged_bams_bam_to_vcf_ch\n\n  output:\n  set indiv, \"*.vcf.gz\" into bam_to_vcf_vcf_to_consensusfa_ch, bam_to_vcf_hets_ch\n  file \"*.log\" into bam_to_vcf_log_ch\n  file \"*.stats\" into bam_to_vcf_stats_ch\n  \n  script:\n  \"\"\"\n  samtools mpileup -vf ${params.fasta} ${bamfile} > ${indiv}.vcf.gz 2> ${indiv}_bam_to_vcf.log\n  bcftools stats ${indiv}.vcf.gz > ${indiv}.vcf.stats\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "  \"\"\"\n  samtools mpileup -vf ${params.fasta} ${bamfile} > ${indiv}.vcf.gz 2> ${indiv}_bam_to_vcf.log\n  bcftools stats ${indiv}.vcf.gz > ${indiv}.vcf.stats\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "merged_bams_bam_to_vcf_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_to_vcf_vcf_to_consensusfa_ch",
            "bam_to_vcf_hets_ch",
            "bam_to_vcf_log_ch",
            "bam_to_vcf_stats_ch"
        ],
        "nb_outputs": 4,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".vcf.gz\") ) \"results/vcf/$filename\" else if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" else if (filename.endsWith(\"stats\")) \"qc/data/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "vcf_to_fasta": {
        "name_process": "vcf_to_fasta",
        "string_process": "\nprocess vcf_to_fasta {\n\n  tag{ indiv }\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n\t    if( filename.endsWith(\".fa\")) \"results/consensus/$filename\"\n\telse if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" }\n\t    \n  input:\n  set indiv, vcffile from bam_to_vcf_vcf_to_consensusfa_ch\n\n  output:\n  set indiv, \"*.fa\" into vcf_to_consensusfa_ch\n  file \"*.log\" into vcf_to_consensusfa_log_ch\n\n  script:\n  \"\"\"\n  vcftools consensus \\\n   -I \\\n   -f \\\n   ${params.fasta} \\\n   ${vcffile} > ${indiv}.fa 2> ${indiv}_vcf_to_fasta.log\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  vcftools consensus \\\n   -I \\\n   -f \\\n   ${params.fasta} \\\n   ${vcffile} > ${indiv}.fa 2> ${indiv}_vcf_to_fasta.log\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "bam_to_vcf_vcf_to_consensusfa_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcf_to_consensusfa_ch",
            "vcf_to_consensusfa_log_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".fa\")) \"results/consensus/$filename\" else if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "randfa": {
        "name_process": "randfa",
        "string_process": "\nprocess randfa {\n\n  tag{ indiv }\n\n  publishDir params.outdir, mode: 'copy', overwrite: true,\n  saveAs: {filename ->\n    if( filename.endsWith(\".randfa\")) \"results/rand/$filename\"\n\telse if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" }\n\t\t\n  input:\n  set indiv, bamfile from merged_bams_randfa_ch \n\n  output:\n  set indiv, \"*.randfa\" into randfa_ch\n  file \"*.log\" into randfa_log_ch\n\n  script:\n  \"\"\"\n  htsbox pileup \\\n  -R \\\n  -q 30 \\\n  -Q 30 \\\n  -l 35 \\\n  -s 1 \\\n  ${bamfile} > ${indiv}.randfa 2>${indiv}_randfa.log\n  \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  htsbox pileup \\\n  -R \\\n  -q 30 \\\n  -Q 30 \\\n  -l 35 \\\n  -s 1 \\\n  ${bamfile} > ${indiv}.randfa 2>${indiv}_randfa.log\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "merged_bams_randfa_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "randfa_ch",
            "randfa_log_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ indiv }",
            "publishDir params.outdir, mode: 'copy', overwrite: true , saveAs: {filename -> if( filename.endsWith(\".randfa\")) \"results/rand/$filename\" else if (filename.endsWith(\"log\")) \"pipeline/logs/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\n  tag{ \"multiqc\" }\n\n  publishDir \"qc\", mode: 'copy', overwrite: true\n\n  input: file remove_duplicates_metrics_file from remove_duplicates_metrics_ch.collect()\n  input: file remove_duplicates_flagstat_file from remove_duplicates_flagstat_ch.collect()\n  input: file remove_duplicates_idxstats_file from remove_duplicates_idxstats_ch.collect()\n  input: file collect_alignment_metrics_library_file from collect_alignment_metrics_library_stats_ch.collect()\n  input: file collect_alignment_metrics_file from collect_alignment_metrics_stats_ch.collect()\n  input: file merge_bams_flagstat_file from merge_bams_flagstat_ch.collect()\n  input: file merge_bams_idxstats_file from merge_bams_idxstats_ch.collect()\n  input: file vcf_stats_library_file from bam_to_vcf_library_stats_ch.collect()\n  input: file vcf_stats_file from bam_to_vcf_stats_ch.collect()\n  input: file wgs_metrics_stats_file from wgs_metrics_stats_ch.collect()\n  input: file wgs_metrics_lib_stats_file from wgs_metrics_lib_stats_ch.collect()\n\n  input: file oxoG_metrics_lib_stats_file from oxoG_metrics_lib_stats_ch.collect()\n  \n  script:\n  \"\"\"\n  cd ${workflow.launchDir}\n  multiqc -f -c ${params.multiqc_config} -o qc qc/data\n  cd -\n  \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  cd ${workflow.launchDir}\n  multiqc -f -c ${params.multiqc_config} -o qc qc/data\n  cd -\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "crickbabs__BABS-aDNASeq",
        "directive": [
            "tag{ \"multiqc\" }",
            "publishDir \"qc\", mode: 'copy', overwrite: true input: file remove_duplicates_metrics_file from remove_duplicates_metrics_ch.collect() input: file remove_duplicates_flagstat_file from remove_duplicates_flagstat_ch.collect() input: file remove_duplicates_idxstats_file from remove_duplicates_idxstats_ch.collect() input: file collect_alignment_metrics_library_file from collect_alignment_metrics_library_stats_ch.collect() input: file collect_alignment_metrics_file from collect_alignment_metrics_stats_ch.collect() input: file merge_bams_flagstat_file from merge_bams_flagstat_ch.collect() input: file merge_bams_idxstats_file from merge_bams_idxstats_ch.collect() input: file vcf_stats_library_file from bam_to_vcf_library_stats_ch.collect() input: file vcf_stats_file from bam_to_vcf_stats_ch.collect() input: file wgs_metrics_stats_file from wgs_metrics_stats_ch.collect() input: file wgs_metrics_lib_stats_file from wgs_metrics_lib_stats_ch.collect() input: file oxoG_metrics_lib_stats_file from oxoG_metrics_lib_stats_ch.collect()"
        ],
        "when": "",
        "stub": ""
    }
}