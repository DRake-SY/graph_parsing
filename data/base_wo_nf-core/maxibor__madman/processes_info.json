{
    "megahit": {
        "name_process": "megahit",
        "string_process": "process megahit {\n    tag \"MEGAHIT - $name\"\n\n    label 'process_high'\n    label 'process_mandatory'\n\n    publishDir \"${params.outdir}/assembly/megahit/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(reads)\n\n    output:\n        tuple val(name), path(\"megahit_out/*_megahit.contigs.fa\"), emit: contigs\n        tuple val(name), path(\"megahit_out/*.log\"), emit: log\n    script:\n        mem = task.memory.toBytes()\n        \"\"\"\n        megahit -1 ${reads[0]} -2 ${reads[1]} -t ${task.cpus} -m $mem --out-prefix $name\n        mv megahit_out/${name}.contigs.fa megahit_out/${name}_megahit.contigs.fa\n        \"\"\"       \n}",
        "nb_lignes_process": 19,
        "string_script": "        mem = task.memory.toBytes()\n        \"\"\"\n        megahit -1 ${reads[0]} -2 ${reads[1]} -t ${task.cpus} -m $mem --out-prefix $name\n        mv megahit_out/${name}.contigs.fa megahit_out/${name}_megahit.contigs.fa\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MEMo",
            "MEGAHIT"
        ],
        "tools_url": [
            "https://bio.tools/memo_cancer",
            "https://bio.tools/megahit"
        ],
        "tools_dico": [
            {
                "name": "MEMo",
                "uri": "https://bio.tools/memo_cancer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2259",
                            "term": "Systems biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Method for identifying mutually exclusive driver networks in cancer. The method identifies networks defined by three properties: first, member genes are recurrently altered via somatic mutation or copy number changes; second, member genes are likely to participate in the same biological pathway or process, as determined from prior pathway and network knowledge; and third, genomic events within the network exhibit a statistically significant level of mutual exclusivity.",
                "homepage": "http://cbio.mskcc.org/tools/memo/"
            },
            {
                "name": "MEGAHIT",
                "uri": "https://bio.tools/megahit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Single node assembler for large and complex metagenomics NGS reads, such as soil. It makes use of succinct de Bruijn graph to achieve low memory usage, whereas its goal is not to make memory usage as low as possible.",
                "homepage": "https://github.com/voutcn/megahit"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"MEGAHIT - $name\"",
            "label 'process_high'",
            "label 'process_mandatory'",
            "publishDir \"${params.outdir}/assembly/megahit/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "pydamage": {
        "name_process": "pydamage",
        "string_process": "process pydamage {\n    tag \"$name\"\n    \n    label 'process_high'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/pydamage/$name\", mode: 'copy'\n\n    input:\n        tuple val(name), path(bam)\n    output:\n        tuple val(name), path(\"*.pydamage_results.csv\"), emit: csv\n        path \"${name}/plots\", optional: true, emit: plot\n    script:\n        output = name\n        if (params.pydamage_plot) {\n            plot = \"--plot\"\n        } else {\n            plot = \"\"\n        }\n        \"\"\"\n        samtools index $bam\n        pydamage --force -p ${task.cpus} -m ${params.minread} -c ${params.coverage} -w ${params.wlen} $plot -o $output $bam\n        mv ${name}/pydamage_results.csv ${name}.pydamage_results.csv\n        \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "        output = name\n        if (params.pydamage_plot) {\n            plot = \"--plot\"\n        } else {\n            plot = \"\"\n        }\n        \"\"\"\n        samtools index $bam\n        pydamage --force -p ${task.cpus} -m ${params.minread} -c ${params.coverage} -w ${params.wlen} $plot -o $output $bam\n        mv ${name}/pydamage_results.csv ${name}.pydamage_results.csv\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "wossoutput",
            "plot",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/wossoutput",
            "https://bio.tools/plot",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "wossoutput",
                "uri": "https://bio.tools/wossoutput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM output data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossoutput.html"
            },
            {
                "name": "plot",
                "uri": "https://bio.tools/plot",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2968",
                                "term": "Image"
                            }
                        ]
                    }
                ],
                "description": "Plot some information from a list of transcripts.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/pydamage/$name\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "align_reads_to_contigs": {
        "name_process": "align_reads_to_contigs",
        "string_process": "process align_reads_to_contigs {\n    tag \"$name\"\n\n    label 'process_high'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/alignment/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(contigs), path(reads)\n    output:\n        tuple val(name), file(\"*.sorted.bam\")\n    script:\n        outfile = name+\".sorted.bam\"\n        if (!params.single_end) {\n            \"\"\"\n            bowtie2-build --threads ${task.cpus} $contigs $name\n            bowtie2 -x $name -1 ${reads[0]} -2 ${reads[1]} --very-sensitive -N 1 --threads ${task.cpus} | samtools view -S -b -F 4 - | samtools sort - > $outfile\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2-build --threads ${task.cpus} $contigs $name\n            bowtie2 -x $name -U $reads --very-sensitive -N 1 --threads ${task.cpus} | samtools view -S -b -F 4 - | samtools sort - > $outfile\n            \"\"\"\n        }\n}",
        "nb_lignes_process": 24,
        "string_script": "        outfile = name+\".sorted.bam\"\n        if (!params.single_end) {\n            \"\"\"\n            bowtie2-build --threads ${task.cpus} $contigs $name\n            bowtie2 -x $name -1 ${reads[0]} -2 ${reads[1]} --very-sensitive -N 1 --threads ${task.cpus} | samtools view -S -b -F 4 - | samtools sort - > $outfile\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2-build --threads ${task.cpus} $contigs $name\n            bowtie2 -x $name -U $reads --very-sensitive -N 1 --threads ${task.cpus} | samtools view -S -b -F 4 - | samtools sort - > $outfile\n            \"\"\"\n        }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "contigs",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/alignment/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "filter_contigs_damage": {
        "name_process": "filter_contigs_damage",
        "string_process": "process filter_contigs_damage {\n    tag \"$name\"\n\n    label 'process_low'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/fasta_filter/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(pydamage_csv), path(contigs)\n    output:\n        tuple val(name), path(\"*.ancient_filtered.fa\"), emit: fasta\n        tuple val(name), path(\"*_ancient_contigs.txt\"), emit: txt\n    script:\n        outfile = name + \".ancient_filtered.fa\"\n        ancient_contigs = name+\"_ancient_contigs.txt\"\n        \"\"\"\n        filter_contigs_damage.py -d ${params.mindamage} -o $outfile $contigs $pydamage_csv\n        awk -F \",\" '{if ((\\$11 <= 0.05) && (\\$8 >= ${params.mindamage})) { print \\$1 }}' $pydamage_csv > $ancient_contigs\n        \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "        outfile = name + \".ancient_filtered.fa\"\n        ancient_contigs = name+\"_ancient_contigs.txt\"\n        \"\"\"\n        filter_contigs_damage.py -d ${params.mindamage} -o $outfile $contigs $pydamage_csv\n        awk -F \",\" '{if ((\\$11 <= 0.05) && (\\$8 >= ${params.mindamage})) { print \\$1 }}' $pydamage_csv > $ancient_contigs\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "pydamage_csv",
            "contigs"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/fasta_filter/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "adapterremoval": {
        "name_process": "adapterremoval",
        "string_process": "process adapterremoval {\n    tag \"$name\"\n\n    label 'process_medium'\n    label 'process_mandatory'\n\n    input:\n        tuple name, path(reads)\n        path adapter_list\n\n    output:\n        tuple val(name), path('*.trimmed.fastq'), emit: trimmed_reads\n        path \"*.settings\", emit: settings\n\n    script:\n        out1 = name+\".pair1.trimmed.fastq\"\n        out2 = name+\".pair2.trimmed.fastq\"\n        se_out = name+\".trimmed.fastq\"\n        settings = name+\".settings\"\n        if (! params.single_end){\n            \"\"\"\n            AdapterRemoval --basename $name \\\n                           --file1 ${reads[0]} \\\n                           --file2 ${reads[1]} \\\n                           --trimns \\\n                           --trimqualities \\\n                           --minquality 20 \\\n                           --minlength 30 \\\n                           --output1 $out1 \\\n                           --output2 $out2 \\\n                           --threads ${task.cpus} \\\n                           --qualitybase ${params.phred} \\\n                           --adapter-list ${adapter_list} \\\n                           --settings $settings\n            \"\"\"\n        } else {\n            \"\"\"\n            AdapterRemoval --basename $name \\\n                           --file1 ${reads[0]} \\\n                           --trimns \\\n                           --trimqualities \\\n                           --minquality 20 \\\n                           --minlength 30 \\\n                           --output1 $se_out \\\n                           --threads ${task.cpus} \\\n                           --qualitybase ${params.phred} \\\n                           --adapter-list ${adapter_list} \\\n                           --settings $settings\n            \"\"\"\n        }    \n}",
        "nb_lignes_process": 49,
        "string_script": "        out1 = name+\".pair1.trimmed.fastq\"\n        out2 = name+\".pair2.trimmed.fastq\"\n        se_out = name+\".trimmed.fastq\"\n        settings = name+\".settings\"\n        if (! params.single_end){\n            \"\"\"\n            AdapterRemoval --basename $name \\\n                           --file1 ${reads[0]} \\\n                           --file2 ${reads[1]} \\\n                           --trimns \\\n                           --trimqualities \\\n                           --minquality 20 \\\n                           --minlength 30 \\\n                           --output1 $out1 \\\n                           --output2 $out2 \\\n                           --threads ${task.cpus} \\\n                           --qualitybase ${params.phred} \\\n                           --adapter-list ${adapter_list} \\\n                           --settings $settings\n            \"\"\"\n        } else {\n            \"\"\"\n            AdapterRemoval --basename $name \\\n                           --file1 ${reads[0]} \\\n                           --trimns \\\n                           --trimqualities \\\n                           --minquality 20 \\\n                           --minlength 30 \\\n                           --output1 $se_out \\\n                           --threads ${task.cpus} \\\n                           --qualitybase ${params.phred} \\\n                           --adapter-list ${adapter_list} \\\n                           --settings $settings\n            \"\"\"\n        }",
        "nb_lignes_script": 34,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads",
            "name",
            "adapter_list"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "label 'process_mandatory'"
        ],
        "when": "",
        "stub": ""
    },
    "damageprofiler": {
        "name_process": "damageprofiler",
        "string_process": "process damageprofiler {\n    tag \"$name\"\n\n    label 'process_medium'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/damageProfiler/${name}_${step}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(contig), path(bam)\n        val(step)\n    output:\n        path(\"*.dmgprof_${step}.json\")\n    script:\n        outfile = name+\".dmgprof_${step}.json\"\n        maxmem = task.memory.toGiga()\n        \"\"\"\n        damageprofiler -Xmx${maxmem}g -i $bam -r $contig -o tmp\n        mv tmp/${name}.sorted/dmgprof.json $outfile\n        \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "        outfile = name+\".dmgprof_${step}.json\"\n        maxmem = task.memory.toGiga()\n        \"\"\"\n        damageprofiler -Xmx${maxmem}g -i $bam -r $contig -o tmp\n        mv tmp/${name}.sorted/dmgprof.json $outfile\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "contig",
            "bam",
            "step"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/damageProfiler/${name}_${step}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "process output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    path output_docs\n\n    output:\n    path \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.indexOf(\".csv\") > 0) filename\n                      else null\n                }\n\n    output:\n    path 'software_versions_mqc.yaml', emit: yaml\n    path \"software_versions.csv\", emit: csv\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    AdapterRemoval --version  &> v_adapterremoval.txt 2>&1 || true\n    fastp --version &> v_fastp.txt 2>&1 || true \n    megahit --version > v_megahit.txt\n    spades.py --version > v_spades.txt\n    quast --version > v_quast.txt\n    pydamage --version > v_pydamage.txt\n    damageprofiler --version > v_damageprofiler.txt\n    prokka --version &> v_prokka.txt 2>&1 || true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    AdapterRemoval --version  &> v_adapterremoval.txt 2>&1 || true\n    fastp --version &> v_fastp.txt 2>&1 || true \n    megahit --version > v_megahit.txt\n    spades.py --version > v_spades.txt\n    quast --version > v_quast.txt\n    pydamage --version > v_pydamage.txt\n    damageprofiler --version > v_damageprofiler.txt\n    prokka --version &> v_prokka.txt 2>&1 || true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "MultiQC",
            "fastPHASE",
            "MEGAHIT",
            "QUAST",
            "Prokka"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/multiqc",
            "https://bio.tools/fastphase",
            "https://bio.tools/megahit",
            "https://bio.tools/quast",
            "https://bio.tools/prokka"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "MEGAHIT",
                "uri": "https://bio.tools/megahit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Single node assembler for large and complex metagenomics NGS reads, such as soil. It makes use of succinct de Bruijn graph to achieve low memory usage, whereas its goal is not to make memory usage as low as possible.",
                "homepage": "https://github.com/voutcn/megahit"
            },
            {
                "name": "QUAST",
                "uri": "https://bio.tools/quast",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "QUAST stands for QUality ASsessment Tool.  \nIt evaluates a quality of genome assemblies by computing various metrics and providing nice reports.",
                "homepage": "http://quast.sourceforge.net/quast"
            },
            {
                "name": "Prokka",
                "uri": "https://bio.tools/prokka",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0781",
                            "term": "Virology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "Coding region prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software tool to annotate bacterial, archaeal and viral genomes quickly and produce standards-compliant output files.",
                "homepage": "https://github.com/tseemann/prokka"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "fastp": {
        "name_process": "fastp",
        "string_process": "process fastp {\n    tag \"$name\"\n\n    label 'process_medium'\n    label 'process_mantory'\n    input:\n        tuple val(name), path(reads)\n\n    output:\n        tuple val(name), path(\"*.fq.gz\"), emit: trimmed_reads\n        path \"*.json\", emit: settings\n\n    script:\n        if (!params.single_end) {\n            out1 = name+\".pair1.trimmed.fq.gz\"\n            out2 = name+\".pair2.trimmed.fq.gz\"\n            \"\"\"\n            fastp --in1 ${reads[0]} --in2 ${reads[1]} --out1 $out1 --out2 $out2 -A -g --poly_g_min_len \"${params.complexity_filter_poly_g_min}\" -Q -L -w ${task.cpus} --json ${name}.json \n            \"\"\"\n        } else {\n            se_out = name+\".trimmed.fq.gz\"\n            \"\"\"\n            fastp --in1 ${reads[0]} --out1 $se_out -A -g --poly_g_min_len \"${params.complexity_filter_poly_g_min}\" -Q -L -w ${task.cpus} --json ${name}.json \n            \"\"\"\n        }\n}",
        "nb_lignes_process": 24,
        "string_script": "        if (!params.single_end) {\n            out1 = name+\".pair1.trimmed.fq.gz\"\n            out2 = name+\".pair2.trimmed.fq.gz\"\n            \"\"\"\n            fastp --in1 ${reads[0]} --in2 ${reads[1]} --out1 $out1 --out2 $out2 -A -g --poly_g_min_len \"${params.complexity_filter_poly_g_min}\" -Q -L -w ${task.cpus} --json ${name}.json \n            \"\"\"\n        } else {\n            se_out = name+\".trimmed.fq.gz\"\n            \"\"\"\n            fastp --in1 ${reads[0]} --out1 $se_out -A -g --poly_g_min_len \"${params.complexity_filter_poly_g_min}\" -Q -L -w ${task.cpus} --json ${name}.json \n            \"\"\"\n        }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "label 'process_mantory'"
        ],
        "when": "",
        "stub": ""
    },
    "prokka": {
        "name_process": "prokka",
        "string_process": "process prokka {\n    tag \"$name\"\n\n    label 'process_high'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/prokka\", mode: 'copy'\n\n    input:\n        tuple val(name), path(contigs)\n    output:\n        path(\"${name}\")\n    script:\n        \"\"\"\n        prokka --metagenome --cpus ${task.cpus} --outdir $name --prefix $name $contigs\n        \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        prokka --metagenome --cpus ${task.cpus} --outdir $name --prefix $name $contigs\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Prokka"
        ],
        "tools_url": [
            "https://bio.tools/prokka"
        ],
        "tools_dico": [
            {
                "name": "Prokka",
                "uri": "https://bio.tools/prokka",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0781",
                            "term": "Virology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "Coding region prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software tool to annotate bacterial, archaeal and viral genomes quickly and produce standards-compliant output files.",
                "homepage": "https://github.com/tseemann/prokka"
            }
        ],
        "inputs": [
            "name",
            "contigs"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/prokka\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "process multiqc {\n    tag \"$custom_runName\"\n\n    label 'process_low'\n    label 'process_mandatory'\n\n    publishDir \"${params.outdir}\", mode: 'copy'\n\n    input:\n        path('adapterRemoval/*')\n        path('fastqc/*')\n        path('fastp/*')\n        path('quast_pre/*')\n        path('quast_post/*')\n        path('dmgprof_pre/*')\n        path('dmgprof_post/*')\n        path('prokka/*')\n        path('software_versions/*')\n        path(multiqc_conf)\n        val(custom_runName)\n        file workflow_summary name \"workflow_summary_mqc.yaml\"\n    output:\n        path('*multiqc_report.html')\n    script:\n        \"\"\"\n        multiqc -f -c $multiqc_conf --title $custom_runName ./\n        \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "        \"\"\"\n        multiqc -f -c $multiqc_conf --title $custom_runName ./\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqc_conf",
            "custom_runName",
            "workflow_summary"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$custom_runName\"",
            "label 'process_low'",
            "label 'process_mandatory'",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "metaspades": {
        "name_process": "metaspades",
        "string_process": "process metaspades {\n    tag \"$name\"\n\n    label 'process_very_bigmem'\n\n    publishDir \"${params.outdir}/assembly/metaspades/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(reads)\n    output:\n        tuple val(name), path(\"*_metaspades.contigs.fa\"), emit: contigs\n        tuple val(name), path(\"${name}/*\"), emit: metaspades_logs\n    script:\n        mem = task.memory.toGiga()\n        \"\"\"\n        spades.py --meta \\\n                  -1 ${reads[0]} \\\n                  -2 ${reads[1]} \\\n                  -t ${task.cpus} \\\n                  -m $mem \\\n                  --phred-offset ${params.phred} \\\n                  -o $name\n        cp $name/contigs.fasta ${name}_metaspades.contigs.fa\n        \"\"\" \n}",
        "nb_lignes_process": 23,
        "string_script": "        mem = task.memory.toGiga()\n        \"\"\"\n        spades.py --meta \\\n                  -1 ${reads[0]} \\\n                  -2 ${reads[1]} \\\n                  -t ${task.cpus} \\\n                  -m $mem \\\n                  --phred-offset ${params.phred} \\\n                  -o $name\n        cp $name/contigs.fasta ${name}_metaspades.contigs.fa\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "MEMo"
        ],
        "tools_url": [
            "https://bio.tools/memo_cancer"
        ],
        "tools_dico": [
            {
                "name": "MEMo",
                "uri": "https://bio.tools/memo_cancer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2259",
                            "term": "Systems biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Method for identifying mutually exclusive driver networks in cancer. The method identifies networks defined by three properties: first, member genes are recurrently altered via somatic mutation or copy number changes; second, member genes are likely to participate in the same biological pathway or process, as determined from prior pathway and network knowledge; and third, genomic events within the network exhibit a statistically significant level of mutual exclusivity.",
                "homepage": "http://cbio.mskcc.org/tools/memo/"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_very_bigmem'",
            "publishDir \"${params.outdir}/assembly/metaspades/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "biospades": {
        "name_process": "biospades",
        "string_process": "\nprocess biospades {\n    tag \"$name\"\n\n    label 'process_very_bigmem'\n    \n    publishDir \"${params.outdir}/assembly/biospades/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(reads)\n    output:\n        tuple val(name), path(\"*_biospades.contigs.fa\"), emit: contigs\n        tuple val(name), path(\"${name}/*\"), emit: biospades_logs\n    script:\n        mem = task.memory.toGiga()\n        \"\"\"\n        spades.py --meta \\\n                  --bio \\\n                  -1 ${reads[0]} \\\n                  -2 ${reads[1]} \\\n                  -t ${task.cpus} \\\n                  -m $mem \\\n                  --phred-offset ${params.phred} \\\n                  -o $name\n        cp $name/gene_clusters.fasta ${name}_biospades.contigs.fa\n        \"\"\" \n}",
        "nb_lignes_process": 25,
        "string_script": "        mem = task.memory.toGiga()\n        \"\"\"\n        spades.py --meta \\\n                  --bio \\\n                  -1 ${reads[0]} \\\n                  -2 ${reads[1]} \\\n                  -t ${task.cpus} \\\n                  -m $mem \\\n                  --phred-offset ${params.phred} \\\n                  -o $name\n        cp $name/gene_clusters.fasta ${name}_biospades.contigs.fa\n        \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "MEMo"
        ],
        "tools_url": [
            "https://bio.tools/memo_cancer"
        ],
        "tools_dico": [
            {
                "name": "MEMo",
                "uri": "https://bio.tools/memo_cancer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2259",
                            "term": "Systems biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Method for identifying mutually exclusive driver networks in cancer. The method identifies networks defined by three properties: first, member genes are recurrently altered via somatic mutation or copy number changes; second, member genes are likely to participate in the same biological pathway or process, as determined from prior pathway and network knowledge; and third, genomic events within the network exhibit a statistically significant level of mutual exclusivity.",
                "homepage": "http://cbio.mskcc.org/tools/memo/"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_very_bigmem'",
            "publishDir \"${params.outdir}/assembly/biospades/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "filter_contigs_length": {
        "name_process": "filter_contigs_length",
        "string_process": "process filter_contigs_length {\n    tag \"$name\"\n\n    label 'process_medium'\n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/fasta_filter/${name}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(fasta)\n    output:\n        tuple val(name), path(\"*.size_filtered.fa\")\n    script:\n        filter_out = name+\".size_filtered.fa\"\n        \"\"\"\n        filter_contigs_length.py -min ${params.minlen} -p ${task.cpus} $fasta -o $filter_out\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        filter_out = name+\".size_filtered.fa\"\n        \"\"\"\n        filter_contigs_length.py -min ${params.minlen} -p ${task.cpus} $fasta -o $filter_out\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/fasta_filter/${name}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "process fastqc {\n    tag \"$name\"\n\n    label 'process_low'\n    label 'process_mandatory'\n    \n    input:\n        tuple val(name), path(reads)\n    output:\n        path '*_fastqc.{zip,html}'\n    script:\n        \"\"\"\n        fastqc -t ${task.cpus} -q $reads\n        \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        fastqc -t ${task.cpus} -q $reads\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'",
            "label 'process_mandatory'"
        ],
        "when": "",
        "stub": ""
    },
    "quast": {
        "name_process": "quast",
        "string_process": "process quast {\n    tag \"$name\"\n\n    label 'process_medium' \n    label 'process_ignore'\n\n    publishDir \"${params.outdir}/quast/${outdir}\", mode: 'copy'\n\n    input:\n        tuple val(name), path(contigs)\n        val(step)\n    output:\n        path(\"*_quast_${step}\")\n    script:\n        outdir = name+\"_quast_${step}\"\n        \"\"\"\n        quast -o $outdir -t ${task.cpus} $contigs\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        outdir = name+\"_quast_${step}\"\n        \"\"\"\n        quast -o $outdir -t ${task.cpus} $contigs\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "QUAST"
        ],
        "tools_url": [
            "https://bio.tools/quast"
        ],
        "tools_dico": [
            {
                "name": "QUAST",
                "uri": "https://bio.tools/quast",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "QUAST stands for QUality ASsessment Tool.  \nIt evaluates a quality of genome assemblies by computing various metrics and providing nice reports.",
                "homepage": "http://quast.sourceforge.net/quast"
            }
        ],
        "inputs": [
            "name",
            "contigs",
            "step"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__madman",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "label 'process_ignore'",
            "publishDir \"${params.outdir}/quast/${outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}