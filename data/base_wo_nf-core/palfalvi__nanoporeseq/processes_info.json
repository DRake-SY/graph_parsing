{
    "unagi": {
        "name_process": "unagi",
        "string_process": "process unagi {\n  tag \"$sample_id\"\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/unagi-env.yaml\"\n                                          \n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: 'unagi/*.bed'\n\n  input:\n    path genome\n    tuple val(sample_id), file(reads)\n\n  output:\n    path \"unagi/Splicing_Isoforms.bed\", emit: gtf\n\n  script:\n    def stranded  = params.ont_stranded        ? \"--stranded\"                   : \"\"\n    def unzip     = reads.Extension == 'gz'    ? \"gunzip -f -d -q $reads\"       : \"\"\n    def file      = reads.Extension == 'gz'    ? \"$reads.baseName\"              : \"$reads\"\n    \"\"\"\n\n    wget https://github.com/iMetOsaka/UNAGI/archive/refs/heads/master.zip\n    unzip master.zip\n    chmod a+x UNAGI-master/unagi\n\n    $unzip\n\n    cd UNAGI-master\n\n    unagi \\\n    --input ../$file \\\n    --genome ../$genome \\\n    --output ../unagi \\\n    $stranded\n\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    def stranded  = params.ont_stranded        ? \"--stranded\"                   : \"\"\n    def unzip     = reads.Extension == 'gz'    ? \"gunzip -f -d -q $reads\"       : \"\"\n    def file      = reads.Extension == 'gz'    ? \"$reads.baseName\"              : \"$reads\"\n    \"\"\"\n\n    wget https://github.com/iMetOsaka/UNAGI/archive/refs/heads/master.zip\n    unzip master.zip\n    chmod a+x UNAGI-master/unagi\n\n    $unzip\n\n    cd UNAGI-master\n\n    unagi \\\n    --input ../$file \\\n    --genome ../$genome \\\n    --output ../unagi \\\n    $stranded\n\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/unagi-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: 'unagi/*.bed'"
        ],
        "when": "",
        "stub": ""
    },
    "bam_merge": {
        "name_process": "bam_merge",
        "string_process": "process bam_merge {\n\n  conda \"$baseDir/conda-envs/samtools-env.yaml\"\n  label 'small_plus'\n                                                 \n\n                                                                \n\n  input:\n    path bams\n    val name\n\n  output:\n    path \"*.merged.bam\", emit: bam\n    path \"*.merged.bam.bai\", emit: baidx\n\n  script:\n    \"\"\"\n    samtools merge ${name}.merged.bam $bams\n\n    samtools index ${name}.merged.bam\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    samtools merge ${name}.merged.bam $bams\n\n    samtools index ${name}.merged.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams",
            "name"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "conda \"$baseDir/conda-envs/samtools-env.yaml\"",
            "label 'small_plus'"
        ],
        "when": "",
        "stub": ""
    },
    "freebayes_call": {
        "name_process": "freebayes_call",
        "string_process": "process freebayes_call {\n  tag \"$contig_index\"\n  label 'large_mem'\n\n  conda \"$baseDir/conda-envs/freebayes-env.yaml\"\n\n                                                                \n\n  input:\n    path contig\n    val avg_depth\n    path bam\n    path baidx\n    val contig_index\n\n  output:\n    path \"*.bcf\"\n\n  script:\n    \"\"\"\n    samtools faidx ${contig}\n\n    coverage=`printf \"%.0f\" ${avg_depth}`\n\n    LEN=`wc -l ${contig}.fai | awk '{print \\$1}'`\n\n    for j in \\$(seq ${contig_index} 100 \\$LEN )\n    do\n      contig=`sed -n \\${j}p ${contig}.fai | awk '{print \\$1}'`\n      contig_no_pipe=`echo \\$contig | sed 's/|/_/g'`\n      end=`sed -n \\${j}p ${contig}.fai | awk '{print \\$2}'`\n\n      freebayes --bam $bam --region=\\$contig:1-\\$end --skip-coverage \\$((\\$coverage*12)) -f ${contig} | bcftools view --no-version -Ob > \\${contig_no_pipe}.bcf\n    done\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    samtools faidx ${contig}\n\n    coverage=`printf \"%.0f\" ${avg_depth}`\n\n    LEN=`wc -l ${contig}.fai | awk '{print \\$1}'`\n\n    for j in \\$(seq ${contig_index} 100 \\$LEN )\n    do\n      contig=`sed -n \\${j}p ${contig}.fai | awk '{print \\$1}'`\n      contig_no_pipe=`echo \\$contig | sed 's/|/_/g'`\n      end=`sed -n \\${j}p ${contig}.fai | awk '{print \\$2}'`\n\n      freebayes --bam $bam --region=\\$contig:1-\\$end --skip-coverage \\$((\\$coverage*12)) -f ${contig} | bcftools view --no-version -Ob > \\${contig_no_pipe}.bcf\n    done\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "FreeBayes",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/freebayes",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "contig",
            "avg_depth",
            "bam",
            "baidx",
            "contig_index"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$contig_index\"",
            "label 'large_mem'",
            "conda \"$baseDir/conda-envs/freebayes-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "hisat2_align": {
        "name_process": "hisat2_align",
        "string_process": "process hisat2_align {\n\ttag \"$sample_id\"\n\tlabel 'small_plus'\n\tpublishDir \"${params.outdir}/hisat2\", mode: 'copy'\n\n  conda \"$baseDir/conda-envs/hisat-env.yaml\"\n\n  input:\n    path genome_idx\n    tuple val(sample_id), file(reads)\n  output:\n    path \"*.hisat.bam\", emit: bam\n\n  script:\n\t\tdef strandedness = params.orientation  ? \"--fr\" : \"--rf\"\n    \"\"\"\n    hisat2 \\\n\t\t--dta-cufflinks \\\n\t\t-p $task.cpus \\\n\t\t-x $genome_idx \\\n\t\t-1 ${reads[0]} -2 ${reads[1]} |\n\t\tsamtools sort -@ $task.cpus -O BAM - > ${sample_id}.hisat.bam\n\n\n\t\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\tdef strandedness = params.orientation  ? \"--fr\" : \"--rf\"\n    \"\"\"\n    hisat2 \\\n\t\t--dta-cufflinks \\\n\t\t-p $task.cpus \\\n\t\t-x $genome_idx \\\n\t\t-1 ${reads[0]} -2 ${reads[1]} |\n\t\tsamtools sort -@ $task.cpus -O BAM - > ${sample_id}.hisat.bam\n\n\n\t\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "HISAT2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "genome_idx",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label 'small_plus'",
            "publishDir \"${params.outdir}/hisat2\", mode: 'copy'",
            "conda \"$baseDir/conda-envs/hisat-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_sr": {
        "name_process": "minimap2_sr",
        "string_process": "process minimap2_sr {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/minimap-env.yaml\"\n\n                                                    \n\n  input:\n    tuple val(sample_id), file(reads)\n    path assembly\n\n  output:\n    path \"*.bam\", emit: bam\n    path \"*.bam.bai\", emit: baidx\n\n  script:\n    \"\"\"\n    minimap2 --secondary=no --MD -L -t $task.cpus -ax map-ont $assembly $reads | samtools sort -@ $task.cpus -O BAM - > ${assembly.simpleName}-${sample_id}.bam\n    samtools index ${assembly.simpleName}-${sample_id}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    minimap2 --secondary=no --MD -L -t $task.cpus -ax map-ont $assembly $reads | samtools sort -@ $task.cpus -O BAM - > ${assembly.simpleName}-${sample_id}.bam\n    samtools index ${assembly.simpleName}-${sample_id}.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/minimap-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "breakX": {
        "name_process": "breakX",
        "string_process": "process breakX {\n  tag \"$assembly\"\n  label \"small_plus\"\n  publishDir \"${params.outdir}/scaff10x\", mode: 'copy'\n\n  input:\n    path assembly\n    tuple val(sample_id), file(reads)\n\n  output:\n    path '*.break10x.fa', emit: assembly\n\n  script:\n    \"\"\"\n    SCAFF10X=`which break10x`\n\n    cp ${reads[0]} ${reads[0].simpleName}_data1.fastq.gz\n    cp ${reads[1]} ${reads[1].simpleName}_data2.fastq.gz\n\n    touch reads.dat && \\\n    echo q1=${reads[0].simpleName}_data1.fastq.gz > reads.dat && \\\n    echo q2=${reads[1].simpleName}_data2.fastq.gz >> reads.dat\n\n    \\$SCAFF10X \\\n        -nodes ${task.cpus} \\\n        -data reads.dat \\\n        $assembly \\\n        ${assembly.simpleName}.break10x.fa \\\n        ${assembly.simpleName}.break10x.name\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    SCAFF10X=`which break10x`\n\n    cp ${reads[0]} ${reads[0].simpleName}_data1.fastq.gz\n    cp ${reads[1]} ${reads[1].simpleName}_data2.fastq.gz\n\n    touch reads.dat && \\\n    echo q1=${reads[0].simpleName}_data1.fastq.gz > reads.dat && \\\n    echo q2=${reads[1].simpleName}_data2.fastq.gz >> reads.dat\n\n    \\$SCAFF10X \\\n        -nodes ${task.cpus} \\\n        -data reads.dat \\\n        $assembly \\\n        ${assembly.simpleName}.break10x.fa \\\n        ${assembly.simpleName}.break10x.name\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assembly",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$assembly\"",
            "label \"small_plus\"",
            "publishDir \"${params.outdir}/scaff10x\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "tama": {
        "name_process": "tama",
        "string_process": "process tama {\n\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/tama-env.yaml\"\n                                         \n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'\n\n  input:\n    path genome\n    path bam\n\n  output:\n    path \"*.gtf\", emit: gtf\n\n  script:\n\n    \"\"\"\n    git clone https://github.com/GenomeRIK/tama\n\n    python ./tama/tama_collapse.py \\\n    -s $bam -b BAM \\\n    -f $genome \\\n    -p ${bam.baseName}_tama\n\n    python ./tama/tama_go/format_converter/tama_convert_bed_gtf_ensembl_no_cds.py \\\n    ${bam.baseName}_tama.bed \\\n    ${bam.baseName}_tama.gtf\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    git clone https://github.com/GenomeRIK/tama\n\n    python ./tama/tama_collapse.py \\\n    -s $bam -b BAM \\\n    -f $genome \\\n    -p ${bam.baseName}_tama\n\n    python ./tama/tama_go/format_converter/tama_convert_bed_gtf_ensembl_no_cds.py \\\n    ${bam.baseName}_tama.bed \\\n    ${bam.baseName}_tama.gtf\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/tama-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "arima_add_read_group": {
        "name_process": "arima_add_read_group",
        "string_process": "process arima_add_read_group {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/picard-env.yaml\"\n\n  input:\n    path bam\n\n  output:\n    path \"*.readgrouped.bam\", emit: bam\n\n  script:\n\n    \"\"\"\n    picard AddOrReplaceReadGroups \\\n      --INPUT $bam \\\n      --OUTPUT ${bam.simpleName}.readgrouped.bam \\\n      -ID ${bam.simpleName} \\\n      -LB ${bam.simpleName} \\\n      -SM ${bam.simpleName} \\\n      -PL ILLUMINA \\\n      -PU none\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    picard AddOrReplaceReadGroups \\\n      --INPUT $bam \\\n      --OUTPUT ${bam.simpleName}.readgrouped.bam \\\n      -ID ${bam.simpleName} \\\n      -LB ${bam.simpleName} \\\n      -SM ${bam.simpleName} \\\n      -PL ILLUMINA \\\n      -PU none\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/picard-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "scaffX": {
        "name_process": "scaffX",
        "string_process": "process scaffX {\n  tag \"$assembly\"\n  label \"small_plus\"\n  publishDir \"${params.outdir}/scaff10x\", mode: 'copy'\n\n  input:\n    path assembly\n    tuple val(sample_id), file(reads)\n\n  output:\n    path '*.scaff10x.fa', emit: assembly\n\n  script:\n    \"\"\"\n    SCAFF10X=`which scaff10x`\n\n    cp ${reads[0]} ${reads[0].simpleName}_data1.fastq.gz\n    cp ${reads[1]} ${reads[1].simpleName}_data2.fastq.gz\n\n    touch reads.dat && \\\n    echo q1=${reads[0].simpleName}_data1.fastq.gz > reads.dat && \\\n    echo q2=${reads[1].simpleName}_data2.fastq.gz >> reads.dat\n\n    \\$SCAFF10X \\\n        -nodes ${task.cpus} \\\n        -longread 1 \\\n        -gap 100 \\\n        -matrix 2000 \\\n        -reads 10 \\\n        -score 20 \\\n        -link 8 \\\n       -block 50000 \\\n       -data reads.dat \\\n        $assembly \\\n        ${assembly.simpleName}.scaff10x.fa\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    SCAFF10X=`which scaff10x`\n\n    cp ${reads[0]} ${reads[0].simpleName}_data1.fastq.gz\n    cp ${reads[1]} ${reads[1].simpleName}_data2.fastq.gz\n\n    touch reads.dat && \\\n    echo q1=${reads[0].simpleName}_data1.fastq.gz > reads.dat && \\\n    echo q2=${reads[1].simpleName}_data2.fastq.gz >> reads.dat\n\n    \\$SCAFF10X \\\n        -nodes ${task.cpus} \\\n        -longread 1 \\\n        -gap 100 \\\n        -matrix 2000 \\\n        -reads 10 \\\n        -score 20 \\\n        -link 8 \\\n       -block 50000 \\\n       -data reads.dat \\\n        $assembly \\\n        ${assembly.simpleName}.scaff10x.fa\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assembly",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$assembly\"",
            "label \"small_plus\"",
            "publishDir \"${params.outdir}/scaff10x\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_mem_hic": {
        "name_process": "bwa_mem_hic",
        "string_process": "process bwa_mem_hic {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\"\n\n                                                                \n\n  input:\n    tuple val(sample_id), file(reads)\n    val num\n    path assembly\n    path index\n\n  output:\n    path \"*.bam\", emit: bam\n                                   \n\n  script:\n\n    def read = num == 0 ? \"${reads[0]}\" : \"${reads[1]}\"\n\n    \"\"\"\n    bwa mem -t ${task.cpus} ${assembly} $read | samtools view -@ ${task.cpus} -Sb - > ${assembly.simpleName}_${num}.bam\n\n    #samtools index ${assembly.simpleName}_${num}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    def read = num == 0 ? \"${reads[0]}\" : \"${reads[1]}\"\n\n    \"\"\"\n    bwa mem -t ${task.cpus} ${assembly} $read | samtools view -@ ${task.cpus} -Sb - > ${assembly.simpleName}_${num}.bam\n\n    #samtools index ${assembly.simpleName}_${num}.bam\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads",
            "num",
            "assembly",
            "index"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_mikado_file": {
        "name_process": "prepare_mikado_file",
        "string_process": "process prepare_mikado_file {\n\n  label \"small_job\"\n\n  publishDir \"${params.outdir}/mikado/\", mode: 'copy', pattern: 'gtf_list.txt'\n\n  input:\n    path gtf\n\n  output:\n    path \"gtf_list.txt\", emit: gtf_list\n\n  script:\n    def sh  = params.short_reads    ? \"${projectDir}/scripts/short_gtf.txt\"   : \"\"\n    def ont = params.ont_reads      ? \"${projectDir}/scripts/ont_gtf.txt\"     : \"\"\n    def pb  = params.pb_reads       ? \"${projectDir}/scripts/pb_gtf.txt\"      : \"\"\n    def pr  = !params.skip_abinitio ? \"${projectDir}/scripts/prot_gtf.txt\"    : \"\"\n    \"\"\"\n    cat $sh $ont $pb $pr > file.txt\n    sed -e 's/ /\\t/g' file.txt > gtf_list.txt \n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    def sh  = params.short_reads    ? \"${projectDir}/scripts/short_gtf.txt\"   : \"\"\n    def ont = params.ont_reads      ? \"${projectDir}/scripts/ont_gtf.txt\"     : \"\"\n    def pb  = params.pb_reads       ? \"${projectDir}/scripts/pb_gtf.txt\"      : \"\"\n    def pr  = !params.skip_abinitio ? \"${projectDir}/scripts/prot_gtf.txt\"    : \"\"\n    \"\"\"\n    cat $sh $ont $pb $pr > file.txt\n    sed -e 's/ /\\t/g' file.txt > gtf_list.txt \n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "publishDir \"${params.outdir}/mikado/\", mode: 'copy', pattern: 'gtf_list.txt'"
        ],
        "when": "",
        "stub": ""
    },
    "canu": {
        "name_process": "canu",
        "string_process": "process canu {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/canu-env.yaml\"\n\n  publishDir \"${params.outdir}/canu\", mode: 'copy'\n\n  input:\n    path fastq\n    val genome_size\n\n  output:\n    path \"*.contigs.fasta\", emit: assembly\n    path \"*.unitigs.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    canu \\\n    -p  canu_assembly \\\n    -d canu_out \\\n    genomeSize=$genome_size \\\n    useGrid='false' \\\n    -nanopore $fastq\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    canu \\\n    -p  canu_assembly \\\n    -d canu_out \\\n    genomeSize=$genome_size \\\n    useGrid='false' \\\n    -nanopore $fastq\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "CANU"
        ],
        "tools_url": [
            "https://bio.tools/canu"
        ],
        "tools_dico": [
            {
                "name": "CANU",
                "uri": "https://bio.tools/canu",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "De-novo assembly tool for long read chemistry like Nanopore data and PacBio data.",
                "homepage": "https://github.com/marbl/canu"
            }
        ],
        "inputs": [
            "fastq",
            "genome_size"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/canu-env.yaml\"",
            "publishDir \"${params.outdir}/canu\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "quast": {
        "name_process": "quast",
        "string_process": "process quast {\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/quast-env.yaml\"\n\n  publishDir \"${params.outdir}/quast\", mode: 'copy'\n\n  input:\n    path genomes                            \n\n  output:\n    path \"quast_out/report.tsv\", emit: summary\n    path \"*\", emit: quast\n\n  script:\n    def ref       = params.quast_reference  ? \"-r ${params.quast_reference}\"        : \"\"\n    def features  = params.quast_features   ? \"--features ${params.quast_features}\" : \"\"\n\n    \"\"\"\n    quast.py \\\n    $ref \\\n    $features \\\n    --large \\\n    --eukaryote \\\n    --threads ${task.cpus} \\\n    -o quast_out \\\n    --no-plots \\\n    --no-icarus \\\n    --no-html \\\n    $genomes\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    def ref       = params.quast_reference  ? \"-r ${params.quast_reference}\"        : \"\"\n    def features  = params.quast_features   ? \"--features ${params.quast_features}\" : \"\"\n\n    \"\"\"\n    quast.py \\\n    $ref \\\n    $features \\\n    --large \\\n    --eukaryote \\\n    --threads ${task.cpus} \\\n    -o quast_out \\\n    --no-plots \\\n    --no-icarus \\\n    --no-html \\\n    $genomes\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genomes"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/quast-env.yaml\"",
            "publishDir \"${params.outdir}/quast\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "arima_stats": {
        "name_process": "arima_stats",
        "string_process": "process arima_stats {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/samtools-env.yaml\"\n\n  input:\n    path bam\n    path baidx\n\n  output:\n    path \"*.stats\", emit: stats\n\n  script:\n\n    \"\"\"\n    perl $baseDir/scripts/get_stats.pl $bam > ${bam.simpleName}.stats\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    perl $baseDir/scripts/get_stats.pl $bam > ${bam.simpleName}.stats\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "baidx"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "agat_longest": {
        "name_process": "agat_longest",
        "string_process": "process agat_longest {\n  tag \"$file\"\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/agat-env.yaml\"\n                                         \n\n  publishDir \"${params.outdir}/final_transcripts/\", mode: 'copy', pattern: '*_longestIsoforms.gff3'\n\n  input:\n    path file\n\n  output:\n    path \"_longestIsoforms.gff3\", emit: gff\n\n  script:\n    \"\"\"\n    agat_sp_keep_longest_isoform.pl -gff $file -o ${file.baseName}_longestIsoforms.gff3\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    agat_sp_keep_longest_isoform.pl -gff $file -o ${file.baseName}_longestIsoforms.gff3\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$file\"",
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/agat-env.yaml\"",
            "publishDir \"${params.outdir}/final_transcripts/\", mode: 'copy', pattern: '*_longestIsoforms.gff3'"
        ],
        "when": "",
        "stub": ""
    },
    "fastp": {
        "name_process": "fastp",
        "string_process": "process fastp {\ntag \"$sample_id\"\n\nlabel 'small_plus'\n\npublishDir \"${params.out}/fastp_qc\", mode: 'copy', pattern: '*.json'\n\nconda \"$baseDir/conda-envs/fastp-env.yaml\"\n                                         \n\ninput:\n  tuple val(sample_id), file(reads)\n\noutput:\n  tuple val(sample_id), file(\"trim_*\"), optional: true, emit: trimmed\n  path \"*.json\", emit: json\n\nscript:\n\n  def readfiles  = params.single_end    ? \"-i $reads\"      : \"-i ${reads[0]} -I ${reads[1]}\"\n  def outfiles   = params.single_end    ? \"-o trim_$reads\" : \"-o trim_${reads[0]} -O trim_${reads[1]}\"\n  def outff      = params.skip_trim     ? \"\"               : \"$outfiles\"\n  def adapter    = params.single_end    ? \"\"               : \"--detect_adapter_for_pe\"\n\n  \"\"\"\n  fastp \\\n  -w ${task.cpus} \\\n  $readfiles \\\n  $outff \\\n  $adapter \\\n  --overrepresentation_analysis \\\n  --json ${sample_id}_fastp.json\n  \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "  def readfiles  = params.single_end    ? \"-i $reads\"      : \"-i ${reads[0]} -I ${reads[1]}\"\n  def outfiles   = params.single_end    ? \"-o trim_$reads\" : \"-o trim_${reads[0]} -O trim_${reads[1]}\"\n  def outff      = params.skip_trim     ? \"\"               : \"$outfiles\"\n  def adapter    = params.single_end    ? \"\"               : \"--detect_adapter_for_pe\"\n\n  \"\"\"\n  fastp \\\n  -w ${task.cpus} \\\n  $readfiles \\\n  $outff \\\n  $adapter \\\n  --overrepresentation_analysis \\\n  --json ${sample_id}_fastp.json\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label 'small_plus'",
            "publishDir \"${params.out}/fastp_qc\", mode: 'copy', pattern: '*.json'",
            "conda \"$baseDir/conda-envs/fastp-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "arima_filter": {
        "name_process": "arima_filter",
        "string_process": "process arima_filter {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/samtools-env.yaml\"\n\n  input:\n    path bam\n\n  output:\n    path \"*filtered.bam\", emit: bam\n\n  script:\n\n    \"\"\"\n    samtools view -h $bam | perl $baseDir/scripts/filter_five_end.pl | samtools view -Sb - > ${bam.simpleName}.filtered.bam \n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    samtools view -h $bam | perl $baseDir/scripts/filter_five_end.pl | samtools view -Sb - > ${bam.simpleName}.filtered.bam \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "strawberry": {
        "name_process": "strawberry",
        "string_process": "process strawberry {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/strawberry-env.yaml\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'\n\n  input:\n    path genome\n    path bam\n\n  output:\n    path \"*.gtf\", emit: gtf\n\n  script:\n\n    def strand = params.orientation ? \"--fr\" : \"\"\n\n    \"\"\"\n    chmod +x $projectDir/scripts/strawberry\n\n    $projectDir/scripts/strawberry \\\n    $strand \\\n    --num-threads $task.cpus \\\n    --output-gtf ${bam.simpleName}_strawberry.gtf \\\n    $bam\n\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    def strand = params.orientation ? \"--fr\" : \"\"\n\n    \"\"\"\n    chmod +x $projectDir/scripts/strawberry\n\n    $projectDir/scripts/strawberry \\\n    $strand \\\n    --num-threads $task.cpus \\\n    --output-gtf ${bam.simpleName}_strawberry.gtf \\\n    $bam\n\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/strawberry-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "blast_makedb": {
        "name_process": "blast_makedb",
        "string_process": "process blast_makedb {\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/blast-env.yaml\"\n\n  input:\n    path reference\n    val dbtype\n\n  output:\n    path('*')\n\n  script:\n    def unzip      = reference.Extension == 'gz'    ? \"gunzip -f -d -q $reference\"       : \"\"\n    def file       = reference.Extension == 'gz'    ? \"$reference.baseName\"              : \"$reference\"\n    \"\"\"\n    $unzip\n\n    makeblastdb -in $file -dbtype $dbtype -parse_seqids > blast_prepare.log\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    def unzip      = reference.Extension == 'gz'    ? \"gunzip -f -d -q $reference\"       : \"\"\n    def file       = reference.Extension == 'gz'    ? \"$reference.baseName\"              : \"$reference\"\n    \"\"\"\n    $unzip\n\n    makeblastdb -in $file -dbtype $dbtype -parse_seqids > blast_prepare.log\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reference",
            "dbtype"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/blast-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2": {
        "name_process": "minimap2",
        "string_process": "process minimap2 {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/minimap-env.yaml\"\n\n                                                    \n\n  input:\n    path fastq\n    path assembly\n\n  output:\n    path \"*.paf\", emit: map\n\n  script:\n    \"\"\"\n    minimap2 -x map-ont -t ${task.cpus} $assembly $fastq > ${assembly.simpleName}-${fastq.simpleName}.paf\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    minimap2 -x map-ont -t ${task.cpus} $assembly $fastq > ${assembly.simpleName}-${fastq.simpleName}.paf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "fastq",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/minimap-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "transdecoder": {
        "name_process": "transdecoder",
        "string_process": "process transdecoder {\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/mikado-env.yaml\"\n                                          \n\n                                                                            \n\n  input:\n    path fasta\n\n  output:\n    path \"*transdecoder.pep\", emit: pep\n    path \"*transdecoder.gff3\", emit: gff3\n    path \"*transdecoder.cds\", emit: cds\n    path \"*transdecoder.bed\", emit: bed\n\n  script:\n\n    \"\"\"\n    TransDecoder.LongOrfs -t $fasta\n    TransDecoder.Predict -t $fasta\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    TransDecoder.LongOrfs -t $fasta\n    TransDecoder.Predict -t $fasta\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/mikado-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "shasta": {
        "name_process": "shasta",
        "string_process": "process shasta {\n  label 'assembly'\n\n                                              \n\n  publishDir \"${params.outdir}/shasta\", mode: 'copy'\n\n  input:\n    path fastq\n\n  output:\n    path \"*.fasta\", emit: assembly\n    path \"*.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    #shasta\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    #shasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastq"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "publishDir \"${params.outdir}/shasta\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "nextpolish": {
        "name_process": "nextpolish",
        "string_process": "process nextpolish {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/nextpolish-env.yaml\"\n\n                                                           \n\n  input:\n    path nextpolish\n    path assembly\n    path reads\n\n  output:\n    path \"*nextpolish.fasta\", emit: assembly\n\n  script:\n    \"\"\"\n    ls  $reads > sgs.fofn\n\n    echo -e \"task = best\\ngenome = ${assembly}\\nsgs_fofn = sgs.fofn\" > run.cfg\n\n    nextPolish run.cfg\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    ls  $reads > sgs.fofn\n\n    echo -e \"task = best\\ngenome = ${assembly}\\nsgs_fofn = sgs.fofn\" > run.cfg\n\n    nextPolish run.cfg\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "NextPolish"
        ],
        "tools_url": [
            "https://bio.tools/NextPolish"
        ],
        "tools_dico": [
            {
                "name": "NextPolish",
                "uri": "https://bio.tools/NextPolish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffolding"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A fast and efficient genome polishing tool for long read assembly.\n\nFast and accurately polish the genome generated by noisy long reads.\n\nNextPolish is used to fix base errors (SNV/Indel) in the genome generated by noisy long reads, it can be used with short read data only or long read data only or a combination of both. It contains two core modules, and use a stepwise fashion to correct the error bases in reference genome. To correct the raw third-generation sequencing (TGS) long reads with approximately 15-10% sequencing errors, please use NextDenovo",
                "homepage": "https://github.com/Nextomics/NextPolish"
            }
        ],
        "inputs": [
            "nextpolish",
            "assembly",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/nextpolish-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "longranger": {
        "name_process": "longranger",
        "string_process": "process longranger {\n\n  label 'long_job'\n\n  container \"docker://biocontainers/longranger:v2.2.2_cv2\"\n\n\n  input:\n  tuple val(sample_id), file(reads)\n  path reference\n\n  output:\n    path \"${sample_id}/outs/*.bam\", emit: bam\n    path \"${sample_id}/outs/*.bam.bai\", emit: baidx\n\n  script:\n    \"\"\"\n    longranger align --id=${sample_id} \\\n                   --reference=${reference} \\\n                   --fastqs=./\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    longranger align --id=${sample_id} \\\n                   --reference=${reference} \\\n                   --fastqs=./\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads",
            "reference"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'long_job'",
            "container \"docker://biocontainers/longranger:v2.2.2_cv2\""
        ],
        "when": "",
        "stub": ""
    },
    "agat_extractor": {
        "name_process": "agat_extractor",
        "string_process": "process agat_extractor {\n  tag \"$file\"\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/agat-env.yaml\"\n                                         \n\n  publishDir \"${params.outdir}/final_transcripts/\", mode: 'copy', pattern: '*.fasta'\n\n  input:\n    path file\n    path genome\n\n  output:\n    path \"*rna.fasta\", emit: mrna\n    path \"*cds.fasta\", emit: cds\n    path \"*pep.fasta\", emit: pep\n    path \"*promoter2kb.fasta\", emit: promoter\n\n\n  script:\n    \"\"\"\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome --mrna -o ${file.baseName}_rna.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome -t cds -o ${file.baseName}_cds.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome --protein --clean_final_stop -o ${file.baseName}_pep.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome -t gene --upstream 2000 -o ${file.baseName}_promoter2kb.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome --mrna -o ${file.baseName}_rna.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome -t cds -o ${file.baseName}_cds.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome --protein --clean_final_stop -o ${file.baseName}_pep.fasta\n    agat_sp_extract_sequences.pl -gff $file --fasta $genome -t gene --upstream 2000 -o ${file.baseName}_promoter2kb.fasta\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$file\"",
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/agat-env.yaml\"",
            "publishDir \"${params.outdir}/final_transcripts/\", mode: 'copy', pattern: '*.fasta'"
        ],
        "when": "",
        "stub": ""
    },
    "hisat2_idx": {
        "name_process": "hisat2_idx",
        "string_process": "process hisat2_idx {\n  tag \"$genome\"\n  label 'small_plus'\n\n  conda \"$baseDir/conda-envs/hisat-env.yaml\"\n\n  input:\n    path genome\n  output:\n    path \"${genome.simpleName}*.ht2*\"\n  script:\n    \"\"\"\n    hisat2-build -p ${task.cpus} $genome ${genome.simpleName}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    hisat2-build -p ${task.cpus} $genome ${genome.simpleName}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$genome\"",
            "label 'small_plus'",
            "conda \"$baseDir/conda-envs/hisat-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "picard_mark_duplicates": {
        "name_process": "picard_mark_duplicates",
        "string_process": "process picard_mark_duplicates {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/picard-env.yaml\"\n\n  input:\n    path bam\n\n  output:\n    path \"*.deduplicated.bam\", emit: bam\n    path \"*.metrics.txt\", emit: metrics\n\n  script:\n\n    \"\"\"\n    picard MarkDuplicates \\\n      --INPUT $bam \\\n      --OUTPUT ${bam.simpleName}.deduplicated.bam \\\n      --METRICS_FILE ${bam.simpleName}.metrics.txt \\\n      --ASSUME_SORTED true \\\n      --VALIDATION_STRINGENCY LENIENT \\\n      --REMOVE_DUPLICATES true\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    picard MarkDuplicates \\\n      --INPUT $bam \\\n      --OUTPUT ${bam.simpleName}.deduplicated.bam \\\n      --METRICS_FILE ${bam.simpleName}.metrics.txt \\\n      --ASSUME_SORTED true \\\n      --VALIDATION_STRINGENCY LENIENT \\\n      --REMOVE_DUPLICATES true\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/picard-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "braker2": {
        "name_process": "braker2",
        "string_process": "process braker2 {\n\n  label \"long_job\"\n\n                                                \n  container 'https://depot.galaxyproject.org/singularity/braker2:2.1.6--hdfd78af_5'\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: 'braker/braker.gtf'\n\n  input:\n    path genome\n    path bam\n    val mark\n    path protein\n\n  output:\n    path \"braker/*augustus.hints.gtf\", emit: gtf\n\n  script:\n    def prot   = protein     ? \"--prot_seq=${params.protein}\"               : \"\"\n    def mapping   = bam!=[]          ? \"--bam ${bam}\"                               : \"\"\n    def sp        = params.species     ? \"--species ${params.species} --useexisting\"  : \"\"\n    def augustus_con = params.augustus_conf_path ? \"--AUGUSTUS_CONFIG_PATH=${params.augustus_conf_path}\" : \"\"\n    \"\"\"\n\n    workdir=`pwd`\n\n    braker.pl \\\n    --genome=$genome \\\n    $mapping \\\n    $prot \\\n    $mark \\\n    $sp \\\n    --GENEMARK_PATH=/mnt/gpfsA/home/peegee/bin/ \\\n    --PROTHINT_PATH=/mnt/gpfsA/home/peegee/bin/ProtHint-2.6.0/bin/ \\\n    --CDBTOOLS_PATH=/home/peegee/miniconda3/bin/ \\\n    --AUGUSTUS_SCRIPTS_PATH=/home/peegee/miniconda3/ \\\n    --softmasking \\\n    --cores $task.cpus \\\n    $augustus_con\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    def prot   = protein     ? \"--prot_seq=${params.protein}\"               : \"\"\n    def mapping   = bam!=[]          ? \"--bam ${bam}\"                               : \"\"\n    def sp        = params.species     ? \"--species ${params.species} --useexisting\"  : \"\"\n    def augustus_con = params.augustus_conf_path ? \"--AUGUSTUS_CONFIG_PATH=${params.augustus_conf_path}\" : \"\"\n    \"\"\"\n\n    workdir=`pwd`\n\n    braker.pl \\\n    --genome=$genome \\\n    $mapping \\\n    $prot \\\n    $mark \\\n    $sp \\\n    --GENEMARK_PATH=/mnt/gpfsA/home/peegee/bin/ \\\n    --PROTHINT_PATH=/mnt/gpfsA/home/peegee/bin/ProtHint-2.6.0/bin/ \\\n    --CDBTOOLS_PATH=/home/peegee/miniconda3/bin/ \\\n    --AUGUSTUS_SCRIPTS_PATH=/home/peegee/miniconda3/ \\\n    --softmasking \\\n    --cores $task.cpus \\\n    $augustus_con\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "bin3C"
        ],
        "tools_url": [
            "https://bio.tools/bin3C"
        ],
        "tools_dico": [
            {
                "name": "bin3C",
                "uri": "https://bio.tools/bin3C",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3837",
                            "term": "Metagenomic sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3837",
                            "term": "Shotgun metagenomic sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffolding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Extracts metagenome-assembled genomes (MAGs) from metagenomic data using Hi-C.",
                "homepage": "https://github.com/cerebis/bin3C"
            }
        ],
        "inputs": [
            "genome",
            "bam",
            "mark",
            "protein"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "container 'https://depot.galaxyproject.org/singularity/braker2:2.1.6--hdfd78af_5'",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: 'braker/braker.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "edta": {
        "name_process": "edta",
        "string_process": "process edta {\n\n  label \"assembly\"\n\n  conda \"$baseDir/conda-envs/edta-env.yaml\"\n\n  publishDir \"${params.outdir}/soft_masking\", mode: 'copy'\n\n  input:\n    path genome\n\n  output:\n    path \"*.mod.EDTA.TElib.fa\", emit: novel_tes\n    path \"*.mod.EDTA.TEanno.gff3\", emit: te_anno\n    path \"*.mod.EDTA.TEanno.sum\", emit: summary\n    path \"*.mod.MAKER.masked\", emit: masked                                \n\n  script:\n    def cds       = params.cds  ? \"--cds ${params.cds}\"        : \"\"\n\n    \"\"\"\n    EDTA.pl \\\n    --genome $genome \\\n    $cds \\\n    --sensitive 1 \\\n    --anno 1 \\\n    --threads $task.cpus\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    def cds       = params.cds  ? \"--cds ${params.cds}\"        : \"\"\n\n    \"\"\"\n    EDTA.pl \\\n    --genome $genome \\\n    $cds \\\n    --sensitive 1 \\\n    --anno 1 \\\n    --threads $task.cpus\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"assembly\"",
            "conda \"$baseDir/conda-envs/edta-env.yaml\"",
            "publishDir \"${params.outdir}/soft_masking\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mikado_prepare": {
        "name_process": "mikado_prepare",
        "string_process": "process mikado_prepare {\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/mikado-env.yaml\"\n                                          \n\n                                                                            \n\n  input:\n    path genome\n    path('*')\n    path scoring\n    path junction\n\n  output:\n    path \"mikado_prepared.fasta\", emit: fasta\n    path \"mikado_prepared.gtf\", emit: gtf\n    path ('*'), emit: mikado\n\n  script:\n    def sh  = params.short_reads    ? \"${projectDir}/scripts/short_gtf.txt\"   : \"\"\n    def ont = params.ont_reads      ? \"${projectDir}/scripts/ont_gtf.txt\"     : \"\"\n    def pb  = params.pb_reads       ? \"${projectDir}/scripts/pb_gtf.txt\"      : \"\"\n    def pr  = !params.skip_abinitio ? \"${projectDir}/scripts/prot_gtf.txt\"    : \"\"\n\n    def protein  =   params.protein  ? \"-bt ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n    \"\"\"\n    cat $sh $ont $pb $pr > file.txt\n    sed -e 's/ /\\t/g' file.txt > gtf_list.txt\n\n    mikado configure \\\n    --list gtf_list.txt \\\n    --reference $genome \\\n    --mode permissive \\\n    --scoring $scoring  \\\n    $junc \\\n    $protein \\\n    --threads $task.cpus \\\n    configuration.yaml\n\n    mikado prepare \\\n    --json-conf configuration.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    def sh  = params.short_reads    ? \"${projectDir}/scripts/short_gtf.txt\"   : \"\"\n    def ont = params.ont_reads      ? \"${projectDir}/scripts/ont_gtf.txt\"     : \"\"\n    def pb  = params.pb_reads       ? \"${projectDir}/scripts/pb_gtf.txt\"      : \"\"\n    def pr  = !params.skip_abinitio ? \"${projectDir}/scripts/prot_gtf.txt\"    : \"\"\n\n    def protein  =   params.protein  ? \"-bt ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n    \"\"\"\n    cat $sh $ont $pb $pr > file.txt\n    sed -e 's/ /\\t/g' file.txt > gtf_list.txt\n\n    mikado configure \\\n    --list gtf_list.txt \\\n    --reference $genome \\\n    --mode permissive \\\n    --scoring $scoring  \\\n    $junc \\\n    $protein \\\n    --threads $task.cpus \\\n    configuration.yaml\n\n    mikado prepare \\\n    --json-conf configuration.yaml\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "Mikado"
        ],
        "tools_url": [
            "https://bio.tools/mikado"
        ],
        "tools_dico": [
            {
                "name": "Mikado",
                "uri": "https://bio.tools/mikado",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Differential splicing analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Splice transcript prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A lightweight Python3 pipeline whose purpose is to facilitate the identification of expressed loci from RNA-Seq data and to select the best models in each locus.",
                "homepage": "https://github.com/lucventurini/mikado"
            }
        ],
        "inputs": [
            "genome",
            "scoring",
            "junction"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/mikado-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "psiclass": {
        "name_process": "psiclass",
        "string_process": "process psiclass {\n\n  label \"small_job\"\n\n                                                 \n  container \"peegee/nanoporeseq:latest\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*psiclass.gtf'\n\n  input:\n    path genome\n    path bam\n\n  output:\n    path \"psiclass_vote.gtf\", emit: gtf\n\n  script:\n\n    \"\"\"\n    ls -1 *.bam > bamlist.txt\n\n    psiclass \\\n    -p $task.cpus \\\n    --lb bamlist.txt\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    ls -1 *.bam > bamlist.txt\n\n    psiclass \\\n    -p $task.cpus \\\n    --lb bamlist.txt\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "container \"peegee/nanoporeseq:latest\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*psiclass.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "guppy_basecalling": {
        "name_process": "guppy_basecalling",
        "string_process": "process guppy_basecalling {\n\n  label 'long_job'\n\n  publishDir \"${params.outdir}/guppy\", mode: 'copy'\n\n  input:\n    tuple val(sample_id), file(reads)\n    path guppy\n\n  output:\n    path \"$sample_id/guppy\"\n\n  script:\n    \"\"\"\n    mkdir $sample_id\n    mkdir $sample_id/raw\n\n    tar -xvzf $reads --directory $sample_id/raw\n\n    $guppy \\\n    -i $sample_id/raw \\\n    --recursive \\\n    -s $sample_id/guppy \\\n    --config  $params.config_file \\\n    --cpu_threads_per_caller 5 \\\n    --num_callers 2 \\\n    --records_per_fastq 100000000 \\\n    --bam_out ${sample_id}_methylation.bam \\\n    --qscore_filtering \\\n    --min_qscore 7 \\\n    --compress_fastq\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    mkdir $sample_id\n    mkdir $sample_id/raw\n\n    tar -xvzf $reads --directory $sample_id/raw\n\n    $guppy \\\n    -i $sample_id/raw \\\n    --recursive \\\n    -s $sample_id/guppy \\\n    --config  $params.config_file \\\n    --cpu_threads_per_caller 5 \\\n    --num_callers 2 \\\n    --records_per_fastq 100000000 \\\n    --bam_out ${sample_id}_methylation.bam \\\n    --qscore_filtering \\\n    --min_qscore 7 \\\n    --compress_fastq\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads",
            "guppy"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'long_job'",
            "publishDir \"${params.outdir}/guppy\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "racon": {
        "name_process": "racon",
        "string_process": "process racon {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/racon-env.yaml\"\n\n  publishDir \"${params.outdir}/racon\", mode: 'copy'\n\n  input:\n    path fastq\n    path overlap\n    path assembly\n\n  output:\n    path \"${fastq.simpleName}_racon.fasta\", emit: assembly\n\n  script:\n    \"\"\"\n    racon \\\n    --threads ${task.cpus} \\\n    -u \\\n    $fastq \\\n    $overlap \\\n    $assembly > ${fastq.simpleName}_racon.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    racon \\\n    --threads ${task.cpus} \\\n    -u \\\n    $fastq \\\n    $overlap \\\n    $assembly > ${fastq.simpleName}_racon.fasta\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "Racon"
        ],
        "tools_url": [
            "https://bio.tools/Racon"
        ],
        "tools_dico": [
            {
                "name": "Racon",
                "uri": "https://bio.tools/Racon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Possibility to Use Oxford Nanopore Technology | Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads. http://genome.cshlp.org/content/early/2017/01/18/gr.214270.116 Note: This was the original repository which will no longer be officially maintained. Please use the new official repository here: | Racon is intended as a standalone consensus module to correct raw contigs generated by rapid assembly methods which do not include a consensus step | Consensus module for raw de novo DNA assembly of long uncorrected reads",
                "homepage": "https://github.com/isovic/racon"
            }
        ],
        "inputs": [
            "fastq",
            "overlap",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/racon-env.yaml\"",
            "publishDir \"${params.outdir}/racon\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "lorean": {
        "name_process": "lorean",
        "string_process": "process lorean {\n\n  container = 'docker://lfaino/lorean'\n  publishDir \"${params.outdir}/lorean\", mode: 'copy'\n\n  input:\n    path genome\n    path protein_ref\n\n  output:\n    path \"*\", emit: annotation\n\n  script:\n\n    def prefix      = params.lorean_prefix   ? \"--prefix_gene ${params.prefix}\"       : \"\"\n    def stranded    = params.lorean_stranded ? \"--stranded\"                           : \"\"\n    def iproscan    = params.lorean_iproscan ? \"--interproscan\"                       : \"\"\n    def adapters    = params.lorean_adapters ? \"--adapter ${params.lorean_adapters}\"  : \"\"\n    def long_reads  = params.lorean_long     ? \"--long_reads ${params.lorean_long}\"   : \"\"\n    def short_reads = params.lorean_short    ? \"--short_reads ${params.lorean_short}\" : \"\"\n    def species     = params.lorean_species  ? \"--species ${params.lorean_species}\"   : \"--species Xx\"\n\n    \"\"\"\n    wget https://github.com/lfaino/LoReAn/raw/master/third_party/software/config.augustus.tar.gz && tar -zxvf config.augustus.tar.gz\n\n    wget https://github.com/lfaino/LoReAn/raw/master/third_party/software/RepeatMasker.Libraries.tar.gz && tar -xvzf RepeatMasker.Libraries.tar.gz\n\n    lorean \\\n    --threads $task.cpus \\\n    --minimap2 \\\n    --max_intron_length 10000 \\\n    -pr $protein_ref \\\n    $species \\\n    $long_reads \\\n    $short_reads \\\n    $prefix \\\n    $stranded \\\n    $iproscan \\\n    $adapters \\\n    $genome\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    def prefix      = params.lorean_prefix   ? \"--prefix_gene ${params.prefix}\"       : \"\"\n    def stranded    = params.lorean_stranded ? \"--stranded\"                           : \"\"\n    def iproscan    = params.lorean_iproscan ? \"--interproscan\"                       : \"\"\n    def adapters    = params.lorean_adapters ? \"--adapter ${params.lorean_adapters}\"  : \"\"\n    def long_reads  = params.lorean_long     ? \"--long_reads ${params.lorean_long}\"   : \"\"\n    def short_reads = params.lorean_short    ? \"--short_reads ${params.lorean_short}\" : \"\"\n    def species     = params.lorean_species  ? \"--species ${params.lorean_species}\"   : \"--species Xx\"\n\n    \"\"\"\n    wget https://github.com/lfaino/LoReAn/raw/master/third_party/software/config.augustus.tar.gz && tar -zxvf config.augustus.tar.gz\n\n    wget https://github.com/lfaino/LoReAn/raw/master/third_party/software/RepeatMasker.Libraries.tar.gz && tar -xvzf RepeatMasker.Libraries.tar.gz\n\n    lorean \\\n    --threads $task.cpus \\\n    --minimap2 \\\n    --max_intron_length 10000 \\\n    -pr $protein_ref \\\n    $species \\\n    $long_reads \\\n    $short_reads \\\n    $prefix \\\n    $stranded \\\n    $iproscan \\\n    $adapters \\\n    $genome\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "LoReAn"
        ],
        "tools_url": [
            "https://bio.tools/LoReAn"
        ],
        "tools_dico": [
            {
                "name": "LoReAn",
                "uri": "https://bio.tools/LoReAn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0476",
                                    "term": "Ab initio structure prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "Primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0476",
                                    "term": "de novo structure prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Automated eukaryotic genome annotation based on long-read cDNA sequencing.",
                "homepage": "https://github.com/lfaino/LoReAn"
            }
        ],
        "inputs": [
            "genome",
            "protein_ref"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "container = 'docker://lfaino/lorean'",
            "publishDir \"${params.outdir}/lorean\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "flye": {
        "name_process": "flye",
        "string_process": "process flye {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/flye-env.yaml\"\n\n  publishDir \"${params.outdir}/flye\", mode: 'copy'\n\n  input:\n    path fastq\n    val genome_size\n\n  output:\n    path \"flye_out/assembly.fasta\", emit: assembly\n    path \"flye_out/assembly_graph.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    flye \\\n    --nano-raw ${fastq} \\\n    --threads ${task.cpus} \\\n    --genome_size ${genome_size} \\\n    --asm_coverage 50 \\\n    --out_dir flye_out\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    flye \\\n    --nano-raw ${fastq} \\\n    --threads ${task.cpus} \\\n    --genome_size ${genome_size} \\\n    --asm_coverage 50 \\\n    --out_dir flye_out\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "Flye"
        ],
        "tools_url": [
            "https://bio.tools/Flye"
        ],
        "tools_dico": [
            {
                "name": "Flye",
                "uri": "https://bio.tools/Flye",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flye is a de novo assembler for single molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PB / ONT reads as input and outputs polished contigs.",
                "homepage": "https://github.com/fenderglass/Flye"
            }
        ],
        "inputs": [
            "fastq",
            "genome_size"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/flye-env.yaml\"",
            "publishDir \"${params.outdir}/flye\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "stringtie2": {
        "name_process": "stringtie2",
        "string_process": "process stringtie2 {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/stringtie2-env.yaml\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'\n\n  input:\n    path genome\n    path bam\n    val extra\n\n  output:\n    path \"*.gtf\", emit: gtf\n\n  script:\n\n    \"\"\"\n    stringtie \\\n    -p $task.cpus \\\n    -o ${bam.simpleName}_stringtie2.gtf \\\n    $extra \\\n    $bam\n\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    stringtie \\\n    -p $task.cpus \\\n    -o ${bam.simpleName}_stringtie2.gtf \\\n    $extra \\\n    $bam\n\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "StringTie"
        ],
        "tools_url": [
            "https://bio.tools/stringtie"
        ],
        "tools_dico": [
            {
                "name": "StringTie",
                "uri": "https://bio.tools/stringtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/"
            }
        ],
        "inputs": [
            "genome",
            "bam",
            "extra"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/stringtie2-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap_rna": {
        "name_process": "minimap_rna",
        "string_process": "process minimap_rna {\n  tag \"$sample_id\"\n  label 'long_job'\n\n  conda \"$baseDir/conda-envs/minimap-env.yaml\"\n\n                                                    \n\n  input:\n    path genome\n    tuple val(sample_id), file(reads)\n\n  output:\n    path \"*.bam\", emit: bam\n\n  script:\n    \"\"\"\n    minimap2 -ax splice -uf -k14 -t ${task.cpus} $genome $reads | samtools sort -@ $task.cpus -O BAM - > ${sample_id}_minimap2.bam\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    minimap2 -ax splice -uf -k14 -t ${task.cpus} $genome $reads | samtools sort -@ $task.cpus -O BAM - > ${sample_id}_minimap2.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "genome",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label 'long_job'",
            "conda \"$baseDir/conda-envs/minimap-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "wtdbg": {
        "name_process": "wtdbg",
        "string_process": "process wtdbg {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/wtdbg-env.yaml\"\n\n  publishDir \"${params.outdir}/wtdbg\", mode: 'copy'\n\n  input:\n    path fastq\n    val genome_size\n\n  output:\n    path \"wtdbg2_assembly.ctg.fasta\", emit: assembly\n\n  script:\n    \"\"\"\n    wtdbg2 \\\n    -x ont \\\n    -g ${genome_size} \\\n    -t ${task.cpus} \\\n    -i $fastq \\\n    -fo wtdbg2_assembly\n\n    wtpoa-cns -t ${task.cpus} \\\n    -i wtdbg2_assembly.ctg.lay.gz \\\n    -fo wtdbg2_assembly.ctg.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    wtdbg2 \\\n    -x ont \\\n    -g ${genome_size} \\\n    -t ${task.cpus} \\\n    -i $fastq \\\n    -fo wtdbg2_assembly\n\n    wtpoa-cns -t ${task.cpus} \\\n    -i wtdbg2_assembly.ctg.lay.gz \\\n    -fo wtdbg2_assembly.ctg.fasta\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "wtdbg2"
        ],
        "tools_url": [
            "https://bio.tools/wtdbg2"
        ],
        "tools_dico": [
            {
                "name": "wtdbg2",
                "uri": "https://bio.tools/wtdbg2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0605",
                            "term": "Informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3316",
                            "term": "Computer science"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0605",
                            "term": "Knowledge management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0605",
                            "term": "Information science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0605",
                            "term": "Information management"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Wtdbg2 is a de novo sequence assembler for long noisy reads produced by PacBio or Oxford Nanopore Technologies (ONT). It assembles raw reads without error correction and then builds the consensus from intermediate assembly output. Wtdbg2 is able to assemble the human and even the 32Gb Axolotl genome at a speed tens of times faster than CANU and FALCON while producing contigs of comparable base accuracy.",
                "homepage": "https://github.com/ruanjue/wtdbg2"
            }
        ],
        "inputs": [
            "fastq",
            "genome_size"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/wtdbg-env.yaml\"",
            "publishDir \"${params.outdir}/wtdbg\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "nanolyse": {
        "name_process": "nanolyse",
        "string_process": "process nanolyse {\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/ont-cleanup.yaml\"\n\n  publishDir \"${params.outdir}/filtered_reads\", mode: 'copy'\n\n  input:\n    path reads                         \n\n  output:\n    path \"*.fastq\"\n\n  script:\n    def ref       = params.quast_reference  ? \"-r ${params.quast_reference}\"        : \"\"\n    def features  = params.quast_features   ? \"--features ${params.quast_features}\" : \"\"\n\n    \"\"\"\n    nanolyse $reads\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    def ref       = params.quast_reference  ? \"-r ${params.quast_reference}\"        : \"\"\n    def features  = params.quast_features   ? \"--features ${params.quast_features}\" : \"\"\n\n    \"\"\"\n    nanolyse $reads\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/ont-cleanup.yaml\"",
            "publishDir \"${params.outdir}/filtered_reads\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "trinity_gg": {
        "name_process": "trinity_gg",
        "string_process": "process trinity_gg {\n\n  label \"long_job\"\n\n                                                \n  container \"peegee/nanoporeseq:latest\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'\n\n  input:\n    path genome\n    path bam\n\n  output:\n    path \"*trinity.fasta\", emit: fasta\n    path \"*.gtf\", emit: gtf\n\n  script:\n\n    def strand = params.orientation ? \"--SS_lib_type FR\" : \"\"\n                                         \n    \"\"\"\n    Trinity \\\n    --genome_guided_bam $bam \\\n    --min_contig_length 100 \\\n    --genome_guided_max_intron 10000 \\\n    --max_memory ${task.memory.toGiga()}G \\\n    --CPU $task.cpus \\\n    --output trinity_gg \\\n    --full_cleanup \\\n    $strand\n\n    mv ./trinity_gg/Trinity-GG.fasta ./${bam.simpleName}_trinity.fasta\n\n    minimap2 -ax splice:hq --cs -uf $genome ${bam.simpleName}_trinity.fasta > ${bam.simpleName}_trinity.bam\n\n    bam2gtf.py ${bam.simpleName}_trinity.bam ${bam.simpleName}_trinity.gtf\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    def strand = params.orientation ? \"--SS_lib_type FR\" : \"\"\n                                         \n    \"\"\"\n    Trinity \\\n    --genome_guided_bam $bam \\\n    --min_contig_length 100 \\\n    --genome_guided_max_intron 10000 \\\n    --max_memory ${task.memory.toGiga()}G \\\n    --CPU $task.cpus \\\n    --output trinity_gg \\\n    --full_cleanup \\\n    $strand\n\n    mv ./trinity_gg/Trinity-GG.fasta ./${bam.simpleName}_trinity.fasta\n\n    minimap2 -ax splice:hq --cs -uf $genome ${bam.simpleName}_trinity.fasta > ${bam.simpleName}_trinity.bam\n\n    bam2gtf.py ${bam.simpleName}_trinity.bam ${bam.simpleName}_trinity.gtf\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "Trinity",
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/trinity",
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Trinity",
                "uri": "https://bio.tools/trinity",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Trinity is a transcriptome assembler which relies on three different tools, inchworm an assembler, chrysalis which pools contigs and butterfly which amongst others compacts a graph resulting from butterfly with reads.",
                "homepage": "https://github.com/trinityrnaseq/trinityrnaseq/wiki"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "genome",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "container \"peegee/nanoporeseq:latest\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "star_idx": {
        "name_process": "star_idx",
        "string_process": "process star_idx {\n  tag \"$genome\"\n  label 'small_plus'\n  cpus \"$params.cpus\"\n\n  conda \"$baseDir/conda-envs/star-env.yaml\"\n\n  input:\n    path genome\n  output:\n    path \"${genome.simpleName}_idx\"\n  script:\n    \"\"\"\n\t\tmkdir ${genome.simpleName}_idx\n    STAR --runMode genomeGenerate \\\n    --runThreadN ${task.cpus} \\\n    --genomeDir ${genome.simpleName}_idx \\\n    --genomeFastaFiles $genome\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n\t\tmkdir ${genome.simpleName}_idx\n    STAR --runMode genomeGenerate \\\n    --runThreadN ${task.cpus} \\\n    --genomeDir ${genome.simpleName}_idx \\\n    --genomeFastaFiles $genome\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$genome\"",
            "label 'small_plus'",
            "cpus \"$params.cpus\"",
            "conda \"$baseDir/conda-envs/star-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "nextdenovo": {
        "name_process": "nextdenovo",
        "string_process": "process nextdenovo {\n\n  label 'assembly'\n\n                                                   \n\n  publishDir \"${params.outdir}/nextdenovo\", mode: 'copy'\n\n  input:\n    path nextdenovo\n    path cfg\n\n  output:\n    path \"01_rundir/03.ctg_graph/nd.asm.fasta\", emit: assembly\n    path \"*.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    $nextdenovo $cfg\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    $nextdenovo $cfg\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "nextdenovo",
            "cfg"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "publishDir \"${params.outdir}/nextdenovo\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "taco": {
        "name_process": "taco",
        "string_process": "process taco {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/taco-env.yaml\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*taco.gtf'\n\n  input:\n    path gtf\n    val name\n\n  output:\n    path \"*taco.gtf\", emit: gtf\n\n  script:\n\n    \"\"\"\n    ls -1 *.gtf > gtf_files.txt\n\n    taco_run \\\n    --num-processes $task.cpus \\\n    -o taco \\\n    --filter-min-expr 0 \\\n    gtf_files.txt\n\n    cp taco/assembly.gtf ./${name}_taco.gtf\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    ls -1 *.gtf > gtf_files.txt\n\n    taco_run \\\n    --num-processes $task.cpus \\\n    -o taco \\\n    --filter-min-expr 0 \\\n    gtf_files.txt\n\n    cp taco/assembly.gtf ./${name}_taco.gtf\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf",
            "name"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/taco-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*taco.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "softmasking": {
        "name_process": "softmasking",
        "string_process": "process softmasking {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/bedtools-env.yaml\"\n\n  publishDir \"${params.outdir}/soft_masking\", mode: 'copy'\n\n  input:\n    path genome\n    path tes\n\n  output:\n    path \"*_softmasked.fasta\", emit: masked\n\n  script:\n    \"\"\"\n    bedtools maskfasta -soft -fi $genome -bed $tes -fo ${genome.simpleName}_softmasked.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    bedtools maskfasta -soft -fi $genome -bed $tes -fo ${genome.simpleName}_softmasked.fasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "genome",
            "tes"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/bedtools-env.yaml\"",
            "publishDir \"${params.outdir}/soft_masking\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "purge_dups": {
        "name_process": "purge_dups",
        "string_process": "process purge_dups {\n\n  label 'long_job'\n\n  container \"https://depot.galaxyproject.org/singularity/purge_dups:1.2.5--h5bf99c6_1\"\n\n  publishDir \"${params.outdir}/purge_dups\", mode: 'copy'\n\n  input:\n  path genome\n  path long_reads\n  val platform                                                 \n\n  output:\n    path \"purged.fa \", emit: purged\n    path \"hap.fa \", emit: haplo\n\n  script:\n    \"\"\"\n    minimap2 -t $task.cpus -x $platform -d ${genome.simpleName}.idx $genome\n\n    minimap2 -x $platform -t $task.cpus ${genome.simpleName}.idx $long_reads | gzip -c - > ${genome.simpleName}_${long_reads.simpleName}.paf.gz\n\n    minimap2 -xasm5 -DP -t $task.cpus $genome $genome | gzip -c - > ${genome.simpleName}_self.paf.gz\n\n    pbcstat ${genome.simpleName}_${long_reads.simpleName}.paf.gz\n\n    calcuts PB.stat > cutoffs 2>calcults.log\n\n    purge_dups -2 -T cutoffs -c PB.base.cov ${genome.simpleName}_self.paf.gz > dups.bed 2> purge_dups.log\n\n    get_seqs dups.bed $genome > purged.fa 2> hap.fa\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    minimap2 -t $task.cpus -x $platform -d ${genome.simpleName}.idx $genome\n\n    minimap2 -x $platform -t $task.cpus ${genome.simpleName}.idx $long_reads | gzip -c - > ${genome.simpleName}_${long_reads.simpleName}.paf.gz\n\n    minimap2 -xasm5 -DP -t $task.cpus $genome $genome | gzip -c - > ${genome.simpleName}_self.paf.gz\n\n    pbcstat ${genome.simpleName}_${long_reads.simpleName}.paf.gz\n\n    calcuts PB.stat > cutoffs 2>calcults.log\n\n    purge_dups -2 -T cutoffs -c PB.base.cov ${genome.simpleName}_self.paf.gz > dups.bed 2> purge_dups.log\n\n    get_seqs dups.bed $genome > purged.fa 2> hap.fa\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "purge_dups"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/purge_dups"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "purge_dups",
                "uri": "https://bio.tools/purge_dups",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Read binning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffolding"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning shotgun reads"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3216",
                                    "term": "Scaffold generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Identifying and removing haplotypic duplication in primary genome assemblies | haplotypic duplication identification tool | scripts/pd_config.py: script to generate a configuration file used by run_purge_dups.py | purge haplotigs and overlaps in an assembly based on read depth | Given a primary assembly pri_asm and an alternative assembly hap_asm (optional, if you have one), follow the steps shown below to build your own purge_dups pipeline, steps with same number can be run simultaneously. Among all the steps, although step 4 is optional, we highly recommend our users to do so, because assemblers may produce overrepresented seqeuences. In such a case, The final step 4 can be applied to remove those seqeuences",
                "homepage": "https://github.com/dfguan/purge_dups"
            }
        ],
        "inputs": [
            "genome",
            "long_reads",
            "platform"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'long_job'",
            "container \"https://depot.galaxyproject.org/singularity/purge_dups:1.2.5--h5bf99c6_1\"",
            "publishDir \"${params.outdir}/purge_dups\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "blast": {
        "name_process": "blast",
        "string_process": "process blast {\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/blast-env.yaml\"\n\n  input:\n    path reference\n    path query\n    val blast\n\n  output:\n    path '*.blast_sub.tsv', emit: blast\n\n  script:\n    \"\"\"\n    $blast -max_target_seqs 5 -num_threads ${task.cpus} -query $query -outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore ppos btop' -db ${reference[1].baseName} -evalue 0.000001 -out ${query.baseName}.blast_sub.tsv 2> blast.log\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    $blast -max_target_seqs 5 -num_threads ${task.cpus} -query $query -outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore ppos btop' -db ${reference[1].baseName} -evalue 0.000001 -out ${query.baseName}.blast_sub.tsv 2> blast.log\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reference",
            "query",
            "blast"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/blast-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "bwa_index": {
        "name_process": "bwa_index",
        "string_process": "process bwa_index {\n\n  label 'small_job'\n\n  conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\"\n\n                                                                \n\n  input:\n    path assembly\n    val options\n\n  output:\n    path \"${assembly}.*\", emit: index\n\n  script:\n    \"\"\"\n    bwa index $options ${assembly}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    bwa index $options ${assembly}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "assembly",
            "options"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'small_job'",
            "conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "kat": {
        "name_process": "kat",
        "string_process": "process kat {\n  label \"small_plus\"\n\n  conda \"$baseDir/conda-envs/kat-env.yaml\"\n\n  publishDir \"${params.outdir}/kat_plot\", mode: 'copy'\n\n  input:\n    path genome\n    tuple val(sample_id), file(reads)\n\n  output:\n    path \"*dist_analysis.json\", emit: kat_json\n    path \"*.png\", emit: kat_plot\n\n  script:\n    \"\"\"\n    kat comp -t ${task.cpus} -o ${genome.simpleName}_kat ${reads} ${genome}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    kat comp -t ${task.cpus} -o ${genome.simpleName}_kat ${reads} ${genome}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "KAT"
        ],
        "tools_url": [
            "https://bio.tools/kat"
        ],
        "tools_dico": [
            {
                "name": "KAT",
                "uri": "https://bio.tools/kat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Suite of tools that generate, analyse and compare k-mer spectra produced from sequence files",
                "homepage": "http://www.earlham.ac.uk/kat-tools"
            }
        ],
        "inputs": [
            "genome",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_plus\"",
            "conda \"$baseDir/conda-envs/kat-env.yaml\"",
            "publishDir \"${params.outdir}/kat_plot\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_index": {
        "name_process": "samtools_index",
        "string_process": "process samtools_index {\n\n  label 'small_job'\n\n  conda \"$baseDir/conda-envs/samtools-env.yaml\"\n\n                                                                \n\n  input:\n    path bam\n    val options\n\n  output:\n    path \"*.bai\", emit: baidx\n\n  script:\n    \"\"\"\n    samtools index $options ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    samtools index $options ${bam}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "options"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'small_job'",
            "conda \"$baseDir/conda-envs/samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "portcullis": {
        "name_process": "portcullis",
        "string_process": "process portcullis {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/portcullis-env.yaml\"\n\n  publishDir \"${params.outdir}/junction_prediction/\", mode: 'copy', pattern: '*_portcullis/junctions.bed'\n\n  input:\n    path genome\n    path bam\n\n  output:\n    path \"*_portcullis/3-filt/portcullis_filtered.pass.junctions.bed\", emit: junctions\n\n  script:\n\n    def strand = params.orientation ? \"--orientation FR\" : \"\"\n\n    \"\"\"\n    portcullis full \\\n    -t $task.cpus \\\n    -o ${bam.simpleName}_portcullis \\\n    $strand \\\n    $genome \\\n    $bam\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    def strand = params.orientation ? \"--orientation FR\" : \"\"\n\n    \"\"\"\n    portcullis full \\\n    -t $task.cpus \\\n    -o ${bam.simpleName}_portcullis \\\n    $strand \\\n    $genome \\\n    $bam\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/portcullis-env.yaml\"",
            "publishDir \"${params.outdir}/junction_prediction/\", mode: 'copy', pattern: '*_portcullis/junctions.bed'"
        ],
        "when": "",
        "stub": ""
    },
    "agat_converter": {
        "name_process": "agat_converter",
        "string_process": "process agat_converter {\n  tag \"$file\"\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/agat-env.yaml\"\n                                         \n\n  publishDir \"${params.outdir}/agat_transcripts/\", mode: 'copy', pattern: '*_agat.gff3'\n\n  input:\n    path file\n\n  output:\n    path \"*_agat.gff3\", emit: gff\n\n  script:\n    def agat = file.Extension == 'bed' ? \"agat_convert_bed2gff.pl --bed $file\" : \"agat_convert_sp_gxf2gxf.pl --gff $file\"\n\n    \"\"\"\n    $agat -o ${file.SimpleName}_agat.gff3\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    def agat = file.Extension == 'bed' ? \"agat_convert_bed2gff.pl --bed $file\" : \"agat_convert_sp_gxf2gxf.pl --gff $file\"\n\n    \"\"\"\n    $agat -o ${file.SimpleName}_agat.gff3\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$file\"",
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/agat-env.yaml\"",
            "publishDir \"${params.outdir}/agat_transcripts/\", mode: 'copy', pattern: '*_agat.gff3'"
        ],
        "when": "",
        "stub": ""
    },
    "bam_coverage": {
        "name_process": "bam_coverage",
        "string_process": "process bam_coverage {\n\n  conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\"\n\n                                                                \n\n  input:\n    path bam\n\n  output:\n    env avg_depth, emit: coverage\n\n  script:\n    \"\"\"\n    avg_depth=`samtools depth ${bam}  |  awk '{sum+=\\$3} END { print sum/NR}'`\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    avg_depth=`samtools depth ${bam}  |  awk '{sum+=\\$3} END { print sum/NR}'`\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "raven": {
        "name_process": "raven",
        "string_process": "process raven {\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/raven-env.yaml\"\n\n  publishDir \"${params.outdir}/raven\", mode: 'copy'\n\n  input:\n    path fastq\n\n  output:\n    path \"*.fasta\", emit: assembly\n    path \"*.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    raven \\\n    --threads $task.cpus \\\n    --graphical-fragment-assembly raven_assembly.gfa \\\n    $fastq > \\\n    raven_assembly.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    raven \\\n    --threads $task.cpus \\\n    --graphical-fragment-assembly raven_assembly.gfa \\\n    $fastq > \\\n    raven_assembly.fasta\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastq"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/raven-env.yaml\"",
            "publishDir \"${params.outdir}/raven\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mikado_serialise": {
        "name_process": "mikado_serialise",
        "string_process": "process mikado_serialise {\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/mikado-env.yaml\"\n                                          \n\n                                                                            \n\n  input:\n    path genome\n    path blastp\n    path transdecoder\n    path scoring\n    path mikado\n    path junction\n\n  output:\n    path('*'), emit: mikado\n\n  script:\n    def prot     =   params.protein ? \"--xml mikado_prepared.blast.tsv --blast_targets ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n\n    \"\"\"\n    mikado serialise --json-conf configuration.yaml $prot --orfs $transdecoder $junc\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    def prot     =   params.protein ? \"--xml mikado_prepared.blast.tsv --blast_targets ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n\n    \"\"\"\n    mikado serialise --json-conf configuration.yaml $prot --orfs $transdecoder $junc\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "Mikado"
        ],
        "tools_url": [
            "https://bio.tools/mikado"
        ],
        "tools_dico": [
            {
                "name": "Mikado",
                "uri": "https://bio.tools/mikado",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Differential splicing analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Splice transcript prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A lightweight Python3 pipeline whose purpose is to facilitate the identification of expressed loci from RNA-Seq data and to select the best models in each locus.",
                "homepage": "https://github.com/lucventurini/mikado"
            }
        ],
        "inputs": [
            "genome",
            "blastp",
            "transdecoder",
            "scoring",
            "mikado",
            "junction"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/mikado-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "miniasm": {
        "name_process": "miniasm",
        "string_process": "process miniasm {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/miniasm-env.yaml\"\n\n  publishDir \"${params.outdir}/miniasm\", mode: 'copy'\n\n  input:\n    path fastq\n\n  output:\n    path \"miniasm_assembly.fasta\", emit: assembly\n    path \"miniasm_assembly.gfa\", emit: gfa\n\n  script:\n    \"\"\"\n    minimap2 -x ava-ont -t $task.cpus $fastq $fastq | gzip -1 > reads.paf.gz\n\n    miniasm -f $fastq reads.paf.gz > miniasm_assembly.gfa\n\n    any2fasta miniasm_assembly.gfa > miniasm_assembly.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    minimap2 -x ava-ont -t $task.cpus $fastq $fastq | gzip -1 > reads.paf.gz\n\n    miniasm -f $fastq reads.paf.gz > miniasm_assembly.gfa\n\n    any2fasta miniasm_assembly.gfa > miniasm_assembly.fasta\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "fastq"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/miniasm-env.yaml\"",
            "publishDir \"${params.outdir}/miniasm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mikado_pick": {
        "name_process": "mikado_pick",
        "string_process": "process mikado_pick {\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/mikado-env.yaml\"\n                                          \n\n  publishDir \"${params.outdir}/mikado/\", mode: 'copy', pattern: 'mikado*'\n\n  input:\n    path genome\n    path prepare\n    path serialise\n    path scoring\n    path junction\n\n  output:\n    path \"mikado.loci.gff3\", emit: loci\n    path \"mikado.subloci.gff3\", emit: subloci\n    path \"mikado.loci.metrics.tsv\", emit: metrics\n    path \"mikado.loci.scores.tsv\", emit: scores\n    path \"*pick.log\", emit: log\n\n  script:\n    def protein  =   params.protein  ? \"-bt ${params.protein}\" : \"\"\n    def prot     =   params.protein ? \"--xml mikado_prepared.blast.tsv --blast_targets ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n\n    \"\"\"\n    mikado pick --json-conf configuration.yaml --subloci-out mikado.subloci\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    def protein  =   params.protein  ? \"-bt ${params.protein}\" : \"\"\n    def prot     =   params.protein ? \"--xml mikado_prepared.blast.tsv --blast_targets ${params.protein}\" : \"\"\n    def junc     =   params.short_reads  ? \"--junction ${junction}\": \"\"\n\n    \"\"\"\n    mikado pick --json-conf configuration.yaml --subloci-out mikado.subloci\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Mikado"
        ],
        "tools_url": [
            "https://bio.tools/mikado"
        ],
        "tools_dico": [
            {
                "name": "Mikado",
                "uri": "https://bio.tools/mikado",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Differential splicing analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Splice transcript prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0264",
                                    "term": "Alternative splicing analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A lightweight Python3 pipeline whose purpose is to facilitate the identification of expressed loci from RNA-Seq data and to select the best models in each locus.",
                "homepage": "https://github.com/lucventurini/mikado"
            }
        ],
        "inputs": [
            "genome",
            "prepare",
            "serialise",
            "scoring",
            "junction"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/mikado-env.yaml\"",
            "publishDir \"${params.outdir}/mikado/\", mode: 'copy', pattern: 'mikado*'"
        ],
        "when": "",
        "stub": ""
    },
    "cufflinks": {
        "name_process": "cufflinks",
        "string_process": "process cufflinks {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/cufflinks-env.yaml\"\n\n  publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'\n\n  input:\n    path genome\n    tuple file(bam), file(baidx)\n\n  output:\n    path \"*.gtf\", emit: gtf\n\n  script:\n\n    \"\"\"\n    cufflinks \\\n    --num-threads $task.cpus \\\n    --output-dir /path/to/outputDirectory ${bam.simpleName} \\\n    $bam\n\n    mv ./${bam.simpleName}/transcripts.gtf ./${bam.simpleName}_cufflinks.gtf\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    cufflinks \\\n    --num-threads $task.cpus \\\n    --output-dir /path/to/outputDirectory ${bam.simpleName} \\\n    $bam\n\n    mv ./${bam.simpleName}/transcripts.gtf ./${bam.simpleName}_cufflinks.gtf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "Cufflinks"
        ],
        "tools_url": [
            "https://bio.tools/cufflinks"
        ],
        "tools_dico": [
            {
                "name": "Cufflinks",
                "uri": "https://bio.tools/cufflinks",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "RNA splicing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "Alternative splicing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0315",
                                    "term": "Expression profile comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3565",
                                    "term": "RNA-seq time series data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0372",
                                    "term": "DNA transcription"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2872",
                                "term": "ID list"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0916",
                                "term": "Gene report"
                            },
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0951",
                                "term": "Statistical estimate score"
                            },
                            {
                                "uri": "http://edamontology.org/data_0928",
                                "term": "Gene expression profile"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3134",
                                "term": "Gene transcript report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            }
                        ]
                    }
                ],
                "description": "Cufflinks assembles transcripts and estimates their abundances in RNA-Seq samples. It accepts aligned RNA-Seq reads and assembles the alignments into a parsimonious set of transcripts. Cufflinks then estimates the relative abundances of these transcripts based on how many reads support each one.",
                "homepage": "http://cole-trapnell-lab.github.io/cufflinks"
            }
        ],
        "inputs": [
            "genome",
            "bam",
            "baidx"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/cufflinks-env.yaml\"",
            "publishDir \"${params.outdir}/transcript_predictions/\", mode: 'copy', pattern: '*.gtf'"
        ],
        "when": "",
        "stub": ""
    },
    "hypo": {
        "name_process": "hypo",
        "string_process": "process hypo {\n  label \"assembly\"\n\n  conda \"$baseDir/conda-envs/hypo-env.yaml\"\n\n  publishDir \"${params.outdir}/short_polished\", mode: 'copy'\n\n  input:\n    path genome\n    tuple val(sample_id), file(short_reads)\n    path long_reads\n    val genome_size\n    path short_bam\n    path short_baidx\n    val coverage\n\n  output:\n    path \"*hypo.fasta\", emit: assembly\n\n  script:\n\n    \"\"\"\n    # short read\n    # minimap2 --secondary=no --MD -L -t ${task.cpus} -ax sr $genome ${short_reads[0]} ${short_reads[1]} | samtools sort -@ $task.cpus -O BAM - > short.bam\n    # samtools index short.bam\n\n    #long (ONT)\n    minimap2 --secondary=no --MD -L -t ${task.cpus} -ax map-ont $genome ${long_reads} | samtools sort -@ $task.cpus -O BAM - > long.bam\n    samtools index long.bam\n\n    # avg_depth=`samtools depth short.bam  |  awk '{sum+=\\$3} END { print sum/NR}'`\n\n    echo -e \"${short_reads[0]}\\n${short_reads[1]}\" > names.txt\n\n    hypo \\\n    --draft $genome \\\n    --reads-short @names.txt \\\n    --size-ref $genome_size \\\n    --coverage-short $coverage \\\n    --processing-size 96 \\\n    --bam-sr $short_bam \\\n    --bam-lr long.bam \\\n    --threads ${task.cpus} \\\n    --output ${genome.simpleName}_hypo.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "    \"\"\"\n    # short read\n    # minimap2 --secondary=no --MD -L -t ${task.cpus} -ax sr $genome ${short_reads[0]} ${short_reads[1]} | samtools sort -@ $task.cpus -O BAM - > short.bam\n    # samtools index short.bam\n\n    #long (ONT)\n    minimap2 --secondary=no --MD -L -t ${task.cpus} -ax map-ont $genome ${long_reads} | samtools sort -@ $task.cpus -O BAM - > long.bam\n    samtools index long.bam\n\n    # avg_depth=`samtools depth short.bam  |  awk '{sum+=\\$3} END { print sum/NR}'`\n\n    echo -e \"${short_reads[0]}\\n${short_reads[1]}\" > names.txt\n\n    hypo \\\n    --draft $genome \\\n    --reads-short @names.txt \\\n    --size-ref $genome_size \\\n    --coverage-short $coverage \\\n    --processing-size 96 \\\n    --bam-sr $short_bam \\\n    --bam-lr long.bam \\\n    --threads ${task.cpus} \\\n    --output ${genome.simpleName}_hypo.fasta\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "Minimap2",
            "Hypocotyl"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/minimap2",
            "https://bio.tools/Hypocotyl"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "Hypocotyl",
                "uri": "https://bio.tools/Hypocotyl",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3553",
                                    "term": "Image annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Deep Learning-Based Approach for High-Throughput Hypocotyl Phenotyping.\n\nA deep learning-based approach for high throughput plant phenotyping.\n\nThis repository is the companion for the paper A deep learning-based approach for high throughput plant phenotyping, Dobos et al..\n\nThe dataset used in the article can be found at this page.\n\nUsing a trained model for measuring hypocotyls.\n\nThe pretrained model used in the research article can be downloaded here.",
                "homepage": "https://github.com/biomag-lab/hypocotyl-UNet"
            }
        ],
        "inputs": [
            "genome",
            "sample_id",
            "short_reads",
            "long_reads",
            "genome_size",
            "short_bam",
            "short_baidx",
            "coverage"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"assembly\"",
            "conda \"$baseDir/conda-envs/hypo-env.yaml\"",
            "publishDir \"${params.outdir}/short_polished\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "salsa": {
        "name_process": "salsa",
        "string_process": "process salsa {\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/salsa-env.yaml\"\n\n  publishDir \"${params.outdir}/HiC\", mode: 'copy'\n\n  input:\n    path assembly\n    path bam\n    path baidx\n\n  output:\n    path 'scaffolds/scaffolds_FINAL.fasta', emit: assembly\n\n  script:\n    \"\"\"\n      bamToBed -i $bam > ${bam.simpleName}.bed\n      sort -k 4 ${bam.simpleName}.bed > tmp && mv tmp ${bam.simpleName}.bed\n\n      samtools faidx $assembly\n\n      run_pipeline.py \\\n        -a ${assembly} \\\n        -l ${assembly}.fai \\\n        -b ${bam.simpleName}.bed \\\n        -e GATC,GANTC \\\n        -o scaffolds \\\n        -m yes\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n      bamToBed -i $bam > ${bam.simpleName}.bed\n      sort -k 4 ${bam.simpleName}.bed > tmp && mv tmp ${bam.simpleName}.bed\n\n      samtools faidx $assembly\n\n      run_pipeline.py \\\n        -a ${assembly} \\\n        -l ${assembly}.fai \\\n        -b ${bam.simpleName}.bed \\\n        -e GATC,GANTC \\\n        -o scaffolds \\\n        -m yes\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "TMPD",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/tmpd",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "assembly",
            "bam",
            "baidx"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/salsa-env.yaml\"",
            "publishDir \"${params.outdir}/HiC\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "freebayes_consensus": {
        "name_process": "freebayes_consensus",
        "string_process": "process freebayes_consensus {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/freebayes-env.yaml\"\n\n  publishDir \"${params.outdir}/short_polished\", mode: 'copy'\n\n  input:\n    path assembly\n    path bcf_list\n\n  output:\n    path \"*freebayes.fasta\", emit: assembly\n\n  script:\n    \"\"\"\n\n    for file in ./tarseq_*.bcf; do bcftools index \\$file  -f; done\n\n    ls *.bcf > bcf_files.txt\n\n    bcftools concat -af bcf_files.txt | bcftools view -Ou -e'type=\"ref\"' --threads ${task.cpus} | bcftools norm --threads ${task.cpus} -Ob -f ${assembly} -o ${assembly.simpleName}.bcf\n    bcftools index ${assembly.simpleName}.bcf\n\n    bcftools consensus -i'QUAL>1 && (GT=\"AA\" || GT=\"Aa\")' -Hla -f ${assembly} ${assembly.simpleName}.bcf > ${assembly.simpleName}_freebayes.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n\n    for file in ./tarseq_*.bcf; do bcftools index \\$file  -f; done\n\n    ls *.bcf > bcf_files.txt\n\n    bcftools concat -af bcf_files.txt | bcftools view -Ou -e'type=\"ref\"' --threads ${task.cpus} | bcftools norm --threads ${task.cpus} -Ob -f ${assembly} -o ${assembly.simpleName}.bcf\n    bcftools index ${assembly.simpleName}.bcf\n\n    bcftools consensus -i'QUAL>1 && (GT=\"AA\" || GT=\"Aa\")' -Hla -f ${assembly} ${assembly.simpleName}.bcf > ${assembly.simpleName}_freebayes.fasta\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "assembly",
            "bcf_list"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/freebayes-env.yaml\"",
            "publishDir \"${params.outdir}/short_polished\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "freebayes_bwa": {
        "name_process": "freebayes_bwa",
        "string_process": "process freebayes_bwa {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/freebayes-env.yaml\"\n\n                                                                \n\n  input:\n    path assembly\n    tuple val(sample_id), file(reads)\n\n  output:\n    path \"*.bam\", emit: bam\n    path \"*.bam.bai\", emit: baidx\n    val avg_depth, emit: avg_depth\n\n  script:\n    \"\"\"\n    # bwa index\n    bwa index ${assembly}\n\n    # bwa map\n    bwa mem -t ${task.cpus} ${assembly} ${reads} | samtools sort -@ ${task.cpus} -O BAM - > ${assembly.simpleName}.bam\n\n    samtools index ${assembly.simpleName}.bam\n\n    avg_depth=`samtools depth ${assembly.simpleName}.bam  |  awk '{sum+=\\$3} END { print sum/NR}'`\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    # bwa index\n    bwa index ${assembly}\n\n    # bwa map\n    bwa mem -t ${task.cpus} ${assembly} ${reads} | samtools sort -@ ${task.cpus} -O BAM - > ${assembly.simpleName}.bam\n\n    samtools index ${assembly.simpleName}.bam\n\n    avg_depth=`samtools depth ${assembly.simpleName}.bam  |  awk '{sum+=\\$3} END { print sum/NR}'`\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "assembly",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/freebayes-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "pilon": {
        "name_process": "pilon",
        "string_process": "process pilon {\n  label \"assembly\"\n\n  conda \"$baseDir/conda-envs/pilon-env.yaml\"\n\n  publishDir \"${params.outdir}/short_polished\", mode: 'copy'\n\n  input:\n    path genome\n    path bam\n    path baidx\n\n  output:\n    path \"pilon*.fasta\", emit: assembly\n\n  script:\n\n    \"\"\"\n    pilon \\\n    -Xmx${task.memory.toGiga()}g \\\n    --genome $genome \\\n    --bam $bam \\\n    --diploid \\\n    --output pilon \\\n    --threads ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    pilon \\\n    -Xmx${task.memory.toGiga()}g \\\n    --genome $genome \\\n    --bam $bam \\\n    --diploid \\\n    --output pilon \\\n    --threads ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "pilon"
        ],
        "tools_url": [
            "https://bio.tools/pilon"
        ],
        "tools_dico": [
            {
                "name": "pilon",
                "uri": "https://bio.tools/pilon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Read alignment analysis to diagnose, report, and automatically improve de novo genome assemblies.",
                "homepage": "http://www.broadinstitute.org/software/pilon/"
            }
        ],
        "inputs": [
            "genome",
            "bam",
            "baidx"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"assembly\"",
            "conda \"$baseDir/conda-envs/pilon-env.yaml\"",
            "publishDir \"${params.outdir}/short_polished\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_mem": {
        "name_process": "bwa_mem",
        "string_process": "process bwa_mem {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\"\n\n                                                                \n\n  input:\n    tuple val(sample_id), file(reads)\n    path assembly\n    path index\n\n  output:\n    path \"*.bam\", emit: bam\n    path \"*.bam.bai\", emit: baidx\n\n  script:\n    \"\"\"\n    bwa mem -t ${task.cpus} ${assembly} ${reads} | samtools sort -@ ${task.cpus} -O BAM - > ${assembly.simpleName}.bam\n\n    samtools index ${assembly.simpleName}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    bwa mem -t ${task.cpus} ${assembly} ${reads} | samtools sort -@ ${task.cpus} -O BAM - > ${assembly.simpleName}.bam\n\n    samtools index ${assembly.simpleName}.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sample_id",
            "reads",
            "assembly",
            "index"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/bwa-samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "debarcodeX": {
        "name_process": "debarcodeX",
        "string_process": "process debarcodeX {\n  tag \"$sample_id\"\n  label \"small_job\"\n  publishDir \"${params.outdir}/scaff10x\", mode: 'copy'\n\n  input:\n    tuple val(sample_id), file(reads)\n\n  output:\n    tuple val(sample_id), file(\"*BC*.fastq\"), emit: fastq\n\n  script:\n    \"\"\"\n    echo q1=${reads[0]} >> reads.dat\n    echo q2=${reads[1]} >> reads.dat\n\n    scaff_reads \\\n        reads.dat \\\n        ${sample_id}_BC_R1.fastq \\\n        ${sample_id}_BC_R2.fastq\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    echo q1=${reads[0]} >> reads.dat\n    echo q2=${reads[1]} >> reads.dat\n\n    scaff_reads \\\n        reads.dat \\\n        ${sample_id}_BC_R1.fastq \\\n        ${sample_id}_BC_R2.fastq\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label \"small_job\"",
            "publishDir \"${params.outdir}/scaff10x\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "pychopper": {
        "name_process": "pychopper",
        "string_process": "process pychopper {\n  label \"long_job\"\n\n  tag \"$sample_id\"\n\n  conda \"$baseDir/conda-envs/pychopper-env.yaml\"\n\n  publishDir \"${params.outdir}/pychopper_qc\", mode: 'copy'\n\n  input:\n    tuple val(sample_id), file(reads)                                           \n\n  output:\n    tuple val(sample_id), file(\"*_pychopper.fastq\"), emit: filtered\n    path \"*unclassified.fastq\", emit: unclassified\n    path \"*rescued.fastq\", emit: rescued\n    path \"*report.pdf\", emit: report\n\n  script:\n\n    def qual       = params.cu_qual             ? \"-Q ${params.cu_qual}\"         : \"\"\n    def length     = params.cu_length           ? \"-z ${params.cu_length}\"       : \"\"\n    def phmm_file  = params.cu_phmm_file        ? \"-g ${params.cu_phmm_file}\"    : \"\"\n    def adapter    = params.cu_adapters         ? \"-b ${params.cu_adapters}\"     : \"\"\n    def config     = params.cu_primer_config    ? \"-c ${params.cu_primer_config}\": \"\"\n    def method     = params.cu_method           ? \"-m ${params.cu_method}\"       : \"\"\n    def unzip      = reads.Extension == 'gz'    ? \"gunzip -f -d -q $reads\"       : \"\"\n    def file       = reads.Extension == 'gz'    ? \"$reads.baseName\"              : \"$reads\"\n    \"\"\"\n    $unzip\n\n    cdna_classifier.py -t $task.cpus -r ${reads.simpleName}_report.pdf $method $adapter $config $phmm_file $qual $length -u ${reads.simpleName}_unclassified.fastq -w ${reads.simpleName}_rescued.fastq $file ${reads.simpleName}_pychopper.fastq\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    def qual       = params.cu_qual             ? \"-Q ${params.cu_qual}\"         : \"\"\n    def length     = params.cu_length           ? \"-z ${params.cu_length}\"       : \"\"\n    def phmm_file  = params.cu_phmm_file        ? \"-g ${params.cu_phmm_file}\"    : \"\"\n    def adapter    = params.cu_adapters         ? \"-b ${params.cu_adapters}\"     : \"\"\n    def config     = params.cu_primer_config    ? \"-c ${params.cu_primer_config}\": \"\"\n    def method     = params.cu_method           ? \"-m ${params.cu_method}\"       : \"\"\n    def unzip      = reads.Extension == 'gz'    ? \"gunzip -f -d -q $reads\"       : \"\"\n    def file       = reads.Extension == 'gz'    ? \"$reads.baseName\"              : \"$reads\"\n    \"\"\"\n    $unzip\n\n    cdna_classifier.py -t $task.cpus -r ${reads.simpleName}_report.pdf $method $adapter $config $phmm_file $qual $length -u ${reads.simpleName}_unclassified.fastq -w ${reads.simpleName}_rescued.fastq $file ${reads.simpleName}_pychopper.fastq\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"long_job\"",
            "tag \"$sample_id\"",
            "conda \"$baseDir/conda-envs/pychopper-env.yaml\"",
            "publishDir \"${params.outdir}/pychopper_qc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "arima_qc": {
        "name_process": "arima_qc",
        "string_process": "process arima_qc {\n\n  label \"small_job\"\n\n  conda \"$baseDir/conda-envs/samtools-env.yaml\"\n\n  input:\n    path bam1\n    path bam2\n    path genome\n\n  output:\n    path \"*.merged.bam\", emit: bam\n\n  script:\n\n    \"\"\"\n    samtools faidx $genome\n\n    perl $baseDir/scripts/two_read_bam_combiner.pl $bam1 $bam2 samtools $params.mapq_filter | samtools view -bS -t ${genome}.faidx - | samtools sort -@ $task.cpus -o ${bam1.simpleName}.merged.bam -\n\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    samtools faidx $genome\n\n    perl $baseDir/scripts/two_read_bam_combiner.pl $bam1 $bam2 samtools $params.mapq_filter | samtools view -bS -t ${genome}.faidx - | samtools sort -@ $task.cpus -o ${bam1.simpleName}.merged.bam -\n\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam1",
            "bam2",
            "genome"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label \"small_job\"",
            "conda \"$baseDir/conda-envs/samtools-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "process multiqc {\n\n  conda \"$baseDir/conda-envs/multiqc-env.yaml\"\n\n  publishDir \"${params.outdir}\", mode: 'copy'\n\n  input:\n    path('*')\n    path config\n\n  output:\n    path \"*.html\"\n\n  script:\n    \"\"\"\n    export LC_ALL=en_US.utf8\n    multiqc .\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    export LC_ALL=en_US.utf8\n    multiqc .\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "config"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "conda \"$baseDir/conda-envs/multiqc-env.yaml\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "masurca": {
        "name_process": "masurca",
        "string_process": "process masurca {\n\n  label 'assembly'\n\n  container \"https://depot.galaxyproject.org/singularity/masurca:4.0.7--pl5262h86ccdc5_0\"\n\n  publishDir \"${params.outdir}/masurca\", mode: 'copy'\n\n  input:\n    path masurca_file\n\n  output:\n    path \"final.genome.scf.fasta\", emit: assembly\n\n  script:\n    \"\"\"\n    masurca ${masurca_file}\n\n    ./assemble.sh\n\n    cp CA.mr*/final.genome.scf.fasta final.genome.scf.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    masurca ${masurca_file}\n\n    ./assemble.sh\n\n    cp CA.mr*/final.genome.scf.fasta final.genome.scf.fasta\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "MaSuRCA"
        ],
        "tools_url": [
            "https://bio.tools/masurca"
        ],
        "tools_dico": [
            {
                "name": "MaSuRCA",
                "uri": "https://bio.tools/masurca",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Whole genome assembly software. It combines the efficiency of the de\u00a0Bruijn graph and Overlap-Layout-Consensus (OLC) approaches. MaSuRCA can assemble data sets containing only short reads from Illumina sequencing or a mixture of short reads and long reads (Sanger, 454).",
                "homepage": "http://www.genome.umd.edu/masurca.html"
            }
        ],
        "inputs": [
            "masurca_file"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "container \"https://depot.galaxyproject.org/singularity/masurca:4.0.7--pl5262h86ccdc5_0\"",
            "publishDir \"${params.outdir}/masurca\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "medaka": {
        "name_process": "medaka",
        "string_process": "process medaka {\n\n  label 'assembly'\n\n  conda \"$baseDir/conda-envs/medaka-env.yaml\"\n\n  publishDir \"${params.outdir}/medaka\", mode: 'copy'\n\n  input:\n    path fastq\n    path assembly\n\n  output:\n    path \"medaka_polish/consensus.fasta\", emit: assembly\n\n  script:\n    def medaka_model = params.medaka_model ? \"-m ${params.medaka_model}\" : \"\"\n    \"\"\"\n    medaka_consensus \\\n    -i $fastq \\\n    -d $assembly \\\n    -o medaka_polish \\\n    -t $task.cpus \\\n    $medaka_model\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    def medaka_model = params.medaka_model ? \"-m ${params.medaka_model}\" : \"\"\n    \"\"\"\n    medaka_consensus \\\n    -i $fastq \\\n    -d $assembly \\\n    -o medaka_polish \\\n    -t $task.cpus \\\n    $medaka_model\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastq",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "label 'assembly'",
            "conda \"$baseDir/conda-envs/medaka-env.yaml\"",
            "publishDir \"${params.outdir}/medaka\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "star_align": {
        "name_process": "star_align",
        "string_process": "process star_align {\n\ttag \"$sample_id\"\n\tlabel 'small_plus'\n\tpublishDir \"${params.outdir}/star\", mode: 'copy'\n\n  conda \"$baseDir/conda-envs/star-env.yaml\"\n\n  input:\n    path genome_idx\n    tuple val(sample_id), file(reads)\n  output:\n    path \"*.bam\", emit: bam\n\n  script:\n    \"\"\"\n    mkdir $sample_id\n    STAR \\\n\t\t --twopassMode Basic \\\n\t\t--runThreadN $task.cpus \\\n\t\t--genomeDir $genome_idx \\\n\t\t--readFilesIn $reads \\\n\t\t--readFilesCommand zcat \\\n\t\t--outFileNamePrefix ${sample_id}.star \\\n\t\t--outSAMattributes XS \\\n\t\t--outSAMtype BAM SortedByCoordinate \\\n\t\t--outSAMstrandField intronMotif\n\t\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    mkdir $sample_id\n    STAR \\\n\t\t --twopassMode Basic \\\n\t\t--runThreadN $task.cpus \\\n\t\t--genomeDir $genome_idx \\\n\t\t--readFilesIn $reads \\\n\t\t--readFilesCommand zcat \\\n\t\t--outFileNamePrefix ${sample_id}.star \\\n\t\t--outSAMattributes XS \\\n\t\t--outSAMtype BAM SortedByCoordinate \\\n\t\t--outSAMstrandField intronMotif\n\t\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome_idx",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$sample_id\"",
            "label 'small_plus'",
            "publishDir \"${params.outdir}/star\", mode: 'copy'",
            "conda \"$baseDir/conda-envs/star-env.yaml\""
        ],
        "when": "",
        "stub": ""
    },
    "busco": {
        "name_process": "busco",
        "string_process": "process busco {\n  tag \"$genome-$lineage\"\n  label \"long_job\"\n\n  conda \"$baseDir/conda-envs/busco-env.yaml\"\n\n  publishDir \"${params.outdir}/busco\", mode: 'copy'\n\n  input:\n    path genome\n    val lineage\n    val mode\n\n  output:\n    path \"busco_${genome.simpleName}_${lineage}/short_summary*\", emit: summary\n\n  script:\n    def busco_long = params.busco_long ? \"--long\" : \"\"\n\n    \"\"\"\n    busco \\\n    --in $genome \\\n    --lineage_dataset $lineage \\\n    --out busco_${genome.simpleName}_${lineage} \\\n    --mode $mode \\\n    $busco_long \\\n    --cpu ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    def busco_long = params.busco_long ? \"--long\" : \"\"\n\n    \"\"\"\n    busco \\\n    --in $genome \\\n    --lineage_dataset $lineage \\\n    --out busco_${genome.simpleName}_${lineage} \\\n    --mode $mode \\\n    $busco_long \\\n    --cpu ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BUSCO"
        ],
        "tools_url": [
            "https://bio.tools/busco"
        ],
        "tools_dico": [
            {
                "name": "BUSCO",
                "uri": "https://bio.tools/busco",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly validation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly QC"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1234",
                                "term": "Sequence set (nucleic acid)"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "Provides measures for quantitative assessment of genome assembly, gene set, and transcriptome completeness based on evolutionarily informed expectations of gene content from near-universal single-copy orthologs.",
                "homepage": "http://busco.ezlab.org/"
            }
        ],
        "inputs": [
            "genome",
            "lineage",
            "mode"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "palfalvi__nanoporeseq",
        "directive": [
            "tag \"$genome-$lineage\"",
            "label \"long_job\"",
            "conda \"$baseDir/conda-envs/busco-env.yaml\"",
            "publishDir \"${params.outdir}/busco\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}