{
    "crawl_and_mirror": {
        "name_process": "crawl_and_mirror",
        "string_process": "\nprocess crawl_and_mirror {\n\n    output:\n        stdout CRAWL_AND_MIRROR_OUT\n\n    script:\n        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -c -m\n        \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -c -m\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "CRAWL_AND_MIRROR_OUT"
        ],
        "nb_outputs": 1,
        "name_workflow": "SystemsGenetics__pynome-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "create_index_jobs": {
        "name_process": "create_index_jobs",
        "string_process": "\nprocess create_index_jobs {\n    input:\n        val out from CRAWL_AND_MIRROR_OUT\n\n    output:\n        path '*.txt' into INDEX_JOB_FILES\n\n    script:\n        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -I\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -I\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "CRAWL_AND_MIRROR_OUT"
        ],
        "nb_inputs": 1,
        "outputs": [
            "INDEX_JOB_FILES"
        ],
        "nb_outputs": 1,
        "name_workflow": "SystemsGenetics__pynome-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "calculate_memory": {
        "name_process": "calculate_memory",
        "string_process": "\nprocess calculate_memory {\n\n    input:\n        path index_file from INDEX_JOB_FILE_LIST\n\n    output:\n       set file(index_file), stdout into INDEX_JOB_SET\t\n\n    script:\n        \"\"\"\n        tax_id=`head -n 1 $index_file`\n        assembly=`tail -n 1 $index_file`\n        num_seqs=`grep -c \">\" ${params.output.pynome_data_dir}/\\$tax_id/\\$assembly/*.fa`\n        size=`ls -lk ${params.output.pynome_data_dir}/\\$tax_id/\\$assembly/*.fa | awk '{print \\$5}'`\n        python -c \"print(max(4, (\\$size * 2)/1000000000 + 1))\" | perl -p -e 's/\\n//'\n        \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        tax_id=`head -n 1 $index_file`\n        assembly=`tail -n 1 $index_file`\n        num_seqs=`grep -c \">\" ${params.output.pynome_data_dir}/\\$tax_id/\\$assembly/*.fa`\n        size=`ls -lk ${params.output.pynome_data_dir}/\\$tax_id/\\$assembly/*.fa | awk '{print \\$5}'`\n        python -c \"print(max(4, (\\$size * 2)/1000000000 + 1))\" | perl -p -e 's/\\n//'\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "INDEX_JOB_FILE_LIST"
        ],
        "nb_inputs": 1,
        "outputs": [
            "INDEX_JOB_SET"
        ],
        "nb_outputs": 1,
        "name_workflow": "SystemsGenetics__pynome-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "index_genome": {
        "name_process": "index_genome",
        "string_process": "\nprocess index_genome {\n    label \"index_genome\"\n    memory \"$memory_limit GB\"\n\n    input:\n        set file(index_file), val(memory_limit) from INDEX_JOB_SET\n\n    script:\n        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -n ${task.cpus} -i -f $index_file\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        pynome -d ${params.output.pynome_data_dir} -n ${task.cpus} -i -f $index_file\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "INDEX_JOB_SET"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SystemsGenetics__pynome-nf",
        "directive": [
            "label \"index_genome\"",
            "memory \"$memory_limit GB\""
        ],
        "when": "",
        "stub": ""
    }
}