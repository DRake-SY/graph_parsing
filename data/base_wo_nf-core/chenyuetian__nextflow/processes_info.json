{
    "splitLetters": {
        "name_process": "splitLetters",
        "string_process": "\nprocess splitLetters {\n  \n           \n  \n    output:\n    path 'hello_*' into records \n\n    \"\"\"\n    printf \"${params.str}\" | awk '{for (i = 2;i<=6; i++ )print \\$i}'  | cut -c1  | split -l 1 - hello_\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    printf \"${params.str}\" | awk '{for (i = 2;i<=6; i++ )print \\$i}'  | cut -c1  | split -l 1 - hello_\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "records"
        ],
        "nb_outputs": 1,
        "name_workflow": "chenyuetian__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "combine": {
        "name_process": "combine",
        "string_process": "\nprocess combine {\n \n    input:\n    path 'y' from records.flatten()\n\n    output:\n    stdout into result\n \n    \"\"\"\n    printf '${params.str}' | awk '{print \\$1}' \n    cat 'y' \n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    printf '${params.str}' | awk '{print \\$1}' \n    cat 'y' \n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "records"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "chenyuetian__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "blast": {
        "name_process": "blast",
        "string_process": "\nprocess blast {\n    input:\n    path 'query.fa' from fasta_ch\n    path db from db_dir\n \n    output:\n    file 'top_hits' into hits_ch\n \n    \"\"\"\n    blastp -db $db/$db_name -query query.fa -outfmt 6 > blast_result\n    cat blast_result | head -n 10 | cut -f 2 > top_hits\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    blastp -db $db/$db_name -query query.fa -outfmt 6 > blast_result\n    cat blast_result | head -n 10 | cut -f 2 > top_hits\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BLASTP-ACC"
        ],
        "tools_url": [
            "https://bio.tools/BLASTP-ACC"
        ],
        "tools_dico": [
            {
                "name": "BLASTP-ACC",
                "uri": "https://bio.tools/BLASTP-ACC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3297",
                            "term": "Biotechnology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Sequence alignment (local)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parallel Architecture and Hardware Accelerator Design for BLAST-based Protein Sequence Alignment.\n\nIn this study, we design a hardware accelerator for a widely used sequence alignment algorithm, the basic local alignment search tool for proteins (BLASTP). The architecture of the proposed accelerator consists of five stages: a new systolic-array-based one-hit finding stage, a novel RAM-REG-based two-hit finding stage, a refined ungapped extension stage, a faster gapped extension stage, and a highly efficient parallel sorter. The system is implemented on an Altera Stratix V FPGA with a processing speed of more than 500 giga cell updates per second (GCUPS). It can receive a query sequence, compare it with the sequences in the database, and generate a list sorted in descending order of the similarity scores between the query sequence and the subject sequences.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'accelerator', 'Altera', 'Stratix', 'RAM-REG-based'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31581096"
            }
        ],
        "inputs": [
            "fasta_ch",
            "db_dir"
        ],
        "nb_inputs": 2,
        "outputs": [
            "hits_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "chenyuetian__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "extract": {
        "name_process": "extract",
        "string_process": "\nprocess extract {\n    input:\n    path 'top_hits' from hits_ch\n    path db from db_dir\n \n    output:\n    file 'sequences' into sequences_ch\n \n    \"\"\"\n    blastdbcmd -db $db/$db_name -entry_batch top_hits | head -n 50 > sequences\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    blastdbcmd -db $db/$db_name -entry_batch top_hits | head -n 50 > sequences\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "trimsequences"
        ],
        "tools_url": [
            "https://bio.tools/trimsequences"
        ],
        "tools_dico": [
            {
                "name": "trimsequences",
                "uri": "https://bio.tools/trimsequences",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Remove the 5' and/or 3' adaptors of a list of reads.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            }
        ],
        "inputs": [
            "hits_ch",
            "db_dir"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sequences_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "chenyuetian__nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    }
}