{
    "jellyfishCount": {
        "name_process": "jellyfishCount",
        "string_process": "\nprocess jellyfishCount {\ncpus 10 \nmemory \"100GB\"\nconda \"bioconda::kmer-jellyfish\"\ninput:\n val theK\n val maxKmerCov\n path reads\noutput:\n path \"*.jf\", emit:jellyfishDbs\ntag \"${reads[0]}\"\nshell:\n'''\n##Decompress files in parallel using named pipes.\nfor f in !{reads}\ndo\n mkfifo ${f%.gz}\n gzip -cdqf -- $f > ${f%.gz} &\n echo ${f%.gz} >> fifos.txt\ndone\n\njellyfish count -C -m !{theK} -s 10000000000 -t !{task.cpus} --upper-count=!{maxKmerCov} $(cat fifos.txt | tr '\\n' ' ') -o !{reads[0]}.jf\n\n##Cleanup temporary files. The named pipes won't take up any space.\n##rm -f reads.jf\n'''\n}",
        "nb_lignes_process": 26,
        "string_script": "'''\n##Decompress files in parallel using named pipes.\nfor f in !{reads}\ndo\n mkfifo ${f%.gz}\n gzip -cdqf -- $f > ${f%.gz} &\n echo ${f%.gz} >> fifos.txt\ndone\n\njellyfish count -C -m !{theK} -s 10000000000 -t !{task.cpus} --upper-count=!{maxKmerCov} $(cat fifos.txt | tr '\\n' ' ') -o !{reads[0]}.jf\n\n##Cleanup temporary files. The named pipes won't take up any space.\n##rm -f reads.jf\n'''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Jellyfish"
        ],
        "tools_url": [
            "https://bio.tools/jellyfish"
        ],
        "tools_dico": [
            {
                "name": "Jellyfish",
                "uri": "https://bio.tools/jellyfish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A command-line algorithm for counting k-mers in DNA sequence.",
                "homepage": "http://www.genome.umd.edu/jellyfish.html"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "cpus 10",
            "memory \"100GB\"",
            "conda \"bioconda::kmer-jellyfish\""
        ],
        "when": "",
        "stub": ""
    },
    "jellyfishMerge": {
        "name_process": "jellyfishMerge",
        "string_process": "\nprocess jellyfishMerge {\nexecutor \"local\"\ncpus 1\nmemory \"100GB\"\nconda \"bioconda::kmer-jellyfish\"\ninput:\n val theK\n val maxKmerCov\n path jellyfishDbs\noutput:\n val theK\n val maxKmerCov\n path \"merged.jf\"\nshell:\n'''\njellyfish merge --upper-count=!{maxKmerCov} !{jellyfishDbs} -o merged.jf\n'''\n}",
        "nb_lignes_process": 17,
        "string_script": "'''\njellyfish merge --upper-count=!{maxKmerCov} !{jellyfishDbs} -o merged.jf\n'''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Jellyfish"
        ],
        "tools_url": [
            "https://bio.tools/jellyfish"
        ],
        "tools_dico": [
            {
                "name": "Jellyfish",
                "uri": "https://bio.tools/jellyfish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A command-line algorithm for counting k-mers in DNA sequence.",
                "homepage": "http://www.genome.umd.edu/jellyfish.html"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "jellyfishDbs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "theK",
            "maxKmerCov"
        ],
        "nb_outputs": 2,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "executor \"local\"",
            "cpus 1",
            "memory \"100GB\"",
            "conda \"bioconda::kmer-jellyfish\""
        ],
        "when": "",
        "stub": ""
    },
    "jellyfishHisto": {
        "name_process": "jellyfishHisto",
        "string_process": "\nprocess jellyfishHisto {\ncpus 10 \nmemory \"100GB\"\nconda \"bioconda::kmer-jellyfish\"\ninput:\n val theK\n val maxKmerCov\n path jellyfishDbs\noutput:\n val theK\n val maxKmerCov\n path \"merged.histo\"\nshell:\n'''\njellyfish histo -t !{task.cpus} --high=!{maxKmerCov} !{jellyfishDbs} -o merged.histo\n'''\n}",
        "nb_lignes_process": 16,
        "string_script": "'''\njellyfish histo -t !{task.cpus} --high=!{maxKmerCov} !{jellyfishDbs} -o merged.histo\n'''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Jellyfish"
        ],
        "tools_url": [
            "https://bio.tools/jellyfish"
        ],
        "tools_dico": [
            {
                "name": "Jellyfish",
                "uri": "https://bio.tools/jellyfish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A command-line algorithm for counting k-mers in DNA sequence.",
                "homepage": "http://www.genome.umd.edu/jellyfish.html"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "jellyfishDbs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "theK",
            "maxKmerCov"
        ],
        "nb_outputs": 2,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "cpus 10",
            "memory \"100GB\"",
            "conda \"bioconda::kmer-jellyfish\""
        ],
        "when": "",
        "stub": ""
    },
    "genomeScope2": {
        "name_process": "genomeScope2",
        "string_process": "\nprocess genomeScope2 {\nexecutor \"local\"\npublishDir './results/' , mode:'link'\nconda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\"\ninput:\n val theK\n val maxKmerCov\n path kmerCounts\noutput:\n path \"output_dir/*\"\nshell:\n'''\ngit clone https://github.com/tbenavi1/genomescope2.0.git\n\nif [[ ! -d \"$CONDA_PREFIX/lib/R_libs\" ]]\nthen\n mkdir \"$CONDA_PREFIX/lib/R_libs\"\nfi\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\n\nsed -i \"s^\\\"~/R_libs/\\\"^\\\"$CONDA_PREFIX/lib/R_libs\\\"^g\" ./genomescope2.0/install.R\nsed -i \"s^, lib=local_lib_path^^g\" ./genomescope2.0/install.R\n##cat ./genomescope2.0/install.R | grep -v \"minpack.lm\" | grep -v \"argparse\" > tmp.R ##installs handled by bioconda\n##mv -f tmp.R ./genomescope2.0/install.R\ncd ./genomescope2.0/\nRscript install.R\ncd ../\n\n##echo \"$(head -n 1 install.R)\" >> $CONDA_PREFIX/lib/R/etc/Renviron\n\necho \"Now running GenomeScope 2.0\"\n./genomescope2.0/genomescope.R -i !{kmerCounts} -m !{maxKmerCov} -o output_dir -k !{theK}\n'''\n}",
        "nb_lignes_process": 42,
        "string_script": "'''\ngit clone https://github.com/tbenavi1/genomescope2.0.git\n\nif [[ ! -d \"$CONDA_PREFIX/lib/R_libs\" ]]\nthen\n mkdir \"$CONDA_PREFIX/lib/R_libs\"\nfi\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\n\nsed -i \"s^\\\"~/R_libs/\\\"^\\\"$CONDA_PREFIX/lib/R_libs\\\"^g\" ./genomescope2.0/install.R\nsed -i \"s^, lib=local_lib_path^^g\" ./genomescope2.0/install.R\n##cat ./genomescope2.0/install.R | grep -v \"minpack.lm\" | grep -v \"argparse\" > tmp.R ##installs handled by bioconda\n##mv -f tmp.R ./genomescope2.0/install.R\ncd ./genomescope2.0/\nRscript install.R\ncd ../\n\n##echo \"$(head -n 1 install.R)\" >> $CONDA_PREFIX/lib/R/etc/Renviron\n\necho \"Now running GenomeScope 2.0\"\n./genomescope2.0/genomescope.R -i !{kmerCounts} -m !{maxKmerCov} -o output_dir -k !{theK}\n'''",
        "nb_lignes_script": 30,
        "language_script": "bash",
        "tools": [
            "IRProfiler"
        ],
        "tools_url": [
            "https://bio.tools/irprofiler"
        ],
        "tools_dico": [
            {
                "name": "IRProfiler",
                "uri": "https://bio.tools/irprofiler",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3400",
                            "term": "Allergy, clinical immunology and immunotherapeutics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0820",
                            "term": "Membrane and lipoproteins"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2996",
                                    "term": "Structure classification"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "High throughput immune receptor profiling.",
                "homepage": "http://irprofiler.med.auth.gr:8080/"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "kmerCounts"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "executor \"local\"",
            "publishDir './results/' , mode:'link'",
            "conda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\""
        ],
        "when": "",
        "stub": ""
    },
    "smudgeplotHetkmers": {
        "name_process": "smudgeplotHetkmers",
        "string_process": "\nprocess smudgeplotHetkmers {\nexecutor \"local\"\ncpus 1\nconda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\"\ninput:\n val theK\n val maxKmerCov\n path \"kmer_k21.hist\"\n val theK2\n val maxKmerCov2\n path \"kmer_counts.jf\"\noutput:\n val theK\n val maxKmerCov\n path \"kmer_pairs_coverages_2.tsv\"\nshell:\n'''\ngit clone https://github.com/KamilSJaron/smudgeplot\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\ncd smudgeplot\nRscript install.R\ninstall -C exec/smudgeplot.py ${CONDA_PREFIX}/bin\ninstall -C exec/smudgeplot_plot.R ${CONDA_PREFIX}/bin\n\nL=$(smudgeplot.py cutoff kmer_k21.hist L)\nU=$(smudgeplot.py cutoff kmer_k21.hist U)\necho $L $U # these need to be sane values like 30 800 or so\njellyfish dump -c -L $L -U $U kmer_counts.jf | smudgeplot.py hetkmers -o kmer_pairs\n'''\n}",
        "nb_lignes_process": 38,
        "string_script": "'''\ngit clone https://github.com/KamilSJaron/smudgeplot\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\ncd smudgeplot\nRscript install.R\ninstall -C exec/smudgeplot.py ${CONDA_PREFIX}/bin\ninstall -C exec/smudgeplot_plot.R ${CONDA_PREFIX}/bin\n\nL=$(smudgeplot.py cutoff kmer_k21.hist L)\nU=$(smudgeplot.py cutoff kmer_k21.hist U)\necho $L $U # these need to be sane values like 30 800 or so\njellyfish dump -c -L $L -U $U kmer_counts.jf | smudgeplot.py hetkmers -o kmer_pairs\n'''",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "IRProfiler",
            "Jellyfish"
        ],
        "tools_url": [
            "https://bio.tools/irprofiler",
            "https://bio.tools/jellyfish"
        ],
        "tools_dico": [
            {
                "name": "IRProfiler",
                "uri": "https://bio.tools/irprofiler",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3400",
                            "term": "Allergy, clinical immunology and immunotherapeutics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0820",
                            "term": "Membrane and lipoproteins"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2996",
                                    "term": "Structure classification"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "High throughput immune receptor profiling.",
                "homepage": "http://irprofiler.med.auth.gr:8080/"
            },
            {
                "name": "Jellyfish",
                "uri": "https://bio.tools/jellyfish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A command-line algorithm for counting k-mers in DNA sequence.",
                "homepage": "http://www.genome.umd.edu/jellyfish.html"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "theK2",
            "maxKmerCov2"
        ],
        "nb_inputs": 4,
        "outputs": [
            "theK",
            "maxKmerCov"
        ],
        "nb_outputs": 2,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "executor \"local\"",
            "cpus 1",
            "conda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\""
        ],
        "when": "",
        "stub": ""
    },
    "smudgeplot": {
        "name_process": "smudgeplot",
        "string_process": "\nprocess smudgeplot {\nexecutor \"local\"\npublishDir './results/' , mode:'link'\nconda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\"\ninput:\n val theK\n val maxKmerCov\n path kmerPairsCov\noutput:\n path \"output_dir/*\"\nshell:\n'''\ngit clone https://github.com/KamilSJaron/smudgeplot\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\ncd smudgeplot\nRscript install.R\ninstall -C exec/smudgeplot.py ${CONDA_PREFIX}/bin\ninstall -C exec/smudgeplot_plot.R ${CONDA_PREFIX}/bin\n\n\nsmudgeplot.py plot kmer_pairs_coverages_2.tsv -o my_genome\n'''\n}",
        "nb_lignes_process": 31,
        "string_script": "'''\ngit clone https://github.com/KamilSJaron/smudgeplot\n\n##Set CRAN mirror for R\nif grep -Fxq 'CRAN=\"http://cran.us.r-project.org\"' ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nthen\n    ##Do nothing\n    echo \"\"\nelse\n    echo 'options(repos=structure(c(CRAN=\"http://cran.us.r-project.org\")))' >> ${CONDA_PREFIX}/lib/R/library/base/R/Rprofile\nfi\n\ncd smudgeplot\nRscript install.R\ninstall -C exec/smudgeplot.py ${CONDA_PREFIX}/bin\ninstall -C exec/smudgeplot_plot.R ${CONDA_PREFIX}/bin\n\n\nsmudgeplot.py plot kmer_pairs_coverages_2.tsv -o my_genome\n'''",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "IRProfiler"
        ],
        "tools_url": [
            "https://bio.tools/irprofiler"
        ],
        "tools_dico": [
            {
                "name": "IRProfiler",
                "uri": "https://bio.tools/irprofiler",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3400",
                            "term": "Allergy, clinical immunology and immunotherapeutics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0820",
                            "term": "Membrane and lipoproteins"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2996",
                                    "term": "Structure classification"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "High throughput immune receptor profiling.",
                "homepage": "http://irprofiler.med.auth.gr:8080/"
            }
        ],
        "inputs": [
            "theK",
            "maxKmerCov",
            "kmerPairsCov"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "photocyte__genomeScope_nf",
        "directive": [
            "executor \"local\"",
            "publishDir './results/' , mode:'link'",
            "conda \"bioconda::kmer-jellyfish r::r r::r-devtools r::r-roxygen2\""
        ],
        "when": "",
        "stub": ""
    }
}