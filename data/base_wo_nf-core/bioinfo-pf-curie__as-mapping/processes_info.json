{
    "prepareParentalReferenceGenome": {
        "name_process": "prepareParentalReferenceGenome",
        "string_process": " process prepareParentalReferenceGenome {\n    label 'process_highmem'\n    publishDir \"${params.outdir}/reference_genome/genome\", mode: 'copy',\n        saveAs: {filename ->\n                 if (filename.indexOf(\"_report.txt\") > 0) \"logs/$filename\"\n                 else if (params.saveReference || params.refOnly) filename\n                 else null\n                }\n    when:\n    !params.nmask\n\n    input:\n    file reference from fastaParentalGenome.collect()\n    file vcf from vcfParentalGenome.collect()\n\n    output:\n    file(\"*_report.txt\") into chGenomeParentalReport\n    file(\"*_genome.fa\") into chGenomeParentalFasta\n\n    script:\n\n    if (params.maternal){\n      optsStrainMaternal = params.maternal == params.vcfRef ? \"\" : \"--strain ${params.maternal}\"\n      concatMat = params.maternal == params.vcfRef ? \"cat genome/*.fa > ${params.genome}_${params.vcfRef}_genome.fa\" : \"cat ${params.maternal}_full_sequence/*.fa* > ${params.genome}_${params.maternal}_genome.fa\"\n    }else{\n      concatMat = \"\"\n      optsStrainMaternal = \"\"\n    }\n\n    if (params.paternal){\n      optsStrainPaternal = params.paternal == params.vcfRef ? \"\" : params.maternal ? \"--strain ${params.paternal}\" : \"--strain2 ${params.paternal}\"\n      concatPat = params.paternal == params.vcfRef ? \"cat genome/*.fa > ${params.genome}_${params.vcfRef}_genome.fa\" : \"cat ${params.paternal}_full_sequence/*.fa > ${params.genome}_${params.paternal}_genome.fa\"\n    }else{\n      concatPat = \"\"\n      optsStrainPaternal = \"\"\n    }\n    optsStrain = \"${optsStrainMaternal} ${optsStrainPaternal}\"\n\n    \"\"\"\n    mkdir genome; cd genome; faidx -x ../${reference}; cd ..\n    SNPsplit_genome_preparation $optsStrain --reference_genome genome --vcf_file ${vcf} --no_nmasking\n    ${concatPat}\n    ${concatMat}\n    \"\"\"\n  }",
        "nb_lignes_process": 43,
        "string_script": "    if (params.maternal){\n      optsStrainMaternal = params.maternal == params.vcfRef ? \"\" : \"--strain ${params.maternal}\"\n      concatMat = params.maternal == params.vcfRef ? \"cat genome/*.fa > ${params.genome}_${params.vcfRef}_genome.fa\" : \"cat ${params.maternal}_full_sequence/*.fa* > ${params.genome}_${params.maternal}_genome.fa\"\n    }else{\n      concatMat = \"\"\n      optsStrainMaternal = \"\"\n    }\n\n    if (params.paternal){\n      optsStrainPaternal = params.paternal == params.vcfRef ? \"\" : params.maternal ? \"--strain ${params.paternal}\" : \"--strain2 ${params.paternal}\"\n      concatPat = params.paternal == params.vcfRef ? \"cat genome/*.fa > ${params.genome}_${params.vcfRef}_genome.fa\" : \"cat ${params.paternal}_full_sequence/*.fa > ${params.genome}_${params.paternal}_genome.fa\"\n    }else{\n      concatPat = \"\"\n      optsStrainPaternal = \"\"\n    }\n    optsStrain = \"${optsStrainMaternal} ${optsStrainPaternal}\"\n\n    \"\"\"\n    mkdir genome; cd genome; faidx -x ../${reference}; cd ..\n    SNPsplit_genome_preparation $optsStrain --reference_genome genome --vcf_file ${vcf} --no_nmasking\n    ${concatPat}\n    ${concatMat}\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "pyfaidx"
        ],
        "tools_url": [
            "https://bio.tools/pyfaidx"
        ],
        "tools_dico": [
            {
                "name": "pyfaidx",
                "uri": "https://bio.tools/pyfaidx",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This python module implements pure Python classes for indexing, retrieval, and in-place modification of FASTA files using a samtools compatible index.",
                "homepage": "https://pythonhosted.org/pyfaidx/"
            }
        ],
        "inputs": [
            "fastaParentalGenome",
            "vcfParentalGenome"
        ],
        "nb_inputs": 2,
        "outputs": [
            "chGenomeParentalReport",
            "chGenomeParentalFasta"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_highmem'",
            "publishDir \"${params.outdir}/reference_genome/genome\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"_report.txt\") > 0) \"logs/$filename\" else if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "!params.nmask",
        "stub": ""
    },
    "prepareNmaskReferenceGenome": {
        "name_process": "prepareNmaskReferenceGenome",
        "string_process": " process prepareNmaskReferenceGenome {\n    label 'process_highmem'\n    publishDir \"${params.outdir}/reference_genome/genome\", mode: 'copy',\n        saveAs: {filename ->\n                 if (filename.indexOf(\"_report.txt\") > 0) \"logs/$filename\"\n                 else if (params.saveReference || params.refOnly) filename\n                 else null\n                }\n\n    when:\n    params.nmask\n\n    input:\n    file reference from fastaNmaskGenome.collect()\n    file vcf from vcfNmaskGenome.collect()\n\n    output:\n    file(\"*_report.txt\") into chGenomeNmaskReport\n    file(\"*nmask.fa\") into chGenomeNmaskFasta\n    file(\"all*.txt\") into chSnp\n\n    script:\n    if (params.maternal != params.vcfRef && params.paternal != params.vcfRef){\n      optsStrain = \"--strain ${params.maternal} --strain2 ${params.paternal}\"\n      nmaskPattern = \"*dual_hybrid*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.maternal}_${params.paternal}\"\n     }else if (params.maternal != params.vcfRef){\n      optsStrain = \"--strain ${params.maternal}\"\n      nmaskPattern = \"*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.maternal}_${params.vcfRef}\"\n     }else if (params.paternal != params.vcfRef){\n      optsStrain = \"--strain ${params.paternal}\"\n      nmaskPattern = \"*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.vcfRef}_${params.paternal}\"\n     }\n\n    \"\"\"\n    mkdir genome; cd genome; faidx -x ../${reference}; cd ..\n    SNPsplit_genome_preparation $optsStrain --reference_genome genome --vcf_file ${vcf} -nmasking\n    cat ${nmaskPattern} > ${opref}_nmask.fa\n    gunzip all*gz\n    \"\"\"                                            \n  }",
        "nb_lignes_process": 41,
        "string_script": "    if (params.maternal != params.vcfRef && params.paternal != params.vcfRef){\n      optsStrain = \"--strain ${params.maternal} --strain2 ${params.paternal}\"\n      nmaskPattern = \"*dual_hybrid*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.maternal}_${params.paternal}\"\n     }else if (params.maternal != params.vcfRef){\n      optsStrain = \"--strain ${params.maternal}\"\n      nmaskPattern = \"*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.maternal}_${params.vcfRef}\"\n     }else if (params.paternal != params.vcfRef){\n      optsStrain = \"--strain ${params.paternal}\"\n      nmaskPattern = \"*_N-masked/*.fa\"\n      opref = \"${params.genome}_${params.vcfRef}_${params.paternal}\"\n     }\n\n    \"\"\"\n    mkdir genome; cd genome; faidx -x ../${reference}; cd ..\n    SNPsplit_genome_preparation $optsStrain --reference_genome genome --vcf_file ${vcf} -nmasking\n    cat ${nmaskPattern} > ${opref}_nmask.fa\n    gunzip all*gz\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "pyfaidx"
        ],
        "tools_url": [
            "https://bio.tools/pyfaidx"
        ],
        "tools_dico": [
            {
                "name": "pyfaidx",
                "uri": "https://bio.tools/pyfaidx",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This python module implements pure Python classes for indexing, retrieval, and in-place modification of FASTA files using a samtools compatible index.",
                "homepage": "https://pythonhosted.org/pyfaidx/"
            }
        ],
        "inputs": [
            "fastaNmaskGenome",
            "vcfNmaskGenome"
        ],
        "nb_inputs": 2,
        "outputs": [
            "chGenomeNmaskReport",
            "chGenomeNmaskFasta",
            "chSnp"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_highmem'",
            "publishDir \"${params.outdir}/reference_genome/genome\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"_report.txt\") > 0) \"logs/$filename\" else if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "params.nmask",
        "stub": ""
    },
    "makeStarIndex": {
        "name_process": "makeStarIndex",
        "string_process": " process makeStarIndex {\n    label 'process_high'\n    publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy',\n       saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }\n\n    input:\n    file(fasta) from genomeFastaStar.flatten()\n\n    output:\n    file \"*STAR_index\" into starIdx\n\n    script:\n    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_STAR_index\n    STAR --runMode genomeGenerate --limitGenomeGenerateRAM 33524399488 --runThreadN ${task.cpus} --genomeDir ${strainPrefix}_STAR_index --genomeFastaFiles $fasta\n    \"\"\"\n  }",
        "nb_lignes_process": 16,
        "string_script": "    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_STAR_index\n    STAR --runMode genomeGenerate --limitGenomeGenerateRAM 33524399488 --runThreadN ${task.cpus} --genomeDir ${strainPrefix}_STAR_index --genomeFastaFiles $fasta\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genomeFastaStar"
        ],
        "nb_inputs": 1,
        "outputs": [
            "starIdx"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_high'",
            "publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy' , saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "makeBowtie2Index": {
        "name_process": "makeBowtie2Index",
        "string_process": " process makeBowtie2Index {\n    label 'process_medium'\n    publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy',\n       saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }\n\n    input:\n    file(fasta) from genomeFastaBowtie2.flatten()\n\n    output:\n    file(\"${strainPrefix}_bowtie2_index\") into (bowtie2Idx, tophat2Idx)\n\n    script:\n    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_bowtie2_index\n    bowtie2-build ${fasta} ${strainPrefix}_bowtie2_index/${base}\n    \"\"\"\n  }",
        "nb_lignes_process": 17,
        "string_script": "    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_bowtie2_index\n    bowtie2-build ${fasta} ${strainPrefix}_bowtie2_index/${base}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BASE"
        ],
        "tools_url": [
            "https://bio.tools/base-antibody"
        ],
        "tools_dico": [
            {
                "name": "BASE",
                "uri": "https://bio.tools/base-antibody",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0804",
                            "term": "Immunology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy-to-use software for complete data analysis in single cell immunoglobulin cloning.",
                "homepage": "https://github.com/automatedSequencing/BASE"
            }
        ],
        "inputs": [
            "genomeFastaBowtie2"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_medium'",
            "publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy' , saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "makeHisat2Splicesites": {
        "name_process": "makeHisat2Splicesites",
        "string_process": " process makeHisat2Splicesites {\n    label 'process_low'\n    publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy',\n       saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }\n\n    input:\n    file gtf from gtfHisat2Splicesites.collect()\n\n    output:\n    file \"${gtf.baseName}.hisat2_splice_sites.txt\" into indexingSplicesites, alignmentSplicesites\n\n    script:\n    \"\"\"\n    hisat2_extract_splice_sites.py $gtf > ${gtf.baseName}.hisat2_splice_sites.txt\n    \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    hisat2_extract_splice_sites.py $gtf > ${gtf.baseName}.hisat2_splice_sites.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtfHisat2Splicesites"
        ],
        "nb_inputs": 1,
        "outputs": [
            "indexingSplicesites",
            "alignmentSplicesites"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_low'",
            "publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy' , saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "makeHisat2Index": {
        "name_process": "makeHisat2Index",
        "string_process": " process makeHisat2Index {\n    label 'process_extra'\n    publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy',\n         saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }\n\n    input:\n    file fasta from genomeFastaHisat2.flatten()\n    file indexing_splicesites from indexingSplicesites.collect()\n    file gtf from gtfHisat2Index.collect()\n\n    output:\n    file(\"${strainPrefix}_hisat2_index\") into hisat2Idx\n\n    script:\n    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_hisat2_index\n    hisat2_extract_exons.py $gtf > ${gtf.baseName}.hisat2_exons.txt\n    hisat2-build -p ${task.cpus} --ss $indexing_splicesites --exon ${gtf.baseName}.hisat2_exons.txt $fasta ${strainPrefix}_hisat2_index/${base}\n    \"\"\"\n  }",
        "nb_lignes_process": 20,
        "string_script": "    strainPrefix = fasta.toString() - ~/(\\_genome.fa)?(\\.fa)?$/\n    base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n    \"\"\"\n    mkdir -p ${strainPrefix}_hisat2_index\n    hisat2_extract_exons.py $gtf > ${gtf.baseName}.hisat2_exons.txt\n    hisat2-build -p ${task.cpus} --ss $indexing_splicesites --exon ${gtf.baseName}.hisat2_exons.txt $fasta ${strainPrefix}_hisat2_index/${base}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BASE"
        ],
        "tools_url": [
            "https://bio.tools/base-antibody"
        ],
        "tools_dico": [
            {
                "name": "BASE",
                "uri": "https://bio.tools/base-antibody",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0804",
                            "term": "Immunology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy-to-use software for complete data analysis in single cell immunoglobulin cloning.",
                "homepage": "https://github.com/automatedSequencing/BASE"
            }
        ],
        "inputs": [
            "genomeFastaHisat2",
            "indexingSplicesites",
            "gtfHisat2Index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "hisat2Idx"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_extra'",
            "publishDir \"${params.outdir}/reference_genome/indexes\", mode: 'copy' , saveAs: {filename -> if (params.saveReference || params.refOnly) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "trimGalore": {
        "name_process": "trimGalore",
        "string_process": "\nprocess trimGalore {\n  tag \"$name\" \n  publishDir \"${params.outdir}/trimming\", mode: 'copy',\n              saveAs: {filename -> filename.indexOf(\".log\") > 0 ? \"logs/$filename\" : \"$filename\"}\n  when:\n  !params.skipTrimming\n\n  input:\n  set val(name), file(reads) from rawReads\n\n  output:\n  set val(name), file(\"*fastq.gz\") into readsFastqc, readsStar, readsBowtie2, readsHisat2, readsTophat2\n  set val(name), file(\"*trimming_report.txt\") into trimResults\n\n  script:\n  prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n  if (params.singleEnd) {\n    \"\"\"\n    trim_galore --trim-n \\\n                --quality ${params.trimQuality} \\\n                --length ${params.trimMinLen} \\\n                --gzip $reads --basename ${prefix} --cores ${task.cpus}\n    mv ${prefix}_trimmed.fq.gz ${prefix}_trimmed_R1.fastq.gz\n    \"\"\"\n\n  }else {\n    \"\"\"\n    trim_galore --trim-n \\\n                --quality ${params.trimQuality} \\\n                --length ${params.trimMinLen} \\\n                --paired --gzip $reads --basename ${prefix} --cores ${task.cpus}\n    mv ${prefix}_R1_val_1.fq.gz ${prefix}_trimmed_R1.fastq.gz\n    mv ${prefix}_R2_val_2.fq.gz ${prefix}_trimmed_R2.fastq.gz\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 35,
        "string_script": "  prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n  if (params.singleEnd) {\n    \"\"\"\n    trim_galore --trim-n \\\n                --quality ${params.trimQuality} \\\n                --length ${params.trimMinLen} \\\n                --gzip $reads --basename ${prefix} --cores ${task.cpus}\n    mv ${prefix}_trimmed.fq.gz ${prefix}_trimmed_R1.fastq.gz\n    \"\"\"\n\n  }else {\n    \"\"\"\n    trim_galore --trim-n \\\n                --quality ${params.trimQuality} \\\n                --length ${params.trimMinLen} \\\n                --paired --gzip $reads --basename ${prefix} --cores ${task.cpus}\n    mv ${prefix}_R1_val_1.fq.gz ${prefix}_trimmed_R1.fastq.gz\n    mv ${prefix}_R2_val_2.fq.gz ${prefix}_trimmed_R2.fastq.gz\n    \"\"\"\n  }",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rawReads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "readsFastqc",
            "readsStar",
            "readsBowtie2",
            "readsHisat2",
            "readsTophat2",
            "trimResults"
        ],
        "nb_outputs": 6,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trimming\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".log\") > 0 ? \"logs/$filename\" : \"$filename\"}"
        ],
        "when": "!params.skipTrimming",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name (raw)\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n    saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n    when:\n    !params.skipFastqc\n\n    input:\n    set val(name), file(reads) from readsFastqc\n\n    output:\n    file \"*_fastqc.{zip,html}\" into fastqcResults\n\n    script:\n    \"\"\"\n    fastqc -q $reads -t ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    fastqc -q $reads -t ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "readsFastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqcResults"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$name (raw)\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "!params.skipFastqc",
        "stub": ""
    },
    "star": {
        "name_process": "star",
        "string_process": " process star {\n    tag \"$prefix\"\n    label 'process_high'\n    publishDir \"${params.outdir}/alignment\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n            else filename}\n\n    input:\n    set val(prefix), file(reads) from readsStar\n    each index from starIdx\n    file gtf from gtfStar.collect().ifEmpty([])\n\n    output:\n    set val(prefix), file (\"*bam\") into starBam\n    file \"*Log.final.out\" into starLogs\n\n    script:\n    def gtfOpts = params.gtf && (params.useGtf || params.rnaseq) ? \"--sjdbGTFfile $gtf\" : ''\n    def mandatoryOpts = \"--alignEndsType EndToEnd --outSAMattributes NH HI NM AS MD --outSAMtype BAM Unsorted --outSAMunmapped Within\"\n    def genomeBase = index.baseName - ~/_STAR_index$/\n    \"\"\"\n    STAR --genomeDir $index \\\\\n       ${gtfOpts} \\\\\n       ${mandatoryOpts} \\\\\n       --readFilesIn $reads  \\\\\n       --runThreadN ${task.cpus} \\\\\n       --runMode alignReads \\\\\n       --readFilesCommand zcat \\\\\n       --runDirPerm All_RWX \\\\\n       --outTmpDir /local/scratch/asmap_\\$(date +%d%s%S%N) \\\\\n       --outFileNamePrefix ${prefix}_${genomeBase}  \\\\\n       --outSAMattrRGline ID:$prefix SM:$prefix LB:Illumina PL:Illumina\n\n    ## sort by read name\n    samtools sort -n ${prefix}_${genomeBase}Aligned.out.bam -@ ${task.cpus} -T ${prefix} -o ${prefix}_${genomeBase}_sorted.bam \n    mv ${prefix}_${genomeBase}_sorted.bam ${prefix}_${genomeBase}Aligned.out.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 37,
        "string_script": "    def gtfOpts = params.gtf && (params.useGtf || params.rnaseq) ? \"--sjdbGTFfile $gtf\" : ''\n    def mandatoryOpts = \"--alignEndsType EndToEnd --outSAMattributes NH HI NM AS MD --outSAMtype BAM Unsorted --outSAMunmapped Within\"\n    def genomeBase = index.baseName - ~/_STAR_index$/\n    \"\"\"\n    STAR --genomeDir $index \\\\\n       ${gtfOpts} \\\\\n       ${mandatoryOpts} \\\\\n       --readFilesIn $reads  \\\\\n       --runThreadN ${task.cpus} \\\\\n       --runMode alignReads \\\\\n       --readFilesCommand zcat \\\\\n       --runDirPerm All_RWX \\\\\n       --outTmpDir /local/scratch/asmap_\\$(date +%d%s%S%N) \\\\\n       --outFileNamePrefix ${prefix}_${genomeBase}  \\\\\n       --outSAMattrRGline ID:$prefix SM:$prefix LB:Illumina PL:Illumina\n\n    ## sort by read name\n    samtools sort -n ${prefix}_${genomeBase}Aligned.out.bam -@ ${task.cpus} -T ${prefix} -o ${prefix}_${genomeBase}_sorted.bam \n    mv ${prefix}_${genomeBase}_sorted.bam ${prefix}_${genomeBase}Aligned.out.bam\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "STAR",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/star",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "readsStar",
            "starIdx",
            "gtfStar"
        ],
        "nb_inputs": 3,
        "outputs": [
            "starBam",
            "starLogs"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$prefix\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/alignment\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "bowtie2": {
        "name_process": "bowtie2",
        "string_process": " process bowtie2 {\n    tag \"$prefix\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/alignment\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n            else filename}\n\n    input:\n    set val(prefix), file(reads) from readsBowtie2\n    each file(index) from bowtie2Idx\n\n    output:\n    set val(prefix), file(\"*.bam\") into bowtie2Bam\n    file(\"*.log\") into bowtie2Logs\n\n    script:\n    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.bt2)/ \n    bwt2Opts = params.nmask ? \"-D 70 -R 3 -N 0 -L 20 -i S,1,0.50\" : \"\"\n    inCmd = params.singleEnd ? \"-U ${reads}\" : \"-1 ${reads[0]} -2 ${reads[1]}\"\n    \"\"\"\n    bowtie2 --very-sensitive --end-to-end --reorder \\\\\n            ${bwt2Opts} \\\\\n            --rg-id BMG --rg SM:${prefix} \\\\\n            -p ${task.cpus} \\\\\n            -x ${index}/${genomeBase} \\\\\n            ${inCmd} 2> ${prefix}_${genomeBase}_bowtie2.log | samtools view -bS - > ${prefix}_${genomeBase}.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 29,
        "string_script": "    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.bt2)/ \n    bwt2Opts = params.nmask ? \"-D 70 -R 3 -N 0 -L 20 -i S,1,0.50\" : \"\"\n    inCmd = params.singleEnd ? \"-U ${reads}\" : \"-1 ${reads[0]} -2 ${reads[1]}\"\n    \"\"\"\n    bowtie2 --very-sensitive --end-to-end --reorder \\\\\n            ${bwt2Opts} \\\\\n            --rg-id BMG --rg SM:${prefix} \\\\\n            -p ${task.cpus} \\\\\n            -x ${index}/${genomeBase} \\\\\n            ${inCmd} 2> ${prefix}_${genomeBase}_bowtie2.log | samtools view -bS - > ${prefix}_${genomeBase}.bam\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "readsBowtie2",
            "bowtie2Idx"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bowtie2Bam",
            "bowtie2Logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$prefix\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/alignment\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "tophat2": {
        "name_process": "tophat2",
        "string_process": " process tophat2 {\n    tag \"$prefix\"\n    label 'process_high'\n    publishDir \"${params.outdir}/alignment\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".align_summary.txt\") > 0) \"logs/$filename\"\n            else filename\n        }\n\n    input:\n    set val(prefix), file(reads) from readsTophat2 \n    each file(index) from tophat2Idx\n    file gtf from gtfTophat2.collect()\n\n    output:\n    set val(prefix), file(\"${prefix}_${genomeBase}.bam\") into tophat2Bam\n    file \"*.align_summary.txt\" into tophat2Logs\n\n    script:\n    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.bt2)/ \n\n    def stranded_opt = '--library-type fr-unstranded'\n    if (params.forwardStranded){\n      stranded_opt = '--library-type fr-secondstrand'\n    }else if (params.reverseStranded){\n      stranded_opt = '--library-type fr-firststrand'\n    }\n    def out = './mapping'\n    def sample = \"--rg-id ${prefix} --rg-sample ${prefix} --rg-library Illumina --rg-platform Illumina --rg-platform-unit ${prefix}\"\n    \"\"\"\n    mkdir -p ${out}\n    export PATH=/bioinfo/local/build/Centos/python/python-2.7.13/bin/:/bioinfo/local/build/Centos/tophat/tophat_2.1.1/bin/:/bioinfo/local/build/Centos/bowtie2/bowtie2-2.2.9/:$PATH\n    tophat2 -p ${task.cpus} \\\\\n             ${sample} \\\\\n             --GTF $gtf \\\\\n             ${stranded_opt} \\\\\n             -o ${out} \\\\\n             ${index}/${genomeBase} \\\\\n             ${reads} \n\n    mv ${out}/accepted_hits.bam ${prefix}_${genomeBase}.bam\n    mv ${out}/align_summary.txt ${prefix}_${genomeBase}.align_summary.txt\n    \"\"\"\n  }",
        "nb_lignes_process": 44,
        "string_script": "    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.bt2)/ \n\n    def stranded_opt = '--library-type fr-unstranded'\n    if (params.forwardStranded){\n      stranded_opt = '--library-type fr-secondstrand'\n    }else if (params.reverseStranded){\n      stranded_opt = '--library-type fr-firststrand'\n    }\n    def out = './mapping'\n    def sample = \"--rg-id ${prefix} --rg-sample ${prefix} --rg-library Illumina --rg-platform Illumina --rg-platform-unit ${prefix}\"\n    \"\"\"\n    mkdir -p ${out}\n    export PATH=/bioinfo/local/build/Centos/python/python-2.7.13/bin/:/bioinfo/local/build/Centos/tophat/tophat_2.1.1/bin/:/bioinfo/local/build/Centos/bowtie2/bowtie2-2.2.9/:$PATH\n    tophat2 -p ${task.cpus} \\\\\n             ${sample} \\\\\n             --GTF $gtf \\\\\n             ${stranded_opt} \\\\\n             -o ${out} \\\\\n             ${index}/${genomeBase} \\\\\n             ${reads} \n\n    mv ${out}/accepted_hits.bam ${prefix}_${genomeBase}.bam\n    mv ${out}/align_summary.txt ${prefix}_${genomeBase}.align_summary.txt\n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "tophat2"
        ],
        "tools_url": [
            "https://bio.tools/tophat2"
        ],
        "tools_dico": [
            {
                "name": "tophat2",
                "uri": "https://bio.tools/tophat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            },
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Gapped-read mapper for RNA-seq data.",
                "homepage": "http://ccb.jhu.edu/software/tophat/index.shtml"
            }
        ],
        "inputs": [
            "readsTophat2",
            "tophat2Idx",
            "gtfTophat2"
        ],
        "nb_inputs": 3,
        "outputs": [
            "tophat2Bam",
            "tophat2Logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$prefix\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/alignment\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".align_summary.txt\") > 0) \"logs/$filename\" else filename }"
        ],
        "when": "",
        "stub": ""
    },
    "hisat2": {
        "name_process": "hisat2",
        "string_process": " process hisat2 {\n    tag \"$prefix\"\n    label 'process_high'\n    publishDir \"${params.outdir}/alignment\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".hisat2_summary.txt\") > 0) \"logs/$filename\"\n\t        else filename}\n    input:\n    set val(prefix), file(reads) from readsHisat2\n    each file(index) from hisat2Idx\n    file alignmentSplicesites from alignmentSplicesites.collect()\n\n    output:\n    set val(prefix), file(\"${prefix}_${genomeBase}.bam\") into hisat2Bam\n    file \"*hisat2_summary.txt\" into hisat2Logs\n\n    script:\n    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.ht2)/\n    inCmd = params.singleEnd ? \"-U $reads\" : \"-1 ${reads[0]} -2 ${reads[1]}\"\n    def strandness = ''\n    if (params.forwardStranded){\n        strandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n    } else if (params.reverseStranded){\n        strandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n    }\n    \"\"\"\n    hisat2 -x $index/${genomeBase} \\\\\n           $inCmd \\\\\n           $strandness \\\\\n           --known-splicesite-infile $alignmentSplicesites \\\\\n           -p ${task.cpus} \\\\\n           --met-stderr \\\\\n           --new-summary \\\\\n\t   --no-softclip \\\\\n           --summary-file ${prefix}_${genomeBase}.hisat2_summary.txt \\\\\n           | samtools view -bS -F 4 -F 256 - > ${prefix}_${genomeBase}.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 38,
        "string_script": "    idxDir = file(index.toRealPath())\n    allFiles = idxDir.list()\n    genomeBase = allFiles[0] - ~/(\\.rev)?(.\\d.ht2)/\n    inCmd = params.singleEnd ? \"-U $reads\" : \"-1 ${reads[0]} -2 ${reads[1]}\"\n    def strandness = ''\n    if (params.forwardStranded){\n        strandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n    } else if (params.reverseStranded){\n        strandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n    }\n    \"\"\"\n    hisat2 -x $index/${genomeBase} \\\\\n           $inCmd \\\\\n           $strandness \\\\\n           --known-splicesite-infile $alignmentSplicesites \\\\\n           -p ${task.cpus} \\\\\n           --met-stderr \\\\\n           --new-summary \\\\\n\t   --no-softclip \\\\\n           --summary-file ${prefix}_${genomeBase}.hisat2_summary.txt \\\\\n           | samtools view -bS -F 4 -F 256 - > ${prefix}_${genomeBase}.bam\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "HISAT2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "readsHisat2",
            "hisat2Idx",
            "alignmentSplicesites"
        ],
        "nb_inputs": 3,
        "outputs": [
            "hisat2Bam",
            "hisat2Logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"$prefix\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/alignment\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".hisat2_summary.txt\") > 0) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "flagStat": {
        "name_process": "flagStat",
        "string_process": "\nprocess flagStat {\n  tag \"${prefix}\"\n  label 'process_low'\n  publishDir \"${params.outdir}/flagstat\", mode: 'copy'\n\n  input:\n  set val(prefix), file(bam) from chFlagStat\n\n  output:\n  file(\"*.flagstat\") into chFlagStatResults\n\n  script:\n  \"\"\"\n  samtools flagstat ${bam} > ${prefix}.flagstat\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools flagstat ${bam} > ${prefix}.flagstat\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "chFlagStat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "chFlagStatResults"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/flagstat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "tagParentalBams": {
        "name_process": "tagParentalBams",
        "string_process": "\nprocess tagParentalBams {\n  tag \"${prefix}\"\n  label 'process_low'\n  publishDir \"${params.outdir}/taggedBam\", mode: 'copy',\n              saveAs: {filename ->\n              if (filename.indexOf(\".log\") > 0) \"logs/$filename\"\n              else filename}\n\n  when:\n  !params.nmask && params.maternal && params.paternal\n\n  input:\n  set val(prefix), file(bams) from chParentalBams.groupTuple()\n\n  output:\n  set val(prefix), file(\"${prefix}_parentalMerged.bam\") into chTagParentalBams\n  file(\"*.log\") into tagParentalLog\n\n  script:\n  pbam = bams[0] =~ params.paternal ? bams[0] : bams[1]\n  mbam = bams[0] =~ params.maternal ? bams[0] : bams[1]\n  \"\"\"\n  mergeParentalMapping.py -m ${mbam} -p ${pbam} -o ${prefix}_parentalMerged.bam\n  mv mergeAlignReport.log ${prefix}_mergeAlignReport.log\n  \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "  pbam = bams[0] =~ params.paternal ? bams[0] : bams[1]\n  mbam = bams[0] =~ params.maternal ? bams[0] : bams[1]\n  \"\"\"\n  mergeParentalMapping.py -m ${mbam} -p ${pbam} -o ${prefix}_parentalMerged.bam\n  mv mergeAlignReport.log ${prefix}_mergeAlignReport.log\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "POPBAM",
            "BIMBAM"
        ],
        "tools_url": [
            "https://bio.tools/popbam",
            "https://bio.tools/bimbam"
        ],
        "tools_dico": [
            {
                "name": "POPBAM",
                "uri": "https://bio.tools/popbam",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phlyogenetic tree construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic tree generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Comprehensive set of computational tools for evolutionary analysis of whole-genome alignments consisting of multiple individuals, from multiple populations or species.",
                "homepage": "http://popbam.sourceforge.net/"
            },
            {
                "name": "BIMBAM",
                "uri": "https://bio.tools/bimbam",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Baysian Imputation Based Association Mapping. Genotype imputation and statistical tests for disease association, including single SNP tests and regional multi-SNP tests.",
                "homepage": "http://www.haplotype.org/bimbam.html"
            }
        ],
        "inputs": [
            "chParentalBams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "chTagParentalBams",
            "tagParentalLog"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/taggedBam\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".log\") > 0) \"logs/$filename\" else filename}"
        ],
        "when": "!params.nmask && params.maternal && params.paternal",
        "stub": ""
    },
    "tagNmaskBams": {
        "name_process": "tagNmaskBams",
        "string_process": "\nprocess tagNmaskBams {\n  tag \"${prefix}\"\n  label 'process_mediummem'\n  publishDir \"${params.outdir}/taggedBam\", mode: 'copy',\n               saveAs: {filename ->\n               if (filename.indexOf(\".txt\") > 0) \"logs/$filename\"\n               else filename}\n\n  when:\n  params.nmask\n\n  input:\n  set val(prefix), file(bam) from chNmaskBams\n  file(snpFile) from chSnpFile.collect()\n\n  output:\n  set val(prefix), file(\"*allele_flagged.bam\") into chTagNmaskBams\n  file(\"*report.txt\") into tagNmaskLog\n\n  script:\n  opts = params.singleEnd ? \"\" : \"--paired --singletons\"\n  \"\"\"\n  SNPsplit ${opts} --snp_file ${snpFile} ${bam}\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  opts = params.singleEnd ? \"\" : \"--paired --singletons\"\n  \"\"\"\n  SNPsplit ${opts} --snp_file ${snpFile} ${bam}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chNmaskBams",
            "chSnpFile"
        ],
        "nb_inputs": 2,
        "outputs": [
            "chTagNmaskBams",
            "tagNmaskLog"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_mediummem'",
            "publishDir \"${params.outdir}/taggedBam\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".txt\") > 0) \"logs/$filename\" else filename}"
        ],
        "when": "params.nmask",
        "stub": ""
    },
    "rmDuplicates": {
        "name_process": "rmDuplicates",
        "string_process": "\nprocess rmDuplicates{\n  tag \"${prefix}\"\n  label 'process_medium'\n  publishDir path: \"${params.outdir}/alignment\", mode: 'copy',\n    saveAs: {filename ->\n             if (!filename.endsWith(\".bam\") && !filename.endsWith(\".bam.bai\") ) \"stats/$filename\"\n             else if ( (filename.endsWith(\".bam\") || (filename.endsWith(\".bam.bai\"))) ) filename\n             else null}\n\n  when:\n  params.rmDups || params.chipseq\n\n  input:\n  set val(prefix), file(bams) from chTagBamsPicard\n\n  output:\n  set val(prefix), file(\"*nodup.bam\") into chMarkedBams\n  file(\"*.txt\") into chMarkedPicstats\n  file(\"*.flagstat\") into chDupStat\n\n  script:\n  pfix=bams.toString() - ~/(.bam)?$/\n  \"\"\"\n  ## Sort by coordinates\n  samtools sort ${bams} -@ ${task.cpus} -T ${prefix} -o ${pfix}_sorted.bam\n  picard -Xmx4g MarkDuplicates \\\\\n    INPUT=${pfix}_sorted.bam \\\\\n    OUTPUT=${pfix}_nodup.bam \\\\\n    REMOVE_DUPLICATES=true \\\\\n    METRICS_FILE=${pfix}.MarkDuplicates.metrics.txt \\\\\n    VALIDATION_STRINGENCY=LENIENT \\\\\n    TMP_DIR=tmpdir\n\n  ## Back to query name sort\n  samtools sort -n ${pfix}_nodup.bam -@ ${task.cpus} -T ${prefix} -o ${pfix}_nodup_sorted.bam\n  samtools flagstat ${pfix}_nodup_sorted.bam > ${prefix}_nodup.flagstat\n  mv ${pfix}_nodup_sorted.bam ${pfix}_nodup.bam\n  \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "  pfix=bams.toString() - ~/(.bam)?$/\n  \"\"\"\n  ## Sort by coordinates\n  samtools sort ${bams} -@ ${task.cpus} -T ${prefix} -o ${pfix}_sorted.bam\n  picard -Xmx4g MarkDuplicates \\\\\n    INPUT=${pfix}_sorted.bam \\\\\n    OUTPUT=${pfix}_nodup.bam \\\\\n    REMOVE_DUPLICATES=true \\\\\n    METRICS_FILE=${pfix}.MarkDuplicates.metrics.txt \\\\\n    VALIDATION_STRINGENCY=LENIENT \\\\\n    TMP_DIR=tmpdir\n\n  ## Back to query name sort\n  samtools sort -n ${pfix}_nodup.bam -@ ${task.cpus} -T ${prefix} -o ${pfix}_nodup_sorted.bam\n  samtools flagstat ${pfix}_nodup_sorted.bam > ${prefix}_nodup.flagstat\n  mv ${pfix}_nodup_sorted.bam ${pfix}_nodup.bam\n  \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "chTagBamsPicard"
        ],
        "nb_inputs": 1,
        "outputs": [
            "chMarkedBams",
            "chMarkedPicstats",
            "chDupStat"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_medium'",
            "publishDir path: \"${params.outdir}/alignment\", mode: 'copy' , saveAs: {filename -> if (!filename.endsWith(\".bam\") && !filename.endsWith(\".bam.bai\") ) \"stats/$filename\" else if ( (filename.endsWith(\".bam\") || (filename.endsWith(\".bam.bai\"))) ) filename else null}"
        ],
        "when": "params.rmDups || params.chipseq",
        "stub": ""
    },
    "splitTaggedBam": {
        "name_process": "splitTaggedBam",
        "string_process": "\nprocess splitTaggedBam {\n  tag \"${prefix}\"\n  label 'process_low'\n  publishDir \"${params.outdir}/taggedBam\", mode: 'copy',\n              saveAs: {filename ->\n              if (filename.indexOf(\".log\") > 0) \"logs/$filename\"\n              else filename}\n\n  when:\n  params.maternal && params.paternal\n\n  input:\n  set val(prefix), file(asBam) from chFiltBamsSplit\n\n  output:\n  set val(prefix), file(\"*genome1.bam\"), file(\"*genome2.bam\") into genomeBams\n  file(\"*sort.txt\") into splitLogs \n  file(\"*sort.mqc\") into splitMqc \n\n  script:\n  opts = params.singleEnd ? \"\" : \"--paired --singletons\"\n  \"\"\"\n  tag2sort ${opts} ${asBam}\n  snpsplit2mqc.sh *sort.txt > ${prefix}_sort.mqc\n  \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "  opts = params.singleEnd ? \"\" : \"--paired --singletons\"\n  \"\"\"\n  tag2sort ${opts} ${asBam}\n  snpsplit2mqc.sh *sort.txt > ${prefix}_sort.mqc\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chFiltBamsSplit"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genomeBams",
            "splitLogs",
            "splitMqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/taggedBam\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".log\") > 0) \"logs/$filename\" else filename}"
        ],
        "when": "params.maternal && params.paternal",
        "stub": ""
    },
    "geneASratio": {
        "name_process": "geneASratio",
        "string_process": " process geneASratio {\n    tag \"${prefix}\"\n    label 'process_medium'  \n    publishDir \"${params.outdir}/asratio\", mode: 'copy',\n\n    input:\n    set val(prefix), file(bam1), file(bam2), file(bamTag) from chBamCount\n    file(gtf) from chGtf.collect()\n\n    output:\n    file(\"*count.txt\") into asCounts\n    file(\"*allelicRatio.txt\") into asRatio\n    file(\"*average.mqc\") into asRatioMqc\n\n    script:\n    opts=params.singleEnd ? \"\" : \"-p\"\n    strandness = \"-s 0\"\n    if (params.forwardStranded){\n      strandness = \"-s 1\"\n    } else if (params.reverseStranded){\n      strandness = \"-s 2\"\n    }\n    \"\"\"\n    featureCounts ${opts} ${strandness} -T ${task.cpus} -a ${gtf} -g 'gene_name' -o ${prefix}_count.txt ${bam1} ${bam2} ${bamTag}\n    awk -F '\\\\t' 'BEGIN{OFS=\"\\t\"; print \"Gene\", \"Genome1\", \"Genome2\", \"ASratio\", \"allReads\"}{\\\n        if(\\$1!~/^#/ && \\$1!=\"Geneid\"){if(\\$7+\\$8>0){as=\\$7/(\\$7+\\$8)} else{as=\"NA\"};\\\n        print \\$1,\\$7,\\$8,as,\\$9}}' ${prefix}_count.txt >  ${prefix}_allelicRatio.txt\n    awk -F'\\\\t' '(NR>2 && (\\$7+\\$8)>0){n=split(\\$2,chrom,\";\");as=\\$7/(\\$7+\\$8);mr[chrom[1]]+=as;cr[chrom[1]]+=1}\\\n        END{for(x in mr){print x\",\"mr[x]/cr[x]}}' ${prefix}_count.txt | sort -k1,1V >  ${prefix}_average.mqc\n    \"\"\"\n  }",
        "nb_lignes_process": 29,
        "string_script": "    opts=params.singleEnd ? \"\" : \"-p\"\n    strandness = \"-s 0\"\n    if (params.forwardStranded){\n      strandness = \"-s 1\"\n    } else if (params.reverseStranded){\n      strandness = \"-s 2\"\n    }\n    \"\"\"\n    featureCounts ${opts} ${strandness} -T ${task.cpus} -a ${gtf} -g 'gene_name' -o ${prefix}_count.txt ${bam1} ${bam2} ${bamTag}\n    awk -F '\\\\t' 'BEGIN{OFS=\"\\t\"; print \"Gene\", \"Genome1\", \"Genome2\", \"ASratio\", \"allReads\"}{\\\n        if(\\$1!~/^#/ && \\$1!=\"Geneid\"){if(\\$7+\\$8>0){as=\\$7/(\\$7+\\$8)} else{as=\"NA\"};\\\n        print \\$1,\\$7,\\$8,as,\\$9}}' ${prefix}_count.txt >  ${prefix}_allelicRatio.txt\n    awk -F'\\\\t' '(NR>2 && (\\$7+\\$8)>0){n=split(\\$2,chrom,\";\");as=\\$7/(\\$7+\\$8);mr[chrom[1]]+=as;cr[chrom[1]]+=1}\\\n        END{for(x in mr){print x\",\"mr[x]/cr[x]}}' ${prefix}_count.txt | sort -k1,1V >  ${prefix}_average.mqc\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "chBamCount",
            "chGtf"
        ],
        "nb_inputs": 2,
        "outputs": [
            "asCounts",
            "asRatio",
            "asRatioMqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/asratio\", mode: 'copy',"
        ],
        "when": "",
        "stub": ""
    },
    "mergeASratio": {
        "name_process": "mergeASratio",
        "string_process": " process mergeASratio {\n    tag \"${prefix}\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/asratio\", mode: 'copy',\n\n    input:\n    file(allratio) from asRatio.collect()\n\n    output:\n    file(\"*.csv\") into mergedRatio\n\n    script:\n    \"\"\"\n    header=\"\\$(for x in ${allratio}; do printf \\\"\\$x%.0s,\\\" {1..4}; done)\"\n    echo \" ,\\$header\" > mergedRatio.csv\n    xjoin.sh $allratio | tr \" \" \",\" >> mergedRatio.csv\n    awk -F\",\" 'NR<=2{print} NR>2{s=0;for(i=5;i<=NF;i+=4){s+=\\$i}; if(s > 100){print \\$0}}' mergedRatio.csv > mergedRatio_filtered.csv\n    \"\"\"\n  }",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    header=\"\\$(for x in ${allratio}; do printf \\\"\\$x%.0s,\\\" {1..4}; done)\"\n    echo \" ,\\$header\" > mergedRatio.csv\n    xjoin.sh $allratio | tr \" \" \",\" >> mergedRatio.csv\n    awk -F\",\" 'NR<=2{print} NR>2{s=0;for(i=5;i<=NF;i+=4){s+=\\$i}; if(s > 100){print \\$0}}' mergedRatio.csv > mergedRatio_filtered.csv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "asRatio"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mergedRatio"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/asratio\", mode: 'copy',"
        ],
        "when": "",
        "stub": ""
    },
    "bigWig": {
        "name_process": "bigWig",
        "string_process": "\nprocess bigWig {\n  tag \"${prefix}\"\n  label 'process_medium'\n  publishDir \"${params.outdir}/bigWig\", mode: \"copy\"\n\n  when:\n  params.bigwig || params.chipseq\n\n  input:\n  set val(prefix), file(bam1), file(bam2), file(bamTag) from chBamWig\n  file(BLbed) from chBlacklistBigWig.collect().ifEmpty([])\n\n  output:\n  set val(prefix), file('*.bigwig') into chBigWig\n\n  script:\n  if (params.singleEnd){\n    extend = params.fragmentSize > 0 ? \"--extendReads ${params.fragmentSize}\" : \"\"\n  }else{\n    extend = \"--extendReads\"\n  }    \n  blacklistParams = params.blacklist ? \"--blackListFileName ${BLbed}\" : \"\"\n\n  if (bam1.size()>0 && bam2.size()>0){\n  \"\"\"\n  nbreads=\\$(samtools view -c ${bamTag})\n  sf=\\$(echo \"10000000 \\$nbreads\" | awk '{printf \"%.2f\", \\$1/\\$2}')\n\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_genome1_sorted.bam ${bam1}\n  samtools index ${prefix}_genome1_sorted.bam\n  bamCoverage -b ${prefix}_genome1_sorted.bam \\\\\n              -o ${prefix}_genome1_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_genome2_sorted.bam ${bam2}\n  samtools index ${prefix}_genome2_sorted.bam\n  bamCoverage -b ${prefix}_genome2_sorted.bam \\\\\n              -o ${prefix}_genome2_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  \"\"\"\n  }else{\n  \"\"\"\n  nbreads=\\$(samtools view -c ${bamTag}) \n  sf=\\$(echo \"10000000 \\$nbreads\" | awk '{printf \"%.2f\", \\$1/\\$2}')\n\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_sorted.bam ${bamTag}\n  samtools index ${prefix}_sorted.bam\n  bamCoverage -b ${prefix}_sorted.bam \\\\\n              -o ${prefix}_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  \"\"\"\n  }\n}",
        "nb_lignes_process": 60,
        "string_script": "  if (params.singleEnd){\n    extend = params.fragmentSize > 0 ? \"--extendReads ${params.fragmentSize}\" : \"\"\n  }else{\n    extend = \"--extendReads\"\n  }    \n  blacklistParams = params.blacklist ? \"--blackListFileName ${BLbed}\" : \"\"\n\n  if (bam1.size()>0 && bam2.size()>0){\n  \"\"\"\n  nbreads=\\$(samtools view -c ${bamTag})\n  sf=\\$(echo \"10000000 \\$nbreads\" | awk '{printf \"%.2f\", \\$1/\\$2}')\n\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_genome1_sorted.bam ${bam1}\n  samtools index ${prefix}_genome1_sorted.bam\n  bamCoverage -b ${prefix}_genome1_sorted.bam \\\\\n              -o ${prefix}_genome1_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_genome2_sorted.bam ${bam2}\n  samtools index ${prefix}_genome2_sorted.bam\n  bamCoverage -b ${prefix}_genome2_sorted.bam \\\\\n              -o ${prefix}_genome2_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  \"\"\"\n  }else{\n  \"\"\"\n  nbreads=\\$(samtools view -c ${bamTag}) \n  sf=\\$(echo \"10000000 \\$nbreads\" | awk '{printf \"%.2f\", \\$1/\\$2}')\n\n  samtools sort -@ ${task.cpus} -T ${prefix} -o ${prefix}_sorted.bam ${bamTag}\n  samtools index ${prefix}_sorted.bam\n  bamCoverage -b ${prefix}_sorted.bam \\\\\n              -o ${prefix}_norm.bigwig \\\\\n              -p ${task.cpus} \\\\\n              ${extend} \\\\\n              ${blacklistParams} \\\\\n              --scaleFactor \\$sf\n  \"\"\"\n  }",
        "nb_lignes_script": 43,
        "language_script": "bash",
        "tools": [
            "GOExtender",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/goextender",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "GOExtender",
                "uri": "https://bio.tools/goextender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "New algorithm to efficiently identify all the connected gene pairs labeled by the same parent Gene Ontology (GO) terms.",
                "homepage": "https://www.msu.edu/~jinchen/GOExtender/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "chBamWig",
            "chBlacklistBigWig"
        ],
        "nb_inputs": 2,
        "outputs": [
            "chBigWig"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "tag \"${prefix}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bigWig\", mode: \"copy\""
        ],
        "when": "params.bigwig || params.chipseq",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n  output:\n  file 'software_versions_mqc.yaml' into software_versions_yaml\n\n  script:\n  \"\"\"\n  echo $workflow.manifest.version &> v_main.txt\n  echo $workflow.nextflow.version &> v_nextflow.txt\n  fastqc --version &> v_fastqc.txt\n  trim_galore --version &> v_trimgalore.txt\n  hisat2 --version &> v_hisat2.txt\n  #tophat2 --version &> v_tophat2.txt\n  echo \"TopHat vXXX\" > v_tophat2.txt\n  STAR --version &> v_star.txt\n  bowtie2 --version &> v_bowtie2.txt\n  picard MarkDuplicates --version &> v_markduplicates.txt || true\n  echo \\$(bamCoverage --version 2>&1) > v_deeptools.txt || true\n  featureCounts -v &> v_featurecounts.txt\n  samtools --version &> v_samtools.txt\n  multiqc --version &> v_multiqc.txt\n  scrape_software_versions.py &> software_versions_mqc.yaml\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  \"\"\"\n  echo $workflow.manifest.version &> v_main.txt\n  echo $workflow.nextflow.version &> v_nextflow.txt\n  fastqc --version &> v_fastqc.txt\n  trim_galore --version &> v_trimgalore.txt\n  hisat2 --version &> v_hisat2.txt\n  #tophat2 --version &> v_tophat2.txt\n  echo \"TopHat vXXX\" > v_tophat2.txt\n  STAR --version &> v_star.txt\n  bowtie2 --version &> v_bowtie2.txt\n  picard MarkDuplicates --version &> v_markduplicates.txt || true\n  echo \\$(bamCoverage --version 2>&1) > v_deeptools.txt || true\n  featureCounts -v &> v_featurecounts.txt\n  samtools --version &> v_samtools.txt\n  multiqc --version &> v_multiqc.txt\n  scrape_software_versions.py &> software_versions_mqc.yaml\n  \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "HISAT2",
            "STAR",
            "Rbowtie2",
            "Picard",
            "FeatureCounts",
            "SAMtools",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/hisat2",
            "https://bio.tools/star",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/picard_tools",
            "https://bio.tools/featurecounts",
            "https://bio.tools/samtools",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "workflow_summary_mqc": {
        "name_process": "workflow_summary_mqc",
        "string_process": "\nprocess workflow_summary_mqc {\n  when:\n  !params.skipMultiqc\n\n  output:\n  file 'workflow_summary_mqc.yaml' into workflow_summary_yaml\n\n  exec:\n  def yaml_file = task.workDir.resolve('workflow_summary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: 'https://gitlab.curie.fr/as-mapping'\n  plot_type: 'html'\n  data: |\n      <dl class=\\\"dl-horizontal\\\">\n${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n      </dl>\n  \"\"\".stripIndent()\n}",
        "nb_lignes_process": 20,
        "string_script": "  def yaml_file = task.workDir.resolve('workflow_summary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: 'https://gitlab.curie.fr/as-mapping'\n  plot_type: 'html'\n  data: |\n      <dl class=\\\"dl-horizontal\\\">\n${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n      </dl>\n  \"\"\".stripIndent()",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GDT",
            "SAMPL",
            "NDD",
            "DLP+"
        ],
        "tools_url": [
            "https://bio.tools/gdt",
            "https://bio.tools/SAMPL",
            "https://bio.tools/NDD",
            "https://bio.tools/DLP"
        ],
        "tools_dico": [
            {
                "name": "GDT",
                "uri": "https://bio.tools/gdt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software package for genome-wide association analysis.",
                "homepage": "http://people.virginia.edu/~wc9c/GDT/"
            },
            {
                "name": "SAMPL",
                "uri": "https://bio.tools/SAMPL",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Medicinal chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Sample collections"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Drug design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Specimen collections"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0455",
                                    "term": "Nucleic acid thermodynamic property calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3642",
                                    "term": "Dimethyl"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> MEDIUM CONFIDENCE! | reference data for the sixth statistical assessment of modeling of proteins and ligands (SAMPL6) | From Wikipedia, the free encyclopedia | Jump to navigation Jump to search | SAMPL (Statistical Assessment of the Modeling of Proteins and Ligands) is a set of community-wide blind challenges aimed to advance computational techniques as standard predictive tools in rational drug design.[1][2][3][4][5] A broad range of biologically relevant systems with different sizes and levels of complexities including proteins, host guest complexes, and drug-like small molecules have been selected to test the latest modeling methods and force fields in SAMPL",
                "homepage": "https://en.wikipedia.org/wiki/SAMPL_Challenge"
            },
            {
                "name": "NDD",
                "uri": "https://bio.tools/NDD",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Drug-Drug Interaction Predicting by Neural Network Using Integrated Similarity | Link of paper: https://www.nature.com/articles/s41598-019-50121-3 A Novel Method For Predicting Drug-Drug Interaction By Neural Network Due to the great importance of this issue in the economy, industry, and health, proposing appropriate computational methods for predicting unknown DDI with high precision is challenging. We propose a novel machine learning method for predicting unknown DDIs called \"NDD\", using a two-layer fully connected neural network. NDD uses various characteristics of drugs to have comprehensive information. Multiple drug similarities are calculated. NDD integrat various drug similarities with a non-linear similarity fusion method called \"SNF\" to achieve high-level features. Dependency: python version 3.5.3 deep learning lib keras: https://github.com/fchollet/keras/ machine learning lib scikit-learn: https://github.com/scikit-learn/scikit-learn Contact: nasim.rohani74@gmail.com",
                "homepage": "https://github.com/nrohani/NDD"
            },
            {
                "name": "DLP+",
                "uri": "https://bio.tools/DLP",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deisotoping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deconvolution"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Clonal Decomposition and DNA Replication States Defined by Scaled Single-Cell Genome Sequencing.\n\nCollection of Standard Operating Procedures (SOPs) for DLP+",
                "homepage": "https://github.com/shahcompbio/dlpplus_protocols"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "workflow_summary_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [],
        "when": "!params.skipMultiqc",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    label 'process_low'\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n    when:\n    !params.skipMultiqc\n\n    input:\n    file splan from chSplan.collect()\n    file metadata from ch_metadata.ifEmpty([])\n    file multiqc_config from chMultiqcConfig    \n    file ('software_versions/*') from software_versions_yaml.collect()\n    file ('workflow_summary/*') from workflow_summary_yaml.collect()\n    file ('fastqc/*') from fastqcResults.collect().ifEmpty([])\n    file ('trimming/*') from trimResults.collect().ifEmpty([])\n    file ('alignment/*') from chMappingMqc.collect().ifEmpty([])\n    file ('alignment/*') from chMarkedPicstats.collect().ifEmpty([])\n    file ('flagstat/*') from chFlagStatResults.collect().ifEmpty([])\n    file ('flagstat/*') from chDupStat.collect().ifEmpty([])\n    file ('tag/*') from chTagLog.collect().ifEmpty([])\n    file ('snpsplit/*') from splitMqc.collect().ifEmpty([])    \n    file ('asratio/*') from asRatioMqc.collect().ifEmpty([])\n\n    output:\n    file splan\n    file \"*report.html\" into multiqc_report\n    file \"*_data\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName + \"_asmap_report\" : \"--filename asmap_report\"\n    metadataOpts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n    nmaskOpt = params.nmask ? \"-n\" : \"\"\n    peOpt  = params.singleEnd ? \"\" : \"-p\"\n    strandness = params.forwardStranded ? 'forward' : params.reverseStranded ? 'reverse' : 'unstranded'\n    modulesList = \"-m custom_content -m bowtie2 -m star -m hisat2 -m tophat -m cutadapt -m fastqc -m picard\"\n    \"\"\"\n    stats2multiqc.sh -s ${splan} -a ${params.aligner} -d ${strandness} -f ${params.paternal} -m ${params.maternal} ${nmaskOpt} ${peOpt}\n    mqc_header.py --splan ${splan} --name \"Allele-Specific Mapping\" --version ${workflow.manifest.version} ${metadataOpts} > multiqc-config-header.yaml\n    multiqc . -f $rtitle $rfilename -c $multiqc_config -c multiqc-config-header.yaml ${modulesList}\n    \"\"\"    \n}",
        "nb_lignes_process": 41,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName + \"_asmap_report\" : \"--filename asmap_report\"\n    metadataOpts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n    nmaskOpt = params.nmask ? \"-n\" : \"\"\n    peOpt  = params.singleEnd ? \"\" : \"-p\"\n    strandness = params.forwardStranded ? 'forward' : params.reverseStranded ? 'reverse' : 'unstranded'\n    modulesList = \"-m custom_content -m bowtie2 -m star -m hisat2 -m tophat -m cutadapt -m fastqc -m picard\"\n    \"\"\"\n    stats2multiqc.sh -s ${splan} -a ${params.aligner} -d ${strandness} -f ${params.paternal} -m ${params.maternal} ${nmaskOpt} ${peOpt}\n    mqc_header.py --splan ${splan} --name \"Allele-Specific Mapping\" --version ${workflow.manifest.version} ${metadataOpts} > multiqc-config-header.yaml\n    multiqc . -f $rtitle $rfilename -c $multiqc_config -c multiqc-config-header.yaml ${modulesList}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "chSplan",
            "ch_metadata",
            "chMultiqcConfig",
            "software_versions_yaml",
            "workflow_summary_yaml",
            "fastqcResults",
            "trimResults",
            "chMappingMqc",
            "chMarkedPicstats",
            "chFlagStatResults",
            "chDupStat",
            "chTagLog",
            "splitMqc",
            "asRatioMqc"
        ],
        "nb_inputs": 14,
        "outputs": [
            "splan",
            "multiqc_report"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "label 'process_low'",
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skipMultiqc",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file output_docs from chOutputDocs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chOutputDocs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioinfo-pf-curie__as-mapping",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}