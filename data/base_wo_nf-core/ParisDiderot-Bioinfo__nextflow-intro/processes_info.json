{
    "reverse": {
        "name_process": "reverse",
        "string_process": "\nprocess reverse {\n    input:\n        file(fa) from fasta\n\n    output:\n        file(\"*.reversed.fa\") into reverse_fasta\n\n    script:\n        \"\"\"\n        reverse.py $fa\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        reverse.py $fa\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "reverse_fasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "complement": {
        "name_process": "complement",
        "string_process": "\nprocess complement {\n    input:\n        file(fa) from reverse_fasta\n    output:\n        file(\"*.complement.fa\") into reverse_complement_fasta\n\n    script:\n        \"\"\"\n        complement.py $fa\n        \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "        \"\"\"\n        complement.py $fa\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reverse_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "reverse_complement_fasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "countGC": {
        "name_process": "countGC",
        "string_process": "\nprocess countGC {\n    input:\n        file(fa) from reverse_complement_fasta\n\n    output:\n        file(\"*.gc.txt\") into gc_out\n        stdout gc_result\n\n    script:\n        \"\"\"\n        count_gc.py $fa\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        count_gc.py $fa\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reverse_complement_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "gc_out",
            "gc_result"
        ],
        "nb_outputs": 2,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "concat": {
        "name_process": "concat",
        "string_process": "\nprocess concat {\n    publishDir \"${params.results}/gc\", mode: 'copy'\n\n    input:\n        file(gc) from gc_out.collect()\n\n    output:\n        file(\"summary.txt\") into summary\n\n    script:\n        \"\"\"\n        cat *.gc.txt > summary.txt\n        \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        cat *.gc.txt > summary.txt\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gc_out"
        ],
        "nb_inputs": 1,
        "outputs": [
            "summary"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "publishDir \"${params.results}/gc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "blast": {
        "name_process": "blast",
        "string_process": "\nprocess blast {\n    tag \"$fa\"\n\n    publishDir \"${params.results}/blast\", mode: 'copy'\n\n    conda 'bioconda::blast'\n\n    input:\n        file(fa) from fa2blast\n\n    output:\n        file(\"*.out\") into blast_result\n\n    script:\n        outfile = fa.baseName+\".out\"\n        \"\"\"\n        blastn -db ${params.blastdb} -query $fa -out $outfile -outfmt 6\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        outfile = fa.baseName+\".out\"\n        \"\"\"\n        blastn -db ${params.blastdb} -query $fa -out $outfile -outfmt 6\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "G-BLASTN"
        ],
        "tools_url": [
            "https://bio.tools/g-blastn"
        ],
        "tools_dico": [
            {
                "name": "G-BLASTN",
                "uri": "https://bio.tools/g-blastn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2976",
                                "term": "Protein sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "GPU-accelerated nucleotide alignment tool based on the widely used NCBI-BLAST.",
                "homepage": "http://www.comp.hkbu.edu.hk/~chxw/software/G-BLASTN.html"
            }
        ],
        "inputs": [
            "fa2blast"
        ],
        "nb_inputs": 1,
        "outputs": [
            "blast_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "tag \"$fa\"",
            "publishDir \"${params.results}/blast\", mode: 'copy'",
            "conda 'bioconda::blast'"
        ],
        "when": "",
        "stub": ""
    },
    "mapping": {
        "name_process": "mapping",
        "string_process": "\nprocess mapping {\n\n    conda \"bioconda::bowtie2=2.3.4.2\"\n\n    cpus params.cpus\n    publishDir \"$outDir\", mode: 'copy'\n\n    input:\n    set pair_id, file(reads) from readChannel\n\n    output:\n    set pair_id, file(\"*.sam\") into mappingChannel\n\n    script:\n    \"\"\"\n    bowtie2 -q -1 ${reads[0]} -2 ${reads[1]} -x ${params.bowtie_index} -S ${pair_id}.sam -p ${task.cpus} --very-sensitive-local\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    bowtie2 -q -1 ${reads[0]} -2 ${reads[1]} -x ${params.bowtie_index} -S ${pair_id}.sam -p ${task.cpus} --very-sensitive-local\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "readChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mappingChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "conda \"bioconda::bowtie2=2.3.4.2\"",
            "cpus params.cpus",
            "publishDir \"$outDir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_view": {
        "name_process": "samtools_view",
        "string_process": "\nprocess samtools_view {\n    cpus params.cpus\n    publishDir \"$outDir\", mode: 'copy'\n    \n    input:\n    set pair_id, file(sam) from mappingChannel\n    \n    output:\n    set pair_id, file(\"*.bam\") into bamChannel\n    \n    shell:\n    '''\n    samtools view -b -@ !{params.cpus} -o !{pair_id}.bam !{sam}\n    '''\n}",
        "nb_lignes_process": 14,
        "string_script": "    '''\n    samtools view -b -@ !{params.cpus} -o !{pair_id}.bam !{sam}\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mappingChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bamChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "cpus params.cpus",
            "publishDir \"$outDir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_sort": {
        "name_process": "samtools_sort",
        "string_process": "\nprocess samtools_sort {\n    cpus params.cpus\n    publishDir \"$outDir\", mode: 'copy'\n    \n    input:\n    set pair_id, file(bam) from bamChannel\n    \n    output:\n    set pair_id, file(\"sorted*.bam\") into sortbamChannel\n    \n    shell:\n    '''\n    samtools sort -@ !{params.cpus} -o sorted_!{pair_id}.bam !{bam}\n    '''\n}",
        "nb_lignes_process": 14,
        "string_script": "    '''\n    samtools sort -@ !{params.cpus} -o sorted_!{pair_id}.bam !{bam}\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sortbamChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "cpus params.cpus",
            "publishDir \"$outDir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bedtools": {
        "name_process": "bedtools",
        "string_process": "\nprocess bedtools {\n    publishDir \"$outDir\", mode: 'copy'\n    \n    input:\n    set pair_id, file(sortbam) from sortbamChannel\n    \n    output:\n    file(\"*.gcbout\") into finishChannel\n    \n    shell:\n    '''\n    genomeCoverageBed -ibam !{sortbam} > !{pair_id}.gcbout\n    '''\n}",
        "nb_lignes_process": 13,
        "string_script": "    '''\n    genomeCoverageBed -ibam !{sortbam} > !{pair_id}.gcbout\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sortbamChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "finishChannel"
        ],
        "nb_outputs": 1,
        "name_workflow": "ParisDiderot-Bioinfo__nextflow-intro",
        "directive": [
            "publishDir \"$outDir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}