{
    "TrimInput": {
        "name_process": "TrimInput",
        "string_process": "\nprocess TrimInput {\n publishDir \"${params.output}/1_skewer\", mode: 'copy' \n\n input:\n set sampleID, file(R1), file(R2) from query_data\n \n output:\n set sampleID, file(\"${sampleID}-trimmed-pair1.fastq\"), file(\"${sampleID}-trimmed-pair2.fastq\") into trimmed_reads\n\n script:\n \"\"\"\n set +eu\n module load skewer\n skewer -x /lustre/haven/proj/UTK0032/software/Trimmomatic-0.36/adapters/adapters.fa -l 30 ${R1} ${R2} -o ${sampleID} >& ${sampleID}.trim_output\n \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": " \"\"\"\n set +eu\n module load skewer\n skewer -x /lustre/haven/proj/UTK0032/software/Trimmomatic-0.36/adapters/adapters.fa -l 30 ${R1} ${R2} -o ${sampleID} >& ${sampleID}.trim_output\n \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Skewer"
        ],
        "tools_url": [
            "https://bio.tools/skewer"
        ],
        "tools_dico": [
            {
                "name": "Skewer",
                "uri": "https://bio.tools/skewer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3237",
                                    "term": "Primer removal"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Skewer implements a novel dynamic programming algorithm dedicated to the task of adapter trimming and it is specially designed for processing illumina paired-end sequences.",
                "homepage": "https://sourceforge.net/projects/skewer/"
            }
        ],
        "inputs": [
            "query_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"${params.output}/1_skewer\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "STAR": {
        "name_process": "STAR",
        "string_process": "\nprocess STAR {\n publishDir \"${params.output}/2_star\", mode: 'copy'\n\n input:\n set sampleID, file(R1), file(R2) from trimmed_reads \n\n output:\n set sampleID, file(\"${sampleID}.Aligned.sortedByCoord.out.bam\") into alignments\n\n script:\n \"\"\"\n set +eu\n module load star \n STAR --genomeDir ${params.ref_genome}/genome_index --readFilesIn ${R1} ${R2} --runThreadN 2 --outFileNamePrefix ${sampleID}. --outSAMtype BAM SortedByCoordinate --limitBAMsortRAM 17365764332\n \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": " \"\"\"\n set +eu\n module load star \n STAR --genomeDir ${params.ref_genome}/genome_index --readFilesIn ${R1} ${R2} --runThreadN 2 --outFileNamePrefix ${sampleID}. --outSAMtype BAM SortedByCoordinate --limitBAMsortRAM 17365764332\n \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "trimmed_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "alignments"
        ],
        "nb_outputs": 1,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"${params.output}/2_star\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "htseq": {
        "name_process": "htseq",
        "string_process": "\nprocess htseq {\n publishDir \"${params.output}/3_htseq\", mode: 'copy'\n\t\n input:\n set sampleID, file(BAM) from alignments\n\t\n output:\n set sampleID, file(\"${sampleID}.counts.txt\") into raw_counts\n\t\n script:\n \"\"\" \n set +eu\n module load anaconda3/4.4.0\n . /sw/acf/anaconda3/4.4.0/centos7.3_gnu6.3.0/anaconda3-4.4.0/etc/profile.d/conda.sh\n conda activate /lustre/haven/proj/UTK0032/projects/undergrads/gene_expression_projects/upython \n htseq-count --format=bam --stranded=no --type=mRNA --idattr=ID ${BAM} ${gff_path} > ${sampleID}.counts.txt\n \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": " \"\"\" \n set +eu\n module load anaconda3/4.4.0\n . /sw/acf/anaconda3/4.4.0/centos7.3_gnu6.3.0/anaconda3-4.4.0/etc/profile.d/conda.sh\n conda activate /lustre/haven/proj/UTK0032/projects/undergrads/gene_expression_projects/upython \n htseq-count --format=bam --stranded=no --type=mRNA --idattr=ID ${BAM} ${gff_path} > ${sampleID}.counts.txt\n \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "ANACONDA",
            "htseqcount"
        ],
        "tools_url": [
            "https://bio.tools/anaconda",
            "https://bio.tools/htseqcount"
        ],
        "tools_dico": [
            {
                "name": "ANACONDA",
                "uri": "https://bio.tools/anaconda",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3658",
                                    "term": "Statistical inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "Coding region prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software package specially developed for the study of genes\u2019 primary structure. It uses gene sequences downloaded from public databases, as FASTA and GenBank, and it applies a set of statistical and visualization methods in different ways, to reveal information about codon context, codon usage, nucleotide repeats within open reading frames (ORFeome) and others.",
                "homepage": "http://bioinformatics.ua.pt/software/anaconda/"
            },
            {
                "name": "htseqcount",
                "uri": "https://bio.tools/htseqcount",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "This script takes an alignment file in SAM format and a feature file in GFF format and calculates for each feature the number of reads mapping to it.",
                "homepage": "https://htseq.readthedocs.io/en/release_0.9.1/"
            }
        ],
        "inputs": [
            "alignments"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raw_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"${params.output}/3_htseq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "swissprot": {
        "name_process": "swissprot",
        "string_process": "\nprocess swissprot {\n publishDir \"$params.output/blast/swissprot\", mode: 'copy'\n\n input:\n set fastaID, file(inputFasta) from sprot_data\n\n output:\n set fastaID, file(\"${fastaID}_swissprot.tsv\") into swissprot_results\n\n script:\n \"\"\"\n module load blast\n blastp -query ${inputFasta} -db /lustre/haven/proj/UTK0032/library/uniprot/uniprot_sprot.fasta -out ${fastaID}_swissprot.tsv -evalue 1e-5 -outfmt 6 \n \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": " \"\"\"\n module load blast\n blastp -query ${inputFasta} -db /lustre/haven/proj/UTK0032/library/uniprot/uniprot_sprot.fasta -out ${fastaID}_swissprot.tsv -evalue 1e-5 -outfmt 6 \n \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BLASTP-ACC"
        ],
        "tools_url": [
            "https://bio.tools/BLASTP-ACC"
        ],
        "tools_dico": [
            {
                "name": "BLASTP-ACC",
                "uri": "https://bio.tools/BLASTP-ACC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3297",
                            "term": "Biotechnology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Sequence alignment (local)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parallel Architecture and Hardware Accelerator Design for BLAST-based Protein Sequence Alignment.\n\nIn this study, we design a hardware accelerator for a widely used sequence alignment algorithm, the basic local alignment search tool for proteins (BLASTP). The architecture of the proposed accelerator consists of five stages: a new systolic-array-based one-hit finding stage, a novel RAM-REG-based two-hit finding stage, a refined ungapped extension stage, a faster gapped extension stage, and a highly efficient parallel sorter. The system is implemented on an Altera Stratix V FPGA with a processing speed of more than 500 giga cell updates per second (GCUPS). It can receive a query sequence, compare it with the sequences in the database, and generate a list sorted in descending order of the similarity scores between the query sequence and the subject sequences.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'accelerator', 'Altera', 'Stratix', 'RAM-REG-based'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31581096"
            }
        ],
        "inputs": [
            "sprot_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "swissprot_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"$params.output/blast/swissprot\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "trembl": {
        "name_process": "trembl",
        "string_process": "\nprocess trembl {\n publishDir \"$params.output/blast/trembl\", mode: 'copy'\n\n input:\n set fastaID, file(inputFasta) from trembl_data\n\n output:\n set fastaID, file(\"${fastaID}_trembl.tsv\") into trembl_results\n\n script:\n \"\"\"\n module load blast\n blastp -query ${inputFasta} -db /lustre/haven/proj/UTK0032/library/uniprot/uniprot_trembl_plants_July_2018.fasta -out ${fastaID}_trembl.tsv -evalue 1e-5 -outfmt 6\n \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": " \"\"\"\n module load blast\n blastp -query ${inputFasta} -db /lustre/haven/proj/UTK0032/library/uniprot/uniprot_trembl_plants_July_2018.fasta -out ${fastaID}_trembl.tsv -evalue 1e-5 -outfmt 6\n \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BLASTP-ACC"
        ],
        "tools_url": [
            "https://bio.tools/BLASTP-ACC"
        ],
        "tools_dico": [
            {
                "name": "BLASTP-ACC",
                "uri": "https://bio.tools/BLASTP-ACC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3297",
                            "term": "Biotechnology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Sequence alignment (local)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parallel Architecture and Hardware Accelerator Design for BLAST-based Protein Sequence Alignment.\n\nIn this study, we design a hardware accelerator for a widely used sequence alignment algorithm, the basic local alignment search tool for proteins (BLASTP). The architecture of the proposed accelerator consists of five stages: a new systolic-array-based one-hit finding stage, a novel RAM-REG-based two-hit finding stage, a refined ungapped extension stage, a faster gapped extension stage, and a highly efficient parallel sorter. The system is implemented on an Altera Stratix V FPGA with a processing speed of more than 500 giga cell updates per second (GCUPS). It can receive a query sequence, compare it with the sequences in the database, and generate a list sorted in descending order of the similarity scores between the query sequence and the subject sequences.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'accelerator', 'Altera', 'Stratix', 'RAM-REG-based'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31581096"
            }
        ],
        "inputs": [
            "trembl_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trembl_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"$params.output/blast/trembl\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "IPS": {
        "name_process": "IPS",
        "string_process": "\nprocess IPS {\n publishDir \"$params.output/IPS/tsvs\", mode: 'copy'\n\n input:\n set fastaID, file(inputFasta) from IPS_data\n\n          \n                                                           \n\n script:\n \"\"\"\n module load python3\n /lustre/haven/proj/UTK0032/software/interproscan-5.34-73.0/interproscan.sh -i ${inputFasta} -f TSV -o ${fastaID}_IPS.tsv --disable-precalc --iprlookup --goterms --pathways -T ${params.output}/IPS/TMP\n \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": " \"\"\"\n module load python3\n /lustre/haven/proj/UTK0032/software/interproscan-5.34-73.0/interproscan.sh -i ${inputFasta} -f TSV -o ${fastaID}_IPS.tsv --disable-precalc --iprlookup --goterms --pathways -T ${params.output}/IPS/TMP\n \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "IPS_data"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "MattHuff__Nextflow_Pipelines",
        "directive": [
            "publishDir \"$params.output/IPS/tsvs\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}