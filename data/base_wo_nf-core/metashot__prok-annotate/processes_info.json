{
    "prodigal": {
        "name_process": "prodigal",
        "string_process": "\nprocess prodigal {\n    tag \"${id}\"\n\n    publishDir \"${params.outdir}/prodigal\" , mode: 'copy'\n\n    input:\n    tuple val(id), path(genome)\n\n    output:\n    path \"${id}/*\"\n    tuple val(id), path (\"${id}/${id}.faa\"), emit: faa\n\n    script:\n    param_metagenome = params.metagenome ? 'meta' : 'single'\n    \"\"\"\n    mkdir ${id}\n    prodigal \\\n        -i $genome \\\n        -o ${id}/${id}.gbk \\\n        -a ${id}/${id}.faa \\\n        -p $param_metagenome\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    param_metagenome = params.metagenome ? 'meta' : 'single'\n    \"\"\"\n    mkdir ${id}\n    prodigal \\\n        -i $genome \\\n        -o ${id}/${id}.gbk \\\n        -a ${id}/${id}.faa \\\n        -p $param_metagenome\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "id",
            "genome"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "tag \"${id}\"",
            "publishDir \"${params.outdir}/prodigal\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "kofamscan": {
        "name_process": "kofamscan",
        "string_process": "\nprocess kofamscan {\n    tag \"${id}\"\n\n    publishDir \"${params.outdir}/kofamscan/${id}\" , mode: 'copy'\n\n    input:\n    tuple val(id), path(seqs)\n    path(kofamscan_db)\n\n    output:\n    path \"${id}.hits.txt\", emit: hits\n\n    script:\n    \"\"\"\n    exec_annotation \\\n        -f detail \\\n        --cpu ${task.cpus} \\\n        --tmp-dir tmp \\\n        -o ${id}.hits.txt \\\n        -p ${kofamscan_db}/profiles/prokaryote.hal \\\n        -k ${kofamscan_db}/ko_list \\\n        ${seqs}\n\n    rm -rf tmp\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    exec_annotation \\\n        -f detail \\\n        --cpu ${task.cpus} \\\n        --tmp-dir tmp \\\n        -o ${id}.hits.txt \\\n        -p ${kofamscan_db}/profiles/prokaryote.hal \\\n        -k ${kofamscan_db}/ko_list \\\n        ${seqs}\n\n    rm -rf tmp\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "id",
            "seqs",
            "kofamscan_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "tag \"${id}\"",
            "publishDir \"${params.outdir}/kofamscan/${id}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "prokka": {
        "name_process": "prokka",
        "string_process": "\nprocess prokka {\n    tag \"${id}\"\n\n    publishDir \"${params.outdir}/prokka\" , mode: 'copy'\n\n    input:\n    tuple val(id), path(genome)\n\n    output:\n    path \"${id}/*\"\n\n    script:\n    param_metagenome = params.metagenome ? '--metagenome' : ''\n    \"\"\"\n    prokka \\\n        $genome \\\n        --outdir ${id} \\\n        --prefix ${id} \\\n        --kingdom ${params.prokka_kingdom} \\\n        $param_metagenome \\\n        --cpus ${task.cpus} \\\n        --centre X --compliant\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    param_metagenome = params.metagenome ? '--metagenome' : ''\n    \"\"\"\n    prokka \\\n        $genome \\\n        --outdir ${id} \\\n        --prefix ${id} \\\n        --kingdom ${params.prokka_kingdom} \\\n        $param_metagenome \\\n        --cpus ${task.cpus} \\\n        --centre X --compliant\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Prokka"
        ],
        "tools_url": [
            "https://bio.tools/prokka"
        ],
        "tools_dico": [
            {
                "name": "Prokka",
                "uri": "https://bio.tools/prokka",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0781",
                            "term": "Virology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "Coding region prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0436",
                                    "term": "ORF finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software tool to annotate bacterial, archaeal and viral genomes quickly and produce standards-compliant output files.",
                "homepage": "https://github.com/tseemann/prokka"
            }
        ],
        "inputs": [
            "id",
            "genome"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "tag \"${id}\"",
            "publishDir \"${params.outdir}/prokka\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "eggnog_db_download": {
        "name_process": "eggnog_db_download",
        "string_process": "\nprocess eggnog_db_download {\n\n    publishDir \"${params.outdir}/dbs\" , mode: 'copy'\n\n    output:\n    path 'eggnog_db', type: 'dir', emit: eggnog_db\n\n    script:\n    \"\"\"\n    mkdir eggnog_db\n    download_eggnog_data.py -y --data_dir eggnog_db\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    mkdir eggnog_db\n    download_eggnog_data.py -y --data_dir eggnog_db\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}/dbs\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "eggnog_mapper": {
        "name_process": "eggnog_mapper",
        "string_process": "\nprocess eggnog_mapper {\n    tag \"${id}\"\n\n    publishDir \"${params.outdir}/eggnog/${id}\" , mode: 'copy'\n\n    input:\n    tuple val(id), path(seqs)\n    path(eggnog_db)\n   \n    output:\n    path \"${id}*\"\n    path \"${id}.emapper.annotations\", emit: annotations\n   \n    script:\n    param_eggnog_db_mem = params.eggnog_db_mem ? '--dbmem' : ''\n    \n    \"\"\"\n    mkdir temp\n    emapper.py \\\n        -i ${seqs} \\\n        -o ${id} \\\n        -m diamond \\\n        --itype proteins \\\n        --temp_dir temp \\\n        --data_dir ${eggnog_db} \\\n        --cpu ${task.cpus} \\\n        ${param_eggnog_db_mem}\n    rm -rf temp\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    param_eggnog_db_mem = params.eggnog_db_mem ? '--dbmem' : ''\n    \n    \"\"\"\n    mkdir temp\n    emapper.py \\\n        -i ${seqs} \\\n        -o ${id} \\\n        -m diamond \\\n        --itype proteins \\\n        --temp_dir temp \\\n        --data_dir ${eggnog_db} \\\n        --cpu ${task.cpus} \\\n        ${param_eggnog_db_mem}\n    rm -rf temp\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "id",
            "seqs",
            "eggnog_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "tag \"${id}\"",
            "publishDir \"${params.outdir}/eggnog/${id}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "kofamscan_db_download": {
        "name_process": "kofamscan_db_download",
        "string_process": "\nprocess kofamscan_db_download {\n\n    publishDir \"${params.outdir}/dbs\" , mode: 'copy'\n\n    output:\n    path 'kofamscan_db', type: 'dir', emit: kofamscan_db\n\n    script:\n    \"\"\"\n    mkdir kofamscan_db\n\n    curl -s -L ftp://ftp.genome.jp/pub/db/kofam/profiles.tar.gz | \\\n        tar -zxf - -C kofamscan_db\n\n    curl -s -L ftp://ftp.genome.jp/pub/db/kofam/ko_list.gz -o ko_list.gz && \\\n        gunzip -c ko_list.gz > kofamscan_db/ko_list\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    mkdir kofamscan_db\n\n    curl -s -L ftp://ftp.genome.jp/pub/db/kofam/profiles.tar.gz | \\\n        tar -zxf - -C kofamscan_db\n\n    curl -s -L ftp://ftp.genome.jp/pub/db/kofam/ko_list.gz -o ko_list.gz && \\\n        gunzip -c ko_list.gz > kofamscan_db/ko_list\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}/dbs\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_anvio": {
        "name_process": "merge_anvio",
        "string_process": "\nprocess merge_anvio {      \n    publishDir \"${params.outdir}\" , mode: 'copy'\n\n    input:\n    path(hits)\n    path(modules)\n   \n    output:\n    path 'anvio_kofam_hits.tsv'\n    path 'anvio_modules.tsv'\n\n    script:\n    \"\"\"\n    merge_anvio_kofam_hits.py -i ${hits}\n    merge_anvio_modules.py -i ${modules}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    merge_anvio_kofam_hits.py -i ${hits}\n    merge_anvio_modules.py -i ${modules}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hits",
            "modules"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_eggnog_mapper": {
        "name_process": "merge_eggnog_mapper",
        "string_process": "\nprocess merge_eggnog_mapper {      \n    publishDir \"${params.outdir}\" , mode: 'copy'\n\n    input:\n    path(annotations)\n   \n    output:\n    path 'eggnog_*.tsv'\n\n    script:\n    \"\"\"\n    merge_eggnog_mapper.py -i ${annotations}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    merge_eggnog_mapper.py -i ${annotations}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotations"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge_kofamscan": {
        "name_process": "merge_kofamscan",
        "string_process": "\nprocess merge_kofamscan {      \n    publishDir \"${params.outdir}\" , mode: 'copy'\n\n    input:\n    path(hits)\n   \n    output:\n    path 'kofamscan_hits.tsv'\n\n    script:\n    \"\"\"\n    merge_kofamscan_hits.py -i ${hits}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    merge_kofamscan_hits.py -i ${hits}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hits"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "anvio_kofam_db_download": {
        "name_process": "anvio_kofam_db_download",
        "string_process": "\nprocess anvio_kofam_db_download {\n\n    publishDir \"${params.outdir}/dbs\" , mode: 'copy'\n\n    output:\n    path 'anvio_kofam_db', type: 'dir', emit: anvio_kofam_db\n\n    script:\n    \"\"\"\n    anvi-setup-kegg-kofams --kegg-data-dir ./anvio_kofam_db\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "    \"\"\"\n    anvi-setup-kegg-kofams --kegg-data-dir ./anvio_kofam_db\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "publishDir \"${params.outdir}/dbs\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "anvio_kofam": {
        "name_process": "anvio_kofam",
        "string_process": "\nprocess anvio_kofam {\n    tag \"${id}\"\n\n    publishDir \"${params.outdir}/anvio/${id}\" , mode: 'copy'\n\n    input:\n    tuple val(id), path(genome)\n    path(anvio_kofam_db)\n   \n    output:\n    path \"${id}.*\"\n    path \"${id}._kofam_hits.txt\", emit: hits\n    path \"${id}._modules.txt\", emit: modules\n   \n    script:\n    \"\"\"\n    anvi-script-reformat-fasta \\\n        ${genome} \\\n        -o contigs.fa \\\n        -l 0 \\\n        --simplify-names \\\n        --seq-type NT\n\n    anvi-gen-contigs-database \\\n        -f contigs.fa \\\n        -o contigs.db\n\n    anvi-get-sequences-for-gene-calls \\\n        -c contigs.db \\\n        -o ${id}.gene_calls.fa\n\n    anvi-export-gene-calls \\\n        -c contigs.db \\\n        --gene-caller prodigal \\\n        -o ${id}.gene_calls.txt\n\n    anvi-run-kegg-kofams \\\n        -c contigs.db \\\n        --kegg-data-dir ${anvio_kofam_db} \\\n        -T ${task.cpus}\n\n    anvi-estimate-metabolism \\\n        -c contigs.db \\\n        --kegg-data-dir ${anvio_kofam_db} \\\n        -O ${id}. \\\n        --kegg-output-modes kofam_hits,modules\n\n    rm -rf contigs.fa contigs.db \n    \"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "    \"\"\"\n    anvi-script-reformat-fasta \\\n        ${genome} \\\n        -o contigs.fa \\\n        -l 0 \\\n        --simplify-names \\\n        --seq-type NT\n\n    anvi-gen-contigs-database \\\n        -f contigs.fa \\\n        -o contigs.db\n\n    anvi-get-sequences-for-gene-calls \\\n        -c contigs.db \\\n        -o ${id}.gene_calls.fa\n\n    anvi-export-gene-calls \\\n        -c contigs.db \\\n        --gene-caller prodigal \\\n        -o ${id}.gene_calls.txt\n\n    anvi-run-kegg-kofams \\\n        -c contigs.db \\\n        --kegg-data-dir ${anvio_kofam_db} \\\n        -T ${task.cpus}\n\n    anvi-estimate-metabolism \\\n        -c contigs.db \\\n        --kegg-data-dir ${anvio_kofam_db} \\\n        -O ${id}. \\\n        --kegg-output-modes kofam_hits,modules\n\n    rm -rf contigs.fa contigs.db \n    \"\"\"",
        "nb_lignes_script": 33,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "id",
            "genome",
            "anvio_kofam_db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "metashot__prok-annotate",
        "directive": [
            "tag \"${id}\"",
            "publishDir \"${params.outdir}/anvio/${id}\" , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}