{
    "CNVKitSomatic": {
        "name_process": "CNVKitSomatic",
        "string_process": "\nprocess CNVKitSomatic{\n    label 'container_llab'\n    label 'cpus_32'\n    publishDir \"${params.outdir}/VariantCalling/\", mode: params.publish_dir_mode\n  \n  input:\n    file(bams_normal)\n    file(bais_normal)\n    file(bams_tumor)\n    file(bais_tumor)\n    file(fasta)\n    file(fastaFai)\n    file(targetBED)\n  \n  output:\n  file('CNVKit_somatic_batch')\n\n  when:'cnvkit_somatic' in tools\n\n  script:\n  \"\"\"\n  init.sh\n  cnvkit.py batch -p32 ${bams_tumor} \\\n      --normal ${bams_normal} \\\n      --targets ${targetBED} \\\n      --fasta ${fasta}  \\\n      --output-reference my_reference.cnn \\\n      --output-dir CNVKit_somatic_batch \\\n      --scatter \\\n      --diagram\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  init.sh\n  cnvkit.py batch -p32 ${bams_tumor} \\\n      --normal ${bams_normal} \\\n      --targets ${targetBED} \\\n      --fasta ${fasta}  \\\n      --output-reference my_reference.cnn \\\n      --output-dir CNVKit_somatic_batch \\\n      --scatter \\\n      --diagram\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bams_normal",
            "bais_normal",
            "bams_tumor",
            "bais_tumor",
            "fasta",
            "fastaFai",
            "targetBED"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/VariantCalling/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Mpileup": {
        "name_process": "Mpileup",
        "string_process": "\nprocess Mpileup {\n    label 'container_llab'\n    label 'memory_singleCPU_2_task'\n    tag {idSample + \"-\" + intervalBed.baseName}\n    \n    publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup.gz\" ? \"VariantCalling/${idSample}/mpileup/${it}\" : '' }\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai), file(intervalBed)\n        file(fasta)\n        file(fastaFai)\n\n    output:\n        tuple idPatient, idSample, file(\"${prefix}${idSample}.pileup.gz\")\n\n    when: 'controlfreec' in tools || 'mpileup' in tools\n\n    script:\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-l ${intervalBed}\"\n    \"\"\"\n    init.sh\n    samtools mpileup \\\n        -f ${fasta} ${bam} \\\n        ${intervalsOptions} \\\n    | bgzip --threads ${task.cpus} -c > ${prefix}${idSample}.pileup.gz\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-l ${intervalBed}\"\n    \"\"\"\n    init.sh\n    samtools mpileup \\\n        -f ${fasta} ${bam} \\\n        ${intervalsOptions} \\\n    | bgzip --threads ${task.cpus} -c > ${prefix}${idSample}.pileup.gz\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai"
        ],
        "nb_inputs": 6,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'memory_singleCPU_2_task'",
            "tag {idSample + \"-\" + intervalBed.baseName}",
            "publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup.gz\" ? \"VariantCalling/${idSample}/mpileup/${it}\" : '' }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeMpileup": {
        "name_process": "MergeMpileup",
        "string_process": "\nprocess MergeMpileup {\n    label 'container_llab'\n    tag {idSample}\n\n    publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup.gz\" ? \"VariantCalling/${idSample}/mpileup/${it}\" : '' }\n\n    input:\n        tuple idPatient, idSample, file(mpileup)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.pileup.gz\")\n\n    when: !(params.no_intervals) && 'controlfreec' in tools || 'mpileup' in tools\n\n    script:\n    \"\"\"\n    init.sh\n    for i in `ls -1v *.pileup.gz`;\n        do zcat \\$i >> ${idSample}.pileup\n    done\n\n    bgzip --threads ${task.cpus} -c ${idSample}.pileup > ${idSample}.pileup.gz\n\n    rm ${idSample}.pileup\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    init.sh\n    for i in `ls -1v *.pileup.gz`;\n        do zcat \\$i >> ${idSample}.pileup\n    done\n\n    bgzip --threads ${task.cpus} -c ${idSample}.pileup > ${idSample}.pileup.gz\n\n    rm ${idSample}.pileup\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mpileup",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {idSample}",
            "publishDir params.outdir, mode: params.publish_dir_mode, saveAs: { it == \"${idSample}.pileup.gz\" ? \"VariantCalling/${idSample}/mpileup/${it}\" : '' }"
        ],
        "when": "",
        "stub": ""
    },
    "Mutect2Single": {
        "name_process": "Mutect2Single",
        "string_process": "\nprocess Mutect2Single{\n    label 'container_llab'\n    tag {idSample + \"-\" + intervalBed.baseName}\n    label 'cpus_16'\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai), \n            file(intervalBed)\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(germlineResource)\n        file(germlineResourceIndex)\n\n    output:\n        tuple idPatient, idSample, file(out_vcf), emit: vcf\n        tuple idPatient, idSample, file(out_stats) , emit: stats\n    \n    when: 'mutect2_single' in tools\n    \n    script:\n    out_vcf = \"${intervalBed.baseName}_${idSample}.vcf\"\n    out_stats = \"${intervalBed.baseName}_${idSample}.vcf.stats\"\n    \"\"\"\n    # max-mnp-distance is set to 0 to avoid a bug in \n    # next process GenomicsDbImport\n    # See https://gatk.broadinstitute.org/hc/en-us/articles/360046224491-CreateSomaticPanelOfNormals-BETA-\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta} \\\n      -I ${bam}  \\\n      -max-mnp-distance 0 \\\n      -L ${intervalBed} \\\n      --germline-resource ${germlineResource} \\\n      -O ${out_vcf}\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    out_vcf = \"${intervalBed.baseName}_${idSample}.vcf\"\n    out_stats = \"${intervalBed.baseName}_${idSample}.vcf.stats\"\n    \"\"\"\n    # max-mnp-distance is set to 0 to avoid a bug in \n    # next process GenomicsDbImport\n    # See https://gatk.broadinstitute.org/hc/en-us/articles/360046224491-CreateSomaticPanelOfNormals-BETA-\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta} \\\n      -I ${bam}  \\\n      -max-mnp-distance 0 \\\n      -L ${intervalBed} \\\n      --germline-resource ${germlineResource} \\\n      -O ${out_vcf}\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "germlineResource",
            "germlineResourceIndex"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {idSample + \"-\" + intervalBed.baseName}",
            "label 'cpus_16'"
        ],
        "when": "",
        "stub": ""
    },
    "MergeMutect2SingleStats": {
        "name_process": "MergeMutect2SingleStats",
        "string_process": "\nprocess MergeMutect2SingleStats {\n    label 'container_llab'\n    label 'cpus_16'\n    tag {idSample}\n\n                                                                                                                              \n\n    input:\n        tuple idPatient, idSample, file(statsFiles)                         \n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.vcf.gz.stats\")\n\n    when: 'mutect2_single' in tools\n\n    script:     \n      stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSample}.vcf.gz.stats\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "      stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSample}.vcf.gz.stats\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GOstats",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gostats",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GOstats",
                "uri": "https://bio.tools/gostats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0582",
                                "term": "Ontology"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2884",
                                "term": "Plot"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_1772",
                                "term": "Score"
                            }
                        ]
                    }
                ],
                "description": "A set of tools for interacting with GO and microarray data. A variety of basic manipulation tools for graphs, hypothesis testing and other simple calculations.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GOstats.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "statsFiles",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "FilterMutect2SingleCalls": {
        "name_process": "FilterMutect2SingleCalls",
        "string_process": "\nprocess FilterMutect2SingleCalls {\n    label 'container_llab'\n    label 'cpus_1'\n\n    tag {idSample}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/mutect2_single_filtered\", mode: params.publish_dir_mode\n\n    input:\n        tuple   idPatient, \n                idSample, \n                file(unfiltered), file(unfilteredIndex),\n                file(\"${idSample}.vcf.gz.stats\")\n        \n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(germlineResource)\n        file(germlineResourceIndex)\n                                            \n        \n    output:\n        tuple val(\"Mutect2Single\"), idPatient, idSample,\n            file(\"mutect2_single_filtered_${idSample}.vcf.gz\"),\n            file(\"mutect2_single_filtered_${idSample}.vcf.gz.tbi\"),\n            file(\"mutect2_single_filtered_${idSample}.vcf.gz.filteringStats.tsv\")\n\n                                             \n     when: 'mutect2_single' in tools\n\n    script:\n    \"\"\"\n    init.sh\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --stats ${idSample}.vcf.gz.stats \\\n        -R ${fasta} \\\n        -O mutect2_single_filtered_${idSample}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "    \"\"\"\n    init.sh\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --stats ${idSample}.vcf.gz.stats \\\n        -R ${fasta} \\\n        -O mutect2_single_filtered_${idSample}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "unfiltered",
            "unfilteredIndex",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "germlineResource",
            "germlineResourceIndex"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/mutect2_single_filtered\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PartitionFastQ": {
        "name_process": "PartitionFastQ",
        "string_process": "\nprocess PartitionFastQ {\n                             \n    label 'cpus_32'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idRun}\n\n                                                                                      \n                                    \n\n    input:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1.fastq.gz\"), \n        file(\"${idSample}_${idRun}_R2.fastq.gz\")\n\n    output:\n        tuple idPatient, idSample, idRun, file(\"r1_split_*\"), file(\"r2_split_*\") \n                           \n\n    when: params.split_fastq && step == 'mapping'\n    \n    script:\n    \"\"\"\n    init.sh\n    partition.sh \\\n                in=${idSample}_${idRun}_R1.fastq.gz \\\n                in2=${idSample}_${idRun}_R2.fastq.gz  \\\n                out=r1_split_%.fastq.gz \\\n                out2=r2_split_%.fastq.gz \\\n                ways=${params.split_fastq}\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    init.sh\n    partition.sh \\\n                in=${idSample}_${idRun}_R1.fastq.gz \\\n                in2=${idSample}_${idRun}_R2.fastq.gz  \\\n                out=r1_split_%.fastq.gz \\\n                out2=r2_split_%.fastq.gz \\\n                ways=${params.split_fastq}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idRun}"
        ],
        "when": "",
        "stub": ""
    },
    "MapReads": {
        "name_process": "MapReads",
        "string_process": "\nprocess MapReads {\n    label 'cpus_max'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idRun}\n\n    input:\n        tuple idPatient, idSample, idRun, file(inputFile1), file(inputFile2)\n        file(fasta) \n        file(fastaFai)\n        file(bwaIndex) \n\n    output:\n                                                                             \n                                                                                         \n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\"), emit : bam_mapped\n                                                                                                                  \n    \n                                                                                \n    script:\n                                                                                   \n                                                           \n                                                                                \n                                                                                          \n                                                                                                                                                                               \n    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = status_map[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    convertToFastq = hasExtension(inputFile1, \"bam\") ? \"gatk --java-options -Xmx${task.memory.toGiga()}g SamToFastq --INPUT=${inputFile1} --FASTQ=/dev/stdout --INTERLEAVE=true --NON_PF=true | \\\\\" : \"\"\n    input = hasExtension(inputFile1, \"bam\") ? \"-p /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2)\" : \"${inputFile1} ${inputFile2}\"\n    \"\"\"\n        init.sh\n        ${convertToFastq}\n        bwa mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n        ${input} | \\\n        samtools sort --threads ${task.cpus} -m 2G - > ${idSample}_${idRun}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n    readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                                \n    status = status_map[idPatient, idSample]\n    extra = status == 1 ? \"-B 3\" : \"\"\n    convertToFastq = hasExtension(inputFile1, \"bam\") ? \"gatk --java-options -Xmx${task.memory.toGiga()}g SamToFastq --INPUT=${inputFile1} --FASTQ=/dev/stdout --INTERLEAVE=true --NON_PF=true | \\\\\" : \"\"\n    input = hasExtension(inputFile1, \"bam\") ? \"-p /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2)\" : \"${inputFile1} ${inputFile2}\"\n    \"\"\"\n        init.sh\n        ${convertToFastq}\n        bwa mem -K 100000000 -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${fasta} \\\n        ${input} | \\\n        samtools sort --threads ${task.cpus} -m 2G - > ${idSample}_${idRun}.bam\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "CNN",
            "EXTRACT",
            "wossinput",
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/CNN",
            "https://bio.tools/extract",
            "https://bio.tools/wossinput",
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "CNN",
                "uri": "https://bio.tools/CNN",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3318",
                            "term": "Physics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convolutional neural network for efficient estimation of regional brain strains.\n\nThree pretrained CNN neural network models are provided based on all of the brain response samples available in the published study (N=3069). They correspond to the peak maximum principal strain (MPS) of the whole brain (WB), MPS of the corpus callosum (CC), and fiber strain (FS) of the CC, all assessed at the 95th percentile levels",
                "homepage": "https://github.com/Jilab-biomechanics/CNN-brain-strains"
            },
            {
                "name": "EXTRACT",
                "uri": "https://bio.tools/extract",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "Natural language processing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "NLP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3778",
                                    "term": "Text annotation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3671",
                                "term": "Text"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3779",
                                "term": "Annotated text"
                            }
                        ]
                    }
                ],
                "description": "EXTRACT identifies genes/proteins, chemical compounds, organisms, environments, tissues, diseases, phenotypes and Gene Ontology terms mentioned in a given piece of text and maps them to their corresponding ontology/taxonomy entries.",
                "homepage": "https://extract.jensenlab.org/"
            },
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "inputFile1",
            "inputFile2",
            "idPatient",
            "fasta",
            "fastaFai",
            "bwaIndex"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_max'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idRun}"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBamMapped": {
        "name_process": "MergeBamMapped",
        "string_process": "\nprocess MergeBamMapped {\n    label 'cpus_16'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n\n    input:\n        tuple idPatient, idSample, idRun, out_suffix, file(bams)\n                                                                    \n\n    output:\n        tuple idPatient, idSample,  file(\"${idSample}${out_suffix}.bam\")\n\n    script:\n                                                          \n                                        \n    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} \"${idSample}${out_suffix}.bam\" ${bams}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} \"${idSample}${out_suffix}.bam\" ${bams}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "manta_to_bed": {
        "name_process": "manta_to_bed",
        "string_process": "process manta_to_bed{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n                                                                                                                 \n\n    input:\n    tuple caller, idPatient, idSample, file(vcfgz), file(vcfgztbi)\n    file(exon_file)\n\n    output:\n    tuple val('Manta'), idPatient, idSample, file(\"${idSample}.bed\")\n\n    when: ! ('chco_qc' in _skip_qc)  && params.bait_bed\n\n    script:\n    \"\"\"\n    bedtools intersect -wb -b Manta_${idSample}.tumorSV.vcf.gz -a $exon_file > temp.tsv\n    manta_to_bed.py $idSample ${idSample}.bed temp.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    bedtools intersect -wb -b Manta_${idSample}.tumorSV.vcf.gz -a $exon_file > temp.tsv\n    manta_to_bed.py $idSample ${idSample}.bed temp.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "vcfgz",
            "vcfgztbi",
            "caller",
            "exon_file"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'"
        ],
        "when": "",
        "stub": ""
    },
    "savvy_to_bed": {
        "name_process": "savvy_to_bed",
        "string_process": "\nprocess savvy_to_bed{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/VariantCalling/SavvyIntermediates/\", mode: params.publish_dir_mode\n\n    input:\n    file(SavvycnvResults)\n    file(exon_file)\n\n    output:\n    file(\"*savvy.bed\")\n\n    script:\n    \"\"\"\n    # the file is hard coded for now, change before going live to $SavvycnvResults/cnv_list.csv /scratch/Shares/CHCO/workspace/cna_positive_wes/results/savvycnv/VariantCalling/SavvycnvResults/cnv_list.csv\n    # remove chr from chromosome\n    cat $SavvycnvResults/cnv_list.csv | sed 's/chr//g' | bedtools intersect -wb -a $exon_file -b stdin > savvy-temp.tsv\n    savvy_to_bed.py savvy-temp.tsv \n    ls\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    # the file is hard coded for now, change before going live to $SavvycnvResults/cnv_list.csv /scratch/Shares/CHCO/workspace/cna_positive_wes/results/savvycnv/VariantCalling/SavvycnvResults/cnv_list.csv\n    # remove chr from chromosome\n    cat $SavvycnvResults/cnv_list.csv | sed 's/chr//g' | bedtools intersect -wb -a $exon_file -b stdin > savvy-temp.tsv\n    savvy_to_bed.py savvy-temp.tsv \n    ls\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "SavvycnvResults",
            "exon_file"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/SavvyIntermediates/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "cnvkit_to_bed": {
        "name_process": "cnvkit_to_bed",
        "string_process": "\nprocess cnvkit_to_bed{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/ReCalToMarkedRaw/\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(cns)\n    file(exon_file)\n\n    output:\n    tuple val('cnvkit'), idPatient, idSample, file(\"${idSample}.bed\")\n\n    script:\n    \"\"\"\n        # strip the first line # the next line is hard coded and needs to be fix before production as does the input parameter\n        sed '1 d' $cns | bedtools intersect -wb -b stdin -a $exon_file > cnvtemp.tsv\n        # sed '1 d' $cns | bedtools intersect -wb -b stdin -a $exon_file > cnvtemp.tsv\n        cnv-kit_to_bed.py $idSample ${idSample}.bed cnvtemp.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n        # strip the first line # the next line is hard coded and needs to be fix before production as does the input parameter\n        sed '1 d' $cns | bedtools intersect -wb -b stdin -a $exon_file > cnvtemp.tsv\n        # sed '1 d' $cns | bedtools intersect -wb -b stdin -a $exon_file > cnvtemp.tsv\n        cnv-kit_to_bed.py $idSample ${idSample}.bed cnvtemp.tsv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "cns",
            "idPatient",
            "exon_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/ReCalToMarkedRaw/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "combine_callers": {
        "name_process": "combine_callers",
        "string_process": "\nprocess combine_callers{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/AllCNVCallers/\", mode: params.publish_dir_mode\n\n    input:\n    file(savvy_beds)\n    tuple caller, idPatient, idSample, file(cnvkit_bed)\n                                      \n\n    output:\n    tuple idSample, file(\"${idSample}.multi_caller.bed\"), file(\"${idSample}.log\")\n\n    script:\n    \"\"\"\n    touch ${idSample}.log\n    if [[ \"$savvy_beds\" != \"not_used\"  ]];\n    then    \n        FILE=\"${idSample}.coverageBinner_savvy.bed\"\n        if test -f \"\\$FILE\"; then\n            cat ${idSample}.coverageBinner_savvy.bed >> temp.bed\n        else\n            echo \"# No calls from Savvy for $idSample\" >> ${idSample}.log\n        fi\n    fi \n\n    if [ \"$caller\" != \"cnvkit_not_used\" ];\n    then\n        if [[ \\$(wc -l <$cnvkit_bed) -ge 2 ]]\n        then\n            echo \"\"\n        else\n            echo \"# No calls from CNVKit for $idSample\" >> ${idSample}.log    \n        fi\n        echo \"Adding CNVKit bed\"\n        cat $cnvkit_bed >> temp.bed\n    else\n        echo \"Skipping CNVKit bed addition\"\n    fi\n\n    if test -f \"temp.bed\"; then\n        #cnvkit_file=\\$(find )\n\n        grep -v BND temp.bed | awk '(\\$2 <= \\$3)' >  filtered_temp.bed\n        cat filtered_temp.bed | sort -k1,1V -k2,2n -k3,3n > tripple_sorted.bed\n        bedtools cluster -i tripple_sorted.bed > clustered_test.bed\n        agg_cluster.py clustered_test.bed > ${idSample}.multi_caller.bed\n    else\n        touch ${idSample}.multi_caller.bed\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 52,
        "string_script": "    \"\"\"\n    touch ${idSample}.log\n    if [[ \"$savvy_beds\" != \"not_used\"  ]];\n    then    \n        FILE=\"${idSample}.coverageBinner_savvy.bed\"\n        if test -f \"\\$FILE\"; then\n            cat ${idSample}.coverageBinner_savvy.bed >> temp.bed\n        else\n            echo \"# No calls from Savvy for $idSample\" >> ${idSample}.log\n        fi\n    fi \n\n    if [ \"$caller\" != \"cnvkit_not_used\" ];\n    then\n        if [[ \\$(wc -l <$cnvkit_bed) -ge 2 ]]\n        then\n            echo \"\"\n        else\n            echo \"# No calls from CNVKit for $idSample\" >> ${idSample}.log    \n        fi\n        echo \"Adding CNVKit bed\"\n        cat $cnvkit_bed >> temp.bed\n    else\n        echo \"Skipping CNVKit bed addition\"\n    fi\n\n    if test -f \"temp.bed\"; then\n        #cnvkit_file=\\$(find )\n\n        grep -v BND temp.bed | awk '(\\$2 <= \\$3)' >  filtered_temp.bed\n        cat filtered_temp.bed | sort -k1,1V -k2,2n -k3,3n > tripple_sorted.bed\n        bedtools cluster -i tripple_sorted.bed > clustered_test.bed\n        agg_cluster.py clustered_test.bed > ${idSample}.multi_caller.bed\n    else\n        touch ${idSample}.multi_caller.bed\n    fi\n    \"\"\"",
        "nb_lignes_script": 36,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "savvy_beds",
            "cnvkit_bed",
            "caller"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idSample"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/AllCNVCallers/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "combine_samples": {
        "name_process": "combine_samples",
        "string_process": "\nprocess combine_samples{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/VariantCalling/CombineCNV/\", mode: params.publish_dir_mode\n\n    input:\n    file(all_files)\n    file(all_logs)\n    file(example_vcf)\n    file(fasta)\n    file(fastaFai)\n    file(dict)\n\n    output:\n    file(\"aggregated_multi_sample_multi_caller.bed\")\n    file(\"*.vcf\")\n    path \"cnv_all_samples.vcf\", emit: cnv_all_samples_vcf\n    path \"cnv_all_samples.log\", emit: cnv_all_samples_log\n\n    script:\n    \"\"\"\n    for file in ${all_files}; do\n        cat \\${file} >> temp.bed\n    done\n\n    for file in ${all_logs}; do\n        cat \\${file} >> cnv_all_samples.log\n    done\n\n    #sort it and cluster it\n    bedtools sort -i temp.bed > sorted_temp.bed\n    cat sorted_temp.bed | sort -k1,1V -k2,2n -k3,3n > tripple_sorted.bed\n    bedtools cluster -i tripple_sorted.bed > clustered_test.bed\n\n    multi_sample_agg_cluster.py clustered_test.bed > aggregated_multi_sample_multi_caller.bed\n    multi_caller_single_sample_bed_to_vcf.py --bed aggregated_multi_sample_multi_caller.bed --example_vcf $example_vcf --ref $fasta > cnv_all_samples.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    \"\"\"\n    for file in ${all_files}; do\n        cat \\${file} >> temp.bed\n    done\n\n    for file in ${all_logs}; do\n        cat \\${file} >> cnv_all_samples.log\n    done\n\n    #sort it and cluster it\n    bedtools sort -i temp.bed > sorted_temp.bed\n    cat sorted_temp.bed | sort -k1,1V -k2,2n -k3,3n > tripple_sorted.bed\n    bedtools cluster -i tripple_sorted.bed > clustered_test.bed\n\n    multi_sample_agg_cluster.py clustered_test.bed > aggregated_multi_sample_multi_caller.bed\n    multi_caller_single_sample_bed_to_vcf.py --bed aggregated_multi_sample_multi_caller.bed --example_vcf $example_vcf --ref $fasta > cnv_all_samples.vcf\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "all_files",
            "all_logs",
            "example_vcf",
            "fasta",
            "fastaFai",
            "dict"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/CombineCNV/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "HapPy": {
        "name_process": "HapPy",
        "string_process": "\nprocess HapPy {\n    label 'container_llab'\n    label 'cpus_32'\n\n    tag {idSample}\n\n    publishDir \"${params.outdir}/Validation/Against_${truth_set_type}/${idSample}/${variantCaller}\", mode: params.publish_dir_mode\n\n    input:\n        tuple truth_set_type, variantCaller, idPatient, idSample, file(vcf), file(tbi), file (truth_set_vcf), file (truth_set_tbi), file(highqual_regions)         \n        file(target_bed)\n        file(bait_bed)\n        file(fasta)\n        file(fastaFai)\n\n    output:\n        file(\"Against_${truth_set_type}.${vcf.baseName}.*\")\n\n    when: ( \n            ('benchmark_dv_and_hc_against_giab' in tools || 'benchmark_dv_against_hc' in tools )\n            && ('haplotypecaller' in tools || 'deepvariant' in tools) \n            && params.giab_highconf_vcf \n            && params.giab_highconf_tbi \n            && params.giab_highconf_regions\n        )\n\n    script:\n                            \n    \"\"\"\n    init.sh\n    export HGREF=$fasta\n    mkdir scratch\n    hap.py  \\\n        ${truth_set_vcf} \\\n        ${vcf} \\\n        -f ${highqual_regions} \\\n        --scratch-prefix scratch \\\n        --engine vcfeval \\\n        -T ${target_bed} \\\n        --threads ${task.cpus} \\\n        -o Against_${truth_set_type}.${vcf.baseName}\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "    \"\"\"\n    init.sh\n    export HGREF=$fasta\n    mkdir scratch\n    hap.py  \\\n        ${truth_set_vcf} \\\n        ${vcf} \\\n        -f ${highqual_regions} \\\n        --scratch-prefix scratch \\\n        --engine vcfeval \\\n        -T ${target_bed} \\\n        --threads ${task.cpus} \\\n        -o Against_${truth_set_type}.${vcf.baseName}\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf",
            "tbi",
            "truth_set_vcf",
            "truth_set_tbi",
            "highqual_regions",
            "truth_set_type",
            "target_bed",
            "bait_bed",
            "fasta",
            "fastaFai"
        ],
        "nb_inputs": 10,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/Validation/Against_${truth_set_type}/${idSample}/${variantCaller}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "HaplotypeCaller": {
        "name_process": "HaplotypeCaller",
        "string_process": "\nprocess HaplotypeCaller {\n    label 'container_llab'\n    label 'memory_singleCPU_task_sq'\n    label 'cpus_8'\n    \n    tag {idSample + \"-\" + intervalBed.baseName}\n                      \n                                                                                                              \n    input:\n        tuple idPatient, idSample, file(bam), file(bai), file(intervalBed) \n                                                           \n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(dbsnp)\n        file(dbsnpIndex)\n\n    output:\n        tuple val(\"HaplotypeCallerGVCF\"), idPatient, idSample, file(\"${intervalBed.baseName}_${idSample}.g.vcf\"), emit: gvcf_HC\n                                                                                                                   \n        tuple idPatient, idSample, file(intervalBed), file(\"${intervalBed.baseName}_${idSample}.g.vcf\"), emit: gvcf_GenotypeGVCFs\n                                                                                                                                                                    \n        \n\n    when: 'haplotypecaller' in tools\n\n    script:\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n        HaplotypeCaller \\\n        -R ${fasta} \\\n        -I ${bam} \\\n        -L ${intervalBed} \\\n        -D ${dbsnp} \\\n        -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n        -ERC GVCF\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n        HaplotypeCaller \\\n        -R ${fasta} \\\n        -I ${bam} \\\n        -L ${intervalBed} \\\n        -D ${dbsnp} \\\n        -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n        -ERC GVCF\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "dbsnp",
            "dbsnpIndex"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'memory_singleCPU_task_sq'",
            "label 'cpus_8'",
            "tag {idSample + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "GenRef": {
        "name_process": "GenRef",
        "string_process": "\nprocess GenRef{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/Preprocessing/CNVKitRef/\", mode: params.publish_dir_mode\n    \n    input:\n        file(fasta)\n        file(fasta_fai)\n        file(\"tar_covs/*\")\n        file(\"anti_covs/*\")\n\n\n    output:\n    file(\"Reference.cnn\")\n\n    when: 'cnvkit_gen_ref' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py reference {tar_covs,anti_covs}/*coverage.cnn -f ${fasta} -o Reference.cnn\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py reference {tar_covs,anti_covs}/*coverage.cnn -f ${fasta} -o Reference.cnn\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta",
            "fasta_fai"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/Preprocessing/CNVKitRef/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildFastaGz": {
        "name_process": "BuildFastaGz",
        "string_process": "\nprocess BuildFastaGz {\n    label 'container_llab'\n      tag \"${fasta}.gz\"\n                                                \n\n      input:\n      file(fasta)\n\n      output:\n      file(\"${fasta}.gz\")\n      \n      when: !(params.fasta_gz)\n      script:\n      \"\"\"\n      init.sh\n      bgzip -c ${fasta} > ${fasta}.gz\n      \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      init.sh\n      bgzip -c ${fasta} > ${fasta}.gz\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag \"${fasta}.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "BuildFastaGzFai": {
        "name_process": "BuildFastaGzFai",
        "string_process": "\nprocess BuildFastaGzFai {\n    label 'container_llab'\n    tag \"${fasta}.gz.fai\"\n                                              \n\n    input:\n    file(fasta)\n    file(fastagz)\n\n    output:\n    file(\"${fasta}.gz.fai\")\n    when: !(params.fasta_gz_fai)\n    script:\n    \"\"\"\n    init.sh\n    samtools faidx $fastagz\n    \"\"\"\n  }",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    init.sh\n    samtools faidx $fastagz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta",
            "fastagz"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag \"${fasta}.gz.fai\""
        ],
        "when": "",
        "stub": ""
    },
    "BuildFastaGzi": {
        "name_process": "BuildFastaGzi",
        "string_process": "\nprocess BuildFastaGzi {\n    label 'container_llab'\n    tag \"${fasta}.gz.gzi\"\n                                              \n\n    input:\n    file(fasta)\n\n    output:\n    file(\"${fasta}.gz.gzi\")\n    \n    when: !(params.fasta_gzi)\n\n    script:\n    \"\"\"\n    init.sh\n    bgzip -c -i ${fasta} > ${fasta}.gz\n    \"\"\"\n  }",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    init.sh\n    bgzip -c -i ${fasta} > ${fasta}.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag \"${fasta}.gz.gzi\""
        ],
        "when": "",
        "stub": ""
    },
    "BuildBWAindexes": {
        "name_process": "BuildBWAindexes",
        "string_process": "\nprocess BuildBWAindexes {\n    label 'container_llab'\n    tag {fasta}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/BWAIndex/${it}\" : null }\n\n    input:\n        file(fasta)\n\n    output:\n        file(\"${fasta}.*\")\n\n    when: !(params.bwa_index) && params.fasta && 'mapping' in step\n\n    script:\n    \"\"\"\n    init.sh\n    bwa index ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    bwa index ${fasta}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {fasta}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/BWAIndex/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildDict": {
        "name_process": "BuildDict",
        "string_process": "\nprocess BuildDict {\n    label 'container_llab'\n    tag {fasta}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(fasta)\n\n    output:\n        file(\"${fasta.baseName}.dict\")\n\n    when: !(params.dict) && params.fasta && !('annotate' in step)\n\n    script:\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CreateSequenceDictionary \\\n        --REFERENCE ${fasta} \\\n        --OUTPUT ${fasta.baseName}.dict\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        CreateSequenceDictionary \\\n        --REFERENCE ${fasta} \\\n        --OUTPUT ${fasta.baseName}.dict\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {fasta}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildFastaFai": {
        "name_process": "BuildFastaFai",
        "string_process": "\nprocess BuildFastaFai {\n    label 'container_llab'\n    tag {fasta}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(fasta)\n\n    output:\n        file(\"${fasta}.fai\")\n\n    when: !(params.fasta_fai) && params.fasta && !('annotate' in step)\n\n    script:\n    \"\"\"\n    init.sh\n    samtools faidx ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    samtools faidx ${fasta}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {fasta}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildDbsnpIndex": {
        "name_process": "BuildDbsnpIndex",
        "string_process": "\nprocess BuildDbsnpIndex {\n    label 'container_llab'\n    tag {dbsnp}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(dbsnp)\n\n    output:\n        file(\"${dbsnp}.tbi\")\n\n    when: !(params.dbsnp_index) && params.dbsnp && ('mapping' in step || 'controlfreec' in tools || 'haplotypecaller' in tools || 'mutect2' in tools)\n\n    script:\n    \"\"\"\n    init.sh\n    tabix -p vcf ${dbsnp}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    tabix -p vcf ${dbsnp}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dbsnp"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {dbsnp}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildGermlineResourceIndex": {
        "name_process": "BuildGermlineResourceIndex",
        "string_process": "\nprocess BuildGermlineResourceIndex {\n    label 'container_llab'\n    tag {germlineResource}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(germlineResource)\n\n    output:\n        file(\"${germlineResource}.tbi\")\n\n    when: !(params.germline_resource_index) && params.germline_resource && 'mutect2' in tools\n\n    script:\n    \"\"\"\n    init.sh\n    tabix -p vcf ${germlineResource}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    tabix -p vcf ${germlineResource}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "germlineResource"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {germlineResource}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildKnownIndelsIndex": {
        "name_process": "BuildKnownIndelsIndex",
        "string_process": "\nprocess BuildKnownIndelsIndex {\n    label 'container_llab'\n    tag {knownIndels}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        each file(knownIndels)\n\n    output:\n        file(\"${knownIndels}.tbi\")\n\n    when: !(params.known_indels_index) && params.known_indels && 'mapping' in step\n\n    script:\n    \"\"\"\n    init.sh\n    tabix -p vcf ${knownIndels}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    tabix -p vcf ${knownIndels}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "knownIndels"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {knownIndels}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "BuildSomaticPonIndex": {
        "name_process": "BuildSomaticPonIndex",
        "string_process": "\nprocess BuildSomaticPonIndex {\n    label 'container_llab'\n    tag {pon}\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }\n\n    input:\n        file(pon)\n\n    output:\n        file(\"${pon}.tbi\")\n\n    when: !(params.somatic_pon_index) && params.somatic_pon && ('tnscope' in tools || 'mutect2' in tools)\n\n    script:\n    \"\"\"\n    init.sh\n    tabix -p vcf ${pon}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    tabix -p vcf ${pon}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pon"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {pon}",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: {params.save_genome_index ? \"reference_genome/${it}\" : null }"
        ],
        "when": "",
        "stub": ""
    },
    "FastQCFQ": {
        "name_process": "FastQCFQ",
        "string_process": "\nprocess FastQCFQ {\n    label 'FastQC'\n    label 'cpus_2'\n    label 'container_llab'\n\n    tag {idPatient + \"-\" + idRun}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\", \n    mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}_R1.fastq.gz\"), \n        file(\"${idSample}_${idRun}_R2.fastq.gz\")\n\n    output:\n        file(\"*.{html,zip}\")\n\n                                                         \n    \n    script:\n    \"\"\"\n    init.sh\n    fastqc -t 2 -q ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    init.sh\n    fastqc -t 2 -q ${idSample}_${idRun}_R1.fastq.gz ${idSample}_${idRun}_R2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'FastQC'",
            "label 'cpus_2'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idRun}",
            "publishDir \"${params.outdir}/Reports/${idSample}/FastQC/${idSample}_${idRun}\" , mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "GenPedigreeFile": {
        "name_process": "GenPedigreeFile",
        "string_process": "\nprocess GenPedigreeFile {\n    echo true\n    label 'cpus_1'\n    label 'container_llab'\n    \n    publishDir \"${params.outdir}/Somalier/\", mode: params.publish_dir_mode\n\n    input:\n        file(tsvFile)\n\n    output:\n        file(\"pedigree.ped\")\n\n\n    script:\n    \"\"\"\n    gen_pedigree.awk ${tsvFile} > pedigree.ped\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    gen_pedigree.awk ${tsvFile} > pedigree.ped\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tsvFile"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "echo true",
            "label 'cpus_1'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/Somalier/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SomalierExtraction": {
        "name_process": "SomalierExtraction",
        "string_process": "\nprocess SomalierExtraction {\n    label 'container_llab'\n    label 'cpus_8'\n    tag {idSample}\n    \n    publishDir \"${params.outdir}/Somalier/extracted/\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(fasta)\n        file(fasta_fai)\n        file(somalier_sites)\n\n    output:\n                                                                  \n        file(\"${idSample}.somalier\")\n                                                      \n\n    when: params.somalier_sites\n\n    script:\n    \"\"\"\n    init.sh\n    somalier extract  --sites ${somalier_sites} -f ${fasta}  ${bam}\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    init.sh\n    somalier extract  --sites ${somalier_sites} -f ${fasta}  ${bam}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "somalier"
        ],
        "tools_url": [
            "https://bio.tools/somalier"
        ],
        "tools_dico": [
            {
                "name": "somalier",
                "uri": "https://bio.tools/somalier",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "rapid relatedness estimation for cancer and germline studies using efficient genome sketches.\n\nfast sample-swap and relatedness checks on BAMs/CRAMs/VCFs/GVCFs.\n\nsomalier: extract informative sites, evaluate relatedness, and perform quality-control on BAM/CRAM/BCF/VCF/GVCF.\n\nNote that the somalier relate command runs extremely quickly (< 2 seconds for 600 samples and ~1 minute for 4,500 samples) so it's possible to add/remove samples or adjust a pedigree file and re-run iteratively",
                "homepage": "http://github.com/brentp/somalier"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fasta_fai",
            "somalier_sites"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/Somalier/extracted/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SomalierRelate": {
        "name_process": "SomalierRelate",
        "string_process": "\nprocess SomalierRelate {\n    label 'container_llab'\n    label 'cpus_16'\n                                       \n\n    publishDir \"${params.outdir}/Somalier/relate/\", mode: params.publish_dir_mode\n\n    input:\n       file(pedigree)\n       file(\"somalier_extracted/*\")\n                   \n\n    output:\n        tuple file(\"somalier.html\"), file(\"somalier.pairs.tsv\"), file(\"somalier.samples.tsv\")\n\n    when: 'somalier' in  tools\n\n    script:\n    \"\"\"\n    init.sh\n    #mkdir somalier_extracted\n    #mv *.somalier somalier_extracted/\n    somalier relate --ped ${pedigree} somalier_extracted/*.somalier\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    init.sh\n    #mkdir somalier_extracted\n    #mv *.somalier somalier_extracted/\n    somalier relate --ped ${pedigree} somalier_extracted/*.somalier\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "somalier"
        ],
        "tools_url": [
            "https://bio.tools/somalier"
        ],
        "tools_dico": [
            {
                "name": "somalier",
                "uri": "https://bio.tools/somalier",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "rapid relatedness estimation for cancer and germline studies using efficient genome sketches.\n\nfast sample-swap and relatedness checks on BAMs/CRAMs/VCFs/GVCFs.\n\nsomalier: extract informative sites, evaluate relatedness, and perform quality-control on BAM/CRAM/BCF/VCF/GVCF.\n\nNote that the somalier relate command runs extremely quickly (< 2 seconds for 600 samples and ~1 minute for 4,500 samples) so it's possible to add/remove samples or adjust a pedigree file and re-run iteratively",
                "homepage": "http://github.com/brentp/somalier"
            }
        ],
        "inputs": [
            "pedigree"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "publishDir \"${params.outdir}/Somalier/relate/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SomalierAncestry": {
        "name_process": "SomalierAncestry",
        "string_process": "\nprocess SomalierAncestry {\n    label 'container_llab'\n    label 'cpus_32'\n                                       \n\n    publishDir \"${params.outdir}/Somalier/ancestry/\", mode: params.publish_dir_mode\n\n    input:\n        file(ancestry_labels_1kg_tsv)\n        file(somalier_extracted_1kg)\n        file(\"query_samples_somalier/*\")\n\n    output:\n        file(\"somalier-ancestry.somalier-ancestry.html\")\n        file(\"somalier-ancestry.somalier-ancestry.tsv\")\n    \n    when: 'somalier' in  tools\n\n    script:\n    \"\"\"\n    init.sh\n    somalier ancestry --labels ${ancestry_labels_1kg_tsv} ${somalier_extracted_1kg}/*.somalier ++ query_samples_somalier/*.somalier\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    somalier ancestry --labels ${ancestry_labels_1kg_tsv} ${somalier_extracted_1kg}/*.somalier ++ query_samples_somalier/*.somalier\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "somalier"
        ],
        "tools_url": [
            "https://bio.tools/somalier"
        ],
        "tools_dico": [
            {
                "name": "somalier",
                "uri": "https://bio.tools/somalier",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "rapid relatedness estimation for cancer and germline studies using efficient genome sketches.\n\nfast sample-swap and relatedness checks on BAMs/CRAMs/VCFs/GVCFs.\n\nsomalier: extract informative sites, evaluate relatedness, and perform quality-control on BAM/CRAM/BCF/VCF/GVCF.\n\nNote that the somalier relate command runs extremely quickly (< 2 seconds for 600 samples and ~1 minute for 4,500 samples) so it's possible to add/remove samples or adjust a pedigree file and re-run iteratively",
                "homepage": "http://github.com/brentp/somalier"
            }
        ],
        "inputs": [
            "ancestry_labels_1kg_tsv",
            "somalier_extracted_1kg"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/Somalier/ancestry/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "exonCoverage": {
        "name_process": "exonCoverage",
        "string_process": "process exonCoverage{\n    label 'cpus_16'\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/Reports/${idSample}/exonCoverage/\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/${idSample}/exonCoverage\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n                                           \n    file(fasta)\n    file(fastaFai)\n    file(dict)\n    file(targetBED)\n    file(baitBED)\n    val outname\n\n\n    output:\n    path \"${idSample}.*\", emit: files\n    file(\"target.interval_list\")\n\n    when: ! ('chco_qc' in _skip_qc)  && params.bait_bed\n\n    script:\n    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${targetBED} -O target.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${baitBED} -O bait.interval_list -SD ${dict}\n    gatk --java-options -Xmx32G CollectHsMetrics --VALIDATION_STRINGENCY SILENT \\\n    -I ${bam} \\\n    -O ${idSample}.${outname}.hs_metrics.txt \\\n    -TI target.interval_list \\\n    -BI bait.interval_list \\\n    --PER_BASE_COVERAGE ${bam.baseName}.per_base_coverage.txt \\\n    -R ${fasta}\n    exonCoverage.py target.interval_list ${bam.baseName}.per_base_coverage.txt ${bam.baseName}_per_exon_coverage.txt\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${targetBED} -O target.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${baitBED} -O bait.interval_list -SD ${dict}\n    gatk --java-options -Xmx32G CollectHsMetrics --VALIDATION_STRINGENCY SILENT \\\n    -I ${bam} \\\n    -O ${idSample}.${outname}.hs_metrics.txt \\\n    -TI target.interval_list \\\n    -BI bait.interval_list \\\n    --PER_BASE_COVERAGE ${bam.baseName}.per_base_coverage.txt \\\n    -R ${fasta}\n    exonCoverage.py target.interval_list ${bam.baseName}.per_base_coverage.txt ${bam.baseName}_per_exon_coverage.txt\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "targetBED",
            "baitBED",
            "outname"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/Reports/${idSample}/exonCoverage/\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/${idSample}/exonCoverage\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "onTarget": {
        "name_process": "onTarget",
        "string_process": "\nprocess onTarget{\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/onTarget/\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/${idSample}/onTarget/\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n                                           \n    file(fasta)\n    file(fastaFai)\n    file(dict)\n    file(probes)\n    file(probes250)\n\n\n    output:\n    file(\"${bam.baseName}_on_target.txt\")\n\n    when: ! ('chco_qc' in _skip_qc)\n\n    script:\n    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${probes} -O probes.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${probes250} -O probes250.interval_list -SD ${dict}\n        bedtools intersect -a $bam -b ${probes250} | gatk --java-options -Xmx32G CollectHsMetrics \\\n    --VALIDATION_STRINGENCY SILENT \\\n        -I /dev/stdin \\\n        -O ${bam.baseName}_on_target.txt \\\n        -TI probes250.interval_list \\\n        -BI probes.interval_list \\\n        -R $fasta\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${probes} -O probes.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${probes250} -O probes250.interval_list -SD ${dict}\n        bedtools intersect -a $bam -b ${probes250} | gatk --java-options -Xmx32G CollectHsMetrics \\\n    --VALIDATION_STRINGENCY SILENT \\\n        -I /dev/stdin \\\n        -O ${bam.baseName}_on_target.txt \\\n        -TI probes250.interval_list \\\n        -BI probes.interval_list \\\n        -R $fasta\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/gatk",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "probes",
            "probes250"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/onTarget/\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/${idSample}/onTarget/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "insertSize": {
        "name_process": "insertSize",
        "string_process": "\nprocess insertSize{\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/insertSize/\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/${idSample}/insertSize\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n\n\n    output:\n    path \"${idSample}_insert_size_metrics.txt\", emit: files\n    file(\"${idSample}_insert_size_histogram.pdf\")\n\n    when: ! ('chco_qc' in _skip_qc)\n\n    script:\n    \"\"\"\n        gatk --java-options -Xmx32G CollectInsertSizeMetrics \\\n        -I $bam \\\n        -O ${idSample}_insert_size_metrics.txt \\\n        -H ${idSample}_insert_size_histogram.pdf \\\n        -M 0.5\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n        gatk --java-options -Xmx32G CollectInsertSizeMetrics \\\n        -I $bam \\\n        -O ${idSample}_insert_size_metrics.txt \\\n        -H ${idSample}_insert_size_histogram.pdf \\\n        -M 0.5\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/insertSize/\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/${idSample}/insertSize\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "dnaFingerprint": {
        "name_process": "dnaFingerprint",
        "string_process": "\nprocess dnaFingerprint{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_llab'\n    publishDir \"${params.outdir}/Reports/${idSample}/FingerPrinting/${type}/\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/${idSample}/FingerPrinting/${type}/\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n    file(finger_printing_sites)\n    val type\n\n\n    output:\n    file(\"${idSample}_DNA_Fingerprint.txt\")\n\n    when: ! ('chco_qc' in _skip_qc)\n\n    script:\n    \"\"\"\n        dnaFingerPrinting.py $bam $finger_printing_sites $idSample\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n        dnaFingerPrinting.py $bam $finger_printing_sites $idSample\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "finger_printing_sites",
            "type"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/Reports/${idSample}/FingerPrinting/${type}/\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/${idSample}/FingerPrinting/${type}/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "collectQC": {
        "name_process": "collectQC",
        "string_process": "\nprocess collectQC{\n    label 'container_py3_pandas'\n    publishDir \"${params.outdir}/Reports/${idSample}/FingerPrinting/\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode\n\n    cache false\n\n    input:\n    file(sample_file)\n    file(results_dir)\n    file(exon)\n    file(raw_exon)\n    file(insertsize)\n    file(fingerprint)\n    file(bcf)\n    file(unknown)\n\n    when: ! ('chco_qc' in _skip_qc)\n\n    output:\n    file(\"QC_Stats.xlsx\")\n\n\n    script:\n    \"\"\"\n        echo ${sample_file}\n        echo ${params.outdir}\n        echo ${params.input}\n        echo \\$PWD\n        collectQC.py ${sample_file} ${params.outdir} \\$PWD\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n        echo ${sample_file}\n        echo ${params.outdir}\n        echo ${params.input}\n        echo \\$PWD\n        collectQC.py ${sample_file} ${params.outdir} \\$PWD\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_file",
            "results_dir",
            "exon",
            "raw_exon",
            "insertsize",
            "fingerprint",
            "bcf",
            "unknown"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_py3_pandas'",
            "publishDir \"${params.outdir}/Reports/${idSample}/FingerPrinting/\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode",
            "cache false"
        ],
        "when": "",
        "stub": ""
    },
    "add_somalier_to_QC": {
        "name_process": "add_somalier_to_QC",
        "string_process": "\nprocess add_somalier_to_QC{\n    label 'container_py3_pandas'\n    publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode\n\n    input:\n    tuple file(html), file(pairs), file(samples)\n    file(pedigree)\n\tfile(pre_QC_stats)\n\n\n    when: ! ('chco_qc' in _skip_qc)\n\n    output:\n    file(\"QC_Stats*.xlsx\")\n\n\n    script:\n    \"\"\"\n        somalier_to_excel.py $pre_QC_stats $samples $pairs $pedigree\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n        somalier_to_excel.py $pre_QC_stats $samples $pairs $pedigree\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "html",
            "pairs",
            "samples",
            "pedigree",
            "pre_QC_stats"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_py3_pandas'",
            "publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "add_cohort_vc_to_qc_report": {
        "name_process": "add_cohort_vc_to_qc_report",
        "string_process": "\nprocess add_cohort_vc_to_qc_report{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_py3_pandas'\n\n    publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode\n\n    input:\n    tuple file(vcfgz), file(vcfgzindex)\n    file(qc_file)\n\n    output:\n    file('QC_Stats_*.xlsx')\n\n    script:\n    \"\"\"\n    zcat $vcfgz | add_sample_count_to_cohort_vcf.py > cohort_vcf_with_count_column.tsv\n    # add it to the QC report now\n    add_cohort_vcf_to_qc.py $qc_file cohort_vcf_with_count_column.tsv Cohort_VCF\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    zcat $vcfgz | add_sample_count_to_cohort_vcf.py > cohort_vcf_with_count_column.tsv\n    # add it to the QC report now\n    add_cohort_vcf_to_qc.py $qc_file cohort_vcf_with_count_column.tsv Cohort_VCF\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfgz",
            "vcfgzindex",
            "qc_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_py3_pandas'",
            "publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "add_cohort_CNVs_to_qc_report": {
        "name_process": "add_cohort_CNVs_to_qc_report",
        "string_process": "\nprocess add_cohort_CNVs_to_qc_report{\n    tag {idPatient + \"-\" + idSample}\n    label 'container_py3_pandas'\n\n    publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode\n\n    input:\n    file(vcf)\n    file(cnv_log)\n    file(qc_file)\n\n    output:\n    file('QC_Stats*.xlsx')\n\n    script:\n    \"\"\"\n    cat $vcf | add_sample_count_to_cohort_vcf.py > cohort_vcf_with_count_column.tsv\n    # add it to the QC report now\n    add_cohort_vcf_to_qc.py $qc_file cohort_vcf_with_count_column.tsv Merged_CNV $cnv_log\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    cat $vcf | add_sample_count_to_cohort_vcf.py > cohort_vcf_with_count_column.tsv\n    # add it to the QC report now\n    add_cohort_vcf_to_qc.py $qc_file cohort_vcf_with_count_column.tsv Merged_CNV $cnv_log\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf",
            "cnv_log",
            "qc_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "label 'container_py3_pandas'",
            "publishDir \"${params.outdir}/QC/collectQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "IndexBamFile": {
        "name_process": "IndexBamFile",
        "string_process": "\nprocess IndexBamFile {\n    label 'cpus_16'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n    \n    publishDir \"${params.outdir}/Preprocessing/${idSample}/Bams/\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam)\n\n    output:\n        tuple idPatient, idSample, file(bam), file(\"${bam.baseName}.bai\")\n\n                                \n\n    script:\n    \"\"\"\n    init.sh\n    samtools index ${bam}\n    mv ${bam}.bai ${bam.baseName}.bai\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    init.sh\n    samtools index ${bam}\n    mv ${bam}.bai ${bam.baseName}.bai\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/Bams/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatVCF": {
        "name_process": "ConcatVCF",
        "string_process": "\nprocess ConcatVCF {\n    label 'cpus_8'\n    label 'container_llab'\n    tag {variantCaller + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/${output_dir}\", mode: params.publish_dir_mode\n\n    input:\n        tuple variantCaller, idPatient, idSample, file(vcFiles)\n        file(fastaFai)\n        file(targetBED)\n        val(output_file_prefix)\n        val(output_file_ext)\n        val(output_dir)\n\n    output:\n                                                                                  \n                                                                                                                                  \n                                                                                                             \n        tuple variantCaller, idPatient, idSample, file(\"${outFile}.gz\"), \n            file(\"${outFile}.gz.tbi\"), emit: concatenated_vcf_with_index\n\n        tuple variantCaller, idPatient, idSample, file(\"${outFile}.gz\"), \n            emit: concatenated_vcf_without_index\n            \n    script:\n    outFile =  \"${output_file_prefix}${idSample}.${output_file_ext}\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    \"\"\"\n    init.sh\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outFile} ${options}\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    outFile =  \"${output_file_prefix}${idSample}.${output_file_ext}\"\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    \"\"\"\n    init.sh\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o ${outFile} ${options}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcFiles",
            "variantCaller",
            "fastaFai",
            "targetBED",
            "output_file_prefix",
            "output_file_ext",
            "output_dir"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_8'",
            "label 'container_llab'",
            "tag {variantCaller + \"-\" + idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/${output_dir}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildIntervals": {
        "name_process": "BuildIntervals",
        "string_process": "\nprocess BuildIntervals {\n  label 'container_llab'\n  tag {fastaFai}\n\n  publishDir params.outdir\n\n  input:\n    file(fastaFai)\n\n  output:\n    file(\"${fastaFai.baseName}.bed\")\n\n  when: !(params.intervals) && !('annotate' in step) && !(params.no_intervals)\n\n  script:\n  \"\"\"\n  init.sh\n  awk -v FS='\\t' -v OFS='\\t' '{ print \\$1, \\\"0\\\", \\$2 }' ${fastaFai} > ${fastaFai.baseName}.bed\n  \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "  \"\"\"\n  init.sh\n  awk -v FS='\\t' -v OFS='\\t' '{ print \\$1, \\\"0\\\", \\$2 }' ${fastaFai} > ${fastaFai.baseName}.bed\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastaFai"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {fastaFai}",
            "publishDir params.outdir"
        ],
        "when": "",
        "stub": ""
    },
    "CreateIntervalBeds": {
        "name_process": "CreateIntervalBeds",
        "string_process": "\nprocess CreateIntervalBeds {\n  label 'container_llab'\n    tag {intervals.fileName}\n\n    input:\n        file(intervals)\n\n    output:\n        file '*.bed'\n\n    when: (!params.no_intervals) && step != 'annotate'\n\n    script:\n                                                                             \n                                                                                  \n    if (hasExtension(intervals, \"bed\"))\n        \"\"\"\n        init.sh\n        awk -vFS=\"\\t\" '{\n          t = \\$5  # runtime estimate\n          if (t == \"\") {\n            # no runtime estimate in this row, assume default value\n            t = (\\$3 - \\$2) / ${params.nucleotides_per_second}\n          }\n          if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n            # start a new chunk\n            name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n            chunk = 0\n            longest = 0\n          }\n          if (t > longest)\n            longest = t\n          chunk += t\n          print \\$0 > name\n        }' ${intervals}\n        \"\"\"\n    else if (hasExtension(intervals, \"interval_list\"))\n        \"\"\"\n        init.sh\n        grep -v '^@' ${intervals} | awk -vFS=\"\\t\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }'\n        \"\"\"\n    else\n        \"\"\"\n        init.sh\n        awk -vFS=\"[:-]\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }' ${intervals}\n        \"\"\"\n}",
        "nb_lignes_process": 52,
        "string_script": "    if (hasExtension(intervals, \"bed\"))\n        \"\"\"\n        init.sh\n        awk -vFS=\"\\t\" '{\n          t = \\$5  # runtime estimate\n          if (t == \"\") {\n            # no runtime estimate in this row, assume default value\n            t = (\\$3 - \\$2) / ${params.nucleotides_per_second}\n          }\n          if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n            # start a new chunk\n            name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n            chunk = 0\n            longest = 0\n          }\n          if (t > longest)\n            longest = t\n          chunk += t\n          print \\$0 > name\n        }' ${intervals}\n        \"\"\"\n    else if (hasExtension(intervals, \"interval_list\"))\n        \"\"\"\n        init.sh\n        grep -v '^@' ${intervals} | awk -vFS=\"\\t\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }'\n        \"\"\"\n    else\n        \"\"\"\n        init.sh\n        awk -vFS=\"[:-]\" '{\n          name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n          printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n        }' ${intervals}\n        \"\"\"",
        "nb_lignes_script": 36,
        "language_script": "bash",
        "tools": [
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [
            "intervals"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {intervals.fileName}"
        ],
        "when": "",
        "stub": ""
    },
    "FilterBamRead1": {
        "name_process": "FilterBamRead1",
        "string_process": "\nprocess FilterBamRead1 {\n    label 'cpus_32'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample + \"_\" + idRun}\n\n    input:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\")\n        \n    output:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}_filtered_r1.bam\"), emit: filtered_reads\n\n    when: params.filter_bams\n    script:\n    if( params.remove_supplementary_reads)\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(first_of_pair and mapping_quality >=${params.bam_mapping_q} \\\n                and not ([XA] != null or [SA] != null)) \\\n                or second_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r1.bam\"\n        \"\"\"\n\n    else\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(first_of_pair and mapping_quality >=${params.bam_mapping_q}) \\\n                or second_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r1.bam\"\n        \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    if( params.remove_supplementary_reads)\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(first_of_pair and mapping_quality >=${params.bam_mapping_q} \\\n                and not ([XA] != null or [SA] != null)) \\\n                or second_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r1.bam\"\n        \"\"\"\n\n    else\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(first_of_pair and mapping_quality >=${params.bam_mapping_q}) \\\n                or second_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r1.bam\"\n        \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "Sambamba",
            "andi",
            "org",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/sambamba",
            "https://bio.tools/andi",
            "https://bio.tools/org",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            },
            {
                "name": "andi",
                "uri": "https://bio.tools/andi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0870",
                                "term": "Sequence distance matrix"
                            }
                        ]
                    }
                ],
                "description": "andi estimates the evolutionary distance between closely related genomes. These distances can be used to rapidly infer phylogenies for big sets of genomes. Because andi does not compute full alignments, it is so efficient that it scales even up to thousands of bacterial genomes.",
                "homepage": "https://github.com/EvolBioInf/andi"
            },
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample + \"_\" + idRun}"
        ],
        "when": "",
        "stub": ""
    },
    "FilterBamRead2": {
        "name_process": "FilterBamRead2",
        "string_process": "\nprocess FilterBamRead2 {\n    label 'cpus_32'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample + \"_\" + idRun}\n\n    input:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}.bam\")\n        \n    output:\n        tuple idPatient, idSample, idRun, file(\"${idSample}_${idRun}_filtered_r2.bam\"), emit: filtered_reads\n\n    when: params.filter_bams\n    script:\n    if( params.remove_supplementary_reads)\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(second_of_pair and mapping_quality >=${params.bam_mapping_q} \\\n                and not ([XA] != null or [SA] != null)) \\\n                or first_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r2.bam\"\n        \"\"\"\n    else\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(second_of_pair and mapping_quality >=${params.bam_mapping_q}) \\\n                or first_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r2.bam\"\n        \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    if( params.remove_supplementary_reads)\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(second_of_pair and mapping_quality >=${params.bam_mapping_q} \\\n                and not ([XA] != null or [SA] != null)) \\\n                or first_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r2.bam\"\n        \"\"\"\n    else\n        \"\"\"\n        init.sh\n        sambamba view -t ${task.cpus} -h \\\n            -F \"(second_of_pair and mapping_quality >=${params.bam_mapping_q}) \\\n                or first_of_pair\" \\\n                \"${idSample}_${idRun}.bam\" \\\n            | samtools sort -n --threads ${task.cpus} \\\n            | samtools fixmate - - \\\n            | samtools view -h -f0x02 > \"${idSample}_${idRun}_filtered_r2.bam\"\n        \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "Sambamba",
            "andi",
            "org",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/sambamba",
            "https://bio.tools/andi",
            "https://bio.tools/org",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            },
            {
                "name": "andi",
                "uri": "https://bio.tools/andi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0870",
                                "term": "Sequence distance matrix"
                            }
                        ]
                    }
                ],
                "description": "andi estimates the evolutionary distance between closely related genomes. These distances can be used to rapidly infer phylogenies for big sets of genomes. Because andi does not compute full alignments, it is so efficient that it scales even up to thousands of bacterial genomes.",
                "homepage": "https://github.com/EvolBioInf/andi"
            },
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample + \"_\" + idRun}"
        ],
        "when": "",
        "stub": ""
    },
    "MergeFilteredBamReads": {
        "name_process": "MergeFilteredBamReads",
        "string_process": "\nprocess MergeFilteredBamReads {\n    label 'cpus_32'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n\n    input:\n        tuple idPatient, idSample, idRun, file(partial_filtered_bams)\n\n    output:\n        tuple idPatient, idSample, idRun,  file(out_bam), file(\"${out_bam}.bai\"), emit: filtered_bam\n\n    when: (params.filter_bams)\n\n    script:\n     out_bam = \"${idSample}_${idRun}_filtered.bam\"\n                                  \n                            \n    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} -n -c -p merged.bam ${partial_filtered_bams}\n    samtools sort --threads ${task.cpus} merged.bam -o ${idSample}_${idRun}_filtered.bam\n    #samtools index  --threads ${task.cpus} ${idSample}_${idRun}_filtered.bam\n    samtools index   ${idSample}_${idRun}_filtered.bam\n    # cleaning\n    rm -f merged.bam\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "     out_bam = \"${idSample}_${idRun}_filtered.bam\"\n                                  \n                            \n    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} -n -c -p merged.bam ${partial_filtered_bams}\n    samtools sort --threads ${task.cpus} merged.bam -o ${idSample}_${idRun}_filtered.bam\n    #samtools index  --threads ${task.cpus} ${idSample}_${idRun}_filtered.bam\n    samtools index   ${idSample}_${idRun}_filtered.bam\n    # cleaning\n    rm -f merged.bam\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "partial_filtered_bams",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "FilterOutSecondaryAndSupplementaryReads": {
        "name_process": "FilterOutSecondaryAndSupplementaryReads",
        "string_process": "\nprocess FilterOutSecondaryAndSupplementaryReads {\n    label 'cpus_32'\n    label 'container_llab'\n    tag {idPatient + \"-\" + idSample}\n    input:\n        tuple idPatient, idSample, idRun,  file(\"${idSample}_${idRun}_filtered.bam\"), file(bai)\n\n    output:\n        tuple idPatient, idSample, idRun, file(out_bam),  emit: filtered_bam_mapped\n                                                                                              \n\n    when: (params.filter_bams)\n\n    script:\n    out_bam = \"${idSample}_${idRun}_pq${params.bam_mapping_q}.bam\"\n    bn = file(out_bam).baseName\n    out_bai = \"${bn}.bai\"\n                                                                        \n                                   \n\n    \"\"\"\n    #!/usr/bin/env python\n    import pysam\n    import shutil\n    import os\n    in_bam = \"${idSample}_${idRun}_filtered.bam\"\n    # pysam.index(\"--threads\", ${task.cpus}, in_bam)\n    #pysam.index(in_bam)\n    \n    fd_in_bam = pysam.AlignmentFile(in_bam, \"rb\")\n    fd_out_bam = pysam.AlignmentFile(\"uniq.bam\", \"wb\", template=fd_in_bam)\n    \n    # Store reads to the dictionary so only unique reads stay\n    reads_dict={}\n    for r in fd_in_bam.fetch():\n        reads_dict[(r.query_name, r.flag)] = r\n    \n    # iterate through the dict to write to the output bam file\n    for key, read in reads_dict.items():\n        fd_out_bam.write(read)\n    fd_in_bam.close()\n    fd_out_bam.close()\n    # Sort the file by coordinates\n    pysam.sort(\"-o\", \"${out_bam}\", \"--threads\", \"${task.cpus}\", \"uniq.bam\")\n    pysam.index(\"${out_bam}\")\n    shutil.move(\"${out_bam}.bai\", \"${out_bai}\")\n    # Cleanup\n    os.unlink(\"uniq.bam\")\n    \"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "    out_bam = \"${idSample}_${idRun}_pq${params.bam_mapping_q}.bam\"\n    bn = file(out_bam).baseName\n    out_bai = \"${bn}.bai\"\n                                                                        \n                                   \n\n    \"\"\"\n    #!/usr/bin/env python\n    import pysam\n    import shutil\n    import os\n    in_bam = \"${idSample}_${idRun}_filtered.bam\"\n    # pysam.index(\"--threads\", ${task.cpus}, in_bam)\n    #pysam.index(in_bam)\n    \n    fd_in_bam = pysam.AlignmentFile(in_bam, \"rb\")\n    fd_out_bam = pysam.AlignmentFile(\"uniq.bam\", \"wb\", template=fd_in_bam)\n    \n    # Store reads to the dictionary so only unique reads stay\n    reads_dict={}\n    for r in fd_in_bam.fetch():\n        reads_dict[(r.query_name, r.flag)] = r\n    \n    # iterate through the dict to write to the output bam file\n    for key, read in reads_dict.items():\n        fd_out_bam.write(read)\n    fd_in_bam.close()\n    fd_out_bam.close()\n    # Sort the file by coordinates\n    pysam.sort(\"-o\", \"${out_bam}\", \"--threads\", \"${task.cpus}\", \"uniq.bam\")\n    pysam.index(\"${out_bam}\")\n    shutil.move(\"${out_bam}.bai\", \"${out_bai}\")\n    # Cleanup\n    os.unlink(\"uniq.bam\")\n    \"\"\"",
        "nb_lignes_script": 34,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bai",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "tag {idPatient + \"-\" + idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "MantaSingle": {
        "name_process": "MantaSingle",
        "string_process": "\nprocess MantaSingle {\n    label 'container_sarek'\n    label 'cpus_32'\n                         \n\n    tag {idSample}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/Manta\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(fasta)\n        file(fastaFai)\n        file(targetBED)\n\n    output:\n        tuple val(\"Manta\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\")\n\n    when: 'manta_single' in tools\n\n    script:\n    beforeScript=\"\"\n                                                                                                                                               \n                                                                                     \n    options = params.target_bed ? \"--exome \" : \"\"\n    status = status_map[idPatient, idSample]\n    inputbam = status == 0 ? \"--bam\" : \"--tumorBam\"\n    vcftype = status == 0 ? \"diploid\" : \"tumor\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        ${inputbam} ${bam} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSample}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/${vcftype}SV.vcf.gz \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz\n    mv Manta/results/variants/${vcftype}SV.vcf.gz.tbi \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 51,
        "string_script": "    beforeScript=\"\"\n                                                                                                                                               \n                                                                                     \n    options = params.target_bed ? \"--exome \" : \"\"\n    status = status_map[idPatient, idSample]\n    inputbam = status == 0 ? \"--bam\" : \"--tumorBam\"\n    vcftype = status == 0 ? \"diploid\" : \"tumor\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n        ${inputbam} ${bam} \\\n        --reference ${fasta} \\\n        ${options} \\\n        --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${idSample}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${idSample}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/${vcftype}SV.vcf.gz \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz\n    mv Manta/results/variants/${vcftype}SV.vcf.gz.tbi \\\n        Manta_${idSample}.${vcftype}SV.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai",
            "targetBED"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_sarek'",
            "label 'cpus_32'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/Manta\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "StrelkaSingle": {
        "name_process": "StrelkaSingle",
        "string_process": "\nprocess StrelkaSingle {\n    label 'container_sarek'\n    label 'cpus_max'\n                         \n\n    tag {idSample}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/Strelka\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(fasta)\n        file(fastaFai)\n        file(targetBED)\n\n    output:\n        set val(\"Strelka\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\")\n\n    when: 'strelka' in tools\n\n    script:\n    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    init.sh\n    ${beforeScript}\n    configureStrelkaGermlineWorkflow.py \\\n        --bam ${bam} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/genome.*.vcf.gz \\\n        Strelka_${idSample}_genome.vcf.gz\n    mv Strelka/results/variants/genome.*.vcf.gz.tbi \\\n        Strelka_${idSample}_genome.vcf.gz.tbi\n    mv Strelka/results/variants/variants.vcf.gz \\\n        Strelka_${idSample}_variants.vcf.gz\n    mv Strelka/results/variants/variants.vcf.gz.tbi \\\n        Strelka_${idSample}_variants.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    beforeScript = params.target_bed ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.target_bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    init.sh\n    ${beforeScript}\n    configureStrelkaGermlineWorkflow.py \\\n        --bam ${bam} \\\n        --referenceFasta ${fasta} \\\n        ${options} \\\n        --runDir Strelka\n\n    python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n    mv Strelka/results/variants/genome.*.vcf.gz \\\n        Strelka_${idSample}_genome.vcf.gz\n    mv Strelka/results/variants/genome.*.vcf.gz.tbi \\\n        Strelka_${idSample}_genome.vcf.gz.tbi\n    mv Strelka/results/variants/variants.vcf.gz \\\n        Strelka_${idSample}_variants.vcf.gz\n    mv Strelka/results/variants/variants.vcf.gz.tbi \\\n        Strelka_${idSample}_variants.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai",
            "targetBED"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_sarek'",
            "label 'cpus_max'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/Strelka\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Mutect2TN": {
        "name_process": "Mutect2TN",
        "string_process": "\nprocess Mutect2TN{\n    label 'container_llab'\n    tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}\n    label 'cpus_2'\n\n    input:\n        tuple idPatient, \n            idSampleNormal, file(bamNormal), file(baiNormal),\n            idSampleTumor, file(bamTumor), file(baiTumor), \n            file(intervalBed)\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(germlineResource)\n        file(germlineResourceIndex)\n        file(ponSomatic)\n        file(ponSomaticIndex)\n\n    output:\n        tuple idPatient,\n            val(\"${idSampleTumor}_vs_${idSampleNormal}\"),\n            file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\"), emit: vcf\n        \n        tuple idPatient,\n            idSampleTumor,\n            idSampleNormal,\n            file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf.stats\"), emit: stats\n\n    when: 'mutect2' in tools\n\n    script:\n                                                                \n                                                                                                                    \n    PON = params.somatic_pon ? \"--panel-of-normals ${ponSomatic}\" : \"\"\n                \n    \"\"\"\n    init.sh\n    # Get raw calls\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta}\\\n      -I ${bamTumor}  -tumor ${idSampleTumor} \\\n      -I ${bamNormal} -normal ${idSampleNormal} \\\n      -L ${intervalBed} \\\n      --germline-resource ${germlineResource} \\\n      ${PON} \\\n      -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 48,
        "string_script": "    PON = params.somatic_pon ? \"--panel-of-normals ${ponSomatic}\" : \"\"\n                \n    \"\"\"\n    init.sh\n    # Get raw calls\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n      Mutect2 \\\n      -R ${fasta}\\\n      -I ${bamTumor}  -tumor ${idSampleTumor} \\\n      -I ${bamNormal} -normal ${idSampleNormal} \\\n      -L ${intervalBed} \\\n      --germline-resource ${germlineResource} \\\n      ${PON} \\\n      -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "pong",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/pong",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "pong",
                "uri": "https://bio.tools/pong",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3083",
                                    "term": "Pathway or network visualisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Freely available software package for post-processing output from clustering inference using population genetic data",
                "homepage": "http://brown.edu/Research/Ramachandran_Lab/projects/"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamNormal",
            "baiNormal",
            "bamTumor",
            "baiTumor",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "germlineResource",
            "germlineResourceIndex",
            "ponSomatic",
            "ponSomaticIndex"
        ],
        "nb_inputs": 13,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}",
            "label 'cpus_2'"
        ],
        "when": "",
        "stub": ""
    },
    "MergeMutect2TNStats": {
        "name_process": "MergeMutect2TNStats",
        "string_process": "\nprocess MergeMutect2TNStats {\n    label 'container_llab'\n    label 'cpus_16'\n    tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n                                                                                                                     \n        tuple idPatient, idSampleTumor, idSampleNormal, file(statsFiles)                         \n\n    output:\n        tuple idPatient,\n            val(\"${idSampleTumor}_vs_${idSampleNormal}\"),\n            file(\"${idSampleTumor}_vs_${idSampleNormal}.vcf.gz.stats\")\n\n    when: 'mutect2' in tools\n\n    script:     \n      stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSampleTumor}_vs_${idSampleNormal}.vcf.gz.stats\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "      stats = statsFiles.collect{ \"-stats ${it} \" }.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        MergeMutectStats \\\n        ${stats} \\\n        -O ${idSampleTumor}_vs_${idSampleNormal}.vcf.gz.stats\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GOstats",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gostats",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GOstats",
                "uri": "https://bio.tools/gostats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0582",
                                "term": "Ontology"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2884",
                                "term": "Plot"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_1772",
                                "term": "Score"
                            }
                        ]
                    }
                ],
                "description": "A set of tools for interacting with GO and microarray data. A variety of basic manipulation tools for graphs, hypothesis testing and other simple calculations.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GOstats.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "statsFiles",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTumor}_vs_${idSampleNormal}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "FilterMutect2TNCalls": {
        "name_process": "FilterMutect2TNCalls",
        "string_process": "\nprocess FilterMutect2TNCalls {\n    label 'container_llab'\n    label 'cpus_1'\n\n    tag {idSampleTN}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSampleTN}/Mutect2\", mode: params.publish_dir_mode\n\n    input:\n                                \n                                                                              \n                                                  \n                                                        \n        tuple idPatient, \n            idSampleTN, \n            file(unfiltered), file(unfilteredIndex),\n            file(\"${idSampleTN}.vcf.gz.stats\")\n                                                        \n        \n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(germlineResource)\n        file(germlineResourceIndex)\n                                            \n        \n    output:\n        tuple val(\"Mutect2\"), idPatient, idSampleTN,\n            file(\"filtered_mutect2_${idSampleTN}.vcf.gz\"),\n            file(\"filtered_mutect2_${idSampleTN}.vcf.gz.tbi\"),\n            file(\"filtered_mutect2_${idSampleTN}.vcf.gz.filteringStats.tsv\")\n\n                                             \n    when: 'mutect2' in tools\n\n    script:\n    \"\"\"\n    init.sh\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --stats ${idSampleTN}.vcf.gz.stats \\\n        -R ${fasta} \\\n        -O filtered_mutect2_${idSampleTN}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    \"\"\"\n    init.sh\n    # do the actual filtering\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n        FilterMutectCalls \\\n        -V ${unfiltered} \\\n        --stats ${idSampleTN}.vcf.gz.stats \\\n        -R ${fasta} \\\n        -O filtered_mutect2_${idSampleTN}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "unfiltered",
            "unfilteredIndex",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "germlineResource",
            "germlineResourceIndex"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "tag {idSampleTN}",
            "publishDir \"${params.outdir}/VariantCalling/${idSampleTN}/Mutect2\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "BaseRecalibrator": {
        "name_process": "BaseRecalibrator",
        "string_process": "\nprocess BaseRecalibrator {\n    label 'container_llab'\n                     \n    label 'cpus_8'\n                  \n                         \n    tag {idPatient + \"-\" + idSample + \"-\" + intervalBed.baseName}\n                                       \n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai), file(intervalBed)\n        file(fasta) \n        file(fastaFai)\n        file(dict)\n        file(dbsnp)\n        file(dbsnpIndex) \n        file(knownIndels)\n        file(knownIndelsIndex)\n\n    output:\n        tuple idPatient, idSample, file(\"${prefix}${idSample}.recal.table\")\n                                                          \n\n    script:\n    dbsnpOptions = params.dbsnp ? \"--known-sites ${dbsnp}\" : \"\"\n    knownOptions = params.known_indels ? knownIndels.collect{\"--known-sites ${it}\"}.join(' ') : \"\"\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n                            \n                                         \n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        BaseRecalibrator \\\n        -I ${bam} \\\n        -O ${prefix}${idSample}.recal.table \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        ${knownOptions} \\\n        --verbosity INFO\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "    dbsnpOptions = params.dbsnp ? \"--known-sites ${dbsnp}\" : \"\"\n    knownOptions = params.known_indels ? knownIndels.collect{\"--known-sites ${it}\"}.join(' ') : \"\"\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n                            \n                                         \n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        BaseRecalibrator \\\n        -I ${bam} \\\n        -O ${prefix}${idSample}.recal.table \\\n        -R ${fasta} \\\n        ${intervalsOptions} \\\n        ${dbsnpOptions} \\\n        ${knownOptions} \\\n        --verbosity INFO\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "dbsnp",
            "dbsnpIndex",
            "knownIndels",
            "knownIndelsIndex"
        ],
        "nb_inputs": 11,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {idPatient + \"-\" + idSample + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "GatherBQSRReports": {
        "name_process": "GatherBQSRReports",
        "string_process": "\nprocess GatherBQSRReports {\n    label 'container_llab'\n    label 'memory_singleCPU_2_task'\n    label 'cpus_8'\n    echo true\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/DuplicateMarked\", mode: params.publish_dir_mode, overwrite: false\n\n    input:\n        tuple idPatient, idSample, file(recal)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.recal.table\"), emit: recal_table\n                                                     \n\n    script:\n    input = recal.collect{\"-I ${it}\"}.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GatherBQSRReports \\\n        ${input} \\\n        -O ${idSample}.recal.table \\\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    input = recal.collect{\"-I ${it}\"}.join(' ')\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GatherBQSRReports \\\n        ${input} \\\n        -O ${idSample}.recal.table \\\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "wossinput",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/wossinput",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "recal",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'memory_singleCPU_2_task'",
            "label 'cpus_8'",
            "echo true",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/DuplicateMarked\", mode: params.publish_dir_mode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "ApplyBQSR": {
        "name_process": "ApplyBQSR",
        "string_process": "\nprocess ApplyBQSR {\n    label 'container_llab'\n    label 'memory_singleCPU_2_task'\n    label 'cpus_8'\n                      \n                         \n    tag {idPatient + \"-\" + idSample + \"-\" + intervalBed.baseName}\n                                        \n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai), file(recalibrationReport), file(intervalBed)\n        file(fasta)\n        file(fastaFai) \n        file(dict)\n\n    output:\n        tuple idPatient, idSample, file(\"${prefix}${idSample}.recal.bam\")\n\n    script:\n    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        ApplyBQSR \\\n        -R ${fasta} \\\n        --input ${bam} \\\n        --output ${prefix}${idSample}.recal.bam \\\n        ${intervalsOptions} \\\n        --bqsr-recal-file ${recalibrationReport}\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    prefix = params.no_intervals ? \"\" : \"${intervalBed.baseName}_\"\n    intervalsOptions = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        ApplyBQSR \\\n        -R ${fasta} \\\n        --input ${bam} \\\n        --output ${prefix}${idSample}.recal.bam \\\n        ${intervalsOptions} \\\n        --bqsr-recal-file ${recalibrationReport}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "recalibrationReport",
            "intervalBed",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict"
        ],
        "nb_inputs": 8,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'memory_singleCPU_2_task'",
            "label 'cpus_8'",
            "tag {idPatient + \"-\" + idSample + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBamRecal": {
        "name_process": "MergeBamRecal",
        "string_process": "\nprocess MergeBamRecal {\n    label 'container_llab'\n    label 'cpus_8'\n\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bai\"), emit: bam_recal\n        tuple idPatient, idSample, file(\"${idSample}.recal.bam\"), emit: bam_recal_qc\n                                                   \n\n                                   \n\n    script:\n    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} ${idSample}.recal.bam ${bam}\n    samtools index ${idSample}.recal.bam\n    mv ${idSample}.recal.bam.bai ${idSample}.recal.bai\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    init.sh\n    samtools merge --threads ${task.cpus} ${idSample}.recal.bam ${bam}\n    samtools index ${idSample}.recal.bam\n    mv ${idSample}.recal.bam.bai ${idSample}.recal.bai\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "IndexBamRecal": {
        "name_process": "IndexBamRecal",
        "string_process": "\nprocess IndexBamRecal {\n    label 'container_llab'\n    label 'cpus_8'\n\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(\"${idSample}.recal.bam\")\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bam.bai\"), emit: bam_recal\n        tuple idPatient, idSample, file(\"${idSample}.recal.bam\"), emit: bam_recal_qc\n        \n    when: params.no_intervals\n\n    script:\n    \"\"\"\n    init.sh\n    samtools index ${idSample}.recal.bam\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    init.sh\n    samtools index ${idSample}.recal.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/Recalibrated\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MarkDuplicates": {
        "name_process": "MarkDuplicates",
        "string_process": "\nprocess MarkDuplicates {\n    label 'container_llab'\n    label 'cpus_max'\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/${output_dir}/\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(\"${idSample}.bam\"), file(\"${idSample}.bai\")\n        val(output_dir)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.md.bam\"), file(\"${idSample}.md.bai\"), emit: marked_bams\n    when: step  ==  'mapping'\n\n    script:\n    \"\"\"\n    init.sh\n    samtools sort -n --threads ${task.cpus}  -O SAM  ${idSample}.bam | \\\n        samblaster -M --ignoreUnmated| \\\n        samtools sort --threads ${task.cpus}  -O BAM > ${idSample}.md.bam\n\n    samtools index ${idSample}.md.bam && \\\n        mv ${idSample}.md.bam.bai ${idSample}.md.bai\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    init.sh\n    samtools sort -n --threads ${task.cpus}  -O SAM  ${idSample}.bam | \\\n        samblaster -M --ignoreUnmated| \\\n        samtools sort --threads ${task.cpus}  -O BAM > ${idSample}.md.bam\n\n    samtools index ${idSample}.md.bam && \\\n        mv ${idSample}.md.bam.bai ${idSample}.md.bai\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "SAMBLASTER"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/samblaster"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "SAMBLASTER",
                "uri": "https://bio.tools/samblaster",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split-read mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool to mark duplicates and extract discordant and split reads from SAM files.",
                "homepage": "https://github.com/GregoryFaust/samblaster"
            }
        ],
        "inputs": [
            "idPatient",
            "output_dir"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_max'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/${output_dir}/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DV_Combined": {
        "name_process": "DV_Combined",
        "string_process": "\nprocess DV_Combined{\n    label \"cpus_max\"\n    label 'container_deepvariant'\n    tag \"${bam}\"\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/DeepVariant\", mode: params.publish_dir_mode\n    \n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n    file (fasta)\n    file (fai )\n    file (fastagz)\n    file (gzfai)\n    file (gzi)\n    file (target_bed)\n    \n    output:\n        tuple idPatient, idSample, file(\"${bam.baseName}.vcf\")\n        file(\"*.html\")\n\n    when: 'deepvariant' in tools\n    \n    script:\n    \"\"\"\n    /opt/deepvariant/bin/run_deepvariant \\\n    --model_type ${model} \\\n    --ref ${fasta} \\\n    --reads ${bam} \\\n     --regions ${target_bed} \\\n    --output_vcf \"${bam.baseName}.vcf\" \\\n    --num_shards ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n    /opt/deepvariant/bin/run_deepvariant \\\n    --model_type ${model} \\\n    --ref ${fasta} \\\n    --reads ${bam} \\\n     --regions ${target_bed} \\\n    --output_vcf \"${bam.baseName}.vcf\" \\\n    --num_shards ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fai",
            "fastagz",
            "gzfai",
            "gzi",
            "target_bed"
        ],
        "nb_inputs": 9,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label \"cpus_max\"",
            "label 'container_deepvariant'",
            "tag \"${bam}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/DeepVariant\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DV_MakeExamples": {
        "name_process": "DV_MakeExamples",
        "string_process": "\nprocess DV_MakeExamples{\n    label 'cpus_max'\n    label 'container_deepvariant'\n    tag \"${bam}\"\n    publishDir \"${params.outdir}/Preprocessing/${idSample}/DV_MakeExamples/\", mode: params.publish_dir_mode,\n    saveAs: {filename -> \"logs/log\"}\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n    file (fasta)\n    file (fai )\n    file (fastagz)\n    file (gzfai)\n    file (gzi)\n    file (target_bed)\n\n    output:\n    tuple idPatient, idSample, file(bam), file('*_shardedExamples'), emit: shared_examples\n    when: 'deepvariant' in tools\n    script:\n                                                         \n    use_regions = params.target_bed ? \"--regions ${target_bed}\" :  ''\n    \"\"\"\n    mkdir logs\n    mkdir ${bam.baseName}_shardedExamples\n    dv_make_examples.py \\\n    --cores ${task.cpus} \\\n    --sample ${bam} \\\n    --ref ${fastagz} \\\n    --reads ${bam} \\\n    ${use_regions} \\\n    --logdir logs \\\n    --examples ${bam.baseName}_shardedExamples\n\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    use_regions = params.target_bed ? \"--regions ${target_bed}\" :  ''\n    \"\"\"\n    mkdir logs\n    mkdir ${bam.baseName}_shardedExamples\n    dv_make_examples.py \\\n    --cores ${task.cpus} \\\n    --sample ${bam} \\\n    --ref ${fastagz} \\\n    --reads ${bam} \\\n    ${use_regions} \\\n    --logdir logs \\\n    --examples ${bam.baseName}_shardedExamples\n\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fai",
            "fastagz",
            "gzfai",
            "gzi",
            "target_bed"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_max'",
            "label 'container_deepvariant'",
            "tag \"${bam}\"",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/DV_MakeExamples/\", mode: params.publish_dir_mode , saveAs: {filename -> \"logs/log\"}"
        ],
        "when": "",
        "stub": ""
    },
    "DV_CallVariants": {
        "name_process": "DV_CallVariants",
        "string_process": "\nprocess DV_CallVariants{\n   label 'cpus_max'\n   label 'container_deepvariant'\n  tag \"${bam}\"\n\n  input:\n  tuple idPatient, idSample, file(bam), file(shardedExamples)\n\n  output:\n  tuple idPatient, idSample, file(bam), file('*_call_variants_output.tfrecord'), emit: variant_tf_records\n  \n\n  when: 'deepvariant' in tools\n  script:\n  \"\"\"\n    dv_call_variants.py \\\n    --cores ${task.cpus} \\\n    --sample ${bam} \\\n    --outfile ${bam.baseName}_call_variants_output.tfrecord \\\n    --examples $shardedExamples \\\n    --model ${model}\n\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "  \"\"\"\n    dv_call_variants.py \\\n    --cores ${task.cpus} \\\n    --sample ${bam} \\\n    --outfile ${bam.baseName}_call_variants_output.tfrecord \\\n    --examples $shardedExamples \\\n    --model ${model}\n\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "shardedExamples",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_max'",
            "label 'container_deepvariant'",
            "tag \"${bam}\""
        ],
        "when": "",
        "stub": ""
    },
    "DV_PostprocessVariants": {
        "name_process": "DV_PostprocessVariants",
        "string_process": "\nprocess DV_PostprocessVariants{\n\n  label 'cpus_32'\n  label 'container_deepvariant'\n  tag \"${bam}\"\n  publishDir \"${params.outdir}/VariantCalling/${idSample}/DeepVariant\", mode: params.publish_dir_mode\n\n  input:\n  tuple idPatient, idSample, file(bam), file(call_variants_tfrecord)\n                                                                             \n  file fastagz\n  file gzfai\n  file gzi\n\n  output:\n   tuple val('DeepVariant'), idPatient, idSample, file(\"${idSample}.vcf.gz\"), file(\"${idSample}.vcf.gz.tbi\") , emit: vcf\n   tuple val('DeepVariant'), idSample, file(\"${idSample}.vcf.gz\") , emit: vcf_to_annotate\n                                                   \n   file('*.html')\n\n  when: 'deepvariant' in tools\n  script:\n  \"\"\"\n  dv_postprocess_variants.py \\\n  --ref ${fastagz} \\\n  --infile ${call_variants_tfrecord} \\\n  --outfile \"${idSample}.vcf\" \\\n\n  bgzip \"${idSample}.vcf\"\n  tabix -p vcf \"${idSample}.vcf.gz\"\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  dv_postprocess_variants.py \\\n  --ref ${fastagz} \\\n  --infile ${call_variants_tfrecord} \\\n  --outfile \"${idSample}.vcf\" \\\n\n  bgzip \"${idSample}.vcf\"\n  tabix -p vcf \"${idSample}.vcf.gz\"\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "call_variants_tfrecord",
            "idPatient",
            "fastagz",
            "gzfai",
            "gzi"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_deepvariant'",
            "tag \"${bam}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/DeepVariant\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PreprocessIntervals": {
        "name_process": "PreprocessIntervals",
        "string_process": "\nprocess PreprocessIntervals {\n    label 'container_llab'\n    label 'cpus_8'\n    \n    input:    \n        file(intervalBed)\n        file(fasta)\n        file(fasta_fai)\n        file(dict)\n    \n    output:\n                                                                                    \n        file(\"preprocessed_intervals.interval_list\")\n\n                                                                             \n    when: ('gatk_cnv_somatic' in tools ||\n           'gatk_cnv_germline_cohort_mode' in tools ||\n           'gatk_cnv_germline' in tools\n           )\n    \n    script:\n    intervals_options = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    padding_options =  params.no_intervals ? \"--padding 0\" : \"--padding 250\"\n    bin_options =  params.no_intervals ? \"--bin-length 1000\" : \"--bin-length 0\"\n\n    \"\"\"\n    init.sh\n    gatk PreprocessIntervals \\\n        ${intervals_options} \\\n        ${padding_options} \\\n        ${bin_options} \\\n        -R ${fasta} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        -O preprocessed_intervals.interval_list\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    intervals_options = params.no_intervals ? \"\" : \"-L ${intervalBed}\"\n    padding_options =  params.no_intervals ? \"--padding 0\" : \"--padding 250\"\n    bin_options =  params.no_intervals ? \"--bin-length 1000\" : \"--bin-length 0\"\n\n    \"\"\"\n    init.sh\n    gatk PreprocessIntervals \\\n        ${intervals_options} \\\n        ${padding_options} \\\n        ${bin_options} \\\n        -R ${fasta} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        -O preprocessed_intervals.interval_list\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "intervalBed",
            "fasta",
            "fasta_fai",
            "dict"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'"
        ],
        "when": "",
        "stub": ""
    },
    "CollectReadCounts": {
        "name_process": "CollectReadCounts",
        "string_process": "\nprocess CollectReadCounts {\n    label 'container_llab'\n    label 'cpus_32'\n    tag \"${idSample}\"\n    \n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(preprocessed_intervals)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.counts.hdf5\"), emit: 'sample_read_counts'\n\n    when: ('gatk_cnv_somatic' in tools ||\n           'gatk_cnv_germline_cohort_mode' in tools ||\n           'gatk_cnv_germline' in tools\n           )\n\n    script:\n    \"\"\"\n    init.sh\n    gatk CollectReadCounts \\\n        -I ${bam} \\\n        -L ${preprocessed_intervals} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        -O ${idSample}.counts.hdf5\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    init.sh\n    gatk CollectReadCounts \\\n        -I ${bam} \\\n        -L ${preprocessed_intervals} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        -O ${idSample}.counts.hdf5\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "preprocessed_intervals"
        ],
        "nb_inputs": 4,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "tag \"${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "AnnotateIntervals": {
        "name_process": "AnnotateIntervals",
        "string_process": "\nprocess AnnotateIntervals {\n    label 'container_llab'\n    label 'cpus_16'\n    publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode\n    input:\n        file(fasta)\n        file(fasta_fai)\n        file(dict)\n        file(preprocessed_intervals)\n\n    output:\n        file(\"preprocessed_intervals.annotated.tsv\")\n\n    when: ('gatk_gcnv_cohort_mode' in tools)\n\n    script:\n    \"\"\"\n    init.sh\n     gatk AnnotateIntervals \\\n        -L ${preprocessed_intervals} \\\n        -R ${fasta} \\\n        -imr OVERLAPPING_ONLY \\\n        -O preprocessed_intervals.annotated.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    init.sh\n     gatk AnnotateIntervals \\\n        -L ${preprocessed_intervals} \\\n        -R ${fasta} \\\n        -imr OVERLAPPING_ONLY \\\n        -O preprocessed_intervals.annotated.tsv\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "fasta",
            "fasta_fai",
            "dict",
            "preprocessed_intervals"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "FilterIntervals": {
        "name_process": "FilterIntervals",
        "string_process": "\nprocess FilterIntervals {\n    label 'container_llab'\n    label 'cpus_16'\n    echo true\n    publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode\n    input:\n        file(preprocessed_intervals)\n        file(annotated_intervals)\n        file(\"cvg/*\")\n\n    output:\n        file(\"cohort.gc.filtered.interval_list\")\n        \n\n    when: ('gatk_gcnv_cohort_mode' in tools)\n\n    script:\n    \"\"\"\n    init.sh\n    #cvg_opts=''\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n    \n    #echo \"my cvg_opts: \\$cvg_opts\"\n    \n    gatk FilterIntervals \\\n        -L ${preprocessed_intervals} \\\n        --annotated-intervals ${annotated_intervals} \\\n        --arguments_file args.list \\\n        -imr OVERLAPPING_ONLY \\\n        -O cohort.gc.filtered.interval_list\n\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    init.sh\n    #cvg_opts=''\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n    \n    #echo \"my cvg_opts: \\$cvg_opts\"\n    \n    gatk FilterIntervals \\\n        -L ${preprocessed_intervals} \\\n        --annotated-intervals ${annotated_intervals} \\\n        --arguments_file args.list \\\n        -imr OVERLAPPING_ONLY \\\n        -O cohort.gc.filtered.interval_list\n\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "preprocessed_intervals",
            "annotated_intervals"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "echo true",
            "publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DetermineGermlineContigPloidyCohortMode": {
        "name_process": "DetermineGermlineContigPloidyCohortMode",
        "string_process": "\nprocess DetermineGermlineContigPloidyCohortMode {\n                             \n    label 'container_gatk'\n    label 'cpus_32'\n                \n    publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode\n    input:\n        file(filterd_intervals)\n        file(all_contig_ploidy_priors)\n        file(\"cvg/\")\n        \n\n    output:\n        file(\"ploidy-calls\")\n        file(\"ploidy-model\")\n\n    when:  'gatk_gcnv_cohort_mode' in tools \n\n    script:\n    \"\"\"\n    init.sh\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n\n    gatk DetermineGermlineContigPloidy \\\n    -L ${filterd_intervals} \\\n    --interval-merging-rule OVERLAPPING_ONLY \\\n    --arguments_file args.list \\\n    --contig-ploidy-priors ${all_contig_ploidy_priors} \\\n    --output . \\\n    --output-prefix ploidy \\\n    --verbosity DEBUG\n\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    init.sh\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n\n    gatk DetermineGermlineContigPloidy \\\n    -L ${filterd_intervals} \\\n    --interval-merging-rule OVERLAPPING_ONLY \\\n    --arguments_file args.list \\\n    --contig-ploidy-priors ${all_contig_ploidy_priors} \\\n    --output . \\\n    --output-prefix ploidy \\\n    --verbosity DEBUG\n\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "filterd_intervals",
            "all_contig_ploidy_priors"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_gatk'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/Preprocessing/gatk_gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DetermineGermlineContigPloidyCaseMode": {
        "name_process": "DetermineGermlineContigPloidyCaseMode",
        "string_process": "\nprocess DetermineGermlineContigPloidyCaseMode {\n                             \n    label 'container_gatk'\n    label 'cpus_32'\n    \n    publishDir \"${params.outdir}/Preprocessing/${idSample}/GATK_gcnv/\", mode: params.publish_dir_mode\n    input:\n        tuple idPatient, idSample, file(sample_cvg)\n        file(ploidy_model)\n\n    output:\n        tuple idPatient, idSample, file(\"ploidy-case-calls\")\n\n    when: ( 'gatk_gcnv' in tools )\n\n    script:\n     \n    \"\"\"\n    init.sh\n    gatk DetermineGermlineContigPloidy \\\n    --model ${ploidy_model} \\\n        -I ${sample_cvg} \\\n        -O . \\\n        --output-prefix ploidy-case \\\n        --verbosity DEBUG\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    init.sh\n    gatk DetermineGermlineContigPloidy \\\n    --model ${ploidy_model} \\\n        -I ${sample_cvg} \\\n        -O . \\\n        --output-prefix ploidy-case \\\n        --verbosity DEBUG\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample_cvg",
            "idPatient",
            "ploidy_model"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_gatk'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/GATK_gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "GermlineCNVCallerCohortMode": {
        "name_process": "GermlineCNVCallerCohortMode",
        "string_process": "\nprocess GermlineCNVCallerCohortMode {\n                             \n    label 'container_gatk'\n    label 'cpus_32'\n    publishDir \"${params.outdir}/Preprocessing/GATK_gcnv/\", mode: params.publish_dir_mode\n    input:\n        file(annotated_intervals)\n        file(filtered_intervals)\n        file(ploidy_calls)\n        file(\"cvg/*\")\n\n    output:\n        file(\"gcnv_model\")\n\n    when:  'gatk_gcnv_cohort_mode' in tools \n\n    script:\n     \n    \"\"\"\n    init.sh\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n    gatk GermlineCNVCaller \\\n        --run-mode COHORT \\\n        -L ${filtered_intervals} \\\n        --arguments_file args.list \\\n        --contig-ploidy-calls ${ploidy_calls} \\\n        --annotated-intervals ${annotated_intervals} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        --output gcnv_model \\\n        --output-prefix gcnv_model \\\n        --verbosity DEBUG\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    init.sh\n    for x in `ls cvg/*.tsv`\n    do\n        echo -n \"-I \\$x \" >> args.list\n    done\n    gatk GermlineCNVCaller \\\n        --run-mode COHORT \\\n        -L ${filtered_intervals} \\\n        --arguments_file args.list \\\n        --contig-ploidy-calls ${ploidy_calls} \\\n        --annotated-intervals ${annotated_intervals} \\\n        --interval-merging-rule OVERLAPPING_ONLY \\\n        --output gcnv_model \\\n        --output-prefix gcnv_model \\\n        --verbosity DEBUG\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "annotated_intervals",
            "filtered_intervals",
            "ploidy_calls"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_gatk'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/Preprocessing/GATK_gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "GermlineCNVCallerCaseMode": {
        "name_process": "GermlineCNVCallerCaseMode",
        "string_process": "\nprocess GermlineCNVCallerCaseMode {\n                             \n    label 'container_gatk'\n    label 'cpus_32'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/gcnv/\", mode: params.publish_dir_mode\n    input:\n        tuple idPatient, idSample, file(sample_cvg), file(case_ploidy_calls)\n        file(gcnv_cohort_model)\n        file(filtered_intervals)\n                             \n        \n\n    output:\n        file(\"gCNV_model\")\n\n    when: ( 'gatk_gcnv' in tools )\n\n    script:\n     \n    \"\"\"\n    init.sh\n     gatk GermlineCNVCaller \\\n        --run-mode CASE \\\n        -I ${sample_cvg} \\\n        --contig-ploidy-calls ${case_ploidy_calls} \\\n        --model ${gcnv_cohort_model} \\\n        --output \"${idSample}_vs_cohort\" \\\n        --output-prefix  ${idSample}_vs_cohort\\\n        --verbosity DEBUG\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    init.sh\n     gatk GermlineCNVCaller \\\n        --run-mode CASE \\\n        -I ${sample_cvg} \\\n        --contig-ploidy-calls ${case_ploidy_calls} \\\n        --model ${gcnv_cohort_model} \\\n        --output \"${idSample}_vs_cohort\" \\\n        --output-prefix  ${idSample}_vs_cohort\\\n        --verbosity DEBUG\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample_cvg",
            "case_ploidy_calls",
            "idPatient",
            "gcnv_cohort_model",
            "filtered_intervals"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_gatk'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/gcnv/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SamtoolsStats": {
        "name_process": "SamtoolsStats",
        "string_process": "\nprocess SamtoolsStats {\n    label 'container_llab'\n    label 'cpus_2'\n\n    tag {idPatient + \"-\" + idSample}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/SamToolsStats\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam)\n\n    output:\n        file (\"${bam}.samtools.stats.out\")\n\n                                      \n\n    script:\n    \"\"\"\n    init.sh\n    samtools stats ${bam} > ${bam}.samtools.stats.out\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    init.sh\n    samtools stats ${bam} > ${bam}.samtools.stats.out\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_2'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/SamToolsStats\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CollectAlignmentSummaryMetrics": {
        "name_process": "CollectAlignmentSummaryMetrics",
        "string_process": "\nprocess CollectAlignmentSummaryMetrics{\n    label 'container_llab'\n    label 'cpus_16'\n    tag {idPatient + \"-\" + idSample}\n    \n    publishDir \"${params.outdir}/Reports/${idSample}/alignment_summary/\", mode: params.publish_dir_mode\n    \n    input:\n    tuple idPatient, idSample, file(bam) \n    file(fasta) \n    file(fastaFai)\n    file(dict)\n\n    output:\n    file(\"${bam.baseName}_alignment_metrics.txt\")\n    \n                                                \n    \n    script:\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx32G CollectAlignmentSummaryMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}_alignment_metrics.txt \\\n    -R ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    init.sh\n    gatk --java-options -Xmx32G CollectAlignmentSummaryMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}_alignment_metrics.txt \\\n    -R ${fasta}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/alignment_summary/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CollectInsertSizeMetrics": {
        "name_process": "CollectInsertSizeMetrics",
        "string_process": "\nprocess CollectInsertSizeMetrics{\n    label 'container_llab'\n    label 'cpus_16'\n    tag {idPatient + \"-\" + idSample}\n    \n    publishDir \"${params.outdir}/Reports/${idSample}/insert_size_metrics/\", mode: params.publish_dir_mode\n    \n    input:\n    tuple idPatient, idSample, file(bam)\n\n    output:\n    file(\"${bam.baseName}_insert_size_metrics.txt\")\n    file(\"${bam.baseName}_insert_size_histogram.pdf\")\n    \n    \n                                                 \n\n    script:\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx32G CollectInsertSizeMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}_insert_size_metrics.txt \\\n    -H ${bam.baseName}_insert_size_histogram.pdf \n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    init.sh\n    gatk --java-options -Xmx32G CollectInsertSizeMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}_insert_size_metrics.txt \\\n    -H ${bam.baseName}_insert_size_histogram.pdf \n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/insert_size_metrics/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CollectHsMetrics": {
        "name_process": "CollectHsMetrics",
        "string_process": "\nprocess CollectHsMetrics{\n    label 'container_llab'\n    label 'cpus_16'\n    tag {idPatient + \"-\" + idSample}\n    \n    publishDir \"${params.outdir}/Reports/${idSample}/hs_metrics/\", mode: params.publish_dir_mode\n    \n    input:\n                                                      \n    tuple idPatient, idSample, file(bam)\n    file(fasta) \n    file(fastaFai)\n    file(dict)\n    file(targetBED)\n    file(baitBED)\n                          \n\n    output:\n    file(\"${bam.baseName}.txt\")\n                                                   \n    \n    \n                                                           \n    script:\n    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${targetBED} -O target.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${baitBED} -O bait.interval_list -SD ${dict}\n\n    gatk --java-options -Xmx32G CollectHsMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}.txt \\\n    -TI target.interval_list \\\n    -BI bait.interval_list \\\n    -R ${fasta}\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    init.sh\n    gatk BedToIntervalList -I ${targetBED} -O target.interval_list -SD ${dict}\n    gatk BedToIntervalList -I ${baitBED} -O bait.interval_list -SD ${dict}\n\n    gatk --java-options -Xmx32G CollectHsMetrics --VALIDATION_STRINGENCY LENIENT \\\n    -I ${bam} \\\n    -O ${bam.baseName}.txt \\\n    -TI target.interval_list \\\n    -BI bait.interval_list \\\n    -R ${fasta}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "targetBED",
            "baitBED"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/hs_metrics/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "alamut": {
        "name_process": "alamut",
        "string_process": "process alamut{\n    label 'cpus_32'\n    publishDir \"${params.outdir}/Annotation/${idSample}/Alamut/\", mode: params.publish_dir_mode\n\n    input:\n                                            \n    tuple variantCaller, idPatient, idSample, file(vcfgz), file(vcfgzi)\n\n    output:\n    file(\"${idSample}_alamut_annotation.tsv\")\n        file(\"${idSample}_unannotated.tsv\")\n        file(\"alamut.output\")\n\n    script:\n    \"\"\" \n        cp $vcfgz temp.vcf.gz\n        gunzip temp.vcf.gz\n        #vcf=\\$( echo $vcfgz | sed -e 's/.gz//g')\n        alamut.py temp.vcf $idSample\n    \"\"\" \n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\" \n        cp $vcfgz temp.vcf.gz\n        gunzip temp.vcf.gz\n        #vcf=\\$( echo $vcfgz | sed -e 's/.gz//g')\n        alamut.py temp.vcf $idSample\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfgz",
            "vcfgzi",
            "variantCaller"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/Annotation/${idSample}/Alamut/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PrepareTargets": {
        "name_process": "PrepareTargets",
        "string_process": "\nprocess PrepareTargets{\n    label 'cpus_8'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode\n    \n    input:\n                      \n                         \n        file(targetBED)\n    \n    output:\n    file(\"cnvkit_targets.bed\")\n\n    when: ('cnvkit_single' in tools ) || ('cnvkit_gen_ref' in tools )  \n\n    script:\n    \n    \"\"\"\n    init.sh\n    # Generate the targets.bed\n    cnvkit.py target ${targetBED} --split -o cnvkit_targets_with_chr.bed\n    # remove the chr from the chromosoms\n    cat cnvkit_targets_with_chr.bed | sed 's/^chr//' > cnvkit_targets.bed\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    init.sh\n    # Generate the targets.bed\n    cnvkit.py target ${targetBED} --split -o cnvkit_targets_with_chr.bed\n    # remove the chr from the chromosoms\n    cat cnvkit_targets_with_chr.bed | sed 's/^chr//' > cnvkit_targets.bed\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "targetBED"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_8'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PrepareAntiTargets": {
        "name_process": "PrepareAntiTargets",
        "string_process": "\nprocess PrepareAntiTargets{\n    label 'cpus_8'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode\n    \n    input:\n                      \n                         \n        file(targetBED)\n    \n    output:\n    file(\"cnvkit_antitargets.bed\")\n\n    when: ('cnvkit_single' in tools ) || ('cnvkit_gen_ref' in tools )  \n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py antitarget ${targetBED}  -o cnvkit_antitargets_with_chr.bed\n    cat cnvkit_antitargets_with_chr.bed | sed 's/^chr//' > cnvkit_antitargets.bed\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py antitarget ${targetBED}  -o cnvkit_antitargets_with_chr.bed\n    cat cnvkit_antitargets_with_chr.bed | sed 's/^chr//' > cnvkit_antitargets.bed\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "targetBED"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_8'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PrepareFlatReference": {
        "name_process": "PrepareFlatReference",
        "string_process": "\nprocess PrepareFlatReference{\n    label 'cpus_8'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode\n    \n    input:\n        file(fasta)\n        file(fastaFai)\n        file(cnvkit_target)\n        file(cnvkit_antitarget)\n    \n    output:\n    file(\"flat_reference.cnn\")\n\n    when: !params.cnvkit_ref && 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py reference -o flat_reference.cnn -f ${fasta} -t ${cnvkit_target} -a ${cnvkit_antitarget}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py reference -o flat_reference.cnn -f ${fasta} -t ${cnvkit_target} -a ${cnvkit_antitarget}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta",
            "fastaFai",
            "cnvkit_target",
            "cnvkit_antitarget"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_8'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/CNVKit_preprocessing\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SampleTargetCoverage": {
        "name_process": "SampleTargetCoverage",
        "string_process": "\nprocess SampleTargetCoverage{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n                      \n                         \n        file(cnvkit_targets)\n    \n    output:\n                                                                                                                   \n    tuple idPatient, idSample, file(\"${idSample}.targetcoverage.cnn\")\n\n    when: ('cnvkit_single' in tools ) || ('cnvkit_gen_ref' in tools )  \n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py coverage ${bam} ${cnvkit_targets} -o ${idSample}.targetcoverage.cnn\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py coverage ${bam} ${cnvkit_targets} -o ${idSample}.targetcoverage.cnn\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "cnvkit_targets"
        ],
        "nb_inputs": 4,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SampleAntiTargetCoverage": {
        "name_process": "SampleAntiTargetCoverage",
        "string_process": "\nprocess SampleAntiTargetCoverage{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n                      \n                         \n        file(cnvkit_antitargets)\n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}.antitargetcoverage.cnn\")\n\n   when: ('cnvkit_single' in tools ) || ('cnvkit_gen_ref' in tools )  \n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py coverage ${bam} ${cnvkit_antitargets} -o ${idSample}.antitargetcoverage.cnn\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py coverage ${bam} ${cnvkit_antitargets} -o ${idSample}.antitargetcoverage.cnn\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "cnvkit_antitargets"
        ],
        "nb_inputs": 4,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "FixForBiases": {
        "name_process": "FixForBiases",
        "string_process": "\nprocess FixForBiases{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(target_coverage), file(antitarget_coverage)\n        file(cnvkit_ref)\n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}.cnr\")\n\n    when: 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py fix ${target_coverage} ${antitarget_coverage} ${cnvkit_ref} -o ${idSample}.cnr\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py fix ${target_coverage} ${antitarget_coverage} ${cnvkit_ref} -o ${idSample}.cnr\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "target_coverage",
            "antitarget_coverage",
            "idPatient",
            "cnvkit_ref"
        ],
        "nb_inputs": 4,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Segment": {
        "name_process": "Segment",
        "string_process": "\nprocess Segment{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(sample_cnr)\n        \n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}.cns\")\n    tuple idPatient, idSample, file(sample_cnr), file(\"${idSample}.cns\")\n                                                                    \n                                                                                             \n\n    when: 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py segment ${sample_cnr} -o ${idSample}.cns\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py segment ${sample_cnr} -o ${idSample}.cns\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_cnr",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient",
            "sample_cnr"
        ],
        "nb_outputs": 2,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CallSegment": {
        "name_process": "CallSegment",
        "string_process": "\nprocess CallSegment{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(sample_cns)\n        \n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}.called.cns\")\n                                                                           \n                                                                    \n                                                                                             \n\n    when: 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py call ${sample_cns} -o ${idSample}.called.cns\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py call ${sample_cns} -o ${idSample}.called.cns\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_cns",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Scatter": {
        "name_process": "Scatter",
        "string_process": "\nprocess Scatter{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(sample_cnr), file(sample_cns) \n        \n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}_scatter.pdf\")\n\n    when: 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py scatter ${sample_cnr} -s ${sample_cns} -o ${idSample}_scatter.pdf\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py scatter ${sample_cnr} -s ${sample_cns} -o ${idSample}_scatter.pdf\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_cnr",
            "sample_cns",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Diagram": {
        "name_process": "Diagram",
        "string_process": "\nprocess Diagram{\n    label 'cpus_16'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(sample_cnr), file(sample_cns)\n        \n    \n    output:\n    tuple idPatient, idSample, file(\"${idSample}_diagram.pdf\")\n\n    when: 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py diagram ${sample_cnr} -s ${sample_cns} -o ${idSample}_diagram.pdf\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py diagram ${sample_cnr} -s ${sample_cns} -o ${idSample}_diagram.pdf\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_cnr",
            "sample_cns",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_16'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CNVKitSingle": {
        "name_process": "CNVKitSingle",
        "string_process": "\nprocess CNVKitSingle{\n    label 'cpus_8'\n    label 'container_llab'\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(fasta)\n        file(fastaFai)\n        file(cnvkit_ref)\n                          \n    \n    output:\n    tuple val(\"cnvkit_single\"), idPatient, idSample, file(\"*\")\n\n    when: params.cnvkit_ref && 'cnvkit_single' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    cnvkit.py batch ${bam} \\\n        --reference ${cnvkit_ref} \\\n        --scatter \\\n        --diagram\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    init.sh\n    cnvkit.py batch ${bam} \\\n        --reference ${cnvkit_ref} \\\n        --scatter \\\n        --diagram\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai",
            "cnvkit_ref"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_8'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CNVKit\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "TIDDIT": {
        "name_process": "TIDDIT",
        "string_process": "\nprocess TIDDIT {\n    label 'container_sarek'\n    tag {idSample}\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}/TIDDIT\", mode: params.publish_dir_mode\n\n    publishDir params.outdir, mode: params.publish_dir_mode,\n        saveAs: {\n            if (it == \"TIDDIT_${idSample}.vcf\") \"VariantCalling/${idSample}/TIDDIT/${it}\"\n            else \"Reports/${idSample}/TIDDIT/${it}\"\n        }\n\n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n        file(fasta) \n        file(fastaFai)\n\n    output:\n        tuple val(\"TIDDIT\"), idPatient, idSample, file(\"*.vcf.gz\"), file(\"*.tbi\"), emit: vcfTIDDIT\n        tuple file(\"TIDDIT_${idSample}.old.vcf\"), file(\"TIDDIT_${idSample}.ploidy.tab\"), file(\"TIDDIT_${idSample}.signals.tab\"), file(\"TIDDIT_${idSample}.wig\"), file(\"TIDDIT_${idSample}.gc.wig\"), emit: tidditOut\n\n    when: 'tiddit' in tools\n\n    script:\n    \"\"\"\n    tiddit --sv -o TIDDIT_${idSample} --bam ${bam} --ref ${fasta}\n\n    mv TIDDIT_${idSample}.vcf TIDDIT_${idSample}.old.vcf\n\n    grep -E \"#|PASS\" TIDDIT_${idSample}.old.vcf > TIDDIT_${idSample}.vcf\n\n    bgzip --threads ${task.cpus} -c TIDDIT_${idSample}.vcf > TIDDIT_${idSample}.vcf.gz\n\n    tabix TIDDIT_${idSample}.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    tiddit --sv -o TIDDIT_${idSample} --bam ${bam} --ref ${fasta}\n\n    mv TIDDIT_${idSample}.vcf TIDDIT_${idSample}.old.vcf\n\n    grep -E \"#|PASS\" TIDDIT_${idSample}.old.vcf > TIDDIT_${idSample}.vcf\n\n    bgzip --threads ${task.cpus} -c TIDDIT_${idSample}.vcf > TIDDIT_${idSample}.vcf.gz\n\n    tabix TIDDIT_${idSample}.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "TIDDIT",
            "PASS"
        ],
        "tools_url": [
            "https://bio.tools/tiddit",
            "https://bio.tools/pass"
        ],
        "tools_dico": [
            {
                "name": "TIDDIT",
                "uri": "https://bio.tools/tiddit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Efficient and comprehensive structural variant caller for massive parallel sequencing data. Identify chromosomal rearrangements using Mate Pair or Paired End sequencing data. It allows identification of intra and inter-chromosomal translocations, deletions, tandem-duplications and inversions, using supplementary alignments as well as discordant pairs.",
                "homepage": "https://github.com/J35P312/TIDDIT"
            },
            {
                "name": "PASS",
                "uri": "https://bio.tools/pass",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PASS: a program to align short sequences",
                "homepage": "http://pass.cribi.unipd.it/cgi-bin/pass.pl"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "fasta",
            "fastaFai"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_sarek'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/TIDDIT\", mode: params.publish_dir_mode",
            "publishDir params.outdir, mode: params.publish_dir_mode , saveAs: { if (it == \"TIDDIT_${idSample}.vcf\") \"VariantCalling/${idSample}/TIDDIT/${it}\" else \"Reports/${idSample}/TIDDIT/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "BcftoolsStats": {
        "name_process": "BcftoolsStats",
        "string_process": "\nprocess BcftoolsStats {\n    label 'container_llab'\n    label 'cpus_8'\n\n    tag {\"${variantCaller} - ${vcf}\"}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/BCFToolsStats/${variantCaller}\", mode: params.publish_dir_mode\n    publishDir \"${params.outdir}/QC/${idSample}/BCFTools/${variantCaller}\", mode: params.publish_dir_mode\n\n    input:\n                                                   \n        tuple variantCaller, idPatient, idSample, file(vcf) , file(vcf_tbi)\n\n    output:\n                                                                 \n        file (\"*.bcf.tools.stats.out\")\n\n    when: !('bcftools' in skip_qc)\n\n    script:\n    \"\"\"\n    init.sh\n    bcftools stats ${vcf} > ${reduceVCF(vcf.fileName)}.bcf.tools.stats.out\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    init.sh\n    bcftools stats ${vcf} > ${reduceVCF(vcf.fileName)}.bcf.tools.stats.out\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcf",
            "vcf_tbi",
            "variantCaller"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {\"${variantCaller} - ${vcf}\"}",
            "publishDir \"${params.outdir}/Reports/${idSample}/BCFToolsStats/${variantCaller}\", mode: params.publish_dir_mode",
            "publishDir \"${params.outdir}/QC/${idSample}/BCFTools/${variantCaller}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "Vcftools": {
        "name_process": "Vcftools",
        "string_process": "\nprocess Vcftools {\n    label 'container_llab'\n    label 'cpus_8'\n\n    tag {\"${variantCaller} - ${vcf}\"}\n\n    publishDir \"${params.outdir}/Reports/${idSample}/VCFTools/${variantCaller}\", mode: params.publish_dir_mode\n\n    input:\n        tuple variantCaller, idPatient, idSample, file(vcf) , file(vcf_tbi)\n\n    output:\n        file (\"${reduceVCF(vcf.fileName)}.*\")\n\n    when: !('vcftools' in skip_qc)\n\n    script:\n    \"\"\"\n    init.sh\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-count \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-qual \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --FILTER-summary \\\n    --out ${reduceVCF(vcf.fileName)}\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    init.sh\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-count \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --TsTv-by-qual \\\n    --out ${reduceVCF(vcf.fileName)}\n\n    vcftools \\\n    --gzvcf ${vcf} \\\n    --FILTER-summary \\\n    --out ${reduceVCF(vcf.fileName)}\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "vcf",
            "vcf_tbi",
            "variantCaller"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {\"${variantCaller} - ${vcf}\"}",
            "publishDir \"${params.outdir}/Reports/${idSample}/VCFTools/${variantCaller}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SomaticPonGenomicsDBImport": {
        "name_process": "SomaticPonGenomicsDBImport",
        "string_process": "\nprocess SomaticPonGenomicsDBImport {\n    label 'cpus_32'\n    label 'container_llab'\n\n    publishDir \"${params.outdir}/Preprocessing/Somatic_pon_db\", mode: params.publish_dir_mode\n\n    input:\n    file(\"vcfs/*\")\n    file(targetBED)\n\n    output:\n    file(\"somatic_pon.gdb\")\n\n    when: 'gen_somatic_pon' in tools\n\n    script:\n    sample_map=\"cohort_samples.map\"\n    \n                \n    \"\"\"\n    init.sh\n    vcfs=' '\n    for x in `ls vcfs/*.vcf.gz`\n    do\n        base_name=`basename \\${x}`\n        without_ext=\\${base_name%.vcf.gz}\n        sample_name=\\${without_ext##*_}\n        echo \"\\${sample_name}\\t\\$x\" >> $sample_map \n    done\n\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    GenomicsDBImport  \\\n    --genomicsdb-workspace-path somatic_pon.gdb \\\n    -L ${targetBED} \\\n    --sample-name-map $sample_map \\\n    --merge-input-intervals \\\n    --reader-threads ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    sample_map=\"cohort_samples.map\"\n    \n                \n    \"\"\"\n    init.sh\n    vcfs=' '\n    for x in `ls vcfs/*.vcf.gz`\n    do\n        base_name=`basename \\${x}`\n        without_ext=\\${base_name%.vcf.gz}\n        sample_name=\\${without_ext##*_}\n        echo \"\\${sample_name}\\t\\$x\" >> $sample_map \n    done\n\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    GenomicsDBImport  \\\n    --genomicsdb-workspace-path somatic_pon.gdb \\\n    -L ${targetBED} \\\n    --sample-name-map $sample_map \\\n    --merge-input-intervals \\\n    --reader-threads ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "targetBED"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_32'",
            "label 'container_llab'",
            "publishDir \"${params.outdir}/Preprocessing/Somatic_pon_db\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CreateSomaticPON": {
        "name_process": "CreateSomaticPON",
        "string_process": "\nprocess CreateSomaticPON{\n    label 'container_llab'\n    label 'cpus_max'\n                         \n     publishDir \"${params.outdir}/Preprocessing/Somatic_pon\", mode: params.publish_dir_mode\n\n    input:\n    file(pon) \n    file(fasta)\n    file(fastaFai)\n    file(dict)\n    file(germlineResource)\n    file(germlineResourceIndex)\n    \n    output:\n    tuple file(out_file), file (\"${out_file}.tbi\")\n\n    when: 'gen_somatic_pon' in tools\n\n    script:\n    args_file = \"normals_for_pon_vcf.args\"\n    out_file = \"somatic_pon.vcf.gz\" \n    pon_db = \"gendb://${pon}\"\n    \n    \"\"\"\n    init.sh\n     gatk --java-options -Xmx${task.memory.toGiga()}g \\\n     CreateSomaticPanelOfNormals -R ${fasta} \\\n     --germline-resource ${germlineResource} \\\n    -V ${pon_db} \\\n    -O ${out_file}\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    args_file = \"normals_for_pon_vcf.args\"\n    out_file = \"somatic_pon.vcf.gz\" \n    pon_db = \"gendb://${pon}\"\n    \n    \"\"\"\n    init.sh\n     gatk --java-options -Xmx${task.memory.toGiga()}g \\\n     CreateSomaticPanelOfNormals -R ${fasta} \\\n     --germline-resource ${germlineResource} \\\n    -V ${pon_db} \\\n    -O ${out_file}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pon",
            "fasta",
            "fastaFai",
            "dict",
            "germlineResource",
            "germlineResourceIndex"
        ],
        "nb_inputs": 6,
        "outputs": [
            "out_file"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_max'",
            "publishDir \"${params.outdir}/Preprocessing/Somatic_pon\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "IndividuallyGentoypeGVCF": {
        "name_process": "IndividuallyGentoypeGVCF",
        "string_process": "\nprocess IndividuallyGentoypeGVCF{\n    label 'container_llab'\n    label 'cpus_8'\n    tag {idSample + \"-\" + gvcf.baseName}\n                      \n                                                                                                                            \n    input:\n        tuple idPatient, idSample, file(intervalsBed), file(gvcf)\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(dbsnp)\n        file(dbsnpIndex)\n    output:\n                                                                                                                                                                                 \n        tuple idPatient, idSample, file(out_file), emit: vcf_HaplotypeCaller\n\n    when: 'haplotypecaller' in tools\n\n    script:\n                       \n                                \n                                      \n    prefix=\"${gvcf.fileName}\" - \".g.vcf\"\n                                      \n                                          \n    out_file=\"${prefix}.vcf\"\n    \"\"\"\n    init.sh\n    bgzip  ${gvcf}\n    tabix  ${gvcf}.gz\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        -L ${intervalsBed} \\\n        -D ${dbsnp} \\\n        -V ${gvcf}.gz \\\n        -O \"${out_file}\"\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    prefix=\"${gvcf.fileName}\" - \".g.vcf\"\n                                      \n                                          \n    out_file=\"${prefix}.vcf\"\n    \"\"\"\n    init.sh\n    bgzip  ${gvcf}\n    tabix  ${gvcf}.gz\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        -L ${intervalsBed} \\\n        -D ${dbsnp} \\\n        -V ${gvcf}.gz \\\n        -O \"${out_file}\"\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "intervalsBed",
            "gvcf",
            "idPatient",
            "fasta",
            "fastaFai",
            "dict",
            "dbsnp",
            "dbsnpIndex"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {idSample + \"-\" + gvcf.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "BamQC": {
        "name_process": "BamQC",
        "string_process": "\nprocess BamQC {\n                         \n    label 'container_llab'\n    label 'cpus_16'\n                  \n\n    tag {idPatient + \"-\" + idSample}\n\n                                                                                             \n    publishDir \"${params.outdir}/Reports/${idSample}/bamQC/\", mode: params.publish_dir_mode\n\n    input:\n        tuple idPatient, idSample, file(bam) \n        file(targetBED)\n\n    output:\n        file(\"${bam.baseName}\")\n\n                                 \n\n    script:\n    use_bed = params.target_bed ? \"-gff ${targetBED}\" : ''\n    \"\"\"\n    init.sh\n    qualimap --java-mem-size=${task.memory.toGiga()}G \\\n        bamqc \\\n        -bam ${bam} \\\n        --paint-chromosome-limits \\\n        --genome-gc-distr HUMAN \\\n        $use_bed \\\n        -nt ${task.cpus} \\\n        -skip-duplicated \\\n        --skip-dup-mode 0 \\\n        -outdir ${bam.baseName} \\\n        -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    use_bed = params.target_bed ? \"-gff ${targetBED}\" : ''\n    \"\"\"\n    init.sh\n    qualimap --java-mem-size=${task.memory.toGiga()}G \\\n        bamqc \\\n        -bam ${bam} \\\n        --paint-chromosome-limits \\\n        --genome-gc-distr HUMAN \\\n        $use_bed \\\n        -nt ${task.cpus} \\\n        -skip-duplicated \\\n        --skip-dup-mode 0 \\\n        -outdir ${bam.baseName} \\\n        -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bam",
            "idPatient",
            "targetBED"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outdir}/Reports/${idSample}/bamQC/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC": {
        "name_process": "MultiQC",
        "string_process": "\nprocess MultiQC {\n    label 'container_sarek'\n    publishDir \"${params.outdir}/Reports/MultiQC\", mode: params.publish_dir_mode\n    input:\n        file (multiqcConfig) \n        file (versions) \n        file ('bamQC/*') \n        file ('FastQC/*') \n        file ('BCFToolsStats/*') \n        file ('VCFTools/*')\n                 'MarkDuplicates/*'  \n        file ('SamToolsStats/*') \n        file ('CollectAlignmentSummary/*')\n        file ('CollectInsertSizeMetrics/*')\n        file ('CollectHsMetrics/*')\n                 'snpEff/*'  \n\n    output:\n        tuple file(\"*multiqc_report.html\"), file(\"*multiqc_data\") \n\n    script:\n    \"\"\"\n    multiqc -f -v .\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    multiqc -f -v .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqcConfig",
            "versions"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_sarek'",
            "publishDir \"${params.outdir}/Reports/MultiQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "GetSoftwareVersions": {
        "name_process": "GetSoftwareVersions",
        "string_process": "\nprocess GetSoftwareVersions {\n    label 'container_llab'\n    publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode\n\n    output:\n                                                                       \n        file 'software_versions_mqc.yaml'\n\n                                    \n\n    script:\n    \"\"\"\n    init.sh\n    bcftools version > v_bcftools.txt 2>&1 || true\n    bwa &> v_bwa.txt 2>&1 || true\n    configManta.py --version > v_manta.txt 2>&1 || true\n    configureStrelkaGermlineWorkflow.py --version > v_strelka.txt 2>&1 || true\n    echo \"${workflow.manifest.version}\" &> v_pipeline.txt 2>&1 || true\n    echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n    echo \"SNPEFF version\"\\$(snpEff -h 2>&1) > v_snpeff.txt\n    fastqc --version > v_fastqc.txt 2>&1 || true\n    freebayes --version > v_freebayes.txt 2>&1 || true\n    gatk ApplyBQSR --help 2>&1 | grep Version: > v_gatk.txt 2>&1 || true\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    qualimap --version &> v_qualimap.txt 2>&1 || true\n    R --version &> v_r.txt  || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    tiddit &> v_tiddit.txt 2>&1 || true\n    vcftools --version &> v_vcftools.txt 2>&1 || true\n    vep --help &> v_vep.txt 2>&1 || true\n\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    \"\"\"\n    init.sh\n    bcftools version > v_bcftools.txt 2>&1 || true\n    bwa &> v_bwa.txt 2>&1 || true\n    configManta.py --version > v_manta.txt 2>&1 || true\n    configureStrelkaGermlineWorkflow.py --version > v_strelka.txt 2>&1 || true\n    echo \"${workflow.manifest.version}\" &> v_pipeline.txt 2>&1 || true\n    echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n    echo \"SNPEFF version\"\\$(snpEff -h 2>&1) > v_snpeff.txt\n    fastqc --version > v_fastqc.txt 2>&1 || true\n    freebayes --version > v_freebayes.txt 2>&1 || true\n    gatk ApplyBQSR --help 2>&1 | grep Version: > v_gatk.txt 2>&1 || true\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    qualimap --version &> v_qualimap.txt 2>&1 || true\n    R --version &> v_r.txt  || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    tiddit &> v_tiddit.txt 2>&1 || true\n    vcftools --version &> v_vcftools.txt 2>&1 || true\n    vep --help &> v_vep.txt 2>&1 || true\n\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "BWA",
            "FastQC",
            "FreeBayes",
            "GATK",
            "MultiQC",
            "QualiMap",
            "SAMtools",
            "TIDDIT",
            "VCFtools",
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/bwa",
            "https://bio.tools/fastqc",
            "https://bio.tools/freebayes",
            "https://bio.tools/gatk",
            "https://bio.tools/multiqc",
            "https://bio.tools/qualimap",
            "https://bio.tools/samtools",
            "https://bio.tools/tiddit",
            "https://bio.tools/vcftools",
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "TIDDIT",
                "uri": "https://bio.tools/tiddit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Efficient and comprehensive structural variant caller for massive parallel sequencing data. Identify chromosomal rearrangements using Mate Pair or Paired End sequencing data. It allows identification of intra and inter-chromosomal translocations, deletions, tandem-duplications and inversions, using supplementary alignments as well as discordant pairs.",
                "homepage": "https://github.com/J35P312/TIDDIT"
            },
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            },
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CombineGVCFs": {
        "name_process": "CombineGVCFs",
        "string_process": "\nprocess CombineGVCFs {\n    label 'container_llab'\n    label 'cpus_32'\n    publishDir \"${params.outdir}/VariantCalling/CombinedGVCF\", mode: params.publish_dir_mode\n    input:\n                                                                                                             \n        file(gvcfs)\n        file(tbis)\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n\n    output:\n       tuple file('cohort.g.vcf.gz'), file('cohort.g.vcf.gz.tbi')\n                                     \n    \n    when: 'joint_genotype' in tools\n\n    script:\n    vcfs_str = ''\n    gvcfs.each{vcfs_str += \"--variant ${it} \"}\n\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        CombineGVCFs \\\n        -R ${fasta} \\\n        ${vcfs_str} \\\n        --create-output-variant-index \\\n        -O cohort.g.vcf.gz\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    vcfs_str = ''\n    gvcfs.each{vcfs_str += \"--variant ${it} \"}\n\n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        CombineGVCFs \\\n        -R ${fasta} \\\n        ${vcfs_str} \\\n        --create-output-variant-index \\\n        -O cohort.g.vcf.gz\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "gvcfs",
            "tbis",
            "fasta",
            "fastaFai",
            "dict"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "publishDir \"${params.outdir}/VariantCalling/CombinedGVCF\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "GenotypeGVCFs": {
        "name_process": "GenotypeGVCFs",
        "string_process": "\nprocess GenotypeGVCFs {\n    echo true\n    label 'container_llab'\n    label 'cpus_16'\n    tag {intervalBed.baseName}\n    input:\n                                                                                                             \n                                                                                           \n        tuple file(cohort_gvcf), file(tbi), file(intervalBed)\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n        file(dbsnp)\n        file(dbsnpIndex)\n\n    output:\n    file(\"${out_file_bn}.vcf\") \n    file(\"${out_file_bn}.vcf.idx\")\n\n    when: 'joint_genotype' in tools\n\n    script:\n    out_file_bn = intervalBed.baseName \n                                                                                   \n    \"\"\"\n    init.sh\n    #echo \"cohort_gvcf: ${cohort_gvcf}\"\n    #echo \"tbi: ${tbi}\"\n    #echo \"intervalBed: ${intervalBed}\"\n    #echo \"fasta: ${fasta}\"\n    #echo \"fastaFai: ${fastaFai}\"\n    #echo \"dict: ${dict}\"\n    #echo \"dbsnp: ${dbsnp}\"\n    #echo \"dbsnpIndex: ${dbsnpIndex}\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        -L ${intervalBed} \\\n        -D ${dbsnp} \\\n        -V ${cohort_gvcf} \\\n        --create-output-variant-index \\\n        -O \"${out_file_bn}.vcf\"\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    out_file_bn = intervalBed.baseName \n                                                                                   \n    \"\"\"\n    init.sh\n    #echo \"cohort_gvcf: ${cohort_gvcf}\"\n    #echo \"tbi: ${tbi}\"\n    #echo \"intervalBed: ${intervalBed}\"\n    #echo \"fasta: ${fasta}\"\n    #echo \"fastaFai: ${fastaFai}\"\n    #echo \"dict: ${dict}\"\n    #echo \"dbsnp: ${dbsnp}\"\n    #echo \"dbsnpIndex: ${dbsnpIndex}\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n        GenotypeGVCFs \\\n        -R ${fasta} \\\n        -L ${intervalBed} \\\n        -D ${dbsnp} \\\n        -V ${cohort_gvcf} \\\n        --create-output-variant-index \\\n        -O \"${out_file_bn}.vcf\"\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "cohort_gvcf",
            "tbi",
            "intervalBed",
            "fasta",
            "fastaFai",
            "dict",
            "dbsnp",
            "dbsnpIndex"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "echo true",
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag {intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "CohortConcatVCF": {
        "name_process": "CohortConcatVCF",
        "string_process": "\nprocess CohortConcatVCF {\n    label 'container_llab'\n    label 'cpus_8'\n\n    tag {'CohortConcatVCF'}\n\n    publishDir \"${params.outdir}/VariantCalling/HC_cohort_vcf\", mode: params.publish_dir_mode\n\n    input:\n        file(vcfs)\n        file(tbis)\n        file(fastaFai)\n        file(targetBED)\n\n    output:\n        tuple file(\"HC_cohort.vcf.gz\"), file(\"HC_cohort.vcf.gz.tbi\"), emit: cohort_vcf_with_index\n        file(\"HC_cohort.vcf.gz\")\n\n    when: ('haplotypecaller' in tools ||\n           'mutect2' in tools || \n           'freebayes' in tools ||\n           'joint_genotype' in tools )\n\n    script:\n    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    \"\"\"\n    init.sh\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o HC_cohort.vcf ${options}\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    options = params.target_bed ? \"-t ${targetBED}\" : \"\"\n    \"\"\"\n    init.sh\n    concatenateVCFs.sh -i ${fastaFai} -c ${task.cpus} -o HC_cohort.vcf ${options}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfs",
            "tbis",
            "fastaFai",
            "targetBED"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag {'CohortConcatVCF'}",
            "publishDir \"${params.outdir}/VariantCalling/HC_cohort_vcf\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SelectVariants": {
        "name_process": "SelectVariants",
        "string_process": "\nprocess SelectVariants {\n                \n    label 'container_llab'\n    label 'cpus_4'\n    tag {idSample}\n    \n    publishDir \"${params.outdir}/VariantCalling/${idSample}/HC_jointly_genotyped_vcf\", mode: params.publish_dir_mode\n    input:\n                                                                                                                                 \n        tuple file (cohort_vcf), file (tbi), idSample\n        file(fasta)\n        file(fastaFai)\n        file(dict)\n\n    output:\n                                                                                                                                                         \n    \n    tuple val(\"HaplotypeCaller_Jointly_Genotyped\"), val('patient id placeholder') ,idSample, file(\"${idSample}.vcf.gz\"), file(\"${idSample}.vcf.gz.tbi\")\n    tuple file(\"${idSample}.vcf.gz\"), file(\"${idSample}.vcf.gz.tbi\")\n    when: ('joint_genotype' in tools )\n\n    script:\n                       \n                                              \n                                                                                   \n    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n            SelectVariants \\\n            -R ${fasta} \\\n            -V ${cohort_vcf} \\\n            -O ${idSample}.vcf.gz \\\n            -sn ${idSample} \\\n            --create-output-variant-index\n    \n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    init.sh\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n            SelectVariants \\\n            -R ${fasta} \\\n            -V ${cohort_vcf} \\\n            -O ${idSample}.vcf.gz \\\n            -sn ${idSample} \\\n            --create-output-variant-index\n    \n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "cohort_vcf",
            "tbi",
            "fasta",
            "fastaFai",
            "dict"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_4'",
            "tag {idSample}",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/HC_jointly_genotyped_vcf\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "mosdepth": {
        "name_process": "mosdepth",
        "string_process": "\nprocess mosdepth {\n                                                       \n                            \n    label 'cpus_1'\n\n                     \n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/Mosdepth\", mode: params.publish_dir_mode\n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n\n    output:\n        tuple idPatient, idSample, file(\"${idSample}.per-base.bed.gz\"), file(\"${idSample}.per-base.bed.gz.tbi\")\n\n\n                                       \n\n    script:\n    \"\"\"\n    mosdepth $idSample $bam\n    tabix -p bed ${idSample}.per-base.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    mosdepth $idSample $bam\n    tabix -p bed ${idSample}.per-base.bed.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "mosdepth"
        ],
        "tools_url": [
            "https://bio.tools/mosdepth"
        ],
        "tools_dico": [
            {
                "name": "mosdepth",
                "uri": "https://bio.tools/mosdepth",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3230",
                                    "term": "Read depth analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast BAM/CRAM depth calculation for WGS, exome, or targeted sequencing.",
                "homepage": "https://github.com/brentp/mosdepth"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/Mosdepth\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "count_reads": {
        "name_process": "count_reads",
        "string_process": "\nprocess count_reads {\n    label 'container_llab'\n    label 'cpus_1'\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/ReadCounts\", mode: params.publish_dir_mode \n    \n    input:\n        tuple idPatient, idSample, file(bam), file(bai)\n \n    output:\n        tuple idPatient, idSample, file(\"${idSample}.num_reads.txt\")\n    \n    script:\n    \"\"\"\n    samtools view -c -F 260 $bam > ${idSample}.num_reads.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    samtools view -c -F 260 $bam > ${idSample}.num_reads.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/ReadCounts\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_probe_reads_per_million": {
        "name_process": "get_probe_reads_per_million",
        "string_process": "\nprocess get_probe_reads_per_million{\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/RPM\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(per_base_bed_gz), file(per_base_bed_gz_tbi)\n    file(total_reads)                                \n    tuple file(probes_gz), file(probes_gz_tbi)\n\n    output:\n    tuple idPatient, idSample, file(\"${idSample}.probe.rpm_rate.bed.gz\")                                                      \n\n    script:\n    \"\"\"\n    get_rpm_rates.py \\\n    -m $per_base_bed_gz \\\n    --regions_file $probes_gz \\\n    --num_reads $total_reads \\\n    | bgzip -c > ${idSample}.probe.rpm_rate.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    get_rpm_rates.py \\\n    -m $per_base_bed_gz \\\n    --regions_file $probes_gz \\\n    --num_reads $total_reads \\\n    | bgzip -c > ${idSample}.probe.rpm_rate.bed.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "per_base_bed_gz",
            "per_base_bed_gz_tbi",
            "idPatient",
            "total_reads",
            "probes_gz",
            "probes_gz_tbi"
        ],
        "nb_inputs": 6,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/RPM\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_total_reads": {
        "name_process": "get_total_reads",
        "string_process": "\nprocess get_total_reads{\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/TotalReads\", mode: params.publish_dir_mode\n\n    input:\n    file(num_read_files)                                                     \n\n    output:\n        file(\"total_read.txt\")\n\n    script:\n    \"\"\"\n    cat *.num_reads.txt > total_read.txt\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    cat *.num_reads.txt > total_read.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "num_read_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/TotalReads\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "gzip_probes": {
        "name_process": "gzip_probes",
        "string_process": "\nprocess gzip_probes{\n    label 'container_llab'\n    label 'cpus_1'\n\n    input:\n    file(probes)\n    \n    output:\n    tuple file(\"${probes}.sorted.gz\"), file(\"${probes}.sorted.gz.tbi\")\n    \n    \"\"\"\n    bedtools sort -i $probes > ${probes}.sorted\n    bgzip ${probes}.sorted\n    tabix ${probes}.sorted.gz -p bed\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    bedtools sort -i $probes > ${probes}.sorted\n    bgzip ${probes}.sorted\n    tabix ${probes}.sorted.gz -p bed\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "probes"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'"
        ],
        "when": "",
        "stub": ""
    },
    "exon_coverage_rates": {
        "name_process": "exon_coverage_rates",
        "string_process": "\nprocess exon_coverage_rates {\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/ExonCoverageRates\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(per_base_bed_gz), file(per_base_bed_gz_tbi)                   \n    tuple file(probes_gz), file(probes_gz_tbi)                       \n\n    output:\n    tuple idPatient, idSample, file(\"${idSample}.probe.coverage_rate.bed.gz\"), file(\"${idSample}.probe.coverage_rate.bed.gz.tbi\")\n        \n    script:\n    \"\"\"\n    get_coverage_rates.py \\\n    -m $per_base_bed_gz \\\n    --exons_file $probes_gz \\\n    | bgzip -c > ${idSample}.probe.coverage_rate.bed.gz\n    tabix -p bed ${idSample}.probe.coverage_rate.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    get_coverage_rates.py \\\n    -m $per_base_bed_gz \\\n    --exons_file $probes_gz \\\n    | bgzip -c > ${idSample}.probe.coverage_rate.bed.gz\n    tabix -p bed ${idSample}.probe.coverage_rate.bed.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "per_base_bed_gz",
            "per_base_bed_gz_tbi",
            "idPatient",
            "probes_gz",
            "probes_gz_tbi"
        ],
        "nb_inputs": 5,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/ExonCoverageRates\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_regions_zscores": {
        "name_process": "get_regions_zscores",
        "string_process": "\nprocess get_regions_zscores {\n\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/RegionZscores\", mode: params.publish_dir_mode\n\n    input:\n    file(probe_coverage_rate_bed_gz)                                            \n\n    output:\n    tuple file(\"exons.cover.mean.stdev.bed.gz\"), file(\"exons.cover.mean.stdev.bed.gz.tbi\")\n\n    script:\n    \"\"\"\n    get_regions_zscores.py -r ./ | bgzip -c > exons.cover.mean.stdev.bed.gz\n    tabix -p bed exons.cover.mean.stdev.bed.gz\n    \"\"\"   \n\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    get_regions_zscores.py -r ./ | bgzip -c > exons.cover.mean.stdev.bed.gz\n    tabix -p bed exons.cover.mean.stdev.bed.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "probe_coverage_rate_bed_gz"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/RegionZscores\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_adj_zscore": {
        "name_process": "get_adj_zscore",
        "string_process": "\nprocess get_adj_zscore{\n\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/AdjZscore\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(coverage_rate_bed_gz), file(coverage_rate_bed_gz_tbi)                                   \n    tuple file(exon_coverage_bed_gz), file(exon_coverage_bed_gz_tbi)                                   \n\n    output:\n    tuple idPatient, idSample, file(\"${idSample}.adj_z.bed.gz\"), file(\"${idSample}.adj_z.bed.gz.tbi\")\n\n    script:\n    \"\"\"\n    get_coverage_zscores.py \\\n        -r $coverage_rate_bed_gz \\\n        -s $exon_coverage_bed_gz \\\n        | bgzip -c > ${idSample}.adj_z.bed.gz\n    tabix -p bed ${idSample}.adj_z.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    get_coverage_zscores.py \\\n        -r $coverage_rate_bed_gz \\\n        -s $exon_coverage_bed_gz \\\n        | bgzip -c > ${idSample}.adj_z.bed.gz\n    tabix -p bed ${idSample}.adj_z.bed.gz\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "coverage_rate_bed_gz",
            "coverage_rate_bed_gz_tbi",
            "idPatient",
            "exon_coverage_bed_gz",
            "exon_coverage_bed_gz_tbi"
        ],
        "nb_inputs": 5,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/AdjZscore\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "merge_adj_scores": {
        "name_process": "merge_adj_scores",
        "string_process": "\nprocess merge_adj_scores{\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/MergeAdjZscore\", mode: params.publish_dir_mode\n\n    input:\n    tuple file(bed_gz), file(bed_gz_tbi)                                        \n\n    output:\n    tuple file(\"adj_scores.bed.gz\"), file(\"adj_scores.bed.gz.tbi\")\n\n    script:\n    \"\"\"\n    merge_samples_adj_scores.py -r adj_zscores/ | bgzip -c > adj_scores.bed.gz\n    tabix -p bed adj_scores.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    merge_samples_adj_scores.py -r adj_zscores/ | bgzip -c > adj_scores.bed.gz\n    tabix -p bed adj_scores.bed.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed_gz",
            "bed_gz_tbi"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/MergeAdjZscore\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "collect_allele_counts": {
        "name_process": "collect_allele_counts",
        "string_process": "\nprocess collect_allele_counts {\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/collect_allele_counts\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(bam), file(bai)\n    file(probes)\n    file(ref)    \n    file(fai)\n    file(dict)\n\n    output:\n    tuple idPatient, idSample, file(\"${idSample}.allele_count.tsv\")\n\n    script:\n    \"\"\"\n    gatk CollectAllelicCounts \\\n     -I $bam \\\n     -R $ref \\\n     -L $probes \\\n     -O ${idSample}.allele_count.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    gatk CollectAllelicCounts \\\n     -I $bam \\\n     -R $ref \\\n     -L $probes \\\n     -O ${idSample}.allele_count.tsv\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam",
            "bai",
            "idPatient",
            "probes",
            "ref",
            "fai",
            "dict"
        ],
        "nb_inputs": 7,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/collect_allele_counts\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "agg_allele_counts": {
        "name_process": "agg_allele_counts",
        "string_process": "\nprocess agg_allele_counts{\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/${idSample}/agg_allele_counts\", mode: params.publish_dir_mode\n\n    input:\n    tuple idPatient, idSample, file(collected_allele_counts)                                     \n    file(probes)\n\n    output:\n    tuple idPatient, idSample, file(\"${idSample}.agg.allele_count.bed\")\n\n    script:\n    \"\"\"\n    cat $collected_allele_counts | awk '{print \\$1\"\\t\"\\$2\"\\t\"\\$2+1\"\\t\"\\$3\"\\t\"\\$4\"\\t\"\\$5\"\\t\"\\$6}' > ${idSample}.allele_count.bed\n    bgzip ${idSample}.allele_count.bed\n    tabix -p bed ${idSample}.allele_count.bed.gz\n    agg_single_allele_counts.py $probes ${idSample}.allele_count.bed.gz ${idSample} > ${idSample}.agg.allele_count.bed    \n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    cat $collected_allele_counts | awk '{print \\$1\"\\t\"\\$2\"\\t\"\\$2+1\"\\t\"\\$3\"\\t\"\\$4\"\\t\"\\$5\"\\t\"\\$6}' > ${idSample}.allele_count.bed\n    bgzip ${idSample}.allele_count.bed\n    tabix -p bed ${idSample}.allele_count.bed.gz\n    agg_single_allele_counts.py $probes ${idSample}.allele_count.bed.gz ${idSample} > ${idSample}.agg.allele_count.bed    \n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "collected_allele_counts",
            "idPatient",
            "probes"
        ],
        "nb_inputs": 3,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/${idSample}/agg_allele_counts\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "merge_all_allele_counts": {
        "name_process": "merge_all_allele_counts",
        "string_process": "\nprocess merge_all_allele_counts {\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/merge_all_allele_counts\", mode: params.publish_dir_mode\n\n    input:\n    file(agged_allele_counts)                                 \n    file(probes)\n\n    output:\n    tuple file(\"ab.sorted.tsv.gz\"), file(\"ab.sorted.tsv.gz.tbi\")\n    \n    script:\n    \"\"\"\n    cat *.agg.allele_count.bed > all_samples.aggregate_probe_allele_counts.txt\n    create_all_sample_allele_count_bed.py all_samples.aggregate_probe_allele_counts.txt $probes> ab.bed\n    head -1 ab.bed > ab.header.tsv\n    tail -n +2 ab.bed > ab.tsv\n    bedtools sort -i ab.tsv > ab.sorted.tsv\n    bgzip ab.sorted.tsv\n    tabix -p bed ab.sorted.tsv.gz \n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    cat *.agg.allele_count.bed > all_samples.aggregate_probe_allele_counts.txt\n    create_all_sample_allele_count_bed.py all_samples.aggregate_probe_allele_counts.txt $probes> ab.bed\n    head -1 ab.bed > ab.header.tsv\n    tail -n +2 ab.bed > ab.tsv\n    bedtools sort -i ab.tsv > ab.sorted.tsv\n    bgzip ab.sorted.tsv\n    tabix -p bed ab.sorted.tsv.gz \n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "agged_allele_counts",
            "probes"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/merge_all_allele_counts\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "label_exons": {
        "name_process": "label_exons",
        "string_process": "\nprocess label_exons{\n    label 'container_llab'\n    label 'cpus_1'\n\n    publishDir \"${params.outdir}/CNV_Plotting/label_exons\", mode: params.publish_dir_mode\n\n    input:\n    file(exons_gz)\n\n    output:\n    tuple file(\"labeled_exons.bed.gz\"), file(\"labeled_exons.bed.gz.tbi\")\n\n    script:\n    \"\"\"\n    zcat $exons_gz | label_exon_number.py > labeled_exons.bed\n    bgzip labeled_exons.bed\n    tabix -p bed labeled_exons.bed.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    zcat $exons_gz | label_exon_number.py > labeled_exons.bed\n    bgzip labeled_exons.bed\n    tabix -p bed labeled_exons.bed.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "exons_gz"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_1'",
            "publishDir \"${params.outdir}/CNV_Plotting/label_exons\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "SavvyCNVCoverageSummary": {
        "name_process": "SavvyCNVCoverageSummary",
        "string_process": "\nprocess SavvyCNVCoverageSummary {\n    label 'container_llab'\n    label 'cpus_16'\n    tag \"${idSample}\"\n                                                                                                                      \n    \n    input:\n         tuple idPatient, idSample, file(bam), file(bai)\n    \n    output:\n    file(\"${idSample}.coverageBinner\")\n\n    when: 'savvy_cnv_somatic' in tools\n\n    script:\n    \n    \"\"\"\n    init.sh\n    java -Xmx1g CoverageBinner ${bam} > ${idSample}.coverageBinner\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    init.sh\n    java -Xmx1g CoverageBinner ${bam} > ${idSample}.coverageBinner\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "bai",
            "idPatient"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag \"${idSample}\""
        ],
        "when": "",
        "stub": ""
    },
    "SavvyCNV": {
        "name_process": "SavvyCNV",
        "string_process": "\nprocess SavvyCNV {\n    label 'container_llab'\n    label 'cpus_16'\n                        \n    publishDir \"${params.outdir}/VariantCalling/\", mode: params.publish_dir_mode\n    \n    input:\n        file(\"*\")\n        file(savvy_controls_dir)\n     \n    output:\n        file(\"SavvycnvResults\")\n    \n    when: 'savvy_cnv_somatic' in tools\n    \n    script:\n    chunk_size = 200000\n    control_options = params.savvy_controls_dir ? \" -control ${savvy_controls_dir}/*.coverageBinner \": \"\"\n    \"\"\"\n    init.sh\n    mkdir -p SavvycnvResults/SavvycnvCoverageSummary\n    mkdir  SavvycnvResults/pdfs\n    java -Xmx30g SavvyCNV -a -d ${chunk_size} -case *.coverageBinner ${control_options} > cnv_list.csv 2>log_messages.txt\n    cp *.coverageBinner SavvycnvResults/SavvycnvCoverageSummary/\n    cp *.cnvs.pdf SavvycnvResults/pdfs\n    cp cnv_list.csv log_messages.txt SavvycnvResults/\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    chunk_size = 200000\n    control_options = params.savvy_controls_dir ? \" -control ${savvy_controls_dir}/*.coverageBinner \": \"\"\n    \"\"\"\n    init.sh\n    mkdir -p SavvycnvResults/SavvycnvCoverageSummary\n    mkdir  SavvycnvResults/pdfs\n    java -Xmx30g SavvyCNV -a -d ${chunk_size} -case *.coverageBinner ${control_options} > cnv_list.csv 2>log_messages.txt\n    cp *.coverageBinner SavvycnvResults/SavvycnvCoverageSummary/\n    cp *.cnvs.pdf SavvycnvResults/pdfs\n    cp cnv_list.csv log_messages.txt SavvycnvResults/\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "savvy_controls_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "publishDir \"${params.outdir}/VariantCalling/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CreateReadCountPon": {
        "name_process": "CreateReadCountPon",
        "string_process": "\nprocess CreateReadCountPon {\n    label 'container_llab'\n                \n    tag \"ReadCountPon\"\n    \n    publishDir \"${params.outdir}/Preprocessing/ReadCountPon/\", \n    mode: params.publish_dir_mode\n\n    \n    input:\n    file(read_count_hdf5s)\n    \n                      \n\n    output:\n    file(out_file)\n\n    script:\n    when:'gen_read_count_pon' in tools\n                                    \n    out_file = \"read_count_pon.hdf5\"\n    params_str = ''\n                                  \n    read_count_hdf5s.each{\n        params_str = \"${params_str} -I ${it}\"\n    }\n\n    \n    \"\"\"\n    init.sh\n    gatk CreateReadCountPanelOfNormals \\\n        $params_str \\\n        -O $out_file\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    when:'gen_read_count_pon' in tools\n                                    \n    out_file = \"read_count_pon.hdf5\"\n    params_str = ''\n                                  \n    read_count_hdf5s.each{\n        params_str = \"${params_str} -I ${it}\"\n    }\n\n    \n    \"\"\"\n    init.sh\n    gatk CreateReadCountPanelOfNormals \\\n        $params_str \\\n        -O $out_file\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "read_count_hdf5s"
        ],
        "nb_inputs": 1,
        "outputs": [
            "out_file"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "tag \"ReadCountPon\"",
            "publishDir \"${params.outdir}/Preprocessing/ReadCountPon/\" , mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "DenoiseReadCounts": {
        "name_process": "DenoiseReadCounts",
        "string_process": "\nprocess DenoiseReadCounts {\n    label 'container_llab'\n    label 'cpus_32'\n    tag \"${idSample}\"\n    \n    publishDir \"${params.outdir}/Preprocessing/${idSample}/DenoisedReadCounts/\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file( \"${idSample}.counts.hdf5\")\n        file(read_count_somatic_pon)\n\n    output:\n        tuple idPatient, idSample, file(std_copy_ratio), file(denoised_copy_ratio), emit: 'denoised_cr'\n\n    when: ('gatk_cnv_somatic' in tools)\n\n    script:\n    std_copy_ratio = \"${idSample}.standardizedCR.tsv\"\n    denoised_copy_ratio = \"${idSample}.denoisedCR.tsv\"\n    pon_option = params.read_count_pon ? \"--count-panel-of-normals ${read_count_somatic_pon}\" : \"\"\n    \"\"\"\n    init.sh\n    gatk DenoiseReadCounts \\\n        -I ${idSample}.counts.hdf5 \\\n        ${pon_option} \\\n        --standardized-copy-ratios ${std_copy_ratio} \\\n        --denoised-copy-ratios ${denoised_copy_ratio}\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    std_copy_ratio = \"${idSample}.standardizedCR.tsv\"\n    denoised_copy_ratio = \"${idSample}.denoisedCR.tsv\"\n    pon_option = params.read_count_pon ? \"--count-panel-of-normals ${read_count_somatic_pon}\" : \"\"\n    \"\"\"\n    init.sh\n    gatk DenoiseReadCounts \\\n        -I ${idSample}.counts.hdf5 \\\n        ${pon_option} \\\n        --standardized-copy-ratios ${std_copy_ratio} \\\n        --denoised-copy-ratios ${denoised_copy_ratio}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "idPatient",
            "read_count_somatic_pon"
        ],
        "nb_inputs": 2,
        "outputs": [
            "denoised_copy_ratio"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/DenoisedReadCounts/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PlotDenoisedCopyRatios": {
        "name_process": "PlotDenoisedCopyRatios",
        "string_process": "\nprocess PlotDenoisedCopyRatios {\n    label 'container_llab'\n    label 'cpus_16'\n    tag \"${idSample}\"\n    \n    publishDir \"${params.outdir}/Preprocessing/${idSample}/\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(std_copy_ratio), file(denoised_copy_ratio)\n        file(dict)\n    \n    output:\n        file(out_dir)  \n\n    when: ('gatk_cnv_somatic' in tools)\n\n    script:\n    out_dir = \"PlotDenoisedReadCounts\" \n\n    \"\"\"\n    init.sh\n    mkdir ${out_dir}\n    gatk PlotDenoisedCopyRatios \\\n        --standardized-copy-ratios ${std_copy_ratio} \\\n        --denoised-copy-ratios ${denoised_copy_ratio} \\\n        --sequence-dictionary ${dict} \\\n        --output-prefix ${idSample} \\\n        -O ${out_dir}\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    out_dir = \"PlotDenoisedReadCounts\" \n\n    \"\"\"\n    init.sh\n    mkdir ${out_dir}\n    gatk PlotDenoisedCopyRatios \\\n        --standardized-copy-ratios ${std_copy_ratio} \\\n        --denoised-copy-ratios ${denoised_copy_ratio} \\\n        --sequence-dictionary ${dict} \\\n        --output-prefix ${idSample} \\\n        -O ${out_dir}\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "std_copy_ratio",
            "denoised_copy_ratio",
            "idPatient",
            "dict"
        ],
        "nb_inputs": 4,
        "outputs": [
            "out_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_16'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/Preprocessing/${idSample}/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "ModelSegments": {
        "name_process": "ModelSegments",
        "string_process": "\nprocess ModelSegments {\n    label 'container_llab'\n    label 'cpus_32'\n    tag \"${idSample}\"\n\n    publishDir \"${params.outdir}/VariantCalling/${idSample}\", mode: params.publish_dir_mode\n    \n    input:\n         tuple idPatient, idSample, file(denoised_copy_ratio)\n\n    output:\n        tuple idPatient, idSample, file(\"${out_dir}/${idSample}.cr.seg\"), file(\"${out_dir}/${idSample}.modelFinal.seg\"), emit: 'modeled_seg'\n\n    when: ('gatk_cnv_somatic' in tools)\n\n    script:\n    out_dir = \"ModeledSegments\"\n\n    \"\"\"\n    init.sh\n    mkdir $out_dir\n    gatk ModelSegments \\\n        --denoised-copy-ratios ${denoised_copy_ratio} \\\n        --output-prefix ${idSample} \\\n        -O ${out_dir}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    out_dir = \"ModeledSegments\"\n\n    \"\"\"\n    init.sh\n    mkdir $out_dir\n    gatk ModelSegments \\\n        --denoised-copy-ratios ${denoised_copy_ratio} \\\n        --output-prefix ${idSample} \\\n        -O ${out_dir}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "denoised_copy_ratio",
            "idPatient"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idPatient"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_32'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "PlotModeledSegments": {
        "name_process": "PlotModeledSegments",
        "string_process": "\nprocess PlotModeledSegments {\n    label 'container_llab'\n    label 'cpus_8'\n    tag \"${idSample}\"\n    \n    publishDir \"${params.outdir}/VariantCalling/${idSample}\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(\"${idSample}.modelFinal.seg\"), file(\"${idSample}.denoisedCR.tsv\")\n        file(dict)\n    output:\n    file(out_dir)\n    \n    when: ('gatk_cnv_somatic' in tools)\n    script:\n    out_dir = \"PlotsModeledSegments\"\n    \n    \"\"\"\n    init.sh\n    mkdir $out_dir\n    gatk PlotModeledSegments \\\n        --denoised-copy-ratios ${idSample}.denoisedCR.tsv \\\n        --segments ${idSample}.modelFinal.seg \\\n        --sequence-dictionary ${dict} \\\n        --output-prefix ${idSample} \\\n        -O $out_dir\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    out_dir = \"PlotsModeledSegments\"\n    \n    \"\"\"\n    init.sh\n    mkdir $out_dir\n    gatk PlotModeledSegments \\\n        --denoised-copy-ratios ${idSample}.denoisedCR.tsv \\\n        --segments ${idSample}.modelFinal.seg \\\n        --sequence-dictionary ${dict} \\\n        --output-prefix ${idSample} \\\n        -O $out_dir\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "idPatient",
            "dict"
        ],
        "nb_inputs": 2,
        "outputs": [
            "out_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "CallCopyRatioSegments": {
        "name_process": "CallCopyRatioSegments",
        "string_process": "\nprocess CallCopyRatioSegments {\n    label 'container_llab'\n   label 'cpus_8'\n    tag \"${idSample}\"\n    \n    publishDir \"${params.outdir}/VariantCalling/${idSample}/CalledCopyRatioSegments\", mode: params.publish_dir_mode\n    \n    input:\n        tuple idPatient, idSample, file(\"${idSample}.cr.seg\")\n    \n    output:\n        file(\"${idSample}.called.seg\")\n\n    when: ('gatk_cnv_somatic' in tools)\n    script:\n    \n    \"\"\"\n    init.sh\n    gatk CallCopyRatioSegments \\\n        -I ${idSample}.cr.seg \\\n        -O ${idSample}.called.seg\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    init.sh\n    gatk CallCopyRatioSegments \\\n        -I ${idSample}.cr.seg \\\n        -O ${idSample}.called.seg\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "idPatient"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ryanlayerlab__layer_lab_chco",
        "directive": [
            "label 'container_llab'",
            "label 'cpus_8'",
            "tag \"${idSample}\"",
            "publishDir \"${params.outdir}/VariantCalling/${idSample}/CalledCopyRatioSegments\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    }
}