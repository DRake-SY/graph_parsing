{
    "make_directories": {
        "name_process": "make_directories",
        "string_process": "\nprocess make_directories {\n\n    executor 'SLURM'\n\t\n    script:\n      \n                          \n      \n    if( params.mode == 'quantifFCDir' )\n    \"\"\"\n        cd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#FC\n\t\tif [ ! -d \"${params.fCounts}\" ]; then\n\t\t\tmkdir  ${params.fCounts}/; chmod 777  ${params.fCounts}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'quantifRSEMDir' )\n    \"\"\"\n        cd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#RSEM\n\t\tif [ ! -d \"${params.rsemDir}\" ]; then\n\t\t\tmkdir  ${params.rsemDir}; chmod 777  ${params.rsemDir};\n\t\tfi\n\t\tif [ ! -d \"${params.rsem}\" ]; then\n\t\t\tmkdir ${params.rsem}/; chmod 777  ${params.rsem}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'quantifFCRefDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#FConRef\n\t\tif [ ! -d \"${params.fCountsOnRef}\" ]; then\n\t\t\tmkdir  ${params.fCountsOnRef}/; chmod 777  ${params.fCountsOnRef}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n    \"\"\"   \n\telse if( params.mode == 'quantifCufflinksDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'modelDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#FEELnc\n\t\tif [ ! -d \"${params.feelnc}\" ]; then\n\t\t\tmkdir  ${params.feelnc}; chmod 777  ${params.feelnc};\n\t\tfi\n\t\t#FEELnc step 1 filter\n\t\tif [ ! -d \"${params.feelnc}/filter\" ]; then\n\t\t\tcd  ${params.feelnc}; mkdir filter/; chmod 777 filter/;\n\t\tfi\n\t\t#FEELnc step 2 protein coding\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/\" ]; then\n\t\t\tcd ${params.feelnc}; mkdir protein_coding/; chmod 777 protein_coding/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/shuffle\" ]; then\n\t\t\tcd ${params.feelnc}/protein_coding/ ; mkdir shuffle/; chmod 777 shuffle/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/intergenic/\" ]; then\n\t\t\tcd ${params.feelnc}/protein_coding/; mkdir intergenic/; chmod 777 intergenic/;\n\t\tfi\n\t\t#FEELnc step 3 classifier\n\t\tif [ ! -d \"${params.feelnc}/classifier/\" ]; then\n\t\tcd ${params.feelnc}/; mkdir classifier/; chmod 777 classifier/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/classifier/shuffle\" ]; then\n\t\t\tcd ${params.feelnc}/classifier/; mkdir shuffle/; chmod 777 shuffle/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/classifier/intergenic/\" ]; then\n\t\t\t\tcd ${params.feelnc}/classifier/; mkdir intergenic/; chmod 777 intergenic/;\n\t\tfi \n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   cd ${params.workpath}/${params.resultsdir}; mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n    \"\"\"\n    else \n    \"\"\"\n        echo \"Directories creation for your mode. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 214,
        "string_script": "    if( params.mode == 'quantifFCDir' )\n    \"\"\"\n        cd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#FC\n\t\tif [ ! -d \"${params.fCounts}\" ]; then\n\t\t\tmkdir  ${params.fCounts}/; chmod 777  ${params.fCounts}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'quantifRSEMDir' )\n    \"\"\"\n        cd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#RSEM\n\t\tif [ ! -d \"${params.rsemDir}\" ]; then\n\t\t\tmkdir  ${params.rsemDir}; chmod 777  ${params.rsemDir};\n\t\tfi\n\t\tif [ ! -d \"${params.rsem}\" ]; then\n\t\t\tmkdir ${params.rsem}/; chmod 777  ${params.rsem}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'quantifFCRefDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#FConRef\n\t\tif [ ! -d \"${params.fCountsOnRef}\" ]; then\n\t\t\tmkdir  ${params.fCountsOnRef}/; chmod 777  ${params.fCountsOnRef}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n    \"\"\"   \n\telse if( params.mode == 'quantifCufflinksDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n\t\"\"\"   \n\telse if( params.mode == 'modelDir' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n        #STAR indexation\n        if [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\tmkdir STAR_GenomeDir/; chmod 777  STAR_GenomeDir/; \n\t\tfi  \n\t\t#Trimming\n\t\tif [ ! -d \"${params.readstrimmedDir}\" ]; then\n\t\t\tmkdir  ${params.readstrimmedDir}/; chmod 777 ${params.readstrimmedDir}/;\n\t\tfi\t\n\t\t#STAR mapping\n\t\tif [ ! -d \"${params.mappingDir}\" ]; then\n\t\t\tmkdir  ${params.mappingDir}/; chmod 777 ${params.mappingDir}/;\n\t\tfi\t\n\t\t#CUFFLINKS\n\t\tif [ ! -d \"${params.cufflinksDir}\" ]; then\n\t\t\tmkdir  ${params.cufflinksDir}/; chmod 777  ${params.cufflinksDir}/; \n\t\tfi\n\t\t#CUFFMERGE\n\t\tif [ ! -d \"${params.cuffmergeDir}\" ]; then\n\t\t\tmkdir  ${params.cuffmergeDir}/; chmod 777  ${params.cuffmergeDir}/; \n\t\tfi\n\t\t#FEELnc\n\t\tif [ ! -d \"${params.feelnc}\" ]; then\n\t\t\tmkdir  ${params.feelnc}; chmod 777  ${params.feelnc};\n\t\tfi\n\t\t#FEELnc step 1 filter\n\t\tif [ ! -d \"${params.feelnc}/filter\" ]; then\n\t\t\tcd  ${params.feelnc}; mkdir filter/; chmod 777 filter/;\n\t\tfi\n\t\t#FEELnc step 2 protein coding\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/\" ]; then\n\t\t\tcd ${params.feelnc}; mkdir protein_coding/; chmod 777 protein_coding/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/shuffle\" ]; then\n\t\t\tcd ${params.feelnc}/protein_coding/ ; mkdir shuffle/; chmod 777 shuffle/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/protein_coding/intergenic/\" ]; then\n\t\t\tcd ${params.feelnc}/protein_coding/; mkdir intergenic/; chmod 777 intergenic/;\n\t\tfi\n\t\t#FEELnc step 3 classifier\n\t\tif [ ! -d \"${params.feelnc}/classifier/\" ]; then\n\t\tcd ${params.feelnc}/; mkdir classifier/; chmod 777 classifier/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/classifier/shuffle\" ]; then\n\t\t\tcd ${params.feelnc}/classifier/; mkdir shuffle/; chmod 777 shuffle/;\n\t\tfi\n\t\tif [ ! -d \"${params.feelnc}/classifier/intergenic/\" ]; then\n\t\t\t\tcd ${params.feelnc}/classifier/; mkdir intergenic/; chmod 777 intergenic/;\n\t\tfi \n\t\t#Quality\n\t\tif [ ! -d \"${params.multiQC}\" ]; then\n\t\t   cd ${params.workpath}/${params.resultsdir}; mkdir ${params.multiQC}/; chmod 777  ${params.multiQC}/; \n\t\tfi\n\t\t#fastQCreport\n\t\tif [ ! -d \"${params.fastQCreportTrimmed}\" ]; then\n\t\t\tmkdir ${params.fastQCreportTrimmed}/; chmod 777 ${params.fastQCreportTrimmed}/;\n\t\tfi\n\t\tif [ ! -d \"${params.fastQCreport}\" ]; then\n\t\t\tmkdir ${params.fastQCreport}/; chmod 777 ${params.fastQCreport}/;\n\t\tfi\n    \"\"\"\n    else \n    \"\"\"\n        echo \"Directories creation for your mode. \\n\";\n    \"\"\"",
        "nb_lignes_script": 205,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "indexation_star": {
        "name_process": "indexation_star",
        "string_process": "\nprocess indexation_star {\n\n    cpus 8\n    memory '60 GB'\n\texecutor 'SLURM'\n\t\n\tpublishDir \"${params.genomeDir}\"\n\n\tinput:\n\tfile 'params.genome' \n\tfile 'params.annotation' \n\t\n\t\n    script:\n      \n                     \n      \n    if( params.mode == 'starindex' )\n    \"\"\"         \n\t\tif [[ \"${params.debug}\" =~ .*GenomeDir.*  ]]; then\n\t\t\techo \"\\n OK - NO STAR Genome Generate\" >> ${params.output}/README;      \n\t\telse        \n\t\t\tif [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\t\tcd ${params.workpath}/${params.resultsdir}; mkdir STAR_GenomeDir; chmod 777  STAR_GenomeDir; \n\t\t\tfi  \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t        \tmodule load bioinfo/STAR-2.5.1b; module load bioinfo/samtools-1.4; \n\t\t\tSTAR --runThreadN 8 --runMode genomeGenerate --limitGenomeGenerateRAM 35000000000 --genomeDir STAR_GenomeDir/ --genomeFastaFiles ${params.genome} --sjdbGTFfile  ${params.annotation} --sjdbOverhang 100;\n\t\t\tmodule unload bioinfo/STAR-2.5.1b; module unload bioinfo/samtools-1.4;\n\t\t\techo \"\\n OK - STAR Genome Generate - Run at  `date`\" >> ${params.output}/README;\n\t\tfi\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"No STAR indexation. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 36,
        "string_script": "    if( params.mode == 'starindex' )\n    \"\"\"         \n\t\tif [[ \"${params.debug}\" =~ .*GenomeDir.*  ]]; then\n\t\t\techo \"\\n OK - NO STAR Genome Generate\" >> ${params.output}/README;      \n\t\telse        \n\t\t\tif [ ! -d \"${params.genomeDir}\" ]; then\n\t\t\t\tcd ${params.workpath}/${params.resultsdir}; mkdir STAR_GenomeDir; chmod 777  STAR_GenomeDir; \n\t\t\tfi  \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t        \tmodule load bioinfo/STAR-2.5.1b; module load bioinfo/samtools-1.4; \n\t\t\tSTAR --runThreadN 8 --runMode genomeGenerate --limitGenomeGenerateRAM 35000000000 --genomeDir STAR_GenomeDir/ --genomeFastaFiles ${params.genome} --sjdbGTFfile  ${params.annotation} --sjdbOverhang 100;\n\t\t\tmodule unload bioinfo/STAR-2.5.1b; module unload bioinfo/samtools-1.4;\n\t\t\techo \"\\n OK - STAR Genome Generate - Run at  `date`\" >> ${params.output}/README;\n\t\tfi\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"No STAR indexation. \\n\";\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "memory '60 GB'",
            "executor 'SLURM'",
            "publishDir \"${params.genomeDir}\""
        ],
        "when": "",
        "stub": ""
    },
    "star": {
        "name_process": "star",
        "string_process": "\nprocess star {\n    \n    cpus 8\n    memory '60 GB'\n\texecutor 'SLURM'\n\t\n\n\tinput:\n\tfile 'params.genome' \n\tfile 'params.annotation'\n\tset pair_id, file(reads) from read_pairs\n\t\n\n    script:\n      \n                                            \n      \n    if( params.mode == '' )\n    \"\"\" \n\t\techo \"\\n No mode have been chosen.`\" >> ${params.output}/README;\n    \"\"\"   \n\telse if( params.mode == 'starmap' )\n    \"\"\"\n         \tif [[ \"${params.debug}\" =~ .*STARmap.*  ]]; then\n\t\t\techo \"\\n OK - NO STAR mapping\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tif [ ! -d \"${params.readstrimmedDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.readstrimmedDir}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\n\t\t\tcd ${params.readsPath};\n\t\t\tif [[ \"${params.debug}\" =~ .*Cleaning.*  ]]; then\n\t\t\t\techo \"\\n OK - NO Cleaning\" >> ${params.output}/README;      \n\t\t\telse  \n\t\t\t\tcutadapt -a ${params.adaptatora} -A ${params.adaptA} --minimum-length 20 --output ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq --paired-output ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq  ${reads}  > ${params.readstrimmedDir}/${pair_id}/cutadapt.log;\n\t\t\t\techo \"\\n OK - Trimming on ${reads} - Run at  `date`\" >> ${params.output}/README;\n\t\t\tfi\n\t\t\tcp ${params.readstrimmedDir}/${pair_id}/cutadapt.log ${params.multiQC}/${pair_id}_cutadapt.log;\n\n\t\t\tif [ ! -d \"${params.mappingDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.mappingDir}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\t\n       \t\t\n\t\t\tSTAR --genomeDir ${params.genomeDir} --readFilesIn ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq --runThreadN 8  --outSAMtype BAM SortedByCoordinate --outFileNamePrefix ${params.mappingDir}/${pair_id}/ -outFilterType BySJout --quantMode TranscriptomeSAM --outSAMstrandField intronMotif --outFilterIntronMotifs RemoveNoncanonical --alignIntronMin 10 --alignIntronMax 25000 --outFilterMismatchNmax 10 ;\n\t\t\techo \"\\n OK - STAR mapping on ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq   and ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq  - Run at  `date`\" >> ${params.output}/README;\n\n\t\t\tcp ${params.mappingDir}/${pair_id}/SJ.out.tab ${params.multiQC}/${pair_id}_SJ.out.tab;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.progress.out ${params.multiQC}/${pair_id}_Log.progress.out;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.final.out ${params.multiQC}/${pair_id}_Log.final.out;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.out ${params.multiQC}/${pair_id}_Log.out;\n\t\tfi\n\t\"\"\"\n\telse if( params.mode == 'samtoolssort' )\n\t\"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*sort.*  ]]; then\n\t\t\techo \"\\n OK - NO samtools sort\" >> ${params.output}/README;      \n\t\telse\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tchmod -R 777  ${params.mappingDir}/*;\n\t\t\t\n\t\t\tif  [ ! -d \"${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam\" ]; then\n\t\t\t\tsamtools sort -n -@8 -o  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.out.bam;\n\t\t\tfi\n\t\t\techo \"\\n OK - Samtools sort on ${pair_id} - Run at  `date`\" >> ${params.output}/README;\t\n\t\tfi\t\n    \"\"\"     \n    else \n    \"\"\"\n\t\techo \"STAR step not yet or finish. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 70,
        "string_script": "    if( params.mode == '' )\n    \"\"\" \n\t\techo \"\\n No mode have been chosen.`\" >> ${params.output}/README;\n    \"\"\"   \n\telse if( params.mode == 'starmap' )\n    \"\"\"\n         \tif [[ \"${params.debug}\" =~ .*STARmap.*  ]]; then\n\t\t\techo \"\\n OK - NO STAR mapping\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tif [ ! -d \"${params.readstrimmedDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.readstrimmedDir}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\n\t\t\tcd ${params.readsPath};\n\t\t\tif [[ \"${params.debug}\" =~ .*Cleaning.*  ]]; then\n\t\t\t\techo \"\\n OK - NO Cleaning\" >> ${params.output}/README;      \n\t\t\telse  \n\t\t\t\tcutadapt -a ${params.adaptatora} -A ${params.adaptA} --minimum-length 20 --output ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq --paired-output ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq  ${reads}  > ${params.readstrimmedDir}/${pair_id}/cutadapt.log;\n\t\t\t\techo \"\\n OK - Trimming on ${reads} - Run at  `date`\" >> ${params.output}/README;\n\t\t\tfi\n\t\t\tcp ${params.readstrimmedDir}/${pair_id}/cutadapt.log ${params.multiQC}/${pair_id}_cutadapt.log;\n\n\t\t\tif [ ! -d \"${params.mappingDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.mappingDir}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\t\n       \t\t\n\t\t\tSTAR --genomeDir ${params.genomeDir} --readFilesIn ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq --runThreadN 8  --outSAMtype BAM SortedByCoordinate --outFileNamePrefix ${params.mappingDir}/${pair_id}/ -outFilterType BySJout --quantMode TranscriptomeSAM --outSAMstrandField intronMotif --outFilterIntronMotifs RemoveNoncanonical --alignIntronMin 10 --alignIntronMax 25000 --outFilterMismatchNmax 10 ;\n\t\t\techo \"\\n OK - STAR mapping on ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq   and ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq  - Run at  `date`\" >> ${params.output}/README;\n\n\t\t\tcp ${params.mappingDir}/${pair_id}/SJ.out.tab ${params.multiQC}/${pair_id}_SJ.out.tab;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.progress.out ${params.multiQC}/${pair_id}_Log.progress.out;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.final.out ${params.multiQC}/${pair_id}_Log.final.out;\n\t\t\tcp ${params.mappingDir}/${pair_id}/Log.out ${params.multiQC}/${pair_id}_Log.out;\n\t\tfi\n\t\"\"\"\n\telse if( params.mode == 'samtoolssort' )\n\t\"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*sort.*  ]]; then\n\t\t\techo \"\\n OK - NO samtools sort\" >> ${params.output}/README;      \n\t\telse\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tchmod -R 777  ${params.mappingDir}/*;\n\t\t\t\n\t\t\tif  [ ! -d \"${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam\" ]; then\n\t\t\t\tsamtools sort -n -@8 -o  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.out.bam;\n\t\t\tfi\n\t\t\techo \"\\n OK - Samtools sort on ${pair_id} - Run at  `date`\" >> ${params.output}/README;\t\n\t\tfi\t\n    \"\"\"     \n    else \n    \"\"\"\n\t\techo \"STAR step not yet or finish. \\n\";\n    \"\"\"",
        "nb_lignes_script": 52,
        "language_script": "bash",
        "tools": [
            "Cutadapt",
            "STAR",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/cutadapt",
            "https://bio.tools/star",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "read_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "memory '60 GB'",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "fastQCreport": {
        "name_process": "fastQCreport",
        "string_process": "\nprocess fastQCreport {\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\tinput:\n\tset pair_id, file(reads) from read_pairs5\n\n    script:\n    if( params.mode == 'QC' )\n    \"\"\" \n\t\tif [[ \"${params.debug}\" =~ .*QC.*  ]]; then\n            echo \"\\n OK - NO fastQCreport\" >> ${params.output}/README;      \n        else\n\t\t\tcd ${params.readsPath};\n\t\t\tfastqc -o ${params.fastQCreport}/ ${reads};\n\t\t\tif [ ! -d \"${params.fastQCreportTrimmed}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.fastQCreportTrimmed}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\t\n\t\t\tcd ${params.readstrimmedDir}/${pair_id}/;\n\t\t\tfastqc -o ${params.fastQCreportTrimmed}/${pair_id}/  ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq;\n\t\t\techo \"\\n OK - fastQCreport on  ${pair_id} and on ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq and trimmed2.fastq - Run at  `date`\" >> ${params.output}/README;\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 28,
        "string_script": "    if( params.mode == 'QC' )\n    \"\"\" \n\t\tif [[ \"${params.debug}\" =~ .*QC.*  ]]; then\n            echo \"\\n OK - NO fastQCreport\" >> ${params.output}/README;      \n        else\n\t\t\tcd ${params.readsPath};\n\t\t\tfastqc -o ${params.fastQCreport}/ ${reads};\n\t\t\tif [ ! -d \"${params.fastQCreportTrimmed}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.fastQCreportTrimmed}/; mkdir ${pair_id}/; chmod 777 ${pair_id}/; \n\t\t\tfi\t\n\t\t\tcd ${params.readstrimmedDir}/${pair_id}/;\n\t\t\tfastqc -o ${params.fastQCreportTrimmed}/${pair_id}/  ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq ${params.readstrimmedDir}/${pair_id}/trimmed2.fastq;\n\t\t\techo \"\\n OK - fastQCreport on  ${pair_id} and on ${params.readstrimmedDir}/${pair_id}/trimmed1.fastq and trimmed2.fastq - Run at  `date`\" >> ${params.output}/README;\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "read_pairs5"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "Rsem": {
        "name_process": "Rsem",
        "string_process": "\nprocess Rsem {\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\tinput:\n\tfile 'params.genome' \n\tfile 'params.annotation'\n\tset pair_id, file(reads) from read_pairs2\n\n    script:\n    if( params.mode == 'RSEM' )\n    \"\"\"\n    \tif [[ \"${params.debug}\" =~ .*prep.*  ]]; then\n\t\t\techo \"\\n OK - NO RSEM reference preparation\" >> ${params.output}/README;      \n        else \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\n\t\t\tif [ ! -d \"${params.rsem}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.rsem}/; mkdir ${pair_id}/; chmod 777  ${pair_id}/; \n\t\t\tfi\n\t\t\t#module load bioinfo/RSEM-1.3.0; \n\t\t\trsem-prepare-reference --gtf ${params.annotation}  ${params.genome} ${params.rsemDir}/animal_refseq;\n\t\t\t#module unload bioinfo/RSEM-1.3.0; \n\t\t\techo \"\\n OK - RSEM Genome Generate - Run at  `date`\" >> ${params.output}/README;\n\tfi\n\t\t\n\t\tif [[ \"${params.debug}\" =~ .*Rsem.*  ]]; then\n            echo \"\\n OK - NO RSEM\" >> ${params.output}/README;      \n        else \t\n\t\t\t#Prepare BAM for RSEM\n\t\t\tconvert-sam-for-rsem  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam ${params.rsem}/${pair_id}/Aligned.toTranscriptome.sort.bam.ConvertedBam;\n\t\t\t#RSEM \n\t\t\trsem-calculate-expression --append-names --bam --no-bam-output --estimate-rspd --calc-ci --seed 12345 -p 4 --ci-memory 30000 --paired-end ${params.rsem}/${pair_id}/Aligned.toTranscriptome.sort.bam.ConvertedBam.bam  ${params.rsemDir}/animal_refseq ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant;\n\t\t        #rsem-calculate-expression --append-names tells RSEM to append gene_name/transcript_name to the result files.\n\t\t\t\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.cnt   ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.cnt;\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.model  ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.model;\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.theta  ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.theta;\n\t\t\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 46,
        "string_script": "    if( params.mode == 'RSEM' )\n    \"\"\"\n    \tif [[ \"${params.debug}\" =~ .*prep.*  ]]; then\n\t\t\techo \"\\n OK - NO RSEM reference preparation\" >> ${params.output}/README;      \n        else \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\n\t\t\tif [ ! -d \"${params.rsem}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.rsem}/; mkdir ${pair_id}/; chmod 777  ${pair_id}/; \n\t\t\tfi\n\t\t\t#module load bioinfo/RSEM-1.3.0; \n\t\t\trsem-prepare-reference --gtf ${params.annotation}  ${params.genome} ${params.rsemDir}/animal_refseq;\n\t\t\t#module unload bioinfo/RSEM-1.3.0; \n\t\t\techo \"\\n OK - RSEM Genome Generate - Run at  `date`\" >> ${params.output}/README;\n\tfi\n\t\t\n\t\tif [[ \"${params.debug}\" =~ .*Rsem.*  ]]; then\n            echo \"\\n OK - NO RSEM\" >> ${params.output}/README;      \n        else \t\n\t\t\t#Prepare BAM for RSEM\n\t\t\tconvert-sam-for-rsem  ${params.mappingDir}/${pair_id}/Aligned.toTranscriptome.sort.bam ${params.rsem}/${pair_id}/Aligned.toTranscriptome.sort.bam.ConvertedBam;\n\t\t\t#RSEM \n\t\t\trsem-calculate-expression --append-names --bam --no-bam-output --estimate-rspd --calc-ci --seed 12345 -p 4 --ci-memory 30000 --paired-end ${params.rsem}/${pair_id}/Aligned.toTranscriptome.sort.bam.ConvertedBam.bam  ${params.rsemDir}/animal_refseq ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant;\n\t\t        #rsem-calculate-expression --append-names tells RSEM to append gene_name/transcript_name to the result files.\n\t\t\t\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.cnt   ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.cnt;\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.model  ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.model;\n\t\t\tcp ${params.rsem}/${pair_id}/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.stat/Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.theta  ${params.multiQC}/${pair_id}_Aligned.toTranscriptome.out.bam.ConvertedBam_Quant.theta;\n\t\t\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 34,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_pairs2"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "RsemConcat": {
        "name_process": "RsemConcat",
        "string_process": "\nprocess RsemConcat {\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\n    script:\n    if( params.mode == 'RSEMconcat' )\n    \"\"\" \n\t\tif [[ \"${params.debug}\" =~ .*Rsem.*  ]]; then\n            echo \"\\n OK - NO RSEM\" >> ${params.output}/README;      \n        else\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\n\t\t\t\n\t\t\t#Script de concatenation des fichiers de quantifications des isoforms en matrice globale \n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_expected_count -s expected_count -i ${params.rsem}/*/*isoforms* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_TPM -s TPM -i ${params.rsem}/*/*isoforms* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_FPKM -s FPKM -i ${params.rsem}/*/*isoforms* &&\n\t\t\t#Script de concatenation des fichiers de quantifications des genes en matrice globale\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_expeced_count -s expected_count -i ${params.rsem}/*/*genes* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_TPM -s TPM -i ${params.rsem}/*/*genes* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_FPKM -s FPKM -i ${params.rsem}/*/*genes* &&\n\t\t\techo \"\\n OK - RSEM sort on Aligned.toTranscriptome.out.bam.ConvertedBam - Run at  `date`\" >> ${params.output}/README;\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 30,
        "string_script": "    if( params.mode == 'RSEMconcat' )\n    \"\"\" \n\t\tif [[ \"${params.debug}\" =~ .*Rsem.*  ]]; then\n            echo \"\\n OK - NO RSEM\" >> ${params.output}/README;      \n        else\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\n\t\t\t\n\t\t\t#Script de concatenation des fichiers de quantifications des isoforms en matrice globale \n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_expected_count -s expected_count -i ${params.rsem}/*/*isoforms* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_TPM -s TPM -i ${params.rsem}/*/*isoforms* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_isoforms_FPKM -s FPKM -i ${params.rsem}/*/*isoforms* &&\n\t\t\t#Script de concatenation des fichiers de quantifications des genes en matrice globale\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_expeced_count -s expected_count -i ${params.rsem}/*/*genes* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_TPM -s TPM -i ${params.rsem}/*/*genes* &&\n\t\t\tpython ${params.workpath}/script_concat_rsem.py -o ${params.rsem}/MATRICE_genes_FPKM -s FPKM -i ${params.rsem}/*/*genes* &&\n\t\t\techo \"\\n OK - RSEM sort on Aligned.toTranscriptome.out.bam.ConvertedBam - Run at  `date`\" >> ${params.output}/README;\n\tfi\t\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"RSEM not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "Cufflinks": {
        "name_process": "Cufflinks",
        "string_process": "\nprocess Cufflinks {\n\n    publishDir \"${params.cufflinksDir}\"\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\tinput:\n\tfile 'params.BAMtrans' from BAMtrans_ch\n\tset pair_id, file(reads) from read_pairs3\n\n\t\n    script:\n    if( params.mode == 'cufflinks' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Cuff.*  ]]; then\n\t\t\techo \"\\n OK - NO Cufflinks\" >> ${params.output}/README;      \n\t\telse \t\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\t\n\t\t\tif [ ! -d \"${params.cufflinksDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.cufflinksDir}/; mkdir ${pair_id}/; chmod 777  ${pair_id}/; \n\t\t\tfi\n\t\t\tcd ${params.cufflinksDir}/${pair_id}/; \n\t\t\t\n\t\t\tcufflinks --max-intron-length 300000 --num-threads 4 -F 0.1 -j 0.15 --library-type fr-firststrand --GTF-guide ${params.annotation} -o ${params.cufflinksDir}/${pair_id} ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam;\n\t\t\techo \"\\n OK - Cufflinks on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;\n\t\t\t#remove tmp directory\n\t\t\trm -rf ${params.cufflinksDir}/tmp;\n\t\t\t#quality\n\t\t\tcp ${params.cufflinksDir}/${pair_id}/isoforms.fpkm_tracking ${params.multiQC}/${pair_id}_isoforms.fpkm_tracking;\n\t\t\tcp ${params.cufflinksDir}/${pair_id}/genes.fpkm_tracking ${params.multiQC}/${pair_id}_genes.fpkm_tracking;     \n\t\tfi\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"Cufflinks not (finished) yet.\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 38,
        "string_script": "    if( params.mode == 'cufflinks' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Cuff.*  ]]; then\n\t\t\techo \"\\n OK - NO Cufflinks\" >> ${params.output}/README;      \n\t\telse \t\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\t\n\t\t\tif [ ! -d \"${params.cufflinksDir}/${pair_id}/\" ]; then\n\t\t\t\tcd  ${params.cufflinksDir}/; mkdir ${pair_id}/; chmod 777  ${pair_id}/; \n\t\t\tfi\n\t\t\tcd ${params.cufflinksDir}/${pair_id}/; \n\t\t\t\n\t\t\tcufflinks --max-intron-length 300000 --num-threads 4 -F 0.1 -j 0.15 --library-type fr-firststrand --GTF-guide ${params.annotation} -o ${params.cufflinksDir}/${pair_id} ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam;\n\t\t\techo \"\\n OK - Cufflinks on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;\n\t\t\t#remove tmp directory\n\t\t\trm -rf ${params.cufflinksDir}/tmp;\n\t\t\t#quality\n\t\t\tcp ${params.cufflinksDir}/${pair_id}/isoforms.fpkm_tracking ${params.multiQC}/${pair_id}_isoforms.fpkm_tracking;\n\t\t\tcp ${params.cufflinksDir}/${pair_id}/genes.fpkm_tracking ${params.multiQC}/${pair_id}_genes.fpkm_tracking;     \n\t\tfi\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"Cufflinks not (finished) yet.\";\n    \"\"\"",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [
            "Cufflinks"
        ],
        "tools_url": [
            "https://bio.tools/cufflinks"
        ],
        "tools_dico": [
            {
                "name": "Cufflinks",
                "uri": "https://bio.tools/cufflinks",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "RNA splicing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "Alternative splicing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0315",
                                    "term": "Expression profile comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3565",
                                    "term": "RNA-seq time series data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0372",
                                    "term": "DNA transcription"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2872",
                                "term": "ID list"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0916",
                                "term": "Gene report"
                            },
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0951",
                                "term": "Statistical estimate score"
                            },
                            {
                                "uri": "http://edamontology.org/data_0928",
                                "term": "Gene expression profile"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3134",
                                "term": "Gene transcript report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            }
                        ]
                    }
                ],
                "description": "Cufflinks assembles transcripts and estimates their abundances in RNA-Seq samples. It accepts aligned RNA-Seq reads and assembles the alignments into a parsimonious set of transcripts. Cufflinks then estimates the relative abundances of these transcripts based on how many reads support each one.",
                "homepage": "http://cole-trapnell-lab.github.io/cufflinks"
            }
        ],
        "inputs": [
            "BAMtrans_ch",
            "read_pairs3"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "publishDir \"${params.cufflinksDir}\"",
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "CufflinksList": {
        "name_process": "CufflinksList",
        "string_process": "\nprocess CufflinksList{\n    \n    cpus 8\n\texecutor 'SLURM'\n\t\n\tscript:\n    if( params.mode == 'cufflinksListOK' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Mrg.*  ]]; then\n\t\t\techo \"\\n OK - NO Cufflinks list\" >> ${params.output}/README;      \n\t\telse \n\t\t\t#Remove GTF old list \n\t\t\tif [ -f \"${params.cufflinksDir}/CufflinksGTF.txt\" ]; then\n\t\t\t\trm -rf ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\tfi\n\t\t\t#generate a new GTF list\n\t\t\tls -1 ${params.cufflinksDir}/*/transcripts.gtf >> ${params.cufflinksDir}/CufflinksGTF.txt; \n\t\tfi\t\n\t\"\"\"\n    else \n    \"\"\"\n\t\techo \"Cufflinks GTF list not (finished) yet. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 23,
        "string_script": "    if( params.mode == 'cufflinksListOK' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Mrg.*  ]]; then\n\t\t\techo \"\\n OK - NO Cufflinks list\" >> ${params.output}/README;      \n\t\telse \n\t\t\t#Remove GTF old list \n\t\t\tif [ -f \"${params.cufflinksDir}/CufflinksGTF.txt\" ]; then\n\t\t\t\trm -rf ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\tfi\n\t\t\t#generate a new GTF list\n\t\t\tls -1 ${params.cufflinksDir}/*/transcripts.gtf >> ${params.cufflinksDir}/CufflinksGTF.txt; \n\t\tfi\t\n\t\"\"\"\n    else \n    \"\"\"\n\t\techo \"Cufflinks GTF list not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "Cuffmerge": {
        "name_process": "Cuffmerge",
        "string_process": "\nprocess Cuffmerge {\n    \n    cpus 8\n\texecutor 'SLURM'\n\t\n\n\tinput:\n\tfile 'params.GTF' from transcripts_ch\n\t\n    script:\n    if( params.mode == 'cuffmerge' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Mrg.*  ]]; then\n\t\t\techo \"\\n OK - NO Cuffmerge\" >> ${params.output}/README;      \n\t\telse \t\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.cuffmergeDir}/; \n\t\t\t#cuffmerge -o ${params.cuffmergeDir}/  -p 4 --ref-sequence  ${params.genome}  -g ${params.annotation}  --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#cuffmerge -o ${params.cuffmergeDir}/  -p 4 --ref-sequence  ${params.genome}  -g ${params.annotationGFF3}  --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#without GTF reference (optional)\n\t\t\tcuffmerge -o ${params.cuffmergeDir}/ -p 4 --ref-sequence  ${params.genome} --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#remove tmp directory\n\t\t\t#rm -rf ${params.cuffmergeDir}/tmp;\n\t\t\techo \"\\n OK - Cuffmerge on ${params.cufflinksDir}/CufflinksGTF.txt - Run at  `date`\" >> ${params.output}/README;\n\t\t\t#quality\n\t\t\tcp ${params.cuffmergeDir}/logs/run.log ${params.multiQC}/run.log;\n\t\tfi\t \n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Cuffmerge not (finished) yet. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 32,
        "string_script": "    if( params.mode == 'cuffmerge' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*Mrg.*  ]]; then\n\t\t\techo \"\\n OK - NO Cuffmerge\" >> ${params.output}/README;      \n\t\telse \t\n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.cuffmergeDir}/; \n\t\t\t#cuffmerge -o ${params.cuffmergeDir}/  -p 4 --ref-sequence  ${params.genome}  -g ${params.annotation}  --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#cuffmerge -o ${params.cuffmergeDir}/  -p 4 --ref-sequence  ${params.genome}  -g ${params.annotationGFF3}  --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#without GTF reference (optional)\n\t\t\tcuffmerge -o ${params.cuffmergeDir}/ -p 4 --ref-sequence  ${params.genome} --min-isoform-fraction 0.05 ${params.cufflinksDir}/CufflinksGTF.txt;\n\t\t\t#remove tmp directory\n\t\t\t#rm -rf ${params.cuffmergeDir}/tmp;\n\t\t\techo \"\\n OK - Cuffmerge on ${params.cufflinksDir}/CufflinksGTF.txt - Run at  `date`\" >> ${params.output}/README;\n\t\t\t#quality\n\t\t\tcp ${params.cuffmergeDir}/logs/run.log ${params.multiQC}/run.log;\n\t\tfi\t \n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Cuffmerge not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "transcripts_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "fCounts": {
        "name_process": "fCounts",
        "string_process": "\nprocess fCounts {\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\tinput:\n\tfile 'params.BAM'\n\tset pair_id, file(reads) from read_pairs_3\n\n    script:\n    if( params.mode == 'fCounts' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*FC.*  ]]; then\n\t\t\techo \"\\n OK - NO FeatureCounts\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.fCounts}/; \n\t\t\tfeatureCounts -s 2 -M -O --primary -t exon -g transcript_id -a ${params.cuffmergeDir}/merged.gtf -o ${params.fCounts}/transcripts.fcounts ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam; \n\t\t\techo \"\\n OK - featureCounts on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;  \n\t\tfi\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 25,
        "string_script": "    if( params.mode == 'fCounts' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*FC.*  ]]; then\n\t\t\techo \"\\n OK - NO FeatureCounts\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.fCounts}/; \n\t\t\tfeatureCounts -s 2 -M -O --primary -t exon -g transcript_id -a ${params.cuffmergeDir}/merged.gtf -o ${params.fCounts}/transcripts.fcounts ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam; \n\t\t\techo \"\\n OK - featureCounts on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;  \n\t\tfi\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "read_pairs_3"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "fCounts_quality": {
        "name_process": "fCounts_quality",
        "string_process": "\nprocess fCounts_quality {\n    \n\texecutor 'SLURM'\n\n    script:\n    if( params.mode == 'fCountsQuality' )\n    \"\"\"\n\t\t#quality\n\t\tcp ${params.fCounts}/transcripts.fcounts.summary ${params.multiQC}/.; \n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts Quality not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 14,
        "string_script": "    if( params.mode == 'fCountsQuality' )\n    \"\"\"\n\t\t#quality\n\t\tcp ${params.fCounts}/transcripts.fcounts.summary ${params.multiQC}/.; \n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts Quality not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "fCountsOnRef": {
        "name_process": "fCountsOnRef",
        "string_process": "\nprocess fCountsOnRef {\n    \n    cpus 8\n\texecutor 'SLURM'\n\n\tinput:\n\tfile 'params.BAM'\n\tset pair_id, file(reads) from read_pairs_4\n\n    script:\n    if( params.mode == 'fCountsOnRef' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*fref.*  ]]; then\n\t\t\techo \"\\n OK - NO FeatureCounts\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.fCountsOnRef}/; \n\t\t\tfeatureCounts -s 2 -M -O --primary -t exon -g transcript_id -a ${params.annotation} -o ${params.fCountsOnRef}/transcripts.fcounts ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam; \n\t\t\techo \"\\n OK - featureCounts for GTF reference on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;\n\t\tfi\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 25,
        "string_script": "    if( params.mode == 'fCountsOnRef' )\n    \"\"\"\n\t\tif [[ \"${params.debug}\" =~ .*fref.*  ]]; then\n\t\t\techo \"\\n OK - NO FeatureCounts\" >> ${params.output}/README;      \n\t\telse \n\t\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t\tcd ${params.fCountsOnRef}/; \n\t\t\tfeatureCounts -s 2 -M -O --primary -t exon -g transcript_id -a ${params.annotation} -o ${params.fCountsOnRef}/transcripts.fcounts ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam; \n\t\t\techo \"\\n OK - featureCounts for GTF reference on ${params.mappingDir}/${pair_id}/Aligned.sortedByCoord.out.bam - Run at  `date`\" >> ${params.output}/README;\n\t\tfi\t\n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "read_pairs_4"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 8",
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "fCountsOnRef_quality": {
        "name_process": "fCountsOnRef_quality",
        "string_process": "\nprocess fCountsOnRef_quality {\n    \n\texecutor 'SLURM'\n\n    script:\n    if( params.mode == 'fCountsQualityOnRef' )\n    \"\"\"\n\t\t#quality\n\t\tcp ${params.fCountsOnRef}/transcripts.fcounts.summary ${params.multiQC}/.;  \n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts Quality not (finished) yet. \\n\";\n    \"\"\"  \n    }",
        "nb_lignes_process": 14,
        "string_script": "    if( params.mode == 'fCountsQualityOnRef' )\n    \"\"\"\n\t\t#quality\n\t\tcp ${params.fCountsOnRef}/transcripts.fcounts.summary ${params.multiQC}/.;  \n    \"\"\"   \n    else \n    \"\"\"\n\t\techo \"featureCounts Quality not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "executor 'SLURM'"
        ],
        "when": "",
        "stub": ""
    },
    "FEELnc": {
        "name_process": "FEELnc",
        "string_process": "\nprocess FEELnc {\n    \n    cpus 16\n\texecutor 'SLURM'\n\tmemory '60 GB'\n\t\n\tinput:\n\tfile 'params.GTF'\n\tfile 'params.fasta'\n\n    script:\n      \n                            \n      \n    if( params.mode == 'FEELnc' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t     \n\t\t#step 1 : FILTER\n\t\t  \n\t\tif [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\t\techo \"\\n OK - NO FEELnc filter\" >> ${params.output}/README;      \n\t\telse \n\t\t\tFEELnc_filter.pl -i ${params.cuffmergeDir}/merged.gtf -a ${params.annotation}  --biotype transcript_biotype=protein_coding --monoex=1 --size=200  -o ${params.feelnc}/filter/FEELnc_filter.log --proc=12  > ${params.feelnc}/filter/candidate_lncRNA.gtf;\n\t\t\t#quality on filter step\n\t\t\tcp ${params.feelnc}/filter/FEELnc_filter.log \t${params.multiQC}/.;  \n\t\tfi\n\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t#step 2 : PROTEIN PROT shuffle et intergenic\n\t\t    \n\t\tif [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\t\techo \"\\n OK - NO FEELnc codprot\" >> ${params.output}/README;      \n\t\telse \n\t\t\tgrep \"protein_coding\" ${params.annotation} > ${params.feelnc}/training_prot.gtf;\n\t\t\tcd ${params.feelnc}/protein_coding/shuffle/; \n\t\t\tFEELnc_codpot.pl -i ${params.feelnc}/filter/candidate_lncRNA.gtf -a ${params.feelnc}/training_prot.gtf -g ${params.genome} --mode=shuffle;\n\t\t \n\t\t\t#quality on protein coding shuffle step\n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_learningData.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_learningData.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_summary.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_summary.txt;      \n\t\t\tif [ -f \"${params.feelnc}/protein_coding/shuffle/*.log\" ]; then\n\t\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*.log ${params.multiQC}/.;\n\t\t\tfi \n\t\tfi\n\t\n    cd ${params.feelnc}/protein_coding/intergenic/; \n     \n    if [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\techo \"\\n OK - NO FEELnc protein coding\" >> ${params.output}/README;      \n    else \n\t\tFEELnc_codpot.pl -i ${params.feelnc}/filter/candidate_lncRNA.gtf -a ${params.feelnc}/training_prot.gtf -g ${params.genome}  -b transcript_biotype=protein_coding -b transcript_status=KNOWN --mode=intergenic;\n\t\t \n\t\t#quality on protein coding intergenic step\n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_learningData.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_learningData.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_summary.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_summary.txt;      \n\t\tif [ -f \"${params.feelnc}/protein_coding/intergenic/*.log\" ]; then\n\t\t\t\tcp ${params.feelnc}/protein_coding/intergenic/*.log ${params.multiQC}/.;\n\t\tfi \n    fi\n\n\n    #step 3 : CLASSIFIER shuffle et intergenic\n       \n    if [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\techo \"\\n OK - NO FEELnc classifier\" >> ${params.output}/README;      \n    else \n        #shuffle\n        #[Possibly] {INPUT}.noORF.gtf \n\t\tif [ ! -d \"${params.feelnc}/protein_coding/shuffle/*/*noORF.gtf\" ]; then\n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/*lncRNA.gtf  ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf;\n\t\telse\n\t\tcat ${params.feelnc}/protein_coding/shuffle/*/*noORF.gtf ${params.feelnc}/protein_coding/shuffle/*/*lncRNA.gtf > ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf;\n\t\tfi\n\t\tFEELnc_classifier.pl -i ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf -a  ${params.feelnc}/training_prot.gtf  > ${params.feelnc}/classifier/shuffle/lncRNA_shuffle_classes.txt;\n\t\t\t\n\t\t#intergenic\n\t\t#[Possibly] {INPUT}.noORF.gtf  \n\t\tif [ ! -d \"${params.feelnc}/protein_coding/intergenic/*/*noORF.gtf\" ]; then\n\t\t\tcp ${params.feelnc}/protein_coding/intergenic/*/*lncRNA.gtf ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf;\n\t\telse\n\t\t\tcat ${params.feelnc}/protein_coding/intergenic/*/*noORF.gtf ${params.feelnc}/protein_coding/intergenic/*/*lncRNA.gtf > ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf;\n\t\tfi\n\t\t\t \n\t\tFEELnc_classifier.pl -i ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf -a  ${params.feelnc}/training_prot.gtf   > ${params.feelnc}/classifier/intergenic/lncRNA_intergenic_classes.txt;\n\t\t\t \n\t\t#quality on classifier shuffle and intergenic step\n\t\tif [ -f \"${params.feelnc}/classifier/*.log\" ]; then\n\t\t\tcp ${params.feelnc}/classifier/*.log ${params.multiQC}/.;\n\t\tfi \n\tfi\t\n    echo \"\\n OK - FEELnc (filter, protein coding and classifier) on ${params.cuffmergeDir}/merged.gtf - Run at  `date`\" >> ${params.output}/README;\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Feelnc not (finished) yet. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 100,
        "string_script": "    if( params.mode == 'FEELnc' )\n    \"\"\"\n\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t     \n\t\t#step 1 : FILTER\n\t\t  \n\t\tif [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\t\techo \"\\n OK - NO FEELnc filter\" >> ${params.output}/README;      \n\t\telse \n\t\t\tFEELnc_filter.pl -i ${params.cuffmergeDir}/merged.gtf -a ${params.annotation}  --biotype transcript_biotype=protein_coding --monoex=1 --size=200  -o ${params.feelnc}/filter/FEELnc_filter.log --proc=12  > ${params.feelnc}/filter/candidate_lncRNA.gtf;\n\t\t\t#quality on filter step\n\t\t\tcp ${params.feelnc}/filter/FEELnc_filter.log \t${params.multiQC}/.;  \n\t\tfi\n\t\tcd ${params.workpath}/${params.resultsdir};\n\t\t#step 2 : PROTEIN PROT shuffle et intergenic\n\t\t    \n\t\tif [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\t\techo \"\\n OK - NO FEELnc codprot\" >> ${params.output}/README;      \n\t\telse \n\t\t\tgrep \"protein_coding\" ${params.annotation} > ${params.feelnc}/training_prot.gtf;\n\t\t\tcd ${params.feelnc}/protein_coding/shuffle/; \n\t\t\tFEELnc_codpot.pl -i ${params.feelnc}/filter/candidate_lncRNA.gtf -a ${params.feelnc}/training_prot.gtf -g ${params.genome} --mode=shuffle;\n\t\t \n\t\t\t#quality on protein coding shuffle step\n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_learningData.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_learningData.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF.txt; \n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/candidate_lncRNA.gtf_RF_summary.txt \t${params.multiQC}/shuffle_candidate_lncRNA.gtf_RF_summary.txt;      \n\t\t\tif [ -f \"${params.feelnc}/protein_coding/shuffle/*.log\" ]; then\n\t\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*.log ${params.multiQC}/.;\n\t\t\tfi \n\t\tfi\n\t\n    cd ${params.feelnc}/protein_coding/intergenic/; \n     \n    if [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\techo \"\\n OK - NO FEELnc protein coding\" >> ${params.output}/README;      \n    else \n\t\tFEELnc_codpot.pl -i ${params.feelnc}/filter/candidate_lncRNA.gtf -a ${params.feelnc}/training_prot.gtf -g ${params.genome}  -b transcript_biotype=protein_coding -b transcript_status=KNOWN --mode=intergenic;\n\t\t \n\t\t#quality on protein coding intergenic step\n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_learningData.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_learningData.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_statsLearn_CrossValidation.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF.txt; \n\t\tcp ${params.feelnc}/protein_coding/intergenic/*/candidate_lncRNA.gtf_RF_summary.txt \t${params.multiQC}/intergenic_candidate_lncRNA.gtf_RF_summary.txt;      \n\t\tif [ -f \"${params.feelnc}/protein_coding/intergenic/*.log\" ]; then\n\t\t\t\tcp ${params.feelnc}/protein_coding/intergenic/*.log ${params.multiQC}/.;\n\t\tfi \n    fi\n\n\n    #step 3 : CLASSIFIER shuffle et intergenic\n       \n    if [[ \"${params.debug}\" =~ .*FEELnc.*  ]]; then\n\t\techo \"\\n OK - NO FEELnc classifier\" >> ${params.output}/README;      \n    else \n        #shuffle\n        #[Possibly] {INPUT}.noORF.gtf \n\t\tif [ ! -d \"${params.feelnc}/protein_coding/shuffle/*/*noORF.gtf\" ]; then\n\t\t\tcp ${params.feelnc}/protein_coding/shuffle/*/*lncRNA.gtf  ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf;\n\t\telse\n\t\tcat ${params.feelnc}/protein_coding/shuffle/*/*noORF.gtf ${params.feelnc}/protein_coding/shuffle/*/*lncRNA.gtf > ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf;\n\t\tfi\n\t\tFEELnc_classifier.pl -i ${params.feelnc}/lst_shuffle_lncRNA_noORF.gtf -a  ${params.feelnc}/training_prot.gtf  > ${params.feelnc}/classifier/shuffle/lncRNA_shuffle_classes.txt;\n\t\t\t\n\t\t#intergenic\n\t\t#[Possibly] {INPUT}.noORF.gtf  \n\t\tif [ ! -d \"${params.feelnc}/protein_coding/intergenic/*/*noORF.gtf\" ]; then\n\t\t\tcp ${params.feelnc}/protein_coding/intergenic/*/*lncRNA.gtf ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf;\n\t\telse\n\t\t\tcat ${params.feelnc}/protein_coding/intergenic/*/*noORF.gtf ${params.feelnc}/protein_coding/intergenic/*/*lncRNA.gtf > ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf;\n\t\tfi\n\t\t\t \n\t\tFEELnc_classifier.pl -i ${params.feelnc}/lst_intergenic_lncRNA_noORF.gtf -a  ${params.feelnc}/training_prot.gtf   > ${params.feelnc}/classifier/intergenic/lncRNA_intergenic_classes.txt;\n\t\t\t \n\t\t#quality on classifier shuffle and intergenic step\n\t\tif [ -f \"${params.feelnc}/classifier/*.log\" ]; then\n\t\t\tcp ${params.feelnc}/classifier/*.log ${params.multiQC}/.;\n\t\tfi \n\tfi\t\n    echo \"\\n OK - FEELnc (filter, protein coding and classifier) on ${params.cuffmergeDir}/merged.gtf - Run at  `date`\" >> ${params.output}/README;\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Feelnc not (finished) yet. \\n\";\n    \"\"\"",
        "nb_lignes_script": 85,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [
            "cpus 16",
            "executor 'SLURM'",
            "memory '60 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "quality": {
        "name_process": "quality",
        "string_process": "\nprocess quality {\n    script:\n      \n             \n      \n    if( params.mode == 'qual' )\n    \"\"\"\n\t#last Star mapping log\n\tif [ -f \"${params.workpath}/${params.resultsdir}/Log.out\" ]; then\n\tmv ${params.workpath}/${params.resultsdir}/Log.out ${params.multiQC}/Log.out; \n\tfi\n\tcd ${params.multiQC}/; \n\tif [[ \"${params.debug}\" =~ .*Quality.*  ]]; then\n\t\techo \"\\n OK - NO quality and statistics\" >> ${params.output}/README;      \n\telse \n\t\tsh ${params.workpath}/report_multiqc.sh -f >& ./multiQC.log 2>&1;\n\t\techo \"OK - multiQC report - Run at  `date`\" >> ${params.output}/README ;\n\tfi \n\t#Delete tmp directory generated by Nextflow\n\t#rm -rf ${params.workpath}/work/;\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Sequences list. \\n\";\n    \"\"\"\n    }",
        "nb_lignes_process": 25,
        "string_script": "    if( params.mode == 'qual' )\n    \"\"\"\n\t#last Star mapping log\n\tif [ -f \"${params.workpath}/${params.resultsdir}/Log.out\" ]; then\n\tmv ${params.workpath}/${params.resultsdir}/Log.out ${params.multiQC}/Log.out; \n\tfi\n\tcd ${params.multiQC}/; \n\tif [[ \"${params.debug}\" =~ .*Quality.*  ]]; then\n\t\techo \"\\n OK - NO quality and statistics\" >> ${params.output}/README;      \n\telse \n\t\tsh ${params.workpath}/report_multiqc.sh -f >& ./multiQC.log 2>&1;\n\t\techo \"OK - multiQC report - Run at  `date`\" >> ${params.output}/README ;\n\tfi \n\t#Delete tmp directory generated by Nextflow\n\t#rm -rf ${params.workpath}/work/;\n    \"\"\"\n    else \n    \"\"\"\n\t\techo \"Sequences list. \\n\";\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "RASH"
        ],
        "tools_url": [
            "https://bio.tools/RASH"
        ],
        "tools_dico": [
            {
                "name": "RASH",
                "uri": "https://bio.tools/RASH",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3315",
                            "term": "Mathematics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3315",
                            "term": "Maths"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3778",
                                    "term": "Text annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "a Web-first format for HTML-based scholarly articles.\n\nResearch Articles in Simplified HTML (RASH) Framework includes a markup language defined as a subset of HTML+RDF for writing scientific articles, and related tools to convert it into different formats, to extract data from it, etc.\n\nHow to cite: Peroni, S., Osborne, F., Di Iorio, A., Nuzzolese, A. G., Poggi, F., Vitali, F., Motta, E. (2017). Research Articles in Simplified HTML: a Web-first format for HTML-based scholarly articles. PeerJ Computer Science 3: e132. e2513. DOI: https://doi.org/10.7717/peerj-cs.132.\n\n# rash-check.sh - fully check RASH documents.\n\nThe odt2rash.jar executable converts an ODT file into the RASH format.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'Research Articles Simplified HTML', 'SAVE-SD'",
                "homepage": "https://w3id.org/people/essepuntato/papers/rash-peerj2016.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "SarahMaman__NextflowRNAseq",
        "directive": [],
        "when": "",
        "stub": ""
    }
}