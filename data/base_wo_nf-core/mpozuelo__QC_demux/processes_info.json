{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": " process get_software_versions {\n     publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n         saveAs: { filename ->\n             if (filename.indexOf(\".csv\") > 0) filename\n             else null\n         }\n\n     output:\n     file 'software_versions_mqc.yaml' into software_versions_yaml\n     file \"software_versions.csv\"\n\n     script:\n     \"\"\"\n     echo $workflow.manifest.version &> v_ngi_QC.txt\n     echo $workflow.nextflow.version &> v_nextflow.txt\n     fastqc --version &> v_fastqc.txt\n     cutadapt --version &> v_cutadapt.txt\n     trim_galore --version &> v_trim_galore.txt\n     STAR --version &> v_star.txt\n     samtools --version &> v_samtools.txt\n     read_duplication.py --version &> v_rseqc.txt\n     picard MarkDuplicates --version &> v_markduplicates.txt  || true\n     multiqc --version &> v_multiqc.txt\n     scrape_software_versions.py &> software_versions_mqc.yaml\n     \"\"\"\n }",
        "nb_lignes_process": 24,
        "string_script": "     \"\"\"\n     echo $workflow.manifest.version &> v_ngi_QC.txt\n     echo $workflow.nextflow.version &> v_nextflow.txt\n     fastqc --version &> v_fastqc.txt\n     cutadapt --version &> v_cutadapt.txt\n     trim_galore --version &> v_trim_galore.txt\n     STAR --version &> v_star.txt\n     samtools --version &> v_samtools.txt\n     read_duplication.py --version &> v_rseqc.txt\n     picard MarkDuplicates --version &> v_markduplicates.txt  || true\n     multiqc --version &> v_multiqc.txt\n     scrape_software_versions.py &> software_versions_mqc.yaml\n     \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "Cutadapt",
            "STAR",
            "SAMtools",
            "Picard",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/cutadapt",
            "https://bio.tools/star",
            "https://bio.tools/samtools",
            "https://bio.tools/picard_tools",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "modify_samplesheet": {
        "name_process": "modify_samplesheet",
        "string_process": " process modify_samplesheet {\n    publishDir \"${cluster_path}/data/05_QC/${project}/subset_fastq/samplesheet/\", mode: params.publish_dir_mode\n\n    input:\n    path samplesheet from ch_input\n\n    output:\n    path \"samplesheet_validated.csv\" into ch_samplesheet\n\n    script:\n    out = \"samplesheet_validated.csv\"\n\n    \"\"\"\n    modify_samplesheet.py $samplesheet $out\n    \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "    out = \"samplesheet_validated.csv\"\n\n    \"\"\"\n    modify_samplesheet.py $samplesheet $out\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Ragout"
        ],
        "tools_url": [
            "https://bio.tools/ragout"
        ],
        "tools_dico": [
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            }
        ],
        "inputs": [
            "ch_input"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_samplesheet"
        ],
        "nb_outputs": 1,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "publishDir \"${cluster_path}/data/05_QC/${project}/subset_fastq/samplesheet/\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "subset_10pc": {
        "name_process": "subset_10pc",
        "string_process": " process subset_10pc {\n    tag \"$sample\"\n    label 'process_low'\n    publishDir \"${cluster_path}/data/05_QC/${project}/subset_fastq/${sample}\", mode: 'copy',\n    saveAs: { filename ->\n      filename.endsWith(\"QC.fq.gz\") ? filename : null\n    }\n\n    input:\n    set val(sample), path(reads), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) from ch_subset\n\n    output:\n    set val(sample), path(\"*QC*.fq.gz\"), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) into ch_trimming\n\n    script:\n    read1 = \"${sample}_QC_R1.fq\"\n    read2 = \"${sample}_QC_R2.fq\"\n\n                                                                                                                 \n                                               \n    \"\"\"\n    subset=(\\$(echo \\$((\\$(echo -e `zcat ${reads[0]} | awk 'NR % 4 == 2' - | wc -l`)*10/100))))\n    seqtk sample -s100 ${reads[0]} \\$subset > $read1\n    seqtk sample -s100 ${reads[1]} \\$subset > $read2\n    pigz -p $task.cpus $read1\n    pigz -p $task.cpus $read2\n    \"\"\"\n  }",
        "nb_lignes_process": 26,
        "string_script": "    read1 = \"${sample}_QC_R1.fq\"\n    read2 = \"${sample}_QC_R2.fq\"\n\n                                                                                                                 \n                                               \n    \"\"\"\n    subset=(\\$(echo \\$((\\$(echo -e `zcat ${reads[0]} | awk 'NR % 4 == 2' - | wc -l`)*10/100))))\n    seqtk sample -s100 ${reads[0]} \\$subset > $read1\n    seqtk sample -s100 ${reads[1]} \\$subset > $read2\n    pigz -p $task.cpus $read1\n    pigz -p $task.cpus $read2\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "ch_subset"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_trimming"
        ],
        "nb_outputs": 1,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_low'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/subset_fastq/${sample}\", mode: 'copy' , saveAs: { filename -> filename.endsWith(\"QC.fq.gz\") ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "trimming": {
        "name_process": "trimming",
        "string_process": "\nprocess trimming {\n  tag \"$sample\"\n  label 'process_medium'\n  publishDir \"${cluster_path}/data/05_QC/${project}/trimgalore/${sample}\", mode: 'copy',\n  saveAs: { filename ->\n    if (filename.endsWith(\".log\") || filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\"\n    else if (filename.endsWith(\"_fastqc.html\")) \"fastqc/$filename\"\n    else if (filename.endsWith(\".zip\")) \"fastqc/zips/$filename\"\n    else if (filename.indexOf(\"_fastqc\") > 0) filename\n    else if (filename.endsWith(\"UMI.fq.gz\")) \"UMIs/$filename\"\n    else if (filename.endsWith(\"woUMI_R{1,2}.fq.gz\")) \"fastqWoUMIs/$filename\"\n    else filename\n  }\n\n\n  input:\n  set val(sample), path(subset), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) from ch_trimming\n\n  output:\n  set val(sample), path(\"*val_{1,2}.fq.gz\"), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) into ch_star\n  file \"*trimming_report.txt\" into trimgalore_trim_mqc\n  file \"*_fastqc.{zip,html}\" into trimgalore_fastqc_mqc\n  file \"*UMI.fq.gz\" optional true\n\n  script:\n                                                                 \n                                                                 \n  umi = \"${sample}_UMI.fq.gz\"\n  woumi1 = \"${sample}_woUMI_R1.fq.gz\"\n  woumi2 = \"${sample}_woUMI_R2.fq.gz\"\n\n  if (protocol == 'RNAseq_3_S' | protocol == 'RNAseq_3_ULI') {\n\n                                                                            \n                                                                                                     \n                                                                                                                                                   \n\n\n                                                                                                      \n                                                                                                                     \n                                    \n                                                                        \n\n                                                           \n                                                \n                                                             \n      \n    \"\"\"\n    cutadapt -l 10 -j 0 -o $umi ${subset[0]}\n\n    umi_tools extract -I ${subset[0]} -S $woumi1 --read2-in=${subset[1]} --read2-out=$woumi2 --bc-pattern=NNNNNNNNNN\n\n    trim_galore \\\\\n    -q 30 \\\\\n    --paired \\\\\n    --length 20 \\\\\n    -j $task.cpus \\\\\n    --fastqc \\\\\n    $woumi1 $woumi2\n    \"\"\"\n\n  } else {\n\n                                                                          \n                                                                            \n                                                                                                                         \n                                                                                                           \n                                    \n                                                                        \n\n                                                           \n                                                                     \n                                                                      \n      \n\n    \"\"\"\n    trim_galore \\\\\n    -q 30 \\\\\n    --paired \\\\\n    --length 20 \\\\\n    -j $task.cpus \\\\\n    --fastqc \\\\\n    ${subset[0]} ${subset[1]}\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 85,
        "string_script": "  umi = \"${sample}_UMI.fq.gz\"\n  woumi1 = \"${sample}_woUMI_R1.fq.gz\"\n  woumi2 = \"${sample}_woUMI_R2.fq.gz\"\n\n  if (protocol == 'RNAseq_3_S' | protocol == 'RNAseq_3_ULI') {\n\n                                                                            \n                                                                                                     \n                                                                                                                                                   \n\n\n                                                                                                      \n                                                                                                                     \n                                    \n                                                                        \n\n                                                           \n                                                \n                                                             \n      \n    \"\"\"\n    cutadapt -l 10 -j 0 -o $umi ${subset[0]}\n\n    umi_tools extract -I ${subset[0]} -S $woumi1 --read2-in=${subset[1]} --read2-out=$woumi2 --bc-pattern=NNNNNNNNNN\n\n    trim_galore \\\\\n    -q 30 \\\\\n    --paired \\\\\n    --length 20 \\\\\n    -j $task.cpus \\\\\n    --fastqc \\\\\n    $woumi1 $woumi2\n    \"\"\"\n\n  } else {\n\n                                                                          \n                                                                            \n                                                                                                                         \n                                                                                                           \n                                    \n                                                                        \n\n                                                           \n                                                                     \n                                                                      \n      \n\n    \"\"\"\n    trim_galore \\\\\n    -q 30 \\\\\n    --paired \\\\\n    --length 20 \\\\\n    -j $task.cpus \\\\\n    --fastqc \\\\\n    ${subset[0]} ${subset[1]}\n    \"\"\"\n  }",
        "nb_lignes_script": 57,
        "language_script": "bash",
        "tools": [
            "lumi",
            "Cutadapt"
        ],
        "tools_url": [
            "https://bio.tools/lumi",
            "https://bio.tools/cutadapt"
        ],
        "tools_dico": [
            {
                "name": "lumi",
                "uri": "https://bio.tools/lumi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an integrated solution for the Illumina microarray data analysis. It includes functions of Illumina BeadStudio (GenomeStudio) data input, quality control, BeadArray-specific variance stabilization, normalization and gene annotation at the probe level. It also includes the functions of processing Illumina methylation microarrays, especially Illumina Infinium methylation microarrays.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/lumi.html"
            },
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            }
        ],
        "inputs": [
            "ch_trimming"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_star",
            "trimgalore_trim_mqc",
            "trimgalore_fastqc_mqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_medium'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/trimgalore/${sample}\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".log\") || filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\" else if (filename.endsWith(\"_fastqc.html\")) \"fastqc/$filename\" else if (filename.endsWith(\".zip\")) \"fastqc/zips/$filename\" else if (filename.indexOf(\"_fastqc\") > 0) filename else if (filename.endsWith(\"UMI.fq.gz\")) \"UMIs/$filename\" else if (filename.endsWith(\"woUMI_R{1,2}.fq.gz\")) \"fastqWoUMIs/$filename\" else filename }"
        ],
        "when": "",
        "stub": ""
    },
    "star": {
        "name_process": "star",
        "string_process": "\nprocess star {\n  tag \"$sample\"\n  label 'process_high'\n  publishDir \"${cluster_path}/data/05_QC/${project}/STAR/${sample}\", mode: 'copy',\n  saveAs: { filename ->\n    if (filename.endsWith(\".out\")) \"logs/$filename\"\n    else if (filename.endsWith(\"*.fq.gz\")) \"unmapped/$filename\"\n                                            \n    else if (filename.endsWith(\".bam\")) \"bam/$filename\"\n    else if (filename.endsWith(\".bai\")) \"bam_index/$filename\"\n  }\n\n  input:\n  set val(sample), path(trimmed), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) from ch_star\n\n  output:\n  set val(sample), path(\"*.sortedByCoord.out.bam\"), path(\"*Aligned.sortedByCoord.out.bam.bai\") into ch_bam_samtools,\n                                                                                                    ch_bam_stats\n  set val(sample), path(\"*.sortedByCoord.out.bam\") into ch_markduplicates\n                                                                              \n  set val(sample), path(\"*unmapped*\") optional true\n  path(\"*.out\") into star_logs          \n  set val(sample), path(\"*.tab\") into ch_tab\n  path(\"*.mapped.tsv\") into concatenate_mapped\n\n\n\n  script:\n\n                                                                                                               \n  unaligned = params.complete ? \"--outReadsUnmapped Fastx\" : ''\n\n  def star_mem = task.memory ?: params.star_memory ?: false\n  def avail_mem = star_mem ? \"--limitBAMsortRAM ${star_mem.toBytes() - 100000000}\" : ''\n\n                                                                                         \n  \"\"\"\n  STAR \\\\\n  --genomeDir ${star[1]} \\\\\n  --sjdbGTFfile ${star[0]} \\\\\n  --readFilesIn $trimmed \\\\\n  --runThreadN $task.cpus \\\\\n  --outWigType bedGraph \\\\\n  --readFilesCommand zcat \\\\\n  --outFileNamePrefix $sample \\\\\n  --outSAMunmapped Within \\\\\n  --runDirPerm All_RWX $unaligned \\\\\n  --outSAMtype BAM SortedByCoordinate $avail_mem \\\\\n  --outSAMattributes NH HI AS NM MD \\\\\n  --outSAMattrRGline ID:${sample}.R1.${protocol} SM:${sample} LB:${protocol} PL:${platform} CN:${source} DT:${date}T00:00:00-0400\n\n\n\n  if [ -f ${sample}.Unmapped.out.mate1 ]; then\n    mv ${sample}.Unmapped.out.mate1 ${sample}.unmapped_R1.fq\n    pigz -p $task.cpus ${sample}.unmapped_R1.fq\n  fi\n  if [ -f ${sample}.Unmapped.out.mate2 ]; then\n    mv ${sample}.Unmapped.out.mate2 ${sample}.unmapped_R2.fq\n    pigz -p $task.cpus ${sample}.unmapped_R2.fq\n  fi\n\n  samtools index ${sample}Aligned.sortedByCoord.out.bam\n\n  uniquely=\\$(grep \"Uniquely mapped reads %\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  multiple=\\$(grep \"% of reads mapped to multiple loci\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  many=\\$(grep \"% of reads mapped to too many loci\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  printf \"%s\\t%s\\t%s\\t%s\\n\" \"${sample}\" \"\\$uniquely\" \"\\$multiple\" \"\\$many\" > ${sample}.mapped.tsv\n  \"\"\"\n  }",
        "nb_lignes_process": 69,
        "string_script": "  unaligned = params.complete ? \"--outReadsUnmapped Fastx\" : ''\n\n  def star_mem = task.memory ?: params.star_memory ?: false\n  def avail_mem = star_mem ? \"--limitBAMsortRAM ${star_mem.toBytes() - 100000000}\" : ''\n\n                                                                                         \n  \"\"\"\n  STAR \\\\\n  --genomeDir ${star[1]} \\\\\n  --sjdbGTFfile ${star[0]} \\\\\n  --readFilesIn $trimmed \\\\\n  --runThreadN $task.cpus \\\\\n  --outWigType bedGraph \\\\\n  --readFilesCommand zcat \\\\\n  --outFileNamePrefix $sample \\\\\n  --outSAMunmapped Within \\\\\n  --runDirPerm All_RWX $unaligned \\\\\n  --outSAMtype BAM SortedByCoordinate $avail_mem \\\\\n  --outSAMattributes NH HI AS NM MD \\\\\n  --outSAMattrRGline ID:${sample}.R1.${protocol} SM:${sample} LB:${protocol} PL:${platform} CN:${source} DT:${date}T00:00:00-0400\n\n\n\n  if [ -f ${sample}.Unmapped.out.mate1 ]; then\n    mv ${sample}.Unmapped.out.mate1 ${sample}.unmapped_R1.fq\n    pigz -p $task.cpus ${sample}.unmapped_R1.fq\n  fi\n  if [ -f ${sample}.Unmapped.out.mate2 ]; then\n    mv ${sample}.Unmapped.out.mate2 ${sample}.unmapped_R2.fq\n    pigz -p $task.cpus ${sample}.unmapped_R2.fq\n  fi\n\n  samtools index ${sample}Aligned.sortedByCoord.out.bam\n\n  uniquely=\\$(grep \"Uniquely mapped reads %\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  multiple=\\$(grep \"% of reads mapped to multiple loci\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  many=\\$(grep \"% of reads mapped to too many loci\" ${sample}Log.final.out | grep -Eo '[0-9.]+%')\n  printf \"%s\\t%s\\t%s\\t%s\\n\" \"${sample}\" \"\\$uniquely\" \"\\$multiple\" \"\\$many\" > ${sample}.mapped.tsv\n  \"\"\"",
        "nb_lignes_script": 38,
        "language_script": "bash",
        "tools": [
            "STAR",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/star",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_star"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bam_samtools",
            "ch_bam_stats",
            "ch_markduplicates",
            "sample",
            "star_logs",
            "ch_tab",
            "concatenate_mapped"
        ],
        "nb_outputs": 7,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_high'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/STAR/${sample}\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".out\")) \"logs/$filename\" else if (filename.endsWith(\"*.fq.gz\")) \"unmapped/$filename\" else if (filename.endsWith(\".bam\")) \"bam/$filename\" else if (filename.endsWith(\".bai\")) \"bam_index/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n  tag \"$sample\"\n  label 'process_medium'\n  publishDir \"${cluster_path}/data/05_QC/${project}/samtools/${sample}\", mode: 'copy'\n                        \n                                                                        \n                                                                        \n                                                                   \n          \n\n  input:\n  set val(sample), path(bam), path(index) from ch_bam_samtools\n\n  output:\n                                              \n                                               \n  path(\"*.stats\") into bam_stats          \n\n                                            \n                                             \n\n  script:\n  \"\"\"\n  samtools stats $bam > ${bam}.stats\n  \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "  \"\"\"\n  samtools stats $bam > ${bam}.stats\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bam_samtools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_medium'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/samtools/${sample}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "rseqc": {
        "name_process": "rseqc",
        "string_process": "\nprocess rseqc {\n  tag \"$sample\"\n  label 'process_medium'\n  publishDir \"${cluster_path}/data/05_QC/${project}/rseqc/${sample}\", mode: 'copy',\n  saveAs: {filename ->\n         if (filename.indexOf(\"bam_stat.txt\") > 0)                      \"bam_stat/$filename\"\n    else if (filename.indexOf(\"read_duplication.DupRate_plot.pdf\") > 0) \"read_duplication/$filename\"\n    else if (filename.indexOf(\"read_duplication.DupRate_plot.r\") > 0)   \"read_duplication/rscripts/$filename\"\n    else if (filename.indexOf(\"read_duplication.pos.DupRate.xls\") > 0)  \"read_duplication/dup_pos/$filename\"\n    else if (filename.indexOf(\"read_duplication.seq.DupRate.xls\") > 0)  \"read_duplication/dup_seq/$filename\"\n  }\n\n  input:\n  set val(sample), path(bam), path(bai) from ch_bam_stats\n\n  output:\n  path(\"${bam.baseName}.bam_stat.txt\") into rseqc_bam          \n  path(\"*.{xls,pdf,r}\") into rseqc_dup\n\n\n  script:\n  \"\"\"\n  bam_stat.py -i $bam 2> ${bam.baseName}.bam_stat.txt\n  read_duplication.py -i $bam -o ${bam.baseName}.read_duplication\n  \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  bam_stat.py -i $bam 2> ${bam.baseName}.bam_stat.txt\n  read_duplication.py -i $bam -o ${bam.baseName}.read_duplication\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bam_stats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rseqc_bam",
            "rseqc_dup"
        ],
        "nb_outputs": 2,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_medium'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/rseqc/${sample}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"bam_stat.txt\") > 0) \"bam_stat/$filename\" else if (filename.indexOf(\"read_duplication.DupRate_plot.pdf\") > 0) \"read_duplication/$filename\" else if (filename.indexOf(\"read_duplication.DupRate_plot.r\") > 0) \"read_duplication/rscripts/$filename\" else if (filename.indexOf(\"read_duplication.pos.DupRate.xls\") > 0) \"read_duplication/dup_pos/$filename\" else if (filename.indexOf(\"read_duplication.seq.DupRate.xls\") > 0) \"read_duplication/dup_seq/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "picard": {
        "name_process": "picard",
        "string_process": "\nprocess picard {\n  tag \"${bam.baseName - '.sorted'}\"\n  label 'process_medium'\n  publishDir \"${cluster_path}/data/05_QC/${project}/markduplicates/\", mode: params.publish_dir_mode,\n  saveAs: {filename -> filename.indexOf(\"_metrics.txt\") > 0 ? \"metrics/$filename\" : \"$filename\"}\n\n  input:\n  set val(name), file(bam) from ch_markduplicates\n\n  output:\n  file \"${bam.baseName}.markDups_metrics.txt\" into picard_mrkd_results\n  file \"${bam.baseName}.sort.qual_score_dist.txt\" into picard_distribution_results\n\n  script:\n  markdup_java_options = (task.memory.toGiga() > 8) ? params.markdup_java_options : \"\\\"-Xms\" +  (task.memory.toGiga() / 2 )+\"g \"+ \"-Xmx\" + (task.memory.toGiga() - 1)+ \"g\\\"\"\n\n  \"\"\"\n  picard ${markdup_java_options} MarkDuplicates \\\\\n  INPUT=$bam \\\\\n  OUTPUT=${bam.baseName}.markDups.bam \\\\\n  METRICS_FILE=${bam.baseName}.markDups_metrics.txt \\\\\n  REMOVE_DUPLICATES=false \\\\\n  ASSUME_SORTED=true \\\\\n  PROGRAM_RECORD_ID='null' \\\\\n  VALIDATION_STRINGENCY=LENIENT\n\n  picard ${markdup_java_options} QualityScoreDistribution \\\\\n  INPUT=$bam \\\\\n  O=${bam.baseName}.sort.qual_score_dist.txt \\\n  CHART=${bam.baseName}.sort.qual_score_dist.pdf\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  markdup_java_options = (task.memory.toGiga() > 8) ? params.markdup_java_options : \"\\\"-Xms\" +  (task.memory.toGiga() / 2 )+\"g \"+ \"-Xmx\" + (task.memory.toGiga() - 1)+ \"g\\\"\"\n\n  \"\"\"\n  picard ${markdup_java_options} MarkDuplicates \\\\\n  INPUT=$bam \\\\\n  OUTPUT=${bam.baseName}.markDups.bam \\\\\n  METRICS_FILE=${bam.baseName}.markDups_metrics.txt \\\\\n  REMOVE_DUPLICATES=false \\\\\n  ASSUME_SORTED=true \\\\\n  PROGRAM_RECORD_ID='null' \\\\\n  VALIDATION_STRINGENCY=LENIENT\n\n  picard ${markdup_java_options} QualityScoreDistribution \\\\\n  INPUT=$bam \\\\\n  O=${bam.baseName}.sort.qual_score_dist.txt \\\n  CHART=${bam.baseName}.sort.qual_score_dist.pdf\n  \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "ch_markduplicates"
        ],
        "nb_inputs": 1,
        "outputs": [
            "picard_mrkd_results",
            "picard_distribution_results"
        ],
        "nb_outputs": 2,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"${bam.baseName - '.sorted'}\"",
            "label 'process_medium'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/markduplicates/\", mode: params.publish_dir_mode , saveAs: {filename -> filename.indexOf(\"_metrics.txt\") > 0 ? \"metrics/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": " process fastqc {\n     tag \"$sample\"\n     label 'process_low'\n     cache true\n     publishDir \"${cluster_path}/data/05_QC/${project}/fastqc/${sample}\", mode: 'copy',\n     saveAs: { filename ->\n       filename.endsWith(\".zip\") ? \"zips/$filename\" : filename\n     }\n\n     input:\n     set val(sample), path(reads), val(run_id), val(lane), val(date), val(protocol), val(platform), val(source), val(genome), val(user), path(star) from ch_fastq\n\n     output:\n     path(\"*_fastqc.{zip,html}\") into fastqc_results          \n     path(\"*.total.reads.tsv\") into total_reads_merge\n           's/Time used: [0-9.]*//g'                                                              \n\n     script:\n     \"\"\"\n     totalReads=\\$(echo \\$(echo -e `zcat ${reads[0]} | awk 'NR % 4 == 2' - | wc -l`))\n     q301=\\$(echo \\$(q30.py ${reads[0]}))\n     q302=\\$(echo \\$(q30.py ${reads[1]}))\n     printf \"%s\\t%s\\t%s\\t%s\\n\" \"${sample}\" \"\\$totalReads\" \"\\$q301\" \"\\$q302\" > \"${sample}.total.reads.tsv\"\n     fastqc --quiet --threads $task.cpus $reads\n     \"\"\"\n   }",
        "nb_lignes_process": 24,
        "string_script": "     \"\"\"\n     totalReads=\\$(echo \\$(echo -e `zcat ${reads[0]} | awk 'NR % 4 == 2' - | wc -l`))\n     q301=\\$(echo \\$(q30.py ${reads[0]}))\n     q302=\\$(echo \\$(q30.py ${reads[1]}))\n     printf \"%s\\t%s\\t%s\\t%s\\n\" \"${sample}\" \"\\$totalReads\" \"\\$q301\" \"\\$q302\" > \"${sample}.total.reads.tsv\"\n     fastqc --quiet --threads $task.cpus $reads\n     \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results",
            "total_reads_merge"
        ],
        "nb_outputs": 2,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"$sample\"",
            "label 'process_low'",
            "cache true",
            "publishDir \"${cluster_path}/data/05_QC/${project}/fastqc/${sample}\", mode: 'copy' , saveAs: { filename -> filename.endsWith(\".zip\") ? \"zips/$filename\" : filename }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_files": {
        "name_process": "merge_files",
        "string_process": " process merge_files {\n    tag \"merge\"\n    label 'process_low'\n    publishDir \"${cluster_path}/data/05_QC/${project}/QCTable/\", mode: 'copy'\n\n    input:\n    path(\"*\") from total_reads_merge.collect().ifEmpty([])\n    path(\"*\") from concatenate_mapped.collect().ifEmpty([])\n\n    output:\n    path(\"*QC.table.tsv\")\n\n    script:\n    \"\"\"\n    printf \"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t%s\\n\" \"sampleID\" \"TotalReads\" \"Q30%1\" \"Q30%2\" \"UniquelyMapped%\" \"MultipleMapped%\" \"TooManyMapped%\" > \"${project}.QC.table.tsv\"\n    cat *.total.reads.tsv >> total.reads.tsv\n    sort total.reads.tsv > total.reads.sort.tsv\n    cat *.mapped.tsv >> mapped.tsv\n    sort mapped.tsv > mapped.sort.tsv\n    join total.reads.sort.tsv mapped.sort.tsv > QC.table.tsv\n    cat QC.table.tsv >> \"${project}.QC.table.tsv\"\n    \"\"\"\n  }",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    printf \"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\t%s\\n\" \"sampleID\" \"TotalReads\" \"Q30%1\" \"Q30%2\" \"UniquelyMapped%\" \"MultipleMapped%\" \"TooManyMapped%\" > \"${project}.QC.table.tsv\"\n    cat *.total.reads.tsv >> total.reads.tsv\n    sort total.reads.tsv > total.reads.sort.tsv\n    cat *.mapped.tsv >> mapped.tsv\n    sort mapped.tsv > mapped.sort.tsv\n    join total.reads.sort.tsv mapped.sort.tsv > QC.table.tsv\n    cat QC.table.tsv >> \"${project}.QC.table.tsv\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "joineRML"
        ],
        "tools_url": [
            "https://bio.tools/joinerml"
        ],
        "tools_dico": [
            {
                "name": "joineRML",
                "uri": "https://bio.tools/joinerml",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3569",
                            "term": "Applied mathematics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Joint Modelling of Multivariate Longitudinal Data and Time-to-Event Outcomes.",
                "homepage": "https://cran.r-project.org/web/packages/joineRML/"
            }
        ],
        "inputs": [
            "total_reads_merge",
            "concatenate_mapped"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "tag \"merge\"",
            "label 'process_low'",
            "publishDir \"${cluster_path}/data/05_QC/${project}/QCTable/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": " process multiqc {\n\n   publishDir \"${cluster_path}/data/05_QC/${project}/multiqc/\", mode: 'copy',\n   saveAs: { filename ->\n     if (filename.endsWith(\".html\")) filename\n   }\n\n   input:\n   path multiqc_config from ch_multiqc_config\n                               \n   path ('software_versions/*') from software_versions_yaml.collect()\n   path workflow_summary from create_workflow_summary(summary)\n   path('fastqc/*') from fastqc_results.collect().ifEmpty([])\n   path('trimgalore/*') from trimgalore_trim_mqc.collect().ifEmpty([])\n   path('trimgalore/fastqc/*') from trimgalore_fastqc_mqc.collect().ifEmpty([])\n   path('star/*') from star_logs.collect().ifEmpty([])\n   path('samtools/stats/*') from bam_stats.collect().ifEmpty([])\n   path('picard/markdups/*') from picard_mrkd_results.collect().ifEmpty([])\n   path('picard/quality_score_distribution/*') from picard_distribution_results.collect().ifEmpty([])\n           'samtools/flagstat/*'                                     \n           'samtools/idxstats/*'                                      \n   path ('rseqc/bam_stat/*') from rseqc_bam.collect().ifEmpty([])\n   path ('rseqc/read_duplication/*') from rseqc_dup.collect().ifEmpty([])\n   path \"*\" from ch_image_docs\n\n   output:\n   path \"*multiqc_report.html\"\n   path \"*_data\"\n                         \n\n   script:\n   rtitle = custom_runName ? \"--title \\\"$project\\\"\" : ''\n   rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : \"$project\"\n   \"\"\"\n   multiqc . -f $rtitle $rfilename --config $multiqc_config\n   \"\"\"\n\n }",
        "nb_lignes_process": 36,
        "string_script": "   rtitle = custom_runName ? \"--title \\\"$project\\\"\" : ''\n   rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : \"$project\"\n   \"\"\"\n   multiqc . -f $rtitle $rfilename --config $multiqc_config\n   \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "software_versions_yaml",
            "summary",
            "fastqc_results",
            "trimgalore_trim_mqc",
            "trimgalore_fastqc_mqc",
            "star_logs",
            "bam_stats",
            "picard_mrkd_results",
            "picard_distribution_results",
            "rseqc_bam",
            "rseqc_dup",
            "ch_image_docs"
        ],
        "nb_inputs": 13,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mpozuelo__QC_demux",
        "directive": [
            "publishDir \"${cluster_path}/data/05_QC/${project}/multiqc/\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".html\")) filename }"
        ],
        "when": "",
        "stub": ""
    }
}