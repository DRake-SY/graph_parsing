{
    "RIBOFILTER": {
        "name_process": "RIBOFILTER",
        "string_process": "\nprocess RIBOFILTER {\n\tlabel \"process_medium\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\t\n\n\tpublishDir { params.dedupe ? \"$params.outdir/decont/RNA/rRNAfilter_temp_fastq\" : \"$params.outdir/decont/RNA\" }, mode: 'copy', pattern: '*.fastq.gz'\n\tpublishDir \"${params.outdir}/decont/RNA\", mode: 'copy', pattern: '*.log'\n\t\n\tinput:\n\tpath ribokmers\n\ttuple val(sample_id), path(reads)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}*_{1,2}.fastq.gz\"), emit: reads\n\ttuple val(sample_id), path(\"*_rRNAfilter.log\") , emit: logs\n\t\n\twhen:\n\t!params.decont_off && params.process_rna\n\t\n\tscript:\n\tif (params.dedupe) {\n\t\n\t\"\"\"\n\tbbduk.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_mRNA_1.fastq.gz out2=${sample_id}_mRNA_2.fastq.gz \\\\\n\tk=31 \\\\\n\tref=${ribokmers} stats=${sample_id}_rRNAfilter.log\n\t\"\"\"\n\t} else if (params.dedupe == false){\n\t\"\"\"\n\tbbduk.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\tk=31 \\\\\n\tref=${ribokmers} stats=${sample_id}_rRNAfilter.log\n\t\"\"\"\n\t}\n\n}",
        "nb_lignes_process": 38,
        "string_script": "\tif (params.dedupe) {\n\t\n\t\"\"\"\n\tbbduk.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_mRNA_1.fastq.gz out2=${sample_id}_mRNA_2.fastq.gz \\\\\n\tk=31 \\\\\n\tref=${ribokmers} stats=${sample_id}_rRNAfilter.log\n\t\"\"\"\n\t} else if (params.dedupe == false){\n\t\"\"\"\n\tbbduk.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\tk=31 \\\\\n\tref=${ribokmers} stats=${sample_id}_rRNAfilter.log\n\t\"\"\"\n\t}",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ribokmers",
            "sample_id",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_medium\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir { params.dedupe ? \"$params.outdir/decont/RNA/rRNAfilter_temp_fastq\" : \"$params.outdir/decont/RNA\" }, mode: 'copy', pattern: '*.fastq.gz'",
            "publishDir \"${params.outdir}/decont/RNA\", mode: 'copy', pattern: '*.log'"
        ],
        "when": "!params.decont_off && params.process_rna",
        "stub": ""
    },
    "DEDUP": {
        "name_process": "DEDUP",
        "string_process": "\nprocess DEDUP {\n\tlabel \"process_medium\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/decont/RNA\", mode: 'copy'\n\t\n\tinput:\n\ttuple val(sample_id), path(reads)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}*_{1,2}.fastq.gz\"), emit: reads\n\ttuple val(sample_id), path(\"*.log\"), emit: logs\n\t\n\twhen:\n\t!params.decont_off && params.dedupe && params.process_rna\n\t\n\tscript:\n\t\"\"\"\n\tclumpify.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\tdedupe=t \\\\\n\toptical=f 2>${sample_id}_dedup.log\n\t\"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tclumpify.sh in=${reads[0]} in2=${reads[1]} \\\\\n\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\tdedupe=t \\\\\n\toptical=f 2>${sample_id}_dedup.log\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_medium\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/decont/RNA\", mode: 'copy'"
        ],
        "when": "!params.decont_off && params.dedupe && params.process_rna",
        "stub": ""
    },
    "KRAKEN2_RNA": {
        "name_process": "KRAKEN2_RNA",
        "string_process": "\nprocess KRAKEN2_RNA {\n\tlabel \"process_high\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/kraken2_out/RNA\", mode: 'copy'\n\t\n\tinput:\n\tpath kraken2db\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_kraken2.tax\"), emit: k2tax\n\ttuple val(sample_id), path(\"${sample_id}_kraken2.out\"), emit: k2out\n\t\n\twhen:\n\t!params.profilers_off && params.process_rna\n\n\tscript:\n\t\"\"\"\n\tkraken2 --use-names --threads $task.cpus --db \"${kraken2db}\" \\\\\n\t--report \"${sample_id}_kraken2.tax\" --output \"${sample_id}_kraken2.out\" \\\\\n\t--gzip-compressed --paired ${reads_file[0]} ${reads_file[1]}\n\t\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tkraken2 --use-names --threads $task.cpus --db \"${kraken2db}\" \\\\\n\t--report \"${sample_id}_kraken2.tax\" --output \"${sample_id}_kraken2.out\" \\\\\n\t--gzip-compressed --paired ${reads_file[0]} ${reads_file[1]}\n\t\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "kraken2db",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_high\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/kraken2_out/RNA\", mode: 'copy'"
        ],
        "when": "!params.profilers_off && params.process_rna",
        "stub": ""
    },
    "DECONT_RNA": {
        "name_process": "DECONT_RNA",
        "string_process": "\nprocess DECONT_RNA {\n\tlabel \"process_high\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/decont/RNA\", mode: 'copy'\n\t\n\tinput:\n\tpath star_index\n\tpath ribokmers\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"*.fastq.gz\"), emit: reads\n\ttuple path(\"${sample_id}.html\"), path(\"${sample_id}.json\"), path(\"${sample_id}_rRNAfilter.log\"), path(\"${sample_id}_dedup.log\") , emit: logs\n\t\n\twhen:\n\t!params.decont_off && params.process_rna\n\t\n\tscript:\n\t\n\tif (params.dedupe) {\n\t\t\"\"\"\n\t\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\trm ${sample_id}_fastp_1.fastq.gz\n\t\trm ${sample_id}_fastp_2.fastq.gz\n\t\n\t\tbbduk.sh in=${sample_id}_unmapped_1.fastq.gz in2=${sample_id}_unmapped_2.fastq.gz \\\\\n\t\tout=${sample_id}_mRNA_1.fastq.gz out2=${sample_id}_mRNA_2.fastq.gz \\\\\n\t\tk=31 \\\\\n\t\tref=${ribokmers} \\\\\n\t\tstats=${sample_id}_rRNAfilter.log\n\t\t\n\t\trm ${sample_id}_unmapped_1.fastq.gz\n\t\trm ${sample_id}_unmapped_2.fastq.gz\n\t\n\t\tclumpify.sh in=${sample_id}_mRNA_1.fastq.gz in2=${sample_id}_mRNA_2.fastq.gz \\\\\n\t\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\t\tdedupe=t \\\\\n\t\toptical=f 2>${sample_id}_dedup.log\n\t\n\t\trm ${sample_id}_mRNA_1.fastq.gz\n\t\trm ${sample_id}_mRNA_2.fastq.gz\n\t\t\"\"\"\n\t\t} else if (!params.dedupe){\n\t\t\"\"\"\n\t\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\trm ${sample_id}_fastp_1.fastq.gz\n\t\trm ${sample_id}_fastp_2.fastq.gz\n\t\n\t\tbbduk.sh in=${sample_id}_unmapped_1.fastq.gz in2=${sample_id}_unmapped_2.fastq.gz \\\\\n\t\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\t\tk=31 \\\\\n\t\tref=${ribokmers} \\\\\n\t\tstats=${sample_id}_rRNAfilter.log\n\t\t\n\t\trm ${sample_id}_unmapped_1.fastq.gz\n\t\trm ${sample_id}_unmapped_2.fastq.gz\n\t\n\t\t\"\"\"\n\t\t}\n}",
        "nb_lignes_process": 101,
        "string_script": "\tif (params.dedupe) {\n\t\t\"\"\"\n\t\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\trm ${sample_id}_fastp_1.fastq.gz\n\t\trm ${sample_id}_fastp_2.fastq.gz\n\t\n\t\tbbduk.sh in=${sample_id}_unmapped_1.fastq.gz in2=${sample_id}_unmapped_2.fastq.gz \\\\\n\t\tout=${sample_id}_mRNA_1.fastq.gz out2=${sample_id}_mRNA_2.fastq.gz \\\\\n\t\tk=31 \\\\\n\t\tref=${ribokmers} \\\\\n\t\tstats=${sample_id}_rRNAfilter.log\n\t\t\n\t\trm ${sample_id}_unmapped_1.fastq.gz\n\t\trm ${sample_id}_unmapped_2.fastq.gz\n\t\n\t\tclumpify.sh in=${sample_id}_mRNA_1.fastq.gz in2=${sample_id}_mRNA_2.fastq.gz \\\\\n\t\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\t\tdedupe=t \\\\\n\t\toptical=f 2>${sample_id}_dedup.log\n\t\n\t\trm ${sample_id}_mRNA_1.fastq.gz\n\t\trm ${sample_id}_mRNA_2.fastq.gz\n\t\t\"\"\"\n\t\t} else if (!params.dedupe){\n\t\t\"\"\"\n\t\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\trm ${sample_id}_fastp_1.fastq.gz\n\t\trm ${sample_id}_fastp_2.fastq.gz\n\t\n\t\tbbduk.sh in=${sample_id}_unmapped_1.fastq.gz in2=${sample_id}_unmapped_2.fastq.gz \\\\\n\t\tout=${sample_id}_decont_1.fastq.gz out2=${sample_id}_decont_2.fastq.gz \\\\\n\t\tk=31 \\\\\n\t\tref=${ribokmers} \\\\\n\t\tstats=${sample_id}_rRNAfilter.log\n\t\t\n\t\trm ${sample_id}_unmapped_1.fastq.gz\n\t\trm ${sample_id}_unmapped_2.fastq.gz\n\t\n\t\t\"\"\"\n\t\t}",
        "nb_lignes_script": 81,
        "language_script": "bash",
        "tools": [
            "fastPHASE",
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/fastphase",
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "star_index",
            "ribokmers",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_high\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/decont/RNA\", mode: 'copy'"
        ],
        "when": "!params.decont_off && params.process_rna",
        "stub": ""
    },
    "DMND": {
        "name_process": "DMND",
        "string_process": "\nprocess DMND {\n\tlabel \"process_highmem\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/dmnd_out\", mode: 'copy'\n\t\n\tinput:\n\tpath dmnddb\n\ttuple val(sample_id), path(read_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_uniref90_aligned.out\"), emit: aligned\n\ttuple val(sample_id), path(\"${sample_id}_uniref90_unaligned.fa\"), emit: unaligned\n\ttuple val(sample_id), path(\"${sample_id}_dmnd.log\"), emit: logs\n\n\twhen:\n\t!params.panalign_off && !params.diamond_off\n\t\n\tscript:\n\t\"\"\"\t\n\tdiamond blastx --query \"${read_file}\" \\\\\n\t--id 80 --query-cover 90 --threads $task.cpus --max-target-seqs 1 \\\\\n\t-b6 \\\\\n\t--outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend qlen sstart send slen evalue bitscore salltitles \\\\\n\t--db \"${dmnddb}\" \\\\\n\t--out \"${sample_id}_uniref90_aligned.out\" \\\\\n\t--un \"${sample_id}_uniref90_unaligned.fa\" \\\\\n\t--unfmt fasta 2>\"${sample_id}_dmnd.log\"\n\t\"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\t\"\"\"\t\n\tdiamond blastx --query \"${read_file}\" \\\\\n\t--id 80 --query-cover 90 --threads $task.cpus --max-target-seqs 1 \\\\\n\t-b6 \\\\\n\t--outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend qlen sstart send slen evalue bitscore salltitles \\\\\n\t--db \"${dmnddb}\" \\\\\n\t--out \"${sample_id}_uniref90_aligned.out\" \\\\\n\t--un \"${sample_id}_uniref90_unaligned.fa\" \\\\\n\t--unfmt fasta 2>\"${sample_id}_dmnd.log\"\n\t\"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "dmnddb",
            "sample_id",
            "read_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_highmem\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/dmnd_out\", mode: 'copy'"
        ],
        "when": "!params.panalign_off && !params.diamond_off",
        "stub": ""
    },
    "DECONT_DNA": {
        "name_process": "DECONT_DNA",
        "string_process": "\nprocess DECONT_DNA {\n\tlabel \"process_high\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/decont/DNA\", mode: 'copy'\n\t\n\tinput:\n\tpath bwaidx_path\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}*_{1,2}.fastq.gz\"), emit: reads\n\ttuple path(\"${sample_id}.html\"), path(\"${sample_id}.json\") , emit: logs\n\t\n\twhen:\n\t!params.decont_off && params.process_dna\n\t\n\tscript:\n\t\"\"\"\n\tfastp -i ${reads_file[0]} -I ${reads_file[1]} --stdout -j ${sample_id}.json -h ${sample_id}.html | \\\\\n\tbwa mem -p -t $task.cpus ${bwaidx_path}/${params.bwaidx} - | \\\\\n\tsamtools fastq -f12 -F256 -1 ${sample_id}_decont_1.fastq.gz -2 ${sample_id}_decont_2.fastq.gz -\n\t\t\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tfastp -i ${reads_file[0]} -I ${reads_file[1]} --stdout -j ${sample_id}.json -h ${sample_id}.html | \\\\\n\tbwa mem -p -t $task.cpus ${bwaidx_path}/${params.bwaidx} - | \\\\\n\tsamtools fastq -f12 -F256 -1 ${sample_id}_decont_1.fastq.gz -2 ${sample_id}_decont_2.fastq.gz -\n\t\t\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "fastPHASE",
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/fastphase",
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bwaidx_path",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_high\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/decont/DNA\", mode: 'copy'"
        ],
        "when": "!params.decont_off && params.process_dna",
        "stub": ""
    },
    "FASTP": {
        "name_process": "FASTP",
        "string_process": "\nprocess FASTP {\n\tlabel \"process_high\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/decont/RNA/fastp_tmp_fastq\", mode: 'symlink', pattern: '*.fastq.gz'\n\tpublishDir \"${params.outdir}/decont/RNA\", mode: 'copy', pattern: '*.{json,html}'\n\t\n\t\n\tinput:\n\tpath star_index\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_fastp_{1,2}.fastq.gz\"), emit: fastqreads\n\ttuple val(sample_id), path(\"${sample_id}_unmapped_{1,2}.fastq.gz\"), emit: microbereads\n\ttuple path(\"${sample_id}.html\"), path(\"${sample_id}.json\") , emit: logs\n\t\n\twhen:\n\t!params.decont_off && params.process_rna\n\t\n\tscript:\n\t\"\"\"\n\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\"\"\"\n}",
        "nb_lignes_process": 45,
        "string_script": "\t\"\"\"\n\tfastp -i ${reads_file[0]} -I ${reads_file[1]} \\\\\n\t\t--out1 ${sample_id}_fastp_1.fastq.gz --out2 ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t-j ${sample_id}.json -h ${sample_id}.html\n\t\t\n\t\tSTAR --runMode alignReads \\\\\n\t\t\t --runThreadN $task.cpus \\\\\n\t\t\t --outSAMtype None \\\\\n\t\t\t --readFilesCommand zcat \\\\\n\t\t\t --genomeDir ${star_index} \\\\\n\t\t\t --outFileNamePrefix ${sample_id}. \\\\\n\t\t\t --readFilesIn ${sample_id}_fastp_1.fastq.gz ${sample_id}_fastp_2.fastq.gz \\\\\n\t\t\t --outReadsUnmapped Fastx\n\t\t\n\t\tif [ -f ${sample_id}.Unmapped.out.mate1 ]; then\n        mv ${sample_id}.Unmapped.out.mate1 ${sample_id}_unmapped_1.fastq\n        gzip ${sample_id}_unmapped_1.fastq\n\t\tfi\n    \tif [ -f ${sample_id}.Unmapped.out.mate2 ]; then\n        mv ${sample_id}.Unmapped.out.mate2 ${sample_id}_unmapped_2.fastq\n        gzip ${sample_id}_unmapped_2.fastq\n    \tfi\n\t\t\n\t\"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "fastPHASE",
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/fastphase",
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "star_index",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_high\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/decont/RNA/fastp_tmp_fastq\", mode: 'symlink', pattern: '*.fastq.gz'",
            "publishDir \"${params.outdir}/decont/RNA\", mode: 'copy', pattern: '*.{json,html}'"
        ],
        "when": "!params.decont_off && params.process_rna",
        "stub": ""
    },
    "BRACKEN": {
        "name_process": "BRACKEN",
        "string_process": "\nprocess BRACKEN {\n\tlabel \"process_small\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/kraken2_out/DNA\", mode: 'copy'\n\t\n\tinput:\n\tpath kraken2db\n\tval(readlength)\n\ttuple val(sample_id), path(\"${sample_id}_kraken2.tax\")\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_bracken.tax\"), emit: results\n\ttuple val(sample_id), path(\"${sample_id}_bracken.out\"), emit: out\n\n\twhen:\n\t!params.profilers_off && params.process_dna\n\t\n\tscript:\n\t\"\"\"\t\n\tbracken -d \"${kraken2db}\" -i \"${sample_id}_kraken2.tax\" \\\\\n\t-o \"${sample_id}_bracken.out\" -w \"${sample_id}_bracken.tax\" -r \"${readlength}\" -l S\n\t\t\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\t\n\tbracken -d \"${kraken2db}\" -i \"${sample_id}_kraken2.tax\" \\\\\n\t-o \"${sample_id}_bracken.out\" -w \"${sample_id}_bracken.tax\" -r \"${readlength}\" -l S\n\t\t\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Bracken"
        ],
        "tools_url": [
            "https://bio.tools/bracken"
        ],
        "tools_dico": [
            {
                "name": "Bracken",
                "uri": "https://bio.tools/bracken",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Microbial ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Environmental microbiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Statistical method that computes the abundance of species in DNA sequences from a metagenomics sample.",
                "homepage": "https://ccb.jhu.edu/software/bracken/"
            }
        ],
        "inputs": [
            "kraken2db",
            "readlength",
            "sample_id"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_small\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/kraken2_out/DNA\", mode: 'copy'"
        ],
        "when": "!params.profilers_off && params.process_dna",
        "stub": ""
    },
    "PANALIGN": {
        "name_process": "PANALIGN",
        "string_process": "\nprocess PANALIGN {\n\tlabel \"process_highmem\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/panalign_out\", mode: 'copy'\n\t\n\tinput:\n\tpath pangenome_path\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_bt2_pangenome_aligned.bam\"), emit: aligned\n\ttuple val(sample_id), path(\"${sample_id}_bt2_pangenome_unaligned.fastq.gz\"), emit: unaligned\n\ttuple val(sample_id), path(\"${sample_id}_bt2.log\"), emit: logs\n\t\n\twhen:\n\t!params.panalign_off && params.process_rna\n\t\n\tscript:\n\t\"\"\"\t\n\tzcat ${reads_file[0]} ${reads_file[1]} | \\\\\n\t(bowtie2 -q -x ${pangenome_path}/${params.pangenome} -U - --un-gz \"${sample_id}_bt2_pangenome_unaligned.fastq.gz\" \\\\\n\t-p $task.cpus --very-sensitive) 2>\"${sample_id}_bt2.log\" | \\\\\n\tsamtools view -bS - > \"${sample_id}_bt2_pangenome_aligned.bam\"\n\t\t\n\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\t\"\"\"\t\n\tzcat ${reads_file[0]} ${reads_file[1]} | \\\\\n\t(bowtie2 -q -x ${pangenome_path}/${params.pangenome} -U - --un-gz \"${sample_id}_bt2_pangenome_unaligned.fastq.gz\" \\\\\n\t-p $task.cpus --very-sensitive) 2>\"${sample_id}_bt2.log\" | \\\\\n\tsamtools view -bS - > \"${sample_id}_bt2_pangenome_aligned.bam\"\n\t\t\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pangenome_path",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_highmem\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/panalign_out\", mode: 'copy'"
        ],
        "when": "!params.panalign_off && params.process_rna",
        "stub": ""
    },
    "KRAKEN2_DNA": {
        "name_process": "KRAKEN2_DNA",
        "string_process": "\nprocess KRAKEN2_DNA {\n\tlabel \"process_high\"\n\tlabel \"error_retry\"\n\ttag \"${sample_id}\"\n\tpublishDir \"${params.outdir}/kraken2_out/DNA\", mode: 'copy'\n\t\t\n\tinput:\n\tpath kraken2db\n\ttuple val(sample_id), path(reads_file)\n\t\n\toutput:\n\ttuple val(sample_id), path(\"${sample_id}_kraken2.tax\"), emit: k2tax\n\ttuple val(sample_id), path(\"${sample_id}_kraken2.out\"), emit: k2out\n\t\n\twhen:\n\t!params.profilers_off && params.process_dna\n\n\tscript:\n\t\"\"\"\n\tkraken2 --use-names --threads $task.cpus --db \"${kraken2db}\" \\\\\n\t--report \"${sample_id}_kraken2.tax\" --output \"${sample_id}_kraken2.out\" \\\\\n\t--gzip-compressed --paired ${reads_file[0]} ${reads_file[1]}\n\t\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tkraken2 --use-names --threads $task.cpus --db \"${kraken2db}\" \\\\\n\t--report \"${sample_id}_kraken2.tax\" --output \"${sample_id}_kraken2.out\" \\\\\n\t--gzip-compressed --paired ${reads_file[0]} ${reads_file[1]}\n\t\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "kraken2db",
            "sample_id",
            "reads_file"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Chiamh__meta-omics-nf",
        "directive": [
            "label \"process_high\"",
            "label \"error_retry\"",
            "tag \"${sample_id}\"",
            "publishDir \"${params.outdir}/kraken2_out/DNA\", mode: 'copy'"
        ],
        "when": "!params.profilers_off && params.process_dna",
        "stub": ""
    }
}