{
    "pangolin": {
        "name_process": "pangolin",
        "string_process": "\nprocess pangolin {\n    publishDir params.output + 'pangolin_out', mode: 'copy'\n\n    input:\n    file input\n\n    \n    script:\n    \"\"\"\n    mkdir -p ${params.rootDir}/results\n    pangolin $input \\\\\n        --threads 16 \\\\\n        --max-ambig 0.5 \\\\\n        --min-length 5000 \\\\\n        --outfile ${input}.pangolin.csv --outdir ${params.rootDir}\n\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    mkdir -p ${params.rootDir}/results\n    pangolin $input \\\\\n        --threads 16 \\\\\n        --max-ambig 0.5 \\\\\n        --min-length 5000 \\\\\n        --outfile ${input}.pangolin.csv --outdir ${params.rootDir}\n\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Clinical-Genomics-Linkoping__pangolin-nf",
        "directive": [
            "publishDir params.output + 'pangolin_out', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "pyTask": {
        "name_process": "pyTask",
        "string_process": "\nprocess pyTask {\n    echo false\n    '''\n    #!/usr/bin/env python\n    import requests\n    import pandas as pd\n    from datetime import datetime\n    import os\n    path = \"/home/jyotirmoy/Documents/test1_nf/pangolin-nf/\" # change result directory path\n    os.chdir( path )\t\t\n\n    \n    url = 'https://cov-lineages.org/lineages.html'\n    html = requests.get(url).content\n    df_list = pd.read_html(html)\n    df = df_list[-1]\n    #print(df)\n    df.to_csv('Pangolin_Lineages_Reference_'+ str(datetime.now().strftime('%Y_%m_%d')) + '.csv')\n\n    # Compare the lineage file from Pangolin and reference file\n    # If reading from the written CSV file\n    #df1=pd.read_csv('Pangolin_Lineages_Reference_2021_02_12_09_23_13.csv')\n    df2=pd.read_csv('sequence.fasta.pangolin.csv', sep=\",\")\n    df2.new = df2.rename(columns={'lineage':'Lineage'}, index={'ONE':'one'})\n\n    # If reading from the written CSV file of reference list\n    #comparedFile=df2.new.merge(df1, on='Lineage')\n    #comparedFile.to_csv('test.csv')\n\n    # If reading from the current work space\n    cfile=df2.new.merge(df, on=\"Lineage\")\n    cfile.to_csv('Pangolin_Final_Report_' + str(datetime.now().strftime('%Y_%m_%d'))+'.csv', index=False)\n    '''    \n    }",
        "nb_lignes_process": 33,
        "string_script": "'''\n    #!/usr/bin/env python\n    import requests\n    import pandas as pd\n    from datetime import datetime\n    import os\n    path = \"/home/jyotirmoy/Documents/test1_nf/pangolin-nf/\" # change result directory path\n    os.chdir( path )\t\t\n\n    \n    url = 'https://cov-lineages.org/lineages.html'\n    html = requests.get(url).content\n    df_list = pd.read_html(html)\n    df = df_list[-1]\n    #print(df)\n    df.to_csv('Pangolin_Lineages_Reference_'+ str(datetime.now().strftime('%Y_%m_%d')) + '.csv')\n\n    # Compare the lineage file from Pangolin and reference file\n    # If reading from the written CSV file\n    #df1=pd.read_csv('Pangolin_Lineages_Reference_2021_02_12_09_23_13.csv')\n    df2=pd.read_csv('sequence.fasta.pangolin.csv', sep=\",\")\n    df2.new = df2.rename(columns={'lineage':'Lineage'}, index={'ONE':'one'})\n\n    # If reading from the written CSV file of reference list\n    #comparedFile=df2.new.merge(df1, on='Lineage')\n    #comparedFile.to_csv('test.csv')\n\n    # If reading from the current work space\n    cfile=df2.new.merge(df, on=\"Lineage\")\n    cfile.to_csv('Pangolin_Final_Report_' + str(datetime.now().strftime('%Y_%m_%d'))+'.csv', index=False)\n    '''",
        "nb_lignes_script": 30,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Clinical-Genomics-Linkoping__pangolin-nf",
        "directive": [
            "echo false"
        ],
        "when": "",
        "stub": ""
    }
}