{
    "collapseDuplicates": {
        "name_process": "collapseDuplicates",
        "string_process": "\nprocess collapseDuplicates {\n  publishDir \"${params.output_dir}/collapsed\", mode: \"copy\"\n  tag \"${readFile}\"\n  \n  input:\n  tuple val(readID), file(readFile)\n  \n  output:\n  path \"*.*\"\n  \n  script:\n  \"\"\"\n  pyFastqDuplicateRemover.py -f ${readFile} -o ${readID}.fasta\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  pyFastqDuplicateRemover.py -f ${readFile} -o ${readID}.fasta\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readID",
            "readFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/collapsed\", mode: \"copy\"",
            "tag \"${readFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runPyReadCountersBlocksNoMuts": {
        "name_process": "runPyReadCountersBlocksNoMuts",
        "string_process": "\nprocess runPyReadCountersBlocksNoMuts {\n  publishDir \"${params.output_dir}/pyReadCountersBlocksNoMuts_analyses\", mode: \"copy\"\n  tag \"${alignedreadFile}\"\n  \n  input:\n  tuple val(alignedreadID), file(alignedreadFile)\n  \n  output:\n  path \"*.gtf\", emit: gtf\n  path \"*.txt\", emit: text\n  \n  script:\n  \"\"\"\n  pyReadCounters.py -f ${alignedreadFile} --gtf ${params.gtf} -v --rpkm -o ${alignedreadID}_blocks_nomuts --file_type sam --mutations  nomuts --blocks\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pyReadCounters.py -f ${alignedreadFile} --gtf ${params.gtf} -v --rpkm -o ${alignedreadID}_blocks_nomuts --file_type sam --mutations  nomuts --blocks\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "alignedreadID",
            "alignedreadFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/pyReadCountersBlocksNoMuts_analyses\", mode: \"copy\"",
            "tag \"${alignedreadFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runMultiCovTranscript": {
        "name_process": "runMultiCovTranscript",
        "string_process": "\nprocess runMultiCovTranscript {\n  publishDir \"${params.output_dir}/multicov_analyses\", mode: \"copy\"\n  tag \"${sortedbamfile}\"\n  \n  input:\n  path sortedbamfile\n  path bamfileindex\n  \n  output:\n  path \"*.txt\"\n  \n  script:\n  \"\"\"\n  bedtools multicov -s -bed ${params.transcriptgff} -bams ${sortedbamfile} >> allsample_transcriptcounts.txt\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  bedtools multicov -s -bed ${params.transcriptgff} -bams ${sortedbamfile} >> allsample_transcriptcounts.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "sortedbamfile",
            "bamfileindex"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/multicov_analyses\", mode: \"copy\"",
            "tag \"${sortedbamfile}\""
        ],
        "when": "",
        "stub": ""
    },
    "demultiplexSamples": {
        "name_process": "demultiplexSamples",
        "string_process": "\nprocess demultiplexSamples {\n  publishDir \"${params.output_dir}/demultiplexed\", mode: \"copy\"\n  tag \"${read}\"\n\n  input:\n  path read\n\n  output:\n  path \"*.fastq\", emit: demultiplexed_reads\n  path \"*.txt\", emit: stats_text\n\n  script:\n  \"\"\"\n  pyBarcodeFilter.py -f ${read} -b ${params.barcode} -m ${params.mismatches}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pyBarcodeFilter.py -f ${read} -b ${params.barcode} -m ${params.mismatches}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/demultiplexed\", mode: \"copy\"",
            "tag \"${read}\""
        ],
        "when": "",
        "stub": ""
    },
    "makeGenomeCoverageBedgraph": {
        "name_process": "makeGenomeCoverageBedgraph",
        "string_process": "\nprocess makeGenomeCoverageBedgraph {\n  publishDir \"${params.output_dir}/bedgraph_genomecov\", mode: \"copy\"\n  tag \"${bamFile}\"\n  \n  input:\n  tuple val(bamID), file(bamFile)\n  \n  output:\n  path \"*.bedgraph\"\n  \n  script:\n  \"\"\"\n  bedtools genomecov -bg -strand + -ibam ${bamFile} > ${bamID}_plus.bedgraph\n  \n  bedtools genomecov -bg -strand - -ibam ${bamFile} > ${bamID}_minus.bedgraph\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  bedtools genomecov -bg -strand + -ibam ${bamFile} > ${bamID}_plus.bedgraph\n  \n  bedtools genomecov -bg -strand - -ibam ${bamFile} > ${bamID}_minus.bedgraph\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bamID",
            "bamFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/bedgraph_genomecov\", mode: \"copy\"",
            "tag \"${bamFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runFlexBar": {
        "name_process": "runFlexBar",
        "string_process": "\nprocess runFlexBar {\n  publishDir \"${params.output_dir}/flexbar_trimmed\", mode: \"copy\"\n  tag \"${readFile}\"\n  \n  input:\n  tuple val(readID), file(readFile)\n  \n  output:\n  path \"*_trimmed.fastq\"\n\n  script:\n  if( params.adapterfile != \" \") {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5 --adapters ${params.adapterfile} \n    \"\"\"\n  }\n  \n  else if( params.adapterpreset != \" \") {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5 --aa ${params.adapterpreset}\n    \"\"\"\n  }\n  \n  else {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 28,
        "string_script": "  if( params.adapterfile != \" \") {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5 --adapters ${params.adapterfile} \n    \"\"\"\n  }\n  \n  else if( params.adapterpreset != \" \") {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5 --aa ${params.adapterpreset}\n    \"\"\"\n  }\n  \n  else {\n    \"\"\"\n    flexbar -r ${readFile} --output-reads ${readID}_trimmed.fastq -n 10 ${qflags} -ao 5\n    \"\"\"\n  }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "Flexbar"
        ],
        "tools_url": [
            "https://bio.tools/flexbar"
        ],
        "tools_dico": [
            {
                "name": "Flexbar",
                "uri": "https://bio.tools/flexbar",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3237",
                                    "term": "Primer removal"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Flexible barcode and adapter removal. It demultiplexes barcoded runs and removes adapter sequences. Several adapter removal presets for Illumina libraries are included. Computes exact overlap alignments using SIMD and multicore parallelism. Moreover, trimming and filtering features are provided. It increases read mapping rates and improves genome as well as transcriptome assemblies.  The software supports data in fasta and fastq format from multiple sequencing platforms.",
                "homepage": "https://github.com/seqan/flexbar"
            }
        ],
        "inputs": [
            "readID",
            "readFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/flexbar_trimmed\", mode: \"copy\"",
            "tag \"${readFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runPyPileup": {
        "name_process": "runPyPileup",
        "string_process": "\nprocess runPyPileup {\n  publishDir \"${params.output_dir}/pyPileup_analyses\", mode: \"copy\"\n  tag \"${alignedreadFile}\"\n  \n  input:\n  tuple val(alignedreadID), file(alignedreadFile)\n  \n  output:\n  path \"*.*\"\n  \n  script:\n  \"\"\"\n  pyPileup.py -f ${alignedreadFile} -o ${alignedreadID}_pileups.txt --tab ${params.genometab} --gtf ${params.gtf} --file_type=sam -g ${params.genelist}\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  pyPileup.py -f ${alignedreadFile} -o ${alignedreadID}_pileups.txt --tab ${params.genometab} --gtf ${params.gtf} --file_type=sam -g ${params.genelist}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "alignedreadID",
            "alignedreadFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/pyPileup_analyses\", mode: \"copy\"",
            "tag \"${alignedreadFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runFastQC": {
        "name_process": "runFastQC",
        "string_process": "\nprocess runFastQC {\n  publishDir \"${params.output_dir}/demultiplexed_fastqc\", mode: \"copy\"\n  tag \"${demultiplexed_reads}\"\n  \n  input:\n  path demultiplexed_reads\n\n  output:\n  path \"*.*\"\n\n  script:\n  \"\"\"\n  fastqc ${demultiplexed_reads}\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  fastqc ${demultiplexed_reads}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "demultiplexed_reads"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/demultiplexed_fastqc\", mode: \"copy\"",
            "tag \"${demultiplexed_reads}\""
        ],
        "when": "",
        "stub": ""
    },
    "runPyReadCounters": {
        "name_process": "runPyReadCounters",
        "string_process": "\nprocess runPyReadCounters {\n  publishDir \"${params.output_dir}/pyReadCounters_analyses\", mode: \"copy\"\n  tag \"${alignedreadFile}\"\n  \n  input:\n  tuple val(alignedreadID), file(alignedreadFile)\n  \n  output:\n  path \"*.gtf\", emit: gtf\n  path \"*.txt\", emit: text\n  \n  script:\n  \"\"\"\n  pyReadCounters.py -f ${alignedreadFile} --gtf ${params.gtf} -v --rpkm -o ${alignedreadID} --file_type sam\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pyReadCounters.py -f ${alignedreadFile} --gtf ${params.gtf} -v --rpkm -o ${alignedreadID} --file_type sam\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "alignedreadID",
            "alignedreadFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/pyReadCounters_analyses\", mode: \"copy\"",
            "tag \"${alignedreadFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "makeCoverageBedgraphFiles": {
        "name_process": "makeCoverageBedgraphFiles",
        "string_process": "\nprocess makeCoverageBedgraphFiles {\n  publishDir \"${params.output_dir}/bedgraph_files\", mode: \"copy\"\n  tag \"${inputFile}\"\n  \n  input:\n  path inputFile\n  val inputID\n  \n  output:\n  path \"*.bedgraph\"\n  \n  script:\n  \"\"\"\n  pyGTF2bedGraph.py --gtf ${inputFile} --count -v --permillion -o ${inputID} -c ${params.chromosome}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pyGTF2bedGraph.py --gtf ${inputFile} --count -v --permillion -o ${inputID} -c ${params.chromosome}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputFile",
            "inputID"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/bedgraph_files\", mode: \"copy\"",
            "tag \"${inputFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "sortBamfiles": {
        "name_process": "sortBamfiles",
        "string_process": "\nprocess sortBamfiles {\n  publishDir \"${params.output_dir}/aligned_bamsorted\", mode: \"copy\"\n  tag \"${alignedreadFile}\"\n  \n  input:\n  tuple val(alignedreadID), file(alignedreadFile)\n  \n  output:\n  path \"*.bam\"\n  \n  script:\n  \"\"\"\n  samtools view -b ${alignedreadFile} | samtools sort -@ 3 -O bam -o ${alignedreadID}.bam -T ./tmp -\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  samtools view -b ${alignedreadFile} | samtools sort -@ 3 -O bam -o ${alignedreadID}.bam -T ./tmp -\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "alignedreadID",
            "alignedreadFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/aligned_bamsorted\", mode: \"copy\"",
            "tag \"${alignedreadFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "runBamQC": {
        "name_process": "runBamQC",
        "string_process": "\nprocess runBamQC {\n  publishDir \"${params.output_dir}/aligned_bamqc\", mode: \"copy\"\n  tag \"${aligned_reads}\"\n  \n  input:\n  path aligned_reads\n  \n  output:\n  path \"*.*\"\n  \n  script:\n  \"\"\"\n  bamqc ${aligned_reads}\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  bamqc ${aligned_reads}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "aligned_reads"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/aligned_bamqc\", mode: \"copy\"",
            "tag \"${aligned_reads}\""
        ],
        "when": "",
        "stub": ""
    },
    "runPyCalculateFDRs": {
        "name_process": "runPyCalculateFDRs",
        "string_process": "\nprocess runPyCalculateFDRs {\n  publishDir \"${params.output_dir}/pyCalculateFDRs_analyses\", mode: \"copy\"\n  tag \"${count_readsFile}\"\n  \n  input:\n  path count_readsFile\n  val count_readsID\n  \n  output:\n  path \"*.*\"\n  \n  script:\n  \"\"\"\n  pyCalculateFDRs.py -f ${count_readsFile} -o ${count_readsID}_output_FDRs.gtf -c ${params.chromosome} --gtf ${params.gtf} -a protein_coding -m 0.01 --min=5 \n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pyCalculateFDRs.py -f ${count_readsFile} -o ${count_readsID}_output_FDRs.gtf -c ${params.chromosome} --gtf ${params.gtf} -a protein_coding -m 0.01 --min=5 \n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "count_readsFile",
            "count_readsID"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/pyCalculateFDRs_analyses\", mode: \"copy\"",
            "tag \"${count_readsFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "alignReads": {
        "name_process": "alignReads",
        "string_process": "\nprocess alignReads {\n  publishDir \"${params.output_dir}/aligned_sam\", mode: \"copy\"\n  tag \"${collapsed_readsFile}\"\n  \n  input:\n  tuple val(collapsed_readsID), file(collapsed_readsFile)\n  \n  output:\n  path \"*.sam\"\n  \n  script:\n  \"\"\"\n  novoalign -d ${params.novoindex} -o SAM -f ${collapsed_readsFile} -r Random > ${collapsed_readsID}.sam\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  novoalign -d ${params.novoindex} -o SAM -f ${collapsed_readsFile} -r Random > ${collapsed_readsID}.sam\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Novoalign"
        ],
        "tools_url": [
            "https://bio.tools/novoalign"
        ],
        "tools_dico": [
            {
                "name": "Novoalign",
                "uri": "https://bio.tools/novoalign",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "Methylated DNA immunoprecipitation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "mDIP"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-chip"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool designed for mapping short reads from Illumina, IonTorrent or 454 platforms onto a reference genome. This is a commercial product.",
                "homepage": "http://www.novocraft.com/products/novoalign/"
            }
        ],
        "inputs": [
            "collapsed_readsID",
            "collapsed_readsFile"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/aligned_sam\", mode: \"copy\"",
            "tag \"${collapsed_readsFile}\""
        ],
        "when": "",
        "stub": ""
    },
    "indexBamfiles": {
        "name_process": "indexBamfiles",
        "string_process": "\nprocess indexBamfiles {\n  publishDir \"${params.output_dir}/aligned_bamsorted\", mode: \"copy\"\n  tag \"${bamsorted}\"\n  \n  input:\n  path bamsorted\n  \n  output:\n  path \"*.bam.bai\"\n  \n  script:\n  \"\"\"\n  samtools index ${bamsorted}\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  samtools index ${bamsorted}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamsorted"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "JingQiChong__nf_CRACpipeline",
        "directive": [
            "publishDir \"${params.output_dir}/aligned_bamsorted\", mode: \"copy\"",
            "tag \"${bamsorted}\""
        ],
        "when": "",
        "stub": ""
    }
}