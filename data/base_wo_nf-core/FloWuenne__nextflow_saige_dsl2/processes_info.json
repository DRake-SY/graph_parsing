{
    "saige_step1_bin": {
        "name_process": "saige_step1_bin",
        "string_process": "process saige_step1_bin {\n    tag \"${phenoFile.baseName}\"\n    publishDir \"${params.outdir}/${phenoFile.baseName}/SAIGE_out_step1\", mode: 'copy'\n\n    input:\n    tuple val(grm_plink_input), path(bed), path(bim), path(fam)\n    each path(phenoFile)\n    val phenoCol\n    val covarColList\n    val sampleIDcol\n\n    output:\n    val(phenoFile.baseName), emit: phenotype\n    tuple val(phenoFile.baseName), path(\"step1_${phenoFile.baseName}_out.rda\"), path(\"step1_${phenoFile.baseName}.varianceRatio.txt\"), emit: step1_out\n\n    script:\n    \"\"\"\n    step1_fitNULLGLMM.R \\\n      --plinkFile=${grm_plink_input} \\\n      --phenoFile=\"${phenoFile}\" \\\n      --phenoCol=${phenoCol} \\\n      --covarColList=${covarColList} \\\n      --sampleIDColinphenoFile=${sampleIDcol} \\\n      --traitType=binary \\\n      --outputPrefix=\"step1_${phenoFile.baseName}_out\" \\\n      --outputPrefix_varRatio=\"step1_${phenoFile.baseName}\" \\\n      --nThreads=${task.cpus} \\\n      --IsOverwriteVarianceRatioFile=TRUE ${params.saige_step1_extra_flags}\n    \"\"\"\n  }",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    step1_fitNULLGLMM.R \\\n      --plinkFile=${grm_plink_input} \\\n      --phenoFile=\"${phenoFile}\" \\\n      --phenoCol=${phenoCol} \\\n      --covarColList=${covarColList} \\\n      --sampleIDColinphenoFile=${sampleIDcol} \\\n      --traitType=binary \\\n      --outputPrefix=\"step1_${phenoFile.baseName}_out\" \\\n      --outputPrefix_varRatio=\"step1_${phenoFile.baseName}\" \\\n      --nThreads=${task.cpus} \\\n      --IsOverwriteVarianceRatioFile=TRUE ${params.saige_step1_extra_flags}\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "grm_plink_input",
            "bed",
            "bim",
            "fam",
            "phenoFile",
            "phenoCol",
            "covarColList",
            "sampleIDcol"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FloWuenne__nextflow_saige_dsl2",
        "directive": [
            "tag \"${phenoFile.baseName}\"",
            "publishDir \"${params.outdir}/${phenoFile.baseName}/SAIGE_out_step1\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "saige_step2_spa": {
        "name_process": "saige_step2_spa",
        "string_process": "\nprocess saige_step2_spa {\n  tag \"chr${chrom}.${phenotype}\"\n  publishDir \"${params.outdir}/${phenotype}/SAIGE_out_step2\", mode: 'copy'\n\n  input:\n  tuple val(phenotype), val(rda), val(varRatio)\n  each chrom\n  val(bgen_prefix)\n  val(bgen_suffix)\n  val(bgen_path)\n  path(sampleFile)\n  val vcfField\n  val minMAC\n  val minMAF\n\n  output:\n  tuple val(phenotype), path(\"${phenotype}.chr${chrom}.SAIGE.gwas.txt\"), emit: assoc_res\n\n  script:\n  \"\"\"\n  step2_SPAtests.R \\\n        --bgenFile=${bgen_path}/${bgen_prefix}${chrom}${bgen_suffix} \\\n        --bgenFileIndex=${bgen_path}/${bgen_prefix}${chrom}${bgen_suffix}.bgi \\\n        --chrom=${chrom} \\\n        --minMAC=${minMAC} \\\n        --minMAF=${minMAF} \\\n        --sampleFile=${sampleFile} \\\n        --GMMATmodelFile=${rda} \\\n        --varianceRatioFile=${varRatio} \\\n        --SAIGEOutputFile=${phenotype}.chr${chrom}.SAIGE.gwas.txt \\\n        --numLinesOutput=2 \\\n        --IsOutputAFinCaseCtrl=TRUE \\\n        --IsDropMissingDosages=FALSE \\\n        --IsOutputNinCaseCtrl=TRUE \\\n        --IsOutputHetHomCountsinCaseCtrl=TRUE \\\n        --LOCO=FALSE\n  \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  \"\"\"\n  step2_SPAtests.R \\\n        --bgenFile=${bgen_path}/${bgen_prefix}${chrom}${bgen_suffix} \\\n        --bgenFileIndex=${bgen_path}/${bgen_prefix}${chrom}${bgen_suffix}.bgi \\\n        --chrom=${chrom} \\\n        --minMAC=${minMAC} \\\n        --minMAF=${minMAF} \\\n        --sampleFile=${sampleFile} \\\n        --GMMATmodelFile=${rda} \\\n        --varianceRatioFile=${varRatio} \\\n        --SAIGEOutputFile=${phenotype}.chr${chrom}.SAIGE.gwas.txt \\\n        --numLinesOutput=2 \\\n        --IsOutputAFinCaseCtrl=TRUE \\\n        --IsDropMissingDosages=FALSE \\\n        --IsOutputNinCaseCtrl=TRUE \\\n        --IsOutputHetHomCountsinCaseCtrl=TRUE \\\n        --LOCO=FALSE\n  \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "phenotype",
            "rda",
            "varRatio",
            "chrom",
            "bgen_prefix",
            "bgen_suffix",
            "bgen_path",
            "sampleFile",
            "vcfField",
            "minMAC",
            "minMAF"
        ],
        "nb_inputs": 11,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FloWuenne__nextflow_saige_dsl2",
        "directive": [
            "tag \"chr${chrom}.${phenotype}\"",
            "publishDir \"${params.outdir}/${phenotype}/SAIGE_out_step2\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "prepare_files": {
        "name_process": "prepare_files",
        "string_process": "\nprocess prepare_files {\n  tag \"${phenotype}\"\n  publishDir \"${params.outdir}/${phenotype}\", mode: 'copy'\n\n  input:\n  tuple val(phenotype), path(merged_assoc)\n\n  output:\n  tuple val(phenotype), path(\"saige_results_${phenotype}_top_n.csv\"), emit: top_hits\n  tuple val(phenotype), path(\"saige_results_${phenotype}.csv\"), emit: merged_out\n  \n\n  script:\n  \"\"\"\n  # creates 2 .csv files, saige_results_<params.output_tag>.csv, saige_results_top_n.csv\n  concat_chroms.R \\\n    --saige_output_name='saige_results' \\\n    --filename_pattern='${phenotype}.*' \\\n    --output_tag='${phenotype}' \\\n    --top_n_sites=${params.top_n_sites} \\\n    --max_top_n_sites=${params.max_top_n_sites}\n    mv saige_results_top_n.csv saige_results_${phenotype}_top_n.csv\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "  \"\"\"\n  # creates 2 .csv files, saige_results_<params.output_tag>.csv, saige_results_top_n.csv\n  concat_chroms.R \\\n    --saige_output_name='saige_results' \\\n    --filename_pattern='${phenotype}.*' \\\n    --output_tag='${phenotype}' \\\n    --top_n_sites=${params.top_n_sites} \\\n    --max_top_n_sites=${params.max_top_n_sites}\n    mv saige_results_top_n.csv saige_results_${phenotype}_top_n.csv\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "phenotype",
            "merged_assoc"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FloWuenne__nextflow_saige_dsl2",
        "directive": [
            "tag \"${phenotype}\"",
            "publishDir \"${params.outdir}/${phenotype}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "create_plots": {
        "name_process": "create_plots",
        "string_process": "\nprocess create_plots {\ntag \"${phenotype}\"\npublishDir \"${params.outdir}/${phenotype}/final\", mode: 'copy'\n\ninput:\ntuple val(phenotype), path(saige_res), path(top_hits), path(ch_gwas_cat)\n\noutput:\ntuple file(\"*png\"), file(\"*csv\")\n\nscript:\n\"\"\"\ncp /opt/bin/* .\n## remove default files from gel-gwas pipeline\nrm logo.png\nrm covid_1_manhattan.png\n#\nsubset_gwascat.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --gwas_cat='${ch_gwas_cat}'\n#\nsed -i~ 's/X/23/g;s/chrX/chr23/g' 'saige_results_${phenotype}.csv'\n#\nmanhattan.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --output_tag='${phenotype}'\n#\nqqplot.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --output_tag='${phenotype}'\n  mv gwascat_subset.csv gwascat_subset_${phenotype}.csv\n\"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\"\"\"\ncp /opt/bin/* .\n## remove default files from gel-gwas pipeline\nrm logo.png\nrm covid_1_manhattan.png\n#\nsubset_gwascat.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --gwas_cat='${ch_gwas_cat}'\n#\nsed -i~ 's/X/23/g;s/chrX/chr23/g' 'saige_results_${phenotype}.csv'\n#\nmanhattan.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --output_tag='${phenotype}'\n#\nqqplot.R \\\n  --saige_output='saige_results_${phenotype}.csv' \\\n  --output_tag='${phenotype}'\n  mv gwascat_subset.csv gwascat_subset_${phenotype}.csv\n\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "phenotype",
            "saige_res",
            "top_hits",
            "ch_gwas_cat"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FloWuenne__nextflow_saige_dsl2",
        "directive": [
            "tag \"${phenotype}\"",
            "publishDir \"${params.outdir}/${phenotype}/final\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}