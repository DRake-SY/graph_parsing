{
    "OPERATION_1": {
        "string": "Channel\n  .fromPath( \"${params.input_dir}/*.vcf.gz\" )\n   .set{feature_files_inputs}",
        "origin": [
            [
                "\"${params.input_dir}/*.vcf.gz\"",
                "A"
            ]
        ],
        "gives": [
            [
                "feature_files_inputs",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n  .fromPath(\"mkmodules/mk-add-header/*\")\n    .toList()\n    .set{mkfiles_pre1}",
        "origin": [
            [
                "\"mkmodules/mk-add-header/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre1",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n  .fromPath(\"mkmodules/mk-filter-vcfs/*\")\n    .toList()\n              \n    .set{mkfiles_pre2}",
        "origin": [
            [
                "\"mkmodules/mk-filter-vcfs/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre2",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n  .fromPath(\"mkmodules/mk-concatenate/*\")\n    .toList()\n              \n    .set{mkfiles_001}",
        "origin": [
            [
                "\"mkmodules/mk-concatenate/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_001",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n  .fromPath(\"mkmodules/mk-normalize-and-compress/*\")\n    .toList()\n              \n    .set{mkfiles_pst1}",
        "origin": [
            [
                "\"mkmodules/mk-normalize-and-compress/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pst1",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "results_pre1_add_header\n            \n  .toList()\n            \n  .set{inputs_for_pre2}",
        "origin": [
            [
                "results_pre1_add_header",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_for_pre2",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "results_001_concatenate_vcfs\n            \n  .toList()\n            \n  .set{inputs_for_pst1}",
        "origin": [
            [
                "results_001_concatenate_vcfs",
                "P"
            ]
        ],
        "gives": [
            [
                "inputs_for_pst1",
                "P"
            ]
        ]
    }
}