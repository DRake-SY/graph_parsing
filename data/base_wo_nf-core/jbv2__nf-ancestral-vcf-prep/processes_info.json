{
    "_pre1_add_header": {
        "name_process": "_pre1_add_header",
        "string_process": "\nprocess _pre1_add_header {\n  publishDir \"test/results/_pre1_add_header/\", mode: \"copy\"\n  input:\n    file vcfs from feature_files_inputs\n    file mkfiles from mkfiles_pre1\n    output:\n     file \"*.header.vcf.gz\" into results_pre1_add_header\n    \"\"\"\n    export BCFTOOLS=\"${params.bcftools}\"\n    bash runmk.sh\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    export BCFTOOLS=\"${params.bcftools}\"\n    bash runmk.sh\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "feature_files_inputs",
            "mkfiles_pre1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "results_pre1_add_header"
        ],
        "nb_outputs": 1,
        "name_workflow": "jbv2__nf-ancestral-vcf-prep",
        "directive": [
            "publishDir \"test/results/_pre1_add_header/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "_pre2_filter_vcfs": {
        "name_process": "_pre2_filter_vcfs",
        "string_process": "\nprocess _pre2_filter_vcfs{\n  publishDir \"test/results/_pre2_filter_vcfs/\", mode: \"copy\"\n  input:\n  file header_vcfs from inputs_for_pre2\n  file mkfiles from mkfiles_pre2\n  output:\n  file \"*.filtered.vcf.g*\" into results_pre2_filter_vcfs\n\n  \"\"\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputs_for_pre2",
            "mkfiles_pre2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "results_pre2_filter_vcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "jbv2__nf-ancestral-vcf-prep",
        "directive": [
            "publishDir \"test/results/_pre2_filter_vcfs/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "_001_concatenate_vcfs": {
        "name_process": "_001_concatenate_vcfs",
        "string_process": "\nprocess _001_concatenate_vcfs{\n  publishDir \"test/results/_001_concatenate_vcfs/\", mode: \"copy\"\n  input:\n  file filtered_vcfs from results_pre2_filter_vcfs\n  file mkfiles from mkfiles_001\n  output:\n  file \"concatenated.vcf\" into results_001_concatenate_vcfs\n\n  \"\"\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "results_pre2_filter_vcfs",
            "mkfiles_001"
        ],
        "nb_inputs": 2,
        "outputs": [
            "results_001_concatenate_vcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "jbv2__nf-ancestral-vcf-prep",
        "directive": [
            "publishDir \"test/results/_001_concatenate_vcfs/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "_pst1_normalize_and_compress": {
        "name_process": "_pst1_normalize_and_compress",
        "string_process": "\nprocess _pst1_normalize_and_compress{\n  publishDir \"test/results/_pst1_normalize_and_compress/\", mode: \"copy\"\n  input:\n  file concatenated_vcf from inputs_for_pst1\n  file mkfiles from mkfiles_pst1\n  output:\n  file \"concatenated.sorted.normalized.split_multiallelics.vcf.gz\" into results_pst1_normalize_and_compress\n\n  \"\"\"\n  export GENOME_REFERENCE=\"${params.genome_reference}\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n  export GENOME_REFERENCE=\"${params.genome_reference}\"\n  export BCFTOOLS=\"${params.bcftools}\"\n  bash runmk.sh\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputs_for_pst1",
            "mkfiles_pst1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "results_pst1_normalize_and_compress"
        ],
        "nb_outputs": 1,
        "name_workflow": "jbv2__nf-ancestral-vcf-prep",
        "directive": [
            "publishDir \"test/results/_pst1_normalize_and_compress/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}