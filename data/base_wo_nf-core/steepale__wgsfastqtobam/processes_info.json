{
    "fastqc_1": {
        "name_process": "fastqc_1",
        "string_process": "\nprocess fastqc_1 {\n    cache true\n    container \"steepale/fastqc:1.0\"\n    publishDir \"${params.workdir}/results/fastqc_1\", mode: 'copy'\n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    set pair_id, file(read1), file(read2) from read_pairs_fastqc\n\n    output:\n    file \"*_fastqc.{zip,html}\" into fastQCreport\n\n                                            \n    when:\n    !params.skip_fastqc_1\n\n    script:\n    \"\"\"\n    ### Perform fastqc on all fastq files\n    fastqc \\\n    -t 2 \\\n    -q \\\n    ${read1} \\\n    ${read2}\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    ### Perform fastqc on all fastq files\n    fastqc \\\n    -t 2 \\\n    -q \\\n    ${read1} \\\n    ${read2}\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "read_pairs_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastQCreport"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/fastqc:1.0\"",
            "publishDir \"${params.workdir}/results/fastqc_1\", mode: 'copy' if (params.echo) { echo true }"
        ],
        "when": "!params.skip_fastqc_1",
        "stub": ""
    },
    "trimmomatic": {
        "name_process": "trimmomatic",
        "string_process": "\nprocess trimmomatic {\n    cache true\n    container \"steepale/trimmomatic:1.0\"\n                                                       \n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    set pair_id, file(read1), file(read2) from read_pairs_trimmomatic\n                                                                                                              \n\n    output:\n    file \"*.fastq.gz\" into trimmomatic_ch_out\n\n                                            \n    when:\n    !params.skip_trimmomatic\n\n    script:\n    \"\"\"\n    ### Perform fastqc on all fastq files\n    java -jar /opt/Trimmomatic-0.39/trimmomatic-0.39.jar \\\n    PE \\\n    -threads 2 \\\n    ${read1} \\\n    ${read2} \\\n    ${read1.simpleName}_paired.fastq.gz \\\n    ${read1.simpleName}_unpaired.fastq.gz \\\n    ${read2.simpleName}_paired.fastq.gz \\\n    ${read2.simpleName}_unpaired.fastq.gz \\\n    ILLUMINACLIP:/opt/Trimmomatic-0.39/adapters/TruSeq2-PE.fa:2:30:10 \\\n    HEADCROP:9\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    ### Perform fastqc on all fastq files\n    java -jar /opt/Trimmomatic-0.39/trimmomatic-0.39.jar \\\n    PE \\\n    -threads 2 \\\n    ${read1} \\\n    ${read2} \\\n    ${read1.simpleName}_paired.fastq.gz \\\n    ${read1.simpleName}_unpaired.fastq.gz \\\n    ${read2.simpleName}_paired.fastq.gz \\\n    ${read2.simpleName}_unpaired.fastq.gz \\\n    ILLUMINACLIP:/opt/Trimmomatic-0.39/adapters/TruSeq2-PE.fa:2:30:10 \\\n    HEADCROP:9\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "PEC"
        ],
        "tools_url": [
            "https://bio.tools/PEC"
        ],
        "tools_dico": [
            {
                "name": "PEC",
                "uri": "https://bio.tools/PEC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3384",
                            "term": "Medical imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3303",
                            "term": "Medicine"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3303",
                            "term": "Experimental medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3303",
                            "term": "Clinical medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3303",
                            "term": "Biomedical research"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A novel approach to the program evaluation committee.\n\nBACKGROUND:The Accreditation Council for Graduate Medical Education requires each residency program to have a Program Evaluation Committee (PEC) but does not specify how the PEC should be designed. We sought to develop a PEC that promotes resident leadership and provides actionable feedback. METHODS:Participants were residents and faculty in the Traditional Internal Medicine residency program at Yale School of Medicine (YSM). One resident and one faculty member facilitated a 1-h structured group discussion to obtain resident feedback on each rotation. PEC co-facilitators summarized the feedback in written form, then met with faculty Firm Chiefs overseeing each rotation and with residency program leadership to discuss feedback and generate action plans. This PEC process was implemented in all inpatient and outpatient rotations over a 4-year period.\n\n||| HOMEPAGE MISSING!",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31842868"
            }
        ],
        "inputs": [
            "read_pairs_trimmomatic"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmomatic_ch_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/trimmomatic:1.0\" if (params.echo) { echo true }"
        ],
        "when": "!params.skip_trimmomatic",
        "stub": ""
    },
    "sickle": {
        "name_process": "sickle",
        "string_process": "\nprocess sickle {\n    cache true\n    container \"steepale/sickle:1.0\"\n    publishDir \"${params.workdir}/test\", mode: 'copy'\n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    file(read1_paired) from trim_ch1.flatten().filter( ~/.*R1.*_paired.fastq.gz/ )\n    file(read2_paired) from trim_ch2.flatten().filter( ~/.*R2.*_paired.fastq.gz/ )\n    file(read1_unpaired) from trim_ch3.flatten().filter( ~/.*R1.*_unpaired.fastq.gz/ )\n    file(read2_unpaired) from trim_ch4.flatten().filter( ~/.*R2.*_unpaired.fastq.gz/ )\n\n    output:\n    file \"*_sickle.fastq\" into sickle_out_ch\n\n                                            \n    when:\n    !params.skip_sickle\n\n    script:\n    \"\"\"\n    ### Perform fastqc on all fastq files\n    echo \"read1_paired: ${read1_paired}\"\n    echo \"read2_paired: ${read2_paired}\"\n    echo \"read1_unpaired: ${read1_unpaired}\"\n    echo \"read2_unpaired: ${read2_unpaired}\"\n    # Trim the paired reads\n    sickle pe -f ${read1_paired} \\\n    -r ${read2_paired} \\\n    -t sanger \\\n    -o ${read1_paired.simpleName}_sickle.fastq \\\n    -p ${read2_paired.simpleName}_sickle.fastq \\\n    -s singles_PE_sickle.fastq \\\n    -q 20 -l 50 -g\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    \"\"\"\n    ### Perform fastqc on all fastq files\n    echo \"read1_paired: ${read1_paired}\"\n    echo \"read2_paired: ${read2_paired}\"\n    echo \"read1_unpaired: ${read1_unpaired}\"\n    echo \"read2_unpaired: ${read2_unpaired}\"\n    # Trim the paired reads\n    sickle pe -f ${read1_paired} \\\n    -r ${read2_paired} \\\n    -t sanger \\\n    -o ${read1_paired.simpleName}_sickle.fastq \\\n    -p ${read2_paired.simpleName}_sickle.fastq \\\n    -s singles_PE_sickle.fastq \\\n    -q 20 -l 50 -g\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "sickle"
        ],
        "tools_url": [
            "https://bio.tools/sickle"
        ],
        "tools_dico": [
            {
                "name": "sickle",
                "uri": "https://bio.tools/sickle",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ]
                    }
                ],
                "description": "A  tool that uses sliding windows along with quality and length thresholds to determine when quality is sufficiently low to trim the 3'-end of reads and also determines when the quality is sufficiently high enough to trim the 5'-end of reads.",
                "homepage": "https://github.com/najoshi/sickle"
            }
        ],
        "inputs": [
            "trim_ch1",
            "trim_ch2",
            "trim_ch3",
            "trim_ch4"
        ],
        "nb_inputs": 4,
        "outputs": [
            "sickle_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/sickle:1.0\"",
            "publishDir \"${params.workdir}/test\", mode: 'copy' if (params.echo) { echo true }"
        ],
        "when": "!params.skip_sickle",
        "stub": ""
    },
    "bwa": {
        "name_process": "bwa",
        "string_process": "\nprocess bwa {\n    cache true\n    container \"steepale/bwa:1.0\"\n    publishDir \"${params.workdir}/test\", mode: 'copy'\n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    file(read1_paired) from sic_ch1.flatten().filter( ~/.*R1.*_paired_sickle.fastq/ )\n    file(read2_paired) from sic_ch2.flatten().filter( ~/.*R2.*_paired_sickle.fastq/ )\n                                                                    \n    file genome from ref_bwa_ch1\n    file genome_all from ref_bwa_ch2.collect()\n    set val(sample_id), val(barcode), val(lane), val(suffix), val(sample_label), val(type) from manifest_ch1\n\n    output:\n    file \"*.sam\" into bwa_out_ch\n\n                                            \n    when:\n    !params.skip_sickle\n\n    script:\n    \"\"\"\n    echo ${genome}\n    echo ${read1_paired}\n    echo ${read2_paired}\n    echo ${sample_id}\n    echo ${genome_all}\n    bwa mem \\\n    -t 2 \\\n    -T 20 \\\n    ${genome} \\\n    ${read1_paired} \\\n    ${read2_paired} \\\n    > ${sample_id}.sam\n    \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "    \"\"\"\n    echo ${genome}\n    echo ${read1_paired}\n    echo ${read2_paired}\n    echo ${sample_id}\n    echo ${genome_all}\n    bwa mem \\\n    -t 2 \\\n    -T 20 \\\n    ${genome} \\\n    ${read1_paired} \\\n    ${read2_paired} \\\n    > ${sample_id}.sam\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "sic_ch1",
            "sic_ch2",
            "ref_bwa_ch1",
            "ref_bwa_ch2",
            "manifest_ch1"
        ],
        "nb_inputs": 5,
        "outputs": [
            "bwa_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/bwa:1.0\"",
            "publishDir \"${params.workdir}/test\", mode: 'copy' if (params.echo) { echo true }"
        ],
        "when": "!params.skip_sickle",
        "stub": ""
    },
    "readgroups": {
        "name_process": "readgroups",
        "string_process": "\nprocess readgroups {\n    cache true\n    container \"steepale/gatk:3.5\"\n    publishDir \"${params.workdir}/test\", mode: 'copy'\n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    val rg_mem from params.rg_mem\n    file bwa_sam from bwa_out_ch\n    set val(sample_id), val(barcode), val(lane), val(suffix), val(sample_label), val(type) from manifest_ch2\n    val platform from params.platform\n\n\n    output:\n    file \"*_rg.sam\" into rg_out_ch\n\n                                            \n    when:\n    !params.skip_readgroups\n\n    script:\n    \"\"\"\n    echo ${rg_mem}\n    echo ${bwa_sam}\n    echo ${bwa_sam.simpleName}\n    echo ${lane}\n    echo ${sample_id}\n    echo ${type}\n\n    # Add readgroups with picard\n    java -Xmx${rg_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    AddOrReplaceReadGroups \\\n    INPUT=${bwa_sam} \\\n    OUTPUT=${bwa_sam.simpleName}_${lane}_rg.sam \\\n    RGID=${sample_id}_${lane} \\\n    RGPL= ${platform} \\\n    RGPU=${barcode}_${lane} \\\n    RGSM=${sample_id} \\\n    RGLB=${type}\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    \"\"\"\n    echo ${rg_mem}\n    echo ${bwa_sam}\n    echo ${bwa_sam.simpleName}\n    echo ${lane}\n    echo ${sample_id}\n    echo ${type}\n\n    # Add readgroups with picard\n    java -Xmx${rg_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    AddOrReplaceReadGroups \\\n    INPUT=${bwa_sam} \\\n    OUTPUT=${bwa_sam.simpleName}_${lane}_rg.sam \\\n    RGID=${sample_id}_${lane} \\\n    RGPL= ${platform} \\\n    RGPU=${barcode}_${lane} \\\n    RGSM=${sample_id} \\\n    RGLB=${type}\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "bwa_out_ch",
            "manifest_ch2",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "rg_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/gatk:3.5\"",
            "publishDir \"${params.workdir}/test\", mode: 'copy' if (params.echo) { echo true }"
        ],
        "when": "!params.skip_readgroups",
        "stub": ""
    },
    "smr_by_lane": {
        "name_process": "smr_by_lane",
        "string_process": "\nprocess smr_by_lane {\n    cache true\n    container \"steepale/gatk:3.5\"\n    publishDir \"${params.workdir}/test\", mode: 'copy'\n    if (params.echo) {\n        echo true\n    }\n\n    input:\n    val smr_by_lane_mem from params.smr_by_lane_mem\n    file rg_sam from rg_out_ch\n    set val(sample_id), val(barcode), val(lane), val(suffix), val(sample_label), val(type) from manifest_ch3\n    file genome from ref_smr_by_lane_ch\n    file genome_ann from ref_smr_by_lane_ch2\n\n    output:\n    file \"*.{bam,bai,list,txt}\" into rsmr_by_lane_out_ch\n\n                                            \n    when:\n    !params.skip_smr_by_lane\n\n    script:\n    \"\"\"\n    # Sort the sam file\n    java -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    SortSam \\\n    I=${rg_sam} \\\n    O=${rg_sam.baseName}.bam \\\n    SORT_ORDER=coordinate\n\n    echo \"Bam file sorted\"\n\n    # Mark duplicates in the bam file\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    MarkDuplicates \\\n    I=${rg_sam.baseName}.bam \\\n    O=${rg_sam.baseName}_marked.bam \\\n    METRICS_FILE=${rg_sam.baseName}_metrics.txt \\\n    MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000\n\n    echo \"Bam file duplicates marked\"\n\n    # Build an index of bam file\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    BuildBamIndex \\\n    I=${rg_sam.baseName}_marked.bam \\\n    O=${rg_sam.baseName}_marked.bai\n\n    echo \"Bam indexed\"\n\n    # Create targets for indel realignment\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/gatk3.5/GenomeAnalysisTK.jar \\\n    -T RealignerTargetCreator \\\n    -R ${genome} \\\n    -I ${rg_sam.baseName}_marked.bam \\\n    -o ${rg_sam.baseName}_intervals.list\n\n    echo \"Targets created for indel relaignment\"\n\n    # Realign around indels\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/gatk3.5/GenomeAnalysisTK.jar \\\n    -T IndelRealigner \\\n    -R ${genome} \\\n    -I ${rg_sam.baseName}_marked.bam \\\n    -targetIntervals ${rg_sam.baseName}_intervals.list \\\n    -o ${rg_sam.baseName}_realigned.bam\n\n    echo \"Bam realigned around indels\"\n\n    \"\"\"\n}",
        "nb_lignes_process": 76,
        "string_script": "    \"\"\"\n    # Sort the sam file\n    java -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    SortSam \\\n    I=${rg_sam} \\\n    O=${rg_sam.baseName}.bam \\\n    SORT_ORDER=coordinate\n\n    echo \"Bam file sorted\"\n\n    # Mark duplicates in the bam file\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    MarkDuplicates \\\n    I=${rg_sam.baseName}.bam \\\n    O=${rg_sam.baseName}_marked.bam \\\n    METRICS_FILE=${rg_sam.baseName}_metrics.txt \\\n    MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000\n\n    echo \"Bam file duplicates marked\"\n\n    # Build an index of bam file\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/picard/build/libs/picard.jar \\\n    BuildBamIndex \\\n    I=${rg_sam.baseName}_marked.bam \\\n    O=${rg_sam.baseName}_marked.bai\n\n    echo \"Bam indexed\"\n\n    # Create targets for indel realignment\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/gatk3.5/GenomeAnalysisTK.jar \\\n    -T RealignerTargetCreator \\\n    -R ${genome} \\\n    -I ${rg_sam.baseName}_marked.bam \\\n    -o ${rg_sam.baseName}_intervals.list\n\n    echo \"Targets created for indel relaignment\"\n\n    # Realign around indels\n\tjava -Xmx${smr_by_lane_mem} \\\n    -jar /opt/gatk3.5/GenomeAnalysisTK.jar \\\n    -T IndelRealigner \\\n    -R ${genome} \\\n    -I ${rg_sam.baseName}_marked.bam \\\n    -targetIntervals ${rg_sam.baseName}_intervals.list \\\n    -o ${rg_sam.baseName}_realigned.bam\n\n    echo \"Bam realigned around indels\"\n\n    \"\"\"",
        "nb_lignes_script": 52,
        "language_script": "bash",
        "tools": [
            "MarkDuplicates (IP)"
        ],
        "tools_url": [
            "https://bio.tools/markduplicates_ip"
        ],
        "tools_dico": [
            {
                "name": "MarkDuplicates (IP)",
                "uri": "https://bio.tools/markduplicates_ip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Marks all duplicate reads in a provided SAM or BAM file and either removes them or flags them.",
                "homepage": "https://galaxy.pasteur.fr/tool_runner?tool_id=toolshed.pasteur.fr/repos/fmareuil/picard_pasteur_wrapper/rgPicardMarkDups/1.56.0"
            }
        ],
        "inputs": [
            "params",
            "rg_out_ch",
            "manifest_ch3",
            "ref_smr_by_lane_ch",
            "ref_smr_by_lane_ch2"
        ],
        "nb_inputs": 5,
        "outputs": [
            "rsmr_by_lane_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "cache true",
            "container \"steepale/gatk:3.5\"",
            "publishDir \"${params.workdir}/test\", mode: 'copy' if (params.echo) { echo true }"
        ],
        "when": "!params.skip_smr_by_lane",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n    saveAs: {filename ->\n        if (filename.indexOf(\".csv\") > 0) filename\n        else null\n    }\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n                                                                     \n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n    input:\n    set val(name), file(reads) from read_files_fastqc\n\n    output:\n    file \"*_fastqc.{zip,html}\" into fastqc_results\n\n    script:\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n    input:\n    file multiqc_config from ch_multiqc_config\n                                                                                  \n    file ('fastqc/*') from fastqc_results.collect().ifEmpty([])\n    file ('software_versions/*') from software_versions_yaml.collect()\n    file workflow_summary from create_workflow_summary(summary)\n\n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n                                                                                       \n    \"\"\"\n    multiqc -f $rtitle $rfilename --config $multiqc_config .\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n                                                                                       \n    \"\"\"\n    multiqc -f $rtitle $rfilename --config $multiqc_config .\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "fastqc_results",
            "software_versions_yaml",
            "summary"
        ],
        "nb_inputs": 4,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "steepale__wgsfastqtobam",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}