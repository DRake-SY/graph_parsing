{
    "crCount": {
        "name_process": "crCount",
        "string_process": "\nprocess crCount {\n    publishDir 'molecule_info', mode: 'copy'\n\n    input:\n    val id\n\n    output:\n    tuple val(id), file(\"*.${id}.*\")\n\n    \"\"\"\n    cellranger count \\\n        --id=${id} \\\n        --fastqs=${fastqs_dir} \\\n        --sample=${id} \\\n        --transcriptome=${ref_dir} \\\n        --localcores=${task.cpus} \\\n        --localmem=${(task.memory.toGiga() * 0.9).intValue()} \\\n        --disable-ui ${additionalArgs}\n    ln -s \\$PWD/${id}/outs/molecule_info.h5 molecule_info.${id}.h5\n    ln -s \\$PWD/${id}/outs/raw_feature_bc_matrix.h5 raw_feature_bc_matrix.${id}.h5\n    ln -s \\$PWD/${id}/outs/web_summary.html web_summary.${id}.html\n    ln -s \\$PWD/${id}/outs/metrics_summary.csv metrics_summary.${id}.csv\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n    cellranger count \\\n        --id=${id} \\\n        --fastqs=${fastqs_dir} \\\n        --sample=${id} \\\n        --transcriptome=${ref_dir} \\\n        --localcores=${task.cpus} \\\n        --localmem=${(task.memory.toGiga() * 0.9).intValue()} \\\n        --disable-ui ${additionalArgs}\n    ln -s \\$PWD/${id}/outs/molecule_info.h5 molecule_info.${id}.h5\n    ln -s \\$PWD/${id}/outs/raw_feature_bc_matrix.h5 raw_feature_bc_matrix.${id}.h5\n    ln -s \\$PWD/${id}/outs/web_summary.html web_summary.${id}.html\n    ln -s \\$PWD/${id}/outs/metrics_summary.csv metrics_summary.${id}.csv\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "id"
        ],
        "nb_inputs": 1,
        "outputs": [
            "id"
        ],
        "nb_outputs": 1,
        "name_workflow": "WarrenLab__cellranger-nf",
        "directive": [
            "publishDir 'molecule_info', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "aggregate": {
        "name_process": "aggregate",
        "string_process": "\nprocess aggregate {\n    publishDir 'aggregated', mode: 'copy'\n\n    input:\n    file \"molecule_info.csv\"\n\n    output:\n    file \"aggregated/outs\"\n\n    \"\"\"\n    cellranger aggr --id=aggregated --csv=molecule_info.csv\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    cellranger aggr --id=aggregated --csv=molecule_info.csv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "WarrenLab__cellranger-nf",
        "directive": [
            "publishDir 'aggregated', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "cellBender": {
        "name_process": "cellBender",
        "string_process": "\nprocess cellBender {\n    publishDir 'cellbender', mode: 'copy'\n\n    input:\n    tuple val(id), file(\"*.${id}.h5\")\n\n    output:\n    file(\"${id}.cellbender_filtered.h5\")\n\n    \"\"\"\n    cellbender remove-background \\\n        --input raw_feature_bc_matrix.${id}.h5 \\\n        --output ${id}.cellbender.h5 \\\n        --cuda \\\n        --expected-cells \\$(cut -f1 -d, metrics_summary.${id}.csv | tail -1)\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    cellbender remove-background \\\n        --input raw_feature_bc_matrix.${id}.h5 \\\n        --output ${id}.cellbender.h5 \\\n        --cuda \\\n        --expected-cells \\$(cut -f1 -d, metrics_summary.${id}.csv | tail -1)\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "CellBender"
        ],
        "tools_url": [
            "https://bio.tools/CellBender"
        ],
        "tools_dico": [
            {
                "name": "CellBender",
                "uri": "https://bio.tools/CellBender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "a deep generative model for unsupervised removal of background noise from scRNA-seq datasets.\n\nCellBender is a software package for eliminating technical artifacts from high-throughput single-cell RNA sequencing (scRNA-seq) data.\n\nWelcome to CellBender\u2019s documentation! \u2014 CellBender documentation.\n\nFree document hosting provided by Read the Docs.\n\nStephen J Fleming, John C Marioni, and Mehrtash Babadi. CellBender remove-background: a deep generative model for unsupervised removal of background noise from scRNA-seq datasets. bioRxiv 791699; doi: https://doi.org/10.1101/791699.",
                "homepage": "https://github.com/broadinstitute/CellBender"
            }
        ],
        "inputs": [
            "id"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "WarrenLab__cellranger-nf",
        "directive": [
            "publishDir 'cellbender', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeCellbenderAggregationTable": {
        "name_process": "makeCellbenderAggregationTable",
        "string_process": "\nprocess makeCellbenderAggregationTable {\n    publishdir 'cellbender', mode: 'copy'\n\n    input:\n    file(sampleSheetCsv)\n    file(allMetricsSummaries)\n\n    output:\n    file(\"aggregation_table.csv\")\n\n    \"\"\"\n    make_cellbender_aggregation_table.py \\\n        ${sampleSheetCsv} \\\n        metrics_summary.*.csv \\\n        > aggregation_table.csv\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    make_cellbender_aggregation_table.py \\\n        ${sampleSheetCsv} \\\n        metrics_summary.*.csv \\\n        > aggregation_table.csv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sampleSheetCsv",
            "allMetricsSummaries"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "WarrenLab__cellranger-nf",
        "directive": [],
        "when": "",
        "stub": ""
    }
}