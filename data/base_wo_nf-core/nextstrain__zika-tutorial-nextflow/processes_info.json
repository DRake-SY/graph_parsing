{
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(sequences)\n    output: tuple val(build), path(\"$sequences\"), path(\"${sequences.simpleName}_index.tsv\")\n    script:\n    \"\"\"\n    #! /usr/bin/env bash\n    ${augur_app} index \\\n      --sequences ${sequences} \\\n      --output ${sequences.simpleName}_index.tsv\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${sequences.simpleName}_index.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    #! /usr/bin/env bash\n    ${augur_app} index \\\n      --sequences ${sequences} \\\n      --output ${sequences.simpleName}_index.tsv\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(sequences) output: tuple val(build), path(\"$sequences\"), path(\"${sequences.simpleName}_index.tsv\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${sequences.simpleName}_index.tsv\n    \"\"\""
    },
    "filter": {
        "name_process": "filter",
        "string_process": "\nprocess filter {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(sequences), path(sequence_index), path(metadata), path(exclude), val(args)\n    output: tuple val(build), path(\"${sequences.simpleName}_filtered.fasta\")\n    script:\n    \"\"\"\n    ${augur_app} filter \\\n        --sequences ${sequences} \\\n        --sequence-index ${sequence_index} \\\n        --metadata ${metadata} \\\n        --exclude ${exclude} \\\n        --output ${sequences.simpleName}_filtered.fasta \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch \"${sequences.simpleName}_filtered.fasta\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    ${augur_app} filter \\\n        --sequences ${sequences} \\\n        --sequence-index ${sequence_index} \\\n        --metadata ${metadata} \\\n        --exclude ${exclude} \\\n        --output ${sequences.simpleName}_filtered.fasta \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(sequences), path(sequence_index), path(metadata), path(exclude), val(args) output: tuple val(build), path(\"${sequences.simpleName}_filtered.fasta\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch \"${sequences.simpleName}_filtered.fasta\"\n    \"\"\""
    },
    "align": {
        "name_process": "align",
        "string_process": "\nprocess align {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(filtered), path(reference), val(args)\n    output: tuple val(build), path(\"${filtered.simpleName}_aligned.fasta\")\n    script:\n    \"\"\"\n    ${augur_app} align \\\n        --sequences ${filtered} \\\n        --reference-sequence ${reference} \\\n        --output ${filtered.simpleName}_aligned.fasta \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${filtered.simpleName}_aligned.fasta\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    ${augur_app} align \\\n        --sequences ${filtered} \\\n        --reference-sequence ${reference} \\\n        --output ${filtered.simpleName}_aligned.fasta \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(filtered), path(reference), val(args) output: tuple val(build), path(\"${filtered.simpleName}_aligned.fasta\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${filtered.simpleName}_aligned.fasta\n    \"\"\""
    },
    "tree": {
        "name_process": "tree",
        "string_process": "\nprocess tree {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(aligned), val(args)\n    output: tuple val(build), path(\"${aligned.simpleName}_raw.nwk\")\n    script:\n    \"\"\"\n    ${augur_app} tree \\\n        --alignment ${aligned} \\\n        --output ${aligned.simpleName}_raw.nwk \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${aligned.simpleName}_raw.nwk\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    ${augur_app} tree \\\n        --alignment ${aligned} \\\n        --output ${aligned.simpleName}_raw.nwk \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(aligned), val(args) output: tuple val(build), path(\"${aligned.simpleName}_raw.nwk\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${aligned.simpleName}_raw.nwk\n    \"\"\""
    },
    "refine": {
        "name_process": "refine",
        "string_process": "\nprocess refine {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/$build\", mode: 'copy'\n    input: tuple val(build), path(tree_raw), path(aligned), path(metadata), val(args)\n    output: tuple val(build), path(\"${tree_raw.simpleName.replace('_raw','')}.nwk\"), path(\"${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json\")\n    script:\n    \"\"\"\n    ${augur_app} refine \\\n        --tree ${tree_raw} \\\n        --alignment ${aligned} \\\n        --metadata ${metadata} \\\n        --output-tree ${tree_raw.simpleName.replace('_raw','')}.nwk \\\n        --output-node-data ${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${tree_raw.simpleName.replace('_raw','')}.nwk ${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    ${augur_app} refine \\\n        --tree ${tree_raw} \\\n        --alignment ${aligned} \\\n        --metadata ${metadata} \\\n        --output-tree ${tree_raw.simpleName.replace('_raw','')}.nwk \\\n        --output-node-data ${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/$build\", mode: 'copy' input: tuple val(build), path(tree_raw), path(aligned), path(metadata), val(args) output: tuple val(build), path(\"${tree_raw.simpleName.replace('_raw','')}.nwk\"), path(\"${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${tree_raw.simpleName.replace('_raw','')}.nwk ${tree_raw.simpleName.replace('_raw','')}_branch_lengths.json\n    \"\"\""
    },
    "ancestral": {
        "name_process": "ancestral",
        "string_process": "\nprocess ancestral {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(tree), path(aligned), val(args)\n    output: tuple val(build), path(\"${tree.simpleName}_nt_muts.json\")\n    script:\n    \"\"\"\n    ${augur_app} ancestral \\\n        --tree ${tree} \\\n        --alignment ${aligned} \\\n        --output-node-data ${tree.simpleName}_nt_muts.json \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${tree.simpleName}_nt_muts.json\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    ${augur_app} ancestral \\\n        --tree ${tree} \\\n        --alignment ${aligned} \\\n        --output-node-data ${tree.simpleName}_nt_muts.json \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(tree), path(aligned), val(args) output: tuple val(build), path(\"${tree.simpleName}_nt_muts.json\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${tree.simpleName}_nt_muts.json\n    \"\"\""
    },
    "translate": {
        "name_process": "translate",
        "string_process": "\nprocess translate {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(tree), path(nt_muts), path(reference)\n    output: tuple val(build), path(\"${tree.simpleName}_aa_muts.json\")\n    script:\n    \"\"\"\n    ${augur_app} translate \\\n        --tree ${tree} \\\n        --ancestral-sequences ${nt_muts} \\\n        --reference-sequence ${reference} \\\n        --output-node-data ${tree.simpleName}_aa_muts.json\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${tree.simpleName}_aa_muts.json\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    ${augur_app} translate \\\n        --tree ${tree} \\\n        --ancestral-sequences ${nt_muts} \\\n        --reference-sequence ${reference} \\\n        --output-node-data ${tree.simpleName}_aa_muts.json\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(tree), path(nt_muts), path(reference) output: tuple val(build), path(\"${tree.simpleName}_aa_muts.json\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${tree.simpleName}_aa_muts.json\n    \"\"\""
    },
    "traits": {
        "name_process": "traits",
        "string_process": "\nprocess traits {\n    label 'nextstrain'\n    publishDir \"${params.outdir}/${build}\", mode: 'copy'\n    input: tuple val(build), path(tree), path(metadata), val(args)\n    output: tuple val(build), path(\"${tree.simpleName}_traits.json\")\n    script:\n    \"\"\"\n    ${augur_app} traits \\\n        --tree ${tree} \\\n        --metadata ${metadata} \\\n        --output ${tree.simpleName}_traits.json \\\n        ${args}\n    \"\"\"\n    stub:\n    \"\"\"\n    touch ${tree.simpleName}_traits.json\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    ${augur_app} traits \\\n        --tree ${tree} \\\n        --metadata ${metadata} \\\n        --output ${tree.simpleName}_traits.json \\\n        ${args}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir \"${params.outdir}/${build}\", mode: 'copy' input: tuple val(build), path(tree), path(metadata), val(args) output: tuple val(build), path(\"${tree.simpleName}_traits.json\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    touch ${tree.simpleName}_traits.json\n    \"\"\""
    },
    "export": {
        "name_process": "export",
        "string_process": "\nprocess export {\n    label 'nextstrain'\n    publishDir(\"${params.outdir}/${build}\"), mode: 'copy'\n    input: tuple val(build), path(tree), path(metadata), \\\n      path(node_data), \\\n      path(colors), \\\n      path(lat_longs), \\\n      path(auspice_config)\n    output: tuple val(build), path(\"auspice\")\n    script:\n    \"\"\"\n    ${augur_app} export v2 \\\n        --tree ${tree} \\\n        --metadata ${metadata} \\\n        --node-data ${node_data} \\\n        --colors ${colors} \\\n        --lat-longs ${lat_longs} \\\n        --auspice-config ${auspice_config} \\\n        --output auspice/${tree.simpleName}.json\n    \"\"\"\n    stub:\n    \"\"\"\n    mkdir auspice\n    touch auspice/${tree.simpleName}.json\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    ${augur_app} export v2 \\\n        --tree ${tree} \\\n        --metadata ${metadata} \\\n        --node-data ${node_data} \\\n        --colors ${colors} \\\n        --lat-longs ${lat_longs} \\\n        --auspice-config ${auspice_config} \\\n        --output auspice/${tree.simpleName}.json\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nextstrain__zika-tutorial-nextflow",
        "directive": [
            "label 'nextstrain'",
            "publishDir(\"${params.outdir}/${build}\"), mode: 'copy' input: tuple val(build), path(tree), path(metadata), path(node_data), path(colors), path(lat_longs), path(auspice_config) output: tuple val(build), path(\"auspice\")"
        ],
        "when": "",
        "stub": "\n    \"\"\"\n    mkdir auspice\n    touch auspice/${tree.simpleName}.json\n    \"\"\""
    }
}