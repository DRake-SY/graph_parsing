{
    "make_bed": {
        "name_process": "make_bed",
        "string_process": "\nprocess make_bed {\n    cpus 5\n    conda \"bioconda::deeptools\"\n    errorStrategy 'finish'\n\n    input:\n        file methylkit from methylkit_files\n\n    output:\n        file('*.bed') into for_bigwig\n\n    shell:\n    '''\n    lib=$(basename !{methylkit} .methylKit.gz)\n    zcat !{methylkit} | tail -n +2 | awk '{ if ($5 >= 8) { print } }' \\\n    | awk '{ printf(\"%s\\\\t%s\\\\t%s\\\\t%s\\\\n\", $2, $3 - 1, $3, $6); }' \\\n    | LC_COLLATE=C sort -k1,1 -k2,2n > ${lib}.bed\n    '''\n\n}",
        "nb_lignes_process": 19,
        "string_script": "    '''\n    lib=$(basename !{methylkit} .methylKit.gz)\n    zcat !{methylkit} | tail -n +2 | awk '{ if ($5 >= 8) { print } }' \\\n    | awk '{ printf(\"%s\\\\t%s\\\\t%s\\\\t%s\\\\n\", $2, $3 - 1, $3, $6); }' \\\n    | LC_COLLATE=C sort -k1,1 -k2,2n > ${lib}.bed\n    '''",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "methylkit_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "for_bigwig"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 5",
            "conda \"bioconda::deeptools\"",
            "errorStrategy 'finish'"
        ],
        "when": "",
        "stub": ""
    },
    "make_bigwig": {
        "name_process": "make_bigwig",
        "string_process": "\nprocess make_bigwig {\n    cpus 1\n    conda \"bioconda::ucsc-bedgraphtobigwig\"\n    publishDir \"/mnt/home/mcampbell/20200317_new_emseq_figure\", mode: \"copy\"\n    errorStrategy 'finish'\n\n    input:\n        file bed from for_bigwig\n\n    output:\n        file ('*.bw') into _bigwig\n\n    shell:\n    '''\n    lib=$(basename !{bed} .bed)\n    bedGraphToBigWig !{bed} !{ref_len} ${lib}.bw\n    '''\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    '''\n    lib=$(basename !{bed} .bed)\n    bedGraphToBigWig !{bed} !{ref_len} ${lib}.bw\n    '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "bedGraphToBigWig"
        ],
        "tools_url": [
            "https://bio.tools/bedgraphtobigwig"
        ],
        "tools_dico": [
            {
                "name": "bedGraphToBigWig",
                "uri": "https://bio.tools/bedgraphtobigwig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convert bedGraph to bigWig file.",
                "homepage": "https://www.encodeproject.org/software/bedgraphtobigwig/"
            }
        ],
        "inputs": [
            "for_bigwig"
        ],
        "nb_inputs": 1,
        "outputs": [
            "_bigwig"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "conda \"bioconda::ucsc-bedgraphtobigwig\"",
            "publishDir \"/mnt/home/mcampbell/20200317_new_emseq_figure\", mode: \"copy\"",
            "errorStrategy 'finish'"
        ],
        "when": "",
        "stub": ""
    },
    "binned_figure": {
        "name_process": "binned_figure",
        "string_process": "\nprocess binned_figure {\n    cpus 1\n    publishDir \"/mnt/home/mcampbell/20200317_new_emseq_figure\", mode: \"copy\"\n    errorStrategy 'finish'\n\n    input:\n        file methylkit from for_bins\n    \n    output:\n        file ('*.tab') into _bins\n\n    shell:\n    '''\n    lib=$(basename !{methylkit} .methylKit.gz)\n    TSS_cpg_bins.py --methylkit !{methylkit} --fasta !{ref} --prefix ${lib} --annotation !{annotation}\n    '''\n}",
        "nb_lignes_process": 16,
        "string_script": "    '''\n    lib=$(basename !{methylkit} .methylKit.gz)\n    TSS_cpg_bins.py --methylkit !{methylkit} --fasta !{ref} --prefix ${lib} --annotation !{annotation}\n    '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "for_bins"
        ],
        "nb_inputs": 1,
        "outputs": [
            "_bins"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "publishDir \"/mnt/home/mcampbell/20200317_new_emseq_figure\", mode: \"copy\"",
            "errorStrategy 'finish'"
        ],
        "when": "",
        "stub": ""
    },
    "mapping": {
        "name_process": "mapping",
        "string_process": "\nprocess mapping {\n    cpus fastq_mode == 'tile-fastq' ? 4 : 16\n    errorStrategy 'retry'\n    tag { [flowcell, fq_set.library] }\n    conda \"bwameth=0.2.2 seqtk=1.3 sambamba=0.7.0 fastp=0.20.1 mark-nonconverted-reads=1.1\"\n\n    input:\n        val fq_set from fq_set_channel\n\n    output:\n        set val(fq_set.library), file(\"*.aln.bam\") into aligned_files\n        set val(fq_set.library), file(\"*.nonconverted.tsv\") into nonconverted_counts\n        set val(fq_set.library), file(\"*_fastp.json\") into fastp_log_files\n\n    shell:\n    '''\n    inst_name=$(zcat -f '!{fq_set.insert_read1}' | head -n 1 | cut -f 1 -d ':' | sed 's/^@//')\n    fastq_barcode=$(zcat -f '!{fq_set.insert_read1}' | head -n 1 | sed -r 's/.*://')\n\n    if [[ \"${inst_name:0:2}\" == 'A0' ]] || [[ \"${inst_name:0:2}\" == 'NS' ]] || \\\n       [[ \"${inst_name:0:2}\" == 'NB' ]] || [[ \"${inst_name:0:2}\" == 'VH' ]] ; then\n       trim_polyg='--trim_poly_g'\n       echo '2-color instrument: poly-g trim mode on'\n    else\n       trim_polyg=''\n    fi\n    seqtk mergepe <(zcat -f \"!{fq_set.insert_read1}\") <(zcat -f \"!{fq_set.insert_read2}\") \\\n    | fastp --stdin --stdout -l 2 -Q ${trim_polyg} --interleaved_in --overrepresentation_analysis \\\n            -j \"!{fq_set.library}_fastp.json\" 2> fastp.stderr \\\n    | bwameth.py -p -t !{task.cpus} --read-group \"@RG\\\\tID:${fastq_barcode}\\\\tSM:!{fq_set.library}\" --reference !{genome} /dev/stdin \\\n                 2>  \"!{fq_set.library}_${fastq_barcode}!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.log.bwamem\" \\\n    | mark-nonconverted-reads.py 2> \"!{fq_set.library}_${fastq_barcode}_!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.nonconverted.tsv\" \\\n    | sambamba view -t 2 -S -f bam -o \"!{fq_set.library}_${fastq_barcode}_!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.aln.bam\" /dev/stdin 2> sambamba.stderr;\n    '''\n\n}",
        "nb_lignes_process": 35,
        "string_script": "    '''\n    inst_name=$(zcat -f '!{fq_set.insert_read1}' | head -n 1 | cut -f 1 -d ':' | sed 's/^@//')\n    fastq_barcode=$(zcat -f '!{fq_set.insert_read1}' | head -n 1 | sed -r 's/.*://')\n\n    if [[ \"${inst_name:0:2}\" == 'A0' ]] || [[ \"${inst_name:0:2}\" == 'NS' ]] || \\\n       [[ \"${inst_name:0:2}\" == 'NB' ]] || [[ \"${inst_name:0:2}\" == 'VH' ]] ; then\n       trim_polyg='--trim_poly_g'\n       echo '2-color instrument: poly-g trim mode on'\n    else\n       trim_polyg=''\n    fi\n    seqtk mergepe <(zcat -f \"!{fq_set.insert_read1}\") <(zcat -f \"!{fq_set.insert_read2}\") \\\n    | fastp --stdin --stdout -l 2 -Q ${trim_polyg} --interleaved_in --overrepresentation_analysis \\\n            -j \"!{fq_set.library}_fastp.json\" 2> fastp.stderr \\\n    | bwameth.py -p -t !{task.cpus} --read-group \"@RG\\\\tID:${fastq_barcode}\\\\tSM:!{fq_set.library}\" --reference !{genome} /dev/stdin \\\n                 2>  \"!{fq_set.library}_${fastq_barcode}!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.log.bwamem\" \\\n    | mark-nonconverted-reads.py 2> \"!{fq_set.library}_${fastq_barcode}_!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.nonconverted.tsv\" \\\n    | sambamba view -t 2 -S -f bam -o \"!{fq_set.library}_${fastq_barcode}_!{fq_set.flowcell}_!{fq_set.lane}_!{fq_set.tile}.aln.bam\" /dev/stdin 2> sambamba.stderr;\n    '''",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "seqtk",
            "fastPHASE",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/seqtk",
            "https://bio.tools/fastphase",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            },
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "fq_set_channel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aligned_files",
            "nonconverted_counts",
            "fastp_log_files"
        ],
        "nb_outputs": 3,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus fastq_mode == 'tile-fastq' ? 4 : 16",
            "errorStrategy 'retry'",
            "tag { [flowcell, fq_set.library] }",
            "conda \"bwameth=0.2.2 seqtk=1.3 sambamba=0.7.0 fastp=0.20.1 mark-nonconverted-reads=1.1\""
        ],
        "when": "",
        "stub": ""
    },
    "mergeAndMarkDuplicates": {
        "name_process": "mergeAndMarkDuplicates",
        "string_process": "\nprocess mergeAndMarkDuplicates {\n    cpus 8\n    errorStrategy 'retry'\n    tag { library }\n    publishDir \"${outputPath}\", mode: 'copy', pattern: '*.{md.bam}*'\n    conda \"samtools=1.9 samblaster=0.1.24 sambamba=0.7.0\"\n\n    input:\n        set val(library), file(libraryBam) from aligned_files.groupTuple()\n\n    output:\n        set val(library), file('*.md.bam'), file('*.md.bam.bai') into md_bams\n        file('*.samblaster') into samblaster_logs\n\n    shell:\n    '''\n    samtools cat  -b <( find . -name '*.aln.bam' ) \\\n    | samtools view -h /dev/stdin \\\n    | samblaster 2> !{library}.log.samblaster \\\n    | sambamba view -t 2 -l 0 -S -f bam /dev/stdin \\\n    | sambamba sort --tmpdir=!{params.tmp_dir} -t !{task.cpus} -m 20GB -o !{library}.md.bam /dev/stdin\n\n    '''\n}",
        "nb_lignes_process": 23,
        "string_script": "    '''\n    samtools cat  -b <( find . -name '*.aln.bam' ) \\\n    | samtools view -h /dev/stdin \\\n    | samblaster 2> !{library}.log.samblaster \\\n    | sambamba view -t 2 -l 0 -S -f bam /dev/stdin \\\n    | sambamba sort --tmpdir=!{params.tmp_dir} -t !{task.cpus} -m 20GB -o !{library}.md.bam /dev/stdin\n\n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "SAMBLASTER",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/samblaster",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "SAMBLASTER",
                "uri": "https://bio.tools/samblaster",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split-read mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool to mark duplicates and extract discordant and split reads from SAM files.",
                "homepage": "https://github.com/GregoryFaust/samblaster"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "aligned_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "md_bams",
            "samblaster_logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 8",
            "errorStrategy 'retry'",
            "tag { library }",
            "publishDir \"${outputPath}\", mode: 'copy', pattern: '*.{md.bam}*'",
            "conda \"samtools=1.9 samblaster=0.1.24 sambamba=0.7.0\""
        ],
        "when": "",
        "stub": ""
    },
    "methylDackel_mbias": {
        "name_process": "methylDackel_mbias",
        "string_process": " process methylDackel_mbias {\n        cpus 8\n        errorStrategy 'retry'\n        tag {library}\n        conda \"methyldackel=0.4.0 samtools=1.9\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_mbias.groupTuple()\n\n        output:\n            file('*.svg') into mbias_output_svg\n            file('*.tsv') into mbias_output_tsv\n            tuple library, file('*.tsv') into mbias_for_aggregate\n\n        shell:\n        '''\n        echo -e \"chr\\tcontext\\tstrand\\tRead\\tPosition\\tnMethylated\\tnUnmethylated\\tnMethylated(+dups)\\tnUnmethylated(+dups)\" > !{library}_combined_mbias.tsv\n        chrs=(`samtools view -H !{md_file} | grep @SQ | cut -f 2 | sed 's/SN://'| grep -v _random | grep -v chrUn | sed 's/|/\\\\|/'`)\n\n        for chr in ${chrs[*]}; do\n            for context in CHH CHG CpG; do\n                arg=''\n                if [ $context = 'CHH' ]; then\n                arg='--CHH --noCpG'\n                elif [ $context = 'CHG' ]; then\n                arg='--CHG --noCpG'\n                fi\n                # need two calls to add columns containing the counts without filtering duplicate reads (for rrEM-seq where start/end is constrained)\n                # not sure why we need both --keepDupes and -F, probably a bug in mbias\n                join -t $'\\t' -j1 -o 1.2,1.3,1.4,1.5,1.6,2.5,2.6 -a 1 -e 0 \\\n                <( \\\n                    MethylDackel mbias --noSVG $arg -@ !{task.cpus} -r $chr !{genome} !{md_file} | \\\n                    tail -n +2 | awk '{print $1\"-\"$2\"-\"$3\"\\t\"$0}' | sort -k 1b,1\n                ) \\\n                <( \\\n                    MethylDackel mbias --noSVG --keepDupes -F 2816 $arg -@ !{task.cpus} -r $chr !{genome} !{md_file} | \\\n                    tail -n +2 | awk '{print $1\"-\"$2\"-\"$3\"\\t\"$0}' | sort -k 1b,1\n                ) \\\n                | sed \"s/^/${chr}\\t${context}\\t/\" \\\n                >> !{library}_combined_mbias.tsv\n            done\n        done\n        # makes the svg files for trimming checks\n        MethylDackel mbias -@ !{task.cpus} --noCpG --CHH --CHG -r ${chrs[0]} !{genome} !{md_file} !{library}_chn\n        for f in *chn*.svg; do sed -i \"s/Strand<\\\\/text>/Strand $f ${chrs[0]} CHN <\\\\/text>/\" $f; done;\n\n        MethylDackel mbias -@ !{task.cpus} -r ${chrs[0]} !{genome} !{md_file} !{library}_cpg\n        for f in *cpg*.svg; do sed -i \"s/Strand<\\\\/text>/Strand $f ${chrs[0]} CpG<\\\\/text>/\" $f; done;\n\n        '''\n\n    }",
        "nb_lignes_process": 50,
        "string_script": "        '''\n        echo -e \"chr\\tcontext\\tstrand\\tRead\\tPosition\\tnMethylated\\tnUnmethylated\\tnMethylated(+dups)\\tnUnmethylated(+dups)\" > !{library}_combined_mbias.tsv\n        chrs=(`samtools view -H !{md_file} | grep @SQ | cut -f 2 | sed 's/SN://'| grep -v _random | grep -v chrUn | sed 's/|/\\\\|/'`)\n\n        for chr in ${chrs[*]}; do\n            for context in CHH CHG CpG; do\n                arg=''\n                if [ $context = 'CHH' ]; then\n                arg='--CHH --noCpG'\n                elif [ $context = 'CHG' ]; then\n                arg='--CHG --noCpG'\n                fi\n                # need two calls to add columns containing the counts without filtering duplicate reads (for rrEM-seq where start/end is constrained)\n                # not sure why we need both --keepDupes and -F, probably a bug in mbias\n                join -t $'\\t' -j1 -o 1.2,1.3,1.4,1.5,1.6,2.5,2.6 -a 1 -e 0 \\\n                <( \\\n                    MethylDackel mbias --noSVG $arg -@ !{task.cpus} -r $chr !{genome} !{md_file} | \\\n                    tail -n +2 | awk '{print $1\"-\"$2\"-\"$3\"\\t\"$0}' | sort -k 1b,1\n                ) \\\n                <( \\\n                    MethylDackel mbias --noSVG --keepDupes -F 2816 $arg -@ !{task.cpus} -r $chr !{genome} !{md_file} | \\\n                    tail -n +2 | awk '{print $1\"-\"$2\"-\"$3\"\\t\"$0}' | sort -k 1b,1\n                ) \\\n                | sed \"s/^/${chr}\\t${context}\\t/\" \\\n                >> !{library}_combined_mbias.tsv\n            done\n        done\n        # makes the svg files for trimming checks\n        MethylDackel mbias -@ !{task.cpus} --noCpG --CHH --CHG -r ${chrs[0]} !{genome} !{md_file} !{library}_chn\n        for f in *chn*.svg; do sed -i \"s/Strand<\\\\/text>/Strand $f ${chrs[0]} CHN <\\\\/text>/\" $f; done;\n\n        MethylDackel mbias -@ !{task.cpus} -r ${chrs[0]} !{genome} !{md_file} !{library}_cpg\n        for f in *cpg*.svg; do sed -i \"s/Strand<\\\\/text>/Strand $f ${chrs[0]} CpG<\\\\/text>/\" $f; done;\n\n        '''",
        "nb_lignes_script": 34,
        "language_script": "bash",
        "tools": [
            "joineRML",
            "RNAstrand"
        ],
        "tools_url": [
            "https://bio.tools/joinerml",
            "https://bio.tools/rnastrand"
        ],
        "tools_dico": [
            {
                "name": "joineRML",
                "uri": "https://bio.tools/joinerml",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3569",
                            "term": "Applied mathematics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Joint Modelling of Multivariate Longitudinal Data and Time-to-Event Outcomes.",
                "homepage": "https://cran.r-project.org/web/packages/joineRML/"
            },
            {
                "name": "RNAstrand",
                "uri": "https://bio.tools/rnastrand",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0880",
                                "term": "RNA secondary structure"
                            }
                        ]
                    }
                ],
                "description": "RNAstrand predicts the reading direction of a structured RNA in a multiple sequence alignment by employing a support vector machine (SVM)",
                "homepage": "http://www.bioinf.uni-leipzig.de/Software/RNAstrand/"
            }
        ],
        "inputs": [
            "md_files_for_mbias"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mbias_output_svg",
            "mbias_output_tsv",
            "mbias_for_aggregate"
        ],
        "nb_outputs": 3,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 8",
            "errorStrategy 'retry'",
            "tag {library}",
            "conda \"methyldackel=0.4.0 samtools=1.9\""
        ],
        "when": "",
        "stub": ""
    },
    "methylDackel_extract": {
        "name_process": "methylDackel_extract",
        "string_process": " process methylDackel_extract {\n        cpus 8\n        tag {library}\n        publishDir \"${outputPath}\", mode: 'copy'\n        conda \"methyldackel=0.4.0 pigz=2.4\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_extract.groupTuple()\n\n        output:\n            tuple library, file('*.methylKit.gz') into extract_output\n\n        shell:\n        '''\n        MethylDackel extract --methylKit --OT 0,0,0,95 --OB 0,0,5,0 -@ !{task.cpus} --CHH --CHG -o !{library} !{genome} !{md_file}\n        pigz -p !{task.cpus} *.methylKit\n        '''\n\n    }",
        "nb_lignes_process": 17,
        "string_script": "        '''\n        MethylDackel extract --methylKit --OT 0,0,0,95 --OB 0,0,5,0 -@ !{task.cpus} --CHH --CHG -o !{library} !{genome} !{md_file}\n        pigz -p !{task.cpus} *.methylKit\n        '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "md_files_for_extract"
        ],
        "nb_inputs": 1,
        "outputs": [
            "extract_output"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 8",
            "tag {library}",
            "publishDir \"${outputPath}\", mode: 'copy'",
            "conda \"methyldackel=0.4.0 pigz=2.4\""
        ],
        "when": "",
        "stub": ""
    },
    "select_human_reads": {
        "name_process": "select_human_reads",
        "string_process": " process select_human_reads {\n        cpus 8\n        tag {library}\n        conda \"sambamba=0.7.1 bedtools=2.29.2\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_human_reads.groupTuple()\n\n        output:\n            tuple library, file('*.human.bam') into human_bams_gc\n            tuple library, file('*.human.bam') into human_bams_inserts\n\n        shell:\n        '''\n        sambamba view -t 8 -l 0 -f bam !{md_file} chr1 chr2 chr3 chr4 chr5 chr6 \\\n                                                  chr7 chr8 chr9 chr10 chr11 chr12 \\\n                                                  chr13 chr14 chr15 chr16 chr17 chr18 \\\n                                                  chr19 chr20 chr21 chr22 chrX chrY \\\n        > !{md_file}.human.bam\n        '''\n\n    }",
        "nb_lignes_process": 20,
        "string_script": "        '''\n        sambamba view -t 8 -l 0 -f bam !{md_file} chr1 chr2 chr3 chr4 chr5 chr6 \\\n                                                  chr7 chr8 chr9 chr10 chr11 chr12 \\\n                                                  chr13 chr14 chr15 chr16 chr17 chr18 \\\n                                                  chr19 chr20 chr21 chr22 chrX chrY \\\n        > !{md_file}.human.bam\n        '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "md_files_for_human_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "human_bams_gc",
            "human_bams_inserts"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 8",
            "tag {library}",
            "conda \"sambamba=0.7.1 bedtools=2.29.2\""
        ],
        "when": "",
        "stub": ""
    },
    "runFastQC": {
        "name_process": "runFastQC",
        "string_process": " process runFastQC {\n        cpus 1\n        errorStrategy 'retry'\n        tag { library }\n        conda \"fastqc=0.11.8\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_fastqc.groupTuple()\n\n        output:\n            file('*_fastqc.zip') into fastqc_results\n            tuple library, file('*_fastqc.zip') into fastqc_results_for_aggregate\n\n        shell:\n        '''\n        fastqc -f bam !{md_file}\n        '''\n\n    }",
        "nb_lignes_process": 17,
        "string_script": "        '''\n        fastqc -f bam !{md_file}\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "md_files_for_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results",
            "fastqc_results_for_aggregate"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"fastqc=0.11.8\""
        ],
        "when": "",
        "stub": ""
    },
    "sum_nonconverted_reads": {
        "name_process": "sum_nonconverted_reads",
        "string_process": " process sum_nonconverted_reads {\t\n\n        input:\t\n            tuple library, file(count_files) from nonconverted_counts.groupTuple()\t\n\n        output:\t\n            file('*-nonconverted-counts.tsv') into cat_nonconversions\t\n            tuple library, file('*-nonconverted-counts.tsv') into nonconverted_counts_for_aggregate\n\n        shell:\t\n        '''\t\n        files=(*.tsv)\t\n        paste *.tsv | awk -v numFiles=${#files[@]} -v OFS='\\t' '\t\n        {\t\n        row = sep = \"\"\t\n        for(i=1; i < NF/numFiles; ++i) { row = row sep $i; sep = OFS }\t\n        sum = $(NF/numFiles) # last header col. / (1st) data col. to sum\t\n        for(i=2; i<=numFiles; ++i) sum += $(NF/numFiles * i) # add other cols.\t\n        printf \"%s%s%s\\\\n\", row, OFS, sum\t\n        }' > tmp-counts.tsv\t\n        awk '{print \"!{library}\\t\" $0}' tmp-counts.tsv > !{library}-nonconverted-counts.tsv\t\n        '''    \t\n    }",
        "nb_lignes_process": 21,
        "string_script": "        '''\t\n        files=(*.tsv)\t\n        paste *.tsv | awk -v numFiles=${#files[@]} -v OFS='\\t' '\t\n        {\t\n        row = sep = \"\"\t\n        for(i=1; i < NF/numFiles; ++i) { row = row sep $i; sep = OFS }\t\n        sum = $(NF/numFiles) # last header col. / (1st) data col. to sum\t\n        for(i=2; i<=numFiles; ++i) sum += $(NF/numFiles * i) # add other cols.\t\n        printf \"%s%s%s\\\\n\", row, OFS, sum\t\n        }' > tmp-counts.tsv\t\n        awk '{print \"!{library}\\t\" $0}' tmp-counts.tsv > !{library}-nonconverted-counts.tsv\t\n        '''",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "PROWL",
            "SEPA",
            "Sumer"
        ],
        "tools_url": [
            "https://bio.tools/prowl",
            "https://bio.tools/sepa",
            "https://bio.tools/Sumer"
        ],
        "tools_dico": [
            {
                "name": "PROWL",
                "uri": "https://bio.tools/prowl",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3214",
                                    "term": "Spectral analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3631",
                                    "term": "Peptide identification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3627",
                                    "term": "Mass spectra calibration"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3767",
                                    "term": "Protein identification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3214",
                                    "term": "Spectrum analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3214",
                                    "term": "Mass spectrum analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3631",
                                    "term": "Peptide-spectrum-matching"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3767",
                                    "term": "Protein inference"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software tools and integrated databases to facilitate analyzing the output from protein mass spectrometry experiments.",
                "homepage": "http://prowl.rockefeller.edu/"
            },
            {
                "name": "SEPA",
                "uri": "https://bio.tools/sepa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Given single-cell RNA-seq data and true experiment time of cells or pseudo-time cell ordering, this tool provides convenient functions for users to assign genes into different gene expression patterns such as constant, monotone increasing and increasing then decreasing. It then performs GO enrichment analysis to analyze the functional roles of genes with the same or similar patterns.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/SEPA.html"
            },
            {
                "name": "Sumer",
                "uri": "https://bio.tools/Sumer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An R package for summarizing multiple enrichment analysis results.",
                "homepage": "https://github.com/bzhanglab/sumer"
            }
        ],
        "inputs": [
            "nonconverted_counts"
        ],
        "nb_inputs": 1,
        "outputs": [
            "cat_nonconversions",
            "nonconverted_counts_for_aggregate"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "combine_nonconversion": {
        "name_process": "combine_nonconversion",
        "string_process": " process combine_nonconversion {\t\n        publishDir \"${outputPath}\", mode: 'copy'\t\n\n        input:\t\n            file ('*') from cat_nonconversions\n\n        output:\t\n            file (\"combined-nonconverted.tsv\")\t\n\n        shell:\t\n        '''\t\n        cat *.tsv > combined-nonconverted.tsv\t\n        '''\t\n\n    }",
        "nb_lignes_process": 13,
        "string_script": "        '''\t\n        cat *.tsv > combined-nonconverted.tsv\t\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "cat_nonconversions"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "publishDir \"${outputPath}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_flagstats": {
        "name_process": "samtools_flagstats",
        "string_process": " process samtools_flagstats {\n        cpus 2\n        errorStrategy 'retry'\n        tag { library }\n        conda \"samtools=1.9\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_samflagstats.groupTuple(by: 0)\n\n        output:\n            file('*.flagstat') into flagstats\n            file('*.idxstat') into idxstats\n            tuple library, file('*.flagstat') into flagstats_for_aggregate\n            tuple library, file('*.idxstat') into idxstats_for_aggregate\n            \n\n        shell:\n        '''\n        samtools flagstat -@!{task.cpus} !{md_file} > !{md_file}.flagstat\n        samtools idxstats !{md_file} > !{md_file}.idxstat\n        '''\n    }",
        "nb_lignes_process": 20,
        "string_script": "        '''\n        samtools flagstat -@!{task.cpus} !{md_file} > !{md_file}.flagstat\n        samtools idxstats !{md_file} > !{md_file}.idxstat\n        '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "md_files_for_samflagstats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "flagstats",
            "idxstats",
            "flagstats_for_aggregate",
            "idxstats_for_aggregate"
        ],
        "nb_outputs": 4,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 2",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"samtools=1.9\""
        ],
        "when": "",
        "stub": ""
    },
    "samtools_stats": {
        "name_process": "samtools_stats",
        "string_process": " process samtools_stats {\n        cpus 2\n        errorStrategy 'retry'\n        tag { library }\n        conda \"samtools=1.9\"\n\n        input:\n            tuple library, file(md_file),file(md_bai) from md_files_for_samstats.groupTuple()\n\n        output:\n\n            file('*.samstat') into samstats\n\n        shell:\n        '''\n        samtools stats -@!{task.cpus} !{md_file} > !{md_file}.samstat\n        '''\n    }",
        "nb_lignes_process": 16,
        "string_script": "        '''\n        samtools stats -@!{task.cpus} !{md_file} > !{md_file}.samstat\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "md_files_for_samstats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samstats"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 2",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"samtools=1.9\""
        ],
        "when": "",
        "stub": ""
    },
    "picard_gc_bias": {
        "name_process": "picard_gc_bias",
        "string_process": " process picard_gc_bias {\n        cpus 1\n        errorStrategy 'retry'\n        tag { library }\n        conda \"picard=2.20.7\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_picard_gc.groupTuple()\n\n        output:\n            file('*gc_metrics') into picard_gc_stats\n\n        shell:\n        '''\n        picard -Xmx4g CollectGcBiasMetrics IS_BISULFITE_SEQUENCED=true VALIDATION_STRINGENCY=LENIENT I=!{md_file} O=!{md_file}.gc_metrics S=!{md_file}.gc_summary_metrics CHART=!{md_file}.gc.pdf R=!{genome}\n        '''\n    }",
        "nb_lignes_process": 15,
        "string_script": "        '''\n        picard -Xmx4g CollectGcBiasMetrics IS_BISULFITE_SEQUENCED=true VALIDATION_STRINGENCY=LENIENT I=!{md_file} O=!{md_file}.gc_metrics S=!{md_file}.gc_summary_metrics CHART=!{md_file}.gc.pdf R=!{genome}\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "md_files_for_picard_gc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "picard_gc_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"picard=2.20.7\""
        ],
        "when": "",
        "stub": ""
    },
    "picard_stats": {
        "name_process": "picard_stats",
        "string_process": " process picard_stats {\n\n        cpus 4\n        errorStrategy 'retry'\n        tag { library }\n        conda \"picard=2.20.7\"\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_picard.groupTuple()\n\n        output:\n            file('*_metrics') into picard_stats\n\n        shell:\n        '''\n        picard -Xmx16g CollectInsertSizeMetrics VALIDATION_STRINGENCY=LENIENT  I=!{md_file} O=!{md_file}.insertsize_metrics MINIMUM_PCT=0 HISTOGRAM_FILE=/dev/null\n        '''\n    }",
        "nb_lignes_process": 16,
        "string_script": "        '''\n        picard -Xmx16g CollectInsertSizeMetrics VALIDATION_STRINGENCY=LENIENT  I=!{md_file} O=!{md_file}.insertsize_metrics MINIMUM_PCT=0 HISTOGRAM_FILE=/dev/null\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "md_files_for_picard"
        ],
        "nb_inputs": 1,
        "outputs": [
            "picard_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 4",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"picard=2.20.7\""
        ],
        "when": "",
        "stub": ""
    },
    "human_gc_bias": {
        "name_process": "human_gc_bias",
        "string_process": " process human_gc_bias {\n        cpus 1\n        errorStrategy 'retry'\n        tag { library }\n        conda \"picard=2.20.7\"\n\n        input:\n            tuple library, file(md_file) from human_bams_gc.groupTuple()\n\n        output:\n            tuple library, file('*gc_metrics') into human_gc_stats_for_aggregate\n\n        shell:\n        '''\n        picard -Xmx4g CollectGcBiasMetrics IS_BISULFITE_SEQUENCED=true VALIDATION_STRINGENCY=LENIENT I=!{md_file} O=!{md_file}.gc_metrics S=!{md_file}.gc_summary_metrics CHART=!{md_file}.gc.pdf R=!{genome}\n        '''\n    }",
        "nb_lignes_process": 15,
        "string_script": "        '''\n        picard -Xmx4g CollectGcBiasMetrics IS_BISULFITE_SEQUENCED=true VALIDATION_STRINGENCY=LENIENT I=!{md_file} O=!{md_file}.gc_metrics S=!{md_file}.gc_summary_metrics CHART=!{md_file}.gc.pdf R=!{genome}\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "human_bams_gc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "human_gc_stats_for_aggregate"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"picard=2.20.7\""
        ],
        "when": "",
        "stub": ""
    },
    "human_insert_size": {
        "name_process": "human_insert_size",
        "string_process": " process human_insert_size {\n\n        cpus 4\n        errorStrategy 'retry'\n        tag { library }\n        conda \"picard=2.20.7\"\n\n        input:\n            tuple library, file(md_file) from human_bams_inserts.groupTuple()\n\n        output:\n            tuple library, file('*insertsize_metrics') into human_stats_for_aggregate\n\n        shell:\n        '''\n        picard -Xmx16g CollectInsertSizeMetrics VALIDATION_STRINGENCY=LENIENT  I=!{md_file} O=!{md_file}.insertsize_metrics MINIMUM_PCT=0.0001 HISTOGRAM_FILE=/dev/null\n        '''\n    }",
        "nb_lignes_process": 16,
        "string_script": "        '''\n        picard -Xmx16g CollectInsertSizeMetrics VALIDATION_STRINGENCY=LENIENT  I=!{md_file} O=!{md_file}.insertsize_metrics MINIMUM_PCT=0.0001 HISTOGRAM_FILE=/dev/null\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "human_bams_inserts"
        ],
        "nb_inputs": 1,
        "outputs": [
            "human_stats_for_aggregate"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 4",
            "errorStrategy 'retry'",
            "tag { library }",
            "conda \"picard=2.20.7\""
        ],
        "when": "",
        "stub": ""
    },
    "goleft": {
        "name_process": "goleft",
        "string_process": " process goleft {\n        cpus 1\n        conda 'goleft=0.2.0'\n\n        input:\n            tuple library, file(md_file), file(md_bai) from md_files_for_goleft.groupTuple()\n\n        output:\n            file(\"${library}/*-indexcov.ped\") into goleft_ped\n            file(\"${library}/*-indexcov.roc\") into goleft_roc\n\n        shell:\n        '''\n            goleft indexcov --directory !{library} *.bam\n        '''\n    }",
        "nb_lignes_process": 14,
        "string_script": "        '''\n            goleft indexcov --directory !{library} *.bam\n        '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "md_files_for_goleft"
        ],
        "nb_inputs": 1,
        "outputs": [
            "goleft_ped",
            "goleft_roc"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "conda 'goleft=0.2.0'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": " process multiqc {\n        cpus 1\n        publishDir \"${outputPath}\", mode: 'copy'\n        conda \"multiqc=1.7\"\n\n        input:\n            file('*') from fastqc_results.flatten().toList()\n            file('*') from flagstats.flatten().toList()\n            file('*') from idxstats.flatten().toList()\n            file('*') from samstats.flatten().toList()\n            file('*') from picard_stats.flatten().toList()\n            file('*') from picard_gc_stats.flatten().toList()\n            file('*') from goleft_ped.flatten().toList()\n            file('*') from goleft_roc.flatten().toList()\n            file('*') from samblaster_logs.flatten().toList()\n            file('*') from fastp_log_files.flatten().toList()\n\n        output:\n            file \"*report.html\"\n\n        shell:\n        '''\n        for file in $(cat input.* | sed -e 's/\\\\[//g' | sed -e 's/, \\\\|\\\\]/\\\\n/g'); do ln -s ${file} ./; done\n        cat <<CONFIG > multiqc_config.yaml \n    title: Bwameth Alignment Summary - !{flowcell}\n    extra_fn_clean_exts:\n        - '.md'\n        - '_fastp'\n    custom_plot_config:\n        picard_insert_size:\n            xmax: 1000\n    table_columns_placement:\n        Samtools Stats:\n            raw_total_sequences: 10\n            reads_mapped_percent: 20\n            reads_properly_paired_percent: 30\n            reads_MQ0_percent: 35\n        Samblaster:\n            pct_dups: 40\n        Picard:\n            summed_median: 50\n    table_columns_visible:\n        Picard:\n            PCT_PF_READS_ALIGNED: False\n            summed_mean: False\n        Samtools Stats:\n            reads_mapped: False\n            mapped_passed: False\n            non-primary_alignments: False\n            reads_MQ0_percent: True\n        Samtools Flagstat:\n            mapped_passed: False\n        samtools_idxstats_always:\n            - plasmid_puc19c\n            - phage_lambda\n        FastQC:\n            percent_duplicates: False\n            total_sequences: False\n            avg_sequence_length: False\n            percent_fails: False\n            total_sequences: False\n    CONFIG\n\n        multiqc -ip  .\n        '''\n    }",
        "nb_lignes_process": 64,
        "string_script": "        '''\n        for file in $(cat input.* | sed -e 's/\\\\[//g' | sed -e 's/, \\\\|\\\\]/\\\\n/g'); do ln -s ${file} ./; done\n        cat <<CONFIG > multiqc_config.yaml \n    title: Bwameth Alignment Summary - !{flowcell}\n    extra_fn_clean_exts:\n        - '.md'\n        - '_fastp'\n    custom_plot_config:\n        picard_insert_size:\n            xmax: 1000\n    table_columns_placement:\n        Samtools Stats:\n            raw_total_sequences: 10\n            reads_mapped_percent: 20\n            reads_properly_paired_percent: 30\n            reads_MQ0_percent: 35\n        Samblaster:\n            pct_dups: 40\n        Picard:\n            summed_median: 50\n    table_columns_visible:\n        Picard:\n            PCT_PF_READS_ALIGNED: False\n            summed_mean: False\n        Samtools Stats:\n            reads_mapped: False\n            mapped_passed: False\n            non-primary_alignments: False\n            reads_MQ0_percent: True\n        Samtools Flagstat:\n            mapped_passed: False\n        samtools_idxstats_always:\n            - plasmid_puc19c\n            - phage_lambda\n        FastQC:\n            percent_duplicates: False\n            total_sequences: False\n            avg_sequence_length: False\n            percent_fails: False\n            total_sequences: False\n    CONFIG\n\n        multiqc -ip  .\n        '''",
        "nb_lignes_script": 43,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "haploconfig",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/haploconfig",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "haploconfig",
                "uri": "https://bio.tools/haploconfig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program that can be used to implement tests of neutrality based on the frequency distribution of haplotypes in a sample of DNA sequences (the \u201chaplotype configuration\u201d) and the number of segregating sites. The neutrality tests can be performed conditional on the standard neutral coalescent model with or without recombination, exponential population growth, or island migration.",
                "homepage": "http://www.stanford.edu/group/rosenberglab/haploconfig.html"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_results",
            "flagstats",
            "idxstats",
            "samstats",
            "picard_stats",
            "picard_gc_stats",
            "goleft_ped",
            "goleft_roc",
            "samblaster_logs",
            "fastp_log_files"
        ],
        "nb_inputs": 10,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "cpus 1",
            "publishDir \"${outputPath}\", mode: 'copy'",
            "conda \"multiqc=1.7\""
        ],
        "when": "",
        "stub": ""
    },
    "combine_mbias_tsv": {
        "name_process": "combine_mbias_tsv",
        "string_process": " process combine_mbias_tsv {\n        publishDir \"${outputPath}\", mode: 'copy', pattern: 'combined*'\n\n        input:\n            file(tsv) from mbias_output_tsv\n\n        output:\n            file \"combined-mbias.tsv\"\n\n        shell:\n        '''\n            echo -ne 'flowcell\\tlibrary\\t' > combined-mbias.tsv\n            ls *_mbias.tsv | head -n 1 | xargs head -n 1 >> combined-mbias.tsv\n            for f in *_mbias.tsv; do \n                filebase=`basename \"${f}\" _combined_mbias.tsv`\n                paste <( yes \"!{flowcell}\t${filebase}\" | head -n `nl \"$f\" | tail -n 1 | cut -f 1` ) \"$f\" | tail -n +2  >> combined-mbias.tsv\n            done\n        '''\n    }",
        "nb_lignes_process": 17,
        "string_script": "        '''\n            echo -ne 'flowcell\\tlibrary\\t' > combined-mbias.tsv\n            ls *_mbias.tsv | head -n 1 | xargs head -n 1 >> combined-mbias.tsv\n            for f in *_mbias.tsv; do \n                filebase=`basename \"${f}\" _combined_mbias.tsv`\n                paste <( yes \"!{flowcell}\t${filebase}\" | head -n `nl \"$f\" | tail -n 1 | cut -f 1` ) \"$f\" | tail -n +2  >> combined-mbias.tsv\n            done\n        '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mbias_output_tsv"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "publishDir \"${outputPath}\", mode: 'copy', pattern: 'combined*'"
        ],
        "when": "",
        "stub": ""
    },
    "combine_mbias_svg": {
        "name_process": "combine_mbias_svg",
        "string_process": " process combine_mbias_svg {\n        publishDir \"${outputPath}\", mode: 'copy', pattern: 'combined*'\n        conda 'cairosvg=2.4.2 ghostscript=9.22'\n\n        input:\n            file(svg) from mbias_output_svg.groupTuple()\n\n        output:\n            file \"combined-mbias.pdf\"\n\n        shell:\n        '''\n        for f in *.svg; do\n            cairosvg <(sed s/-nan/-1/ $f) -o $f.pdf\n        done\n        gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=combined-mbias.pdf *.pdf\n        '''\n    }",
        "nb_lignes_process": 16,
        "string_script": "        '''\n        for f in *.svg; do\n            cairosvg <(sed s/-nan/-1/ $f) -o $f.pdf\n        done\n        gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=combined-mbias.pdf *.pdf\n        '''",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GS3"
        ],
        "tools_url": [
            "https://bio.tools/gs3"
        ],
        "tools_dico": [
            {
                "name": "GS3",
                "uri": "https://bio.tools/gs3",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "GS3 (Genomic Selection / Gibbs Sampling / Gauss Seidel) is a program that estimates fixed and random effects, breeding values and SNP effects for genomic selection. It includes normal, mixture, or double exponential distributions for SNP effects, i.e. GBLUP, the so-called BayesCPi, and the Bayesian Lasso. It allows estimation of the variances and effects of SNPs, polygenic and environmental effects, and also the inclusion of heterogeneous variances as for the analysis of DYD\u2019s",
                "homepage": "https://github.com/alegarra/gs3"
            }
        ],
        "inputs": [
            "mbias_output_svg"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "publishDir \"${outputPath}\", mode: 'copy', pattern: 'combined*'",
            "conda 'cairosvg=2.4.2 ghostscript=9.22'"
        ],
        "when": "",
        "stub": ""
    },
    "clean_epd_gtf": {
        "name_process": "clean_epd_gtf",
        "string_process": "\nprocess clean_epd_gtf {\n   conda \"curl ucsc-bedtogenepred ucsc-genepredtogtf\"\n\n   output:\n       file('grch38_promoters.gtf') into epd_promoters_gtf\n\n   shell:\n   '''\n       curl -fsSL \"ftp://ccg.epfl.ch/epdnew/H_sapiens/006/Hs_EPDnew_006_hg38.bed\" \\\n       | tr ' ' '\\t' \\\n       | bedToGenePred /dev/stdin /dev/stdout \\\n       | genePredToGtf file /dev/stdin /dev/stdout > grch38_promoters.gtf\n   '''\t\n}",
        "nb_lignes_process": 13,
        "string_script": "   '''\n       curl -fsSL \"ftp://ccg.epfl.ch/epdnew/H_sapiens/006/Hs_EPDnew_006_hg38.bed\" \\\n       | tr ' ' '\\t' \\\n       | bedToGenePred /dev/stdin /dev/stdout \\\n       | genePredToGtf file /dev/stdin /dev/stdout > grch38_promoters.gtf\n   '''",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "epd_promoters_gtf"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"curl ucsc-bedtogenepred ucsc-genepredtogtf\""
        ],
        "when": "",
        "stub": ""
    },
    "epd_methylation": {
        "name_process": "epd_methylation",
        "string_process": "\nprocess epd_methylation {\n    conda \"bedtools=2.29.2 htslib=1.9\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n\n    input:\n        file gtf from epd_promoters_gtf\n        file bed from hq_meth_bed\n\n    output:\n        file 'epd_promoter_methylation.tsv' into epd_promoter_meth\n\n    shell:\n    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > epd_promoter_methylation.tsv \n    '''\n}",
        "nb_lignes_process": 20,
        "string_script": "    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > epd_promoter_methylation.tsv \n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "epd_promoters_gtf",
            "hq_meth_bed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "epd_promoter_meth"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"bedtools=2.29.2 htslib=1.9\"",
            "publishDir \"$params.output_dir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "epd_promoter_counts": {
        "name_process": "epd_promoter_counts",
        "string_process": "\nprocess epd_promoter_counts{\n    conda \"subread=2.0.0\"\n    cpus 16\n\n    input:\n        file gtf from epd_promoters_gtf\n        path('*') from bams_for_epd.map{ [it[1][0],it[1][1]] }.flatten().toList()\n\n    output:\n        file 'epd_promoter_counts.tsv' into epd_promoter_counts\n\n    shell:\n    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o epd_promoter_counts.tsv *.bam\n    '''\n}",
        "nb_lignes_process": 19,
        "string_script": "    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o epd_promoter_counts.tsv *.bam\n    '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "epd_promoters_gtf",
            "bams_for_epd"
        ],
        "nb_inputs": 2,
        "outputs": [
            "epd_promoter_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"subread=2.0.0\"",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "clean_cpg_islands_gtf": {
        "name_process": "clean_cpg_islands_gtf",
        "string_process": "\nprocess clean_cpg_islands_gtf {\n\n    input:\n        file ucsc_cpg_gtf from ucsc_cpg_islands_gtf\n    output:\n        file('grch38_cpg_islands.uniqname.gtf') into cpg_islands_gtf \n\n    shell:\n    '''\n    zcat !{ucsc_cpg_gtf} \\\n    |  awk -v FS='\\t' -v OFS='\\t' '{print $1,$1\":\"$4\"-\"$5,$3,$4,$5,$6,$7,$8,$9}' \\\n    > grch38_cpg_islands.uniqname.gtf\n    '''\n}",
        "nb_lignes_process": 13,
        "string_script": "    '''\n    zcat !{ucsc_cpg_gtf} \\\n    |  awk -v FS='\\t' -v OFS='\\t' '{print $1,$1\":\"$4\"-\"$5,$3,$4,$5,$6,$7,$8,$9}' \\\n    > grch38_cpg_islands.uniqname.gtf\n    '''",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ucsc_cpg_islands_gtf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "cpg_islands_gtf"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cpg_island_methylation": {
        "name_process": "cpg_island_methylation",
        "string_process": "\nprocess cpg_island_methylation {\n    conda \"bedtools=2.29.2 htslib=1.9\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n\n    input:\n        file gtf from cpg_islands_gtf\n        file bed from hq_meth_bed\n\n    output:\n        file 'cpg_island_methylation.tsv' into cpg_island_meth\n\n    shell:\n    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > cpg_island_methylation.tsv \n    '''\n}",
        "nb_lignes_process": 20,
        "string_script": "    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > cpg_island_methylation.tsv \n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "cpg_islands_gtf",
            "hq_meth_bed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cpg_island_meth"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"bedtools=2.29.2 htslib=1.9\"",
            "publishDir \"$params.output_dir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "cpg_island_counts": {
        "name_process": "cpg_island_counts",
        "string_process": "\nprocess cpg_island_counts{\n    conda \"subread=2.0.0\"\n    cpus 16\n\n    input:\n        file gtf from cpg_islands_gtf\n        path('*') from bams_for_cpgs.map{ [it[1][0],it[1][1]] }.flatten().toList()\n\n    output:\n        file 'cpg_island_counts.tsv' into cpg_island_counts\n\n    shell:\n    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o cpg_island_counts.tsv *.bam\n    '''\n}",
        "nb_lignes_process": 19,
        "string_script": "    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o cpg_island_counts.tsv *.bam\n    '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "cpg_islands_gtf",
            "bams_for_cpgs"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cpg_island_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"subread=2.0.0\"",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "refseq_feature_gtfs": {
        "name_process": "refseq_feature_gtfs",
        "string_process": "\nprocess refseq_feature_gtfs {\n    tag {feature}\n    conda \"subread=2.0.0 bedtools=2.29.2\"\n\n    input:\n        file(gtf) from refseq_gtf\n        file(assembly_report) from ncbi_assembly_report\n        val feature from refseq_feature_types_for_gtf\n\n    output:\n        tuple feature, file('*.gtf') into feature_gtf_for_meth\n        tuple feature, file('*_flat.saf') into feature_saf_for_counts\n\n    shell:\n    '''\n    # uses awk to create a hash lookup from the first file (NCBI assembly report) \n    # translating chr name in the second file\n    awk -v OFS='\\\\t' -v FS='\\\\t' 'NR==FNR {dict[$1]=$2; next} {$1=dict[$1]; print}' \\\n    <(grep -v '^#' !{assembly_report} | cut -f 7,10 | tr -d '\\\\r')  \\\n    <(zcat !{gtf} | grep -v '^#') \\\n    | grep \"GeneID:\" \\\n    | grep -P -v \"_alt\\\\t\" \\\n    | grep -P -v \"^na\\\\t\" \\\n    | sed -r 's/;Dbxref(=[^;]*)GeneID:([^,;]+)([;,])/;gene_id=\\\\2;Dbxref\\\\1GeneID:\\\\2\\\\3/' \\\n    | awk  -v OFS='\\\\t' -v FS='\\\\t' \\\n        '($3==\"exon\") && (index($9,\"gbkey=mRNA\") > 0) && (index($9,\"-1;Parent\") > 0) \\\n           { print($1,$2,\"mRNAexon1\",$4,$5,$6,$7,$8,$9); next }\n         ($3==\"exon\") && (index($9,\"gbkey=mRNA\") > 0)  \\\n           { print($1,$2,\"mRNAexon\",$4,$5,$6,$7,$8,$9); next }\n         { print }  \n        ' \\\n    > name_converted.gff\n\n    #exons overlap, we want only the longest to avoid 0 cov exons from featureCounts\n    flattenGTF -a name_converted.gff -o flat_name_converted.saf -t !{feature}\n\n    #need to switch to bed for intersection later\n    tail -n +2 flat_name_converted.saf \\\n      | awk -v OFS='\\\\t' -v FS='\\\\t' '{print $2,$3-1,$4,$1,\"-\",$5}' \\\n      | bedtools sort -faidx !{params.genome}.fai -i /dev/stdin > !{feature}_flat.bed\n    \n    #filters by feature type\n    awk -v type=!{feature} -v OFS='\\\\t' -v FS='\\\\t' '($3==type) { print}' name_converted.gff \\\n    > !{feature}.gtf\n\n    #only include those entries that intersect with the desired feature type, back to SAF format\n    echo \"GeneID\\tChr\\tStart\\tEnd\\tStrand\" > !{feature}_flat.saf\n    bedtools intersect -a !{feature}_flat.bed -b !{feature}.gtf  -u \\\n      | awk -v OFS='\\\\t' -v FS='\\\\t' '{print $4,$1,$2+1,$3,$6}' >> !{feature}_flat.saf\n    '''\n}",
        "nb_lignes_process": 50,
        "string_script": "    '''\n    # uses awk to create a hash lookup from the first file (NCBI assembly report) \n    # translating chr name in the second file\n    awk -v OFS='\\\\t' -v FS='\\\\t' 'NR==FNR {dict[$1]=$2; next} {$1=dict[$1]; print}' \\\n    <(grep -v '^#' !{assembly_report} | cut -f 7,10 | tr -d '\\\\r')  \\\n    <(zcat !{gtf} | grep -v '^#') \\\n    | grep \"GeneID:\" \\\n    | grep -P -v \"_alt\\\\t\" \\\n    | grep -P -v \"^na\\\\t\" \\\n    | sed -r 's/;Dbxref(=[^;]*)GeneID:([^,;]+)([;,])/;gene_id=\\\\2;Dbxref\\\\1GeneID:\\\\2\\\\3/' \\\n    | awk  -v OFS='\\\\t' -v FS='\\\\t' \\\n        '($3==\"exon\") && (index($9,\"gbkey=mRNA\") > 0) && (index($9,\"-1;Parent\") > 0) \\\n           { print($1,$2,\"mRNAexon1\",$4,$5,$6,$7,$8,$9); next }\n         ($3==\"exon\") && (index($9,\"gbkey=mRNA\") > 0)  \\\n           { print($1,$2,\"mRNAexon\",$4,$5,$6,$7,$8,$9); next }\n         { print }  \n        ' \\\n    > name_converted.gff\n\n    #exons overlap, we want only the longest to avoid 0 cov exons from featureCounts\n    flattenGTF -a name_converted.gff -o flat_name_converted.saf -t !{feature}\n\n    #need to switch to bed for intersection later\n    tail -n +2 flat_name_converted.saf \\\n      | awk -v OFS='\\\\t' -v FS='\\\\t' '{print $2,$3-1,$4,$1,\"-\",$5}' \\\n      | bedtools sort -faidx !{params.genome}.fai -i /dev/stdin > !{feature}_flat.bed\n    \n    #filters by feature type\n    awk -v type=!{feature} -v OFS='\\\\t' -v FS='\\\\t' '($3==type) { print}' name_converted.gff \\\n    > !{feature}.gtf\n\n    #only include those entries that intersect with the desired feature type, back to SAF format\n    echo \"GeneID\\tChr\\tStart\\tEnd\\tStrand\" > !{feature}_flat.saf\n    bedtools intersect -a !{feature}_flat.bed -b !{feature}.gtf  -u \\\n      | awk -v OFS='\\\\t' -v FS='\\\\t' '{print $4,$1,$2+1,$3,$6}' >> !{feature}_flat.saf\n    '''",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [
            "NextSV",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/nextsv",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "NextSV",
                "uri": "https://bio.tools/nextsv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A meta SV caller and a computational pipeline to perform SV calling from low coverage long-read sequencing data. It integrates three aligners and three SV callers and generates two integrated call sets (sensitive/stringent) for different analysis purpose.",
                "homepage": "http://github.com/Nextomics/NextSV"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "refseq_gtf",
            "ncbi_assembly_report",
            "refseq_feature_types_for_gtf"
        ],
        "nb_inputs": 3,
        "outputs": [
            "feature_gtf_for_meth",
            "feature_saf_for_counts"
        ],
        "nb_outputs": 2,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "tag {feature}",
            "conda \"subread=2.0.0 bedtools=2.29.2\""
        ],
        "when": "",
        "stub": ""
    },
    "refseq_feature_methylation": {
        "name_process": "refseq_feature_methylation",
        "string_process": "\nprocess refseq_feature_methylation {\n    tag {feature}\n    conda \"bedtools=2.29.2 htslib=1.9\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n\n    input:\n        file bed from hq_meth_bed\n        tuple feature, file(feature_gtf) from feature_gtf_for_meth \n\n    output:\n        file '*_methylation.tsv' into feature_methylation\n        \n    shell:\n    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{feature_gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > !{feature}_methylation.tsv \n    '''\n}",
        "nb_lignes_process": 21,
        "string_script": "    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{feature_gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > !{feature}_methylation.tsv \n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "hq_meth_bed",
            "feature_gtf_for_meth"
        ],
        "nb_inputs": 2,
        "outputs": [
            "feature_methylation"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "tag {feature}",
            "conda \"bedtools=2.29.2 htslib=1.9\"",
            "publishDir \"$params.output_dir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "refseq_feature_counts": {
        "name_process": "refseq_feature_counts",
        "string_process": "\nprocess refseq_feature_counts {\n\n    conda \"subread=2.0.0\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n    cpus 16\n\n    input:\n        tuple (feature, path(feature_saf), path('*'), path('*') ) from feature_bams_for_refseq\n\n    output:\n        file '*_counts.tsv' into feature_counts\n\n    shell:\n    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -O --fraction -p -P -B -C \\\n    -a !{feature_saf} -F SAF\\\n    -t !{feature} \\\n    -g 'ID' \\\n    --tmpDir !{params.tmp_dir} \\\n    -T !{task.cpus} \\\n    -o !{feature}_counts.tsv *.bam \n    '''\n}",
        "nb_lignes_process": 22,
        "string_script": "    '''\n    featureCounts --primary --ignoreDup -Q 10 -M -f -O --fraction -p -P -B -C \\\n    -a !{feature_saf} -F SAF\\\n    -t !{feature} \\\n    -g 'ID' \\\n    --tmpDir !{params.tmp_dir} \\\n    -T !{task.cpus} \\\n    -o !{feature}_counts.tsv *.bam \n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "feature_bams_for_refseq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "feature_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"subread=2.0.0\"",
            "publishDir \"$params.output_dir\", mode: 'copy'",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "dfam_out_to_gtf": {
        "name_process": "dfam_out_to_gtf",
        "string_process": "\nprocess dfam_out_to_gtf {\n    conda \"ucsc-bedtogenepred ucsc-genepredtogtf\"\n    input: \n       file rm_out from dfam_out\n    output:\n       file '*.gtf' into (dfam_gtf_for_meth, dfam_gtf_for_counts)\n\n    shell:\n    '''\n       awk 'OFS=\"\\t\" {print($5,$6-1,$7,$11,$1,\".\")}' !{rm_out} \\\n       | tail -n +4 \\\n       | bedToGenePred /dev/stdin /dev/stdout \\\n       | genePredToGtf file /dev/stdin /dev/stdout \\\n       | awk -v FS='\\t' -v OFS='\\t' '{print $1,$1\":\"$4\"-\"$5,$3,$4,$5,$6,$7,$8,$9}' \\\n       > grch38_dfam405_repeat_mask.gtf\n    '''\n}",
        "nb_lignes_process": 16,
        "string_script": "    '''\n       awk 'OFS=\"\\t\" {print($5,$6-1,$7,$11,$1,\".\")}' !{rm_out} \\\n       | tail -n +4 \\\n       | bedToGenePred /dev/stdin /dev/stdout \\\n       | genePredToGtf file /dev/stdin /dev/stdout \\\n       | awk -v FS='\\t' -v OFS='\\t' '{print $1,$1\":\"$4\"-\"$5,$3,$4,$5,$6,$7,$8,$9}' \\\n       > grch38_dfam405_repeat_mask.gtf\n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dfam_out"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"ucsc-bedtogenepred ucsc-genepredtogtf\""
        ],
        "when": "",
        "stub": ""
    },
    "dfam_feature_methylation": {
        "name_process": "dfam_feature_methylation",
        "string_process": "\nprocess dfam_feature_methylation {\n    conda \"bedtools=2.29.2 htslib=1.9\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n\n    input:\n        file bed from hq_meth_bed\n        file(gtf) from dfam_gtf_for_meth\n\n    output:\n        file '*_methylation.tsv' into dfam_methylation\n        \n    shell:\n    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > dfam_methylation.tsv \n    '''\n}",
        "nb_lignes_process": 20,
        "string_script": "    '''\n    bedtools intersect -nonamecheck \\\n    -wa -wb -loj \\\n    -a !{gtf} -b <(bgzip -d < !{bed} ) \\\n    | awk -v FS='\\\\t' -v OFS='\\\\t' '$14>0 {print $10,$11,$12,$1\":\"$4-1\"-\"$5,($15*1.0)/$14 }' \\\n    | bedtools groupby -g 4 -o mean -c 5 \\\n    > dfam_methylation.tsv \n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "hq_meth_bed",
            "dfam_gtf_for_meth"
        ],
        "nb_inputs": 2,
        "outputs": [
            "dfam_methylation"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"bedtools=2.29.2 htslib=1.9\"",
            "publishDir \"$params.output_dir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "dfam_feature_counts": {
        "name_process": "dfam_feature_counts",
        "string_process": "\nprocess dfam_feature_counts {\n\n    conda \"subread=2.0.0\"\n    publishDir \"$params.output_dir\", mode: 'copy'\n    cpus 16\n\n    input:\n        file(gtf) from dfam_gtf_for_counts\n        path('*') from bams_for_dfam.map{ [it[1][0],it[1][1]] }.flatten().toList()\n\n    output:\n        file '*_counts.tsv' into dfam_feature_counts\n\n    shell:\n    '''\n        featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        -t transcript \\\n        -g 'transcript_id' \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o dfam_counts.tsv *.bam \n    '''\n}",
        "nb_lignes_process": 23,
        "string_script": "    '''\n        featureCounts --primary --ignoreDup -Q 10 -M -f -o -O --fraction -p -P -B -C \\\n        -a !{gtf} \\\n        -t transcript \\\n        -g 'transcript_id' \\\n        --tmpDir !{params.tmp_dir} \\\n        -T !{task.cpus} \\\n        -o dfam_counts.tsv *.bam \n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "dfam_gtf_for_counts",
            "bams_for_dfam"
        ],
        "nb_inputs": 2,
        "outputs": [
            "dfam_feature_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "conda \"subread=2.0.0\"",
            "publishDir \"$params.output_dir\", mode: 'copy'",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "combine_methylation": {
        "name_process": "combine_methylation",
        "string_process": "\nprocess combine_methylation {\n    publishDir \"$params.output_dir\", mode: 'copy'\n\n    input:\n        file(dfam_meth) from dfam_methylation\n        file(feature_meth) from feature_methylation.collect()\n        file(cpg_meth) from cpg_island_meth\n        file(epd_meth) from epd_promoter_meth\n    output:\n        file('combined_methylation.tsv') into combined_meth\n\n    shell:\n    '''\n    echo 'File\tLocus\tFrac Methylated' > combined_methylation.tsv\n    #adds a column (tab separated) containing the name of the file being processed (repeated on each line)\n    for f in !{dfam_meth} !{feature_meth} !{cpg_meth} !{epd_meth} ; do\n        filebase=$(basename \"${f}\" _methylation.tsv)\n        lines=$(wc -l <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | cut -f 1 -d ' ')\n        paste <( yes ${filebase} | head -n $lines ) <(grep -ve '^\\\\s*$' -e '^#' \"$f\") >> combined_methylation.tsv\n    done    \n    '''  \n}",
        "nb_lignes_process": 21,
        "string_script": "    '''\n    echo 'File\tLocus\tFrac Methylated' > combined_methylation.tsv\n    #adds a column (tab separated) containing the name of the file being processed (repeated on each line)\n    for f in !{dfam_meth} !{feature_meth} !{cpg_meth} !{epd_meth} ; do\n        filebase=$(basename \"${f}\" _methylation.tsv)\n        lines=$(wc -l <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | cut -f 1 -d ' ')\n        paste <( yes ${filebase} | head -n $lines ) <(grep -ve '^\\\\s*$' -e '^#' \"$f\") >> combined_methylation.tsv\n    done    \n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dfam_methylation",
            "feature_methylation",
            "cpg_island_meth",
            "epd_promoter_meth"
        ],
        "nb_inputs": 4,
        "outputs": [
            "combined_meth"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "publishDir \"$params.output_dir\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "combine_counts": {
        "name_process": "combine_counts",
        "string_process": "\nprocess combine_counts {\n    publishDir \"$params.output_dir\", mode: 'copy'\n    validExitStatus 0,141\n\n    input:\n        file(dfam_counts) from dfam_feature_counts\n        file(feature_counts) from feature_counts.collect()\n        file(cpg_counts) from cpg_island_counts\n        file(epd_counts) from epd_promoter_counts\n    output:\n        file('combined_feature_counts.tsv') into combined_counts\n\n    shell:\n    '''\n    #constructs the header\n    echo -n 'File\\t' > combined_feature_counts.tsv\n    grep -hve '^\\\\s*$' -e '^#' !{cpg_counts} | head -n 1 >> combined_feature_counts.tsv\n\n    #adds a column (tab separated) containing the name of the file being processed (repeated on each line)\n    for f in !{dfam_counts} !{feature_counts} !{cpg_counts} !{epd_counts}; do\n        filebase=$(basename \"${f}\" _counts.tsv)\n        lines=$(wc -l <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | cut -f 1 -d ' ')\n        paste <( yes ${filebase} | head -n $lines ) <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | tail -n +2 >> combined_feature_counts.tsv\n    done    \n    '''  \n}",
        "nb_lignes_process": 25,
        "string_script": "    '''\n    #constructs the header\n    echo -n 'File\\t' > combined_feature_counts.tsv\n    grep -hve '^\\\\s*$' -e '^#' !{cpg_counts} | head -n 1 >> combined_feature_counts.tsv\n\n    #adds a column (tab separated) containing the name of the file being processed (repeated on each line)\n    for f in !{dfam_counts} !{feature_counts} !{cpg_counts} !{epd_counts}; do\n        filebase=$(basename \"${f}\" _counts.tsv)\n        lines=$(wc -l <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | cut -f 1 -d ' ')\n        paste <( yes ${filebase} | head -n $lines ) <(grep -ve '^\\\\s*$' -e '^#' \"$f\") | tail -n +2 >> combined_feature_counts.tsv\n    done    \n    '''",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dfam_feature_counts",
            "feature_counts",
            "cpg_island_counts",
            "epd_promoter_counts"
        ],
        "nb_inputs": 4,
        "outputs": [
            "combined_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "nebiolabs__EM-seq",
        "directive": [
            "publishDir \"$params.output_dir\", mode: 'copy'",
            "validExitStatus 0,141"
        ],
        "when": "",
        "stub": ""
    }
}