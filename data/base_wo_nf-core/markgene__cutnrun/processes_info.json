{
    "CheckDesign": {
        "name_process": "CheckDesign",
        "string_process": "\nprocess CheckDesign {\n    tag \"$design\"\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file design from ch_input\n\n    output:\n    file \"design_reads.csv\" into ch_design_reads_csv\n    file \"design_controls.csv\" into ch_design_controls_csv\n\n    script:                                                                      \n    \"\"\"\n    check_design.py $design design_reads.csv design_controls.csv\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    check_design.py $design design_reads.csv design_controls.csv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_input"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_design_reads_csv",
            "ch_design_controls_csv"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$design\"",
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "Bowtie2Index": {
        "name_process": "Bowtie2Index",
        "string_process": " process Bowtie2Index {\n        tag \"$fasta\"\n        label 'process_high'\n        publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir },\n            saveAs: { params.save_reference ? it : null }, mode: 'copy'\n\n        input:\n        file fasta from ch_fasta\n\n        output:\n        file \"Bowtie2Index\" into ch_bowtie2_index\n\n        script:\n        \"\"\"\n        bowtie2-build --threads $task.cpus $fasta $fasta\n        mkdir Bowtie2Index && mv ${fasta}* Bowtie2Index\n        \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        bowtie2-build --threads $task.cpus $fasta $fasta\n        mkdir Bowtie2Index && mv ${fasta}* Bowtie2Index\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bowtie2_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$fasta\"",
            "label 'process_high'",
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MakeGeneBED": {
        "name_process": "MakeGeneBED",
        "string_process": " process MakeGeneBED {\n        tag \"$gtf\"\n        label 'process_low'\n        publishDir \"${params.outdir}/reference_genome\", mode: 'copy'\n\n        input:\n        file gtf from ch_gtf\n\n        output:\n        file \"*.bed\" into ch_gene_bed\n\n        script:                                                                     \n        \"\"\"\n        gtf2bed $gtf > ${gtf.baseName}.bed\n        \"\"\"\n    }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        gtf2bed $gtf > ${gtf.baseName}.bed\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_gtf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_gene_bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$gtf\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/reference_genome\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MakeTSSBED": {
        "name_process": "MakeTSSBED",
        "string_process": " process MakeTSSBED {\n        tag \"$bed\"\n        publishDir \"${params.outdir}/reference_genome\", mode: 'copy'\n\n        input:\n        file bed from ch_gene_bed\n\n        output:\n        file \"*.bed\" into ch_tss_bed\n\n        script:\n        \"\"\"\n        cat $bed | awk -v FS='\\t' -v OFS='\\t' '{ if(\\$6==\"+\") \\$3=\\$2+1; else \\$2=\\$3-1; print \\$1, \\$2, \\$3, \\$4, \\$5, \\$6;}' > ${bed.baseName}.tss.bed\n        \"\"\"\n    }",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        cat $bed | awk -v FS='\\t' -v OFS='\\t' '{ if(\\$6==\"+\") \\$3=\\$2+1; else \\$2=\\$3-1; print \\$1, \\$2, \\$3, \\$4, \\$5, \\$6;}' > ${bed.baseName}.tss.bed\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_gene_bed"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_tss_bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$bed\"",
            "publishDir \"${params.outdir}/reference_genome\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "MakeGenomeFilter": {
        "name_process": "MakeGenomeFilter",
        "string_process": "\nprocess MakeGenomeFilter {\n    tag \"$fasta\"\n    publishDir \"${params.outdir}/reference_genome\", mode: 'copy'\n\n    input:\n    file fasta from ch_fasta\n    file blacklist from ch_blacklist.ifEmpty([])\n\n    output:\n    file \"$fasta\" into ch_genome_fasta                                      \n    file \"*.fai\" into ch_genome_fai                                                     \n    file \"*.bed\" into ch_genome_filter_regions                                              \n    file \"*.sizes\" into ch_genome_sizes_bigwig                                              \n\n    script:\n    blacklist_filter = params.blacklist ? \"sortBed -i $blacklist -g ${fasta}.sizes | complementBed -i stdin -g ${fasta}.sizes\" : \"awk '{print \\$1, '0' , \\$2}' OFS='\\t' ${fasta}.sizes\"\n    \"\"\"\n    samtools faidx $fasta\n    cut -f 1,2 ${fasta}.fai > ${fasta}.sizes\n    $blacklist_filter > ${fasta}.include_regions.bed\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    blacklist_filter = params.blacklist ? \"sortBed -i $blacklist -g ${fasta}.sizes | complementBed -i stdin -g ${fasta}.sizes\" : \"awk '{print \\$1, '0' , \\$2}' OFS='\\t' ${fasta}.sizes\"\n    \"\"\"\n    samtools faidx $fasta\n    cut -f 1,2 ${fasta}.fai > ${fasta}.sizes\n    $blacklist_filter > ${fasta}.include_regions.bed\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_fasta",
            "ch_blacklist"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_genome_fasta",
            "ch_genome_fai",
            "ch_genome_filter_regions",
            "ch_genome_sizes_bigwig"
        ],
        "nb_outputs": 4,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$fasta\"",
            "publishDir \"${params.outdir}/reference_genome\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "FastQC": {
        "name_process": "FastQC",
        "string_process": "\nprocess FastQC {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: { filename ->\n                      filename.endsWith(\".zip\") ? \"zips/$filename\" : \"$filename\"\n                }\n\n    when:\n    !params.skip_fastqc\n\n    input:\n    set val(name), file(reads) from ch_raw_reads_fastqc\n\n    output:\n    file \"*.{zip,html}\" into ch_fastqc_reports_mqc\n\n    script:\n                                                                           \n    if (params.single_end) {\n        \"\"\"\n        [ ! -f  ${name}.fastq.gz ] && ln -s $reads ${name}.fastq.gz\n        fastqc -q -t $task.cpus ${name}.fastq.gz\n        \"\"\"\n    } else {\n        \"\"\"\n        [ ! -f  ${name}_1.fastq.gz ] && ln -s ${reads[0]} ${name}_1.fastq.gz\n        [ ! -f  ${name}_2.fastq.gz ] && ln -s ${reads[1]} ${name}_2.fastq.gz\n        fastqc -q -t $task.cpus ${name}_1.fastq.gz\n        fastqc -q -t $task.cpus ${name}_2.fastq.gz\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 32,
        "string_script": "    if (params.single_end) {\n        \"\"\"\n        [ ! -f  ${name}.fastq.gz ] && ln -s $reads ${name}.fastq.gz\n        fastqc -q -t $task.cpus ${name}.fastq.gz\n        \"\"\"\n    } else {\n        \"\"\"\n        [ ! -f  ${name}_1.fastq.gz ] && ln -s ${reads[0]} ${name}_1.fastq.gz\n        [ ! -f  ${name}_2.fastq.gz ] && ln -s ${reads[1]} ${name}_2.fastq.gz\n        fastqc -q -t $task.cpus ${name}_1.fastq.gz\n        fastqc -q -t $task.cpus ${name}_2.fastq.gz\n        \"\"\"\n    }",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_raw_reads_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqc_reports_mqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: { filename -> filename.endsWith(\".zip\") ? \"zips/$filename\" : \"$filename\" }"
        ],
        "when": "!params.skip_fastqc",
        "stub": ""
    },
    "TrimGalore": {
        "name_process": "TrimGalore",
        "string_process": " process TrimGalore {\n        tag \"$name\"\n        label 'process_long'\n        publishDir \"${params.outdir}/trim_galore\", mode: 'copy',\n            saveAs: { filename ->\n                          if (filename.endsWith(\".html\")) \"fastqc/$filename\"\n                          else if (filename.endsWith(\".zip\")) \"fastqc/zips/$filename\"\n                          else if (filename.endsWith(\"trimming_report.txt\")) \"logs/$filename\"\n                          else params.save_trimmed ? filename : null\n                    }\n\n        input:\n        set val(name), file(reads) from ch_raw_reads_trimgalore\n\n        output:\n        set val(name), file(\"*.fq.gz\") into ch_trimmed_reads\n        file \"*.txt\" into ch_trimgalore_results_mqc\n        file \"*.{zip,html}\" into ch_trimgalore_fastqc_reports_mqc\n\n        script:\n                                                                               \n        c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n        c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n        tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n        tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n        nextseq = params.trim_nextseq > 0 ? \"--nextseq ${params.trim_nextseq}\" : ''\n        if (params.single_end) {\n            \"\"\"\n            [ ! -f  ${name}.fastq.gz ] && ln -s $reads ${name}.fastq.gz\n            trim_galore --fastqc --gzip $c_r1 $tpc_r1 $nextseq ${name}.fastq.gz\n            \"\"\"\n        } else {\n            \"\"\"\n            [ ! -f  ${name}_1.fastq.gz ] && ln -s ${reads[0]} ${name}_1.fastq.gz\n            [ ! -f  ${name}_2.fastq.gz ] && ln -s ${reads[1]} ${name}_2.fastq.gz\n            trim_galore --paired --fastqc --gzip $c_r1 $c_r2 $tpc_r1 $tpc_r2 $nextseq ${name}_1.fastq.gz ${name}_2.fastq.gz\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 37,
        "string_script": "        c_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n        c_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n        tpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n        tpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n        nextseq = params.trim_nextseq > 0 ? \"--nextseq ${params.trim_nextseq}\" : ''\n        if (params.single_end) {\n            \"\"\"\n            [ ! -f  ${name}.fastq.gz ] && ln -s $reads ${name}.fastq.gz\n            trim_galore --fastqc --gzip $c_r1 $tpc_r1 $nextseq ${name}.fastq.gz\n            \"\"\"\n        } else {\n            \"\"\"\n            [ ! -f  ${name}_1.fastq.gz ] && ln -s ${reads[0]} ${name}_1.fastq.gz\n            [ ! -f  ${name}_2.fastq.gz ] && ln -s ${reads[1]} ${name}_2.fastq.gz\n            trim_galore --paired --fastqc --gzip $c_r1 $c_r2 $tpc_r1 $tpc_r2 $nextseq ${name}_1.fastq.gz ${name}_2.fastq.gz\n            \"\"\"\n        }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_raw_reads_trimgalore"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_trimmed_reads",
            "ch_trimgalore_results_mqc",
            "ch_trimgalore_fastqc_reports_mqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_long'",
            "publishDir \"${params.outdir}/trim_galore\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".html\")) \"fastqc/$filename\" else if (filename.endsWith(\".zip\")) \"fastqc/zips/$filename\" else if (filename.endsWith(\"trimming_report.txt\")) \"logs/$filename\" else params.save_trimmed ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "Bowtie2": {
        "name_process": "Bowtie2",
        "string_process": "\nprocess Bowtie2 {\n    tag \"$name\"\n    label 'process_high'\n\n    input:\n    set val(name), file(reads) from ch_trimmed_reads\n    file index from ch_bowtie2_index.collect()\n\n    output:\n    set val(name), file(\"*.bam\") into ch_bowtie2_bam\n\n    script:\n    prefix = \"${name}.Lb\"\n    sm = \"SM:${name.split('_')[0..-2].join('_')}\"\n    pl = \"PL:ILLUMINA\"\n    lb = \"LB:${name}\"\n    rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n    if (params.seq_center) {\n        rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\\\tCN:${params.seq_center}\\'\"\n    }\n    println name\n    println rg\n    println prefix\n    \"\"\"\n    bowtie2 --local -q \\\\\n    -p $task.cpus \\\\\n    --rg-id $name \\\\\n    --rg $sm --rg $pl --rg $lb --rg PU:1 \\\\\n    -x ${index}/${bowtie2_base} \\\\\n    -1 ${reads[0]} -2 ${reads[1]} \\\\\n    | samtools view -@ $task.cpus -b -h -F 0x0100 -O BAM -o ${prefix}.bam -\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    prefix = \"${name}.Lb\"\n    sm = \"SM:${name.split('_')[0..-2].join('_')}\"\n    pl = \"PL:ILLUMINA\"\n    lb = \"LB:${name}\"\n    rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n    if (params.seq_center) {\n        rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\\\tCN:${params.seq_center}\\'\"\n    }\n    println name\n    println rg\n    println prefix\n    \"\"\"\n    bowtie2 --local -q \\\\\n    -p $task.cpus \\\\\n    --rg-id $name \\\\\n    --rg $sm --rg $pl --rg $lb --rg PU:1 \\\\\n    -x ${index}/${bowtie2_base} \\\\\n    -1 ${reads[0]} -2 ${reads[1]} \\\\\n    | samtools view -@ $task.cpus -b -h -F 0x0100 -O BAM -o ${prefix}.bam -\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "ASM",
            "PLS",
            "LBE",
            "org",
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/ASM",
            "https://bio.tools/PLS",
            "https://bio.tools/lbe",
            "https://bio.tools/org",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "ASM",
                "uri": "https://bio.tools/ASM",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "Methylated DNA immunoprecipitation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "mDIP"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3674",
                            "term": "MeDIP-chip"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "Primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Allele-specific DNA methylation is increased in cancers and its dense mapping in normal plus neoplastic cells increases the yield of disease-associated regulatory SNPs.\n\nHuman hg19 chr10:122795171-122795171 UCSC Genome Browser v391.\n\nUCSC Genome Browser on Human Feb. 2009 (GRCh37/hg19) Assembly.\n\nchr10:122,795,171-122,795,171 1 bp.\n\nClick on a feature for details. Click or drag in the base position track to zoom in. Click side bars for track options. Drag side bars or labels up or down to reorder tracks. Drag tracks left or right to new position. Press \"?\" for keyboard shortcuts",
                "homepage": "https://genome.ucsc.edu/s/TyckoLab/High%20Confidence%20ASM"
            },
            {
                "name": "PLS",
                "uri": "https://bio.tools/PLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "an investigation of the effect of nonlinearity and sparsity on the decoding of intracranial data.\n\nOBJECTIVE:Partial Least Squares regression is a suitable linear decoder model for correlated and high dimensional neural data. This algorithm has been widely used in the application of brain-computer interface (BCI) for decoding of motor parameters. PLS does not consider nonlinear relations between brain signal features. The nonlinear version of PLS that considers a nonlinear relationship between the latent variables has not been proposed for the decoding of intracranial data. This nonlinear model may cause overfitting in some cases due to more number of free parameters. In this paper, we develop a new version of nonlinear PLS namely nonlinear sparse PLS (NLS PLS) and test it in the BCI applications.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'nonlinear PLS', 'nonlinear'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31783374"
            },
            {
                "name": "LBE",
                "uri": "https://bio.tools/lbe",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Efficient procedure for estimating the proportion of true null hypotheses, the false discovery rate (and so the q-values) in the framework of estimating procedures based on the marginal distribution of the p-values without assumption for the alternative hypothesis.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/LBE.html"
            },
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_trimmed_reads",
            "ch_bowtie2_index"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_bowtie2_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'"
        ],
        "when": "",
        "stub": ""
    },
    "SortBAM": {
        "name_process": "SortBAM",
        "string_process": "\nprocess SortBAM {\n    tag \"$name\"\n    label 'process_medium'\n    if (params.save_align_intermeds) {\n        publishDir path: \"${params.outdir}/bwa/library\", mode: 'copy',\n            saveAs: { filename ->\n                          if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\"\n                          else filename\n                    }\n    }\n\n    input:\n    set val(name), file(bam) from ch_bwa_bam\n\n    output:\n    set val(name), file(\"*.sorted.{bam,bam.bai}\") into ch_sort_bam_merge\n    file \"*.{flagstat,idxstats,stats}\" into ch_sort_bam_flagstat_mqc\n\n    script:\n    prefix = \"${name}.Lb\"\n    \"\"\"\n    samtools sort -@ $task.cpus -o ${prefix}.sorted.bam -T $name $bam\n    samtools index ${prefix}.sorted.bam\n    samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n    samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n    samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    prefix = \"${name}.Lb\"\n    \"\"\"\n    samtools sort -@ $task.cpus -o ${prefix}.sorted.bam -T $name $bam\n    samtools index ${prefix}.sorted.bam\n    samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n    samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n    samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bwa_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sort_bam_merge",
            "ch_sort_bam_flagstat_mqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium' if (params.save_align_intermeds) { publishDir path: \"${params.outdir}/bwa/library\", mode: 'copy', saveAs: { filename -> if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\" else filename } }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBAM": {
        "name_process": "MergeBAM",
        "string_process": "\nprocess MergeBAM {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\"\n                      else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\"\n                      else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\"\n                      else if (filename.endsWith(\".metrics.txt\")) \"picard_metrics/$filename\"\n                      else params.save_align_intermeds ? filename : null\n                }\n\n    input:\n    set val(name), file(bams) from ch_sort_bam_merge\n\n    output:\n    set val(name), file(\"*${prefix}.sorted.{bam,bam.bai}\") into ch_merge_bam_filter,\n                                                                ch_merge_bam_preseq\n    file \"*.{flagstat,idxstats,stats}\" into ch_merge_bam_stats_mqc\n    file \"*.txt\" into ch_merge_bam_metrics_mqc\n\n    script:\n    prefix = \"${name}.mLb.mkD\"\n    bam_files = bams.findAll { it.toString().endsWith('.bam') }.sort()\n    def avail_mem = 3\n    if (!task.memory) {\n        log.info \"[Picard MarkDuplicates] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n    } else {\n        avail_mem = task.memory.toGiga()\n    }\n    if (bam_files.size() > 1) {\n        \"\"\"\n        picard -Xmx${avail_mem}g MergeSamFiles \\\\\n            ${'INPUT='+bam_files.join(' INPUT=')} \\\\\n            OUTPUT=${name}.sorted.bam \\\\\n            SORT_ORDER=coordinate \\\\\n            VALIDATION_STRINGENCY=LENIENT \\\\\n            TMP_DIR=tmp\n        samtools index ${name}.sorted.bam\n\n        picard -Xmx${avail_mem}g MarkDuplicates \\\\\n            INPUT=${name}.sorted.bam \\\\\n            OUTPUT=${prefix}.sorted.bam \\\\\n            ASSUME_SORTED=true \\\\\n            REMOVE_DUPLICATES=false \\\\\n            METRICS_FILE=${prefix}.MarkDuplicates.metrics.txt \\\\\n            VALIDATION_STRINGENCY=LENIENT \\\\\n            TMP_DIR=tmp\n\n        samtools index ${prefix}.sorted.bam\n        samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n        samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n        samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n        \"\"\"\n    } else {\n      \"\"\"\n      picard -Xmx${avail_mem}g MarkDuplicates \\\\\n          INPUT=${bam_files[0]} \\\\\n          OUTPUT=${prefix}.sorted.bam \\\\\n          ASSUME_SORTED=true \\\\\n          REMOVE_DUPLICATES=false \\\\\n          METRICS_FILE=${prefix}.MarkDuplicates.metrics.txt \\\\\n          VALIDATION_STRINGENCY=LENIENT \\\\\n          TMP_DIR=tmp\n\n      samtools index ${prefix}.sorted.bam\n      samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n      samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n      samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n      \"\"\"\n    }\n}",
        "nb_lignes_process": 71,
        "string_script": "    prefix = \"${name}.mLb.mkD\"\n    bam_files = bams.findAll { it.toString().endsWith('.bam') }.sort()\n    def avail_mem = 3\n    if (!task.memory) {\n        log.info \"[Picard MarkDuplicates] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n    } else {\n        avail_mem = task.memory.toGiga()\n    }\n    if (bam_files.size() > 1) {\n        \"\"\"\n        picard -Xmx${avail_mem}g MergeSamFiles \\\\\n            ${'INPUT='+bam_files.join(' INPUT=')} \\\\\n            OUTPUT=${name}.sorted.bam \\\\\n            SORT_ORDER=coordinate \\\\\n            VALIDATION_STRINGENCY=LENIENT \\\\\n            TMP_DIR=tmp\n        samtools index ${name}.sorted.bam\n\n        picard -Xmx${avail_mem}g MarkDuplicates \\\\\n            INPUT=${name}.sorted.bam \\\\\n            OUTPUT=${prefix}.sorted.bam \\\\\n            ASSUME_SORTED=true \\\\\n            REMOVE_DUPLICATES=false \\\\\n            METRICS_FILE=${prefix}.MarkDuplicates.metrics.txt \\\\\n            VALIDATION_STRINGENCY=LENIENT \\\\\n            TMP_DIR=tmp\n\n        samtools index ${prefix}.sorted.bam\n        samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n        samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n        samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n        \"\"\"\n    } else {\n      \"\"\"\n      picard -Xmx${avail_mem}g MarkDuplicates \\\\\n          INPUT=${bam_files[0]} \\\\\n          OUTPUT=${prefix}.sorted.bam \\\\\n          ASSUME_SORTED=true \\\\\n          REMOVE_DUPLICATES=false \\\\\n          METRICS_FILE=${prefix}.MarkDuplicates.metrics.txt \\\\\n          VALIDATION_STRINGENCY=LENIENT \\\\\n          TMP_DIR=tmp\n\n      samtools index ${prefix}.sorted.bam\n      samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n      samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n      samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n      \"\"\"\n    }",
        "nb_lignes_script": 48,
        "language_script": "bash",
        "tools": [
            "Picard",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_sort_bam_merge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_merge_bam_filter",
            "ch_merge_bam_preseq",
            "ch_merge_bam_stats_mqc",
            "ch_merge_bam_metrics_mqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".metrics.txt\")) \"picard_metrics/$filename\" else params.save_align_intermeds ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBAMFilter": {
        "name_process": "MergeBAMFilter",
        "string_process": "\nprocess MergeBAMFilter {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy',\n        saveAs: { filename ->\n                      if (params.single_end || params.save_align_intermeds) {\n                          if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".sorted.bam\")) filename\n                          else if (filename.endsWith(\".sorted.bam.bai\")) filename\n                          else null\n                      }\n                }\n\n    input:\n    set val(name), file(bam) from ch_merge_bam_filter\n    file bed from ch_genome_filter_regions.collect()\n    file bamtools_filter_config from ch_bamtools_filter_config\n\n    output:\n    set val(name), file(\"*.{bam,bam.bai}\") into ch_filter_bam\n    set val(name), file(\"*.flagstat\") into ch_filter_bam_flagstat\n    file \"*.{idxstats,stats}\" into ch_filter_bam_stats_mqc\n\n    script:\n    prefix = params.single_end ? \"${name}.mLb.clN\" : \"${name}.mLb.flT\"\n    filter_params = params.single_end ? \"-F 0x004\" : \"-F 0x004 -F 0x0008 -f 0x001\"\n    dup_params = params.keep_dups ? \"\" : \"-F 0x0400\"\n    multimap_params = params.keep_multi_map ? \"\" : \"-q 1\"\n    blacklist_params = params.blacklist ? \"-L $bed\" : \"\"\n    name_sort_bam = params.single_end ? \"\" : \"samtools sort -n -@ $task.cpus -o ${prefix}.bam -T $prefix ${prefix}.sorted.bam\"\n    \"\"\"\n    samtools view \\\\\n        $filter_params \\\\\n        $dup_params \\\\\n        $multimap_params \\\\\n        $blacklist_params \\\\\n        -b ${bam[0]} \\\\\n        | bamtools filter \\\\\n            -out ${prefix}.sorted.bam \\\\\n            -script $bamtools_filter_config\n\n    samtools index ${prefix}.sorted.bam\n    samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n    samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n    samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n\n    $name_sort_bam\n    \"\"\"\n}",
        "nb_lignes_process": 50,
        "string_script": "    prefix = params.single_end ? \"${name}.mLb.clN\" : \"${name}.mLb.flT\"\n    filter_params = params.single_end ? \"-F 0x004\" : \"-F 0x004 -F 0x0008 -f 0x001\"\n    dup_params = params.keep_dups ? \"\" : \"-F 0x0400\"\n    multimap_params = params.keep_multi_map ? \"\" : \"-q 1\"\n    blacklist_params = params.blacklist ? \"-L $bed\" : \"\"\n    name_sort_bam = params.single_end ? \"\" : \"samtools sort -n -@ $task.cpus -o ${prefix}.bam -T $prefix ${prefix}.sorted.bam\"\n    \"\"\"\n    samtools view \\\\\n        $filter_params \\\\\n        $dup_params \\\\\n        $multimap_params \\\\\n        $blacklist_params \\\\\n        -b ${bam[0]} \\\\\n        | bamtools filter \\\\\n            -out ${prefix}.sorted.bam \\\\\n            -script $bamtools_filter_config\n\n    samtools index ${prefix}.sorted.bam\n    samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n    samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n    samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n\n    $name_sort_bam\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BamTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bamtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BamTools",
                "uri": "https://bio.tools/bamtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BamTools provides a fast, flexible C++ API & toolkit for reading, writing, and managing BAM files.",
                "homepage": "https://github.com/pezmaster31/bamtools"
            }
        ],
        "inputs": [
            "ch_merge_bam_filter",
            "ch_genome_filter_regions",
            "ch_bamtools_filter_config"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_filter_bam",
            "ch_filter_bam_flagstat",
            "ch_filter_bam_stats_mqc"
        ],
        "nb_outputs": 3,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy' , saveAs: { filename -> if (params.single_end || params.save_align_intermeds) { if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".sorted.bam\")) filename else if (filename.endsWith(\".sorted.bam.bai\")) filename else null } }"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBAMRemoveOrphan": {
        "name_process": "MergeBAMRemoveOrphan",
        "string_process": " process MergeBAMRemoveOrphan {\n        tag \"$name\"\n        label 'process_medium'\n        publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy',\n            saveAs: { filename ->\n                          if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\"\n                          else if (filename.endsWith(\".sorted.bam\")) filename\n                          else if (filename.endsWith(\".sorted.bam.bai\")) filename\n                          else null\n                    }\n\n        input:\n        set val(name), file(bam) from ch_filter_bam\n\n        output:\n        set val(name), file(\"*.sorted.{bam,bam.bai}\") into ch_rm_orphan_bam_metrics,\n                                                           ch_rm_orphan_bam_bigwig,\n                                                           ch_rm_orphan_bam_macs_1,\n                                                           ch_rm_orphan_bam_macs_2,\n                                                           ch_rm_orphan_bam_phantompeakqualtools\n        set val(name), file(\"${prefix}.bam\") into ch_rm_orphan_name_bam_counts\n        set val(name), file(\"*.flagstat\") into ch_rm_orphan_flagstat_bigwig,\n                                               ch_rm_orphan_flagstat_macs,\n                                               ch_rm_orphan_flagstat_mqc\n        file \"*.{idxstats,stats}\" into ch_rm_orphan_stats_mqc\n\n        script:                                                                     \n        prefix = \"${name}.mLb.clN\"\n        \"\"\"\n        bampe_rm_orphan.py ${bam[0]} ${prefix}.bam --only_fr_pairs\n\n        samtools sort -@ $task.cpus -o ${prefix}.sorted.bam -T $prefix ${prefix}.bam\n        samtools index ${prefix}.sorted.bam\n        samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n        samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n        samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n        \"\"\"\n    }",
        "nb_lignes_process": 38,
        "string_script": "        prefix = \"${name}.mLb.clN\"\n        \"\"\"\n        bampe_rm_orphan.py ${bam[0]} ${prefix}.bam --only_fr_pairs\n\n        samtools sort -@ $task.cpus -o ${prefix}.sorted.bam -T $prefix ${prefix}.bam\n        samtools index ${prefix}.sorted.bam\n        samtools flagstat ${prefix}.sorted.bam > ${prefix}.sorted.bam.flagstat\n        samtools idxstats ${prefix}.sorted.bam > ${prefix}.sorted.bam.idxstats\n        samtools stats ${prefix}.sorted.bam > ${prefix}.sorted.bam.stats\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_filter_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_rm_orphan_bam_metrics",
            "ch_rm_orphan_bam_bigwig",
            "ch_rm_orphan_bam_macs_1",
            "ch_rm_orphan_bam_macs_2",
            "ch_rm_orphan_bam_phantompeakqualtools",
            "ch_rm_orphan_name_bam_counts",
            "ch_rm_orphan_flagstat_bigwig",
            "ch_rm_orphan_flagstat_macs",
            "ch_rm_orphan_flagstat_mqc",
            "ch_rm_orphan_stats_mqc"
        ],
        "nb_outputs": 10,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".flagstat\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".idxstats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".stats\")) \"samtools_stats/$filename\" else if (filename.endsWith(\".sorted.bam\")) filename else if (filename.endsWith(\".sorted.bam.bai\")) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "Preseq": {
        "name_process": "Preseq",
        "string_process": "\nprocess Preseq {\n    tag \"$name\"\n    label 'process_low'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/preseq\", mode: 'copy'\n\n    when:\n    !params.skip_preseq\n\n    input:\n    set val(name), file(bam) from ch_merge_bam_preseq\n\n    output:\n    file \"*.ccurve.txt\" into ch_preseq_mqc\n\n    script:\n    prefix = \"${name}.mLb.clN\"\n    \"\"\"\n    preseq lc_extrap -v -output ${prefix}.ccurve.txt -bam ${bam[0]}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    prefix = \"${name}.mLb.clN\"\n    \"\"\"\n    preseq lc_extrap -v -output ${prefix}.ccurve.txt -bam ${bam[0]}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "preseq"
        ],
        "tools_url": [
            "https://bio.tools/preseq"
        ],
        "tools_dico": [
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            }
        ],
        "inputs": [
            "ch_merge_bam_preseq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_preseq_mqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/preseq\", mode: 'copy'"
        ],
        "when": "!params.skip_preseq",
        "stub": ""
    },
    "CollectMultipleMetrics": {
        "name_process": "CollectMultipleMetrics",
        "string_process": "\nprocess CollectMultipleMetrics {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\"_metrics\")) \"picard_metrics/$filename\"\n                      else if (filename.endsWith(\".pdf\")) \"picard_metrics/pdf/$filename\"\n                      else null\n                }\n\n    when:\n    !params.skip_picard_metrics\n\n    input:\n    set val(name), file(bam) from ch_rm_orphan_bam_metrics\n    file fasta from ch_fasta\n\n    output:\n    file \"*_metrics\" into ch_collectmetrics_mqc\n    file \"*.pdf\" into ch_collectmetrics_pdf\n\n    script:\n    prefix = \"${name}.mLb.clN\"\n    def avail_mem = 3\n    if (!task.memory) {\n        log.info \"[Picard CollectMultipleMetrics] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n    } else {\n        avail_mem = task.memory.toGiga()\n    }\n    \"\"\"\n    picard -Xmx${avail_mem}g CollectMultipleMetrics \\\\\n        INPUT=${bam[0]} \\\\\n        OUTPUT=${prefix}.CollectMultipleMetrics \\\\\n        REFERENCE_SEQUENCE=$fasta \\\\\n        VALIDATION_STRINGENCY=LENIENT \\\\\n        TMP_DIR=tmp\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    prefix = \"${name}.mLb.clN\"\n    def avail_mem = 3\n    if (!task.memory) {\n        log.info \"[Picard CollectMultipleMetrics] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n    } else {\n        avail_mem = task.memory.toGiga()\n    }\n    \"\"\"\n    picard -Xmx${avail_mem}g CollectMultipleMetrics \\\\\n        INPUT=${bam[0]} \\\\\n        OUTPUT=${prefix}.CollectMultipleMetrics \\\\\n        REFERENCE_SEQUENCE=$fasta \\\\\n        VALIDATION_STRINGENCY=LENIENT \\\\\n        TMP_DIR=tmp\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "ch_rm_orphan_bam_metrics",
            "ch_fasta"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_collectmetrics_mqc",
            "ch_collectmetrics_pdf"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir path: \"${params.outdir}/bwa/mergedLibrary\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\"_metrics\")) \"picard_metrics/$filename\" else if (filename.endsWith(\".pdf\")) \"picard_metrics/pdf/$filename\" else null }"
        ],
        "when": "!params.skip_picard_metrics",
        "stub": ""
    },
    "BigWig": {
        "name_process": "BigWig",
        "string_process": "\nprocess BigWig {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/bigwig\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\"scale_factor.txt\")) \"scale/$filename\"\n                      else if (filename.endsWith(\".bigWig\")) \"$filename\"\n                      else null\n                }\n\n    input:\n    set val(name), file(bam), file(flagstat) from ch_rm_orphan_bam_bigwig.join(ch_rm_orphan_flagstat_bigwig, by: [0])\n    file sizes from ch_genome_sizes_bigwig.collect()\n\n    output:\n    set val(name), file(\"*.bigWig\") into ch_bigwig_plotprofile\n    file \"*scale_factor.txt\" into ch_bigwig_scale\n    file \"*igv.txt\" into ch_bigwig_igv\n\n    script:\n    prefix = \"${name}.mLb.clN\"\n    pe_fragment = params.single_end ? \"\" : \"-pc\"\n    extend = (params.single_end && params.fragment_size > 0) ? \"-fs ${params.fragment_size}\" : ''\n    \"\"\"\n    SCALE_FACTOR=\\$(grep 'mapped (' $flagstat | awk '{print 1000000/\\$1}')\n    echo \\$SCALE_FACTOR > ${prefix}.scale_factor.txt\n    genomeCoverageBed -ibam ${bam[0]} -bg -scale \\$SCALE_FACTOR $pe_fragment $extend | LC_ALL=C sort -k1,1 -k2,2n >  ${prefix}.bedGraph\n\n    bedGraphToBigWig ${prefix}.bedGraph $sizes ${prefix}.bigWig\n\n    find * -type f -name \"*.bigWig\" -exec echo -e \"bwa/mergedLibrary/bigwig/\"{}\"\\\\t0,0,178\" \\\\; > ${prefix}.bigWig.igv.txt\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    prefix = \"${name}.mLb.clN\"\n    pe_fragment = params.single_end ? \"\" : \"-pc\"\n    extend = (params.single_end && params.fragment_size > 0) ? \"-fs ${params.fragment_size}\" : ''\n    \"\"\"\n    SCALE_FACTOR=\\$(grep 'mapped (' $flagstat | awk '{print 1000000/\\$1}')\n    echo \\$SCALE_FACTOR > ${prefix}.scale_factor.txt\n    genomeCoverageBed -ibam ${bam[0]} -bg -scale \\$SCALE_FACTOR $pe_fragment $extend | LC_ALL=C sort -k1,1 -k2,2n >  ${prefix}.bedGraph\n\n    bedGraphToBigWig ${prefix}.bedGraph $sizes ${prefix}.bigWig\n\n    find * -type f -name \"*.bigWig\" -exec echo -e \"bwa/mergedLibrary/bigwig/\"{}\"\\\\t0,0,178\" \\\\; > ${prefix}.bigWig.igv.txt\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GOExtender",
            "bedGraphToBigWig"
        ],
        "tools_url": [
            "https://bio.tools/goextender",
            "https://bio.tools/bedgraphtobigwig"
        ],
        "tools_dico": [
            {
                "name": "GOExtender",
                "uri": "https://bio.tools/goextender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "New algorithm to efficiently identify all the connected gene pairs labeled by the same parent Gene Ontology (GO) terms.",
                "homepage": "https://www.msu.edu/~jinchen/GOExtender/"
            },
            {
                "name": "bedGraphToBigWig",
                "uri": "https://bio.tools/bedgraphtobigwig",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convert bedGraph to bigWig file.",
                "homepage": "https://www.encodeproject.org/software/bedgraphtobigwig/"
            }
        ],
        "inputs": [
            "ch_rm_orphan_bam_bigwig",
            "ch_genome_sizes_bigwig"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_bigwig_plotprofile",
            "ch_bigwig_scale",
            "ch_bigwig_igv"
        ],
        "nb_outputs": 3,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/bigwig\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\"scale_factor.txt\")) \"scale/$filename\" else if (filename.endsWith(\".bigWig\")) \"$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "PlotProfile": {
        "name_process": "PlotProfile",
        "string_process": "\nprocess PlotProfile {\n    tag \"$name\"\n    label 'process_high'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/deepTools/plotProfile\", mode: 'copy'\n\n    when:\n    !params.skip_plot_profile\n\n    input:\n    set val(name), file(bigwig) from ch_bigwig_plotprofile\n    file bed from ch_gene_bed\n\n    output:\n    file '*.{gz,pdf}' into ch_plotprofile_results\n    file '*.plotProfile.tab' into ch_plotprofile_mqc\n\n    script:\n    \"\"\"\n    computeMatrix scale-regions \\\\\n        --regionsFileName $bed \\\\\n        --scoreFileName $bigwig \\\\\n        --outFileName ${name}.computeMatrix.mat.gz \\\\\n        --outFileNameMatrix ${name}.computeMatrix.vals.mat.gz \\\\\n        --regionBodyLength 1000 \\\\\n        --beforeRegionStartLength 3000 \\\\\n        --afterRegionStartLength 3000 \\\\\n        --skipZeros \\\\\n        --smartLabels \\\\\n        --numberOfProcessors $task.cpus\n\n    plotProfile --matrixFile ${name}.computeMatrix.mat.gz \\\\\n        --outFileName ${name}.plotProfile.pdf \\\\\n        --outFileNameData ${name}.plotProfile.tab\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    computeMatrix scale-regions \\\\\n        --regionsFileName $bed \\\\\n        --scoreFileName $bigwig \\\\\n        --outFileName ${name}.computeMatrix.mat.gz \\\\\n        --outFileNameMatrix ${name}.computeMatrix.vals.mat.gz \\\\\n        --regionBodyLength 1000 \\\\\n        --beforeRegionStartLength 3000 \\\\\n        --afterRegionStartLength 3000 \\\\\n        --skipZeros \\\\\n        --smartLabels \\\\\n        --numberOfProcessors $task.cpus\n\n    plotProfile --matrixFile ${name}.computeMatrix.mat.gz \\\\\n        --outFileName ${name}.plotProfile.pdf \\\\\n        --outFileNameData ${name}.plotProfile.tab\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bigwig_plotprofile",
            "ch_gene_bed"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_plotprofile_results",
            "ch_plotprofile_mqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/deepTools/plotProfile\", mode: 'copy'"
        ],
        "when": "!params.skip_plot_profile",
        "stub": ""
    },
    "PhantomPeakQualTools": {
        "name_process": "PhantomPeakQualTools",
        "string_process": "\nprocess PhantomPeakQualTools {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/phantompeakqualtools\", mode: 'copy'\n\n    when:\n    !params.skip_spp\n\n    input:\n    set val(name), file(bam) from ch_rm_orphan_bam_phantompeakqualtools\n    file spp_correlation_header from ch_spp_correlation_header\n    file spp_nsc_header from ch_spp_nsc_header\n    file spp_rsc_header from ch_spp_rsc_header\n\n    output:\n    file '*.pdf' into ch_spp_plot\n    file '*.spp.out' into ch_spp_out,\n                          ch_spp_out_mqc\n    file '*_mqc.tsv' into ch_spp_csv_mqc\n\n    script:\n    \"\"\"\n    RUN_SPP=`which run_spp.R`\n    Rscript -e \"library(caTools); source(\\\\\"\\$RUN_SPP\\\\\")\" -c=\"${bam[0]}\" -savp=\"${name}.spp.pdf\" -savd=\"${name}.spp.Rdata\" -out=\"${name}.spp.out\" -p=$task.cpus\n    cp $spp_correlation_header ${name}_spp_correlation_mqc.tsv\n    Rscript -e \"load('${name}.spp.Rdata'); write.table(crosscorr\\\\\\$cross.correlation, file=\\\\\"${name}_spp_correlation_mqc.tsv\\\\\", sep=\",\", quote=FALSE, row.names=FALSE, col.names=FALSE,append=TRUE)\"\n\n    awk -v OFS='\\t' '{print \"${name}\", \\$9}' ${name}.spp.out | cat $spp_nsc_header - > ${name}_spp_nsc_mqc.tsv\n    awk -v OFS='\\t' '{print \"${name}\", \\$10}' ${name}.spp.out | cat $spp_rsc_header - > ${name}_spp_rsc_mqc.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    RUN_SPP=`which run_spp.R`\n    Rscript -e \"library(caTools); source(\\\\\"\\$RUN_SPP\\\\\")\" -c=\"${bam[0]}\" -savp=\"${name}.spp.pdf\" -savd=\"${name}.spp.Rdata\" -out=\"${name}.spp.out\" -p=$task.cpus\n    cp $spp_correlation_header ${name}_spp_correlation_mqc.tsv\n    Rscript -e \"load('${name}.spp.Rdata'); write.table(crosscorr\\\\\\$cross.correlation, file=\\\\\"${name}_spp_correlation_mqc.tsv\\\\\", sep=\",\", quote=FALSE, row.names=FALSE, col.names=FALSE,append=TRUE)\"\n\n    awk -v OFS='\\t' '{print \"${name}\", \\$9}' ${name}.spp.out | cat $spp_nsc_header - > ${name}_spp_nsc_mqc.tsv\n    awk -v OFS='\\t' '{print \"${name}\", \\$10}' ${name}.spp.out | cat $spp_rsc_header - > ${name}_spp_rsc_mqc.tsv\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_rm_orphan_bam_phantompeakqualtools",
            "ch_spp_correlation_header",
            "ch_spp_nsc_header",
            "ch_spp_rsc_header"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_spp_plot",
            "ch_spp_out",
            "ch_spp_out_mqc",
            "ch_spp_csv_mqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/phantompeakqualtools\", mode: 'copy'"
        ],
        "when": "!params.skip_spp",
        "stub": ""
    },
    "PlotFingerprint": {
        "name_process": "PlotFingerprint",
        "string_process": "\nprocess PlotFingerprint {\n    tag \"${ip} vs ${control}\"\n    label 'process_high'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/deepTools/plotFingerprint\", mode: 'copy'\n\n    when:\n    !params.skip_plot_fingerprint\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), val(ip), file(ipbam), val(control), file(controlbam), file(ipflagstat) from ch_group_bam_plotfingerprint\n\n    output:\n    file '*.{txt,pdf}' into ch_plotfingerprint_results\n    file '*.raw.txt' into ch_plotfingerprint_mqc\n\n    script:\n    extend = (params.single_end && params.fragment_size > 0) ? \"--extendReads ${params.fragment_size}\" : ''\n    \"\"\"\n    plotFingerprint \\\\\n        --bamfiles ${ipbam[0]} ${controlbam[0]} \\\\\n        --plotFile ${ip}.plotFingerprint.pdf \\\\\n        $extend \\\\\n        --labels $ip $control \\\\\n        --outRawCounts ${ip}.plotFingerprint.raw.txt \\\\\n        --outQualityMetrics ${ip}.plotFingerprint.qcmetrics.txt \\\\\n        --skipZeros \\\\\n        --JSDsample ${controlbam[0]} \\\\\n        --numberOfProcessors $task.cpus \\\\\n        --numberOfSamples $params.fingerprint_bins\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    extend = (params.single_end && params.fragment_size > 0) ? \"--extendReads ${params.fragment_size}\" : ''\n    \"\"\"\n    plotFingerprint \\\\\n        --bamfiles ${ipbam[0]} ${controlbam[0]} \\\\\n        --plotFile ${ip}.plotFingerprint.pdf \\\\\n        $extend \\\\\n        --labels $ip $control \\\\\n        --outRawCounts ${ip}.plotFingerprint.raw.txt \\\\\n        --outQualityMetrics ${ip}.plotFingerprint.qcmetrics.txt \\\\\n        --skipZeros \\\\\n        --JSDsample ${controlbam[0]} \\\\\n        --numberOfProcessors $task.cpus \\\\\n        --numberOfSamples $params.fingerprint_bins\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GOExtender"
        ],
        "tools_url": [
            "https://bio.tools/goextender"
        ],
        "tools_dico": [
            {
                "name": "GOExtender",
                "uri": "https://bio.tools/goextender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "New algorithm to efficiently identify all the connected gene pairs labeled by the same parent Gene Ontology (GO) terms.",
                "homepage": "https://www.msu.edu/~jinchen/GOExtender/"
            }
        ],
        "inputs": [
            "ch_group_bam_plotfingerprint"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_plotfingerprint_results",
            "ch_plotfingerprint_mqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${ip} vs ${control}\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/deepTools/plotFingerprint\", mode: 'copy'"
        ],
        "when": "!params.skip_plot_fingerprint",
        "stub": ""
    },
    "MACSCallPeak": {
        "name_process": "MACSCallPeak",
        "string_process": "\nprocess MACSCallPeak {\n    tag \"${ip} vs ${control}\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\".tsv\")) \"qc/$filename\"\n                      else if (filename.endsWith(\".igv.txt\")) null\n                      else filename\n                }\n\n    when:\n    params.macs_gsize\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), val(ip), file(ipbam), val(control), file(controlbam), file(ipflagstat) from ch_group_bam_macs\n    file peak_count_header from ch_peak_count_header\n    file frip_score_header from ch_frip_score_header\n\n    output:\n    set val(ip), file(\"*.{bed,xls,gappedPeak,bdg}\") into ch_macs_output\n    set val(antibody), val(replicatesExist), val(multipleGroups), val(ip), val(control), file(\"*.$PEAK_TYPE\") into ch_macs_homer, ch_macs_qc, ch_macs_consensus\n    file \"*igv.txt\" into ch_macs_igv\n    file \"*_mqc.tsv\" into ch_macs_mqc\n\n    script:\n    broad = params.narrow_peak ? '' : \"--broad --broad-cutoff ${params.broad_cutoff}\"\n    format = params.single_end ? \"BAM\" : \"BAMPE\"\n    pileup = params.save_macs_pileup ? \"-B --SPMR\" : \"\"\n    \"\"\"\n    macs2 callpeak \\\\\n        -t ${ipbam[0]} \\\\\n        -c ${controlbam[0]} \\\\\n        $broad \\\\\n        -f $format \\\\\n        -g $params.macs_gsize \\\\\n        -n $ip \\\\\n        $pileup \\\\\n        --keep-dup all\n\n    cat ${ip}_peaks.${PEAK_TYPE} | wc -l | awk -v OFS='\\t' '{ print \"${ip}\", \\$1 }' | cat $peak_count_header - > ${ip}_peaks.count_mqc.tsv\n\n    READS_IN_PEAKS=\\$(intersectBed -a ${ipbam[0]} -b ${ip}_peaks.${PEAK_TYPE} -bed -c -f 0.20 | awk -F '\\t' '{sum += \\$NF} END {print sum}')\n    grep 'mapped (' $ipflagstat | awk -v a=\"\\$READS_IN_PEAKS\" -v OFS='\\t' '{print \"${ip}\", a/\\$1}' | cat $frip_score_header - > ${ip}_peaks.FRiP_mqc.tsv\n\n    find * -type f -name \"*.${PEAK_TYPE}\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/\"{}\"\\\\t0,0,178\" \\\\; > ${ip}_peaks.igv.txt\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    broad = params.narrow_peak ? '' : \"--broad --broad-cutoff ${params.broad_cutoff}\"\n    format = params.single_end ? \"BAM\" : \"BAMPE\"\n    pileup = params.save_macs_pileup ? \"-B --SPMR\" : \"\"\n    \"\"\"\n    macs2 callpeak \\\\\n        -t ${ipbam[0]} \\\\\n        -c ${controlbam[0]} \\\\\n        $broad \\\\\n        -f $format \\\\\n        -g $params.macs_gsize \\\\\n        -n $ip \\\\\n        $pileup \\\\\n        --keep-dup all\n\n    cat ${ip}_peaks.${PEAK_TYPE} | wc -l | awk -v OFS='\\t' '{ print \"${ip}\", \\$1 }' | cat $peak_count_header - > ${ip}_peaks.count_mqc.tsv\n\n    READS_IN_PEAKS=\\$(intersectBed -a ${ipbam[0]} -b ${ip}_peaks.${PEAK_TYPE} -bed -c -f 0.20 | awk -F '\\t' '{sum += \\$NF} END {print sum}')\n    grep 'mapped (' $ipflagstat | awk -v a=\"\\$READS_IN_PEAKS\" -v OFS='\\t' '{print \"${ip}\", a/\\$1}' | cat $frip_score_header - > ${ip}_peaks.FRiP_mqc.tsv\n\n    find * -type f -name \"*.${PEAK_TYPE}\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/\"{}\"\\\\t0,0,178\" \\\\; > ${ip}_peaks.igv.txt\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "BroadPeak",
            "DEFormats",
            "mpileup"
        ],
        "tools_url": [
            "https://bio.tools/broadpeak",
            "https://bio.tools/deformats",
            "https://bio.tools/mpileup"
        ],
        "tools_dico": [
            {
                "name": "BroadPeak",
                "uri": "https://bio.tools/broadpeak",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3222",
                                    "term": "Peak calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3222",
                                    "term": "Protein binding peak detection"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Algorithm for the identification of broad peaks from diffuse ChIP-seq datasets.",
                "homepage": "http://jordan.biology.gatech.edu/page/software/broadpeak/index.html"
            },
            {
                "name": "DEFormats",
                "uri": "https://bio.tools/deformats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Covert between different data formats used by differential gene expression analysis tools.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/DEFormats.html"
            },
            {
                "name": "mpileup",
                "uri": "https://bio.tools/mpileup",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3695",
                                    "term": "Filtering"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Filter bam file using mpileup on coverage and SNPs.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_group_bam_macs",
            "ch_peak_count_header",
            "ch_frip_score_header"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_macs_output",
            "ch_macs_homer",
            "ch_macs_qc",
            "ch_macs_consensus",
            "ch_macs_igv",
            "ch_macs_mqc"
        ],
        "nb_outputs": 6,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${ip} vs ${control}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".tsv\")) \"qc/$filename\" else if (filename.endsWith(\".igv.txt\")) null else filename }"
        ],
        "when": "params.macs_gsize",
        "stub": ""
    },
    "AnnotatePeaks": {
        "name_process": "AnnotatePeaks",
        "string_process": "\nprocess AnnotatePeaks {\n    tag \"${ip} vs ${control}\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}\", mode: 'copy'\n\n    when:\n    params.macs_gsize\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), val(ip), val(control), file(peak) from ch_macs_homer\n    file fasta from ch_fasta\n    file gtf from ch_gtf\n\n    output:\n    file \"*.txt\" into ch_macs_annotate\n\n    script:\n    \"\"\"\n    annotatePeaks.pl \\\\\n        $peak \\\\\n        $fasta \\\\\n        -gid \\\\\n        -gtf $gtf \\\\\n        -cpu $task.cpus \\\\\n        > ${ip}_peaks.annotatePeaks.txt\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    annotatePeaks.pl \\\\\n        $peak \\\\\n        $fasta \\\\\n        -gid \\\\\n        -gtf $gtf \\\\\n        -cpu $task.cpus \\\\\n        > ${ip}_peaks.annotatePeaks.txt\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_macs_homer",
            "ch_fasta",
            "ch_gtf"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_macs_annotate"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${ip} vs ${control}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}\", mode: 'copy'"
        ],
        "when": "params.macs_gsize",
        "stub": ""
    },
    "PeakQC": {
        "name_process": "PeakQC",
        "string_process": "\nprocess PeakQC {\n    label \"process_medium\"\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/qc\", mode: 'copy'\n\n    when:\n    params.macs_gsize\n\n    input:\n    file peaks from ch_macs_qc.collect{ it[-1] }\n    file annos from ch_macs_annotate.collect()\n    file peak_annotation_header from ch_peak_annotation_header\n\n    output:\n    file \"*.{txt,pdf}\" into ch_macs_qc_output\n    file \"*.tsv\" into ch_macs_qc_mqc\n\n    script:                                                                      \n    \"\"\"\n    plot_macs_qc.r \\\\\n        -i ${peaks.join(',')} \\\\\n        -s ${peaks.join(',').replaceAll(\"_peaks.${PEAK_TYPE}\",\"\")} \\\\\n        -o ./ \\\\\n        -p macs_peak\n\n    plot_homer_annotatepeaks.r \\\\\n        -i ${annos.join(',')} \\\\\n        -s ${annos.join(',').replaceAll(\"_peaks.annotatePeaks.txt\",\"\")} \\\\\n        -o ./ \\\\\n        -p macs_annotatePeaks\n\n    cat $peak_annotation_header macs_annotatePeaks.summary.txt > macs_annotatePeaks.summary_mqc.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    plot_macs_qc.r \\\\\n        -i ${peaks.join(',')} \\\\\n        -s ${peaks.join(',').replaceAll(\"_peaks.${PEAK_TYPE}\",\"\")} \\\\\n        -o ./ \\\\\n        -p macs_peak\n\n    plot_homer_annotatepeaks.r \\\\\n        -i ${annos.join(',')} \\\\\n        -s ${annos.join(',').replaceAll(\"_peaks.annotatePeaks.txt\",\"\")} \\\\\n        -o ./ \\\\\n        -p macs_annotatePeaks\n\n    cat $peak_annotation_header macs_annotatePeaks.summary.txt > macs_annotatePeaks.summary_mqc.tsv\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_macs_qc",
            "ch_macs_annotate",
            "ch_peak_annotation_header"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_macs_qc_output",
            "ch_macs_qc_mqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "label \"process_medium\"",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/qc\", mode: 'copy'"
        ],
        "when": "params.macs_gsize",
        "stub": ""
    },
    "ConsensusPeakSet": {
        "name_process": "ConsensusPeakSet",
        "string_process": "\nprocess ConsensusPeakSet {\n    tag \"${antibody}\"\n    label 'process_long'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\".igv.txt\")) null\n                      else filename\n                }\n\n    when:\n    params.macs_gsize && (replicatesExist || multipleGroups)\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), file(peaks) from ch_macs_consensus\n\n    output:\n    set val(antibody), val(replicatesExist), val(multipleGroups), file(\"*.bed\") into ch_macs_consensus_bed\n    set val(antibody), file(\"*.saf\") into ch_macs_consensus_saf\n    file \"*.boolean.txt\" into ch_macs_consensus_bool\n    file \"*.intersect.{txt,plot.pdf}\" into ch_macs_consensus_intersect\n    file \"*igv.txt\" into ch_macs_consensus_igv\n\n    script:                                                                  \n    prefix = \"${antibody}.consensus_peaks\"\n    mergecols = params.narrow_peak ? (2..10).join(',') : (2..9).join(',')\n    collapsecols = params.narrow_peak ? ([\"collapse\"]*9).join(',') : ([\"collapse\"]*8).join(',')\n    expandparam = params.narrow_peak ? \"--is_narrow_peak\" : \"\"\n    \"\"\"\n    LC_ALL=C  sort -k1,1 -k2,2n ${peaks.collect{it.toString()}.sort().join(' ')} \\\\\n        | mergeBed -c $mergecols -o $collapsecols > ${prefix}.txt\n\n    macs2_merged_expand.py ${prefix}.txt \\\\\n        ${peaks.collect{it.toString()}.sort().join(',').replaceAll(\"_peaks.${PEAK_TYPE}\",\"\")} \\\\\n        ${prefix}.boolean.txt \\\\\n        --min_replicates $params.min_reps_consensus \\\\\n        $expandparam\n\n    awk -v FS='\\t' -v OFS='\\t' 'FNR > 1 { print \\$1, \\$2, \\$3, \\$4, \"0\", \"+\" }' ${prefix}.boolean.txt > ${prefix}.bed\n\n    echo -e \"GeneID\\tChr\\tStart\\tEnd\\tStrand\" > ${prefix}.saf\n    awk -v FS='\\t' -v OFS='\\t' 'FNR > 1 { print \\$4, \\$1, \\$2, \\$3,  \"+\" }' ${prefix}.boolean.txt >> ${prefix}.saf\n\n    plot_peak_intersect.r -i ${prefix}.boolean.intersect.txt -o ${prefix}.boolean.intersect.plot.pdf\n\n    find * -type f -name \"${prefix}.bed\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/\"{}\"\\\\t0,0,0\" \\\\; > ${prefix}.bed.igv.txt\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    prefix = \"${antibody}.consensus_peaks\"\n    mergecols = params.narrow_peak ? (2..10).join(',') : (2..9).join(',')\n    collapsecols = params.narrow_peak ? ([\"collapse\"]*9).join(',') : ([\"collapse\"]*8).join(',')\n    expandparam = params.narrow_peak ? \"--is_narrow_peak\" : \"\"\n    \"\"\"\n    LC_ALL=C  sort -k1,1 -k2,2n ${peaks.collect{it.toString()}.sort().join(' ')} \\\\\n        | mergeBed -c $mergecols -o $collapsecols > ${prefix}.txt\n\n    macs2_merged_expand.py ${prefix}.txt \\\\\n        ${peaks.collect{it.toString()}.sort().join(',').replaceAll(\"_peaks.${PEAK_TYPE}\",\"\")} \\\\\n        ${prefix}.boolean.txt \\\\\n        --min_replicates $params.min_reps_consensus \\\\\n        $expandparam\n\n    awk -v FS='\\t' -v OFS='\\t' 'FNR > 1 { print \\$1, \\$2, \\$3, \\$4, \"0\", \"+\" }' ${prefix}.boolean.txt > ${prefix}.bed\n\n    echo -e \"GeneID\\tChr\\tStart\\tEnd\\tStrand\" > ${prefix}.saf\n    awk -v FS='\\t' -v OFS='\\t' 'FNR > 1 { print \\$4, \\$1, \\$2, \\$3,  \"+\" }' ${prefix}.boolean.txt >> ${prefix}.saf\n\n    plot_peak_intersect.r -i ${prefix}.boolean.intersect.txt -o ${prefix}.boolean.intersect.plot.pdf\n\n    find * -type f -name \"${prefix}.bed\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/\"{}\"\\\\t0,0,0\" \\\\; > ${prefix}.bed.igv.txt\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_macs_consensus"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_macs_consensus_bed",
            "ch_macs_consensus_saf",
            "ch_macs_consensus_bool",
            "ch_macs_consensus_intersect",
            "ch_macs_consensus_igv"
        ],
        "nb_outputs": 5,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${antibody}\"",
            "label 'process_long'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".igv.txt\")) null else filename }"
        ],
        "when": "params.macs_gsize && (replicatesExist || multipleGroups)",
        "stub": ""
    },
    "ConsensusPeakSetAnnotate": {
        "name_process": "ConsensusPeakSetAnnotate",
        "string_process": "\nprocess ConsensusPeakSetAnnotate {\n    tag \"${antibody}\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}\", mode: 'copy'\n\n    when:\n    params.macs_gsize && (replicatesExist || multipleGroups)\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), file(bed) from ch_macs_consensus_bed\n    file bool from ch_macs_consensus_bool\n    file fasta from ch_fasta\n    file gtf from ch_gtf\n\n    output:\n    file \"*.annotatePeaks.txt\" into ch_macs_consensus_annotate\n\n    script:\n    prefix = \"${antibody}.consensus_peaks\"\n    \"\"\"\n    annotatePeaks.pl \\\\\n        $bed \\\\\n        $fasta \\\\\n        -gid \\\\\n        -gtf $gtf \\\\\n        -cpu $task.cpus \\\\\n        > ${prefix}.annotatePeaks.txt\n\n    cut -f2- ${prefix}.annotatePeaks.txt | awk 'NR==1; NR > 1 {print \\$0 | \"LC_ALL=C sort -k1,1 -k2,2n\"}' | cut -f6- > tmp.txt\n    paste $bool tmp.txt > ${prefix}.boolean.annotatePeaks.txt\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    prefix = \"${antibody}.consensus_peaks\"\n    \"\"\"\n    annotatePeaks.pl \\\\\n        $bed \\\\\n        $fasta \\\\\n        -gid \\\\\n        -gtf $gtf \\\\\n        -cpu $task.cpus \\\\\n        > ${prefix}.annotatePeaks.txt\n\n    cut -f2- ${prefix}.annotatePeaks.txt | awk 'NR==1; NR > 1 {print \\$0 | \"LC_ALL=C sort -k1,1 -k2,2n\"}' | cut -f6- > tmp.txt\n    paste $bool tmp.txt > ${prefix}.boolean.annotatePeaks.txt\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_macs_consensus_bed",
            "ch_macs_consensus_bool",
            "ch_fasta",
            "ch_gtf"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_macs_consensus_annotate"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${antibody}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}\", mode: 'copy'"
        ],
        "when": "params.macs_gsize && (replicatesExist || multipleGroups)",
        "stub": ""
    },
    "ConsensusPeakSetDESeq": {
        "name_process": "ConsensusPeakSetDESeq",
        "string_process": "\nprocess ConsensusPeakSetDESeq {\n    tag \"${antibody}\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/deseq2\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.endsWith(\".igv.txt\")) null\n                      else filename\n                }\n\n    when:\n    params.macs_gsize && replicatesExist && multipleGroups && !params.skip_diff_analysis\n\n    input:\n    set val(antibody), val(replicatesExist), val(multipleGroups), file(bams) ,file(saf) from ch_group_bam_deseq\n    file deseq2_pca_header from ch_deseq2_pca_header\n    file deseq2_clustering_header from ch_deseq2_clustering_header\n\n    output:\n    file \"*featureCounts.txt\" into ch_macs_consensus_counts\n    file \"*featureCounts.txt.summary\" into ch_macs_consensus_counts_mqc\n    file \"*.{RData,results.txt,pdf,log}\" into ch_macs_consensus_deseq_results\n    file \"sizeFactors\" into ch_macs_consensus_deseq_factors\n    file \"*vs*/*.{pdf,txt}\" into ch_macs_consensus_deseq_comp_results\n    file \"*vs*/*.bed\" into ch_macs_consensus_deseq_comp_bed\n    file \"*igv.txt\" into ch_macs_consensus_deseq_comp_igv\n    file \"*.tsv\" into ch_macs_consensus_deseq_mqc\n\n    script:\n    prefix = \"${antibody}.consensus_peaks\"\n    bam_files = bams.findAll { it.toString().endsWith('.bam') }.sort()\n    bam_ext = params.single_end ? \".mLb.clN.sorted.bam\" : \".mLb.clN.bam\"\n    pe_params = params.single_end ? '' : \"-p --donotsort\"\n    \"\"\"\n    featureCounts \\\\\n        -F SAF \\\\\n        -O \\\\\n        --fracOverlap 0.2 \\\\\n        -T $task.cpus \\\\\n        $pe_params \\\\\n        -a $saf \\\\\n        -o ${prefix}.featureCounts.txt \\\\\n        ${bam_files.join(' ')}\n\n    featurecounts_deseq2.r -i ${prefix}.featureCounts.txt -b '$bam_ext' -o ./ -p $prefix -s .mLb\n\n    sed 's/deseq2_pca/deseq2_pca_${task.index}/g' <$deseq2_pca_header >tmp.txt\n    sed -i -e 's/DESeq2:/${antibody} DESeq2:/g' tmp.txt\n    cat tmp.txt ${prefix}.pca.vals.txt > ${prefix}.pca.vals_mqc.tsv\n\n    sed 's/deseq2_clustering/deseq2_clustering_${task.index}/g' <$deseq2_clustering_header >tmp.txt\n    sed -i -e 's/DESeq2:/${antibody} DESeq2:/g' tmp.txt\n    cat tmp.txt ${prefix}.sample.dists.txt > ${prefix}.sample.dists_mqc.tsv\n\n    find * -type f -name \"*.FDR0.05.results.bed\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/deseq2/\"{}\"\\\\t255,0,0\" \\\\; > ${prefix}.igv.txt\n    \"\"\"\n}",
        "nb_lignes_process": 55,
        "string_script": "    prefix = \"${antibody}.consensus_peaks\"\n    bam_files = bams.findAll { it.toString().endsWith('.bam') }.sort()\n    bam_ext = params.single_end ? \".mLb.clN.sorted.bam\" : \".mLb.clN.bam\"\n    pe_params = params.single_end ? '' : \"-p --donotsort\"\n    \"\"\"\n    featureCounts \\\\\n        -F SAF \\\\\n        -O \\\\\n        --fracOverlap 0.2 \\\\\n        -T $task.cpus \\\\\n        $pe_params \\\\\n        -a $saf \\\\\n        -o ${prefix}.featureCounts.txt \\\\\n        ${bam_files.join(' ')}\n\n    featurecounts_deseq2.r -i ${prefix}.featureCounts.txt -b '$bam_ext' -o ./ -p $prefix -s .mLb\n\n    sed 's/deseq2_pca/deseq2_pca_${task.index}/g' <$deseq2_pca_header >tmp.txt\n    sed -i -e 's/DESeq2:/${antibody} DESeq2:/g' tmp.txt\n    cat tmp.txt ${prefix}.pca.vals.txt > ${prefix}.pca.vals_mqc.tsv\n\n    sed 's/deseq2_clustering/deseq2_clustering_${task.index}/g' <$deseq2_clustering_header >tmp.txt\n    sed -i -e 's/DESeq2:/${antibody} DESeq2:/g' tmp.txt\n    cat tmp.txt ${prefix}.sample.dists.txt > ${prefix}.sample.dists_mqc.tsv\n\n    find * -type f -name \"*.FDR0.05.results.bed\" -exec echo -e \"bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/deseq2/\"{}\"\\\\t255,0,0\" \\\\; > ${prefix}.igv.txt\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "ch_group_bam_deseq",
            "ch_deseq2_pca_header",
            "ch_deseq2_clustering_header"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_macs_consensus_counts",
            "ch_macs_consensus_counts_mqc",
            "ch_macs_consensus_deseq_results",
            "ch_macs_consensus_deseq_factors",
            "ch_macs_consensus_deseq_comp_results",
            "ch_macs_consensus_deseq_comp_bed",
            "ch_macs_consensus_deseq_comp_igv",
            "ch_macs_consensus_deseq_mqc"
        ],
        "nb_outputs": 8,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"${antibody}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/bwa/mergedLibrary/macs/${PEAK_TYPE}/consensus/${antibody}/deseq2\", mode: 'copy' , saveAs: { filename -> if (filename.endsWith(\".igv.txt\")) null else filename }"
        ],
        "when": "params.macs_gsize && replicatesExist && multipleGroups && !params.skip_diff_analysis",
        "stub": ""
    },
    "IGV": {
        "name_process": "IGV",
        "string_process": "\nprocess IGV {\n    publishDir \"${params.outdir}/igv/${PEAK_TYPE}\", mode: 'copy'\n\n    when:\n    !params.skip_igv\n\n    input:\n    file fasta from ch_fasta\n    file bigwigs from ch_bigwig_igv.collect().ifEmpty([])\n    file peaks from ch_macs_igv.collect().ifEmpty([])\n    file consensus_peaks from ch_macs_consensus_igv.collect().ifEmpty([])\n    file differential_peaks from ch_macs_consensus_deseq_comp_igv.collect().ifEmpty([])\n\n    output:\n    file \"*.{txt,xml}\" into ch_igv_session\n\n    script:                                                                  \n    \"\"\"\n    cat *.txt > igv_files.txt\n    igv_files_to_session.py igv_session.xml igv_files.txt ../../reference_genome/${fasta.getName()} --path_prefix '../../'\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    cat *.txt > igv_files.txt\n    igv_files_to_session.py igv_session.xml igv_files.txt ../../reference_genome/${fasta.getName()} --path_prefix '../../'\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fasta",
            "ch_bigwig_igv",
            "ch_macs_igv",
            "ch_macs_consensus_igv",
            "ch_macs_consensus_deseq_comp_igv"
        ],
        "nb_inputs": 5,
        "outputs": [
            "ch_igv_session"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "publishDir \"${params.outdir}/igv/${PEAK_TYPE}\", mode: 'copy'"
        ],
        "when": "!params.skip_igv",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.indexOf(\".csv\") > 0) filename\n                      else null\n                }\n\n    output:\n    file 'software_versions_mqc.yaml' into ch_software_versions_mqc\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    trim_galore --version > v_trim_galore.txt\n    echo \\$(bwa 2>&1) > v_bwa.txt\n    samtools --version > v_samtools.txt\n    bedtools --version > v_bedtools.txt\n    echo \\$(bamtools --version 2>&1) > v_bamtools.txt\n    echo \\$(plotFingerprint --version 2>&1) > v_deeptools.txt || true\n    picard MarkDuplicates --version &> v_picard.txt  || true\n    echo \\$(R --version 2>&1) > v_R.txt\n    python -c \"import pysam; print(pysam.__version__)\" > v_pysam.txt\n    echo \\$(macs2 --version 2>&1) > v_macs2.txt\n    touch v_homer.txt\n    echo \\$(featureCounts -v 2>&1) > v_featurecounts.txt\n    preseq &> v_preseq.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    trim_galore --version > v_trim_galore.txt\n    echo \\$(bwa 2>&1) > v_bwa.txt\n    samtools --version > v_samtools.txt\n    bedtools --version > v_bedtools.txt\n    echo \\$(bamtools --version 2>&1) > v_bamtools.txt\n    echo \\$(plotFingerprint --version 2>&1) > v_deeptools.txt || true\n    picard MarkDuplicates --version &> v_picard.txt  || true\n    echo \\$(R --version 2>&1) > v_R.txt\n    python -c \"import pysam; print(pysam.__version__)\" > v_pysam.txt\n    echo \\$(macs2 --version 2>&1) > v_macs2.txt\n    touch v_homer.txt\n    echo \\$(featureCounts -v 2>&1) > v_featurecounts.txt\n    preseq &> v_preseq.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "SAMtools",
            "BEDTools",
            "Picard",
            "preseq",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools",
            "https://bio.tools/picard_tools",
            "https://bio.tools/preseq",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_mqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "MultiQC": {
        "name_process": "MultiQC",
        "string_process": "\nprocess MultiQC {\n    publishDir \"${params.outdir}/multiqc/${PEAK_TYPE}\", mode: 'copy'\n\n    when:\n    !params.skip_multiqc\n\n    input:\n    file multiqc_config from ch_multiqc_config\n\n    file ('software_versions/*') from ch_software_versions_mqc.collect()\n    file ('workflow_summary/*') from create_workflow_summary(summary)\n\n    file ('fastqc/*') from ch_fastqc_reports_mqc.collect().ifEmpty([])\n    file ('trimgalore/*') from ch_trimgalore_results_mqc.collect().ifEmpty([])\n    file ('trimgalore/fastqc/*') from ch_trimgalore_fastqc_reports_mqc.collect().ifEmpty([])\n\n    file ('alignment/library/*') from ch_sort_bam_flagstat_mqc.collect()\n    file ('alignment/mergedLibrary/*') from ch_merge_bam_stats_mqc.collect()\n    file ('alignment/mergedLibrary/*') from ch_rm_orphan_flagstat_mqc.collect{it[1]}\n    file ('alignment/mergedLibrary/*') from ch_rm_orphan_stats_mqc.collect()\n    file ('alignment/mergedLibrary/picard_metrics/*') from ch_merge_bam_metrics_mqc.collect()\n    file ('alignment/mergedLibrary/picard_metrics/*') from ch_collectmetrics_mqc.collect()\n\n    file ('macs/*') from ch_macs_mqc.collect().ifEmpty([])\n    file ('macs/*') from ch_macs_qc_mqc.collect().ifEmpty([])\n    file ('macs/consensus/*') from ch_macs_consensus_counts_mqc.collect().ifEmpty([])\n    file ('macs/consensus/*') from ch_macs_consensus_deseq_mqc.collect().ifEmpty([])\n\n    file ('preseq/*') from ch_preseq_mqc.collect().ifEmpty([])\n    file ('deeptools/*') from ch_plotfingerprint_mqc.collect().ifEmpty([])\n    file ('deeptools/*') from ch_plotprofile_mqc.collect().ifEmpty([])\n    file ('phantompeakqualtools/*') from ch_spp_out_mqc.collect().ifEmpty([])\n    file ('phantompeakqualtools/*') from ch_spp_csv_mqc.collect().ifEmpty([])\n\n    output:\n    file \"*multiqc_report.html\" into ch_multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config \\\\\n        -m custom_content -m fastqc -m cutadapt -m samtools -m picard -m preseq -m featureCounts -m deeptools -m phantompeakqualtools\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config \\\\\n        -m custom_content -m fastqc -m cutadapt -m samtools -m picard -m preseq -m featureCounts -m deeptools -m phantompeakqualtools\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "ch_software_versions_mqc",
            "summary",
            "ch_fastqc_reports_mqc",
            "ch_trimgalore_results_mqc",
            "ch_trimgalore_fastqc_reports_mqc",
            "ch_sort_bam_flagstat_mqc",
            "ch_merge_bam_stats_mqc",
            "ch_rm_orphan_flagstat_mqc",
            "ch_rm_orphan_stats_mqc",
            "ch_merge_bam_metrics_mqc",
            "ch_collectmetrics_mqc",
            "ch_macs_mqc",
            "ch_macs_qc_mqc",
            "ch_macs_consensus_counts_mqc",
            "ch_macs_consensus_deseq_mqc",
            "ch_preseq_mqc",
            "ch_plotfingerprint_mqc",
            "ch_plotprofile_mqc",
            "ch_spp_out_mqc",
            "ch_spp_csv_mqc"
        ],
        "nb_inputs": 21,
        "outputs": [
            "ch_multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "publishDir \"${params.outdir}/multiqc/${PEAK_TYPE}\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/Documentation\", mode: 'copy'\n\n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "publishDir \"${params.outdir}/Documentation\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "BWAIndex": {
        "name_process": "BWAIndex",
        "string_process": " process BWAIndex {\n        tag \"$fasta\"\n        label 'process_high'\n        publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir },\n            saveAs: { params.save_reference ? it : null }, mode: 'copy'\n\n        input:\n        file fasta from ch_fasta\n\n        output:\n        file \"BWAIndex\" into ch_bwa_index\n\n        script:\n        \"\"\"\n        bwa index -a bwtsw $fasta\n        mkdir BWAIndex && mv ${fasta}* BWAIndex\n        \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        bwa index -a bwtsw $fasta\n        mkdir BWAIndex && mv ${fasta}* BWAIndex\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "ch_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bwa_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$fasta\"",
            "label 'process_high'",
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "BWAMem": {
        "name_process": "BWAMem",
        "string_process": "\nprocess BWAMem {\n    tag \"$name\"\n    label 'process_high'\n\n    input:\n    set val(name), file(reads) from ch_trimmed_reads\n    file index from ch_bwa_index.collect()\n\n    output:\n    set val(name), file(\"*.bam\") into ch_bwa_bam\n\n    script:\n    prefix = \"${name}.Lb\"\n    rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n    if (params.seq_center) {\n        rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\\\tCN:${params.seq_center}\\'\"\n    }\n    \"\"\"\n    bwa mem \\\\\n        -t $task.cpus \\\\\n        -M \\\\\n        -R $rg \\\\\n        ${index}/${bwa_base} \\\\\n        $reads \\\\\n        | samtools view -@ $task.cpus -b -h -F 0x0100 -O BAM -o ${prefix}.bam -\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    prefix = \"${name}.Lb\"\n    rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\'\"\n    if (params.seq_center) {\n        rg = \"\\'@RG\\\\tID:${name}\\\\tSM:${name.split('_')[0..-2].join('_')}\\\\tPL:ILLUMINA\\\\tLB:${name}\\\\tPU:1\\\\tCN:${params.seq_center}\\'\"\n    }\n    \"\"\"\n    bwa mem \\\\\n        -t $task.cpus \\\\\n        -M \\\\\n        -R $rg \\\\\n        ${index}/${bwa_base} \\\\\n        $reads \\\\\n        | samtools view -@ $task.cpus -b -h -F 0x0100 -O BAM -o ${prefix}.bam -\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "org",
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/org",
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_trimmed_reads",
            "ch_bwa_index"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_bwa_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "markgene__cutnrun",
        "directive": [
            "tag \"$name\"",
            "label 'process_high'"
        ],
        "when": "",
        "stub": ""
    }
}