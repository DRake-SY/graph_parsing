{
    "OPERATION_1": {
        "string": "Channel.fromPath(file(params.template))\n    .into {template_for_registration; template_for_transformation_nii; template_for_transformation_trk}",
        "origin": [
            [
                "file(params.template",
                "A"
            ]
        ],
        "gives": [
            [
                "template_for_registration",
                "P"
            ],
            [
                "template_for_transformation_nii",
                "P"
            ],
            [
                "template_for_transformation_trk",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "trk_for_transformation = Channel\n    .fromFilePairs(\"$root/**/*.trk\",\n                   size:-1,\n                   maxDepth:1,\n                   flat: true) {it.parent.name}",
        "origin": [],
        "gives": [
            [
                "trk_for_transformation",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath(\"$root/**/*.nii.gz\",\n              maxDepth:1)\n    .branch {\n        t1: it =~ \"t1.nii.gz\"\n        other: true\n    }\n    .set { result }",
        "origin": [],
        "gives": [
            [
                "result",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "result.t1().map{[it.parent.name, it]}\n.into { t1_for_registration; check_subjects_number }",
        "origin": [
            [
                "result",
                "P"
            ]
        ],
        "gives": [
            [
                "t1_for_registration",
                "P"
            ],
            [
                "check_subjects_number",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "result.other().map{[it.parent.name, it]}\n.set { nii_for_transformation }",
        "origin": [
            [
                "result",
                "P"
            ]
        ],
        "gives": [
            [
                "nii_for_transformation",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "t1_for_registration\n    .combine(template_for_registration)\n    .set {t1_and_template_for_registration}",
        "origin": [
            [
                "t1_for_registration",
                "P"
            ],
            [
                "template_for_registration",
                "P"
            ]
        ],
        "gives": [
            [
                "t1_and_template_for_registration",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "check_subjects_number.count().set{ number_subj_for_null_check }",
        "origin": [
            [
                "check_subjects_number",
                "P"
            ]
        ],
        "gives": [
            [
                "number_subj_for_null_check",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "number_subj_for_null_check\n.subscribe{a -> if (a == 0)\n    error \"Error ~ No subjects found. Please check the naming convention, your --input path or your BIDS folder.\"}",
        "origin": [
            [
                "number_subj_for_null_check",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_9": {
        "string": "nii_for_transformation\n    .join(transformation_for_nii)\n    .combine(template_for_transformation_nii)\n    .set{nii_and_template_for_transformation}",
        "origin": [
            [
                "nii_for_transformation",
                "P"
            ],
            [
                "transformation_for_nii",
                "P"
            ],
            [
                "template_for_transformation_nii",
                "P"
            ]
        ],
        "gives": [
            [
                "nii_and_template_for_transformation",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "trk_for_transformation\n    .join(transformation_for_trk)\n    .combine(template_for_transformation_trk)\n    .set{trk_and_template_for_transformation}",
        "origin": [
            [
                "trk_for_transformation",
                "P"
            ],
            [
                "transformation_for_trk",
                "P"
            ],
            [
                "template_for_transformation_trk",
                "P"
            ]
        ],
        "gives": [
            [
                "trk_and_template_for_transformation",
                "P"
            ]
        ]
    }
}