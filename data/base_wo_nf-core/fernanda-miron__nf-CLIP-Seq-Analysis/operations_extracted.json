{
    "OPERATION_1": {
        "string": "Channel\n\t.fromPath( \"${params.fastq_file}\" )\n\t          \n\t.set{ clip_input}",
        "origin": [
            [
                "\"${params.fastq_file}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "clip_input",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n\t.fromPath(\"${workflow.projectDir}/mk_modules/mk_alignment/*\")\n\t.toList()\n\t.set{ mkfiles_pre1 }",
        "origin": [
            [
                "\"${workflow.projectDir}/mk_modules/mk_alignment/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre1",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t.fromPath(\"${workflow.projectDir}/test/data/reference-index\")\n\t.set{ reference_index}",
        "origin": [
            [
                "\"${workflow.projectDir}/test/data/reference-index\"",
                "A"
            ]
        ],
        "gives": [
            [
                "reference_index",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n\t.fromPath(\"${workflow.projectDir}/mk_modules/mk_sam_to_bam/*\")\n\t.toList()\n\t.set{ mkfiles_pre2 }",
        "origin": [
            [
                "\"${workflow.projectDir}/mk_modules/mk_sam_to_bam/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre2",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n\t\t.fromPath(\"${workflow.projectDir}/mk_modules/mk_peak_calling/*\")\n\t\t.toList()\n\t\t.set{ mkfiles_core1 }",
        "origin": [
            [
                "\"${workflow.projectDir}/mk_modules/mk_peak_calling/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_core1",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "nfsummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "nfsummary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_7": {
        "string": "pipelinesummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "pipelinesummary",
                "P"
            ]
        ],
        "gives": []
    }
}