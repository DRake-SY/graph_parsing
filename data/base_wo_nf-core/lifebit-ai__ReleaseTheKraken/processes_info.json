{
    "fastp": {
        "name_process": "fastp",
        "string_process": "\nprocess fastp {\n\n    tag { sample_id }\n\n    input:\n    set sample_id, file(fastq_pair) from IN_fastq_raw\n\n    output:\n    set sample_id, file(\"*trim_*.fq.gz\") into OUT_fastp\n\n    script:\n    \"\"\"\n    a=(${fastq_pair})\n\n    if ((\\${#a[@]} > 1));\n    then\n        fastp -i ${fastq_pair[0]} -o ${sample_id}_trim_1.fq.gz -I ${fastq_pair[1]} -O ${sample_id}_trim_2.fq.gz \n    else\n        fastp -i ${fastq_pair} -o ${sample_id}_trim_1.fq.gz \n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    a=(${fastq_pair})\n\n    if ((\\${#a[@]} > 1));\n    then\n        fastp -i ${fastq_pair[0]} -o ${sample_id}_trim_1.fq.gz -I ${fastq_pair[1]} -O ${sample_id}_trim_2.fq.gz \n    else\n        fastp -i ${fastq_pair} -o ${sample_id}_trim_1.fq.gz \n    fi\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "IN_fastq_raw"
        ],
        "nb_inputs": 1,
        "outputs": [
            "OUT_fastp"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__ReleaseTheKraken",
        "directive": [
            "tag { sample_id }"
        ],
        "when": "",
        "stub": ""
    },
    "kraken2": {
        "name_process": "kraken2",
        "string_process": "\nprocess kraken2 {\n\n    tag { sample_id }\n\n    publishDir \"results/kraken/\"\n\n    input:\n    set sample_id, file(fastq_pair) from OUT_fastp\n\n    output:\n    set sample_id, file(\"*_kraken_report.txt\") into OUT_KRAKEN\n\n    script:\n    \"\"\"\n    a=(${fastq_pair})\n\n    if ((\\${#a[@]} > 1));\n    then\n        kraken2 --memory-mapping --threads $task.cpus --report ${sample_id}_kraken_report.txt --db minikraken2_v1_8GB --paired --gzip-compressed ${fastq_pair[0]} ${fastq_pair[1]}\n    else\n        kraken2 --memory-mapping --threads $task.cpus --report ${sample_id}_kraken_report.txt --db minikraken2_v1_8GB --single --gzip-compressed ${fastq_pair}\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    a=(${fastq_pair})\n\n    if ((\\${#a[@]} > 1));\n    then\n        kraken2 --memory-mapping --threads $task.cpus --report ${sample_id}_kraken_report.txt --db minikraken2_v1_8GB --paired --gzip-compressed ${fastq_pair[0]} ${fastq_pair[1]}\n    else\n        kraken2 --memory-mapping --threads $task.cpus --report ${sample_id}_kraken_report.txt --db minikraken2_v1_8GB --single --gzip-compressed ${fastq_pair}\n    fi\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "OUT_fastp"
        ],
        "nb_inputs": 1,
        "outputs": [
            "OUT_KRAKEN"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__ReleaseTheKraken",
        "directive": [
            "tag { sample_id }",
            "publishDir \"results/kraken/\""
        ],
        "when": "",
        "stub": ""
    },
    "krona": {
        "name_process": "krona",
        "string_process": "\nprocess krona{\n\n    tag { sample_id }\n\n    publishDir \"results/MultiQC/\"\n\n    input:\n    set sample_id, file(report) from OUT_KRAKEN\n\n    output:\n    file(\"*html\")\n\n    script:\n    \"\"\"\n    ktImportTaxonomy -q 2 -t 3 ${report} -o multiqc_report.html\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    ktImportTaxonomy -q 2 -t 3 ${report} -o multiqc_report.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "OUT_KRAKEN"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lifebit-ai__ReleaseTheKraken",
        "directive": [
            "tag { sample_id }",
            "publishDir \"results/MultiQC/\""
        ],
        "when": "",
        "stub": ""
    }
}