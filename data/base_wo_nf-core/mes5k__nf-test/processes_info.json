{
    "create_files": {
        "name_process": "create_files",
        "string_process": "\nprocess create_files {\n    input:\n    val(num) from file_create\n\n    output:\n    file(\"${num}.txt\") into text_files\n\n    script:\n    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    echo \"${num};${num};${num}\" > ${num}.txt\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    echo \"${num};${num};${num}\" > ${num}.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "file_create"
        ],
        "nb_inputs": 1,
        "outputs": [
            "text_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "txt_to_csv": {
        "name_process": "txt_to_csv",
        "string_process": "\nprocess txt_to_csv {\n    input:\n    file txt from text_files\n\n    output:\n    file \"${txt}.csv\" into csv_files\n\n    script:\n    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/;/,/g' ${txt} > ${txt}.csv\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/;/,/g' ${txt} > ${txt}.csv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "text_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "csv_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "csv_to_tsv": {
        "name_process": "csv_to_tsv",
        "string_process": "\nprocess csv_to_tsv {\n    input:\n    file csv from csv_files\n\n    output:\n    file \"${csv}.tsv\" into tsv_files\n\n    script:\n    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/,/\\\\t/g' ${csv} > ${csv}.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/,/\\\\t/g' ${csv} > ${csv}.tsv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "csv_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tsv_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "tsv_to_psv": {
        "name_process": "tsv_to_psv",
        "string_process": "\nprocess tsv_to_psv {\n    input:\n    file tsv from tsv_files\n\n    output:\n    file \"${tsv}.psv\" into psv_files\n\n    script:\n    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/\\\\t/|/g' ${tsv} > ${tsv}.psv\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    sleep \\$(((\\$RANDOM % 10)+2))\n    sed 's/\\\\t/|/g' ${tsv} > ${tsv}.psv\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tsv_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "psv_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "merge": {
        "name_process": "merge",
        "string_process": "\nprocess merge {\n                                                              \n\n    input:\n    file '*.psv' from psv_files.toList()\n\n    output:\n    file \"merge.out\" into result\n\n    script:\n    \"\"\"\n    cat *.psv > merge.out\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    cat *.psv > merge.out\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "psv_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "test_mount": {
        "name_process": "test_mount",
        "string_process": "\nprocess test_mount {\n                                                              \n\n    input:\n    file(a) from result\n\n    output:\n    stdout into fin_res\n\n    script:\n    \"\"\"\n    df -h\n    cp ${a} /mnt/efs/merge.out\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    df -h\n    cp ${a} /mnt/efs/merge.out\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "DFP"
        ],
        "tools_url": [
            "https://bio.tools/dfp"
        ],
        "tools_dico": [
            {
                "name": "DFP",
                "uri": "https://bio.tools/dfp",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression profiling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differentially expressed gene identification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides a supervised technique able to identify differentially expressed genes, based on the construction of \\emph{Fuzzy Patterns} (FPs). The Fuzzy Patterns are built by means of applying 3 Membership Functions to discretized gene expression values.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/DFP.html"
            }
        ],
        "inputs": [
            "result"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fin_res"
        ],
        "nb_outputs": 1,
        "name_workflow": "mes5k__nf-test",
        "directive": [],
        "when": "",
        "stub": ""
    }
}