{
    "split": {
        "name_process": "split",
        "string_process": "\nprocess split {\n\n\terrorStrategy 'retry'\n\tmaxRetries 2\n\tmaxErrors 13\t\n\n        executor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n        \tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.sv_cpu} --time=${params.sv_rt} --mem=${params.sv_vmem}\"\n\t}\n\n        input:\n         val(GVCF) from SampleData\n\n        output:\n         set val(CHR), file({ \"${CHUNK}\" }) into splat\n\n        script:\n\n\t CHR = \"${GVCF.CHR}\"\n\t BED = file(\"${GVCF.BED}\")\n         CHUNK = \"${GVCF.FILE}_${GVCF.CHR}.g.vcf\"\n\n         IN = file(\"${GVCF.FILE}\")\n\n         \"\"\"\n         ${params.sv_bin} ${params.sv_param} -V ${IN} -R ${REF} -L ${BED} -o ${CHUNK}\n\t \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\t CHR = \"${GVCF.CHR}\"\n\t BED = file(\"${GVCF.BED}\")\n         CHUNK = \"${GVCF.FILE}_${GVCF.CHR}.g.vcf\"\n\n         IN = file(\"${GVCF.FILE}\")\n\n         \"\"\"\n         ${params.sv_bin} ${params.sv_param} -V ${IN} -R ${REF} -L ${BED} -o ${CHUNK}\n\t \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "TIN"
        ],
        "tools_url": [
            "https://bio.tools/tin"
        ],
        "tools_dico": [
            {
                "name": "TIN",
                "uri": "https://bio.tools/tin",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2940",
                                    "term": "Scatter plot plotting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2940",
                                    "term": "Scatter chart plotting"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1669",
                                "term": "P-value"
                            },
                            {
                                "uri": "http://edamontology.org/data_2884",
                                "term": "Plot"
                            }
                        ]
                    }
                ],
                "description": "This package implements a set of tools for transcriptome instability analysis based on exon expression profiles. Deviating exon usage is studied in the context of splicing factors to analyse to what degree transcriptome instability is correlated to splicing factor expression. In the transcriptome instability correlation analysis, the data is compared to both random permutations of alternative splicing scores and expression of random gene sets.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/TIN.html"
            }
        ],
        "inputs": [
            "SampleData"
        ],
        "nb_inputs": 1,
        "outputs": [
            "splat"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'retry'",
            "maxRetries 2",
            "maxErrors 13",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.sv_cpu} --time=${params.sv_rt} --mem=${params.sv_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "genotype": {
        "name_process": "genotype",
        "string_process": "\nprocess genotype {\n\n\terrorStrategy 'retry'  \n        maxRetries 2\n        maxErrors 2\n\n        executor = \"${params.exe}\"\n        if (\"${params.exe}\" == \"slurm\")\n        {\n        \tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.gv_cpu} --time=${params.gv_rt} --mem=${params.gv_vmem}\"\n\t}\n\n        input:\n         set val(CHR), file(CHUNK) from merg_chrom\n\n        output:\n         file({ \"${CALLD}\" }) into called\n\n        script:\n\n         ALL_IN = CHUNK.collect { \"-V $it\" }.join(' ')\n         CALLD = \"${CHR}.vcf\"\n\n         \"\"\"\n         ${params.gv_bin} ${params.gv_param} ${ALL_IN} -R ${REF} -o ${CALLD}\n         \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "         ALL_IN = CHUNK.collect { \"-V $it\" }.join(' ')\n         CALLD = \"${CHR}.vcf\"\n\n         \"\"\"\n         ${params.gv_bin} ${params.gv_param} ${ALL_IN} -R ${REF} -o ${CALLD}\n         \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "merg_chrom"
        ],
        "nb_inputs": 1,
        "outputs": [
            "called"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'retry'",
            "maxRetries 2",
            "maxErrors 2",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.gv_cpu} --time=${params.gv_rt} --mem=${params.gv_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "bwa": {
        "name_process": "bwa",
        "string_process": "\nprocess bwa {\n\n\terrorStrategy 'finish'\t\n\n        executor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n        \tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.bwa_cpu} --time=${params.bwa_rt} --mem=${params.bwa_vmem}\"\n\t}\n\n        input:\n         val(RAW) from SampleData\n\n        output:\n         set val(ID), val(SID), file({ \"${MAP}\" }) into aligned\n\n        script:\n\n\t SID = \"${RAW.SID}\"\n\t ID = \"${RAW.RID}\"\n         RG = \"\\'@RG\\\\tID:${RAW.P1}\\\\tSM:${RAW.SID}\\\\tPL:ILLUMINA\\'\"\n         MAP = \"${RAW.RID}.sam\"\n\n         P1 = file(\"${RAW.P1}\")\n         P2 = file(\"${RAW.P2}\")\n\n         \"\"\"\n         ${params.bwa_bin} mem ${params.bwa_param} -M -R ${RG} ${REF} ${P1} ${P2} > ${MAP}\n\t \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\t SID = \"${RAW.SID}\"\n\t ID = \"${RAW.RID}\"\n         RG = \"\\'@RG\\\\tID:${RAW.P1}\\\\tSM:${RAW.SID}\\\\tPL:ILLUMINA\\'\"\n         MAP = \"${RAW.RID}.sam\"\n\n         P1 = file(\"${RAW.P1}\")\n         P2 = file(\"${RAW.P2}\")\n\n         \"\"\"\n         ${params.bwa_bin} mem ${params.bwa_param} -M -R ${RG} ${REF} ${P1} ${P2} > ${MAP}\n\t \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "org",
            "MAP",
            "CASP13",
            "P2S"
        ],
        "tools_url": [
            "https://bio.tools/org",
            "https://bio.tools/MAP",
            "https://bio.tools/CASP13",
            "https://bio.tools/p2s"
        ],
        "tools_dico": [
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            },
            {
                "name": "MAP",
                "uri": "https://bio.tools/MAP",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0108",
                            "term": "Protein expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3638",
                                    "term": "SILAC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Model-based analysis of proteomic data to detect proteins with significant abundance changes.\n\nMAP (Model-based Analysis of Proteomic data), is designed to statistically compare the proteomic profiles generated from different biological samples using the isotope labeling based mass spectrometry (MS) technique and directly identify proteins with significant abundance changes. Unlike many existing tools for this purpose, it does not require parallel/additional technical replicates to fathom technical variations; instead, MAP uses a novel step-by-step regression analysis to directly model technical variations from the profiles under comparison. Therefore, experimental designs and their expenses can be simplified and reduced for more practices",
                "homepage": "http://bioinfo.sibs.ac.cn/shaolab/MAP"
            },
            {
                "name": "CASP13",
                "uri": "https://bio.tools/CASP13",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "Nuclear magnetic resonance spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0474",
                                    "term": "Protein structure prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3215",
                                    "term": "Peak detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0321",
                                    "term": "Protein structure validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0320",
                                    "term": "Protein structure assignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3215",
                                    "term": "Peak assignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3215",
                                    "term": "Peak finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0321",
                                    "term": "Protein model validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Protein structure prediction assisted with sparse NMR data in CASP13.\n\n13th Community Wide Experiment on the.\n\nCritical Assessment of Techniques for Protein Structure Prediction.\n\nCASP13 provides an independent mechanism for the assessment of methods of protein structure modeling.\n\n||| NAME (CASP13) SIMILAR TO (PUB. DIFFERENT) bio.tools/casp (CASP).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'NMR-assisted'",
                "homepage": "http://www.predictioncenter.org/casp13/index.cgi"
            },
            {
                "name": "P2S",
                "uri": "https://bio.tools/p2s",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "P2S is a small utility program to convert formats from plink to sumstat and vice versa.The plink program uses the LINKAGE input format, which is a widely used format in genetic linkage and association analysis. The sumstat suite of programs has been developed using a different input format. Specifically, it lists each SNP on a separate input line (row) rather than an input column.",
                "homepage": "http://www.jurgott.org/linkage/p2s.html"
            }
        ],
        "inputs": [
            "SampleData"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aligned"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.bwa_cpu} --time=${params.bwa_rt} --mem=${params.bwa_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "sort": {
        "name_process": "sort",
        "string_process": "\nprocess sort {\n\n\terrorStrategy 'finish'\n\n        executor = \"${params.exe}\"\n        if (\"${params.exe}\" == \"slurm\")\n        {\n        \tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.srt_cpu} --time=${params.srt_rt} --mem=${params.srt_vmem}\"\n\t}\n\n        input:\n         set val(ID), val(SID), file(SAM) from aligned\n\n        output:\n         set val(ID), val(SID), file({ \"${SBAM}\" }) into sorted\n\n        script:\n\n         SBAM = \"${ID}.sorted.bam\"\n         del_sam = SAM.getName()\n\n         \"\"\"\n         ${params.srt_bin} INPUT=${SAM} OUTPUT=${SBAM} SORT_ORDER=coordinate\n         \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "         SBAM = \"${ID}.sorted.bam\"\n         del_sam = SAM.getName()\n\n         \"\"\"\n         ${params.srt_bin} INPUT=${SAM} OUTPUT=${SBAM} SORT_ORDER=coordinate\n         \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "aligned"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sorted"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.srt_cpu} --time=${params.srt_rt} --mem=${params.srt_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "rmdup": {
        "name_process": "rmdup",
        "string_process": "\nprocess rmdup {\n\n\terrorStrategy 'finish'\n\n        executor = \"${params.exe}\"\n        if (\"${params.exe}\" == \"slurm\")\n        {\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.ddp_cpu} --time=${params.ddp_rt} --mem=${params.ddp_vmem}\"\n\t}\n\n        input:\n         set val(SID), file(SBAM) from merg_sid\n\n        output:\n         set val(SID), file({ \"${RMDUP}\" }) into rmdup\n\n        script:\n\n\t ALL_IN = SBAM.collect { \"INPUT=$it\" }.join(' ')\n         RMDUP = \"${SID}.dedup.bam\"\n         RMET = \"${SID}.dedup.met\"\n                                    \n\n         \"\"\"\n         ${params.ddp_bin} ${ALL_IN} OUTPUT=${RMDUP} METRICS_FILE=${RMET}\n         \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\t ALL_IN = SBAM.collect { \"INPUT=$it\" }.join(' ')\n         RMDUP = \"${SID}.dedup.bam\"\n         RMET = \"${SID}.dedup.met\"\n                                    \n\n         \"\"\"\n         ${params.ddp_bin} ${ALL_IN} OUTPUT=${RMDUP} METRICS_FILE=${RMET}\n         \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BPRMeth"
        ],
        "tools_url": [
            "https://bio.tools/bprmeth"
        ],
        "tools_dico": [
            {
                "name": "BPRMeth",
                "uri": "https://bio.tools/bprmeth",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package uses the Binomial Probit Regression likelihood to model methylation profiles and extract higher order features. These features quantitate precisely notions of shape of a methylation profile. Using these higher order features across promoter-proximal regions, we construct a powerful predictor of gene expression. Also, these features are used to cluster proximal-promoter regions using the EM algorithm.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/BPRMeth.html"
            }
        ],
        "inputs": [
            "merg_sid"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rmdup"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.ddp_cpu} --time=${params.ddp_rt} --mem=${params.ddp_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "checkbam": {
        "name_process": "checkbam",
        "string_process": "\nprocess checkbam {\n\n\terrorStrategy 'ignore'\n\n\texecutor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.vb_cpu} --time=${params.vb_rt} --mem=${params.vb_vmem}\"\n\t}\n\n\n\tinput:\n\tset val(SID), file(RMDUP) from rmdup\n\n\toutput:\n\tset val(SID), file(RMDUP) into bchecked\n\n\tscript:\n\n\t\"\"\"\n\t${params.vb_bin} INPUT=${RMDUP} ${params.vb_param}\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\t\"\"\"\n\t${params.vb_bin} INPUT=${RMDUP} ${params.vb_param}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "rmdup"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bchecked"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'ignore'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.vb_cpu} --time=${params.vb_rt} --mem=${params.vb_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n\n\terrorStrategy 'finish'\n\n        executor = \"${params.exe}\"\n        if (\"${params.exe}\" == \"slurm\")\n        {\n\t        clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.idx_cpu} --time=${params.idx_rt} --mem=${params.idx_vmem}\"\n\t}\n\n\n        input:\n         set val(SID), file(RMDUP) from bchecked\n\n        output:\n         set val(SID), file({ \"${RMDUP}\" }), file({ \"${BAI}\" }) into index\n\n        script:\n\n         BAI = \"${SID}.dedup.bai\"\n\n         \"\"\"\n         ${params.idx_bin} INPUT=${RMDUP} OUTPUT=${BAI}\n         \"\"\"\n\n}",
        "nb_lignes_process": 25,
        "string_script": "         BAI = \"${SID}.dedup.bai\"\n\n         \"\"\"\n         ${params.idx_bin} INPUT=${RMDUP} OUTPUT=${BAI}\n         \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BAIT"
        ],
        "tools_url": [
            "https://bio.tools/bait"
        ],
        "tools_dico": [
            {
                "name": "BAIT",
                "uri": "https://bio.tools/bait",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BAIT (Bioinformatic Analysis of Inherited Templates) is a software to create strand inheritance plots in data derived from the Strand-Seq sequencing protocol. The software is designed to be flexible with a range of species, and basic template folders can called to read in species-specific data.",
                "homepage": "http://sourceforge.net/projects/bait/"
            }
        ],
        "inputs": [
            "bchecked"
        ],
        "nb_inputs": 1,
        "outputs": [
            "index"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.idx_cpu} --time=${params.idx_rt} --mem=${params.idx_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "haplocall": {
        "name_process": "haplocall",
        "string_process": "\nprocess haplocall {\n\n\terrorStrategy 'finish'\n\n\texecutor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.hc_cpu} --time=${params.hc_rt} --mem=${params.hc_vmem}\"\n\t}\n\n \tinput:\n \tset val(SID), file(RMDUP), file(BAI) from index\n \n \toutput:\n \tfile{ \"${CALL}\" } into called\n \n \tscript:\n \t\n \tCALL = \"${SID}.g.vcf\"\n \n \t\"\"\"\n \t${params.hc_bin} ${params.hc_param} -R ${REF} -I ${RMDUP} -o ${CALL}\t\n \t\"\"\"\n \n}",
        "nb_lignes_process": 24,
        "string_script": " \tCALL = \"${SID}.g.vcf\"\n \n \t\"\"\"\n \t${params.hc_bin} ${params.hc_param} -R ${REF} -I ${RMDUP} -o ${CALL}\t\n \t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "QCALL"
        ],
        "tools_url": [
            "https://bio.tools/qcall"
        ],
        "tools_dico": [
            {
                "name": "QCALL",
                "uri": "https://bio.tools/qcall",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "SNP detection and genotyping from low-coverage sequencing data on multiple diploid samples.",
                "homepage": "http://www.sanger.ac.uk/"
            }
        ],
        "inputs": [
            "index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "called"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.hc_cpu} --time=${params.hc_rt} --mem=${params.hc_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "checkvcf": {
        "name_process": "checkvcf",
        "string_process": "\nprocess checkvcf {\n\n\terrorStrategy 'ignore'\n\n\texecutor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.vv_cpu} --time=${params.vv_rt} --mem=${params.vv_vmem}\"\n\t}\n\n\tinput:\n\tfile(CALL) from called\n\t\n\toutput:\n\tfile(CALL) into vchecked\n\n\tscript:\n\n\t\"\"\"\n\t${params.vv_bin} ${params.vv_param} -R ${REF} -V ${CALL}\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\t\"\"\"\n\t${params.vv_bin} ${params.vv_param} -R ${REF} -V ${CALL}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "called"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vchecked"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'ignore'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.vv_cpu} --time=${params.vv_rt} --mem=${params.vv_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "combine": {
        "name_process": "combine",
        "string_process": "\nprocess combine {\n \n\terrorStrategy 'finish'\n\n \texecutor = \"${params.exe}\"\n \tif (\"${params.exe}\" == \"slurm\")\n \t{\n \t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.cg_cpu} --time=${params.cg_rt} --mem=${params.cg_vmem}\"\n \t}\n\n\tinput:\n\tfile(CALL) from listed\n\n\toutput:\n\tfile( \"${COMB}\" ) into combined\n\n\tscript:\n\n\tCOMB_IN = CALL.collect { \"--variant $it\" }.join(' ')\n\tBATCH = DAT.baseName\n\tCOMB = \"${BATCH}_combined.g.vcf\"\n\n\t\"\"\"\n\t${params.cg_bin} -R ${REF} ${COMB_IN} -o ${COMB}\n\t\"\"\"\n\t\n}",
        "nb_lignes_process": 26,
        "string_script": "\tCOMB_IN = CALL.collect { \"--variant $it\" }.join(' ')\n\tBATCH = DAT.baseName\n\tCOMB = \"${BATCH}_combined.g.vcf\"\n\n\t\"\"\"\n\t${params.cg_bin} -R ${REF} ${COMB_IN} -o ${COMB}\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BatchQC",
            "xComb"
        ],
        "tools_url": [
            "https://bio.tools/batchqc",
            "https://bio.tools/xcomb"
        ],
        "tools_dico": [
            {
                "name": "BatchQC",
                "uri": "https://bio.tools/batchqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequencing and microarray samples often are collected or processed in multiple batches or at different times. This can produce technical biases that can lead to incorrect results. This is a software tool that streamlines batch preprocessing and evaluation by providing interactive diagnostics, visualizations, and statistical analyses to explore the extent to which batch variation impacts the data. Its diagnostics help determine if batch adjustment is needed, and how correction should be applied.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/BatchQC.html"
            },
            {
                "name": "xComb",
                "uri": "https://bio.tools/xcomb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2406",
                                    "term": "Protein structure analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2406",
                                    "term": "Structure analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Interogate protein-protein interactions and protein structure using cross-links FASTA databases.",
                "homepage": "https://goodlett.umaryland.edu/xcomb.php"
            }
        ],
        "inputs": [
            "listed"
        ],
        "nb_inputs": 1,
        "outputs": [
            "combined"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.cg_cpu} --time=${params.cg_rt} --mem=${params.cg_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "compress": {
        "name_process": "compress",
        "string_process": "\nprocess compress {\n\n\terrorStrategy 'finish'\n\n\texecutor = \"${params.exe}\" \t\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.bg_cpu} --time=${params.bg_rt} --mem=${params.bg_vmem}\"\n\t}\n\n        input:\n        file(CALL) from called_bzip\n\n        output:\n        file( \"${BZIP}\" ) into bzipped\n\n        script:\n\n        BZIP = \"${CALL}.gz\"\n\n        \"\"\"\n        ${params.bg_bin} ${params.bg_param} ${CALL} > ${BZIP}\n\t\"\"\"\n\n\n}",
        "nb_lignes_process": 25,
        "string_script": "        BZIP = \"${CALL}.gz\"\n\n        \"\"\"\n        ${params.bg_bin} ${params.bg_param} ${CALL} > ${BZIP}\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "called_bzip"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bzipped"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.bg_cpu} --time=${params.bg_rt} --mem=${params.bg_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "tabix": {
        "name_process": "tabix",
        "string_process": "\nprocess tabix {\n\n\terrorStrategy 'finish'\n\n\texecutor = \"${params.exe}\"\n\tif (\"${params.exe}\" == \"slurm\")\n\t{\n\t\tclusterOptions = \"--qos=cpuplus --cpus-per-task=${params.tx_cpu} --time=${params.tx_rt} --mem=${params.tx_vmem}\"\n\t}\n\n        input:\n        file(BZIP) from bzip_tab\n\n        output:\n        file( \"${TAB}\" ) into tabixed\n\n        script:\n        TAB = \"${BZIP}.tbi\"\n\n        \"\"\"\n        ${params.tx_bin} ${params.tx_param} ${BZIP}\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        TAB = \"${BZIP}.tbi\"\n\n        \"\"\"\n        ${params.tx_bin} ${params.tx_param} ${BZIP}\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Taba"
        ],
        "tools_url": [
            "https://bio.tools/Taba"
        ],
        "tools_dico": [
            {
                "name": "Taba",
                "uri": "https://bio.tools/Taba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Tool to Analyze the Binding Affinity | Taba: Tool to Analyze Binding Affinity | Taba is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. You can use a higher version as well",
                "homepage": "https://github.com/azevedolab/taba"
            }
        ],
        "inputs": [
            "bzip_tab"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tabixed"
        ],
        "nb_outputs": 1,
        "name_workflow": "grafau__NextGatkSNPs",
        "directive": [
            "errorStrategy 'finish'",
            "executor = \"${params.exe}\" if (\"${params.exe}\" == \"slurm\") { clusterOptions = \"--qos=cpuplus --cpus-per-task=${params.tx_cpu} --time=${params.tx_rt} --mem=${params.tx_vmem}\" }"
        ],
        "when": "",
        "stub": ""
    }
}