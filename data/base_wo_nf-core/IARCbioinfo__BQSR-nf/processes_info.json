{
    "base_quality_score_recalibration": {
        "name_process": "base_quality_score_recalibration",
        "string_process": "\nprocess base_quality_score_recalibration {\n    cpus params.cpu\n    memory params.mem+'G'\n    tag { file_tag }\n    \n    publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*bam*\"\n    publishDir \"$params.output_folder/QC/BAM/BQSR/\", mode: 'copy',\n\tsaveAs: {filename -> \n\t\tif (filename.indexOf(\"table\") > 0) \"$filename\"\n\t\telse if (filename.indexOf(\"plots\") > 0) \"$filename\"\n\t\telse null\n\t}\n\n    input:\n    set file(bam), file(bai) from bam_bai_files\n    file known_snps\n    file known_snps_index\n    file known_indels\n    file known_indels_index\n    file ref\n    file ref_fai\n    file ref_dict\n\n    output:\n    file(\"*_recal.table\") into recal_table_files\n    file(\"*plots.pdf\") into recal_plots_files\n    set val(file_tag_new), file(\"${file_tag_new}.bam\"), file(\"${file_tag_new}.bam.bai\") into final_bam_bai_files\n\n    shell:\n    file_tag=bam.baseName\n    file_tag_new=file_tag+'_BQSRecalibrated'\n    '''\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag}_recal.table\n    gatk ApplyBQSR --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag}.bam --bqsr-recal-file !{file_tag}_recal.table -O !{file_tag_new}.bam\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag_new}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag_new}_recal.table\t\t\n    gatk AnalyzeCovariates --java-options \"-Xmx!{params.mem}G\" -before !{file_tag}_recal.table -after !{file_tag_new}_recal.table -plots !{file_tag_new}_recalibration_plots.pdf\t\n    mv !{file_tag_new}.bai !{file_tag_new}.bam.bai\n    '''\n}",
        "nb_lignes_process": 38,
        "string_script": "    file_tag=bam.baseName\n    file_tag_new=file_tag+'_BQSRecalibrated'\n    '''\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag}_recal.table\n    gatk ApplyBQSR --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag}.bam --bqsr-recal-file !{file_tag}_recal.table -O !{file_tag_new}.bam\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem}G\" -R !{ref} -I !{file_tag_new}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag_new}_recal.table\t\t\n    gatk AnalyzeCovariates --java-options \"-Xmx!{params.mem}G\" -before !{file_tag}_recal.table -after !{file_tag_new}_recal.table -plots !{file_tag_new}_recalibration_plots.pdf\t\n    mv !{file_tag_new}.bai !{file_tag_new}.bam.bai\n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam_bai_files",
            "known_snps",
            "known_snps_index",
            "known_indels",
            "known_indels_index",
            "ref",
            "ref_fai",
            "ref_dict"
        ],
        "nb_inputs": 8,
        "outputs": [
            "recal_table_files",
            "recal_plots_files",
            "final_bam_bai_files"
        ],
        "nb_outputs": 3,
        "name_workflow": "IARCbioinfo__BQSR-nf",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { file_tag }",
            "publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*bam*\"",
            "publishDir \"$params.output_folder/QC/BAM/BQSR/\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"table\") > 0) \"$filename\" else if (filename.indexOf(\"plots\") > 0) \"$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc_final": {
        "name_process": "multiqc_final",
        "string_process": "\nprocess multiqc_final {\n    cpus 2\n    memory '1G'\n\n    publishDir \"${params.output_folder}/QC/BAM/\", mode: 'copy'\n\n    input:\n    file BQSR_results from recal_table_files.collect()\n    file BQSR_results_plots from recal_plots_files.collect()\n    file multiqc_config from ch_config_for_multiqc    \n\n    output:\n    file(\"*report.html\") into final_output\n    file(\"multiqc_BQSR_report_data/\") into final_output_data\n\n    shell:\n    if( multiqc_config.name=='NO_FILE' ){\n        opt = \"\"\n    }else{\n        opt = \"--config ${multiqc_config}\"\n    }\n    '''\n    multiqc . -n multiqc_BQSR_report.html -m gatk !{opt} --comment \"GATK base quality score recalibration QC report\"\n    '''\n}",
        "nb_lignes_process": 24,
        "string_script": "    if( multiqc_config.name=='NO_FILE' ){\n        opt = \"\"\n    }else{\n        opt = \"--config ${multiqc_config}\"\n    }\n    '''\n    multiqc . -n multiqc_BQSR_report.html -m gatk !{opt} --comment \"GATK base quality score recalibration QC report\"\n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "OptiJ",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/OptiJ",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "OptiJ",
                "uri": "https://bio.tools/OptiJ",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RNA immunoprecipitation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "CT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Computed tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "TDM"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RIP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source optical projection tomography of large organ samples.\n\nThe three-dimensional imaging of mesoscopic samples with Optical Projection Tomography (OPT) has become a powerful tool for biomedical phenotyping studies. OPT uses visible light to visualize the 3D morphology of large transparent samples. To enable a wider application of OPT, we present OptiJ, a low-cost, fully open-source OPT system capable of imaging large transparent specimens up to 13 mm tall and 8 mm deep with 50 \u00b5m resolution. OptiJ is based on off-the-shelf, easy-to-assemble optical components and an ImageJ plugin library for OPT data reconstruction. The software includes novel correction routines for uneven illumination and sample jitter in addition to CPU GPU accelerated reconstruction for large datasets. We demonstrate the use of OptiJ to image and reconstruct cleared lung lobes from adult mice.",
                "homepage": "https://lag-opt.github.io/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "recal_table_files",
            "recal_plots_files",
            "ch_config_for_multiqc"
        ],
        "nb_inputs": 3,
        "outputs": [
            "final_output",
            "final_output_data"
        ],
        "nb_outputs": 2,
        "name_workflow": "IARCbioinfo__BQSR-nf",
        "directive": [
            "cpus 2",
            "memory '1G'",
            "publishDir \"${params.output_folder}/QC/BAM/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}