{
    "mixcr_analyze": {
        "name_process": "mixcr_analyze",
        "string_process": "\nprocess mixcr_analyze {\n    cpus \"$params.cpus\"\n    memory \"$params.memory\"\n    time \"$params.time\"\n\n    tag \"$SampleID\"\n    label \"mixcr\"\n\n    publishDir \"$params.outdir/01_MiXCR\",\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    tuple val(SampleID), file(R1), file(R2)\n\n    output:\n    path(\"${SampleID}.clonotypes.ALL.txt\"), emit: all_clonotypes\n    path(\"${SampleID}.report\"), emit: full_report\n    path(\"${SampleID}.report0[0-4]\"), emit: full_report_chunks\n\n    script:\n    \"\"\"\n    mixcr analyze shotgun -t $task.cpus --species $params.specie --starting-material rna --only-productive \\\n    --align \"-OsaveOriginalReads=true\" \\\n    ${R1} ${R2} ${SampleID}\n    csplit -f ${SampleID}.report ${SampleID}.report '/^==/' '{*}' > mixcr_qc.log\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    mixcr analyze shotgun -t $task.cpus --species $params.specie --starting-material rna --only-productive \\\n    --align \"-OsaveOriginalReads=true\" \\\n    ${R1} ${R2} ${SampleID}\n    csplit -f ${SampleID}.report ${SampleID}.report '/^==/' '{*}' > mixcr_qc.log\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MiXCR",
            "scSplit"
        ],
        "tools_url": [
            "https://bio.tools/MiXCR",
            "https://bio.tools/scSplit"
        ],
        "tools_dico": [
            {
                "name": "MiXCR",
                "uri": "https://bio.tools/MiXCR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Software for extraction of T- and B-cell receptor repertoires from any type of sequencing data.",
                "homepage": "https://milaboratory.com/software/mixcr/"
            },
            {
                "name": "scSplit",
                "uri": "https://bio.tools/scSplit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3200",
                                    "term": "DNA barcoding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3200",
                                    "term": "Sample barcoding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3200",
                                    "term": "Community profiling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genotype-free demultiplexing of pooled single-cell RNA-seq.\n\nGenotype-free demultiplexing of pooled single-cell RNA-Seq, using a hidden state model for identifying genetically distinct samples within a mixed population.\n\nData included in the paper for scSplit.\n\nIt has been tested on up to 8 real mixed samples (10X pipeline), and up to 32 mixed simulated samples.\n\n\"git clone https://github.com/jon-xu/scSplit\" or \"pip install scSplit\".\n\n\"scSplit_result.csv\": barcodes assigned to each of the N+1 cluster (N singlets and 1 doublet cluster), doublet marked as DBL-<n> (n stands for the cluster number)",
                "homepage": "https://github.com/jon-xu/scSplit"
            }
        ],
        "inputs": [
            "SampleID",
            "R1",
            "R2"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "cpus \"$params.cpus\"",
            "memory \"$params.memory\"",
            "time \"$params.time\"",
            "tag \"$SampleID\"",
            "label \"mixcr\"",
            "publishDir \"$params.outdir/01_MiXCR\" , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "mixcr_qc": {
        "name_process": "mixcr_qc",
        "string_process": "\nprocess mixcr_qc {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/01_MiXCR\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"TCRanalysis_bookdown/*\"), emit: qc_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/01_mixcr_qc.Rmd',\n    params=list(\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/01_mixcr_qc.Rmd',\n    params=list(\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/01_MiXCR\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "data_filtering": {
        "name_process": "data_filtering",
        "string_process": "\nprocess data_filtering {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/02_DataFiltering\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"clones_*\"), emit: filt_clones\n    path(\"TCRanalysis_bookdown/*\"), emit: filt_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/02_datafiltering.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/02_datafiltering.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/02_DataFiltering\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "dataset_overview": {
        "name_process": "dataset_overview",
        "string_process": "\nprocess dataset_overview {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/03_DatasetOverview\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir1)\n    path(inputDir2)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"03_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: overview_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/03_dataset_overview.Rmd',\n    params=list(\n        'inputDir1'=here,\n        'inputDir2'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/03_dataset_overview.Rmd',\n    params=list(\n        'inputDir1'=here,\n        'inputDir2'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir1",
            "inputDir2",
            "sampleInfo"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/03_DatasetOverview\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "correlations": {
        "name_process": "correlations",
        "string_process": "\nprocess correlations {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/04_Correlations\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"04_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: corr_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/04_correlations.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/04_correlations.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/04_Correlations\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "overlap": {
        "name_process": "overlap",
        "string_process": "\nprocess overlap {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/05_Overlap\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"05_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: overlap_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/05_overlap.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/05_overlap.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/05_Overlap\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "diversity": {
        "name_process": "diversity",
        "string_process": "\nprocess diversity {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/06_Diversity\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"06_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: diversity_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/06_diversity.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/06_diversity.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/06_Diversity\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "kmers": {
        "name_process": "kmers",
        "string_process": "\nprocess kmers {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/07_Kmers\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"07_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: kmers_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/07_kmers.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/07_kmers.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/07_Kmers\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "network": {
        "name_process": "network",
        "string_process": "\nprocess network {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/08_Network\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n\n    output:\n    path(\"*.html\")\n    path(\"08_*Rda\")\n    path(\"TCRanalysis_bookdown/*\"), emit: network_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/08_network.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/08_network.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/08_Network\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "ddbb": {
        "name_process": "ddbb",
        "string_process": "\nprocess ddbb {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir/09_Databases\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    publishDir \"$params.outdir/TCRanalysis_bookdown/\",\n        pattern: 'TCRanalysis_bookdown/*',\n        saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')},\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputDir)\n    path(sampleInfo)\n    path(mcpas)\n    path(vdjdb)\n\n    output:\n    path(\"*.html\")\n    path(\"TCRanalysis_bookdown/*\"), emit: ddbb_bookdown\n\n    script:\n    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/09_ddbb.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'mcpas'='${mcpas}',\n        'vdjdb'='${vdjdb}',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}',\n        'specie'='${params.specie}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    \"\"\"\n    Rscript -e \"here<-getwd();rmarkdown::render('${projectDir}/scripts/09_ddbb.Rmd',\n    params=list(\n        'inputDir'=here,\n        'workDir'=here,\n        'outputDir'='TCRanalysis_bookdown',\n        'mcpas'='${mcpas}',\n        'vdjdb'='${vdjdb}',\n        'sampleInfo'='${sampleInfo}',\n        'chain'='${params.chain}',\n        'specie'='${params.specie}'),\n    'output_dir'= here, 'knit_root_dir'=here, quiet=TRUE)\"\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputDir",
            "sampleInfo",
            "mcpas",
            "vdjdb"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir/09_Databases\" , pattern: '*' , mode: 'copy' , overwrite: true",
            "publishDir \"$params.outdir/TCRanalysis_bookdown/\" , pattern: 'TCRanalysis_bookdown/*' , saveAs: { filename -> filename.replaceFirst('TCRanalysis_bookdown/','')} , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "report": {
        "name_process": "report",
        "string_process": "\nprocess report {\n\n    label 'mhecd4tcr'\n\n    publishDir \"$params.outdir\",\n        pattern: '*',\n        mode: 'copy',\n        overwrite: true\n\n    input:\n    path(inputs)\n    path(report_rmd)\n\n    output:\n    path(\"*.html\")\n\n    script:\n    \"\"\"\n    Rscript -e \"bookdown::render_book(\n                    input='${report_rmd}',\n                    params=list(\n                        'inputDir'=getwd(),\n                        'chain'='${params.chain}',\n                        'specie'='${params.specie}'))\"\n    mv _main.html final-report_${params.chain}.html\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    Rscript -e \"bookdown::render_book(\n                    input='${report_rmd}',\n                    params=list(\n                        'inputDir'=getwd(),\n                        'chain'='${params.chain}',\n                        'specie'='${params.specie}'))\"\n    mv _main.html final-report_${params.chain}.html\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inputs",
            "report_rmd"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ConesaLab__TCR_nextflow",
        "directive": [
            "label 'mhecd4tcr'",
            "publishDir \"$params.outdir\" , pattern: '*' , mode: 'copy' , overwrite: true"
        ],
        "when": "",
        "stub": ""
    }
}