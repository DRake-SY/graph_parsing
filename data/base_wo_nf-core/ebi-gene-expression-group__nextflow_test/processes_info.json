{
    "extract_number": {
        "name_process": "extract_number",
        "string_process": "\nprocess extract_number {\n\n    input:\n        file csvFile from TEST\n\n    output:\n        set stdout, file (csvFile) into TEST_BY_NUM\n\n    \"\"\"\n       echo $csvFile | grep -o -E '[0-9]+' | tr -d \"\\\\n\"\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n       echo $csvFile | grep -o -E '[0-9]+' | tr -d \"\\\\n\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "TEST"
        ],
        "nb_inputs": 1,
        "outputs": [
            "TEST_BY_NUM"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__nextflow_test",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "test_to_tsv": {
        "name_process": "test_to_tsv",
        "string_process": "\nprocess test_to_tsv {\n\n    publishDir \"test\", mode: 'move', overwrite: true\n\n    input:\n        set val(num), file(csvFile) from TEST_BY_NUM\n\n    output:\n        set val(num), file (\"test_${num}.tsv\") into FINAL\n\n    \"\"\"\n    cat $csvFile | sed 's/,/\\t/g' > test_${num}.tsv\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    cat $csvFile | sed 's/,/\\t/g' > test_${num}.tsv\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "TEST_BY_NUM"
        ],
        "nb_inputs": 1,
        "outputs": [
            "FINAL"
        ],
        "nb_outputs": 1,
        "name_workflow": "ebi-gene-expression-group__nextflow_test",
        "directive": [
            "publishDir \"test\", mode: 'move', overwrite: true"
        ],
        "when": "",
        "stub": ""
    }
}