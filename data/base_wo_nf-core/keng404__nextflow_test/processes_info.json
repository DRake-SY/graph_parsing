{
    "unzip": {
        "name_process": "unzip",
        "string_process": " process unzip {\n        publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false\n\n        input:\n        set val(pattern), file(reads) from input_data\n\n        output:\n        set val(pattern), \"unzipped_{1,2}.fastq\" into raw_reads\n\n        script:\n        if(params.single_end)\n            \"\"\"\n            zcat ${reads[0]} > unzipped_1.fastq\n            \"\"\"\n        else\n            \"\"\"\n            zcat ${reads[0]} > unzipped_1.fastq\n            zcat ${reads[1]} > unzipped_2.fastq\n            \"\"\"\n    }",
        "nb_lignes_process": 18,
        "string_script": "        if(params.single_end)\n            \"\"\"\n            zcat ${reads[0]} > unzipped_1.fastq\n            \"\"\"\n        else\n            \"\"\"\n            zcat ${reads[0]} > unzipped_1.fastq\n            zcat ${reads[1]} > unzipped_2.fastq\n            \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raw_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "remap_to_hla": {
        "name_process": "remap_to_hla",
        "string_process": " process remap_to_hla {\n        label 'process_medium'\n        publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false\n        input:\n        path(data_index) from params.base_index_path\n        set val(pattern), file(bams) from input_data\n        output:\n        set val(pattern), \"mapped_{1,2}.sorted.bam\" into fished_reads\n        file(\"mapped_{1,2}.sorted.bam.bai\") into fished_reads_bai\n        script:\n        def full_index = \"$data_index/$base_index_name\"\n        if (params.single_end)\n            \"\"\"\n            samtools bam2fq $bams > output_1.fastq\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index output_1.fastq > output_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -b1 output_1.bam > mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam\n            samtools index mapped_1.sorted.bam\n            \"\"\"\n        else\n            \"\"\"\n            samtools view -@ ${task.cpus} -h -f 0x40 $bams > output_1.bam\n            samtools view -@ ${task.cpus} -h -f 0x80 $bams > output_2.bam\n            samtools bam2fq output_1.bam > output_1.fastq\n            samtools bam2fq output_2.bam > output_2.fastq\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index output_1.fastq output_2.fastq > output.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x40 -b1 output.bam > mapped_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x80 -b1 output.bam > mapped_2.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam \n            samtools sort -@ ${task.cpus} -o mapped_2.sorted.bam mapped_2.bam\n            samtools index mapped_1.sorted.bam mapped_1.sorted.bam.bai\n            samtools index mapped_2.sorted.bam mapped_2.sorted.bam.bai\n            \"\"\"\n    }",
        "nb_lignes_process": 32,
        "string_script": "        def full_index = \"$data_index/$base_index_name\"\n        if (params.single_end)\n            \"\"\"\n            samtools bam2fq $bams > output_1.fastq\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index output_1.fastq > output_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -b1 output_1.bam > mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam\n            samtools index mapped_1.sorted.bam\n            \"\"\"\n        else\n            \"\"\"\n            samtools view -@ ${task.cpus} -h -f 0x40 $bams > output_1.bam\n            samtools view -@ ${task.cpus} -h -f 0x80 $bams > output_2.bam\n            samtools bam2fq output_1.bam > output_1.fastq\n            samtools bam2fq output_2.bam > output_2.fastq\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index output_1.fastq output_2.fastq > output.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x40 -b1 output.bam > mapped_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x80 -b1 output.bam > mapped_2.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam \n            samtools sort -@ ${task.cpus} -o mapped_2.sorted.bam mapped_2.bam\n            samtools index mapped_1.sorted.bam mapped_1.sorted.bam.bai\n            samtools index mapped_2.sorted.bam mapped_2.sorted.bam.bai\n            \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "params",
            "input_data"
        ],
        "nb_inputs": 2,
        "outputs": [
            "fished_reads",
            "fished_reads_bai"
        ],
        "nb_outputs": 2,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "label 'process_medium'",
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "make_ot_config": {
        "name_process": "make_ot_config",
        "string_process": "\nprocess make_ot_config {\n    publishDir \"${params.outdir}/config\", mode: params.publish_dir_mode\n\n    output:\n    file 'config.ini' into config\n\n    script:\n    \"\"\"\n    configbuilder --max-cpus ${params.max_cpus} --solver ${params.solver} > config.ini\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "    \"\"\"\n    configbuilder --max-cpus ${params.max_cpus} --solver ${params.solver} > config.ini\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "config"
        ],
        "nb_outputs": 1,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}/config\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "pre_map_hla": {
        "name_process": "pre_map_hla",
        "string_process": " process pre_map_hla {\n        label 'process_medium'\n        publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false\n        input:\n        path(data_index) from params.base_index_path\n        set val(pattern), file(reads) from raw_reads\n\n        output:\n        set val(pattern), \"mapped_{1,2}.sorted.bam\" into fished_reads\n        file(\"mapped_{1,2}.sorted.bam.bai\") into fished_reads_bai\n        script:\n        def full_index = \"$data_index/$base_index_name\"\n        if (params.single_end)\n            \"\"\"\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index $reads > output_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -b1 output_1.bam > mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam \n            samtools index mapped_1.sorted.bam \n            \"\"\"\n        else\n            \"\"\"\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index $reads > output.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x40 -b1 output.bam > mapped_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x80 -b1 output.bam > mapped_2.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_2.sorted.bam mapped_2.bam \n            samtools index mapped_1.sorted.bam mapped_1.sorted.bam.bai\n            samtools index mapped_2.sorted.bam mapped_2.sorted.bam.bai\n            \"\"\"\n    }",
        "nb_lignes_process": 28,
        "string_script": "        def full_index = \"$data_index/$base_index_name\"\n        if (params.single_end)\n            \"\"\"\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index $reads > output_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -b1 output_1.bam > mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam \n            samtools index mapped_1.sorted.bam \n            \"\"\"\n        else\n            \"\"\"\n            yara_mapper -e 3 -t ${task.cpus} -f bam $full_index $reads > output.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x40 -b1 output.bam > mapped_1.bam\n            samtools view -@ ${task.cpus} -h -F 4 -f 0x80 -b1 output.bam > mapped_2.bam\n            samtools sort -@ ${task.cpus} -o mapped_1.sorted.bam mapped_1.bam\n            samtools sort -@ ${task.cpus} -o mapped_2.sorted.bam mapped_2.bam \n            samtools index mapped_1.sorted.bam mapped_1.sorted.bam.bai\n            samtools index mapped_2.sorted.bam mapped_2.sorted.bam.bai\n            \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "params",
            "raw_reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "fished_reads",
            "fished_reads_bai"
        ],
        "nb_outputs": 2,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "label 'process_medium'",
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "run_optitype": {
        "name_process": "run_optitype",
        "string_process": "\nprocess run_optitype {\n    publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false\n    input:\n    file 'config.ini' from config\n    set val(pattern), file(reads) from fished_reads\n    file(reads_index) from fished_reads_index\n\n    output:\n    file \"${pattern}*\" into optitype_results_ch\n\n    script:\n    \"\"\"\n    OptiTypePipeline.py -i ${reads} -e ${params.enumerations} -b ${params.beta} \\\\\n        -p \"${pattern}\" -c config.ini --${params.seqtype} --outdir \\$PWD\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    OptiTypePipeline.py -i ${reads} -e ${params.enumerations} -b ${params.beta} \\\\\n        -p \"${pattern}\" -c config.ini --${params.seqtype} --outdir \\$PWD\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "config",
            "fished_reads",
            "fished_reads_index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "optitype_results_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}\", mode: params.publish_dir_mode\n\n    input:\n    file output_docs from ch_output_docs\n    file images from ch_output_docs_images\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs",
            "ch_output_docs_images"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}\", mode: params.publish_dir_mode,\n        saveAs: { filename ->\n                      if (filename.indexOf(\".csv\") > 0) filename\n                      else null\n                }\n\n    output:\n    file 'software_versions_mqc.yaml' into ch_software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    yara_mapper --help  &> v_yara.txt 2>&1 || true\n    cat \\$(which OptiTypePipeline.py) &> v_optitype.txt 2>&1 ||\u00a0true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    multiqc --version &> v_multiqc.txt 2>&1 || true\n    samtools --version &> v_samtools.txt 2>&1 || true\n    yara_mapper --help  &> v_yara.txt 2>&1 || true\n    cat \\$(which OptiTypePipeline.py) &> v_optitype.txt 2>&1 ||\u00a0true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "MultiQC",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/multiqc",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}\", mode: params.publish_dir_mode\n\n    input:\n    file (multiqc_config) from ch_multiqc_config\n    file mqc_custom_config from ch_multiqc_custom_config.collect().ifEmpty([])\n    file ('software_versions/*') from ch_software_versions_yaml.collect()\n    file workflow_summary from ch_workflow_summary.collectFile(name: \"workflow_summary_mqc.yaml\")\n\n    output:\n    file \"*multiqc_report.html\" into ch_multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file .\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file .\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "ch_multiqc_custom_config",
            "ch_software_versions_yaml",
            "ch_workflow_summary"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "keng404__nextflow_test",
        "directive": [
            "publishDir \"${params.outdir}\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    }
}