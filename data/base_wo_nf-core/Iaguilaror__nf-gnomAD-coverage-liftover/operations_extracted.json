{
    "OPERATION_1": {
        "string": "Channel\n  .fromPath(\"${params.covfile}\")\n  .into{ covfile_input; again_covfile_input }",
        "origin": [
            [
                "\"${params.covfile}\"",
                "A"
            ]
        ],
        "gives": [
            [
                "covfile_input",
                "P"
            ],
            [
                "again_covfile_input",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pre1_split_data}/*\")\n\t.toList()\n\t.set{ mkfiles_pre1 }",
        "origin": [
            [
                "\"${module_mk_pre1_split_data}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pre1",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t.fromPath(\"${module_mk_001_tsv2bed}/*\")\n\t.toList()\n\t.set{ mkfiles_001 }",
        "origin": [
            [
                "\"${module_mk_001_tsv2bed}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_001",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n\t.fromPath( \"${params.chainfile}\", checkIfExists: true)\n\t.combine(results_001_tsv2bed)\n\t.set{ liftover_inputs }",
        "origin": [
            [
                "results_001_tsv2bed",
                "P"
            ],
            [
                "\"${params.chainfile}\", checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "liftover_inputs",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n\t.fromPath(\"${module_mk_002_liftover}/*\")\n\t.toList()\n\t.set{ mkfiles_002 }",
        "origin": [
            [
                "\"${module_mk_002_liftover}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_002",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel\n\t.fromPath(\"${module_mk_003_sort_compress}/*\")\n\t.toList()\n\t.set{ mkfiles_003 }",
        "origin": [
            [
                "\"${module_mk_003_sort_compress}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_003",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "Channel\n\t.fromPath(\"${module_mk_pos1_count_lifted_positions}/*\")\n\t.toList()\n\t.set{ mkfiles_pos1 }",
        "origin": [
            [
                "\"${module_mk_pos1_count_lifted_positions}/*\"",
                "A"
            ]
        ],
        "gives": [
            [
                "mkfiles_pos1",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "nfsummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "nfsummary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_9": {
        "string": "pipelinesummary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "pipelinesummary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_10": {
        "string": "results_002_liftover\n\t.toList()\n\t.set{ all_chunks_002 }",
        "origin": [
            [
                "results_002_liftover",
                "P"
            ]
        ],
        "gives": [
            [
                "all_chunks_002",
                "P"
            ]
        ]
    }
}