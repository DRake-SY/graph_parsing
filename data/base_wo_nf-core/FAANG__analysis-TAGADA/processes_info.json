{
    "TAGADA_estimate_reads": {
        "name_process": "TAGADA_estimate_reads",
        "string_process": "process TAGADA_estimate_reads {\n\n  input:\n    tuple val(prefix), path(bam), path(annotation)\n\n  output:\n    tuple val(prefix), path(bam), env(length), env(direction)\n\n  shell:\n    '''\n    length=$(\n      samtools view !{bam} \\\\\n      | head -n 10000 \\\\\n      | awk '{total += length($10)} END {print int(total/NR)}'\n    )\n\n    proportions=($(infer_library_type.sh !{bam} !{annotation}))\n\n    direction=$(\n      awk \\\\\n        -v fr=${proportions[0]} \\\\\n        -v rf=${proportions[1]} \\\\\n        'BEGIN {\n          difference = int(sqrt((fr - rf)^2))\n          fr = int(fr)\n          rf = int(rf)\n          if (difference > 50 && fr > rf) {\n            print \"FR\"\n          } else if (difference > 50) {\n            print \"RF\"\n          } else {\n            print \"Undirected\"\n          }\n        }'\n    )\n    '''\n}",
        "nb_lignes_process": 35,
        "string_script": "    '''\n    length=$(\n      samtools view !{bam} \\\\\n      | head -n 10000 \\\\\n      | awk '{total += length($10)} END {print int(total/NR)}'\n    )\n\n    proportions=($(infer_library_type.sh !{bam} !{annotation}))\n\n    direction=$(\n      awk \\\\\n        -v fr=${proportions[0]} \\\\\n        -v rf=${proportions[1]} \\\\\n        'BEGIN {\n          difference = int(sqrt((fr - rf)^2))\n          fr = int(fr)\n          rf = int(rf)\n          if (difference > 50 && fr > rf) {\n            print \"FR\"\n          } else if (difference > 50) {\n            print \"RF\"\n          } else {\n            print \"Undirected\"\n          }\n        }'\n    )\n    '''",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "getdifference",
            "Frog",
            "Arf"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/getdifference",
            "https://bio.tools/frog",
            "https://bio.tools/arf"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "getdifference",
                "uri": "https://bio.tools/getdifference",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            },
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Gets all the regions of the genome, except the one given or get all the elements from the first set which does not ovelap with the second set (at the nucleotide level).",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            },
            {
                "name": "Frog",
                "uri": "https://bio.tools/frog",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3343",
                            "term": "Compound libraries and screening"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3336",
                            "term": "Drug discovery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Medicinal chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein structural motifs and surfaces"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Drug design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein 3D motifs"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "3D profile generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Molecular docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "Structural profile construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "Structural profile generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Macromolecular docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Docking simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Frog (Free Online Drug Conformation) is a service aimed at generating 3D conformations for drug-like compounds starting from their 1D or 2D descriptions (smiles or sdf).",
                "homepage": "http://bioserv.rpbs.jussieu.fr/cgi-bin/Frog"
            },
            {
                "name": "Arf",
                "uri": "https://bio.tools/arf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "arf is a genetic analysis program for sequencing data.",
                "homepage": "http://genome.sph.umich.edu/wiki/Arf"
            }
        ],
        "inputs": [
            "prefix",
            "bam",
            "annotation"
        ],
        "nb_inputs": 3,
        "outputs": [
            "prefix"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "TAGADA_format_quantifications": {
        "name_process": "TAGADA_format_quantifications",
        "string_process": "\nprocess TAGADA_format_quantifications {\n\n  label 'memory_8'\n\n  publishDir = [\n    path: params.output + '/quantification',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(quantifications)\n\n  output:\n    path('*.tsv')\n\n  shell:\n    '''\n    format_count_matrices.py !{quantifications}\n    '''\n}",
        "nb_lignes_process": 20,
        "string_script": "    '''\n    format_count_matrices.py !{quantifications}\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "quantifications"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_8'",
            "publishDir = [ path: params.output + '/quantification' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "TAGADA_filter_transcripts": {
        "name_process": "TAGADA_filter_transcripts",
        "string_process": "\nprocess TAGADA_filter_transcripts {\n\n  label 'memory_16'\n\n  input:\n    path(assemblies)\n\n  output:\n    path('filtered/*.gtf')\n\n  shell:\n    min_transcript_occurrence =\n      params.min_transcript_occurrence ?\n      '--min-transcript-occurrence ' + params.min_transcript_occurrence : ''\n\n    min_monoexonic_occurrence =\n      params.min_monoexonic_occurrence ?\n      '--min-monoexonic-occurrence ' + params.min_monoexonic_occurrence : ''\n\n    min_transcript_tpm =\n      params.min_transcript_tpm ?\n      '--min-transcript-tpm ' + params.min_transcript_tpm : ''\n\n    min_monoexonic_tpm =\n      params.min_monoexonic_tpm ?\n      '--min-monoexonic-tpm ' + params.min_monoexonic_tpm : ''\n\n    '''\n    filter_rare_transcripts.py \\\\\n      !{assemblies} \\\\\n      -o filtered \\\\\n      !{min_transcript_occurrence} \\\\\n      !{min_monoexonic_occurrence} \\\\\n      !{min_transcript_tpm} \\\\\n      !{min_monoexonic_tpm}\n    '''\n}",
        "nb_lignes_process": 36,
        "string_script": "    min_transcript_occurrence =\n      params.min_transcript_occurrence ?\n      '--min-transcript-occurrence ' + params.min_transcript_occurrence : ''\n\n    min_monoexonic_occurrence =\n      params.min_monoexonic_occurrence ?\n      '--min-monoexonic-occurrence ' + params.min_monoexonic_occurrence : ''\n\n    min_transcript_tpm =\n      params.min_transcript_tpm ?\n      '--min-transcript-tpm ' + params.min_transcript_tpm : ''\n\n    min_monoexonic_tpm =\n      params.min_monoexonic_tpm ?\n      '--min-monoexonic-tpm ' + params.min_monoexonic_tpm : ''\n\n    '''\n    filter_rare_transcripts.py \\\\\n      !{assemblies} \\\\\n      -o filtered \\\\\n      !{min_transcript_occurrence} \\\\\n      !{min_monoexonic_occurrence} \\\\\n      !{min_transcript_tpm} \\\\\n      !{min_monoexonic_tpm}\n    '''",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assemblies"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_16'"
        ],
        "when": "",
        "stub": ""
    },
    "TAGADA_cluster_expression": {
        "name_process": "TAGADA_cluster_expression",
        "string_process": "\nprocess TAGADA_cluster_expression {\n\n  label 'memory_4'\n\n  publishDir = [\n    path: params.output + '/control/expression',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(genes_tpm_quantification)\n    val(quantification_metadata)\n\n  output:\n    path('*_correlation.{pdf,tsv}')\n\n  shell:\n    rows = quantification_metadata.unique({ row -> row['id'] })\n\n    columns = rows.first()['columns'].keySet().collect()\n\n    metadata = 'labExpId' + '\\t' + 'Name'\n    metadata += columns.size() > 0 ? '\\t' + columns.join('\\t') : ''\n\n    rows.each({ row ->\n      metadata += '\\n' + ([row['id']] * 2 + row['columns'].values()).join('\\t')\n    })\n\n    factors = columns.size() > 0 ? columns.join(',') : 'Name'\n\n    palettes = (\n      [projectDir + '/assets/palettes/set3.12.txt']\n      * Math.max(columns.size(), 1)\n    ).join(',')\n\n    gradient = projectDir + '/assets/palettes/terrain.colors.3.txt'\n\n    '''\n    echo -e '!{metadata}' > metadata.tsv\n\n    cat \\\\\n      <(head -n 1 !{genes_tpm_quantification} | cut -f 2-) \\\\\n      <(tail -n +2 !{genes_tpm_quantification}) \\\\\n      > reference_genes_TPM.reformatted.tsv\n\n    matrix_to_dist.R \\\\\n      -i reference_genes_TPM.reformatted.tsv \\\\\n      --log10 \\\\\n      -c pearson \\\\\n      -p 0.1 \\\\\n      -v \\\\\n      -o reference_genes_TPM_log_pearson_correlation.tsv\n\n    ggheatmap.R \\\\\n      -i reference_genes_TPM_log_pearson_correlation.tsv \\\\\n      -d i \\\\\n      --row_metadata metadata.tsv \\\\\n      --col_metadata metadata.tsv \\\\\n      --col_dendro \\\\\n      --row_dendro \\\\\n      --rowSide_by '!{factors}' \\\\\n      --matrix_legend_title \\\\\n        'reference genes TPM pearson correlation\\n(log10 pseudocount 0.1)' \\\\\n      -B 10 \\\\\n      --matrix_palette '!{gradient}' \\\\\n      --rowSide_palette '!{palettes}' \\\\\n      --col_labels '!{factors}' \\\\\n      --row_labels '!{factors}' \\\\\n      -v \\\\\n      -o reference_genes_TPM_log_pearson_correlation.pdf\n    '''\n}",
        "nb_lignes_process": 72,
        "string_script": "    rows = quantification_metadata.unique({ row -> row['id'] })\n\n    columns = rows.first()['columns'].keySet().collect()\n\n    metadata = 'labExpId' + '\\t' + 'Name'\n    metadata += columns.size() > 0 ? '\\t' + columns.join('\\t') : ''\n\n    rows.each({ row ->\n      metadata += '\\n' + ([row['id']] * 2 + row['columns'].values()).join('\\t')\n    })\n\n    factors = columns.size() > 0 ? columns.join(',') : 'Name'\n\n    palettes = (\n      [projectDir + '/assets/palettes/set3.12.txt']\n      * Math.max(columns.size(), 1)\n    ).join(',')\n\n    gradient = projectDir + '/assets/palettes/terrain.colors.3.txt'\n\n    '''\n    echo -e '!{metadata}' > metadata.tsv\n\n    cat \\\\\n      <(head -n 1 !{genes_tpm_quantification} | cut -f 2-) \\\\\n      <(tail -n +2 !{genes_tpm_quantification}) \\\\\n      > reference_genes_TPM.reformatted.tsv\n\n    matrix_to_dist.R \\\\\n      -i reference_genes_TPM.reformatted.tsv \\\\\n      --log10 \\\\\n      -c pearson \\\\\n      -p 0.1 \\\\\n      -v \\\\\n      -o reference_genes_TPM_log_pearson_correlation.tsv\n\n    ggheatmap.R \\\\\n      -i reference_genes_TPM_log_pearson_correlation.tsv \\\\\n      -d i \\\\\n      --row_metadata metadata.tsv \\\\\n      --col_metadata metadata.tsv \\\\\n      --col_dendro \\\\\n      --row_dendro \\\\\n      --rowSide_by '!{factors}' \\\\\n      --matrix_legend_title \\\\\n        'reference genes TPM pearson correlation\\n(log10 pseudocount 0.1)' \\\\\n      -B 10 \\\\\n      --matrix_palette '!{gradient}' \\\\\n      --rowSide_palette '!{palettes}' \\\\\n      --col_labels '!{factors}' \\\\\n      --row_labels '!{factors}' \\\\\n      -v \\\\\n      -o reference_genes_TPM_log_pearson_correlation.pdf\n    '''",
        "nb_lignes_script": 53,
        "language_script": "bash",
        "tools": [
            "GBrowse"
        ],
        "tools_url": [
            "https://bio.tools/gbrowse"
        ],
        "tools_dico": [
            {
                "name": "GBrowse",
                "uri": "https://bio.tools/gbrowse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Combination of database and interactive web pages for manipulating and displaying annotations on genomes.",
                "homepage": "http://gmod.org/wiki/GBrowse"
            }
        ],
        "inputs": [
            "genes_tpm_quantification",
            "quantification_metadata"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_4'",
            "publishDir = [ path: params.output + '/control/expression' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "TAGADA_control_expression": {
        "name_process": "TAGADA_control_expression",
        "string_process": "\nprocess TAGADA_control_expression {\n\n  publishDir = [\n    path: params.output + '/control/expression',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(genes_tpm_quantification)\n    path(genes_counts_quantification)\n\n  output:\n    path('*.png'), optional: true, emit: reports\n\n  shell:\n    '''\n    samples_count=$(awk 'NR == 1 {print NF - 1}' !{genes_tpm_quantification})\n    (( $samples_count > 40 )) && exit 0\n\n    awk \\\\\n      'BEGIN {\n        OFS = \"\\\\t\"\n        print \"labExpId\", \"Name\"\n      }\n      NR == 1 {\n        for (i = 2; i <= NF; i++) {\n          print $i, $i\n        }\n      }' \\\\\n      !{genes_tpm_quantification} \\\\\n      > metadata.tsv\n\n    plot_gene_expression.sh \\\\\n      !{genes_tpm_quantification} \\\\\n      !{genes_counts_quantification} \\\\\n      metadata.tsv Name .\n\n    mv \\\\\n      histogram.log_T.psd_0.genes_TPM.png \\\\\n      refgenes_log10TPM_distribution_nozero.png\n\n    mv \\\\\n      histogram.log_T.psd_1e-04.genes_TPM.png \\\\\n      refgenes_log10TPM_distribution_withzero.png\n\n    mv \\\\\n      histogram.log_T.psd_0.genes_readcount.png \\\\\n      refgenes_log10readcount_distribution_nozero.png\n\n    mv \\\\\n      histogram.log_T.psd_1e-04.genes_readcount.png \\\\\n      refgenes_log10readcount_distribution_withzero.png\n\n    mv \\\\\n      TPM_fraction.genes_totalTPM_captured_by_top_genes.png \\\\\n      cumulative_fraction_of_refgeneTPMsum_captured_by_N_most_expr_refgenes.png\n    '''\n}",
        "nb_lignes_process": 58,
        "string_script": "    '''\n    samples_count=$(awk 'NR == 1 {print NF - 1}' !{genes_tpm_quantification})\n    (( $samples_count > 40 )) && exit 0\n\n    awk \\\\\n      'BEGIN {\n        OFS = \"\\\\t\"\n        print \"labExpId\", \"Name\"\n      }\n      NR == 1 {\n        for (i = 2; i <= NF; i++) {\n          print $i, $i\n        }\n      }' \\\\\n      !{genes_tpm_quantification} \\\\\n      > metadata.tsv\n\n    plot_gene_expression.sh \\\\\n      !{genes_tpm_quantification} \\\\\n      !{genes_counts_quantification} \\\\\n      metadata.tsv Name .\n\n    mv \\\\\n      histogram.log_T.psd_0.genes_TPM.png \\\\\n      refgenes_log10TPM_distribution_nozero.png\n\n    mv \\\\\n      histogram.log_T.psd_1e-04.genes_TPM.png \\\\\n      refgenes_log10TPM_distribution_withzero.png\n\n    mv \\\\\n      histogram.log_T.psd_0.genes_readcount.png \\\\\n      refgenes_log10readcount_distribution_nozero.png\n\n    mv \\\\\n      histogram.log_T.psd_1e-04.genes_readcount.png \\\\\n      refgenes_log10readcount_distribution_withzero.png\n\n    mv \\\\\n      TPM_fraction.genes_totalTPM_captured_by_top_genes.png \\\\\n      cumulative_fraction_of_refgeneTPMsum_captured_by_N_most_expr_refgenes.png\n    '''",
        "nb_lignes_script": 41,
        "language_script": "bash",
        "tools": [
            "MOFs"
        ],
        "tools_url": [
            "https://bio.tools/MOFs"
        ],
        "tools_dico": [
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            }
        ],
        "inputs": [
            "genes_tpm_quantification",
            "genes_counts_quantification"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "publishDir = [ path: params.output + '/control/expression' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "TAGADA_control_annotation": {
        "name_process": "TAGADA_control_annotation",
        "string_process": "\nprocess TAGADA_control_annotation {\n\n  publishDir = [\n    path: params.output + '/control/annotation',\n    mode: 'copy',\n    overwrite: true,\n    saveAs: { filename ->\n      if (\n        filename.endsWith('.png') ||\n        filename.endsWith('.txt') ||\n        filename == 'Plots' ||\n        filename == 'Tables'\n      ) filename\n    }\n  ]\n\n  input:\n    path(reference_annotation)\n    path(novel_annotation)\n    path(transcripts_tpm_quantification)\n    path(genes_tpm_quantification)\n\n  output:\n    path('Plots')\n    path('Tables')\n    path('*_expressed_*.txt')\n    path('{*.png,*_annotation.tsv}'), emit: reports\n\n  shell:\n    '''\n    detected_elements_sumstats.sh \\\\\n      !{reference_annotation} \\\\\n      !{novel_annotation} \\\\\n      !{transcripts_tpm_quantification} \\\\\n      !{genes_tpm_quantification}\n\n    for f in \\\\\n      Plots/ExonPerTranscript/*.png \\\\\n      Plots/ExonLength/*.png \\\\\n      Plots/DistinctExonLength/*.png \\\\\n      Plots/5pExonLength_Tr/*.png \\\\\n      Plots/InternalExonLength/*.png \\\\\n      Plots/5pExonLength_Gn/*.png \\\\\n      Plots/DistinctInternalExonLength/*.png \\\\\n      Plots/Exact_tr_dist_to_Genc_TSS/*.png \\\\\n      Plots/TrLength/*.png\n    do\n      [[ -f \"$f\" ]] || continue\n      convert \"$f\" -crop 1400x2100+0+0 +repage \"${f%.png}\"_cropped.png\n    done\n\n    convert \\\\\n      Plots/ExonPerTranscript/*_cropped.png \\\\\n      Plots/TranscriptPerGene/prediction_nbtringn_forggplot.png \\\\\n      +append \\\\\n      +repage \\\\\n      exon_per_transcript_and_transcript_per_gene.png\n\n    convert \\\\\n      Plots/ExonLength/*_cropped.png \\\\\n      Plots/DistinctExonLength/*_cropped.png \\\\\n      Plots/MonoExTrExLength/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      all_distinct_exon_length_and_monoexonic_transcript_length.png\n\n    convert \\\\\n      Plots/5pExonLength_Tr/*_cropped.png \\\\\n      Plots/InternalExonLength/*_cropped.png \\\\\n      Plots/3pExonLength_Tr/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      5p_internal_3p_exon_length_per_transcript.png\n\n    convert \\\\\n      Plots/5pExonLength_Gn/*_cropped.png \\\\\n      Plots/DistinctInternalExonLength/*_cropped.png \\\\\n      Plots/3pExonLength_Gn/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      5p_internal_3p_exon_length_per_gene.png\n\n    convert \\\\\n      Plots/Exact_tr_dist_to_Genc_TSS/*_cropped.png \\\\\n      Plots/TrLength/*_cropped.png \\\\\n      Plots/cDNALength/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      transcript_cdna_length_and_TSStorefgeneTSS_distance_for_exact_transcripts.png\n\n    # Novel annotation stats\n\n    novel_genes=$(\n      wc -l string/novel_gnid_nbtr.txt \\\\\n      | awk '{print $1}'\n    )\n\n    novel_transcripts=$(\n      wc -l string/novel_trid_nbex.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      string_expr/stringtie.annot.tpm0.1.2samples.exons_complete_gnid_nbtr.txt \\\\\n      > novel_expressed_genes.txt\n\n    novel_expressed_genes=$(\n      wc -l novel_expressed_genes.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      string_expr/stringtie.annot.tpm0.1.2samples.exons_complete_trid_nbex.txt \\\\\n      > novel_expressed_transcripts.txt\n\n    novel_expressed_transcripts=$(\n      wc -l novel_expressed_transcripts.txt \\\\\n      | awk '{print $1}'\n    )\n\n    percent_novel_expressed_genes=$(\n      echo | awk \\\\\n        -v expressed=$novel_expressed_genes \\\\\n        -v all=$novel_genes \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    percent_novel_expressed_transcripts=$(\n      echo | awk \\\\\n        -v expressed=$novel_expressed_transcripts \\\\\n        -v all=$novel_transcripts \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    awk \\\\\n      'BEGIN {\n        OFS = \"\\\\t\"\n      }\n      NR == 1 {\n        print \"Annotation subset\", \"Exact spliced transcripts\",\n        \"Extended spliced transcripts\", \"Shortened spliced transcripts\",\n        \"Other spliced transcripts\", \"Monoexonic transcripts\";\n      }\n      NR >= 4 {\n        if ($1 == \"string\") $1 = \"All transcripts\";\n        if ($1 == \"string_expr\") $1 = \"Expressed transcripts\";\n        print $1, $6, $11-$6, $16-$11, $3-$16, $2-$3;\n      }' \\\\\n      Tables/prediction_sets_eval_wrt_ref_for_table.txt \\\\\n      > transcripts_comparison_annotation.tsv\n\n    # Reference annotation stats\n\n    reference_genes=$(\n      awk 'NR == 3 {print $2}' detected_transcripts_genes_numbers.tsv\n    )\n\n    reference_transcripts=$(\n      awk 'NR == 2 {print $2}' detected_transcripts_genes_numbers.tsv\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      ref_expr/ref.annot.tpm0.1.2samples.exons_complete_gnid_nbtr.txt \\\\\n      > reference_expressed_genes.txt\n\n    reference_expressed_genes=$(\n      wc -l reference_expressed_genes.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      ref_expr/ref.annot.tpm0.1.2samples.exons_complete_trid_nbex.txt \\\\\n      > reference_expressed_transcripts.txt\n\n    reference_expressed_transcripts=$(\n      wc -l reference_expressed_transcripts.txt \\\\\n      | awk '{print $1}'\n    )\n\n    percent_reference_expressed_genes=$(\n      echo | awk \\\\\n        -v expressed=$reference_expressed_genes \\\\\n        -v all=$reference_genes \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    percent_reference_expressed_transcripts=$(\n      echo | awk \\\\\n        -v expressed=$reference_expressed_transcripts \\\\\n        -v all=$reference_transcripts \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    echo \\\\\n      -e \"Category\\\\tTotal\\\\tPercentage\" > novel_annotation.tsv\n    echo \\\\\n      -e \"Genes\\\\t$novel_genes\\\\t\" >> novel_annotation.tsv\n    echo \\\\\n      -e \"Expressed genes\\\\t$novel_expressed_genes\\\\t$percent_novel_expressed_genes\" \\\\\n      >> novel_annotation.tsv\n    echo \\\\\n      -e \"Transcripts\\\\t$novel_transcripts\\\\t\" \\\\\n      >> novel_annotation.tsv\n    echo \\\\\n      -e \"Expressed transcripts\\\\t$novel_expressed_transcripts\\\\t$percent_novel_expressed_transcripts\" \\\\\n      >> novel_annotation.tsv\n\n    echo \\\\\n      -e \"Category\\\\tTotal\\\\tPercentage\" \\\\\n      > reference_annotation.tsv\n    echo \\\\\n      -e \"Genes\\\\t$reference_genes\\\\t\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Expressed genes\\\\t$reference_expressed_genes\\\\t$percent_reference_expressed_genes\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Transcripts\\\\t$reference_transcripts\\\\t\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Expressed transcripts\\\\t$reference_expressed_transcripts\\\\t$percent_reference_expressed_transcripts\" >> \\\\\n      reference_annotation.tsv\n    '''\n}",
        "nb_lignes_process": 223,
        "string_script": "    '''\n    detected_elements_sumstats.sh \\\\\n      !{reference_annotation} \\\\\n      !{novel_annotation} \\\\\n      !{transcripts_tpm_quantification} \\\\\n      !{genes_tpm_quantification}\n\n    for f in \\\\\n      Plots/ExonPerTranscript/*.png \\\\\n      Plots/ExonLength/*.png \\\\\n      Plots/DistinctExonLength/*.png \\\\\n      Plots/5pExonLength_Tr/*.png \\\\\n      Plots/InternalExonLength/*.png \\\\\n      Plots/5pExonLength_Gn/*.png \\\\\n      Plots/DistinctInternalExonLength/*.png \\\\\n      Plots/Exact_tr_dist_to_Genc_TSS/*.png \\\\\n      Plots/TrLength/*.png\n    do\n      [[ -f \"$f\" ]] || continue\n      convert \"$f\" -crop 1400x2100+0+0 +repage \"${f%.png}\"_cropped.png\n    done\n\n    convert \\\\\n      Plots/ExonPerTranscript/*_cropped.png \\\\\n      Plots/TranscriptPerGene/prediction_nbtringn_forggplot.png \\\\\n      +append \\\\\n      +repage \\\\\n      exon_per_transcript_and_transcript_per_gene.png\n\n    convert \\\\\n      Plots/ExonLength/*_cropped.png \\\\\n      Plots/DistinctExonLength/*_cropped.png \\\\\n      Plots/MonoExTrExLength/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      all_distinct_exon_length_and_monoexonic_transcript_length.png\n\n    convert \\\\\n      Plots/5pExonLength_Tr/*_cropped.png \\\\\n      Plots/InternalExonLength/*_cropped.png \\\\\n      Plots/3pExonLength_Tr/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      5p_internal_3p_exon_length_per_transcript.png\n\n    convert \\\\\n      Plots/5pExonLength_Gn/*_cropped.png \\\\\n      Plots/DistinctInternalExonLength/*_cropped.png \\\\\n      Plots/3pExonLength_Gn/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      5p_internal_3p_exon_length_per_gene.png\n\n    convert \\\\\n      Plots/Exact_tr_dist_to_Genc_TSS/*_cropped.png \\\\\n      Plots/TrLength/*_cropped.png \\\\\n      Plots/cDNALength/*.png \\\\\n      +append \\\\\n      +repage \\\\\n      transcript_cdna_length_and_TSStorefgeneTSS_distance_for_exact_transcripts.png\n\n    # Novel annotation stats\n\n    novel_genes=$(\n      wc -l string/novel_gnid_nbtr.txt \\\\\n      | awk '{print $1}'\n    )\n\n    novel_transcripts=$(\n      wc -l string/novel_trid_nbex.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      string_expr/stringtie.annot.tpm0.1.2samples.exons_complete_gnid_nbtr.txt \\\\\n      > novel_expressed_genes.txt\n\n    novel_expressed_genes=$(\n      wc -l novel_expressed_genes.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      string_expr/stringtie.annot.tpm0.1.2samples.exons_complete_trid_nbex.txt \\\\\n      > novel_expressed_transcripts.txt\n\n    novel_expressed_transcripts=$(\n      wc -l novel_expressed_transcripts.txt \\\\\n      | awk '{print $1}'\n    )\n\n    percent_novel_expressed_genes=$(\n      echo | awk \\\\\n        -v expressed=$novel_expressed_genes \\\\\n        -v all=$novel_genes \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    percent_novel_expressed_transcripts=$(\n      echo | awk \\\\\n        -v expressed=$novel_expressed_transcripts \\\\\n        -v all=$novel_transcripts \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    awk \\\\\n      'BEGIN {\n        OFS = \"\\\\t\"\n      }\n      NR == 1 {\n        print \"Annotation subset\", \"Exact spliced transcripts\",\n        \"Extended spliced transcripts\", \"Shortened spliced transcripts\",\n        \"Other spliced transcripts\", \"Monoexonic transcripts\";\n      }\n      NR >= 4 {\n        if ($1 == \"string\") $1 = \"All transcripts\";\n        if ($1 == \"string_expr\") $1 = \"Expressed transcripts\";\n        print $1, $6, $11-$6, $16-$11, $3-$16, $2-$3;\n      }' \\\\\n      Tables/prediction_sets_eval_wrt_ref_for_table.txt \\\\\n      > transcripts_comparison_annotation.tsv\n\n    # Reference annotation stats\n\n    reference_genes=$(\n      awk 'NR == 3 {print $2}' detected_transcripts_genes_numbers.tsv\n    )\n\n    reference_transcripts=$(\n      awk 'NR == 2 {print $2}' detected_transcripts_genes_numbers.tsv\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      ref_expr/ref.annot.tpm0.1.2samples.exons_complete_gnid_nbtr.txt \\\\\n      > reference_expressed_genes.txt\n\n    reference_expressed_genes=$(\n      wc -l reference_expressed_genes.txt \\\\\n      | awk '{print $1}'\n    )\n\n    perl -pe 's/^\"([^\"]+)\".+$/$1/g' \\\\\n      ref_expr/ref.annot.tpm0.1.2samples.exons_complete_trid_nbex.txt \\\\\n      > reference_expressed_transcripts.txt\n\n    reference_expressed_transcripts=$(\n      wc -l reference_expressed_transcripts.txt \\\\\n      | awk '{print $1}'\n    )\n\n    percent_reference_expressed_genes=$(\n      echo | awk \\\\\n        -v expressed=$reference_expressed_genes \\\\\n        -v all=$reference_genes \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    percent_reference_expressed_transcripts=$(\n      echo | awk \\\\\n        -v expressed=$reference_expressed_transcripts \\\\\n        -v all=$reference_transcripts \\\\\n        '{print 100 * expressed / all}'\n    )\n\n    echo \\\\\n      -e \"Category\\\\tTotal\\\\tPercentage\" > novel_annotation.tsv\n    echo \\\\\n      -e \"Genes\\\\t$novel_genes\\\\t\" >> novel_annotation.tsv\n    echo \\\\\n      -e \"Expressed genes\\\\t$novel_expressed_genes\\\\t$percent_novel_expressed_genes\" \\\\\n      >> novel_annotation.tsv\n    echo \\\\\n      -e \"Transcripts\\\\t$novel_transcripts\\\\t\" \\\\\n      >> novel_annotation.tsv\n    echo \\\\\n      -e \"Expressed transcripts\\\\t$novel_expressed_transcripts\\\\t$percent_novel_expressed_transcripts\" \\\\\n      >> novel_annotation.tsv\n\n    echo \\\\\n      -e \"Category\\\\tTotal\\\\tPercentage\" \\\\\n      > reference_annotation.tsv\n    echo \\\\\n      -e \"Genes\\\\t$reference_genes\\\\t\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Expressed genes\\\\t$reference_expressed_genes\\\\t$percent_reference_expressed_genes\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Transcripts\\\\t$reference_transcripts\\\\t\" \\\\\n      >> reference_annotation.tsv\n    echo \\\\\n      -e \"Expressed transcripts\\\\t$reference_expressed_transcripts\\\\t$percent_reference_expressed_transcripts\" >> \\\\\n      reference_annotation.tsv\n    '''",
        "nb_lignes_script": 193,
        "language_script": "bash",
        "tools": [
            "convert",
            "MOFs",
            "rbrothers"
        ],
        "tools_url": [
            "https://bio.tools/convert",
            "https://bio.tools/MOFs",
            "https://bio.tools/rbrothers"
        ],
        "tools_dico": [
            {
                "name": "convert",
                "uri": "https://bio.tools/convert",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3434",
                                    "term": "Conversion"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2854",
                                "term": "Position-specific scoring matrix"
                            },
                            {
                                "uri": "http://edamontology.org/data_0849",
                                "term": "Sequence record"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2854",
                                "term": "Position-specific scoring matrix"
                            },
                            {
                                "uri": "http://edamontology.org/data_1669",
                                "term": "P-value"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Define coerce methods for microarray data objects.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/convert.html"
            },
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            },
            {
                "name": "rbrothers",
                "uri": "https://bio.tools/rbrothers",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0451",
                                    "term": "Recombination detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0451",
                                    "term": "Sequence alignment analysis (recombination detection)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "R package that provides easy access to recombination detection software DualBrothers and provides new functionality for pre-processing sequence data and post-processing DualBrothers output.",
                "homepage": "http://evolmod.r-forge.r-project.org/#rbrothers"
            }
        ],
        "inputs": [
            "reference_annotation",
            "novel_annotation",
            "transcripts_tpm_quantification",
            "genes_tpm_quantification"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "publishDir = [ path: params.output + '/control/annotation' , mode: 'copy' , overwrite: true , saveAs: { filename -> if ( filename.endsWith('.png') || filename.endsWith('.txt') || filename == 'Plots' || filename == 'Tables' ) filename } ]"
        ],
        "when": "",
        "stub": ""
    },
    "FEELNC_classify_transcripts": {
        "name_process": "FEELNC_classify_transcripts",
        "string_process": "process FEELNC_classify_transcripts {\n\n  label 'cpu_4'\n  label 'memory_24'\n\n  publishDir = [\n    path: params.output,\n    mode: 'copy',\n    overwrite: true,\n    saveAs: { filename ->\n      if (filename == 'novel.gtf')\n        'annotation/' + filename\n      else if (filename == 'lncRNA_classes.txt')\n        'annotation/lnc_classification/' + filename\n      else if (filename.endsWith('.gtf'))\n        'annotation/lnc_classification/' + filename\n      else if (filename == 'feelnc_classification_summary.txt')\n        'control/lnc/' + filename\n      else if (filename.endsWith('.feelncclassifier.log'))\n        'control/lnc/' + filename\n    }\n  ]\n\n  input:\n    path(genome, stageAs: 'genome.input.fa')\n    path(reference_annotation, stageAs: 'reference.input.gtf')\n    path(novel_annotation, stageAs: 'novel.input.gtf')\n\n  output:\n    path('novel.gtf')\n    path('exons.*.gtf')\n    path('*.{txt,log}'), emit: reports\n\n  shell:\n    '''\n    script=$(which FEELnc_codpot.pl)\n    export FEELNCPATH=${script%/*}/..\n\n    FEELnc_filter.pl \\\\\n      --mRNAfile !{reference_annotation} \\\\\n      --infile !{novel_annotation} \\\\\n      --biotype transcript_biotype=protein_coding \\\\\n      --proc !{task.cpus} \\\\\n      > candidate_transcripts.gtf\n\n    FEELnc_codpot.pl \\\\\n      --genome !{genome} \\\\\n      --mRNAfile !{reference_annotation} \\\\\n      --infile candidate_transcripts.gtf \\\\\n      --biotype transcript_biotype=protein_coding \\\\\n      --numtx 5000,5000 \\\\\n      --kmer 1,2,3,6,9,12 \\\\\n      --outdir . \\\\\n      --outname exons \\\\\n      --mode shuffle \\\\\n      --spethres 0.98,0.98 \\\\\n      !{params.feelnc_args}\n\n    # Update annotation with new biotypes\n    cp \"$(readlink -m !{novel_annotation})\" updated.gtf\n    for biotype in lncRNA mRNA noORF TUCp; do\n      [[ -f exons.\"$biotype\".gtf ]] || continue\n\n      awk \\\\\n        -v biotype=$biotype \\\\\n        'BEGIN {\n          FS = \"\\\\t\"\n        }\n        NR == FNR {\n          match($9, /transcript_id \"([^;]*)\";*/, tId)\n          transcripts[tId[1]] = 0\n          next\n        }\n        {\n          match($9, /transcript_id \"([^;]*)\";*/, tId)\n          if (tId[1] in transcripts) {\n            # Check if there is already a biotype in the annotation\n            match($9, /biotype=([^;]*)*/, oldBiotype)\n            if (oldBiotype[1]) {\n              print $0\n            } else {\n              print $0 \" feelnc_biotype \\\\\"\" biotype \"\\\\\";\"\n            }\n          } else {\n            print $0\n          }\n        }' \\\\\n        exons.\"$biotype\".gtf \\\\\n        updated.gtf \\\\\n        > temp.gtf\n\n      mv temp.gtf updated.gtf\n    done\n\n    # Write FEELnc classification summary\n    awk \\\\\n      'BEGIN {\n        FS = OFS = \"\\\\t\"\n        feelnc_classes[\"lncRNA\"] = 0\n        feelnc_classes[\"noORF\"] = 0\n        feelnc_classes[\"mRNA\"] = 0\n        feelnc_classes[\"TUCp\"] = 0\n        feelnc_classes[\"\"] = 0\n      }\n      $3 == \"transcript\" {\n        ++nb_transcripts\n        match($9, /feelnc_biotype \"([^;]*)\";*/, feelnc_biotype)\n        ++feelnc_classes[feelnc_biotype[1]]\n      }\n      END {\n        print \"Lnc transcripts\",feelnc_classes[\"lncRNA\"]\n        print \"Coding transcripts from FEELnc classification\",feelnc_classes[\"mRNA\"]\n        print \"Transcripts with no ORF\",feelnc_classes[\"noORF\"]\n        print \"Transcripts of unknown coding potential\",feelnc_classes[\"TUCp\"]\n      }' \\\\\n      updated.gtf \\\\\n      > feelnc_classification_summary.txt\n\n    # Filter coding transcripts for lnc-messenger interactions\n    grep \\\\\n      -E '#|transcript_biotype \"protein_coding\"|feelnc_biotype \"mRNA\"' \\\\\n      updated.gtf \\\\\n      > coding_transcripts.gtf\n\n    FEELnc_classifier.pl \\\\\n      --mrna coding_transcripts.gtf \\\\\n      --lncrna exons.lncRNA.gtf \\\\\n      > lncRNA_classes.txt\n\n    mv updated.gtf novel.gtf\n    '''\n}",
        "nb_lignes_process": 130,
        "string_script": "    '''\n    script=$(which FEELnc_codpot.pl)\n    export FEELNCPATH=${script%/*}/..\n\n    FEELnc_filter.pl \\\\\n      --mRNAfile !{reference_annotation} \\\\\n      --infile !{novel_annotation} \\\\\n      --biotype transcript_biotype=protein_coding \\\\\n      --proc !{task.cpus} \\\\\n      > candidate_transcripts.gtf\n\n    FEELnc_codpot.pl \\\\\n      --genome !{genome} \\\\\n      --mRNAfile !{reference_annotation} \\\\\n      --infile candidate_transcripts.gtf \\\\\n      --biotype transcript_biotype=protein_coding \\\\\n      --numtx 5000,5000 \\\\\n      --kmer 1,2,3,6,9,12 \\\\\n      --outdir . \\\\\n      --outname exons \\\\\n      --mode shuffle \\\\\n      --spethres 0.98,0.98 \\\\\n      !{params.feelnc_args}\n\n    # Update annotation with new biotypes\n    cp \"$(readlink -m !{novel_annotation})\" updated.gtf\n    for biotype in lncRNA mRNA noORF TUCp; do\n      [[ -f exons.\"$biotype\".gtf ]] || continue\n\n      awk \\\\\n        -v biotype=$biotype \\\\\n        'BEGIN {\n          FS = \"\\\\t\"\n        }\n        NR == FNR {\n          match($9, /transcript_id \"([^;]*)\";*/, tId)\n          transcripts[tId[1]] = 0\n          next\n        }\n        {\n          match($9, /transcript_id \"([^;]*)\";*/, tId)\n          if (tId[1] in transcripts) {\n            # Check if there is already a biotype in the annotation\n            match($9, /biotype=([^;]*)*/, oldBiotype)\n            if (oldBiotype[1]) {\n              print $0\n            } else {\n              print $0 \" feelnc_biotype \\\\\"\" biotype \"\\\\\";\"\n            }\n          } else {\n            print $0\n          }\n        }' \\\\\n        exons.\"$biotype\".gtf \\\\\n        updated.gtf \\\\\n        > temp.gtf\n\n      mv temp.gtf updated.gtf\n    done\n\n    # Write FEELnc classification summary\n    awk \\\\\n      'BEGIN {\n        FS = OFS = \"\\\\t\"\n        feelnc_classes[\"lncRNA\"] = 0\n        feelnc_classes[\"noORF\"] = 0\n        feelnc_classes[\"mRNA\"] = 0\n        feelnc_classes[\"TUCp\"] = 0\n        feelnc_classes[\"\"] = 0\n      }\n      $3 == \"transcript\" {\n        ++nb_transcripts\n        match($9, /feelnc_biotype \"([^;]*)\";*/, feelnc_biotype)\n        ++feelnc_classes[feelnc_biotype[1]]\n      }\n      END {\n        print \"Lnc transcripts\",feelnc_classes[\"lncRNA\"]\n        print \"Coding transcripts from FEELnc classification\",feelnc_classes[\"mRNA\"]\n        print \"Transcripts with no ORF\",feelnc_classes[\"noORF\"]\n        print \"Transcripts of unknown coding potential\",feelnc_classes[\"TUCp\"]\n      }' \\\\\n      updated.gtf \\\\\n      > feelnc_classification_summary.txt\n\n    # Filter coding transcripts for lnc-messenger interactions\n    grep \\\\\n      -E '#|transcript_biotype \"protein_coding\"|feelnc_biotype \"mRNA\"' \\\\\n      updated.gtf \\\\\n      > coding_transcripts.gtf\n\n    FEELnc_classifier.pl \\\\\n      --mrna coding_transcripts.gtf \\\\\n      --lncrna exons.lncRNA.gtf \\\\\n      > lncRNA_classes.txt\n\n    mv updated.gtf novel.gtf\n    '''",
        "nb_lignes_script": 96,
        "language_script": "bash",
        "tools": [
            "NextSV",
            "ENdb"
        ],
        "tools_url": [
            "https://bio.tools/nextsv",
            "https://bio.tools/ENdb"
        ],
        "tools_dico": [
            {
                "name": "NextSV",
                "uri": "https://bio.tools/nextsv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A meta SV caller and a computational pipeline to perform SV calling from low coverage long-read sequencing data. It integrates three aligners and three SV callers and generates two integrated call sets (sensitive/stringent) for different analysis purpose.",
                "homepage": "http://github.com/Nextomics/NextSV"
            },
            {
                "name": "ENdb",
                "uri": "https://bio.tools/ENdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0440",
                                    "term": "Promoter prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A manually curated database of experimentally supported enhancers for human and mouse. Enhancers are a class of cis-regulatory elements that can increase gene transcription by forming loops in intergenic regions, introns and exons",
                "homepage": "http://www.licpathway.net/ENdb"
            }
        ],
        "inputs": [
            "genome",
            "reference_annotation",
            "novel_annotation"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_4'",
            "label 'memory_24'",
            "publishDir = [ path: params.output , mode: 'copy' , overwrite: true , saveAs: { filename -> if (filename == 'novel.gtf') 'annotation/' + filename else if (filename == 'lncRNA_classes.txt') 'annotation/lnc_classification/' + filename else if (filename.endsWith('.gtf')) 'annotation/lnc_classification/' + filename else if (filename == 'feelnc_classification_summary.txt') 'control/lnc/' + filename else if (filename.endsWith('.feelncclassifier.log')) 'control/lnc/' + filename } ]"
        ],
        "when": "",
        "stub": ""
    },
    "STAR_index_genome": {
        "name_process": "STAR_index_genome",
        "string_process": "process STAR_index_genome {\n\n  label 'cpu_16'\n  label 'memory_64'\n\n  publishDir = [\n    path: params.output,\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(genome)\n    path(annotation)\n    path(fastqs)\n\n  output:\n    path('index')\n\n  shell:\n    '''\n    for fastq in !{fastqs}; do\n      echo $(\n        zcat \"$fastq\" \\\\\n        | head -n 40000 \\\\\n        | awk 'NR%4 == 2 {total += length($0)} END {print int(total/(NR/4))-1}'\n      ) >> overhangs\n    done\n\n    max_overhang=$(\n      awk '$1 > max || NR == 1 {max = $1} END {print max}' overhangs\n    )\n\n    mkdir index\n\n    STAR \\\\\n      --runThreadN !{task.cpus} \\\\\n      --runMode genomeGenerate \\\\\n      --genomeDir index \\\\\n      --sjdbGTFfile !{annotation} \\\\\n      --genomeFastaFiles !{genome} \\\\\n      --sjdbOverhang \"$max_overhang\"\n    '''\n}",
        "nb_lignes_process": 42,
        "string_script": "    '''\n    for fastq in !{fastqs}; do\n      echo $(\n        zcat \"$fastq\" \\\\\n        | head -n 40000 \\\\\n        | awk 'NR%4 == 2 {total += length($0)} END {print int(total/(NR/4))-1}'\n      ) >> overhangs\n    done\n\n    max_overhang=$(\n      awk '$1 > max || NR == 1 {max = $1} END {print max}' overhangs\n    )\n\n    mkdir index\n\n    STAR \\\\\n      --runThreadN !{task.cpus} \\\\\n      --runMode genomeGenerate \\\\\n      --genomeDir index \\\\\n      --sjdbGTFfile !{annotation} \\\\\n      --genomeFastaFiles !{genome} \\\\\n      --sjdbOverhang \"$max_overhang\"\n    '''",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "tmax",
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/tmax",
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "tmax",
                "uri": "https://bio.tools/tmax",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0283",
                                    "term": "Linkage analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program for performing association analysis on a set of linked loci within a targeted region.",
                "homepage": "http://wpicr.wpic.pitt.edu/WPICCompGen/tmax.html"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome",
            "annotation",
            "fastqs"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_16'",
            "label 'memory_64'",
            "publishDir = [ path: params.output , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "STAR_align_reads": {
        "name_process": "STAR_align_reads",
        "string_process": "\nprocess STAR_align_reads {\n\n  label 'cpu_16'\n  label 'memory_32'\n\n  publishDir = [\n    path: params.output,\n    mode: 'copy',\n    overwrite: true,\n    saveAs: { filename ->\n      if (filename.endsWith('.bam'))\n        'alignment/' + filename\n      else if (filename.endsWith('.splicing.tsv'))\n        'control/splicing/' + filename\n    }\n  ]\n\n  input:\n    tuple val(prefix), path(fastqs), path(index)\n\n  output:\n    path(splicing)\n    path('*.Log.final.out'), emit: reports\n    tuple val(prefix), path(bam), emit: results\n\n  shell:\n    bam = prefix + '.bam'\n    splicing = prefix + '.splicing.tsv'\n    '''\n    STAR \\\\\n      --runThreadN !{task.cpus} \\\\\n      --readFilesCommand zcat \\\\\n      \\\\\n      `# output sorted BAM file` \\\\\n      --outSAMtype BAM SortedByCoordinate \\\\\n      \\\\\n      `# keep unmapped reads` \\\\\n      --outSAMunmapped Within \\\\\n      \\\\\n      `# filter spurious junctions` \\\\\n      --outFilterType BySJout \\\\\n      \\\\\n      `# filter non-canonical junctions` \\\\\n      --outFilterIntronMotifs RemoveNoncanonical \\\\\n      \\\\\n      `# tags to specify` \\\\\n      `# NH: number of reported alignments` \\\\\n      `# HI: query hit index` \\\\\n      `# AS: alignment score` \\\\\n      `# MD: mismatching positions` \\\\\n      `# NM: number of mismatches in each mate` \\\\\n      `# nM: number of mismatches per (paired) alignment` \\\\\n      `# XS: strand` \\\\\n      --outSAMattributes NH HI AS MD NM nM XS \\\\\n      \\\\\n      --genomeDir !{index} \\\\\n      --readFilesIn !{fastqs} \\\\\n      --outFileNamePrefix '!{prefix}'.\n\n    mv *.Aligned.sortedByCoord.out.bam '!{bam}'\n    mv *.SJ.out.tab '!{splicing}'\n    '''\n}",
        "nb_lignes_process": 62,
        "string_script": "    bam = prefix + '.bam'\n    splicing = prefix + '.splicing.tsv'\n    '''\n    STAR \\\\\n      --runThreadN !{task.cpus} \\\\\n      --readFilesCommand zcat \\\\\n      \\\\\n      `# output sorted BAM file` \\\\\n      --outSAMtype BAM SortedByCoordinate \\\\\n      \\\\\n      `# keep unmapped reads` \\\\\n      --outSAMunmapped Within \\\\\n      \\\\\n      `# filter spurious junctions` \\\\\n      --outFilterType BySJout \\\\\n      \\\\\n      `# filter non-canonical junctions` \\\\\n      --outFilterIntronMotifs RemoveNoncanonical \\\\\n      \\\\\n      `# tags to specify` \\\\\n      `# NH: number of reported alignments` \\\\\n      `# HI: query hit index` \\\\\n      `# AS: alignment score` \\\\\n      `# MD: mismatching positions` \\\\\n      `# NM: number of mismatches in each mate` \\\\\n      `# nM: number of mismatches per (paired) alignment` \\\\\n      `# XS: strand` \\\\\n      --outSAMattributes NH HI AS MD NM nM XS \\\\\n      \\\\\n      --genomeDir !{index} \\\\\n      --readFilesIn !{fastqs} \\\\\n      --outFileNamePrefix '!{prefix}'.\n\n    mv *.Aligned.sortedByCoord.out.bam '!{bam}'\n    mv *.SJ.out.tab '!{splicing}'\n    '''",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [
            "BaMM",
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/bamm",
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "BaMM",
                "uri": "https://bio.tools/bamm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence motif recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Sequence motif discovery"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Motif scanning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Motif discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "de-novo motif discovery and regulatory sequence analysis.\nDiscovery of regulatory motifs with higher-order Bayesian Markov Models (BaMMs)",
                "homepage": "https://bammmotif.mpibpc.mpg.de"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "prefix",
            "fastqs",
            "index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "splicing"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_16'",
            "label 'memory_32'",
            "publishDir = [ path: params.output , mode: 'copy' , overwrite: true , saveAs: { filename -> if (filename.endsWith('.bam')) 'alignment/' + filename else if (filename.endsWith('.splicing.tsv')) 'control/splicing/' + filename } ]"
        ],
        "when": "",
        "stub": ""
    },
    "FEATURECOUNTS_control_exons": {
        "name_process": "FEATURECOUNTS_control_exons",
        "string_process": "process FEATURECOUNTS_control_exons {\n\n  label 'cpu_4'\n  label 'memory_4'\n\n  publishDir = [\n    path: params.output + '/control/exons',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(bams)\n    tuple path(annotation), val(type)\n\n  output:\n    path('*.tsv')\n    path('*.summary'), emit: reports\n\n  shell:\n    '''\n    featureCounts \\\\\n      -t exon \\\\\n      -g gene_id \\\\\n      -s 0 \\\\\n      --primary \\\\\n      -T !{task.cpus} \\\\\n      -a !{annotation} \\\\\n      -o '!{type}'_exons_counts.tsv \\\\\n      !{bams}\n\n    mv '!{type}'_exons_counts.tsv.summary '!{type}'_exons_counts.summary\n    sed -i -e '2s/\\\\.bam\\\\b//g' '!{type}'_exons_counts.tsv\n    sed -i -e '1s/\\\\.bam\\\\b//g' '!{type}'_exons_counts.summary\n    '''\n}",
        "nb_lignes_process": 34,
        "string_script": "    '''\n    featureCounts \\\\\n      -t exon \\\\\n      -g gene_id \\\\\n      -s 0 \\\\\n      --primary \\\\\n      -T !{task.cpus} \\\\\n      -a !{annotation} \\\\\n      -o '!{type}'_exons_counts.tsv \\\\\n      !{bams}\n\n    mv '!{type}'_exons_counts.tsv.summary '!{type}'_exons_counts.summary\n    sed -i -e '2s/\\\\.bam\\\\b//g' '!{type}'_exons_counts.tsv\n    sed -i -e '1s/\\\\.bam\\\\b//g' '!{type}'_exons_counts.summary\n    '''",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "bams",
            "type",
            "annotation"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_4'",
            "label 'memory_4'",
            "publishDir = [ path: params.output + '/control/exons' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "GZIP_decompress": {
        "name_process": "GZIP_decompress",
        "string_process": "process GZIP_decompress {\n\n  input:\n    path(compressed)\n\n  output:\n    path(decompressed)\n\n  shell:\n    match = (compressed.getName() =~ /^(.+?)((\\.tar)?(\\.gz)?)$/)\n    decompressed = match[0][1]\n    compression = match[0][2]\n    if (compression.startsWith('.tar'))\n      '''\n      tar -xf !{compressed} -C '!{decompressed}'\n      '''\n    else if (compression.startsWith('.gz'))\n      '''\n      gzip -c -d !{compressed} > '!{decompressed}'\n      '''\n    else\n      '''\n      '''\n}",
        "nb_lignes_process": 22,
        "string_script": "    match = (compressed.getName() =~ /^(.+?)((\\.tar)?(\\.gz)?)$/)\n    decompressed = match[0][1]\n    compression = match[0][2]\n    if (compression.startsWith('.tar'))\n      '''\n      tar -xf !{compressed} -C '!{decompressed}'\n      '''\n    else if (compression.startsWith('.gz'))\n      '''\n      gzip -c -d !{compressed} > '!{decompressed}'\n      '''\n    else\n      '''\n      '''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Match"
        ],
        "tools_url": [
            "https://bio.tools/match"
        ],
        "tools_dico": [
            {
                "name": "Match",
                "uri": "https://bio.tools/match",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3125",
                            "term": "DNA binding sites"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0438",
                                    "term": "Transcriptional regulatory element prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0372",
                                    "term": "DNA transcription"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0445",
                                    "term": "Transcription factor binding site prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0438",
                                    "term": "Regulatory element prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0438",
                                    "term": "Transcription regulatory element prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Weight matrix-based tool which searches for putative transcription factor binding sites (TFBS) in DNA sequences. Registration at the site is free and is required to use it.",
                "homepage": "http://www.gene-regulation.com/pub/programs.html#match"
            }
        ],
        "inputs": [
            "compressed"
        ],
        "nb_inputs": 1,
        "outputs": [
            "decompressed"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "FASTQC_control_reads": {
        "name_process": "FASTQC_control_reads",
        "string_process": "process FASTQC_control_reads {\n\n  publishDir = [\n    path: params.output + '/control/reads',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    tuple val(prefix), path(fastq), val(suffix)\n\n  output:\n    path('*_fastqc.zip'), emit: reports\n\n  shell:\n    '''\n    rename=!{fastq}\n\n    if [[\n      !{fastq} =~ (([\\\\._ ][Rr]?[12])( \\\\([^\\\\)]+\\\\))?)?((\\\\.(fastq|fq|gz))+)$\n    ]]; then\n      rename='!{prefix}'\"${BASH_REMATCH[2]}\"\n      if [[ -n '!{suffix}' ]]; then\n        rename=\"$rename (\"'!{suffix}'\")\"\n      else\n        rename=\"$rename${BASH_REMATCH[3]}\"\n      fi\n      rename=\"$rename${BASH_REMATCH[4]}\"\n    fi\n\n    [[ !{fastq} != \"$rename\" ]] && mv !{fastq} \"$rename\"\n\n    fastqc \"$rename\"\n    '''\n}",
        "nb_lignes_process": 33,
        "string_script": "    '''\n    rename=!{fastq}\n\n    if [[\n      !{fastq} =~ (([\\\\._ ][Rr]?[12])( \\\\([^\\\\)]+\\\\))?)?((\\\\.(fastq|fq|gz))+)$\n    ]]; then\n      rename='!{prefix}'\"${BASH_REMATCH[2]}\"\n      if [[ -n '!{suffix}' ]]; then\n        rename=\"$rename (\"'!{suffix}'\")\"\n      else\n        rename=\"$rename${BASH_REMATCH[3]}\"\n      fi\n      rename=\"$rename${BASH_REMATCH[4]}\"\n    fi\n\n    [[ !{fastq} != \"$rename\" ]] && mv !{fastq} \"$rename\"\n\n    fastqc \"$rename\"\n    '''",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "FQC",
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fqc",
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FQC",
                "uri": "https://bio.tools/fqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality affairs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality assurance"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrates FastQC results into a web-based, interactive, and extensible FASTQ quality control tool.",
                "homepage": "https://github.com/pnnl/fqc"
            },
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "prefix",
            "suffix",
            "fastq"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "publishDir = [ path: params.output + '/control/reads' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "MULTIQC_generate_report": {
        "name_process": "MULTIQC_generate_report",
        "string_process": "process MULTIQC_generate_report {\n\n  label 'memory_8'\n\n  publishDir = [\n    path: params.output + '/control',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(reports)\n    path(config)\n    path(images, stageAs: 'custom_images.tsv')\n    path(metadata, stageAs: 'metadata_mqc.tsv')\n\n  output:\n    path('multiqc_report.html')\n\n  shell:\n    '''\n    for report in !{reports}; do\n      [[ -f \"$report\" && \"${report##*.}\" == tsv ]] || continue\n      mv \"$report\" \"${report%.*}\"_mqc.\"${report##*.}\"\n    done\n\n    multiqc --config !{config} .\n    '''\n}",
        "nb_lignes_process": 27,
        "string_script": "    '''\n    for report in !{reports}; do\n      [[ -f \"$report\" && \"${report##*.}\" == tsv ]] || continue\n      mv \"$report\" \"${report%.*}\"_mqc.\"${report##*.}\"\n    done\n\n    multiqc --config !{config} .\n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "reports",
            "config",
            "images",
            "metadata"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_8'",
            "publishDir = [ path: params.output + '/control' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "TRIMGALORE_trim_adapters": {
        "name_process": "TRIMGALORE_trim_adapters",
        "string_process": "process TRIMGALORE_trim_adapters {\n\n  label 'cpu_16'\n  label 'memory_16'\n\n  input:\n    tuple val(prefix), path(fastqs)\n\n  output:\n    path('*_trimming_report.txt'), emit: reports\n    tuple val(prefix), path('* (trimmed)*'), emit: results\n\n  shell:\n    paired = fastqs instanceof List ? '--paired' : ''\n    '''\n    for fastq in !{fastqs}; do\n      nospaces=${fastq// /_}\n      [[ \"$fastq\" != \"$nospaces\" ]] && mv \"$fastq\" \"$nospaces\"\n      fastqs+=(\"$fastq\")\n      renamed+=(\"$nospaces\")\n    done\n\n    trim_galore \\\\\n      \"${renamed[@]}\" \\\\\n      !{paired} \\\\\n      --cores !{task.cpus} \\\\\n      --gzip \\\\\n      --basename '!{prefix}'\n\n    for output in *_trimmed.*; do\n      [[ -f \"$output\" ]] || continue\n      mv \"$output\" '!{prefix}'\" (trimmed)${output##*_trimmed}\"\n    done\n\n    for n in 1 2; do\n      for output in *_val_$n.*; do\n        [[ -f \"$output\" ]] || continue\n        R=_R$n\n        i=$((n - 1))\n        [[ \"${fastqs[i]}\" =~ ([\\\\._ ][Rr]?[12])(\\\\.(fastq|fq|gz))+$ ]] && \\\\\n          R=\"${BASH_REMATCH[1]}\"\n        mv \"$output\" '!{prefix}'\"$R (trimmed)${output##*_val_$n}\"\n      done\n    done\n    '''\n}",
        "nb_lignes_process": 44,
        "string_script": "    paired = fastqs instanceof List ? '--paired' : ''\n    '''\n    for fastq in !{fastqs}; do\n      nospaces=${fastq// /_}\n      [[ \"$fastq\" != \"$nospaces\" ]] && mv \"$fastq\" \"$nospaces\"\n      fastqs+=(\"$fastq\")\n      renamed+=(\"$nospaces\")\n    done\n\n    trim_galore \\\\\n      \"${renamed[@]}\" \\\\\n      !{paired} \\\\\n      --cores !{task.cpus} \\\\\n      --gzip \\\\\n      --basename '!{prefix}'\n\n    for output in *_trimmed.*; do\n      [[ -f \"$output\" ]] || continue\n      mv \"$output\" '!{prefix}'\" (trimmed)${output##*_trimmed}\"\n    done\n\n    for n in 1 2; do\n      for output in *_val_$n.*; do\n        [[ -f \"$output\" ]] || continue\n        R=_R$n\n        i=$((n - 1))\n        [[ \"${fastqs[i]}\" =~ ([\\\\._ ][Rr]?[12])(\\\\.(fastq|fq|gz))+$ ]] && \\\\\n          R=\"${BASH_REMATCH[1]}\"\n        mv \"$output\" '!{prefix}'\"$R (trimmed)${output##*_val_$n}\"\n      done\n    done\n    '''",
        "nb_lignes_script": 31,
        "language_script": "bash",
        "tools": [
            "FQC"
        ],
        "tools_url": [
            "https://bio.tools/fqc"
        ],
        "tools_dico": [
            {
                "name": "FQC",
                "uri": "https://bio.tools/fqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality affairs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality assurance"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrates FastQC results into a web-based, interactive, and extensible FASTQ quality control tool.",
                "homepage": "https://github.com/pnnl/fqc"
            }
        ],
        "inputs": [
            "prefix",
            "fastqs"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_16'",
            "label 'memory_16'"
        ],
        "when": "",
        "stub": ""
    },
    "BEDTOOLS_compute_coverage": {
        "name_process": "BEDTOOLS_compute_coverage",
        "string_process": "process BEDTOOLS_compute_coverage {\n\n  label 'memory_4'\n\n  publishDir = [\n    path: params.output + '/coverage',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    tuple val(prefix), path(bam), val(direction)\n\n  output:\n    path(bed)\n\n  shell:\n    bed = prefix + '.bed'\n    '''\n    if [[ '!{direction}' == RF || '!{direction}' == FR ]]; then\n      bedtools genomecov -ibam !{bam} -bg -strand + > +.tsv\n      bedtools genomecov -ibam !{bam} -bg -strand - > -.tsv\n      cat \\\\\n        <(awk 'BEGIN {OFS=\"\\\\t\"} {print $0,\"+\"}' +.tsv) \\\\\n        <(awk 'BEGIN {OFS=\"\\\\t\"} {print $0,\"-\"}' -.tsv) \\\\\n        | sort -T \".\" -k1,3 -k5 \\\\\n        > '!{bed}'\n    else\n      bedtools genomecov -ibam !{bam} -bg > '!{bed}'\n    fi\n    '''\n}",
        "nb_lignes_process": 30,
        "string_script": "    bed = prefix + '.bed'\n    '''\n    if [[ '!{direction}' == RF || '!{direction}' == FR ]]; then\n      bedtools genomecov -ibam !{bam} -bg -strand + > +.tsv\n      bedtools genomecov -ibam !{bam} -bg -strand - > -.tsv\n      cat \\\\\n        <(awk 'BEGIN {OFS=\"\\\\t\"} {print $0,\"+\"}' +.tsv) \\\\\n        <(awk 'BEGIN {OFS=\"\\\\t\"} {print $0,\"-\"}' -.tsv) \\\\\n        | sort -T \".\" -k1,3 -k5 \\\\\n        > '!{bed}'\n    else\n      bedtools genomecov -ibam !{bam} -bg > '!{bed}'\n    fi\n    '''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "BED",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bed",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BED",
                "uri": "https://bio.tools/bed",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3345",
                            "term": "Data identity and mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "ID mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "Accession mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "Identifier mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biological Entity Dictionary. Get and explore mapping between identifiers of biological entities. It provides a way to connect to a BED Neo4j database in which the relationships between the identifiers from different sources are recorded.",
                "homepage": "https://github.com/patzaw/BED"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "prefix",
            "direction",
            "bam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_4'",
            "publishDir = [ path: params.output + '/coverage' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "STRINGTIE_assemble_transcripts": {
        "name_process": "STRINGTIE_assemble_transcripts",
        "string_process": "process STRINGTIE_assemble_transcripts {\n\n  input:\n    tuple val(id), path(bam), val(direction), path(annotation)\n\n  output:\n    path(assembly)\n\n  shell:\n    assembly = id + '.gtf'\n    direction = direction == 'FR' ? '--fr' : direction == 'RF' ? '--rf' : ''\n    '''\n    stringtie !{bam} !{direction} -G !{annotation} -o '!{assembly}'\n    '''\n}",
        "nb_lignes_process": 13,
        "string_script": "    assembly = id + '.gtf'\n    direction = direction == 'FR' ? '--fr' : direction == 'RF' ? '--rf' : ''\n    '''\n    stringtie !{bam} !{direction} -G !{annotation} -o '!{assembly}'\n    '''",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "hapAssembly",
            "StringTie"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly",
            "https://bio.tools/stringtie"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            },
            {
                "name": "StringTie",
                "uri": "https://bio.tools/stringtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/"
            }
        ],
        "inputs": [
            "id",
            "direction",
            "bam",
            "annotation"
        ],
        "nb_inputs": 4,
        "outputs": [
            "assembly"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "STRINGTIE_coalesce_transcripts": {
        "name_process": "STRINGTIE_coalesce_transcripts",
        "string_process": "\nprocess STRINGTIE_coalesce_transcripts {\n\n  label 'memory_16'\n\n  publishDir = [\n    path: params.output + '/annotation',\n    mode: 'copy',\n    overwrite: true\n  ]\n\n  input:\n    path(assemblies)\n    path(annotation)\n\n  output:\n    path('novel.gtf')\n\n  shell:\n    '''\n    mkdir results\n\n    stringtie \\\\\n      --merge !{assemblies} \\\\\n      -G !{annotation} \\\\\n      -o results/novel.gtf\n\n    # Add genes\n    awk \\\\\n      -f $(which compute_boundaries.awk) \\\\\n      -v toadd=gene \\\\\n      -v fldno=10 \\\\\n      -v keys=gene_name,ref_gene_id \\\\\n      results/novel.gtf \\\\\n      > results/novel.genes.gtf\n\n    cat \\\\\n      results/novel.genes.gtf \\\\\n      results/novel.gtf \\\\\n      | sort -k1,1 -k4,4n -k5,5rn \\\\\n      > results/novel.all.gtf\n\n    # Add transcript biotypes\n    awk \\\\\n      'BEGIN {\n        FS = \"\\\\t\"\n      }\n      NR == FNR {\n        match($9, /transcript_id \"([^;]*)\";*/, tId)\n        match($9, /transcript_biotype \"([^;]*)\";*/, biotype)\n        biotypes[tId[1]] = biotype[1]\n        next\n      }\n      !/^#/ && $3 != \"gene\" {\n        match($9, /transcript_id \"([^;]*)\";*/, tId)\n        if (tId[1] in biotypes) {\n          print $0 \" transcript_biotype \\\\\"\"biotypes[tId[1]]\"\\\\\";\"\n          next\n        }\n      }\n      {\n        print $0\n      }' \\\\\n      !{annotation} \\\\\n      results/novel.all.gtf \\\\\n      > results/novel.done.gtf\n\n    mv results/novel.done.gtf novel.gtf\n    '''\n}",
        "nb_lignes_process": 68,
        "string_script": "    '''\n    mkdir results\n\n    stringtie \\\\\n      --merge !{assemblies} \\\\\n      -G !{annotation} \\\\\n      -o results/novel.gtf\n\n    # Add genes\n    awk \\\\\n      -f $(which compute_boundaries.awk) \\\\\n      -v toadd=gene \\\\\n      -v fldno=10 \\\\\n      -v keys=gene_name,ref_gene_id \\\\\n      results/novel.gtf \\\\\n      > results/novel.genes.gtf\n\n    cat \\\\\n      results/novel.genes.gtf \\\\\n      results/novel.gtf \\\\\n      | sort -k1,1 -k4,4n -k5,5rn \\\\\n      > results/novel.all.gtf\n\n    # Add transcript biotypes\n    awk \\\\\n      'BEGIN {\n        FS = \"\\\\t\"\n      }\n      NR == FNR {\n        match($9, /transcript_id \"([^;]*)\";*/, tId)\n        match($9, /transcript_biotype \"([^;]*)\";*/, biotype)\n        biotypes[tId[1]] = biotype[1]\n        next\n      }\n      !/^#/ && $3 != \"gene\" {\n        match($9, /transcript_id \"([^;]*)\";*/, tId)\n        if (tId[1] in biotypes) {\n          print $0 \" transcript_biotype \\\\\"\"biotypes[tId[1]]\"\\\\\";\"\n          next\n        }\n      }\n      {\n        print $0\n      }' \\\\\n      !{annotation} \\\\\n      results/novel.all.gtf \\\\\n      > results/novel.done.gtf\n\n    mv results/novel.done.gtf novel.gtf\n    '''",
        "nb_lignes_script": 49,
        "language_script": "bash",
        "tools": [
            "StringTie",
            "NextSV"
        ],
        "tools_url": [
            "https://bio.tools/stringtie",
            "https://bio.tools/nextsv"
        ],
        "tools_dico": [
            {
                "name": "StringTie",
                "uri": "https://bio.tools/stringtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/"
            },
            {
                "name": "NextSV",
                "uri": "https://bio.tools/nextsv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A meta SV caller and a computational pipeline to perform SV calling from low coverage long-read sequencing data. It integrates three aligners and three SV callers and generates two integrated call sets (sensitive/stringent) for different analysis purpose.",
                "homepage": "http://github.com/Nextomics/NextSV"
            }
        ],
        "inputs": [
            "assemblies",
            "annotation"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'memory_16'",
            "publishDir = [ path: params.output + '/annotation' , mode: 'copy' , overwrite: true ]"
        ],
        "when": "",
        "stub": ""
    },
    "STRINGTIE_quantify_expression": {
        "name_process": "STRINGTIE_quantify_expression",
        "string_process": "\nprocess STRINGTIE_quantify_expression {\n\n  input:\n    tuple val(id), path(bam), val(length), val(direction), path(annotation), val(type)\n\n  output:\n    path('*.tsv')\n\n  shell:\n    direction = direction == 'FR' ? '--fr' : direction == 'RF' ? '--rf' : ''\n    '''\n    stringtie \\\\\n      !{bam} \\\\\n      !{direction} \\\\\n      -e \\\\\n      -B \\\\\n      -G !{annotation} \\\\\n      -A '!{id}'.'!{type}'_genes_TPM.tsv \\\\\n      -o '!{id}'.'!{type}'.gtf\n\n    mv t_data.ctab '!{id}'.'!{type}'_transcripts_TPM.tsv\n\n    mkdir counts\n    mv '!{id}'.'!{type}'.gtf counts\n\n    prepDE.py3 \\\\\n      -i . \\\\\n      -p counts \\\\\n      -g '!{id}'.'!{type}'_genes_counts.csv \\\\\n      -t '!{id}'.'!{type}'_transcripts_counts.csv \\\\\n      -l '!{length}'\n\n    tr ',' $'\\\\t' \\\\\n      < '!{id}'.'!{type}'_genes_counts.csv \\\\\n      > '!{id}'.'!{type}'_genes_counts.tsv\n\n    join \\\\\n      <(awk 'BEGIN {FS=\",\"; OFS=\"\\\\t\"} NR > 1 {print $1,$2 | \"sort\"}' \\\\\n      '!{id}'.'!{type}'_transcripts_counts.csv) \\\\\n      <(awk 'BEGIN {OFS=\"\\\\t\"} NR > 1 {print $6,$9 | \"sort\"}' \\\\\n      '!{id}'.'!{type}'_transcripts_TPM.tsv) \\\\\n      -t $'\\\\t' \\\\\n      -a 1 \\\\\n      -o '1.1 2.2 1.2' \\\\\n      | cat <(echo \"transcript\"$'\\\\t'\"gene\"$'\\\\t'\"counts\") - \\\\\n      > '!{id}'.'!{type}'_transcripts_counts.tsv\n    '''\n}",
        "nb_lignes_process": 47,
        "string_script": "    direction = direction == 'FR' ? '--fr' : direction == 'RF' ? '--rf' : ''\n    '''\n    stringtie \\\\\n      !{bam} \\\\\n      !{direction} \\\\\n      -e \\\\\n      -B \\\\\n      -G !{annotation} \\\\\n      -A '!{id}'.'!{type}'_genes_TPM.tsv \\\\\n      -o '!{id}'.'!{type}'.gtf\n\n    mv t_data.ctab '!{id}'.'!{type}'_transcripts_TPM.tsv\n\n    mkdir counts\n    mv '!{id}'.'!{type}'.gtf counts\n\n    prepDE.py3 \\\\\n      -i . \\\\\n      -p counts \\\\\n      -g '!{id}'.'!{type}'_genes_counts.csv \\\\\n      -t '!{id}'.'!{type}'_transcripts_counts.csv \\\\\n      -l '!{length}'\n\n    tr ',' $'\\\\t' \\\\\n      < '!{id}'.'!{type}'_genes_counts.csv \\\\\n      > '!{id}'.'!{type}'_genes_counts.tsv\n\n    join \\\\\n      <(awk 'BEGIN {FS=\",\"; OFS=\"\\\\t\"} NR > 1 {print $1,$2 | \"sort\"}' \\\\\n      '!{id}'.'!{type}'_transcripts_counts.csv) \\\\\n      <(awk 'BEGIN {OFS=\"\\\\t\"} NR > 1 {print $6,$9 | \"sort\"}' \\\\\n      '!{id}'.'!{type}'_transcripts_TPM.tsv) \\\\\n      -t $'\\\\t' \\\\\n      -a 1 \\\\\n      -o '1.1 2.2 1.2' \\\\\n      | cat <(echo \"transcript\"$'\\\\t'\"gene\"$'\\\\t'\"counts\") - \\\\\n      > '!{id}'.'!{type}'_transcripts_counts.tsv\n    '''",
        "nb_lignes_script": 37,
        "language_script": "bash",
        "tools": [
            "StringTie",
            "joineRML"
        ],
        "tools_url": [
            "https://bio.tools/stringtie",
            "https://bio.tools/joinerml"
        ],
        "tools_dico": [
            {
                "name": "StringTie",
                "uri": "https://bio.tools/stringtie",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3680",
                                    "term": "RNA-Seq analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.",
                "homepage": "https://ccb.jhu.edu/software/stringtie/"
            },
            {
                "name": "joineRML",
                "uri": "https://bio.tools/joinerml",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3569",
                            "term": "Applied mathematics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Joint Modelling of Multivariate Longitudinal Data and Time-to-Event Outcomes.",
                "homepage": "https://cran.r-project.org/web/packages/joineRML/"
            }
        ],
        "inputs": [
            "id",
            "length",
            "direction",
            "type",
            "bam",
            "annotation"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_sort_reads": {
        "name_process": "SAMTOOLS_sort_reads",
        "string_process": "process SAMTOOLS_sort_reads {\n\n  label 'cpu_16'\n  label 'memory_16'\n\n  publishDir = [\n    path: params.output + '/alignment',\n    mode: 'copyNoFollow',\n    overwrite: false\n  ]\n\n  input:\n    tuple val(prefix), path(bam)\n\n  output:\n    tuple val(prefix), path(sorted)\n\n  shell:\n    sorted = prefix + '.bam'\n    '''\n    source=$(readlink -m !{bam})\n    if [[ $(grep SO:unsorted <(samtools view -H \"$source\" | head -n 1)) ]]; then\n      samtools sort -@ !{task.cpus} -o '!{sorted}' \"$source\"\n    elif [[ !{bam} != '!{sorted}' ]]; then\n      ln -s \"$source\" '!{sorted}'\n    fi\n    '''\n}",
        "nb_lignes_process": 26,
        "string_script": "    sorted = prefix + '.bam'\n    '''\n    source=$(readlink -m !{bam})\n    if [[ $(grep SO:unsorted <(samtools view -H \"$source\" | head -n 1)) ]]; then\n      samtools sort -@ !{task.cpus} -o '!{sorted}' \"$source\"\n    elif [[ !{bam} != '!{sorted}' ]]; then\n      ln -s \"$source\" '!{sorted}'\n    fi\n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "prefix",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [
            "prefix"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "label 'cpu_16'",
            "label 'memory_16'",
            "publishDir = [ path: params.output + '/alignment' , mode: 'copyNoFollow' , overwrite: false ]"
        ],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_control_flags": {
        "name_process": "SAMTOOLS_control_flags",
        "string_process": "\nprocess SAMTOOLS_control_flags {\n\n  input:\n    tuple val(prefix), path(bam)\n\n  output:\n    path('*.flagstat')\n\n  shell:\n    '''\n    samtools flagstat -@ $((!{task.cpus} - 1)) !{bam} > '!{prefix}'.flagstat\n    '''\n}",
        "nb_lignes_process": 12,
        "string_script": "    '''\n    samtools flagstat -@ $((!{task.cpus} - 1)) !{bam} > '!{prefix}'.flagstat\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "prefix",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_control_alignments": {
        "name_process": "SAMTOOLS_control_alignments",
        "string_process": "\nprocess SAMTOOLS_control_alignments {\n\n  input:\n    tuple val(prefix), path(bam)\n\n  output:\n    path('*.stats')\n\n  shell:\n    '''\n    samtools stats -@ $((!{task.cpus} - 1)) !{bam} > '!{prefix}'.stats\n    '''\n}",
        "nb_lignes_process": 12,
        "string_script": "    '''\n    samtools stats -@ $((!{task.cpus} - 1)) !{bam} > '!{prefix}'.stats\n    '''",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "prefix",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_control_contigs": {
        "name_process": "SAMTOOLS_control_contigs",
        "string_process": "\nprocess SAMTOOLS_control_contigs {\n\n  input:\n    tuple val(prefix), path(bam)\n\n  output:\n    path('*.idxstats')\n\n  shell:\n    '''\n    samtools index -@ $((!{task.cpus} - 1)) !{bam}\n    samtools idxstats !{bam} > '!{prefix}'.idxstats\n    '''\n}",
        "nb_lignes_process": 13,
        "string_script": "    '''\n    samtools index -@ $((!{task.cpus} - 1)) !{bam}\n    samtools idxstats !{bam} > '!{prefix}'.idxstats\n    '''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "prefix",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "SAMTOOLS_merge_reads": {
        "name_process": "SAMTOOLS_merge_reads",
        "string_process": "\nprocess SAMTOOLS_merge_reads {\n\n  cpus = { bams instanceof List ? Math.min(16, params.max_cpus) : 1 }\n\n  input:\n    tuple val(id), path(bams), val(length), val(direction)\n\n  output:\n    tuple val(id), path(merged), val(length), val(direction)\n\n  shell:\n    merged = id + '.bam'\n    if (bams instanceof List)\n      '''\n      samtools merge '!{merged}' !{bams} --threads !{task.cpus}\n      '''\n    else if (bams.getName() != merged)\n      '''\n      mv !{bams} '!{merged}'\n      '''\n    else\n      '''\n      '''\n}",
        "nb_lignes_process": 23,
        "string_script": "    merged = id + '.bam'\n    if (bams instanceof List)\n      '''\n      samtools merge '!{merged}' !{bams} --threads !{task.cpus}\n      '''\n    else if (bams.getName() != merged)\n      '''\n      mv !{bams} '!{merged}'\n      '''\n    else\n      '''\n      '''",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "id",
            "length",
            "direction",
            "bams"
        ],
        "nb_inputs": 4,
        "outputs": [
            "direction"
        ],
        "nb_outputs": 1,
        "name_workflow": "FAANG__analysis-TAGADA",
        "directive": [
            "cpus = { bams instanceof List ? Math.min(16, params.max_cpus) : 1 }"
        ],
        "when": "",
        "stub": ""
    }
}