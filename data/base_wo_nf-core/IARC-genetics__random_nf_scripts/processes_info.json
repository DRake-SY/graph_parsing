{
    "clean_calls": {
        "name_process": "clean_calls",
        "string_process": "\nprocess clean_calls {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n \n\n  input:\n  \n  val x from samples\n\tval c from params.strelka2_path\n  val p from params.snpeff\n  \n\n  output:\n  file \"${x}.ann.vcf\" into clean_vcf\n  file \"${x}.ann.vcf\" into clean_vcf1\n  val \"${x}\" into ids\n  val \"${x}\" into ids1\n  script:\n  \"\"\"\n  java -Xmx32g -jar $p/SnpSift.jar filter \" (FILTER = 'PASS') \" $c${x}/variants/genome.vcf.gz > ${x}.temp\n  java -Xmx32g -jar $p/snpEff.jar GRCh38.99 ${x}.temp > \"${x}.ann.vcf\"\n\n\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  java -Xmx32g -jar $p/SnpSift.jar filter \" (FILTER = 'PASS') \" $c${x}/variants/genome.vcf.gz > ${x}.temp\n  java -Xmx32g -jar $p/snpEff.jar GRCh38.99 ${x}.temp > \"${x}.ann.vcf\"\n\n\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples",
            "params",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [
            "clean_vcf",
            "clean_vcf1",
            "ids",
            "ids1"
        ],
        "nb_outputs": 4,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "missense": {
        "name_process": "missense",
        "string_process": "\nprocess missense { \n\nerrorStrategy 'terminate'\npublishDir params.outdir , mode: 'copy' \nmemory \"32 GB\"\n\ninput:\nfile snpeff from clean_vcf\nval id from ids\nval p from params.snpeff\nval v from params.vcf_name\nval db from params.dbnsfp_reference\n\noutput: \nfile \"${id}.miss.txt\"\n\nscript:\n\"\"\"\njava -Xmx32g -jar $p/SnpSift.jar filter \"(ANN[0].EFFECT = 'missense_variant') \" ${snpeff} > miss.temp \njava -Xmx32g -jar $p/SnpSift.jar annotate -id $v miss.temp > miss.temp1\njava -Xmx32g -jar $p/SnpSift.jar dbnsfp -v -db $db  -f SIFT_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,MetaLR_pred,clinvar_id,clinvar_clnsig,clinvar_trait,gnomAD_genomes_AC,gnomAD_genomes_AF,GTEx_V8_gene,GTEx_V8_tissue  miss.temp1 > miss.ann.temp\njava -Xmx32g -jar $p/SnpSift.jar  extractFields -e \".\" miss.ann.temp CHROM POS ID REF ALT EFF[0].GENE EFF[0].IMPACT EFF[0].EFFECT GEN[*].GT dbNSFP_SIFT_pred dbNSFP_Polyphen2_HDIV_pred dbNSFP_Polyphen2_HVAR_pred dbNSFP_MetaLR_pred dbNSFP_gnomAD_genomes_AC dbNSFP_gnomAD_genomes_AF dbNSFP_clinvar_id dbNSFP_clinvar_clnsig dbNSFP_clinvar_trait > ${id}.miss.txt\n\n\"\"\" \n}",
        "nb_lignes_process": 24,
        "string_script": "\"\"\"\njava -Xmx32g -jar $p/SnpSift.jar filter \"(ANN[0].EFFECT = 'missense_variant') \" ${snpeff} > miss.temp \njava -Xmx32g -jar $p/SnpSift.jar annotate -id $v miss.temp > miss.temp1\njava -Xmx32g -jar $p/SnpSift.jar dbnsfp -v -db $db  -f SIFT_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,MetaLR_pred,clinvar_id,clinvar_clnsig,clinvar_trait,gnomAD_genomes_AC,gnomAD_genomes_AF,GTEx_V8_gene,GTEx_V8_tissue  miss.temp1 > miss.ann.temp\njava -Xmx32g -jar $p/SnpSift.jar  extractFields -e \".\" miss.ann.temp CHROM POS ID REF ALT EFF[0].GENE EFF[0].IMPACT EFF[0].EFFECT GEN[*].GT dbNSFP_SIFT_pred dbNSFP_Polyphen2_HDIV_pred dbNSFP_Polyphen2_HVAR_pred dbNSFP_MetaLR_pred dbNSFP_gnomAD_genomes_AC dbNSFP_gnomAD_genomes_AF dbNSFP_clinvar_id dbNSFP_clinvar_clnsig dbNSFP_clinvar_trait > ${id}.miss.txt\n\n\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "clean_vcf",
            "ids",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "publishDir params.outdir , mode: 'copy'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "high_impact": {
        "name_process": "high_impact",
        "string_process": "\nprocess high_impact { \n\nerrorStrategy 'terminate'\npublishDir params.outdir , mode: 'copy' \nmemory \"32 GB\"\n\ninput:\nval p from params.snpeff\nfile snpeff from clean_vcf1\nval v from params.vcf_name\nval db from params.dbnsfp_reference\nval id from ids1\n\noutput: \nfile \"${id}.high.txt\"\n\n\nscript:\n\n\"\"\"\n\njava -Xmx32g -jar $p/SnpSift.jar filter \"(ANN[0].IMPACT = 'HIGH') & (ANN[0].EFFECT !='structural_interaction_variant')  \" ${snpeff} > high.temp \njava -Xmx32g -jar $p/SnpSift.jar annotate -id $v high.temp > high.temp1\njava -Xmx32g -jar $p/SnpSift.jar dbnsfp -v -db $db  -f SIFT_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,MetaLR_pred,clinvar_id,clinvar_clnsig,clinvar_trait,gnomAD_genomes_AC,gnomAD_genomes_AF,GTEx_V8_gene,GTEx_V8_tissue  high.temp1 > high.ann.temp\njava -Xmx32g -jar $p/SnpSift.jar  extractFields -e \".\" high.ann.temp CHROM POS ID REF ALT EFF[0].GENE EFF[0].IMPACT EFF[0].EFFECT GEN[*].GT dbNSFP_SIFT_pred dbNSFP_Polyphen2_HDIV_pred dbNSFP_Polyphen2_HVAR_pred dbNSFP_MetaLR_pred dbNSFP_gnomAD_genomes_AC dbNSFP_gnomAD_genomes_AF dbNSFP_clinvar_id dbNSFP_clinvar_clnsig dbNSFP_clinvar_trait > ${id}.high.txt\n\n\"\"\" \n}",
        "nb_lignes_process": 27,
        "string_script": "\"\"\"\n\njava -Xmx32g -jar $p/SnpSift.jar filter \"(ANN[0].IMPACT = 'HIGH') & (ANN[0].EFFECT !='structural_interaction_variant')  \" ${snpeff} > high.temp \njava -Xmx32g -jar $p/SnpSift.jar annotate -id $v high.temp > high.temp1\njava -Xmx32g -jar $p/SnpSift.jar dbnsfp -v -db $db  -f SIFT_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,MetaLR_pred,clinvar_id,clinvar_clnsig,clinvar_trait,gnomAD_genomes_AC,gnomAD_genomes_AF,GTEx_V8_gene,GTEx_V8_tissue  high.temp1 > high.ann.temp\njava -Xmx32g -jar $p/SnpSift.jar  extractFields -e \".\" high.ann.temp CHROM POS ID REF ALT EFF[0].GENE EFF[0].IMPACT EFF[0].EFFECT GEN[*].GT dbNSFP_SIFT_pred dbNSFP_Polyphen2_HDIV_pred dbNSFP_Polyphen2_HVAR_pred dbNSFP_MetaLR_pred dbNSFP_gnomAD_genomes_AC dbNSFP_gnomAD_genomes_AF dbNSFP_clinvar_id dbNSFP_clinvar_clnsig dbNSFP_clinvar_trait > ${id}.high.txt\n\n\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "clean_vcf1",
            "params",
            "params",
            "ids1"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "publishDir params.outdir , mode: 'copy'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr1": {
        "name_process": "chr1",
        "string_process": "\nprocess chr1 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr1.vcf.gz\" into chr1_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr1.vcf.gz -r chr1\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr1.vcf.gz -r chr1\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr1_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr2": {
        "name_process": "chr2",
        "string_process": "\nprocess chr2 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr2.vcf.gz\" into chr2_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr2.vcf.gz -r chr2\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr2.vcf.gz -r chr2\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr2_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr3": {
        "name_process": "chr3",
        "string_process": "\nprocess chr3 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr3.vcf.gz\" into chr3_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr3.vcf.gz -r chr3\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr3.vcf.gz -r chr3\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr3_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr4": {
        "name_process": "chr4",
        "string_process": " process chr4 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr4.vcf.gz\" into chr4_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr4.vcf.gz -r chr4\n\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr4.vcf.gz -r chr4\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr4_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr5": {
        "name_process": "chr5",
        "string_process": "\nprocess chr5 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr5.vcf.gz\" into chr5_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr5.vcf.gz -r chr5\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr5.vcf.gz -r chr5\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr5_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr6": {
        "name_process": "chr6",
        "string_process": "\nprocess chr6 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr6.vcf.gz\" into chr6_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr6.vcf.gz -r chr6\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr6.vcf.gz -r chr6\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr6_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr7": {
        "name_process": "chr7",
        "string_process": "\nprocess chr7 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr7.vcf.gz\" into chr7_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr7.vcf.gz -r chr7\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr7.vcf.gz -r chr7\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr7_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr8": {
        "name_process": "chr8",
        "string_process": "\nprocess chr8 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr8.vcf.gz\" into chr8_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr8.vcf.gz -r chr8\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr8.vcf.gz -r chr8\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr8_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr9": {
        "name_process": "chr9",
        "string_process": "\nprocess chr9 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr9.vcf.gz\" into chr9_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr9.vcf.gz -r chr9\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr9.vcf.gz -r chr9\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr9_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr10": {
        "name_process": "chr10",
        "string_process": " process chr10 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr10.vcf.gz\" into chr10_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr10.vcf.gz -r chr10\n\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr10.vcf.gz -r chr10\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr10_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr11": {
        "name_process": "chr11",
        "string_process": "\nprocess chr11 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr11.vcf.gz\" into chr11_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr11.vcf.gz -r chr11\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr11.vcf.gz -r chr11\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr11_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr12": {
        "name_process": "chr12",
        "string_process": "\nprocess chr12 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr12.vcf.gz\" into chr12_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr12.vcf.gz -r chr12\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr12.vcf.gz -r chr12\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr12_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr13": {
        "name_process": "chr13",
        "string_process": "\nprocess chr13 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr13.vcf.gz\" into chr13_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr13.vcf.gz -r chr13\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr13.vcf.gz -r chr13\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr13_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr14": {
        "name_process": "chr14",
        "string_process": " process chr14 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr14.vcf.gz\" into chr14_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr14.vcf.gz -r chr14\n\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr14.vcf.gz -r chr14\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr14_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr15": {
        "name_process": "chr15",
        "string_process": "\nprocess chr15 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr15.vcf.gz\" into chr15_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr15.vcf.gz -r chr15\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr15.vcf.gz -r chr15\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr15_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr16": {
        "name_process": "chr16",
        "string_process": "\nprocess chr16 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr16.vcf.gz\" into chr16_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr16.vcf.gz -r chr16\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr16.vcf.gz -r chr16\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr16_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr17": {
        "name_process": "chr17",
        "string_process": "\nprocess chr17 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr17.vcf.gz\" into chr17_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr17.vcf.gz -r chr17\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr17.vcf.gz -r chr17\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr17_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr18": {
        "name_process": "chr18",
        "string_process": "\nprocess chr18 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr18.vcf.gz\" into chr18_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr18.vcf.gz -r chr18\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr18.vcf.gz -r chr18\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr18_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr19": {
        "name_process": "chr19",
        "string_process": "\nprocess chr19 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr19.vcf.gz\" into chr19_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr19.vcf.gz -r chr19\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr19.vcf.gz -r chr19\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr19_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr20": {
        "name_process": "chr20",
        "string_process": " process chr20 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr20.vcf.gz\" into chr20_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr20.vcf.gz -r chr20\n\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr20.vcf.gz -r chr20\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr20_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr21": {
        "name_process": "chr21",
        "string_process": "\nprocess chr21 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr21.vcf.gz\" into chr21_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr21.vcf.gz -r chr21\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr21.vcf.gz -r chr21\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr21_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chr22": {
        "name_process": "chr22",
        "string_process": "\nprocess chr22 {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chr22.vcf.gz\" into chr22_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr22.vcf.gz -r chr22\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chr22.vcf.gz -r chr22\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chr22_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chrX": {
        "name_process": "chrX",
        "string_process": "\nprocess chrX {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chrX.vcf.gz\" into chrX_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chrX.vcf.gz -r chrX\n\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chrX.vcf.gz -r chrX\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chrX_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "chrY": {
        "name_process": "chrY",
        "string_process": " process chrY {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val x from params.sampleslist\n  val caller from params.gvcfcaller\n  val p from params.gvcfcaller\n  val fasta from params.fasta_ref\n  \n  output:\n  file \"chrY.vcf.gz\" into chrY_gvcf\n  script:\n  \"\"\"\n  $p -l $x -f $fasta -Oz -o chrY.vcf.gz -r chrY\n\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  $p -l $x -f $fasta -Oz -o chrY.vcf.gz -r chrY\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "chrY_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "put_together": {
        "name_process": "put_together",
        "string_process": " process put_together {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n cpus 8\n conda 'bcftools'\n  input:\n  val chr1 from chr1_gvcf\n  val chr2 from chr2_gvcf\n  val chr3 from chr3_gvcf\n  val chr4 from chr4_gvcf\n  val chr5 from chr5_gvcf\n  val chr6 from chr6_gvcf\n  val chr7 from chr7_gvcf\n  val chr8 from chr8_gvcf\n  val chr9 from chr9_gvcf\n  val chr10 from chr10_gvcf\n  val chr11 from chr11_gvcf\n  val chr12 from chr12_gvcf\n  val chr13 from chr13_gvcf\n  val chr14 from chr14_gvcf\n  val chr15 from chr15_gvcf\n  val chr16 from chr16_gvcf\n  val chr17 from chr17_gvcf\n  val chr18 from chr18_gvcf\n  val chr19 from chr19_gvcf\n  val chr20 from chr20_gvcf\n  val chr21 from chr21_gvcf\n  val chr22 from chr22_gvcf\n  val chrX from chrX_gvcf\n  val chrY from chrY_gvcf\n  \n  output:\n  file \"combined.vcf.gz\" into combined\n  script:\n  \"\"\"\n  bcftools concat -O z -o combined.vcf.gz --threads 8 $chr1 $chr2 $chr3 $chr4 $chr5 $chr6 $chr7 $chr8 $chr9 $chr10 $chr11 $chr12 $chr13 $chr14 $chr15 $chr16 $chr17 $chr18 $chr19 $chr20 $chr21 $chr22 $chrX $chrY\n\n  \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  \"\"\"\n  bcftools concat -O z -o combined.vcf.gz --threads 8 $chr1 $chr2 $chr3 $chr4 $chr5 $chr6 $chr7 $chr8 $chr9 $chr10 $chr11 $chr12 $chr13 $chr14 $chr15 $chr16 $chr17 $chr18 $chr19 $chr20 $chr21 $chr22 $chrX $chrY\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "chr1_gvcf",
            "chr2_gvcf",
            "chr3_gvcf",
            "chr4_gvcf",
            "chr5_gvcf",
            "chr6_gvcf",
            "chr7_gvcf",
            "chr8_gvcf",
            "chr9_gvcf",
            "chr10_gvcf",
            "chr11_gvcf",
            "chr12_gvcf",
            "chr13_gvcf",
            "chr14_gvcf",
            "chr15_gvcf",
            "chr16_gvcf",
            "chr17_gvcf",
            "chr18_gvcf",
            "chr19_gvcf",
            "chr20_gvcf",
            "chr21_gvcf",
            "chr22_gvcf",
            "chrX_gvcf",
            "chrY_gvcf"
        ],
        "nb_inputs": 24,
        "outputs": [
            "combined"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\"",
            "cpus 8",
            "conda 'bcftools'"
        ],
        "when": "",
        "stub": ""
    },
    "dbsnp_annotate": {
        "name_process": "dbsnp_annotate",
        "string_process": " process dbsnp_annotate {\nerrorStrategy 'terminate'\nmemory \"120 GB\"\ncpus 4\ninput:\nval snpeff from params.snpeff\nval v from params.vcf_name\nval input_file from combined\n\noutput: \nfile \"outfile.vcf\" into dbsnp  \nscript:\n  \"\"\"\n  java -Xmx120g -jar $snpeff annotate -id $v $input_file > outfile.vcf\n  \n  \n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  java -Xmx120g -jar $snpeff annotate -id $v $input_file > outfile.vcf\n  \n  \n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "combined"
        ],
        "nb_inputs": 3,
        "outputs": [
            "dbsnp"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"120 GB\"",
            "cpus 4"
        ],
        "when": "",
        "stub": ""
    },
    "make_plink_file": {
        "name_process": "make_plink_file",
        "string_process": " process make_plink_file {\nerrorStrategy 'terminate'\npublishDir params.outdir , mode: 'copy' \nmemory \"120 GB\"\ncpus 16\ninput:\n\nval p from params.plink\nval output_name from params.output_name\nval dbsnp_vcf from dbsnp\n\n  \noutput:\nfile \"${output_name}.pvar\"\nfile \"${output_name}.psam\"\nfile \"${output_name}.pgen\"\n\n  script:\n  \"\"\"\n  $p --vcf $dbsnp_vcf --memory 120000 --threads 16 --make-pfile --out $output_name\n  \n  \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  $p --vcf $dbsnp_vcf --memory 120000 --threads 16 --make-pfile --out $output_name\n  \n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "dbsnp"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "publishDir params.outdir , mode: 'copy'",
            "memory \"120 GB\"",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "clean_sumstats": {
        "name_process": "clean_sumstats",
        "string_process": "\nprocess clean_sumstats { \n\n    errorStrategy 'terminate'\n\n    input:\n    val file_name from params.infile\n    val P from params.pcol_name\n    val SNP from params.snpcol_name\n    val path from params.path\n    \n    output:\n    file \"for_clump.txt\" into clean_sum\n    file \"for_clump.txt\" into clean1\n    script:\n     \"\"\"\n  python $path/clean.py -i $file_name -p $P -s $SNP -o for_clump.txt\n\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "     \"\"\"\n  python $path/clean.py -i $file_name -p $P -s $SNP -o for_clump.txt\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [
            "clean_sum",
            "clean1"
        ],
        "nb_outputs": 2,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'"
        ],
        "when": "",
        "stub": ""
    },
    "plink": {
        "name_process": "plink",
        "string_process": "\nprocess plink {\nerrorStrategy 'terminate'\n memory \"32 GB\"\n  input:\n  val plink_ref from params.plink_1000G_ref\n  val plink from params.plink\n  val r2 from params.r2\n  val kb from params.clump_kb \n  val pval from params.clump_P\n  val file_name from clean_sum\n  output:\n  file \"keep.clumped\" into plink\n  script:\n  \"\"\"\n  $plink --bfile $plink_ref --clump $file_name --clump-kb $kb --clump-r2 $r2 --clump-p1 $pval --out keep\n\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  $plink --bfile $plink_ref --clump $file_name --clump-kb $kb --clump-r2 $r2 --clump-p1 $pval --out keep\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "params",
            "params",
            "params",
            "clean_sum"
        ],
        "nb_inputs": 6,
        "outputs": [
            "plink"
        ],
        "nb_outputs": 1,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "memory \"32 GB\""
        ],
        "when": "",
        "stub": ""
    },
    "extract_variants": {
        "name_process": "extract_variants",
        "string_process": "\nprocess extract_variants { \n\n  errorStrategy 'terminate'\n  publishDir params.path , mode: 'copy' \n    input:\n    val file_name from plink\n    val input_name from clean1\n    val out from params.outfile\n    val path from params.path\n    \n    \n    output:\n    file \"${out}\" \n    \n    script:\n     \"\"\"\n  python $path/create_sum.py -i $input_name -s $file_name -o $out\n\n  \"\"\"\n }",
        "nb_lignes_process": 19,
        "string_script": "     \"\"\"\n  python $path/create_sum.py -i $input_name -s $file_name -o $out\n\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "plink",
            "clean1",
            "params",
            "params"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "IARC-genetics__random_nf_scripts",
        "directive": [
            "errorStrategy 'terminate'",
            "publishDir params.path , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}