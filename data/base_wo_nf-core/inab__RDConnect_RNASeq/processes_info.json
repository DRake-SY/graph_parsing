{
    "Align": {
        "name_process": "Align",
        "string_process": "\nprocess Align {\n    tag \"Align\"\n    label 'STAR'\n    \n    publishDir params.outdir, mode:'copy'\n    \n    input:\n    file fq1 from fq1_ch\n    file fq2 from fq2_ch\n    file fasta_ref from ref_file_ch\n    file fai_ref from ref_fai_ch\n    file dict_ref from ref_dict_ch\n    file all_indexes from idxes_star.collect() \n     \n    output:\n    file(params.SAMPLEID + \"Aligned.toTranscriptome.out.bam\") into transcriptome_bam\n    file(params.SAMPLEID + \"Aligned.sortedByCoord.out.bam\") into aligned_bam\n    script:\n    \"\"\"\n    STAR --runThreadN $task.cpus \\\n     --outSAMunmapped Within \\\n     --genomeDir ./    \\\n     --readFilesIn $fq1 $fq2 \\\n     --outFileNamePrefix $params.SAMPLEID \\\n     --readFilesCommand zcat     \\\n     --quantMode TranscriptomeSAM \\\n     --outFilterType BySJout     \\\n     --outFilterMultimapNmax 20 \\\n     --alignSJoverhangMin 8     \\\n     --alignSJDBoverhangMin 1 \\\n     --outFilterMismatchNmax 999 \\\n     --alignIntronMin 20     \\\n     --alignIntronMax 1000000 \\\n     --alignMatesGapMax 1000000     \\\n     --outTmpDir ./STAR_ \\\n     --outSAMtype BAM SortedByCoordinate     \\\n     --outSAMattrIHstart 0 \\\n     --outSAMattributes NH HI NM MD AS nM     \\\n     --outSAMattrRGline ID:$params.SAMPLEID SM:$params.SAMPLEID\n\n    \"\"\" \n}",
        "nb_lignes_process": 41,
        "string_script": "    \"\"\"\n    STAR --runThreadN $task.cpus \\\n     --outSAMunmapped Within \\\n     --genomeDir ./    \\\n     --readFilesIn $fq1 $fq2 \\\n     --outFileNamePrefix $params.SAMPLEID \\\n     --readFilesCommand zcat     \\\n     --quantMode TranscriptomeSAM \\\n     --outFilterType BySJout     \\\n     --outFilterMultimapNmax 20 \\\n     --alignSJoverhangMin 8     \\\n     --alignSJDBoverhangMin 1 \\\n     --outFilterMismatchNmax 999 \\\n     --alignIntronMin 20     \\\n     --alignIntronMax 1000000 \\\n     --alignMatesGapMax 1000000     \\\n     --outTmpDir ./STAR_ \\\n     --outSAMtype BAM SortedByCoordinate     \\\n     --outSAMattrIHstart 0 \\\n     --outSAMattributes NH HI NM MD AS nM     \\\n     --outSAMattrRGline ID:$params.SAMPLEID SM:$params.SAMPLEID\n\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "fq1_ch",
            "fq2_ch",
            "ref_file_ch",
            "ref_fai_ch",
            "ref_dict_ch",
            "idxes_star"
        ],
        "nb_inputs": 6,
        "outputs": [
            "transcriptome_bam",
            "aligned_bam"
        ],
        "nb_outputs": 2,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Align\"",
            "label 'STAR'",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "RSEM": {
        "name_process": "RSEM",
        "string_process": "\nprocess RSEM {\n    tag \"RSEM\"\n\t\t\t\tlabel 'RSEM'\n    \n    publishDir params.outdir, mode:'copy'\n    \n    input:\n    file bam1_in from aligned_bam\n\t\t\t\tfile all_indexes from idxes_rsem.collect()\n    \n    output:\n    file( params.SAMPLEID + \".isoforms.results\") into isoforms_file\n\t\t\t\tfile( params.SAMPLEID +\".genes.results\") into genes_file\n\n\n    script:\n    \"\"\"\n\t\t\t\t rsem-calculate-expression \\\n       -p $task.cpus \\\n       --no-bam-output \\\n       --bam       \\\n       --temporary-folder ./rsem \\\n       --paired-end $bam1_in \\\n         ./ \\\n         $params.$SAMPLEID\n\n    \"\"\"  \n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n\t\t\t\t rsem-calculate-expression \\\n       -p $task.cpus \\\n       --no-bam-output \\\n       --bam       \\\n       --temporary-folder ./rsem \\\n       --paired-end $bam1_in \\\n         ./ \\\n         $params.$SAMPLEID\n\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "aligned_bam",
            "idxes_rsem"
        ],
        "nb_inputs": 2,
        "outputs": [
            "isoforms_file",
            "genes_file"
        ],
        "nb_outputs": 2,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"RSEM\"",
            "label 'RSEM'",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "normalize": {
        "name_process": "normalize",
        "string_process": "\nprocess normalize {\n    tag \"AddReplaceRG\"\n    label 'picard'\n    input:\n    file bam_in from bam_file_ch\n    file bai_in from bai_file_ch\n    file fasta_ref from ref_file_1\n    file fai_ref from ref_fai_1\n    file dict_ref from ref_dict_1\n     \n    output:\n    file(\"Step1_out.bam\") into step1_bam\n \n    script:\n    \"\"\"\n    java  -jar $params.PICARD  AddOrReplaceReadGroups \\\n     I=$bam_in \\\n     O=Step1_out.bam \\\n     SO=coordinate \\\n     RGID=$params.SAMPLEID \\\n     RGLB=$params.RGLB \\\n     RGPL=$params.RGPL \\\n     RGPU=$params.RGPU \\\n     RGSM=$params.SAMPLEID \\\n     USE_JDK_DEFLATER=true \\\n     USE_JDK_INFLATER=true\n    \"\"\" \n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    java  -jar $params.PICARD  AddOrReplaceReadGroups \\\n     I=$bam_in \\\n     O=Step1_out.bam \\\n     SO=coordinate \\\n     RGID=$params.SAMPLEID \\\n     RGLB=$params.RGLB \\\n     RGPL=$params.RGPL \\\n     RGPU=$params.RGPU \\\n     RGSM=$params.SAMPLEID \\\n     USE_JDK_DEFLATER=true \\\n     USE_JDK_INFLATER=true\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_file_ch",
            "bai_file_ch",
            "ref_file_1",
            "ref_fai_1",
            "ref_dict_1"
        ],
        "nb_inputs": 5,
        "outputs": [
            "step1_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"AddReplaceRG\"",
            "label 'picard'"
        ],
        "when": "",
        "stub": ""
    },
    "Duplicate_marking": {
        "name_process": "Duplicate_marking",
        "string_process": "\nprocess Duplicate_marking {\n    tag \"Duplicate marking\"\n\t\t\t\tlabel 'picard'\n    input:\n    file bam1_in from step1_bam\n\t\t\t\t\n    output:\n    file( \"Step2_out.bam\") into step2_bam\n\t\t\t\tfile( \"Step2_out.bai\") into step2_bai\n\n    script:\n    gbmem = \"${task.memory.toGiga()}g\"\n    \"\"\"\n    java -Xmx${gbmem} -jar $params.PICARD MarkDuplicates \\\n     I=$bam1_in \\\n     O=Step2_out.bam  \\\n     CREATE_INDEX=true \\\n     VALIDATION_STRINGENCY=SILENT \\\n     M=output.metrics    \\\n     USE_JDK_DEFLATER=true \\\n     USE_JDK_INFLATER=true\n    \"\"\"  \n}",
        "nb_lignes_process": 22,
        "string_script": "    gbmem = \"${task.memory.toGiga()}g\"\n    \"\"\"\n    java -Xmx${gbmem} -jar $params.PICARD MarkDuplicates \\\n     I=$bam1_in \\\n     O=Step2_out.bam  \\\n     CREATE_INDEX=true \\\n     VALIDATION_STRINGENCY=SILENT \\\n     M=output.metrics    \\\n     USE_JDK_DEFLATER=true \\\n     USE_JDK_INFLATER=true\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step1_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "step2_bam",
            "step2_bai"
        ],
        "nb_outputs": 2,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Duplicate marking\"",
            "label 'picard'"
        ],
        "when": "",
        "stub": ""
    },
    "SplitNTrim": {
        "name_process": "SplitNTrim",
        "string_process": "\nprocess SplitNTrim {\n    tag \"Split n trim\"\n\t\t\t\tlabel 'GATK'\n    input:\n    file bam2_in from step2_bam\n    file bai2_in from step2_bai\n    file fasta_ref2 from ref_file_2\n    file fai_ref2 from ref_fai_2\n    file dict_ref2 from ref_dict_2\n\t\t\t\t\n    output:\n    file( \"Step3_out.bam\") into step3_bam\n\t\t\t\tfile( \"Step3_out.bai\") into step3_bai\n\n\n    script:\n    \"\"\"\n       java  -jar $params.GATK \\\n     -T SplitNCigarReads \\\n     -R $fasta_ref2 \\\n     -I $bam2_in \\\n     -o Step3_out.bam \\\n     -rf ReassignOneMappingQuality \\\n     -RMQF 255 \\\n     -RMQT 60 \\\n     -U ALLOW_N_CIGAR_READS \n    \"\"\"\n    \n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n       java  -jar $params.GATK \\\n     -T SplitNCigarReads \\\n     -R $fasta_ref2 \\\n     -I $bam2_in \\\n     -o Step3_out.bam \\\n     -rf ReassignOneMappingQuality \\\n     -RMQF 255 \\\n     -RMQT 60 \\\n     -U ALLOW_N_CIGAR_READS \n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step2_bam",
            "step2_bai",
            "ref_file_2",
            "ref_fai_2",
            "ref_dict_2"
        ],
        "nb_inputs": 5,
        "outputs": [
            "step3_bam",
            "step3_bai"
        ],
        "nb_outputs": 2,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Split n trim\"",
            "label 'GATK'"
        ],
        "when": "",
        "stub": ""
    },
    "IndelRealign": {
        "name_process": "IndelRealign",
        "string_process": "\nprocess IndelRealign {\n    tag \"Indel realingment\"\n\t\t\t\tlabel 'GATK'\n    input:\n    file bam3_in from step3_bam\n    file bai3_in from step3_bai\n    file fasta_ref3 from ref_file_3\n    file fai_ref3 from ref_fai_3\n    file dict_ref3 from ref_dict_3\n    file dbindel from dbindel_file\n\t\t\t\t\n    output:\n\t\t\t\tfile( \"Step4_out.bam\") into step4_bam\n\n\n    script:\n    \"\"\"\n       java -jar $params.GATK \\\n      -T RealignerTargetCreator \\\n      -R $fasta_ref3 \\\n      -I $bam3_in \\\n      -o Step4.intervals \\\n      -known $dbindel \\\n      --minReadsAtLocus 6 \\\n      --maxIntervalSize 200 \\\n      --downsampling_type NONE  \n   \n   #   -U ALLOW_SEQ_DICT_INCOMPATIBILITY\n      \n    java -jar $params.GATK \\\n      -T IndelRealigner \\\n      -R $fasta_ref3\\\n      -I $bam3_in \\\n      -known $dbindel \\\n      -targetIntervals Step4.intervals \\\n      --maxReadsForRealignment 10000 \\\n      --consensusDeterminationModel USE_SW \\\n      --downsampling_type NONE \\\n      -o Step4_out.bam\n    \"\"\"\n  }",
        "nb_lignes_process": 40,
        "string_script": "    \"\"\"\n       java -jar $params.GATK \\\n      -T RealignerTargetCreator \\\n      -R $fasta_ref3 \\\n      -I $bam3_in \\\n      -o Step4.intervals \\\n      -known $dbindel \\\n      --minReadsAtLocus 6 \\\n      --maxIntervalSize 200 \\\n      --downsampling_type NONE  \n   \n   #   -U ALLOW_SEQ_DICT_INCOMPATIBILITY\n      \n    java -jar $params.GATK \\\n      -T IndelRealigner \\\n      -R $fasta_ref3\\\n      -I $bam3_in \\\n      -known $dbindel \\\n      -targetIntervals Step4.intervals \\\n      --maxReadsForRealignment 10000 \\\n      --consensusDeterminationModel USE_SW \\\n      --downsampling_type NONE \\\n      -o Step4_out.bam\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step3_bam",
            "step3_bai",
            "ref_file_3",
            "ref_fai_3",
            "ref_dict_3",
            "dbindel_file"
        ],
        "nb_inputs": 6,
        "outputs": [
            "step4_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Indel realingment\"",
            "label 'GATK'"
        ],
        "when": "",
        "stub": ""
    },
    "BQSR": {
        "name_process": "BQSR",
        "string_process": " process BQSR {\n    tag \"BQSR\"\n\t\t\t\tlabel 'BQSR'\n    publishDir params.outdir, mode:'copy'\n\n    input:\n    file bam4_in from step4_bam\n    file fasta_ref4 from ref_file_4\n    file fai_ref4 from ref_fai_4\n    file dict_ref4 from ref_dict_4\n    file dbsnp from dbsnp_file\n\t\t\t\t\n    output:\n\t\t\t\tfile( \"Step5_out.bam\") into step5_bam\n\n    script:\n    \n     gbmem = \"${task.memory.toGiga()}g\"\n     \"\"\"\n     java -Xmx${gbmem} -jar $params.GATK \\\n      -T BaseRecalibrator \\\n      -nct $task.cpus \\\n      --default_platform illumina \\\n      -cov ReadGroupCovariate \\\n      -cov QualityScoreCovariate \\\n      -cov CycleCovariate \\\n      -knownSites $dbsnp \\\n      -cov ContextCovariate  \\\n      -R $fasta_ref4 \\\n      -I $bam4_in \\\n      --downsampling_type NONE \\\n      -o recalibration_report.grp\n     \n     java -jar $params.GATK \\\n     -T PrintReads \\\n     -R $fasta_ref4 \\\n     -I $bam4_in \\\n     -BQSR recalibration_report.grp \\\n     -o Step5_out.bam   \n\n    \"\"\"\n\n     \n\n  }",
        "nb_lignes_process": 43,
        "string_script": "     gbmem = \"${task.memory.toGiga()}g\"\n     \"\"\"\n     java -Xmx${gbmem} -jar $params.GATK \\\n      -T BaseRecalibrator \\\n      -nct $task.cpus \\\n      --default_platform illumina \\\n      -cov ReadGroupCovariate \\\n      -cov QualityScoreCovariate \\\n      -cov CycleCovariate \\\n      -knownSites $dbsnp \\\n      -cov ContextCovariate  \\\n      -R $fasta_ref4 \\\n      -I $bam4_in \\\n      --downsampling_type NONE \\\n      -o recalibration_report.grp\n     \n     java -jar $params.GATK \\\n     -T PrintReads \\\n     -R $fasta_ref4 \\\n     -I $bam4_in \\\n     -BQSR recalibration_report.grp \\\n     -o Step5_out.bam   \n\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step4_bam",
            "ref_file_4",
            "ref_fai_4",
            "ref_dict_4",
            "dbsnp_file"
        ],
        "nb_inputs": 5,
        "outputs": [
            "step5_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"BQSR\"",
            "label 'BQSR'",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "VarCalling": {
        "name_process": "VarCalling",
        "string_process": " process VarCalling {\n    tag \"VarCalling\"\n\t\t\t\tlabel 'VarCalling'\n    \n    input:\n    file bam5_in from step5_bam_1\n    file fasta_ref5 from ref_file_5\n    file fai_ref5 from ref_fai_5\n    file dict_ref5 from ref_dict_5\n\t\t\t\t\n    output:\n\t\t\t\tfile( \"Step6_out.g.vcf\") into step6_vcf\n\n    script:\n    gbmem = \"${task.memory.toGiga()}g\"\n    \"\"\"\n    \n    java -Xmx${gbmem} -jar $params.GATK \\\n     -T HaplotypeCaller \\\n        -R $fasta_ref5 \\\n        -I $bam5_in \\\n         -dontUseSoftClippedBases \\\n         -o Step6_out.g.vcf \\\n         --pair_hmm_implementation LOGLESS_CACHING \\\n         -nct $task.cpus \\\n         -dt NONE \\\n         -rf BadCigar \\\n         --never_trim_vcf_format_field \\\n         -A AlleleBalance \\\n         -A BaseCounts \\\n         -A BaseQualityRankSumTest \\\n         -A ChromosomeCounts \\\n         -A ClippingRankSumTest \\\n         -A Coverage \\\n         -A DepthPerAlleleBySample \\\n         -A DepthPerSampleHC \\\n         -A FisherStrand \\\n         -A GCContent \\\n         -A HaplotypeScore \\\n         -A HardyWeinberg \\\n         -A HomopolymerRun \\\n         -A ClippingRankSumTest \\\n         -A LikelihoodRankSumTest \\\n         -A LowMQ \\\n         -A MappingQualityRankSumTest \\\n         -A MappingQualityZero \\\n         -A MappingQualityZeroBySample \\\n         -A NBaseCount \\\n         -A QualByDepth \\\n         -A RMSMappingQuality \\\n         -A ReadPosRankSumTest \\\n         -A StrandBiasBySample \\\n         -A StrandOddsRatio \\\n         -A VariantType \\\n         -ploidy 2 \\\n         --min_base_quality_score 10 \\\n         -ERC GVCF \\\n         -variant_index_type LINEAR \\\n         -variant_index_parameter 128000 \\\n         --GVCFGQBands 20 \\\n         --GVCFGQBands 25 \\\n         --GVCFGQBands 30 \\\n         --GVCFGQBands 35 \\\n         --GVCFGQBands 40 \\\n         --GVCFGQBands 45 \\\n         --GVCFGQBands 50 \\\n         --GVCFGQBands 70 \\\n         --GVCFGQBands 90 \\\n         --GVCFGQBands 99 \\\n         --standard_min_confidence_threshold_for_calling 30 \\\n         --standard_min_confidence_threshold_for_emitting 10\n\n    \"\"\"\n    \n }",
        "nb_lignes_process": 73,
        "string_script": "    gbmem = \"${task.memory.toGiga()}g\"\n    \"\"\"\n    \n    java -Xmx${gbmem} -jar $params.GATK \\\n     -T HaplotypeCaller \\\n        -R $fasta_ref5 \\\n        -I $bam5_in \\\n         -dontUseSoftClippedBases \\\n         -o Step6_out.g.vcf \\\n         --pair_hmm_implementation LOGLESS_CACHING \\\n         -nct $task.cpus \\\n         -dt NONE \\\n         -rf BadCigar \\\n         --never_trim_vcf_format_field \\\n         -A AlleleBalance \\\n         -A BaseCounts \\\n         -A BaseQualityRankSumTest \\\n         -A ChromosomeCounts \\\n         -A ClippingRankSumTest \\\n         -A Coverage \\\n         -A DepthPerAlleleBySample \\\n         -A DepthPerSampleHC \\\n         -A FisherStrand \\\n         -A GCContent \\\n         -A HaplotypeScore \\\n         -A HardyWeinberg \\\n         -A HomopolymerRun \\\n         -A ClippingRankSumTest \\\n         -A LikelihoodRankSumTest \\\n         -A LowMQ \\\n         -A MappingQualityRankSumTest \\\n         -A MappingQualityZero \\\n         -A MappingQualityZeroBySample \\\n         -A NBaseCount \\\n         -A QualByDepth \\\n         -A RMSMappingQuality \\\n         -A ReadPosRankSumTest \\\n         -A StrandBiasBySample \\\n         -A StrandOddsRatio \\\n         -A VariantType \\\n         -ploidy 2 \\\n         --min_base_quality_score 10 \\\n         -ERC GVCF \\\n         -variant_index_type LINEAR \\\n         -variant_index_parameter 128000 \\\n         --GVCFGQBands 20 \\\n         --GVCFGQBands 25 \\\n         --GVCFGQBands 30 \\\n         --GVCFGQBands 35 \\\n         --GVCFGQBands 40 \\\n         --GVCFGQBands 45 \\\n         --GVCFGQBands 50 \\\n         --GVCFGQBands 70 \\\n         --GVCFGQBands 90 \\\n         --GVCFGQBands 99 \\\n         --standard_min_confidence_threshold_for_calling 30 \\\n         --standard_min_confidence_threshold_for_emitting 10\n\n    \"\"\"",
        "nb_lignes_script": 58,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step5_bam_1",
            "ref_file_5",
            "ref_fai_5",
            "ref_dict_5"
        ],
        "nb_inputs": 4,
        "outputs": [
            "step6_vcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"VarCalling\"",
            "label 'VarCalling'"
        ],
        "when": "",
        "stub": ""
    },
    "Compression": {
        "name_process": "Compression",
        "string_process": " process Compression {\n    tag \"Compression\"\n\t\t\t\t\n    publishDir params.outdir, mode:'copy'\n    input:\n    file vcf_in from step6_vcf\n    \t\t\t\t\n    output:\n\t\t\t\tfile( \"Step6_out.g.vcf.gz\") into step7_vcf_gz\n    file( \"Step6_out.g.vcf.gz.tbi\") into step7_vcf_gz_tbi\n    \n    script:\n    \"\"\"\n      bgzip $vcf_in\n      tabix -p vcf $vcf_in\".gz\"\n    \"\"\"\n }",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n      bgzip $vcf_in\n      tabix -p vcf $vcf_in\".gz\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step6_vcf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "step7_vcf_gz",
            "step7_vcf_gz_tbi"
        ],
        "nb_outputs": 2,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Compression\"",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "Filter": {
        "name_process": "Filter",
        "string_process": " process Filter {\n  tag \"Filter\"\n  label 'GATK'\n  publishDir params.outdir, mode:'copy'\n    input:\n    file gzvcf_in from step7_vcf_gz\n    file gzvcf_tbi_in from step7_vcf_gz_tbi\n    file fasta_ref6 from ref_file_6\n    file fai_ref6 from ref_fai_6\n    file dict_ref6 from ref_dict_6\n    \n    output:\n    file \"Step8_out.filtered.g.vcf\" into step8_vcf\n  \n   script:\n   \"\"\"\n      java -jar $params.GATK \\\n       -T VariantFiltration \\\n       -R $fasta_ref6 \\\n       -V $gzvcf_in \\\n       -window 35 -cluster 3 \\\n       -filterName FS -filter \"FS > 30.0\" \\\n       -filterName QD -filter \"QD < 2.0\" \\\n       -o Step8_out.filtered.g.vcf\n  \n   \"\"\"\n \n }",
        "nb_lignes_process": 26,
        "string_script": "   \"\"\"\n      java -jar $params.GATK \\\n       -T VariantFiltration \\\n       -R $fasta_ref6 \\\n       -V $gzvcf_in \\\n       -window 35 -cluster 3 \\\n       -filterName FS -filter \"FS > 30.0\" \\\n       -filterName QD -filter \"QD < 2.0\" \\\n       -o Step8_out.filtered.g.vcf\n  \n   \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step7_vcf_gz",
            "step7_vcf_gz_tbi",
            "ref_file_6",
            "ref_fai_6",
            "ref_dict_6"
        ],
        "nb_inputs": 5,
        "outputs": [
            "step8_vcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \"Filter\"",
            "label 'GATK'",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ASE": {
        "name_process": "ASE",
        "string_process": " process ASE {\n  tag \" ASE Read counter\"\n  label 'GATK'\n  \n  publishDir params.outdir, mode:'copy'\n    input:\n       file vcf_filtered from step8_vcf\n       file bam5_in_2  from step5_bam_2\n       file fasta_ref7 from ref_file_7\n       file fai_ref7   from ref_fai_7\n       file dict_ref7  from ref_dict_7\n    output:\n      \n      \n    script:\n    \"\"\"\n    java -jar $params.GATK \\\n      -T GenotypeGVCFs \\\n      -R $fasta_ref7 \\\n      --variant $vcf_filtered \\\n      -o Step9_input.vcf\n\n    java -jar $params.GATK \\\n     -T ASEReadCounter \\\n     -R $fasta_ref7 \\\n     -I $bam5_in_2 \\\n     -sites Step9_input.vcf \\\n     -U ALLOW_N_CIGAR_READS \\\n     -minDepth 10 \\\n     --minBaseQuality 20 \\\n     --minMappingQuality 30 \\\n     --includeDeletions \\\n     --outputFormat CSV \\\n     -o $params.SAMPLEID\"_ASEReadCounter.table\"\n    \"\"\"\n }",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    java -jar $params.GATK \\\n      -T GenotypeGVCFs \\\n      -R $fasta_ref7 \\\n      --variant $vcf_filtered \\\n      -o Step9_input.vcf\n\n    java -jar $params.GATK \\\n     -T ASEReadCounter \\\n     -R $fasta_ref7 \\\n     -I $bam5_in_2 \\\n     -sites Step9_input.vcf \\\n     -U ALLOW_N_CIGAR_READS \\\n     -minDepth 10 \\\n     --minBaseQuality 20 \\\n     --minMappingQuality 30 \\\n     --includeDeletions \\\n     --outputFormat CSV \\\n     -o $params.SAMPLEID\"_ASEReadCounter.table\"\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "step8_vcf",
            "step5_bam_2",
            "ref_file_7",
            "ref_fai_7",
            "ref_dict_7"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "inab__RDConnect_RNASeq",
        "directive": [
            "tag \" ASE Read counter\"",
            "label 'GATK'",
            "publishDir params.outdir, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    }
}