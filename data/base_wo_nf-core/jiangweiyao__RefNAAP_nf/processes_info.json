{
    "seqtk_trim_filter": {
        "name_process": "seqtk_trim_filter",
        "string_process": "\nprocess seqtk_trim_filter {\n\n                            \n                                                          \n    memory '3 GB'\n\n    input:\n    tuple name, file(fastq) from fastq_files2\n\n    output:\n    tuple name, file(\"*_filtered.fq\") into fastq_filtered\n\n    \"\"\"\n    seqtk trimfq -b ${params.left} -e ${params.right} $fastq > ${name}_trimmed.fq\n    seqtk seq -L ${params.size} ${name}_trimmed.fq > ${name}_filtered.fq\n    \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    seqtk trimfq -b ${params.left} -e ${params.right} $fastq > ${name}_trimmed.fq\n    seqtk seq -L ${params.size} ${name}_trimmed.fq > ${name}_filtered.fq\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "fastq_files2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastq_filtered"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "memory '3 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    \n                            \n                                                          \n    memory '3 GB' \n\n\n    input:\n    set val(name), file(fastq) from fastq_files1 \n \n    output:\n    file \"*_fastqc.{zip,html}\" into qc_files\n    file \"*_fastqc.{zip,html}\" into qc_files1\n\n    \"\"\"\n    fastqc ${fastq}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    fastqc ${fastq}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fastq_files1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "qc_files",
            "qc_files1"
        ],
        "nb_outputs": 2,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "memory '3 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\n                            \n    publishDir params.out, mode: 'copy', overwrite: true\n    memory '3 GB'\n\n    input:\n    file reports  from qc_files.collect().ifEmpty([])\n\n    output:\n    path \"multiqc_report.html\" into final1\n\n    \"\"\"\n    multiqc .\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    multiqc .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "qc_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final1"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "publishDir params.out, mode: 'copy', overwrite: true",
            "memory '3 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2": {
        "name_process": "minimap2",
        "string_process": "\nprocess minimap2 {\n\n    errorStrategy 'ignore'\n                                                          \n    memory '7 GB'\n\n    input:\n    tuple val(name), file(fastq) from fastq_filtered\n    file ref from reference1.first()\n\n    output:\n    tuple file(fastq), file(\"${fastq.simpleName}.sam\") into sam_files\n\n    \"\"\"\n    minimap2 -ax map-ont $ref ${fastq} > ${fastq.simpleName}.sam\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    minimap2 -ax map-ont $ref ${fastq} > ${fastq.simpleName}.sam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "fastq_filtered",
            "reference1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sam_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "errorStrategy 'ignore'",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n\n    errorStrategy 'ignore'\n    publishDir params.out, pattern: \"*_cov.txt\", mode: 'copy', overwrite: true\n    memory '7 GB'\n\n    input:\n    tuple file(fastq), file(sam_file)from sam_files\n\n    output:\n    tuple file(fastq), path(\"${sam_file.simpleName}.coverage\") into coverage_files\n                                                                \n\n    \"\"\"\n    samtools view -S -b ${sam_file.simpleName}.sam > ${sam_file.simpleName}.bam\n    samtools sort ${sam_file.simpleName}.bam -o ${sam_file.simpleName}.sorted.bam\n    samtools index ${sam_file.simpleName}.sorted.bam\n    samtools depth ${sam_file.simpleName}.sorted.bam > ${sam_file.simpleName}.coverage\n\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    samtools view -S -b ${sam_file.simpleName}.sam > ${sam_file.simpleName}.bam\n    samtools sort ${sam_file.simpleName}.bam -o ${sam_file.simpleName}.sorted.bam\n    samtools index ${sam_file.simpleName}.sorted.bam\n    samtools depth ${sam_file.simpleName}.sorted.bam > ${sam_file.simpleName}.coverage\n\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fastq",
            "sam_file"
        ],
        "nb_inputs": 2,
        "outputs": [
            "coverage_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "errorStrategy 'ignore'",
            "publishDir params.out, pattern: \"*_cov.txt\", mode: 'copy', overwrite: true",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "scaffold": {
        "name_process": "scaffold",
        "string_process": "\nprocess scaffold {\n\n    errorStrategy 'ignore'\n                                                                                                          \n    memory '7 GB'\n\n    input:\n    tuple file(fastq), file(coverage_file) from coverage_files\n    file ref from reference2.first()\n    file(scaffold_cutter) from scaffold_cutter_ch.first()\n\n    output:\n    tuple file(fastq), path(\"${coverage_file.simpleName}_scaffold.fasta\") into scaffold_files\n    path \"${coverage_file.simpleName}_cov.txt\" into cov_stat_files\n\n    \"\"\"\n    Rscript $scaffold_cutter 1 10 $ref ${coverage_file.simpleName}.coverage ${coverage_file.simpleName}_scaffold.fasta ${coverage_file.simpleName}_cov.txt   \n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    Rscript $scaffold_cutter 1 10 $ref ${coverage_file.simpleName}.coverage ${coverage_file.simpleName}_scaffold.fasta ${coverage_file.simpleName}_cov.txt   \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "coverage_files",
            "reference2",
            "scaffold_cutter_ch"
        ],
        "nb_inputs": 3,
        "outputs": [
            "scaffold_files",
            "cov_stat_files"
        ],
        "nb_outputs": 2,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "errorStrategy 'ignore'",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "medaka": {
        "name_process": "medaka",
        "string_process": "\nprocess medaka {\n\n    errorStrategy 'ignore'\n                                                          \n    memory '7 GB'\n\n    input:\n    tuple file(fastq), file(scaffold_file) from scaffold_files\n\n    output:\n    tuple file(fastq), file(scaffold_file), path(\"${fastq.simpleName}_medaka/consensus.fasta\") into medaka_files\n\n    \"\"\"\n    medaka_consensus -i $fastq -d $scaffold_file -o ${fastq.simpleName}_medaka -m $model \n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    medaka_consensus -i $fastq -d $scaffold_file -o ${fastq.simpleName}_medaka -m $model \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "scaffold_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "medaka_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "errorStrategy 'ignore'",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "gapfixer": {
        "name_process": "gapfixer",
        "string_process": "\nprocess gapfixer {\n\n    errorStrategy 'ignore'\n                                                          \n    memory '7 GB'\n\n    input:\n    tuple file(fastq), file(scaffold_file), file(medaka_file) from medaka_files\n    file(gapfixer) from gapfixer_ch.first()\n\n    output:\n    tuple file(fastq), path(\"${scaffold_file.simpleName}_gapfixed.fasta\") into final_files\n\n    \"\"\"\n    Rscript $gapfixer $scaffold_file $medaka_file ${scaffold_file.simpleName}_gapfixed.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    Rscript $gapfixer $scaffold_file $medaka_file ${scaffold_file.simpleName}_gapfixed.fasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "medaka_files",
            "gapfixer_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "errorStrategy 'ignore'",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "consensus_call": {
        "name_process": "consensus_call",
        "string_process": "\nprocess consensus_call {\n\n                            \n    publishDir params.out, mode: 'copy', overwrite: true\n    memory '7 GB'\n\n    input:\n    tuple file(fastq), file(scaffold_file) from final_files\n\n    output:\n    path(\"${fastq.simpleName}_final.fasta\") into consensus_output\n                                                               \n    \"\"\"\n    medaka_consensus -i $fastq -d $scaffold_file -o ${fastq.simpleName}_medaka2 -m $model\n    bcftools mpileup -f $scaffold_file ${fastq.simpleName}_medaka2/calls_to_draft.bam | bcftools call -mv -Oz -o ${fastq.simpleName}.vcf.gz --ploidy 1\n    bcftools index ${fastq.simpleName}.vcf.gz\n    cat $scaffold_file | bcftools consensus ${fastq.simpleName}.vcf.gz -H 1 > ${fastq.simpleName}_int.fasta\n    medaka_consensus -i $fastq -d ${fastq.simpleName}_int.fasta -o ${fastq.simpleName}_medaka3 -m $model\n    cp ${fastq.simpleName}_medaka3/consensus.fasta ${fastq.simpleName}_final.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    medaka_consensus -i $fastq -d $scaffold_file -o ${fastq.simpleName}_medaka2 -m $model\n    bcftools mpileup -f $scaffold_file ${fastq.simpleName}_medaka2/calls_to_draft.bam | bcftools call -mv -Oz -o ${fastq.simpleName}.vcf.gz --ploidy 1\n    bcftools index ${fastq.simpleName}.vcf.gz\n    cat $scaffold_file | bcftools consensus ${fastq.simpleName}.vcf.gz -H 1 > ${fastq.simpleName}_int.fasta\n    medaka_consensus -i $fastq -d ${fastq.simpleName}_int.fasta -o ${fastq.simpleName}_medaka3 -m $model\n    cp ${fastq.simpleName}_medaka3/consensus.fasta ${fastq.simpleName}_final.fasta\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "final_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_output"
        ],
        "nb_outputs": 1,
        "name_workflow": "jiangweiyao__RefNAAP_nf",
        "directive": [
            "publishDir params.out, mode: 'copy', overwrite: true",
            "memory '7 GB'"
        ],
        "when": "",
        "stub": ""
    }
}