{
    "index": {
        "name_process": "index",
        "string_process": " process index {\n    tag \"${fasta}\"\n\n    input:\n    file(fasta) from fasta_index\n\n    output:\n    file(\"ref\") into ref_dragen\n\n    script:\n    \"\"\"\n    dragen \\\n    --build-hash-table true \\\n    --output-directory ref \\\n    --ht-reference $fasta\n    \"\"\"\n  }",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    dragen \\\n    --build-hash-table true \\\n    --output-directory ref \\\n    --ht-reference $fasta\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ref_dragen"
        ],
        "nb_outputs": 1,
        "name_workflow": "pprieto__dragen",
        "directive": [
            "tag \"${fasta}\""
        ],
        "when": "",
        "stub": ""
    },
    "dragen": {
        "name_process": "dragen",
        "string_process": "\nprocess dragen {\n  tag \"${name}\"\n  publishDir \"${params.outdir}\", mode: 'copy'\n\n  input:\n  set val(name), file(fastq), file(fasta), file(ref) from dragen\n\n  output:\n  set val(name), file(\"${name}*\"), file(\"streaming_log.csv\") into results\n  set val(name), file(\"${name}.vcf.gz\"),file(\"${name}.vcf.gz.tbi\") into vcf_bcftools\n\n  script:\n  \"\"\"\n  dragen \\\n  -r $ref \\\n  --output-directory . \\\n  --output-file-prefix $name \\\n  -1 ${fastq[0]} \\\n  -2 ${fastq[1]}\\\n  --enable-variant-caller true \\\n  --vc-sample-name $name\n  \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "  \"\"\"\n  dragen \\\n  -r $ref \\\n  --output-directory . \\\n  --output-file-prefix $name \\\n  -1 ${fastq[0]} \\\n  -2 ${fastq[1]}\\\n  --enable-variant-caller true \\\n  --vc-sample-name $name\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dragen"
        ],
        "nb_inputs": 1,
        "outputs": [
            "results",
            "vcf_bcftools"
        ],
        "nb_outputs": 2,
        "name_workflow": "pprieto__dragen",
        "directive": [
            "tag \"${name}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bcftools": {
        "name_process": "bcftools",
        "string_process": "\nprocess bcftools {\n  tag \"$vcf\"\n\n  container 'lifebitai/bcftools:latest'\n\n  input:\n  set val(name), file(vcf), file(index) from vcf_bcftools\n  \n  output:\n  file(\"*\") into bcftools_multiqc\n\n  when: !params.skip_multiqc\n\n  script:\n  \"\"\"\n  bcftools stats $vcf > bcfstats.txt\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  bcftools stats $vcf > bcfstats.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vcf_bcftools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bcftools_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "pprieto__dragen",
        "directive": [
            "tag \"$vcf\"",
            "container 'lifebitai/bcftools:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n  tag \"multiqc_report.html\"\n\n  publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n  container 'ewels/multiqc:v1.7'\n\n  input:\n  file bcfstats from bcftools_multiqc\n\n  output:\n  file(\"*\") into multiqc\n\n  when: !params.skip_multiqc\n\n  script:\n  \"\"\"\n  multiqc . -m bcftools \n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  multiqc . -m bcftools \n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "bcftools_multiqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "pprieto__dragen",
        "directive": [
            "tag \"multiqc_report.html\"",
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'",
            "container 'ewels/multiqc:v1.7'"
        ],
        "when": "",
        "stub": ""
    }
}