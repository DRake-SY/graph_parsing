{
    "OUTPUT": {
        "name_process": "OUTPUT",
        "string_process": "\nprocess OUTPUT {\n                                         \n    label \"human_mito\"\n    publishDir \"${params.out_dir}\", mode: 'copy', pattern: \"*\"\n    input:\n        path fname\n    output:\n        path fname\n    \"\"\"\n    echo \"Writing output files\"\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    echo \"Writing output files\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fname"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fname"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\"",
            "publishDir \"${params.out_dir}\", mode: 'copy', pattern: \"*\""
        ],
        "when": "",
        "stub": ""
    },
    "OUTPUT_SAMPLE_DATA": {
        "name_process": "OUTPUT_SAMPLE_DATA",
        "string_process": "\nprocess OUTPUT_SAMPLE_DATA {\n    label \"human_mito\"\n    publishDir \"${params.out_dir}\", mode: 'copy', pattern: \"*\"\n    input:\n        tuple val(sample_id), \\\n            path(vcf), \\\n            path(vcf_idx), \\\n            path(contam_metrics), \\\n            path(bam), \\\n            path(bai), \\\n            path(dup_metrics), \\\n            path(algn_metrics), \\\n            path(theoretical_sensitivity), \\\n            path(wgs_metrics)\n    output:\n        path bam\n        path bai\n        path vcf\n        path vcf_idx\n    \"\"\"\n    echo \"Writing output files\"\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    echo \"Writing output files\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "vcf",
            "vcf_idx",
            "contam_metrics",
            "bam",
            "bai",
            "dup_metrics",
            "algn_metrics",
            "theoretical_sensitivity",
            "wgs_metrics"
        ],
        "nb_inputs": 10,
        "outputs": [
            "bam",
            "bai",
            "vcf",
            "vcf_idx"
        ],
        "nb_outputs": 4,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\"",
            "publishDir \"${params.out_dir}\", mode: 'copy', pattern: \"*\""
        ],
        "when": "",
        "stub": ""
    },
    "FASTQ_TO_UBAM": {
        "name_process": "FASTQ_TO_UBAM",
        "string_process": "process FASTQ_TO_UBAM {\n    label \"human_mito\"\n\n    input:\n        tuple \\\n            val(sampleId), \\\n            path(reads)\n        \n    output:\n        tuple val(sampleId), path(\"${sampleId}.unmaped.bam\")\n\n    shell:\n    \"\"\"\n    fastq_to_ubam.sh ${reads[0]} ${reads[1]} ${sampleId}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    fastq_to_ubam.sh ${reads[0]} ${reads[1]} ${sampleId}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sampleId",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleId"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "SELECT_MITO_READS": {
        "name_process": "SELECT_MITO_READS",
        "string_process": "\nprocess SELECT_MITO_READS {\n    label \"human_mito\"\n\n    input:\n        tuple val(sample_id), path(whole_bam), path(whole_bai)\n        path fasta\n        path dict\n        path index\n\n    output:\n        tuple val(sample_id), path(\"${sample_id}.mito.unaligned.bam\")\n\n    script:\n    \"\"\"\n    gatk PrintReads \\\n        -R $fasta \\\n        -L \"chrM\" \\\n        --read-filter MateOnSameContigOrNoMappedMateReadFilter \\\n        --read-filter MateUnmappedAndUnmappedReadFilter \\\n        -I $whole_bam \\\n        -O mito.bam\n\n    picard RevertSam \\\n        INPUT=mito.bam \\\n        OUTPUT_BY_READGROUP=false \\\n        OUTPUT=${sample_id}.mito.unaligned.bam \\\n        VALIDATION_STRINGENCY=LENIENT \\\n        ATTRIBUTE_TO_CLEAR=FT \\\n        ATTRIBUTE_TO_CLEAR=CO \\\n        SORT_ORDER=queryname \\\n        RESTORE_ORIGINAL_QUALITIES=false\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    gatk PrintReads \\\n        -R $fasta \\\n        -L \"chrM\" \\\n        --read-filter MateOnSameContigOrNoMappedMateReadFilter \\\n        --read-filter MateUnmappedAndUnmappedReadFilter \\\n        -I $whole_bam \\\n        -O mito.bam\n\n    picard RevertSam \\\n        INPUT=mito.bam \\\n        OUTPUT_BY_READGROUP=false \\\n        OUTPUT=${sample_id}.mito.unaligned.bam \\\n        VALIDATION_STRINGENCY=LENIENT \\\n        ATTRIBUTE_TO_CLEAR=FT \\\n        ATTRIBUTE_TO_CLEAR=CO \\\n        SORT_ORDER=queryname \\\n        RESTORE_ORIGINAL_QUALITIES=false\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "GATK",
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/gatk",
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "sample_id",
            "whole_bam",
            "whole_bai",
            "fasta",
            "dict",
            "index"
        ],
        "nb_inputs": 6,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "BWA_ALIGN_FROM_UBAM": {
        "name_process": "BWA_ALIGN_FROM_UBAM",
        "string_process": "\nprocess BWA_ALIGN_FROM_UBAM {\n    label \"human_mito\"\n\n    input:\n        tuple val(sample_id), path(ubam)\n        path fasta\n        path dict\n        path index\n        path amb\n        path ann\n        path bwt\n        path pac\n        path sa\n        path ref_alt\n    output:\n        tuple val(sample_id), path(\"${sample_id}.sorted.bam\"), path(\"${sample_id}.sorted.bai\")\n    \n    shell:\n    \"\"\"\n    picard SamToFastq \\\n            INPUT=!{ubam} \\\n            FASTQ=/dev/stdout \\\n            INTERLEAVE=true \\\n            NON_PF=true | \\\n        bwa mem -K 100000000 -p -v 3 -t 5 -Y !{fasta} /dev/stdin - 2> >(tee !{sample_id}.bwa.stderr.log >&2) | \\\n        picard MergeBamAlignment \\\n            VALIDATION_STRINGENCY=SILENT \\\n            EXPECTED_ORIENTATIONS=FR \\\n            ATTRIBUTES_TO_RETAIN=X0 \\\n            ATTRIBUTES_TO_REMOVE=NM \\\n            ATTRIBUTES_TO_REMOVE=MD \\\n            ALIGNED_BAM=/dev/stdin \\\n            UNMAPPED_BAM=!{ubam} \\\n            OUTPUT=!{sample_id}.temp.bam \\\n            REFERENCE_SEQUENCE=!{fasta} \\\n            SORT_ORDER=\"unsorted\" \\\n            IS_BISULFITE_SEQUENCE=false \\\n            ALIGNED_READS_ONLY=false \\\n            CLIP_ADAPTERS=false \\\n            MAX_RECORDS_IN_RAM=2000000 \\\n            ADD_MATE_CIGAR=true \\\n            MAX_INSERTIONS_OR_DELETIONS=-1 \\\n            PRIMARY_ALIGNMENT_STRATEGY=MostDistant \\\n            UNMAPPED_READ_STRATEGY=COPY_TO_TAG \\\n            ALIGNER_PROPER_PAIR_FLAGS=true \\\n            UNMAP_CONTAMINANT_READS=true \\\n            ADD_PG_TAG_TO_READS=false\n\n    picard SortSam \\\n        INPUT=\"!{sample_id}.temp.bam\" \\\n        OUTPUT=\"!{sample_id}.sorted.bam\" \\\n        SORT_ORDER=\"coordinate\" \\\n        CREATE_INDEX=true \\\n        MAX_RECORDS_IN_RAM=300000\n    \"\"\"\n}",
        "nb_lignes_process": 55,
        "string_script": "    \"\"\"\n    picard SamToFastq \\\n            INPUT=!{ubam} \\\n            FASTQ=/dev/stdout \\\n            INTERLEAVE=true \\\n            NON_PF=true | \\\n        bwa mem -K 100000000 -p -v 3 -t 5 -Y !{fasta} /dev/stdin - 2> >(tee !{sample_id}.bwa.stderr.log >&2) | \\\n        picard MergeBamAlignment \\\n            VALIDATION_STRINGENCY=SILENT \\\n            EXPECTED_ORIENTATIONS=FR \\\n            ATTRIBUTES_TO_RETAIN=X0 \\\n            ATTRIBUTES_TO_REMOVE=NM \\\n            ATTRIBUTES_TO_REMOVE=MD \\\n            ALIGNED_BAM=/dev/stdin \\\n            UNMAPPED_BAM=!{ubam} \\\n            OUTPUT=!{sample_id}.temp.bam \\\n            REFERENCE_SEQUENCE=!{fasta} \\\n            SORT_ORDER=\"unsorted\" \\\n            IS_BISULFITE_SEQUENCE=false \\\n            ALIGNED_READS_ONLY=false \\\n            CLIP_ADAPTERS=false \\\n            MAX_RECORDS_IN_RAM=2000000 \\\n            ADD_MATE_CIGAR=true \\\n            MAX_INSERTIONS_OR_DELETIONS=-1 \\\n            PRIMARY_ALIGNMENT_STRATEGY=MostDistant \\\n            UNMAPPED_READ_STRATEGY=COPY_TO_TAG \\\n            ALIGNER_PROPER_PAIR_FLAGS=true \\\n            UNMAP_CONTAMINANT_READS=true \\\n            ADD_PG_TAG_TO_READS=false\n\n    picard SortSam \\\n        INPUT=\"!{sample_id}.temp.bam\" \\\n        OUTPUT=\"!{sample_id}.sorted.bam\" \\\n        SORT_ORDER=\"coordinate\" \\\n        CREATE_INDEX=true \\\n        MAX_RECORDS_IN_RAM=300000\n    \"\"\"",
        "nb_lignes_script": 36,
        "language_script": "bash",
        "tools": [
            "Picard",
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "sample_id",
            "ubam",
            "fasta",
            "dict",
            "index",
            "amb",
            "ann",
            "bwt",
            "pac",
            "sa",
            "ref_alt"
        ],
        "nb_inputs": 11,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "BWA_ALIGN": {
        "name_process": "BWA_ALIGN",
        "string_process": "\nprocess BWA_ALIGN {\n    label \"human_mito\"\n\n    input:\n        tuple val(sampleId), path(input_bam)\n        path mito_fasta\n        path mito_dict\n        path mito_index\n        path mito_amb\n        path mito_ann\n        path mito_bwt\n        path mito_pac\n        path mito_sa\n    output:\n        tuple \\\n            val(sampleId), \\\n            path(\"${sampleId}.bam\"), \\\n            path(\"${sampleId}.bai\"), \\\n            path(\"${sampleId}.dup.metrics\")\n\n    shell:\n    \"\"\"\n    picard SamToFastq \\\n      INPUT=!{input_bam} \\\n      FASTQ=/dev/stdout \\\n      INTERLEAVE=true \\\n      NON_PF=true | \\\n    bwa mem -K 100000000 -p -v 3 -t 2 -Y !{mito_fasta} /dev/stdin - 2> >(tee !{sampleId}.bwa.stderr.log >&2) | \\\n    picard MergeBamAlignment \\\n      VALIDATION_STRINGENCY=SILENT \\\n      EXPECTED_ORIENTATIONS=FR \\\n      ATTRIBUTES_TO_RETAIN=X0 \\\n      ATTRIBUTES_TO_REMOVE=NM \\\n      ATTRIBUTES_TO_REMOVE=MD \\\n      ALIGNED_BAM=/dev/stdin \\\n      UNMAPPED_BAM=!{input_bam} \\\n      OUTPUT=mba.bam \\\n      REFERENCE_SEQUENCE=!{mito_fasta} \\\n      PAIRED_RUN=true \\\n      SORT_ORDER=\"unsorted\" \\\n      IS_BISULFITE_SEQUENCE=false \\\n      ALIGNED_READS_ONLY=false \\\n      CLIP_ADAPTERS=false \\\n      MAX_RECORDS_IN_RAM=2000000 \\\n      ADD_MATE_CIGAR=true \\\n      MAX_INSERTIONS_OR_DELETIONS=-1 \\\n      PRIMARY_ALIGNMENT_STRATEGY=MostDistant \\\n      UNMAPPED_READ_STRATEGY=COPY_TO_TAG \\\n      ALIGNER_PROPER_PAIR_FLAGS=true \\\n      UNMAP_CONTAMINANT_READS=true \\\n      ADD_PG_TAG_TO_READS=false\n\n    picard MarkDuplicates \\\n      INPUT=mba.bam \\\n      OUTPUT=md.bam \\\n      METRICS_FILE=!{sampleId}.dup.metrics \\\n      VALIDATION_STRINGENCY=SILENT \\\n      OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 \\\n      ASSUME_SORT_ORDER=\"queryname\" \\\n      CLEAR_DT=\"false\" \\\n      ADD_PG_TAG_TO_READS=false\n\n    picard SortSam \\\n      INPUT=md.bam \\\n      OUTPUT=!{sampleId}.bam \\\n      SORT_ORDER=\"coordinate\" \\\n      CREATE_INDEX=true \\\n      MAX_RECORDS_IN_RAM=300000\n    \"\"\"\n}",
        "nb_lignes_process": 69,
        "string_script": "    \"\"\"\n    picard SamToFastq \\\n      INPUT=!{input_bam} \\\n      FASTQ=/dev/stdout \\\n      INTERLEAVE=true \\\n      NON_PF=true | \\\n    bwa mem -K 100000000 -p -v 3 -t 2 -Y !{mito_fasta} /dev/stdin - 2> >(tee !{sampleId}.bwa.stderr.log >&2) | \\\n    picard MergeBamAlignment \\\n      VALIDATION_STRINGENCY=SILENT \\\n      EXPECTED_ORIENTATIONS=FR \\\n      ATTRIBUTES_TO_RETAIN=X0 \\\n      ATTRIBUTES_TO_REMOVE=NM \\\n      ATTRIBUTES_TO_REMOVE=MD \\\n      ALIGNED_BAM=/dev/stdin \\\n      UNMAPPED_BAM=!{input_bam} \\\n      OUTPUT=mba.bam \\\n      REFERENCE_SEQUENCE=!{mito_fasta} \\\n      PAIRED_RUN=true \\\n      SORT_ORDER=\"unsorted\" \\\n      IS_BISULFITE_SEQUENCE=false \\\n      ALIGNED_READS_ONLY=false \\\n      CLIP_ADAPTERS=false \\\n      MAX_RECORDS_IN_RAM=2000000 \\\n      ADD_MATE_CIGAR=true \\\n      MAX_INSERTIONS_OR_DELETIONS=-1 \\\n      PRIMARY_ALIGNMENT_STRATEGY=MostDistant \\\n      UNMAPPED_READ_STRATEGY=COPY_TO_TAG \\\n      ALIGNER_PROPER_PAIR_FLAGS=true \\\n      UNMAP_CONTAMINANT_READS=true \\\n      ADD_PG_TAG_TO_READS=false\n\n    picard MarkDuplicates \\\n      INPUT=mba.bam \\\n      OUTPUT=md.bam \\\n      METRICS_FILE=!{sampleId}.dup.metrics \\\n      VALIDATION_STRINGENCY=SILENT \\\n      OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 \\\n      ASSUME_SORT_ORDER=\"queryname\" \\\n      CLEAR_DT=\"false\" \\\n      ADD_PG_TAG_TO_READS=false\n\n    picard SortSam \\\n      INPUT=md.bam \\\n      OUTPUT=!{sampleId}.bam \\\n      SORT_ORDER=\"coordinate\" \\\n      CREATE_INDEX=true \\\n      MAX_RECORDS_IN_RAM=300000\n    \"\"\"",
        "nb_lignes_script": 47,
        "language_script": "bash",
        "tools": [
            "Picard",
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "sampleId",
            "input_bam",
            "mito_fasta",
            "mito_dict",
            "mito_index",
            "mito_amb",
            "mito_ann",
            "mito_bwt",
            "mito_pac",
            "mito_sa"
        ],
        "nb_inputs": 10,
        "outputs": [
            "sampleId"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "COLLECT_ALIGNMENT_METRICS": {
        "name_process": "COLLECT_ALIGNMENT_METRICS",
        "string_process": "\nprocess COLLECT_ALIGNMENT_METRICS {\n    label \"human_mito\"\n\n    input:\n        tuple val(sample_id), path(bam), path(bai), path(dup_stats)\n        path reference\n        path reference_dict\n        path reference_index\n    \n    output:\n        tuple val(sample_id), path(\"${sample_id}.algn_metrics.txt\")\n\n    script:\n    \"\"\"\n    picard CollectAlignmentSummaryMetrics \\\n          R=$reference \\\n          I=$bam \\\n          O=${sample_id}.algn_metrics.txt\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    picard CollectAlignmentSummaryMetrics \\\n          R=$reference \\\n          I=$bam \\\n          O=${sample_id}.algn_metrics.txt\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "sample_id",
            "bam",
            "bai",
            "dup_stats",
            "reference",
            "reference_dict",
            "reference_index"
        ],
        "nb_inputs": 7,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "COLLECT_WGS_METRICS": {
        "name_process": "COLLECT_WGS_METRICS",
        "string_process": "\nprocess COLLECT_WGS_METRICS {\n    label \"human_mito\"\n\n    input:\n        tuple val(sample_id), path(bam), path(bai), path(dup_stats)\n        path reference\n        val readLen\n    output:\n        tuple val(sample_id), \\\n            path(\"${sample_id}.theoretical_sensitivity.txt\"), \\\n            path(\"${sample_id}.metrics.txt\")\n\n    script:\n    \"\"\"\n    picard CollectWgsMetrics \\\n        INPUT=${bam} \\\n        VALIDATION_STRINGENCY=SILENT \\\n        REFERENCE_SEQUENCE=${reference} \\\n        OUTPUT=${sample_id}.metrics.txt \\\n        USE_FAST_ALGORITHM=true \\\n        READ_LENGTH=${readLen} \\\n        INCLUDE_BQ_HISTOGRAM=true \\\n        COVERAGE_CAP=100000 \\\n        THEORETICAL_SENSITIVITY_OUTPUT=${sample_id}.theoretical_sensitivity.txt\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    picard CollectWgsMetrics \\\n        INPUT=${bam} \\\n        VALIDATION_STRINGENCY=SILENT \\\n        REFERENCE_SEQUENCE=${reference} \\\n        OUTPUT=${sample_id}.metrics.txt \\\n        USE_FAST_ALGORITHM=true \\\n        READ_LENGTH=${readLen} \\\n        INCLUDE_BQ_HISTOGRAM=true \\\n        COVERAGE_CAP=100000 \\\n        THEORETICAL_SENSITIVITY_OUTPUT=${sample_id}.theoretical_sensitivity.txt\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "sample_id",
            "bam",
            "bai",
            "dup_stats",
            "reference",
            "readLen"
        ],
        "nb_inputs": 6,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "CALL_MUTECT": {
        "name_process": "CALL_MUTECT",
        "string_process": "\nprocess CALL_MUTECT {\n    label \"human_mito_mutect\"\n    clusterOptions \"-C avx2\"\n\n    input:\n        tuple val(sample_id), path(bam), path(bai), path(dup_stats)\n        path mito_fasta\n        path mito_dict\n        path mito_index\n        val prefix\n        val mutect_extra_args\n    output:\n        tuple val(sample_id), \\\n            path(\"${prefix}.${sample_id}.vcf.gz\"), \\\n            path(\"${prefix}.${sample_id}.vcf.gz.tbi\"), \\\n            path(\"${prefix}.${sample_id}.vcf.gz.stats\")\n\n    script:\n    \"\"\"\n    gatk Mutect2 \\\n        -R ${mito_fasta} \\\n        -I ${bam} \\\n        --read-filter MateOnSameContigOrNoMappedMateReadFilter \\\n        --read-filter MateUnmappedAndUnmappedReadFilter \\\n        -O \"${prefix}.${sample_id}.vcf.gz\" \\\n        ${mutect_extra_args} \\\n        --annotation StrandBiasBySample \\\n        --mitochondria-mode \\\n        --max-reads-per-alignment-start 75 \\\n        --max-mnp-distance 0\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n    gatk Mutect2 \\\n        -R ${mito_fasta} \\\n        -I ${bam} \\\n        --read-filter MateOnSameContigOrNoMappedMateReadFilter \\\n        --read-filter MateUnmappedAndUnmappedReadFilter \\\n        -O \"${prefix}.${sample_id}.vcf.gz\" \\\n        ${mutect_extra_args} \\\n        --annotation StrandBiasBySample \\\n        --mitochondria-mode \\\n        --max-reads-per-alignment-start 75 \\\n        --max-mnp-distance 0\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample_id",
            "bam",
            "bai",
            "dup_stats",
            "mito_fasta",
            "mito_dict",
            "mito_index",
            "prefix",
            "mutect_extra_args"
        ],
        "nb_inputs": 9,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito_mutect\"",
            "clusterOptions \"-C avx2\""
        ],
        "when": "",
        "stub": ""
    },
    "MERGE_STATS": {
        "name_process": "MERGE_STATS",
        "string_process": "\nprocess MERGE_STATS {\n    label \"human_mito\"\n\n    input:\n        tuple \\\n            val(sample_id), \\\n            path(standard_vcf), \\\n            path(standard_tbi), \\\n            path(stantard_stats), \\\n            path(shifted_vcf), \\\n            path(shifted_tbi), \\\n            path(shifted_stats)\n\n    output:\n        tuple val(sample_id), path(\"combined.stats\")\n    \n    script:\n    \"\"\"\n    gatk MergeMutectStats \\\n        --stats ${shifted_stats} \\\n        --stats ${stantard_stats} \\\n        -O combined.stats\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    gatk MergeMutectStats \\\n        --stats ${shifted_stats} \\\n        --stats ${stantard_stats} \\\n        -O combined.stats\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample_id",
            "standard_vcf",
            "standard_tbi",
            "stantard_stats",
            "shifted_vcf",
            "shifted_tbi",
            "shifted_stats"
        ],
        "nb_inputs": 7,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "LIFTOVER_AND_COMBINE_VCFS": {
        "name_process": "LIFTOVER_AND_COMBINE_VCFS",
        "string_process": "\nprocess LIFTOVER_AND_COMBINE_VCFS {\n    label \"human_mito\"\n    input:\n        tuple \\\n            val(sample_id), \\\n            path(standard_vcf), \\\n            path(standard_tbi), \\\n            path(stantard_stats), \\\n            path(shifted_vcf), \\\n            path(shifted_tbi), \\\n            path(shifted_stats)\n        path mito_fasta\n        path mito_fasta_index\n        path mito_dict\n        path shift_back_chain\n\n    output:\n        tuple val(sample_id), \\\n            path(\"${sample_id}.rejected.vcf\"), \\\n            path(\"${sample_id}.merged.vcf\"), \\\n            path(\"${sample_id}.merged.vcf.idx\")\n\n    script:\n    \"\"\"\n    picard LiftoverVcf \\\n      I=${shifted_vcf} \\\n      O=${sample_id}.shifted_back.vcf \\\n      R=${mito_fasta} \\\n      CHAIN=${shift_back_chain} \\\n      REJECT=${sample_id}.rejected.vcf\n\n    picard MergeVcfs \\\n      I=${sample_id}.shifted_back.vcf \\\n      I=${standard_vcf} \\\n      O=${sample_id}.merged.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    picard LiftoverVcf \\\n      I=${shifted_vcf} \\\n      O=${sample_id}.shifted_back.vcf \\\n      R=${mito_fasta} \\\n      CHAIN=${shift_back_chain} \\\n      REJECT=${sample_id}.rejected.vcf\n\n    picard MergeVcfs \\\n      I=${sample_id}.shifted_back.vcf \\\n      I=${standard_vcf} \\\n      O=${sample_id}.merged.vcf\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "sample_id",
            "standard_vcf",
            "standard_tbi",
            "stantard_stats",
            "shifted_vcf",
            "shifted_tbi",
            "shifted_stats",
            "mito_fasta",
            "mito_fasta_index",
            "mito_dict",
            "shift_back_chain"
        ],
        "nb_inputs": 11,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "FILTER": {
        "name_process": "FILTER",
        "string_process": "\nprocess FILTER {\n    label \"human_mito\"\n    input:\n        tuple val(sample_id), \\\n            path(rejected_vcf), \\\n            path(merged_vcf), \\\n            path(merged_vcf_index), \\\n            path(combined_stats)\n        path mito_fasta\n        path mito_index\n        path mito_dict\n        path blacklisted_sites\n        path blacklisted_sites_index\n\n    output:\n        tuple val(sample_id), \\\n            path(\"${sample_id}.vcf.gz\"), \\\n            path(\"${sample_id}.vcf.gz.tbi\")\n\n    \"\"\"\n    gatk FilterMutectCalls \\\n        -V ${merged_vcf} \\\n        -R ${mito_fasta} \\\n        -O filtered.vcf \\\n        --stats ${combined_stats} \\\n        --max-alt-allele-count 4 \\\n        --mitochondria-mode \\\n        --min-allele-fraction 0\n\n    gatk VariantFiltration -V filtered.vcf \\\n        -O ${sample_id}.vcf.gz \\\n        --apply-allele-specific-filters \\\n        --mask ${blacklisted_sites} \\\n        --mask-name \"blacklisted_site\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\"\"\"\n    gatk FilterMutectCalls \\\n        -V ${merged_vcf} \\\n        -R ${mito_fasta} \\\n        -O filtered.vcf \\\n        --stats ${combined_stats} \\\n        --max-alt-allele-count 4 \\\n        --mitochondria-mode \\\n        --min-allele-fraction 0\n\n    gatk VariantFiltration -V filtered.vcf \\\n        -O ${sample_id}.vcf.gz \\\n        --apply-allele-specific-filters \\\n        --mask ${blacklisted_sites} \\\n        --mask-name \"blacklisted_site\"\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "sample_id",
            "rejected_vcf",
            "merged_vcf",
            "merged_vcf_index",
            "combined_stats",
            "mito_fasta",
            "mito_index",
            "mito_dict",
            "blacklisted_sites",
            "blacklisted_sites_index"
        ],
        "nb_inputs": 10,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "SPLIT_MULTIALLELICS_AND_REMOVE_NON_PASS_SITES": {
        "name_process": "SPLIT_MULTIALLELICS_AND_REMOVE_NON_PASS_SITES",
        "string_process": "\nprocess SPLIT_MULTIALLELICS_AND_REMOVE_NON_PASS_SITES {\n    label \"human_mito\"\n    input:\n        path mito_fasta\n        path mito_index\n        path mito_dict\n        tuple val(sample_id), path(filtered_vcf), path(filtered_vcf_index)\n\n    output:\n        tuple val(sample_id), \\\n            path(\"${sample_id}.pass.vcf.gz\"), \\\n            path(\"${sample_id}.pass.vcf.gz.tbi\")\n\n    script:\n    \"\"\"\n    gatk LeftAlignAndTrimVariants \\\n      -R ${mito_fasta} \\\n      -V ${filtered_vcf} \\\n      -O split.vcf \\\n      --split-multi-allelics \\\n      --dont-trim-alleles \\\n      --keep-original-ac\n\n      gatk SelectVariants \\\n        -V split.vcf \\\n        -O ${sample_id}.pass.vcf.gz \\\n        --exclude-filtered\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    gatk LeftAlignAndTrimVariants \\\n      -R ${mito_fasta} \\\n      -V ${filtered_vcf} \\\n      -O split.vcf \\\n      --split-multi-allelics \\\n      --dont-trim-alleles \\\n      --keep-original-ac\n\n      gatk SelectVariants \\\n        -V split.vcf \\\n        -O ${sample_id}.pass.vcf.gz \\\n        --exclude-filtered\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "mito_fasta",
            "mito_index",
            "mito_dict",
            "sample_id",
            "filtered_vcf",
            "filtered_vcf_index"
        ],
        "nb_inputs": 6,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "GET_CONTAMINATION": {
        "name_process": "GET_CONTAMINATION",
        "string_process": "\nprocess GET_CONTAMINATION {\n    label \"mtdnaserver\"\n    input:\n        tuple val(sample_id), path(vcf), path(vcf_index)\n    output:\n        tuple val(sample_id), path(\"output-noquotes\")\n\n    script:\n    \"\"\"\n    get_contamination.sh $vcf\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "    \"\"\"\n    get_contamination.sh $vcf\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "vcf",
            "vcf_index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sample_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"mtdnaserver\""
        ],
        "when": "",
        "stub": ""
    },
    "CREATE_JSON": {
        "name_process": "CREATE_JSON",
        "string_process": "\nprocess CREATE_JSON {\n    label \"human_mito\"\n    input:\n        tuple val(sample_id), \\\n            path(vcf), \\\n            path(vcf_idx), \\\n            path(contam_metrics), \\\n            path(bam), \\\n            path(bai), \\\n            path(dup_metrics), \\\n            path(algn_metrics), \\\n            path(theoretical_sensitivity), \\\n            path(wgs_metrics)\n\n    output:\n        path \"${sample_id}.summary.json\"\n\n    script:\n    \"\"\"\n    prepare_json.py $dup_metrics $wgs_metrics $algn_metrics $contam_metrics\n    mv summary.json ${sample_id}.summary.json\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    prepare_json.py $dup_metrics $wgs_metrics $algn_metrics $contam_metrics\n    mv summary.json ${sample_id}.summary.json\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "vcf",
            "vcf_idx",
            "contam_metrics",
            "bam",
            "bai",
            "dup_metrics",
            "algn_metrics",
            "theoretical_sensitivity",
            "wgs_metrics"
        ],
        "nb_inputs": 10,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    },
    "CREATE_ALL_SAMPLES_CSV": {
        "name_process": "CREATE_ALL_SAMPLES_CSV",
        "string_process": "\nprocess CREATE_ALL_SAMPLES_CSV {\n    label \"human_mito\"\n    input:\n        path json\n\n    output:\n        path \"all_samples.csv\"\n\n    script:\n    \"\"\"\n    prepare_all_samples_table.py  \"$json\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    prepare_all_samples_table.py  \"$json\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "json"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lmtani__wf-human-mito",
        "directive": [
            "label \"human_mito\""
        ],
        "when": "",
        "stub": ""
    }
}