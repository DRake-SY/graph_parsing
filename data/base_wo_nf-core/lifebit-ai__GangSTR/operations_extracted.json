{
    "OPERATION_1": {
        "string": "bam = Channel\n\t\t.fromPath(params.bam)\n\t\t.ifEmpty { exit 1, \"${params.bam} not found.\\nPlease specify --bam option (--bam bamfile)\"}",
        "origin": [
            [
                "params.bam",
                "A"
            ]
        ],
        "gives": [
            [
                "bam",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n\t\t.fromPath(params.genome)\n\t\t.ifEmpty { exit 1, \"${params.genome} not found.\\nPlease specify --genome option (--genome fastafile)\"}\n\t\t.into { fastaToFai; fastaToGangSTR }",
        "origin": [
            [
                "params.genome",
                "A"
            ]
        ],
        "gives": [
            [
                "fastaToFai",
                "P"
            ],
            [
                "fastaToGangSTR",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t\t\t.fromPath(params.fai)\n\t\t\t.ifEmpty { exit 1, \"${params.fai} not found.\\nMake sure your the file exists (--fai faifile) or remove the fai option for it be automatically generated\"}",
        "origin": [
            [
                "params.fai",
                "A"
            ]
        ],
        "gives": []
    },
    "OPERATION_4": {
        "string": "bed = Channel\n    .fromPath(params.bed)\n    .ifEmpty { exit 1, \"${params.bed} not found.\\nPlease specify --bed option (--bed bedfile)\"}",
        "origin": [
            [
                "params.bed",
                "A"
            ]
        ],
        "gives": [
            [
                "bed",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "summary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    }
}