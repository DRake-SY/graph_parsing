{
    "SAMtoolsFlagstat": {
        "name_process": "SAMtoolsFlagstat",
        "string_process": "process SAMtoolsFlagstat {\n                                                                       \n                                                                           \n                                                                                                                \n                                                                         \n      \n    publishDir \"$params.outdir/${pair_id}/QC\", mode: 'symlink'\n    label \"small_mem\"\n    cache 'lenient'\n\n    input:\n                                                   \n        tuple val(pair_id), val(type), path(bam), path(bai)\n\n    output:\n        path \"${pair_id}_${type}_flagstat.txt\"\n\n    script:\n        \"\"\"\n        samtools flagstat -@${task.cpus} ${bam} > ${pair_id}_${type}_flagstat.txt\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        samtools flagstat -@${task.cpus} ${bam} > ${pair_id}_${type}_flagstat.txt\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "type",
            "bam",
            "bai"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/QC\", mode: 'symlink'",
            "label \"small_mem\"",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GATKCollectWgsMetrics": {
        "name_process": "GATKCollectWgsMetrics",
        "string_process": "\nprocess GATKCollectWgsMetrics {\n                                                                       \n                                                                                   \n                                                                           \n                                                                                                                \n                                                                         \n      \n    publishDir \"$params.outdir/${pair_id}/QC\", mode: 'symlink'\n    label 'cpu_2x'\n    cache 'lenient'\n\n    input:\n        path refgen\n                                                   \n        tuple val(pair_id), val(type), path(bam), path(bai)\n\n    output:\n        path \"${pair_id}_WgsMetrics.txt\"\n\n    script:\n        \"\"\"\n        gatk CollectWgsMetrics --INPUT ${bam} \\\n                               --OUTPUT ${pair_id}_WgsMetrics.txt \\\n                               --REFERENCE_SEQUENCE ${refgen} \\\n                               --MINIMUM_BASE_QUALITY 10 \\\n                               --MINIMUM_MAPPING_QUALITY 20 \\\n                               --COVERAGE_CAP 250;\n        \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "        \"\"\"\n        gatk CollectWgsMetrics --INPUT ${bam} \\\n                               --OUTPUT ${pair_id}_WgsMetrics.txt \\\n                               --REFERENCE_SEQUENCE ${refgen} \\\n                               --MINIMUM_BASE_QUALITY 10 \\\n                               --MINIMUM_MAPPING_QUALITY 20 \\\n                               --COVERAGE_CAP 250;\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "pair_id",
            "type",
            "bam",
            "bai"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/QC\", mode: 'symlink'",
            "label 'cpu_2x'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "Cobalt": {
        "name_process": "Cobalt",
        "string_process": "process Cobalt {\n    publishDir \"$params.outdir${pair_id}/cobalt\", mode: 'symlink'\n    label 'cpu_8x'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), val(N), path(normal_bam), path(normal_bai), val(T), path(tumor_bam), path(tumor_bai)\n                                                                   \n                                                                \n        path refgen\n        path gcProfile\n\n    output:\n        path \"*\" \n    \n    script:\n        \"\"\"\n        COBALT \\\n\t\t\"-Xmx${task.memory.toGiga()}g\" \\\n\t\t-reference ${pair_id}_${N} \\\n\t\t-reference_bam ${normal_bam} \\\n\t\t-tumor ${pair_id}_${T} \\\n\t\t-tumor_bam ${tumor_bam} \\\n\t\t-output_dir . \\\n\t\t-threads ${task.cpus} \\\n        -ref_genome ${refgen} \\\n\t\t-gc_profile ${gcProfile}\n        \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "        \"\"\"\n        COBALT \\\n\t\t\"-Xmx${task.memory.toGiga()}g\" \\\n\t\t-reference ${pair_id}_${N} \\\n\t\t-reference_bam ${normal_bam} \\\n\t\t-tumor ${pair_id}_${T} \\\n\t\t-tumor_bam ${tumor_bam} \\\n\t\t-output_dir . \\\n\t\t-threads ${task.cpus} \\\n        -ref_genome ${refgen} \\\n\t\t-gc_profile ${gcProfile}\n        \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pair_id",
            "N",
            "T",
            "normal_bam",
            "normal_bai",
            "tumor_bam",
            "tumor_bai",
            "refgen",
            "gcProfile"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir${pair_id}/cobalt\", mode: 'symlink'",
            "label 'cpu_8x'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "Amber": {
        "name_process": "Amber",
        "string_process": "\nprocess Amber {\n    publishDir \"$params.outdir/${pair_id}/amber\", mode: 'symlink'\n    label 'cpu_8x'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), val(N), path(normal_bam), path(normal_bai), val(T), path(tumor_bam), path(tumor_bai)\n                                                                   \n                                                                \n        path refgen\n        path loci\n\n    output:\n        path \"*\"\n\n    script:\n        \"\"\"\n        AMBER \\\n\t\t\"-Xmx${task.memory.toGiga()}g\" \\\n\t\t-reference ${pair_id}_${N} \\\n\t\t-reference_bam ${normal_bam} \\\n\t\t-tumor ${pair_id}_${T} \\\n\t\t-tumor_bam ${tumor_bam} \\\n\t\t-output_dir . \\\n\t\t-threads ${task.cpus} \\\n        -ref_genome ${refgen} \\\n\t\t-loci ${loci}\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        AMBER \\\n\t\t\"-Xmx${task.memory.toGiga()}g\" \\\n\t\t-reference ${pair_id}_${N} \\\n\t\t-reference_bam ${normal_bam} \\\n\t\t-tumor ${pair_id}_${T} \\\n\t\t-tumor_bam ${tumor_bam} \\\n\t\t-output_dir . \\\n\t\t-threads ${task.cpus} \\\n        -ref_genome ${refgen} \\\n\t\t-loci ${loci}\n        \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "AMBER"
        ],
        "tools_url": [
            "https://bio.tools/amber"
        ],
        "tools_dico": [
            {
                "name": "AMBER",
                "uri": "https://bio.tools/amber",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Assisted Model Building with Energy Refinement tool refers to two things: a set of molecular mechanical force fields for the simulation of biomolecules (which are in the public domain, and are used in a variety of simulation programs); and a package of molecular simulation programs which includes source code and demos.",
                "homepage": "http://ambermd.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "N",
            "T",
            "normal_bam",
            "normal_bai",
            "tumor_bam",
            "tumor_bai",
            "refgen",
            "loci"
        ],
        "nb_inputs": 9,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/amber\", mode: 'symlink'",
            "label 'cpu_8x'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "BazamRealign": {
        "name_process": "BazamRealign",
        "string_process": "process BazamRealign {\n                                              \n                                                                                   \n                                                                                    \n                                                                        \n                                                                                                            \n                                                                           \n                                                                                   \n      \n    label 'cpu_8x'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path index\n        tuple val(pair_id), val(type), val(lane), path(bam), val(empty)\n    \n    output:\n        tuple val(pair_id), val(type), val(lane), path(\"${bam.baseName}.sam\")\n        \n    when:\n        [\"bam\", \"cram\"].contains(bam.getExtension() == 'bam')\n\n    script:\n        \"\"\"\n        bazam -bam ${bam} | \\\n        $params.aligner mem -R \"@RG\\\\tID:${pair_id}_${type}_${lane}\\\\tSM:${pair_id}\\\\tPL:Illumina\\\" \\\n                     -Y -t${task.cpus} ${refgen} - > ${bam.baseName}.sam\n        \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "        \"\"\"\n        bazam -bam ${bam} | \\\n        $params.aligner mem -R \"@RG\\\\tID:${pair_id}_${type}_${lane}\\\\tSM:${pair_id}\\\\tPL:Illumina\\\" \\\n                     -Y -t${task.cpus} ${refgen} - > ${bam.baseName}.sam\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Bazam"
        ],
        "tools_url": [
            "https://bio.tools/Bazam"
        ],
        "tools_dico": [
            {
                "name": "Bazam",
                "uri": "https://bio.tools/Bazam",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Method for read extraction and realignment of high-throughput sequencing data.",
                "homepage": "https://github.com/ssadedin/bazam"
            }
        ],
        "inputs": [
            "refgen",
            "index",
            "pair_id",
            "type",
            "lane",
            "empty",
            "bam"
        ],
        "nb_inputs": 7,
        "outputs": [
            "lane"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "cache 'lenient'"
        ],
        "when": "[\"bam\", \"cram\"].contains(bam.getExtension() == 'bam')",
        "stub": ""
    },
    "BwaAlign": {
        "name_process": "BwaAlign",
        "string_process": "\nprocess BwaAlign {\n                                              \n                                                                                   \n                                                                                    \n                                                                        \n                                                                                                            \n                                                                           \n                                                                                   \n      \n    label 'cpu_8x'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path index\n        tuple val(pair_id), val(type), val(lane), path(r1), path(r2)\n    \n    output:\n        tuple val(pair_id), val(type), val(lane), path(\"${r1.baseName}.sam\")\n        \n    when:\n        r1.getExtension() == 'fastq' || r1.getExtension() == 'gz'\n\n    script:\n        \"\"\"\n        $params.aligner mem -R \"@RG\\\\tID:${pair_id}_${type}_${lane}\\\\tSM:${pair_id}\\\\tPL:Illumina\\\" \\\n                     -Y -t${task.cpus} ${refgen} ${r1} ${r2} > ${r1.baseName}.sam\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        $params.aligner mem -R \"@RG\\\\tID:${pair_id}_${type}_${lane}\\\\tSM:${pair_id}\\\\tPL:Illumina\\\" \\\n                     -Y -t${task.cpus} ${refgen} ${r1} ${r2} > ${r1.baseName}.sam\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "refgen",
            "index",
            "pair_id",
            "type",
            "lane",
            "r1",
            "r2"
        ],
        "nb_inputs": 7,
        "outputs": [
            "lane"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "r1.getExtension() == 'fastq' || r1.getExtension() == 'gz'",
        "stub": ""
    },
    "SambambaPost": {
        "name_process": "SambambaPost",
        "string_process": "\nprocess SambambaPost {\n    label 'cpu_8x'\n    label 'big_mem'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), val(type), val(lane), path(sam)\n    \n    output:\n        tuple val(pair_id), val(type), path(\"${sam.baseName}.bam\")\n\n    script:\n        \"\"\"\n        sambamba view -t${task.cpus} -f bam -S -l 0 -o /dev/stdout ${sam} | \\\n        sambamba sort -t${task.cpus} -m${task.memory.toGiga()}G -o ${sam.baseName}.bam /dev/stdin\n        \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        sambamba view -t${task.cpus} -f bam -S -l 0 -o /dev/stdout ${sam} | \\\n        sambamba sort -t${task.cpus} -m${task.memory.toGiga()}G -o ${sam.baseName}.bam /dev/stdin\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "pair_id",
            "type",
            "lane",
            "sam"
        ],
        "nb_inputs": 4,
        "outputs": [
            "type"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'big_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "SambambaMarkdupMerge": {
        "name_process": "SambambaMarkdupMerge",
        "string_process": "\nprocess SambambaMarkdupMerge {\n    publishDir \"$params.outdir/${pair_id}/bam\", mode: 'symlink'\n    label 'cpu_8x'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), val(type), path(bam)\n\n    output:\n        tuple val(pair_id), val(type), path(\"${pair_id}_${type}.bam\")\n    \n    script:\n        \"\"\"\n        sambamba markdup -t${task.cpus} --overflow-list-size=45000000 ${bam} ${pair_id}_${type}.bam\n        \"\"\"\n\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        sambamba markdup -t${task.cpus} --overflow-list-size=45000000 ${bam} ${pair_id}_${type}.bam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "pair_id",
            "type",
            "bam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "type"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/bam\", mode: 'symlink'",
            "label 'cpu_8x'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "SAMtoolsPost": {
        "name_process": "SAMtoolsPost",
        "string_process": "\nprocess SAMtoolsPost {\n    label 'cpu_8x'\n    label 'big_mem'\n    cache 'lenient'\n\n    input:\n                                        \n        tuple val(pair_id), val(type), val(lane), path(sam)\n\n    output:\n                                                     \n        tuple val(pair_id), val(type), val(lane), path(\"${sam.simpleName}.bam\")\n\n    script:\n        \"\"\"\n        samtools collate -@${task.cpus} -o - ${sam} |\\\n        samtools fixmate -@${task.cpus} -m - - | \\\n        samtools sort -@${task.cpus} -O BAM | \\\n        samtools markdup -@${task.cpus} - ${sam.simpleName}.bam\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        samtools collate -@${task.cpus} -o - ${sam} |\\\n        samtools fixmate -@${task.cpus} -m - - | \\\n        samtools sort -@${task.cpus} -O BAM | \\\n        samtools markdup -@${task.cpus} - ${sam.simpleName}.bam\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "type",
            "lane",
            "sam"
        ],
        "nb_inputs": 4,
        "outputs": [
            "lane"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'big_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "SAMtoolsBamIndex": {
        "name_process": "SAMtoolsBamIndex",
        "string_process": "\nprocess SAMtoolsBamIndex {\n                                  \n                                                                           \n                                                                                                                \n                                                            \n      \n    label 'cpu_8x'\n    label 'small_mem'\n    cache 'lenient'\n\n    input:\n                                        \n        tuple val(pair_id), val(type), path(bam)\n\n    output:\n                                                                 \n        tuple val(pair_id), val(type), path(\"${bam}\"), path(\"${bam}.bai\")\n\n    script:\n        \"\"\"\n        samtools index -@${task.cpus} ${bam} ${bam}.bai\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        \"\"\"\n        samtools index -@${task.cpus} ${bam} ${bam}.bai\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "type",
            "bam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "type"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'small_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "Gridss": {
        "name_process": "Gridss",
        "string_process": "process Gridss {\n                                                                     \n    label 'cpu_big'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path index\n        path dict\n        path fai\n        path repeatMasker\n        tuple val(pair_id), val(N), path(normal_bam), path(normal_bai), val(T), path(tumor_bam), path(tumor_bai)\n\n    output:\n        tuple val(pair_id), path(\"${pair_id}.gridss.vcf.gz\")\n\n    script:\n        \"\"\"\n        gridss \\\n            --reference ${refgen} \\\n            --output ${pair_id}.gridss.vcf.gz \\\n            --assembly ${pair_id}.bam \\\n            --threads ${task.cpus} \\\n            --blacklist ${repeatMasker} \\\n            --configuration ${params.gridssConfig} \\\n            --labels ${pair_id}_${N},${pair_id}_${T} \\\n            ${normal_bam} ${tumor_bam}\n        \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "        \"\"\"\n        gridss \\\n            --reference ${refgen} \\\n            --output ${pair_id}.gridss.vcf.gz \\\n            --assembly ${pair_id}.bam \\\n            --threads ${task.cpus} \\\n            --blacklist ${repeatMasker} \\\n            --configuration ${params.gridssConfig} \\\n            --labels ${pair_id}_${N},${pair_id}_${T} \\\n            ${normal_bam} ${tumor_bam}\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GRIDSS"
        ],
        "tools_url": [
            "https://bio.tools/gridss"
        ],
        "tools_dico": [
            {
                "name": "GRIDSS",
                "uri": "https://bio.tools/gridss",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0122",
                            "term": "Structural genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0925",
                                "term": "Sequence assembly"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3671",
                                "term": "Text"
                            }
                        ]
                    }
                ],
                "description": "A high-speed next-gen sequencing structural variation caller. It calls variants based on alignment-guided positional de Bruijn graph breakpoint assembly, split read, and read pair evidence.",
                "homepage": "https://github.com/PapenfussLab/gridss"
            }
        ],
        "inputs": [
            "refgen",
            "index",
            "dict",
            "fai",
            "repeatMasker",
            "pair_id",
            "N",
            "T",
            "normal_bam",
            "normal_bai",
            "tumor_bam",
            "tumor_bai"
        ],
        "nb_inputs": 12,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_big'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GridssRepeatMasker": {
        "name_process": "GridssRepeatMasker",
        "string_process": "\nprocess GridssRepeatMasker {\n                                                                     \n    label 'cpu_8x'\n    label 'mem_32'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), path(gridssVcf)\n        path repeatMasker\n\n    output:\n        tuple val(pair_id), path(\"${pair_id}_RM.annotated.vcf\")\n\n    script:\n        \"\"\"\n        gridss_annotate_vcf_repeatmasker \\\n            --output ${pair_id}_RM.annotated.vcf \\\n            --threads ${task.cpus} \\\n            --rm RepeatMasker \\\n            ${gridssVcf}\n        \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "        \"\"\"\n        gridss_annotate_vcf_repeatmasker \\\n            --output ${pair_id}_RM.annotated.vcf \\\n            --threads ${task.cpus} \\\n            --rm RepeatMasker \\\n            ${gridssVcf}\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pair_id",
            "gridssVcf",
            "repeatMasker"
        ],
        "nb_inputs": 3,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'mem_32'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "Gripss": {
        "name_process": "Gripss",
        "string_process": "\nprocess Gripss {\n                                                                     \n    label 'cpu_8x'\n    label 'mem_8'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path index\n        path dict\n        path fai\n        path breakendPon\n        path breakpointPon\n        path breakpointHotspot\n        tuple val(pair_id), val(N), path(normal_bam), path(normal_bai), val(T), path(tumor_bam), path(tumor_bai), path(gridssVcf)\n\n    output:\n        tuple val(pair_id), path(\"${pair_id}_gripss_somatic.vcf.gz\"), path(\"${pair_id}_gripss_somatic.vcf.gz.tbi\")\n\n    script:\n        \"\"\"\n        gripss \"-Xmx${task.memory.toGiga()}g\"\\\n            -tumor ${pair_id}_${T} \\\n            -reference ${pair_id}_${N} \\\n            -ref_genome ${refgen} \\\n            -breakend_pon ${breakendPon} \\\n            -breakpoint_pon ${breakpointPon} \\\n            -breakpoint_hotspot ${breakpointHotspot} \\\n            -input_vcf ${gridssVcf} \\\n            -output_vcf ${pair_id}_gripss_somatic.vcf.gz\n        \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "        \"\"\"\n        gripss \"-Xmx${task.memory.toGiga()}g\"\\\n            -tumor ${pair_id}_${T} \\\n            -reference ${pair_id}_${N} \\\n            -ref_genome ${refgen} \\\n            -breakend_pon ${breakendPon} \\\n            -breakpoint_pon ${breakpointPon} \\\n            -breakpoint_hotspot ${breakpointHotspot} \\\n            -input_vcf ${gridssVcf} \\\n            -output_vcf ${pair_id}_gripss_somatic.vcf.gz\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "refgen",
            "index",
            "dict",
            "fai",
            "breakendPon",
            "breakpointPon",
            "breakpointHotspot",
            "pair_id",
            "N",
            "T",
            "normal_bam",
            "normal_bai",
            "tumor_bam",
            "tumor_bai",
            "gridssVcf"
        ],
        "nb_inputs": 15,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_8x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GripssHardFilter": {
        "name_process": "GripssHardFilter",
        "string_process": "\nprocess GripssHardFilter {\n    publishDir \"$params.outdir/${pair_id}/gridss\", mode: 'symlink'\n    label 'small_mem'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), path(gridssVcf), path(gridssVcfTbi)\n\n    output:\n        tuple val(pair_id), path(\"${gridssVcf.simpleName}.filtered.vcf.gz\"), path(\"${gridssVcf.simpleName}.filtered.vcf.gz.tbi\")\n\n    script:\n        \"\"\"\n        java -Xmx${task.memory.toGiga()}g -cp /opt/conda/share/hmftools-gripss-1.11-0/gripss.jar com.hartwig.hmftools.gripss.GripssHardFilterApplicationKt \\\n            -input_vcf ${gridssVcf} \\\n            -output_vcf ${gridssVcf.simpleName}.filtered.vcf.gz\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        java -Xmx${task.memory.toGiga()}g -cp /opt/conda/share/hmftools-gripss-1.11-0/gripss.jar com.hartwig.hmftools.gripss.GripssHardFilterApplicationKt \\\n            -input_vcf ${gridssVcf} \\\n            -output_vcf ${gridssVcf.simpleName}.filtered.vcf.gz\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pair_id",
            "gridssVcf",
            "gridssVcfTbi"
        ],
        "nb_inputs": 3,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/gridss\", mode: 'symlink'",
            "label 'small_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "BwaIndex": {
        "name_process": "BwaIndex",
        "string_process": "process BwaIndex {\n                                                                       \n                                                                                   \n                                                                                    \n      \n\tstoreDir \"$params.resourcesBWA2INDEX\"\n    label 'cpu_one'\n    label \"big_mem\"\n    cache 'lenient'\n\n    when:\n        params.aligner == \"bwa-mem2\"\n\n    input:\n        path refgen\n    \n    output:\n        path '*'\n    \n    script:\n        \"\"\"\n        $params.aligner index ${refgen}\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        \"\"\"\n        $params.aligner index ${refgen}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "refgen"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesBWA2INDEX\"",
            "label 'cpu_one'",
            "label \"big_mem\"",
            "cache 'lenient'"
        ],
        "when": "params.aligner == \"bwa-mem2\"",
        "stub": ""
    },
    "SAMtoolsFastaIndex": {
        "name_process": "SAMtoolsFastaIndex",
        "string_process": "\nprocess SAMtoolsFastaIndex {\n                                                         \n                                                                                   \n                                                                        \n      \n\tstoreDir \"$params.resourcesGATK\"\n    label 'cpu_2x'\n    label 'small_mem'\n    cache 'lenient'\n\n    input:\n        path refgen\n    \n    output:\n        path \"${refgen}.fai\"\n\n    script:\n        \"\"\"\n        if [ ${refgen.getExtension()} == 'gz' ]\n        then\n            bgzip -d -c ${refgen} | samtools faidx - --fai-idx ${refgen}.fai\n        else\n            samtools faidx ${refgen} --fai-idx ${refgen}.fai\n        fi \n        \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "        \"\"\"\n        if [ ${refgen.getExtension()} == 'gz' ]\n        then\n            bgzip -d -c ${refgen} | samtools faidx - --fai-idx ${refgen}.fai\n        else\n            samtools faidx ${refgen} --fai-idx ${refgen}.fai\n        fi \n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "refgen"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesGATK\"",
            "label 'cpu_2x'",
            "label 'small_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "ReferenceDict": {
        "name_process": "ReferenceDict",
        "string_process": "\nprocess ReferenceDict {\n                                                                  \n                                                                                   \n                                                                       \n      \n\tstoreDir \"$params.resourcesGATK\"\n    label \"mem_8\"\n    cache 'lenient'\n    \n    input:\n        path refgen\n\n    output:\n        path \"${refgen.simpleName}.dict\"\n\n    script:\n        \"\"\"\n        gatk CreateSequenceDictionary \\\n             --REFERENCE ${refgen}\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        gatk CreateSequenceDictionary \\\n             --REFERENCE ${refgen}\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesGATK\"",
            "label \"mem_8\"",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GatkHaplotypeCaller": {
        "name_process": "GatkHaplotypeCaller",
        "string_process": "process GatkHaplotypeCaller {\n                                                                    \n                                                                                   \n                                                                        \n                                                                        \n                                                                           \n                                                                                                                \n      \n    label 'cpu_2x'\n    label 'mem_8'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), val(type), path(bam), path(bai)\n        each chromosomes\n\n    output:\n        tuple val(pair_id), path(\"${pair_id}_${type}_${chromosomes}.rawGermline.vcf\")\n\n    script:\n        interval = ( params.refVersion == \"38\" ) ? \"chr${chromosomes}\" : \"${chromosomes}\"\n        \"\"\"\n        gatk --java-options \"-Xmx${task.memory.toGiga()}g -XX:+UseParallelGC -XX:ParallelGCThreads=${task.cpus}\" HaplotypeCaller \\\n             --input ${bam} \\\n             --output ${pair_id}_${type}_${chromosomes}.rawGermline.vcf \\\n             --reference ${refgen} \\\n             --intervals $interval \\\n             --standard-min-confidence-threshold-for-calling 15.0 \\\n             --emit-ref-confidence GVCF \\\n             --native-pair-hmm-threads ${task.cpus} \\\n             -GQB 5 -GQB 10 -GQB 15 -GQB 20 -GQB 30 -GQB 40 -GQB 50 -GQB 60\n        \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "        interval = ( params.refVersion == \"38\" ) ? \"chr${chromosomes}\" : \"${chromosomes}\"\n        \"\"\"\n        gatk --java-options \"-Xmx${task.memory.toGiga()}g -XX:+UseParallelGC -XX:ParallelGCThreads=${task.cpus}\" HaplotypeCaller \\\n             --input ${bam} \\\n             --output ${pair_id}_${type}_${chromosomes}.rawGermline.vcf \\\n             --reference ${refgen} \\\n             --intervals $interval \\\n             --standard-min-confidence-threshold-for-calling 15.0 \\\n             --emit-ref-confidence GVCF \\\n             --native-pair-hmm-threads ${task.cpus} \\\n             -GQB 5 -GQB 10 -GQB 15 -GQB 20 -GQB 30 -GQB 40 -GQB 50 -GQB 60\n        \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "type",
            "bam",
            "bai",
            "chromosomes"
        ],
        "nb_inputs": 8,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GenotypeGVCFs": {
        "name_process": "GenotypeGVCFs",
        "string_process": "\nprocess GenotypeGVCFs {\n    label 'cpu_2x'\n    label 'mem_8'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(vcf)\n\n    output:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(\"${vcf.simpleName}.genotype.vcf\"), emit: vcf\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" GenotypeGVCFs \\\n        --variant ${vcf} \\\n        --reference ${refgen} \\\n        --output ${vcf.simpleName}.genotype.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" GenotypeGVCFs \\\n        --variant ${vcf} \\\n        --reference ${refgen} \\\n        --output ${vcf.simpleName}.genotype.vcf\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "vcf"
        ],
        "nb_inputs": 5,
        "outputs": [
            "refgen",
            "fai",
            "dict"
        ],
        "nb_outputs": 3,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'"
        ],
        "when": "",
        "stub": ""
    },
    "SelectVariantsSNP": {
        "name_process": "SelectVariantsSNP",
        "string_process": "\nprocess SelectVariantsSNP {\n    label 'cpu_2x'\n    label 'mem_8'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(vcf)\n\n    output:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(\"${vcf.simpleName}.rawSNP.vcf\"), path(\"${vcf.simpleName}.rawSNP.vcf.idx\"), emit: vcf\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" SelectVariants \\\n        --select-type-to-include SNP \\\n        --select-type-to-include NO_VARIATION \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.rawSNP.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" SelectVariants \\\n        --select-type-to-include SNP \\\n        --select-type-to-include NO_VARIATION \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.rawSNP.vcf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "vcf"
        ],
        "nb_inputs": 5,
        "outputs": [
            "refgen",
            "fai",
            "dict"
        ],
        "nb_outputs": 3,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'"
        ],
        "when": "",
        "stub": ""
    },
    "SelectVariantsINDEL": {
        "name_process": "SelectVariantsINDEL",
        "string_process": "\nprocess SelectVariantsINDEL {\n    label 'cpu_2x'\n    label 'mem_8'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(vcf)\n\n    output:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(\"${vcf.simpleName}.rawINDEL.vcf\"), path(\"${vcf.simpleName}.rawINDEL.vcf.idx\"), emit: vcf\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" SelectVariants \\\n        --select-type-to-include INDEL \\\n        --select-type-to-include MIXED \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.rawINDEL.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" SelectVariants \\\n        --select-type-to-include INDEL \\\n        --select-type-to-include MIXED \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.rawINDEL.vcf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "vcf"
        ],
        "nb_inputs": 5,
        "outputs": [
            "refgen",
            "fai",
            "dict"
        ],
        "nb_outputs": 3,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'"
        ],
        "when": "",
        "stub": ""
    },
    "VariantFiltrationSNP": {
        "name_process": "VariantFiltrationSNP",
        "string_process": "\nprocess VariantFiltrationSNP {\n    label 'cpu_2x'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(vcf), path(idx)\n\n    output:\n        tuple val(pair_id), path(\"${vcf.simpleName}.filteredSNP.vcf\"), emit: vcf\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" VariantFiltration \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.filteredSNP.vcf \\\n        --filter-expression \"QD < 2.0\" \\\n        --filter-name \"SNP_LowQualityDepth\" \\\n        --filter-expression \"MQ < 40.0\" \\\n        --filter-name \"SNP_MappingQuality\" \\\n        --filter-expression \"FS > 60.0\" \\\n        --filter-name \"SNP_StrandBias\" \\\n        --filter-expression \"HaplotypeScore > 13.0\" \\\n        --filter-name \"SNP_HaplotypeScoreHigh\" \\\n        --filter-expression \"MQRankSum < -12.5\" \\\n        --filter-name \"SNP_MQRankSumLow\" \\\n        --filter-expression \"ReadPosRankSum < -8.0\" \\\n        --filter-name \"SNP_ReadPosRankSumLow\" \\\n        --cluster-size 3 \\\n        --cluster-window-size 35\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" VariantFiltration \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.filteredSNP.vcf \\\n        --filter-expression \"QD < 2.0\" \\\n        --filter-name \"SNP_LowQualityDepth\" \\\n        --filter-expression \"MQ < 40.0\" \\\n        --filter-name \"SNP_MappingQuality\" \\\n        --filter-expression \"FS > 60.0\" \\\n        --filter-name \"SNP_StrandBias\" \\\n        --filter-expression \"HaplotypeScore > 13.0\" \\\n        --filter-name \"SNP_HaplotypeScoreHigh\" \\\n        --filter-expression \"MQRankSum < -12.5\" \\\n        --filter-name \"SNP_MQRankSumLow\" \\\n        --filter-expression \"ReadPosRankSum < -8.0\" \\\n        --filter-name \"SNP_ReadPosRankSumLow\" \\\n        --cluster-size 3 \\\n        --cluster-window-size 35\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "vcf",
            "idx"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'"
        ],
        "when": "",
        "stub": ""
    },
    "VariantFiltrationINDEL": {
        "name_process": "VariantFiltrationINDEL",
        "string_process": "\nprocess VariantFiltrationINDEL {\n    label 'cpu_2x'\n    label 'mem_8'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(vcf), path(idx)\n\n    output:\n        tuple val(pair_id), path(\"${vcf.simpleName}.filteredINDELS.vcf\"), emit: vcf\n\n    script:\n    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" VariantFiltration \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.filteredINDELS.vcf \\\n        --filter-expression \\\"QD < 2.0\\\" \\\n        --filter-name \\\"INDEL_LowQualityDepth\\\" \\\n        --filter-expression \\\"FS > 200.0\\\" \\\n        --filter-name \\\"INDEL_StrandBias\\\" \\\n        --filter-expression \\\"ReadPosRankSum < -20.0\\\" \\\n        --filter-name \\\"INDEL_ReadPosRankSumLow\\\" \\\n        --cluster-size 3 \\\n        --cluster-window-size 35\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    gatk --java-options \"-Xmx${task.memory.toGiga()}g\" VariantFiltration \\\n        --reference ${refgen} \\\n        --variant ${vcf} \\\n        --output ${vcf.simpleName}.filteredINDELS.vcf \\\n        --filter-expression \\\"QD < 2.0\\\" \\\n        --filter-name \\\"INDEL_LowQualityDepth\\\" \\\n        --filter-expression \\\"FS > 200.0\\\" \\\n        --filter-name \\\"INDEL_StrandBias\\\" \\\n        --filter-expression \\\"ReadPosRankSum < -20.0\\\" \\\n        --filter-name \\\"INDEL_ReadPosRankSumLow\\\" \\\n        --cluster-size 3 \\\n        --cluster-window-size 35\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "vcf",
            "idx"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'"
        ],
        "when": "",
        "stub": ""
    },
    "GatkBqsrTable": {
        "name_process": "GatkBqsrTable",
        "string_process": "\nprocess GatkBqsrTable {\n                                                             \n                                                                                   \n                                                                                    \n                                                                       \n                                                                        \n                                                                                          \n                                                                                                        \n                                                                           \n                                                                                                                \n                                                                             \n                                                                                       \n      \n    label 'cpu_2x'\n    label 'mem_8'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path index\n        path fai\n        path dict\n        path(knownSNPsites)\n        path(knownSNPidx)\n        tuple val(pair_id), val(type), path(bam), path(bai)\n        each chromosomes\n\n    output:\n        path(\"${pair_id}_${type}_${chromosomes}_bqsr.table\")\n\n    script:\n        interval = ( params.refVersion == \"38\" ) ? \"chr${chromosomes}\" : \"${chromosomes}\"\n        knownSites = knownSNPsites.join(' --known-sites ')\n        \"\"\"\n        gatk --java-options '-Xmx${task.memory.toGiga()}g' BaseRecalibrator \\\n             -R ${refgen} \\\n             -I ${bam} \\\n             -O ${pair_id}_${type}_${chromosomes}_bqsr.table \\\n             --intervals $interval \\\n             --known-sites $knownSites \\\n             --preserve-qscores-less-than 6\n        \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "        interval = ( params.refVersion == \"38\" ) ? \"chr${chromosomes}\" : \"${chromosomes}\"\n        knownSites = knownSNPsites.join(' --known-sites ')\n        \"\"\"\n        gatk --java-options '-Xmx${task.memory.toGiga()}g' BaseRecalibrator \\\n             -R ${refgen} \\\n             -I ${bam} \\\n             -O ${pair_id}_${type}_${chromosomes}_bqsr.table \\\n             --intervals $interval \\\n             --known-sites $knownSites \\\n             --preserve-qscores-less-than 6\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "index",
            "fai",
            "dict",
            "knownSNPsites",
            "knownSNPidx",
            "pair_id",
            "type",
            "bam",
            "bai",
            "chromosomes"
        ],
        "nb_inputs": 11,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GatkBqsrApply": {
        "name_process": "GatkBqsrApply",
        "string_process": "\nprocess GatkBqsrApply {\n                                                                 \n                                                                                   \n                                                                       \n                                                                        \n                                                                             \n                                                                                       \n                                                                           \n                                                                                                                \n      \n    label 'cpu_2x'\n    label 'mem_8'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), val(type), path(bam), path(bai)\n        path(bqsrTable)\n\n    output:\n        tuple val(pair_id), val(type), path(\"${pair_id}_${type}_bqsr.bam\")\n\n    script:\n        \"\"\"\n        gatk --java-options '-Xmx${task.memory.toGiga()}g' ApplyBQSR \\\n             -R ${refgen} \\\n             -I ${bam} \\\n             -O ${pair_id}_${type}_bqsr.bam \\\n             --bqsr-recal-file ${bqsrTable} \\\n             --preserve-qscores-less-than 6 \\\n             --static-quantized-quals 10 \\\n             --static-quantized-quals 20 \\\n             --static-quantized-quals 30\n        \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "        \"\"\"\n        gatk --java-options '-Xmx${task.memory.toGiga()}g' ApplyBQSR \\\n             -R ${refgen} \\\n             -I ${bam} \\\n             -O ${pair_id}_${type}_bqsr.bam \\\n             --bqsr-recal-file ${bqsrTable} \\\n             --preserve-qscores-less-than 6 \\\n             --static-quantized-quals 10 \\\n             --static-quantized-quals 20 \\\n             --static-quantized-quals 30\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "type",
            "bam",
            "bai",
            "bqsrTable"
        ],
        "nb_inputs": 8,
        "outputs": [
            "type"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "GatherBqsr": {
        "name_process": "GatherBqsr",
        "string_process": "\nprocess GatherBqsr {\n    label 'small_mem'\n    cache 'lenient'\n\n    input:\n        path(bqsrTable)\n\n    output:\n        path(\"bqsr.table\")\n\n    script:\n        inputTableList = bqsrTable.join(' --input ')\n        \"\"\"\n        gatk GatherBQSRReports \\\n            --input ${inputTableList} \\\n            --output bqsr.table\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        inputTableList = bqsrTable.join(' --input ')\n        \"\"\"\n        gatk GatherBQSRReports \\\n            --input ${inputTableList} \\\n            --output bqsr.table\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bqsrTable"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'small_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "MergeVcf": {
        "name_process": "MergeVcf",
        "string_process": "\nprocess MergeVcf {\n                                                                 \n    label 'cpu_2x'\n    label 'mem_8'\n\n    cache 'lenient'\n\n    input:\n        path refgen\n        tuple val(pair_id), path(vcfs)\n\n    output:\n        tuple val(pair_id), path(\"${pair_id}_GATK.filteredVariants.vcf\")\n\n    script:\n        inputListVCF = vcfs.join(' --INPUT ')\n        \"\"\"\n        gatk MergeVcfs \\\n            --REFERENCE_SEQUENCE ${refgen} \\\n            --INPUT ${inputListVCF} \\\n            --OUTPUT ${pair_id}_GATK.filteredVariants.vcf\n        \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "        inputListVCF = vcfs.join(' --INPUT ')\n        \"\"\"\n        gatk MergeVcfs \\\n            --REFERENCE_SEQUENCE ${refgen} \\\n            --INPUT ${inputListVCF} \\\n            --OUTPUT ${pair_id}_GATK.filteredVariants.vcf\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "pair_id",
            "vcfs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "CombineGVCFs": {
        "name_process": "CombineGVCFs",
        "string_process": "\nprocess CombineGVCFs {\n                                                                 \n    label 'cpu_2x'\n    label 'mem_8'\n    cache 'lenient'\n\n    input:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(chromosomeVCF)\n\n    output:\n        path refgen\n        path fai\n        path dict\n        tuple val(pair_id), path(\"${pair_id}_VCGermlineGVCF.vcf\"), emit: vcf\n\n    script:\n        inputListVCF = chromosomeVCF.join(' --variant ')\n        \"\"\"\n        gatk CombineGVCFs \\\n            --reference ${refgen} \\\n            --variant ${inputListVCF} \\\n            --output ${pair_id}_VCGermlineGVCF.vcf\n        \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "        inputListVCF = chromosomeVCF.join(' --variant ')\n        \"\"\"\n        gatk CombineGVCFs \\\n            --reference ${refgen} \\\n            --variant ${inputListVCF} \\\n            --output ${pair_id}_VCGermlineGVCF.vcf\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "refgen",
            "fai",
            "dict",
            "pair_id",
            "chromosomeVCF"
        ],
        "nb_inputs": 5,
        "outputs": [
            "refgen",
            "fai",
            "dict"
        ],
        "nb_outputs": 3,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'mem_8'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "DownloadGATK38": {
        "name_process": "DownloadGATK38",
        "string_process": "process DownloadGATK38 {\n\tstoreDir \"$params.resourcesGATK\"\n\n    when:\n\t\tparams.refVersion == '38'\n                        \n\n    output:\n        path \"*\"\n\n    script:\n        \"\"\"\n\t\tgsutil -m cp \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf.idx\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.amb\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.ann\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.bwt\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.pac\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.sa\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz.tbi\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz.tbi\" \\\n\t\t.\n\t\tbgzip Homo_sapiens_assembly38.dbsnp138.vcf\n\t\ttabix -p vcf Homo_sapiens_assembly38.dbsnp138.vcf.gz\n\t\tmv Homo_sapiens_assembly38.fasta.64.amb Homo_sapiens_assembly38.fasta.amb\n\t\tmv Homo_sapiens_assembly38.fasta.64.ann Homo_sapiens_assembly38.fasta.ann\n\t\tmv Homo_sapiens_assembly38.fasta.64.bwt Homo_sapiens_assembly38.fasta.bwt\n\t\tmv Homo_sapiens_assembly38.fasta.64.pac Homo_sapiens_assembly38.fasta.pac\n\t\tmv Homo_sapiens_assembly38.fasta.64.sa Homo_sapiens_assembly38.fasta.sa\n        \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "        \"\"\"\n\t\tgsutil -m cp \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf.idx\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.amb\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.ann\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.bwt\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.pac\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta.64.sa\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz.tbi\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\" \\\n\t\t\"gs://genomics-public-data/resources/broad/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz.tbi\" \\\n\t\t.\n\t\tbgzip Homo_sapiens_assembly38.dbsnp138.vcf\n\t\ttabix -p vcf Homo_sapiens_assembly38.dbsnp138.vcf.gz\n\t\tmv Homo_sapiens_assembly38.fasta.64.amb Homo_sapiens_assembly38.fasta.amb\n\t\tmv Homo_sapiens_assembly38.fasta.64.ann Homo_sapiens_assembly38.fasta.ann\n\t\tmv Homo_sapiens_assembly38.fasta.64.bwt Homo_sapiens_assembly38.fasta.bwt\n\t\tmv Homo_sapiens_assembly38.fasta.64.pac Homo_sapiens_assembly38.fasta.pac\n\t\tmv Homo_sapiens_assembly38.fasta.64.sa Homo_sapiens_assembly38.fasta.sa\n        \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "NGSUtils"
        ],
        "tools_url": [
            "https://bio.tools/ngsutils"
        ],
        "tools_dico": [
            {
                "name": "NGSUtils",
                "uri": "https://bio.tools/ngsutils",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3187",
                                    "term": "Sequence contamination filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "NGSUtils is a suite of software tools for working with next-generation sequencing datasets",
                "homepage": "http://ngsutils.org"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesGATK\""
        ],
        "when": "params.refVersion == '38'",
        "stub": ""
    },
    "DownloadGATK19": {
        "name_process": "DownloadGATK19",
        "string_process": "\nprocess DownloadGATK19 {\n\tstoreDir \"$params.resourcesGATK\"\n\n\twhen:\n\t\tparams.refVersion == '37'\n\t\t                \n\n\toutput:\n\t\tpath \"*\"\n\n\tscript:\n\t\t\"\"\"\n\t\tgsutil -m cp \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_omni2.5.b37.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_omni2.5.b37.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_phase1.snps.high_confidence.b37.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_phase1.snps.high_confidence.b37.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Axiom_Exome_Plus.genotypes.all_populations.poly.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Axiom_Exome_Plus.genotypes.all_populations.poly.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.dbsnp138.vcf\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.dbsnp138.vcf.idx\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.amb\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.ann\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.bwt\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.pac\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.sa\" \\\n\t\t.\n\t\tmv Homo_sapiens_assembly19.dbsnp138.vcf Homo_sapiens_assembly37.dbsnp138.vcf\n\t\tbgzip Homo_sapiens_assembly37.dbsnp138.vcf\n\t\ttabix -p vcf Homo_sapiens_assembly37.dbsnp138.vcf.gz\n\t\tmv Homo_sapiens_assembly19.dbsnp138.vcf.idx Homo_sapiens_assembly37.dbsnp138.vcf.idx\n\t\tmv Homo_sapiens_assembly19.fasta Homo_sapiens_assembly37.fasta\n\t\tmv Homo_sapiens_assembly19.fasta.64.amb Homo_sapiens_assembly37.fasta.amb\n\t\tmv Homo_sapiens_assembly19.fasta.64.ann Homo_sapiens_assembly37.fasta.ann\n\t\tmv Homo_sapiens_assembly19.fasta.64.bwt Homo_sapiens_assembly37.fasta.bwt\n\t\tmv Homo_sapiens_assembly19.fasta.64.pac Homo_sapiens_assembly37.fasta.pac\n\t\tmv Homo_sapiens_assembly19.fasta.64.sa Homo_sapiens_assembly37.fasta.sa\n\t\t\"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "\t\t\"\"\"\n\t\tgsutil -m cp \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_omni2.5.b37.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_omni2.5.b37.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_phase1.snps.high_confidence.b37.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/1000G_phase1.snps.high_confidence.b37.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Axiom_Exome_Plus.genotypes.all_populations.poly.vcf.gz\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Axiom_Exome_Plus.genotypes.all_populations.poly.vcf.gz.tbi\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.dbsnp138.vcf\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.dbsnp138.vcf.idx\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.amb\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.ann\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.bwt\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.pac\" \\\n\t\t\"gs://gcp-public-data--broad-references/hg19/v0/Homo_sapiens_assembly19.fasta.64.sa\" \\\n\t\t.\n\t\tmv Homo_sapiens_assembly19.dbsnp138.vcf Homo_sapiens_assembly37.dbsnp138.vcf\n\t\tbgzip Homo_sapiens_assembly37.dbsnp138.vcf\n\t\ttabix -p vcf Homo_sapiens_assembly37.dbsnp138.vcf.gz\n\t\tmv Homo_sapiens_assembly19.dbsnp138.vcf.idx Homo_sapiens_assembly37.dbsnp138.vcf.idx\n\t\tmv Homo_sapiens_assembly19.fasta Homo_sapiens_assembly37.fasta\n\t\tmv Homo_sapiens_assembly19.fasta.64.amb Homo_sapiens_assembly37.fasta.amb\n\t\tmv Homo_sapiens_assembly19.fasta.64.ann Homo_sapiens_assembly37.fasta.ann\n\t\tmv Homo_sapiens_assembly19.fasta.64.bwt Homo_sapiens_assembly37.fasta.bwt\n\t\tmv Homo_sapiens_assembly19.fasta.64.pac Homo_sapiens_assembly37.fasta.pac\n\t\tmv Homo_sapiens_assembly19.fasta.64.sa Homo_sapiens_assembly37.fasta.sa\n\t\t\"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "NGSUtils"
        ],
        "tools_url": [
            "https://bio.tools/ngsutils"
        ],
        "tools_dico": [
            {
                "name": "NGSUtils",
                "uri": "https://bio.tools/ngsutils",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3187",
                                    "term": "Sequence contamination filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3219",
                                    "term": "Sequence read pre-processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "NGSUtils is a suite of software tools for working with next-generation sequencing datasets",
                "homepage": "http://ngsutils.org"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesGATK\""
        ],
        "when": "params.refVersion == '37'",
        "stub": ""
    },
    "DownloadHMF": {
        "name_process": "DownloadHMF",
        "string_process": "\nprocess DownloadHMF {\n\tstoreDir \"$params.resourcesHMF\"\n\n\twhen:\n\t\tparams.initHMF\n\n\toutput:\n\t\tpath \"*\"\n\n\tscript:\n\t\t\"\"\"\n\t\tcurl -o HMF.zip 'https://nextcloud.hartwigmedicalfoundation.nl/s/LTiKTd8XxBqwaiC/download?path=%2F&files=HMFTools-Resources&downloadStartSecret=ej8sw98yocc'\n\t\tcurl -o snpEff_v5_0_hg38.zip 'https://snpeff.blob.core.windows.net/databases/v5_0/snpEff_v5_0_hg38.zip'\n\t\tcurl -o snpEff_v5_0_hg19.zip 'https://snpeff.blob.core.windows.net/databases/v5_0/snpEff_v5_0_hg19.zip'\n\t\tunzip -o HMF.zip\n\t\tunzip -o snpEff_v5_0_hg38.zip\n\t\tunzip -o snpEff_v5_0_hg19.zip\n\t\tmv HMFTools-Resources/* .\n\t\tmv data/ SnpEff/\n\t\trm -r HMFTools-Resources\n\t\trm snpEff_v5_0_hg38.zip\n\t\trm snpEff_v5_0_hg19.zip\n\t\trm HMF.zip\n\t\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\t\"\"\"\n\t\tcurl -o HMF.zip 'https://nextcloud.hartwigmedicalfoundation.nl/s/LTiKTd8XxBqwaiC/download?path=%2F&files=HMFTools-Resources&downloadStartSecret=ej8sw98yocc'\n\t\tcurl -o snpEff_v5_0_hg38.zip 'https://snpeff.blob.core.windows.net/databases/v5_0/snpEff_v5_0_hg38.zip'\n\t\tcurl -o snpEff_v5_0_hg19.zip 'https://snpeff.blob.core.windows.net/databases/v5_0/snpEff_v5_0_hg19.zip'\n\t\tunzip -o HMF.zip\n\t\tunzip -o snpEff_v5_0_hg38.zip\n\t\tunzip -o snpEff_v5_0_hg19.zip\n\t\tmv HMFTools-Resources/* .\n\t\tmv data/ SnpEff/\n\t\trm -r HMFTools-Resources\n\t\trm snpEff_v5_0_hg38.zip\n\t\trm snpEff_v5_0_hg19.zip\n\t\trm HMF.zip\n\t\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "storeDir \"$params.resourcesHMF\""
        ],
        "when": "params.initHMF",
        "stub": ""
    },
    "Purple": {
        "name_process": "Purple",
        "string_process": "process Purple {\n    publishDir \"$params.outdir/${pair_id}/visualization/${runtype}\", mode: 'symlink'\n    label 'cpu_big'\n    cache 'lenient'\n\n    input:\n        val runtype\n        path refgen\n        path fai\n        path dict\n        path gcProfile\n        tuple   val(pair_id), path(germlineVcf), path(somaticVcf), \n                path(gripssSomatic), path(gripssSomaticTbi),\n                path(gripssSomaticFiltered), path(gripssSomaticFilteredTbi)\n        \n    output:\n        tuple val(pair_id), path(\"${pair_id}_T.purple.sv.vcf.gz\"), emit: sv\n        path \"*\"\n\n    script:\n        \"\"\"\n        PURPLE \"-Xmx${task.memory.toGiga()}g\"\\\n            -reference ${pair_id}_N \\\n            -tumor ${pair_id}_T \\\n            -output_dir . \\\n            -amber $params.outdir/${pair_id}/amber \\\n            -cobalt $params.outdir/${pair_id}/cobalt \\\n            -somatic_hotspots ${params.hotspotsSomatic} \\\n            -germline_hotspots ${params.hotspotsGermline} \\\n            -gc_profile ${gcProfile} \\\n            -ref_genome ${refgen} \\\n            -germline_vcf ${germlineVcf} \\\n            -somatic_vcf ${somaticVcf} \\\n            -structural_vcf ${gripssSomaticFiltered} \\\n            -sv_recovery_vcf ${gripssSomatic} \\\n            -driver_gene_panel ${params.driverPanel} \\\n            -circos circos \\\n            -threads ${task.cpus}\n        \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "        \"\"\"\n        PURPLE \"-Xmx${task.memory.toGiga()}g\"\\\n            -reference ${pair_id}_N \\\n            -tumor ${pair_id}_T \\\n            -output_dir . \\\n            -amber $params.outdir/${pair_id}/amber \\\n            -cobalt $params.outdir/${pair_id}/cobalt \\\n            -somatic_hotspots ${params.hotspotsSomatic} \\\n            -germline_hotspots ${params.hotspotsGermline} \\\n            -gc_profile ${gcProfile} \\\n            -ref_genome ${refgen} \\\n            -germline_vcf ${germlineVcf} \\\n            -somatic_vcf ${somaticVcf} \\\n            -structural_vcf ${gripssSomaticFiltered} \\\n            -sv_recovery_vcf ${gripssSomatic} \\\n            -driver_gene_panel ${params.driverPanel} \\\n            -circos circos \\\n            -threads ${task.cpus}\n        \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "runtype",
            "refgen",
            "fai",
            "dict",
            "gcProfile",
            "pair_id",
            "germlineVcf",
            "somaticVcf",
            "gripssSomatic",
            "gripssSomaticTbi",
            "gripssSomaticFiltered",
            "gripssSomaticFilteredTbi"
        ],
        "nb_inputs": 12,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/visualization/${runtype}\", mode: 'symlink'",
            "label 'cpu_big'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "Linx": {
        "name_process": "Linx",
        "string_process": "\nprocess Linx {\n    publishDir \"$params.outdir/${pair_id}/visualization/\", mode: 'copy'\n    label 'cpu_big'\n    cache 'lenient'\n\n    input:\n        path fragileSites\n        path lineElements\n        path replicationOrigins\n        path viralHosts\n        path knownFusions\n        path driverPanel\n        tuple   val(pair_id), path(purpleSV)\n        \n    output:\n        path \"*\"\n\n    script:\n        \"\"\"\n        linx \"-Xmx${task.memory.toGiga()}g\"\\\n            -sample ${pair_id}_T \\\n            -sv_vcf ${purpleSV} \\\n            -purple_dir $params.outdir/${pair_id}/visualization/ \\\n            -ref_genome_version ${params.refVersion} \\\n            -output_dir . \\\n            -fragile_site_file ${fragileSites} \\\n            -line_element_file ${lineElements} \\\n            -replication_origins_file ${replicationOrigins} \\\n            -viral_hosts_file ${viralHosts} \\\n            -gene_transcripts_dir ${params.resourcesHMF}/Ensembl-Data-Cache/${params.refVersion} \\\n            -check_fusions -known_fusion_file ${knownFusions} \\\n            -check_drivers -driver_gene_panel ${driverPanel} \\\n            -chaining_sv_limit 0 \\\n            -write_vis_data\n        \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "        \"\"\"\n        linx \"-Xmx${task.memory.toGiga()}g\"\\\n            -sample ${pair_id}_T \\\n            -sv_vcf ${purpleSV} \\\n            -purple_dir $params.outdir/${pair_id}/visualization/ \\\n            -ref_genome_version ${params.refVersion} \\\n            -output_dir . \\\n            -fragile_site_file ${fragileSites} \\\n            -line_element_file ${lineElements} \\\n            -replication_origins_file ${replicationOrigins} \\\n            -viral_hosts_file ${viralHosts} \\\n            -gene_transcripts_dir ${params.resourcesHMF}/Ensembl-Data-Cache/${params.refVersion} \\\n            -check_fusions -known_fusion_file ${knownFusions} \\\n            -check_drivers -driver_gene_panel ${driverPanel} \\\n            -chaining_sv_limit 0 \\\n            -write_vis_data\n        \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "LinX"
        ],
        "tools_url": [
            "https://bio.tools/LinX"
        ],
        "tools_dico": [
            {
                "name": "LinX",
                "uri": "https://bio.tools/LinX",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2978",
                                "term": "Reaction data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "LinX is a Java language-based program designed for fast assignment, evaluation, and validation of mass spectrometric datasets from chemical cross-linking.",
                "homepage": "http://peterslab.org/downloads.php"
            }
        ],
        "inputs": [
            "fragileSites",
            "lineElements",
            "replicationOrigins",
            "viralHosts",
            "knownFusions",
            "driverPanel",
            "pair_id",
            "purpleSV"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/visualization/\", mode: 'copy'",
            "label 'cpu_big'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "SageCaller": {
        "name_process": "SageCaller",
        "string_process": "process SageCaller {\n                                                                                                         \n                                                                       \n                                                                                \n                                                                           \n                                                                                                       \n     \n                                                                                              \n                                                                                            \n                                                                                              \n                                                                                   \n      \n                                                                   \n    label 'cpu_big'\n    label 'mem_48'\n    cache 'lenient'\n\n    input:\n        val runtype\n        tuple val(pair_id), val(N), path(normal_bam), path(normal_bai), val(T), path(tumor_bam), path(tumor_bai)\n        path panelBed\n        path coverageBed\n        path highconfBed\n        path hotspots\n        path refgen\n        path dict\n        path fai\n\n    output:\n        tuple val(pair_id), val(runtype), path(\"${pair_id}_SAGE${runtype}.vcf.gz\")\n    \n    script:\n        if ( runtype == \"germline\" ) {\n            (N, T)=[T, N]\n            (normal_bam, tumor_bam)=[tumor_bam, normal_bam]\n            runtypeCommand = \"  -panel_only \\\n                                -coverage_bed ${coverageBed} \\\n                                -hotspot_min_tumor_qual 50 \\\n                                -panel_min_tumor_qual 75 \\\n                                -hotspot_max_germline_vaf 100 \\\n                                -hotspot_max_germline_rel_raw_base_qual 100 \\\n                                -panel_max_germline_vaf 100 \\\n                                -panel_max_germline_rel_raw_base_qual 100 \\\n                                -mnv_filter_enabled false \"\n\n        } else if ( runtype == \"somatic\" ) {\n            runtypeCommand = \"\"\n        }\n        \"\"\"\n        SAGE \\\n            JVM_MEM_OPTS \"-Xmx${task.memory.toGiga()}g\" \\\n            -tumor ${pair_id}_${T} \\\n            -tumor_bam ${tumor_bam} \\\n            -reference ${pair_id}_${N} \\\n            -reference_bam ${normal_bam} \\\n            -panel_bed ${panelBed} \\\n            -hotspots ${hotspots} \\\n            -high_confidence_bed ${highconfBed} \\\n            -assembly hg${params.hg} \\\n            -ref_genome ${refgen} \\\n            -threads ${task.cpus} \\\n            -out ${pair_id}_SAGE${runtype}.vcf.gz \\\n            ${runtypeCommand}\n        \"\"\"\n}",
        "nb_lignes_process": 63,
        "string_script": "        if ( runtype == \"germline\" ) {\n            (N, T)=[T, N]\n            (normal_bam, tumor_bam)=[tumor_bam, normal_bam]\n            runtypeCommand = \"  -panel_only \\\n                                -coverage_bed ${coverageBed} \\\n                                -hotspot_min_tumor_qual 50 \\\n                                -panel_min_tumor_qual 75 \\\n                                -hotspot_max_germline_vaf 100 \\\n                                -hotspot_max_germline_rel_raw_base_qual 100 \\\n                                -panel_max_germline_vaf 100 \\\n                                -panel_max_germline_rel_raw_base_qual 100 \\\n                                -mnv_filter_enabled false \"\n\n        } else if ( runtype == \"somatic\" ) {\n            runtypeCommand = \"\"\n        }\n        \"\"\"\n        SAGE \\\n            JVM_MEM_OPTS \"-Xmx${task.memory.toGiga()}g\" \\\n            -tumor ${pair_id}_${T} \\\n            -tumor_bam ${tumor_bam} \\\n            -reference ${pair_id}_${N} \\\n            -reference_bam ${normal_bam} \\\n            -panel_bed ${panelBed} \\\n            -hotspots ${hotspots} \\\n            -high_confidence_bed ${highconfBed} \\\n            -assembly hg${params.hg} \\\n            -ref_genome ${refgen} \\\n            -threads ${task.cpus} \\\n            -out ${pair_id}_SAGE${runtype}.vcf.gz \\\n            ${runtypeCommand}\n        \"\"\"",
        "nb_lignes_script": 31,
        "language_script": "bash",
        "tools": [
            "qusage"
        ],
        "tools_url": [
            "https://bio.tools/qusage"
        ],
        "tools_dico": [
            {
                "name": "qusage",
                "uri": "https://bio.tools/qusage",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression profiling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differentially expressed gene identification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3111",
                                "term": "Processed microarray data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1669",
                                "term": "P-value"
                            },
                            {
                                "uri": "http://edamontology.org/data_2884",
                                "term": "Plot"
                            }
                        ]
                    }
                ],
                "description": "Implementation of the QUantitative Set Analysis for Gene Expression, a novel gene set enrichment-type test designed to provide a faster, more accurate, and easier to understand test for gene expression studies. It accounts for inter-gene correlations using the variance inflation factor technique, quantifying the deviation from a null hypothesis with a P value and a probability density function.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/qusage.html"
            }
        ],
        "inputs": [
            "runtype",
            "pair_id",
            "N",
            "T",
            "normal_bam",
            "normal_bai",
            "tumor_bam",
            "tumor_bai",
            "panelBed",
            "coverageBed",
            "highconfBed",
            "hotspots",
            "refgen",
            "dict",
            "fai"
        ],
        "nb_inputs": 15,
        "outputs": [
            "runtype"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_big'",
            "label 'mem_48'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "FilterPON": {
        "name_process": "FilterPON",
        "string_process": "\nprocess FilterPON {\n                                                                 \n    cache 'lenient'\n\n    input:\n        tuple path (pon), path(tbi)\n        tuple val(pair_id), path(sageVCF)\n\n    output:\n        tuple val(pair_id), path(\"${sageVCF.simpleName}_annotated.vcf\")\n\n    script:\n        \"\"\"\n        tabix ${sageVCF}\n        bcftools annotate -a ${pon} -c PON_COUNT,PON_MAX ${sageVCF} -O z -o annotation.vcf\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && PON_MAX>=5 && PON_COUNT >= 5' -s PON -m+ annotation.vcf -O u | \\\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"PANEL\" && PON_MAX>=5 && PON_COUNT >= 2' -s PON -m+ -O u | \\\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && INFO/TIER!=\"PANEL\" && PON_COUNT >= 2' -s PON -m+ -O z -o ${sageVCF.simpleName}_annotated.vcf\n        \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "        \"\"\"\n        tabix ${sageVCF}\n        bcftools annotate -a ${pon} -c PON_COUNT,PON_MAX ${sageVCF} -O z -o annotation.vcf\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && PON_MAX>=5 && PON_COUNT >= 5' -s PON -m+ annotation.vcf -O u | \\\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"PANEL\" && PON_MAX>=5 && PON_COUNT >= 2' -s PON -m+ -O u | \\\n        bcftools filter -e 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && INFO/TIER!=\"PANEL\" && PON_COUNT >= 2' -s PON -m+ -O z -o ${sageVCF.simpleName}_annotated.vcf\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pon",
            "tbi",
            "pair_id",
            "sageVCF"
        ],
        "nb_inputs": 4,
        "outputs": [
            "pair_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "BcfFilter": {
        "name_process": "BcfFilter",
        "string_process": "\nprocess BcfFilter {\n                                                                 \n    label 'cpu_one'\n    label 'small_mem'\n    cache 'lenient'\n\n    input:\n        tuple val(pair_id), val(runtype), path(sageVCF)\n\n    output:\n        tuple val(pair_id), val(runtype), path(\"${sageVCF.simpleName}.pass.vcf.gz\")\n\n    script:\n        \"\"\"\n        bcftools filter \\\n            --include 'FILTER=\\\"PASS\\\"' \\\n            --output-type z \\\n            --output ${sageVCF.simpleName}.pass.vcf.gz \\\n            ${sageVCF} \\\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        bcftools filter \\\n            --include 'FILTER=\\\"PASS\\\"' \\\n            --output-type z \\\n            --output ${sageVCF.simpleName}.pass.vcf.gz \\\n            ${sageVCF} \\\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "runtype",
            "sageVCF"
        ],
        "nb_inputs": 3,
        "outputs": [
            "runtype"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_one'",
            "label 'small_mem'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    },
    "BcfSortGermline": {
        "name_process": "BcfSortGermline",
        "string_process": "\nprocess BcfSortGermline {\n    label 'cpu_one'\n    label 'small_mem'\n\n    input:\n        tuple val(pair_id), val(runtype), path(vcf)\n\n    output:\n        tuple val(pair_id), val(runtype), path(\"${vcf.simpleName}.sort.vcf.gz\")\n\n    script:\n        \"\"\"\n        bcftools view \\\n            --samples ${pair_id}_N,${pair_id}_T \\\n            --output-type z \\\n            --output ${vcf.simpleName}.sort.vcf.gz \\\n            ${vcf}\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        bcftools view \\\n            --samples ${pair_id}_N,${pair_id}_T \\\n            --output-type z \\\n            --output ${vcf.simpleName}.sort.vcf.gz \\\n            ${vcf}\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "runtype",
            "vcf"
        ],
        "nb_inputs": 3,
        "outputs": [
            "runtype"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_one'",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "BcfAnnotateMappability": {
        "name_process": "BcfAnnotateMappability",
        "string_process": "\nprocess BcfAnnotateMappability {\n    label 'cpu_one'\n    label 'small_mem'\n\n    input:\n        tuple val(pair_id), val(runtype), path(vcf)\n        path map\n\n    output:\n        tuple val(pair_id), val(runtype), path(\"${vcf.simpleName}.mappability.annotated.vcf.gz\")\n\n    script:\n        \"\"\"\n        bcftools annotate \\\n            --annotations $params.mappability \\\n            --header-lines $params.mappabilityHdr \\\n            --columns CHROM,FROM,TO,-,MAPPABILITY \\\n            --output-type z \\\n            --output ${vcf.simpleName}.mappability.annotated.vcf.gz \\\n            ${vcf}\n        \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "        \"\"\"\n        bcftools annotate \\\n            --annotations $params.mappability \\\n            --header-lines $params.mappabilityHdr \\\n            --columns CHROM,FROM,TO,-,MAPPABILITY \\\n            --output-type z \\\n            --output ${vcf.simpleName}.mappability.annotated.vcf.gz \\\n            ${vcf}\n        \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "runtype",
            "vcf",
            "map"
        ],
        "nb_inputs": 4,
        "outputs": [
            "runtype"
        ],
        "nb_outputs": 1,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_one'",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "BcfAnnotateGermline": {
        "name_process": "BcfAnnotateGermline",
        "string_process": "\nprocess BcfAnnotateGermline {\n    label 'cpu_one'\n    label 'small_mem'\n\n    input:\n        tuple val(pair_id), val(runtype), path(vcf)\n        path clinvar\n\n    output:\n        tuple val(pair_id), path(\"${vcf.simpleName}.blacklist.variants.vcf.gz\"), emit: blacklistVariants\n\n    when:\n        runtype == 'germline'\n\n    script:\n        \"\"\"\n        tabix -f -p vcf ${vcf}\n        bcftools annotate \\\n            --annotations ${params.clinvar} \\\n            --columns INFO/CLNSIG,INFO/CLNSIGCONF \\\n            --output-type z \\\n            --output ${vcf.simpleName}.clinvar.vcf.gz \\\n            ${vcf}\n        bcftools annotate \\\n            --annotations ${params.knownBlacklistBed} \\\n            --mark-sites BLACKLIST_BED \\\n            --columns CHROM,FROM,TO \\\n            --output-type z \\\n            --output ${vcf.simpleName}.blacklist.regions.vcf.gz \\\n            ${vcf.simpleName}.clinvar.vcf.gz\n        tabix -f -p vcf ${vcf.simpleName}.blacklist.regions.vcf.gz\n        bcftools annotate \\\n            --annotations ${params.knownBlacklistVcf} \\\n            --mark-sites BLACKLIST_VCF \\\n            --output-type z \\\n            --output ${vcf.simpleName}.blacklist.variants.vcf.gz \\\n            ${vcf.simpleName}.blacklist.regions.vcf.gz\n        \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "        \"\"\"\n        tabix -f -p vcf ${vcf}\n        bcftools annotate \\\n            --annotations ${params.clinvar} \\\n            --columns INFO/CLNSIG,INFO/CLNSIGCONF \\\n            --output-type z \\\n            --output ${vcf.simpleName}.clinvar.vcf.gz \\\n            ${vcf}\n        bcftools annotate \\\n            --annotations ${params.knownBlacklistBed} \\\n            --mark-sites BLACKLIST_BED \\\n            --columns CHROM,FROM,TO \\\n            --output-type z \\\n            --output ${vcf.simpleName}.blacklist.regions.vcf.gz \\\n            ${vcf.simpleName}.clinvar.vcf.gz\n        tabix -f -p vcf ${vcf.simpleName}.blacklist.regions.vcf.gz\n        bcftools annotate \\\n            --annotations ${params.knownBlacklistVcf} \\\n            --mark-sites BLACKLIST_VCF \\\n            --output-type z \\\n            --output ${vcf.simpleName}.blacklist.variants.vcf.gz \\\n            ${vcf.simpleName}.blacklist.regions.vcf.gz\n        \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "runtype",
            "vcf",
            "clinvar"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_one'",
            "label 'small_mem'"
        ],
        "when": "runtype == 'germline'",
        "stub": ""
    },
    "BcfAnnotateSomatic": {
        "name_process": "BcfAnnotateSomatic",
        "string_process": "\nprocess BcfAnnotateSomatic {\n    label 'cpu_2x'\n    label 'small_mem'\n\n    input:\n        tuple val(pair_id), val(runtype), path(vcf)\n        path pon\n\n    output:\n        tuple val(pair_id), path(\"${vcf.simpleName}.pon.filter.vcf.gz\"), emit: ponFilter\n\n    when:\n        runtype == 'somatic'\n\n    script:\n        \"\"\"\n        tabix -f -p vcf ${vcf}\n        bcftools annotate \\\n            --annotations ${params.pon} \\\n            --columns PON_COUNT,PON_MAX \\\n            --output-type z \\\n            --output ${vcf.simpleName}.pon.annotated.vcf.gz \\\n            ${vcf}\n        tabix -f -p vcf ${vcf.simpleName}.pon.annotated.vcf.gz\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && PON_MAX>=5 && PON_COUNT >= 10' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type u \\\n            ${vcf.simpleName}.pon.annotated.vcf.gz | \\\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER=\"PANEL\" && PON_MAX>=5 && PON_COUNT >= 6' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type u | \\\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER!=\"HOTSPOT\" && INFO/TIER!=\"PANEL\" && PON_COUNT >= 6' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type z \\\n            --output ${vcf.simpleName}.pon.filter.vcf.gz\n        \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "        \"\"\"\n        tabix -f -p vcf ${vcf}\n        bcftools annotate \\\n            --annotations ${params.pon} \\\n            --columns PON_COUNT,PON_MAX \\\n            --output-type z \\\n            --output ${vcf.simpleName}.pon.annotated.vcf.gz \\\n            ${vcf}\n        tabix -f -p vcf ${vcf.simpleName}.pon.annotated.vcf.gz\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER=\"HOTSPOT\" && PON_MAX>=5 && PON_COUNT >= 10' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type u \\\n            ${vcf.simpleName}.pon.annotated.vcf.gz | \\\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER=\"PANEL\" && PON_MAX>=5 && PON_COUNT >= 6' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type u | \\\n        bcftools filter \\\n            --exclude 'PON_COUNT!=\".\" && INFO/TIER!=\"HOTSPOT\" && INFO/TIER!=\"PANEL\" && PON_COUNT >= 6' \\\n            --soft-filter PON \\\n            --mode + \\\n            --output-type z \\\n            --output ${vcf.simpleName}.pon.filter.vcf.gz\n        \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "pair_id",
            "runtype",
            "vcf",
            "pon"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "label 'cpu_2x'",
            "label 'small_mem'"
        ],
        "when": "runtype == 'somatic'",
        "stub": ""
    },
    "SnpEff": {
        "name_process": "SnpEff",
        "string_process": "\nprocess SnpEff {\n    publishDir \"$params.outdir/${pair_id}/VC\", mode: 'symlink'\n    label 'mem_32'\n    label 'cpu_8x'\n    cache 'lenient'\n\n    input:\n        path snpEffDB\n        tuple val(pair_id), path(ponVCF)\n\n    output:\n        tuple val(pair_id), path(\"${ponVCF.simpleName}.snpEff.vcf\"), emit: vcf\n        path \"snpEff_*\"\n\n    script:\n        \"\"\"\n        snpEff \"-Xmx${task.memory.toGiga()}g\" -dataDir ${params.outdir} hg${params.hg} ${ponVCF} > ${ponVCF.simpleName}.snpEff.vcf\n        \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        snpEff \"-Xmx${task.memory.toGiga()}g\" -dataDir ${params.outdir} hg${params.hg} ${ponVCF} > ${ponVCF.simpleName}.snpEff.vcf\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [
            "snpEffDB",
            "pair_id",
            "ponVCF"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ErasmusMC-Bioinformatics__NextFlow-VC-pipeline",
        "directive": [
            "publishDir \"$params.outdir/${pair_id}/VC\", mode: 'symlink'",
            "label 'mem_32'",
            "label 'cpu_8x'",
            "cache 'lenient'"
        ],
        "when": "",
        "stub": ""
    }
}