{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename ->\n            if (filename.indexOf(\".csv\") > 0) filename\n            else null\n        }\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version &> v_ngi_rnaseq.txt\n    echo $workflow.nextflow.version &> v_nextflow.txt\n    fastqc --version &> v_fastqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version &> v_ngi_rnaseq.txt\n    echo $workflow.nextflow.version &> v_nextflow.txt\n    fastqc --version &> v_fastqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "mpozuelo__illumina_demux",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "parse_samplesheet": {
        "name_process": "parse_samplesheet",
        "string_process": "\nprocess parse_samplesheet {\n  tag \"$samplesheet\"\n  label 'process_low'\n  publishDir \"${cluster_path}/data/03_intermediate/Illumina/${sequencer}/${run}/SampleSheet/\", mode: 'copy',\n  saveAs: { filename ->\n    filename.startsWith(\"samplesheet_demux\") ? filename : null\n  }\n\n  input:\n  path samplesheet from ch_samplesheet\n\n  output:\n  path \"samplesheet_demux*\" into ch_samples_info\n                                                         \n  path (\"*.txt\") into ch_demux_parameters\n\n  script:\n  \"\"\"\n  echo \\$(grep -A 1 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles1.txt\n  echo \\$(grep -A 2 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles2.txt\n  echo \\$(grep -A 3 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles3.txt\n  echo \\$(grep -A 4 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles4.txt\n  grep -A 99999999999 'Data' SampleSheet.csv | grep -v Data > samplesheet_demux_run${run}.csv\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  echo \\$(grep -A 1 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles1.txt\n  echo \\$(grep -A 2 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles2.txt\n  echo \\$(grep -A 3 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles3.txt\n  echo \\$(grep -A 4 'Reads' SampleSheet.csv | tail -n 1 | tr -dc '0-9') > cycles4.txt\n  grep -A 99999999999 'Data' SampleSheet.csv | grep -v Data > samplesheet_demux_run${run}.csv\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_samplesheet"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_samples_info",
            "ch_demux_parameters"
        ],
        "nb_outputs": 2,
        "name_workflow": "mpozuelo__illumina_demux",
        "directive": [
            "tag \"$samplesheet\"",
            "label 'process_low'",
            "publishDir \"${cluster_path}/data/03_intermediate/Illumina/${sequencer}/${run}/SampleSheet/\", mode: 'copy' , saveAs: { filename -> filename.startsWith(\"samplesheet_demux\") ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "demux": {
        "name_process": "demux",
        "string_process": "\nprocess demux {\n  container 'mpozuelo/illuminademux:bcl2fastq'\n  tag \"$run\"\n  label 'process_high'\n  publishDir \"${cluster_path}/data/04_pfastq/Illumina/${sequencer}/${run}/\", mode: 'copy'\n                         \n                                                                \n   \n    \n\n  input:\n  path samplesheet from ch_samplesheet\n  path(cycles) from ch_demux_parameters\n\n  output:\n                                    \n                                    \n  file \"*.fastq.gz\"\n  file \"Reports\"\n  file \"Stats\"\n  file \"*.log\"\n\n  script:\n  info = \"${run}.dmux.log 2>&1\"\n  single_end = params.single_end ? \"single\" : \"paired\"\n  mismatch=params.mismatch\n\n  \"\"\"\n  cycles1=\\$(cat ${cycles[0]})\n  cycles2=\\$(cat ${cycles[1]})\n  cycles3=\\$(cat ${cycles[2]})\n  cycles4=\\$(cat ${cycles[3]})\n\n  if [ single_end==\"single\" ]\n  then\n  bases_mask=\\$(printf \"Y%s,I%s,I%s,Y%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n  let minlength=\\$cycles1-\\$cycles2\n  let short_adapter_read=\\$cycles2-1\n  elif [ single_end==\"paired\" ]\n    then\n    if [ protocol==\"\" ]\n    then\n    bases_mask=\\$(printf \"Y%s,I%s,I%s,Y%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n    let minlength=\\$cycles1-\\$cycles2\n    let short_adapter_read=\\$cycles2-1\n    elif [ protocol==\"mcSCRBseq\" ]\n    then\n    let read1=\\$cycles1-\\$cycles2\n    bases_mask=\\$(printf \"I%sY%s,I%s,N%s,Y%s\" \"\\$cycles2\" \"\\$read1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n    elif [ protocol==\"marseq\" ]\n    then\n    let i2=\\$cycles3-\\$cycles2\n    let read2=\\$cycles3-\\$i2\n    bases_mask=\\$(printf \"Y%s,I%s,I%sY%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$i2\" \"\\$read2\")\n    fi\nfi\n\n\n  bcl2fastq \\\\\n    --runfolder-dir ${runDir} \\\\\n    --output-dir  ./  \\\\\n    --use-bases-mask \\$bases_mask \\\\\n    --create-fastq-for-index-reads \\\\\n    --sample-sheet $samplesheet \\\\\n    --minimum-trimmed-read-length \\$minlength \\\\\n    --mask-short-adapter-read \\$short_adapter_read \\\\\n    --no-lane-splitting \\\\\n    --barcode-mismatches 1 \\\\\n    -r 12 \\\\\n    -p 12 \\\\\n    -w 12 \\\\\n    -l INFO >> $info\n  \"\"\"\n}",
        "nb_lignes_process": 73,
        "string_script": "  info = \"${run}.dmux.log 2>&1\"\n  single_end = params.single_end ? \"single\" : \"paired\"\n  mismatch=params.mismatch\n\n  \"\"\"\n  cycles1=\\$(cat ${cycles[0]})\n  cycles2=\\$(cat ${cycles[1]})\n  cycles3=\\$(cat ${cycles[2]})\n  cycles4=\\$(cat ${cycles[3]})\n\n  if [ single_end==\"single\" ]\n  then\n  bases_mask=\\$(printf \"Y%s,I%s,I%s,Y%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n  let minlength=\\$cycles1-\\$cycles2\n  let short_adapter_read=\\$cycles2-1\n  elif [ single_end==\"paired\" ]\n    then\n    if [ protocol==\"\" ]\n    then\n    bases_mask=\\$(printf \"Y%s,I%s,I%s,Y%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n    let minlength=\\$cycles1-\\$cycles2\n    let short_adapter_read=\\$cycles2-1\n    elif [ protocol==\"mcSCRBseq\" ]\n    then\n    let read1=\\$cycles1-\\$cycles2\n    bases_mask=\\$(printf \"I%sY%s,I%s,N%s,Y%s\" \"\\$cycles2\" \"\\$read1\" \"\\$cycles2\" \"\\$cycles3\" \"\\$cycles4\")\n    elif [ protocol==\"marseq\" ]\n    then\n    let i2=\\$cycles3-\\$cycles2\n    let read2=\\$cycles3-\\$i2\n    bases_mask=\\$(printf \"Y%s,I%s,I%sY%s\" \"\\$cycles1\" \"\\$cycles2\" \"\\$i2\" \"\\$read2\")\n    fi\nfi\n\n\n  bcl2fastq \\\\\n    --runfolder-dir ${runDir} \\\\\n    --output-dir  ./  \\\\\n    --use-bases-mask \\$bases_mask \\\\\n    --create-fastq-for-index-reads \\\\\n    --sample-sheet $samplesheet \\\\\n    --minimum-trimmed-read-length \\$minlength \\\\\n    --mask-short-adapter-read \\$short_adapter_read \\\\\n    --no-lane-splitting \\\\\n    --barcode-mismatches 1 \\\\\n    -r 12 \\\\\n    -p 12 \\\\\n    -w 12 \\\\\n    -l INFO >> $info\n  \"\"\"",
        "nb_lignes_script": 49,
        "language_script": "bash",
        "tools": [
            "INfORM",
            "carlet"
        ],
        "tools_url": [
            "https://bio.tools/inform",
            "https://bio.tools/carlet"
        ],
        "tools_dico": [
            {
                "name": "INfORM",
                "uri": "https://bio.tools/inform",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A novel computational method and its R and web-based implementations, to perform inference of gene network from transcriptome data and prioritization of key genes with central functional and topological role in the network.",
                "homepage": "https://github.com/Greco-Lab/INfORM"
            },
            {
                "name": "carlet",
                "uri": "https://bio.tools/carlet",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phlyogenetic tree construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic tree generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Single-cell tumor phylogeny inference with copy-number constrained mutation losses.\n\nSCARLET (Single-cell Algorithm for Reconstructing Loss-supported Evolution of Tumors) is an algorithm that reconstructs tumor phylogenies from single-cell DNA sequencing data. SCARLET uses a loss-supported model that constrains mutation losses based on observed copy-number data.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'S carlet', 'loss-supported'",
                "homepage": "http://github.com/raphael-group/scarlet"
            }
        ],
        "inputs": [
            "ch_samplesheet",
            "ch_demux_parameters"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mpozuelo__illumina_demux",
        "directive": [
            "container 'mpozuelo/illuminademux:bcl2fastq'",
            "tag \"$run\"",
            "label 'process_high'",
            "publishDir \"${cluster_path}/data/04_pfastq/Illumina/${sequencer}/${run}/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}