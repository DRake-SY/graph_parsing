{
    "unzip_fastqs": {
        "name_process": "unzip_fastqs",
        "string_process": "\nprocess unzip_fastqs {\n\n  tag \"${sample_id}\"\n\n  input:\n    set val(sample_id), file(reads) from read_files\n\n  output:\n    set val(sample_id), file(\"${sample_id}_R1.fastq\"), file(\"${sample_id}_R2.fastq\") into reads_unzipped_ch\n\n  script:\n    \"\"\"\n    gunzip -c ${reads[0]} > ${sample_id}_R1.fastq\n    gunzip -c ${reads[1]} > ${sample_id}_R2.fastq\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    gunzip -c ${reads[0]} > ${sample_id}_R1.fastq\n    gunzip -c ${reads[1]} > ${sample_id}_R2.fastq\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "reads_unzipped_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-bracer",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "assemble": {
        "name_process": "assemble",
        "string_process": " process assemble {\n\n   tag \"${sample_id}\"\n   label \"high_memory\"\n\n   publishDir \"${params.outdir}/\", mode: 'copy'\n\n   input:\n     set val(sample_id), file(read1), file(read2) from reads_unzipped_ch\n\n   output:\n                                \n    file(\"assembled/${sample_id}\") into assembled_ch\n\n   script:\n     \"\"\"\n     bracer assemble --ncores ${task.cpus} --species ${species} ${sample_id} assembled ${read1} ${read2}\n     \"\"\"\n }",
        "nb_lignes_process": 17,
        "string_script": "     \"\"\"\n     bracer assemble --ncores ${task.cpus} --species ${species} ${sample_id} assembled ${read1} ${read2}\n     \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads_unzipped_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "assembled_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-bracer",
        "directive": [
            "tag \"${sample_id}\"",
            "label \"high_memory\"",
            "publishDir \"${params.outdir}/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "summarize": {
        "name_process": "summarize",
        "string_process": "\nprocess summarize {\n\n  tag \"bracer-summarize\"\n\n  publishDir \"${params.outdir}/\", mode: 'copy'\n\n  input:\n    file(assembled_samples) from assembled_ch.collect()\n\n  output:\n    file \"*summary\" into sum_ch\n\n  script:\n    \"\"\"\n    bracer summarize --species ${species} .\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    bracer summarize --species ${species} .\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "assembled_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sum_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-bracer",
        "directive": [
            "tag \"bracer-summarize\"",
            "publishDir \"${params.outdir}/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}