{
    "DOWNLOAD_ASSEMBLY": {
        "name_process": "DOWNLOAD_ASSEMBLY",
        "string_process": "\nprocess DOWNLOAD_ASSEMBLY {\n    tag {cols.Name}\n\n    publishDir \"${outdir}/assembly_fasta\", mode: 'copy', pattern: \"${cols.Name}.fa\"\n\n    input:\n    val cols from assemblyUrlsCsv\n\n    output:\n    set val(\"${cols.Name}\"), val(\"${cols.targetCov}\"), val(\"${cols.ReadPrefix}\"), file(\"${cols.Name}.fa\"), val(\"${cols.extract_amplicon}\"), val(\"${cols.amplicon_region}\") into choiceExtractRegion\n    \n    script:\n    \"\"\"\n    curl -fssL '${cols.RefSeqFTPURL}' | gzip -d > ${cols.Name}.fa\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    curl -fssL '${cols.RefSeqFTPURL}' | gzip -d > ${cols.Name}.fa\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [
            "assemblyUrlsCsv"
        ],
        "nb_inputs": 1,
        "outputs": [
            "choiceExtractRegion"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag {cols.Name}",
            "publishDir \"${outdir}/assembly_fasta\", mode: 'copy', pattern: \"${cols.Name}.fa\""
        ],
        "when": "",
        "stub": ""
    },
    "EXTRACT_REGION": {
        "name_process": "EXTRACT_REGION",
        "string_process": "\nprocess EXTRACT_REGION {\n    tag { name }\n\n    input:\n    set name, coverage, prefix, file(assembly), extract, region from extractRegion\n\n    output:\n    set val(name), val(coverage), val(prefix), file(\"${assembly}\") into simulateReadsRegion\n\n    script:\n\n    \"\"\"\n    samtools faidx ${assembly} ${region} > ${name}.${region}.fa\n    mv ${name}.${region}.fa ${assembly}\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    samtools faidx ${assembly} ${region} > ${name}.${region}.fa\n    mv ${name}.${region}.fa ${assembly}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "extractRegion"
        ],
        "nb_inputs": 1,
        "outputs": [
            "simulateReadsRegion"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag { name }"
        ],
        "when": "",
        "stub": ""
    },
    "GETFIRSTFASTAHEADER": {
        "name_process": "GETFIRSTFASTAHEADER",
        "string_process": "\nprocess GETFIRSTFASTAHEADER {\n    tag { name }\n\n    input:\n    set name, coverage, prefix, file(assembly) from getFirstFastaHeader\n\n    output:\n    set val(name), val(coverage), val(prefix), file(\"${assembly}\"), stdout into simulateReads\n\n    script:\n    \"\"\"\n    grep -m 1 \">\" ${assembly} | awk '{print \\$1}' | tr -d '\\\\n'\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    grep -m 1 \">\" ${assembly} | awk '{print \\$1}' | tr -d '\\\\n'\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "getFirstFastaHeader"
        ],
        "nb_inputs": 1,
        "outputs": [
            "simulateReads"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag { name }"
        ],
        "when": "",
        "stub": ""
    },
    "STAGE_AND_DECOMPRESS_REF_FASTQ": {
        "name_process": "STAGE_AND_DECOMPRESS_REF_FASTQ",
        "string_process": "\nprocess STAGE_AND_DECOMPRESS_REF_FASTQ {\n    tag { name }\n\n    stageInMode 'copy'\n\n    input:\n    set file(forward), file(reverse) from referenceFastq.map{ [ it[1][0], it[1][1] ] }\n\n    output:\n    set file(\"*_1.fastq\"), file (\"*_2.fastq\") into decompressedReferenceFastq\n\n    script:\n    \"\"\"\n    gzip -d *.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    gzip -d *.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "referenceFastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "decompressedReferenceFastq"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag { name }",
            "stageInMode 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "SIMULATE_READS": {
        "name_process": "SIMULATE_READS",
        "string_process": "\nprocess SIMULATE_READS {\n    tag { name }\n\n    cpus 4\n\n    maxForks 10\n\n    input:\n    set name, coverage, prefix, file(assembly), header, length, file(forward), file(reverse) from simulateReads.combine(readLengths).combine(decompressedReferenceFastq)\n\n    output:\n    set name, length, prefix, file(\"${name}.1.fastq\"), file(\"${name}.2.fastq\") into simulatedReads\n\n    script:\n    \"\"\"\n    afg -O ${name} -R ${assembly} -F1 ${forward} -F2 ${reverse} -RL ${length} -URQS true -CMP ${coverage} -TLM 500 -N 1000 -S \\'${header}\\'\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    afg -O ${name} -R ${assembly} -F1 ${forward} -F2 ${reverse} -RL ${length} -URQS true -CMP ${coverage} -TLM 500 -N 1000 -S \\'${header}\\'\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "simulateReads",
            "readLengths",
            "decompressedReferenceFastq"
        ],
        "nb_inputs": 3,
        "outputs": [
            "simulatedReads"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag { name }",
            "cpus 4",
            "maxForks 10"
        ],
        "when": "",
        "stub": ""
    },
    "CLEAN_SIMULATED_FASTQ": {
        "name_process": "CLEAN_SIMULATED_FASTQ",
        "string_process": "\nprocess CLEAN_SIMULATED_FASTQ {\n    tag { name }\n\n    publishDir \"${outdir}/fastq\", mode: 'copy', pattern: \"*_R?_001.fastq.gz\"\n\n    input:\n    set name, length, prefix, file(forward), file(reverse) from simulatedReads\n\n    output:\n    set name, file(\"*_R1_001.fastq.gz\"), file(\"*_R2_001.fastq.gz\") \n\n    script:\n    \"\"\"\n    sed \"s/^@HWI-ST745_0097:7/${fq_header}/g\" ${forward} | sed 's/#0\\\\/1/ 1:N:0:10/g' | sed '/^+HWI/s/.*/+/' | gzip > ${prefix}-${name}_S${length}_L001_R1_001.fastq.gz\n    sed \"s/^@HWI-ST745_0097:7/${fq_header}/g\" ${reverse} | sed 's/#0\\\\/2/ 2:N:0:10/g' | sed '/^+HWI/s/.*/+/' | gzip > ${prefix}-${name}_S${length}_L001_R2_001.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    sed \"s/^@HWI-ST745_0097:7/${fq_header}/g\" ${forward} | sed 's/#0\\\\/1/ 1:N:0:10/g' | sed '/^+HWI/s/.*/+/' | gzip > ${prefix}-${name}_S${length}_L001_R1_001.fastq.gz\n    sed \"s/^@HWI-ST745_0097:7/${fq_header}/g\" ${reverse} | sed 's/#0\\\\/2/ 2:N:0:10/g' | sed '/^+HWI/s/.*/+/' | gzip > ${prefix}-${name}_S${length}_L001_R2_001.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "simulatedReads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "connor-lab__PenGU-testdata-build",
        "directive": [
            "tag { name }",
            "publishDir \"${outdir}/fastq\", mode: 'copy', pattern: \"*_R?_001.fastq.gz\""
        ],
        "when": "",
        "stub": ""
    }
}