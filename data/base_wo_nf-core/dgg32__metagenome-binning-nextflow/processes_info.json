{
    "fastp": {
        "name_process": "fastp",
        "string_process": "\nprocess fastp {\n\n    publishDir params.outdir, mode: 'copy' \n\n    container \"dgg32/fastp\"\n\n    input:\n    tuple sample_id, file(reads) from read_pairs\n\n    output:\n    tuple sample_id, file('*.fastq.gz') into fastp_out_ch\n\n    script:\n    \"\"\"\n    fastp -i ${reads[0]} -I ${reads[1]} \\\n    -o ${sample_id}_trim_R1.fastq.gz -O ${sample_id}_trim_R2.fastq.gz \\\n    --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -g --detect_adapter_for_pe -l 100 -w ${params.threads}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    fastp -i ${reads[0]} -I ${reads[1]} \\\n    -o ${sample_id}_trim_R1.fastq.gz -O ${sample_id}_trim_R2.fastq.gz \\\n    --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -g --detect_adapter_for_pe -l 100 -w ${params.threads}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "read_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastp_out_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "dgg32__metagenome-binning-nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "container \"dgg32/fastp\""
        ],
        "when": "",
        "stub": ""
    },
    "megahit": {
        "name_process": "megahit",
        "string_process": "\nprocess megahit {\n\n    publishDir params.outdir, mode: 'copy' \n\n    container = 'dgg32/megahit'\n\n    input:\n    tuple sample_id, file(reads) from fastp_out_ch\n\n    output:\n    tuple sample_id, path(\"${sample_id}_megahitout\"), file(reads) into megahit_result_ch\n\n    script:\n    \"\"\"\n    megahit -1 ${reads[0]} -2 ${reads[1]} -o ${sample_id}_megahitout -t ${params.threads}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    megahit -1 ${reads[0]} -2 ${reads[1]} -o ${sample_id}_megahitout -t ${params.threads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MEGAHIT"
        ],
        "tools_url": [
            "https://bio.tools/megahit"
        ],
        "tools_dico": [
            {
                "name": "MEGAHIT",
                "uri": "https://bio.tools/megahit",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Single node assembler for large and complex metagenomics NGS reads, such as soil. It makes use of succinct de Bruijn graph to achieve low memory usage, whereas its goal is not to make memory usage as low as possible.",
                "homepage": "https://github.com/voutcn/megahit"
            }
        ],
        "inputs": [
            "fastp_out_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "megahit_result_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "dgg32__metagenome-binning-nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "container = 'dgg32/megahit'"
        ],
        "when": "",
        "stub": ""
    },
    "maxbin": {
        "name_process": "maxbin",
        "string_process": "\nprocess maxbin {\n\n    publishDir params.outdir, mode: 'copy'\n\n    container = 'nanozoo/maxbin2'\n\n    input:\n    tuple sample_id, path(megathitout), file(reads) from megahit_result_ch\n\n    output:\n    tuple sample_id, path(\"${sample_id}_maxbinout\") into maxbin_result_ch\n\n    script:\n    \"\"\"\n    mkdir ${sample_id}_maxbinout\n\n    run_MaxBin.pl -contig ${megathitout}/final.contigs.fa -out ${sample_id}_maxbinout/maxbin  -reads ${reads[0]} -reads2 ${reads[1]} -thread ${params.threads}\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    mkdir ${sample_id}_maxbinout\n\n    run_MaxBin.pl -contig ${megathitout}/final.contigs.fa -out ${sample_id}_maxbinout/maxbin  -reads ${reads[0]} -reads2 ${reads[1]} -thread ${params.threads}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "megahit_result_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "maxbin_result_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "dgg32__metagenome-binning-nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "container = 'nanozoo/maxbin2'"
        ],
        "when": "",
        "stub": ""
    },
    "checkm": {
        "name_process": "checkm",
        "string_process": "\nprocess checkm {\n\n    publishDir params.outdir, mode: 'copy'\n\n    container = 'dgg32/checkm'\n\n    input:\n    tuple sample_id, path(maxbinout) from maxbin_result_ch\n\n    output:\n    tuple sample_id, path('*_checkmout') into checkm_result_ch\n\n\n    script:\n    \"\"\"\n    checkm lineage_wf -t 32 -x fasta $maxbinout ${sample_id}_checkmout\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    checkm lineage_wf -t 32 -x fasta $maxbinout ${sample_id}_checkmout\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "maxbin_result_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "checkm_result_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "dgg32__metagenome-binning-nextflow",
        "directive": [
            "publishDir params.outdir, mode: 'copy'",
            "container = 'dgg32/checkm'"
        ],
        "when": "",
        "stub": ""
    }
}