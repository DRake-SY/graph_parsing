{
    "run_parsnp": {
        "name_process": "run_parsnp",
        "string_process": "\nprocess run_parsnp {\n    publishDir \"${params.parsnp_outdir}\", mode: \"${params.savemode}\"\n    input:\n                                                                           \n    file 'genome_dir/*' from ch_assembly_files.toSortedList()\n    output:\n                         \n                                             \n    file 'parsnp.ggr'into ch_parsnp\n                                       \n\n    \"\"\"\n    parsnp -d genome_dir -p ${params.threads} -o \\$PWD ${params.parsnp}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    parsnp -d genome_dir -p ${params.threads} -o \\$PWD ${params.parsnp}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "publishDir \"${params.parsnp_outdir}\", mode: \"${params.savemode}\""
        ],
        "when": "",
        "stub": ""
    },
    "run_harvesttools": {
        "name_process": "run_harvesttools",
        "string_process": "\nprocess run_harvesttools {\n    publishDir \"${params.out_dir}/harvesttools\", mode: \"${params.savemode}\"\n    echo true\n    input:\n    file parsnp from ch_parsnp\n    output:\n    file multifasta into ch_harvesttools\n    script:\n    \"\"\"\n    harvesttools -i ${parsnp}/parsnp.ggr -M multifasta\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "    \"\"\"\n    harvesttools -i ${parsnp}/parsnp.ggr -M multifasta\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_parsnp"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_harvesttools"
        ],
        "nb_outputs": 1,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "publishDir \"${params.out_dir}/harvesttools\", mode: \"${params.savemode}\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "run_gubbins": {
        "name_process": "run_gubbins",
        "string_process": "\nprocess run_gubbins{\n    publishDir \"${params.out_dir}/gubbins\", mode: \"${params.savemode}\"\n    echo true\n    input:\n    file multifasta from ch_harvesttools\n    output:\n    file 'gubbins.*' into ch_gubbins\n    script:\n    \"\"\"\n    run_gubbins.py --tree_builder ${params.tree_builder} --raxml_model ${params.raxml_model} ${params.other_options} \\\n    --threads ${params.threads} --prefix gubbins multifasta\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    run_gubbins.py --tree_builder ${params.tree_builder} --raxml_model ${params.raxml_model} ${params.other_options} \\\n    --threads ${params.threads} --prefix gubbins multifasta\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_harvesttools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_gubbins"
        ],
        "nb_outputs": 1,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "publishDir \"${params.out_dir}/gubbins\", mode: \"${params.savemode}\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "run_iqtree": {
        "name_process": "run_iqtree",
        "string_process": "\nprocess run_iqtree{\n    publishDir \"${params.out_dir}/iqtree\", mode: \"${params.savemode}\"\n    echo true\n    input:\n    file input from ch_gubbins.flatten()\n    output:\n    file '.*' into ch_iqtree\n    script:\n                                         \n    if( \"$input\" == 'gubbins.filtered_polymorphic_sites.phylip')\n    \"\"\"\n    iqtree -s $input -m ${params.m} -bb ${params.bb} -nt ${params.nt}\n    \"\"\"\n    else\n    \"\"\"\n    echo \"find a better solution to select the correct input file! and output in correct dir!\"\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    if( \"$input\" == 'gubbins.filtered_polymorphic_sites.phylip')\n    \"\"\"\n    iqtree -s $input -m ${params.m} -bb ${params.bb} -nt ${params.nt}\n    \"\"\"\n    else\n    \"\"\"\n    echo \"find a better solution to select the correct input file! and output in correct dir!\"\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_gubbins"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_iqtree"
        ],
        "nb_outputs": 1,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "publishDir \"${params.out_dir}/iqtree\", mode: \"${params.savemode}\"",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testf1": {
        "name_process": "testf1",
        "string_process": "\nprocess testf1 {\n    echo true\n    input:\n    file genome_dir from ch_assembly_files.toSortedList()\n    script:\n    \"\"\"\n    echo $genome_dir\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    echo $genome_dir\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testf2": {
        "name_process": "testf2",
        "string_process": "\nprocess testf2 {\n    echo true\n    input:\n    file genome_dir from ch_assembly_files\n    script:\n    \"\"\"\n    echo $genome_dir\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    echo $genome_dir\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_files"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testd1": {
        "name_process": "testd1",
        "string_process": "\nprocess testd1 {\n    echo true\n    script:\n    \"\"\"\n    echo \\$PWD\n    \"\"\"\n}",
        "nb_lignes_process": 6,
        "string_script": "    \"\"\"\n    echo \\$PWD\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testd2": {
        "name_process": "testd2",
        "string_process": "\nprocess testd2 {\n    echo true\n    input:\n    file dir_path from ch_assembly_dir\n    script:\n    \"\"\"\n    echo dir_path\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    echo dir_path\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testd2b": {
        "name_process": "testd2b",
        "string_process": "\nprocess testd2b {\n    echo true\n    input:\n    file dir_path from ch_assembly_dir\n    script:\n    \"\"\"\n    ls dir_path\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    ls dir_path\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testd3": {
        "name_process": "testd3",
        "string_process": "\nprocess testd3 {\n    echo true\n    input:\n    file dir_path from ch_assembly_dir\n    script:\n    \"\"\"\n    echo $dir_path\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    echo $dir_path\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "testdb": {
        "name_process": "testdb",
        "string_process": "\nprocess testdb {\n    echo true\n    input:\n    file dir_path from ch_assembly_dir\n    script:\n    \"\"\"\n    ls $dir_path\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    ls $dir_path\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_assembly_dir"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "test": {
        "name_process": "test",
        "string_process": "\nprocess test {\n    echo true\n    input:\n    file path_file from ch_parsnp\n    script:\n    \"\"\"\n    ls ${path_file}/parsnp.ggr\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "    \"\"\"\n    ls ${path_file}/parsnp.ggr\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_parsnp"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "evezeyl__nextflow_pipelines",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    }
}