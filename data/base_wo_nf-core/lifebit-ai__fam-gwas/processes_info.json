{
    "vcf2plink": {
        "name_process": "vcf2plink",
        "string_process": "\nprocess vcf2plink {\n    publishDir \"${params.outdir}/vcf2plink\", mode: 'copy'\n\n    input:\n    file vcf from vcf\n    file fam from data\n\n    output:\n    set file('*.bed'), file('*.bim'), file('*.fam') into plink\n\n    script:\n    \"\"\"\n    sed '1d' $fam > tmpfile; mv tmpfile $fam\n    plink --vcf $vcf\n    rm plink.fam\n    mv $fam plink.fam\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    sed '1d' $fam > tmpfile; mv tmpfile $fam\n    plink --vcf $vcf\n    rm plink.fam\n    mv $fam plink.fam\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "vcf",
            "data"
        ],
        "nb_inputs": 2,
        "outputs": [
            "plink"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__fam-gwas",
        "directive": [
            "publishDir \"${params.outdir}/vcf2plink\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "association": {
        "name_process": "association",
        "string_process": "\nprocess association {\n    publishDir \"${params.outdir}/associations\", mode: 'copy'\n\n    input:\n    set file(bed), file(bim), file(fam) from plink\n\n    output:\n    file('*') into asssociation\n\n    script:\n    \"\"\"\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --tdt\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --tdt poo\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --dfam\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --tdt\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --tdt poo\n    plink --bfile plink --mind $params.mind --geno $params.geno --maf $params.maf --hwe $params.hwe --me $params.me 0.1 --ci $params.ci --dfam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "plink"
        ],
        "nb_inputs": 1,
        "outputs": [
            "asssociation"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__fam-gwas",
        "directive": [
            "publishDir \"${params.outdir}/associations\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "plots": {
        "name_process": "plots",
        "string_process": "\nprocess plots {\n    publishDir \"${params.outdir}/plots\", mode: 'copy'\n\n    input:\n    file results from asssociation\n\n    output:\n    set file(\"QQdfam.png\"), file(\"QQpoo.png\"), file(\"QQtdt.png\"), file(\"tdt.png\") into plots\n\n    script:\n    \"\"\"\n    plot.R\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    plot.R\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "asssociation"
        ],
        "nb_inputs": 1,
        "outputs": [
            "plots"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__fam-gwas",
        "directive": [
            "publishDir \"${params.outdir}/plots\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "visualisations": {
        "name_process": "visualisations",
        "string_process": "\nprocess visualisations {\n    publishDir \"${params.outdir}/Visualisations\", mode: 'copy'\n\n    container 'lifebitai/vizjson:latest'\n\n    input:\n    set file(qq_dfam), file(qq_poo), file(qq_tdt), file(tdt) from plots\n\n    output:\n    file '.report.json' into viz\n\n    script:\n    \"\"\"\n    for image in \\$(ls *png); do\n        prefix=\"\\${image%.*}\"\n        if [[ \\$prefix == \"QQdfam\" ]]; then\n            title=\"QQ Plot From The Sib-TDT Test To Show Family-based Disease Traits\"\n        elif [ \\$prefix == \"QQpoo\" ]; then\n            title=\"QQ Plot For The Parent of Orgin Analysis\"\n        elif [ \\$prefix == \"QQtdt\" ]; then\n            title=\"QQ Plot From The Transmission Disequilibrium Test To Show Family-based Associations\"\n        elif [ \\$prefix == \"tdt\" ]; then\n            title=\"Manhattan Plot From The Transmission Disequilibrium Test To Show Family-based Associations\"\n        fi\n        img2json.py \"${params.outdir}/plots/\\$image\" \"\\$title\" \\${prefix}.json\n    done\n    \n    #table=\\$(ls *.txt)\n    #prefix=\\${table%.*}\n    #tsv2csv.py < \\${prefix}.txt > \\${prefix}.csv\n    #csv2json.py \\${prefix}.csv \"Combined Results\" 'results-combined.json'\n    \n    combine_reports.py .\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    for image in \\$(ls *png); do\n        prefix=\"\\${image%.*}\"\n        if [[ \\$prefix == \"QQdfam\" ]]; then\n            title=\"QQ Plot From The Sib-TDT Test To Show Family-based Disease Traits\"\n        elif [ \\$prefix == \"QQpoo\" ]; then\n            title=\"QQ Plot For The Parent of Orgin Analysis\"\n        elif [ \\$prefix == \"QQtdt\" ]; then\n            title=\"QQ Plot From The Transmission Disequilibrium Test To Show Family-based Associations\"\n        elif [ \\$prefix == \"tdt\" ]; then\n            title=\"Manhattan Plot From The Transmission Disequilibrium Test To Show Family-based Associations\"\n        fi\n        img2json.py \"${params.outdir}/plots/\\$image\" \"\\$title\" \\${prefix}.json\n    done\n    \n    #table=\\$(ls *.txt)\n    #prefix=\\${table%.*}\n    #tsv2csv.py < \\${prefix}.txt > \\${prefix}.csv\n    #csv2json.py \\${prefix}.csv \"Combined Results\" 'results-combined.json'\n    \n    combine_reports.py .\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "plots"
        ],
        "nb_inputs": 1,
        "outputs": [
            "viz"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__fam-gwas",
        "directive": [
            "publishDir \"${params.outdir}/Visualisations\", mode: 'copy'",
            "container 'lifebitai/vizjson:latest'"
        ],
        "when": "",
        "stub": ""
    }
}