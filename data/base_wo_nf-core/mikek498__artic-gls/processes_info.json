{
    "collateSamples": {
        "name_process": "collateSamples",
        "string_process": "process collateSamples {\n    tag { sampleName }\n\n    input:\n    tuple(sampleName, path(bam), path(fasta))\n\n    output:\n    path(\"${sampleName}\")\n\n    script:\n    \"\"\"\n    mkdir ${sampleName}\n    mv ${bam} ${fasta} ${sampleName}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    mkdir ${sampleName}\n    mv ${bam} ${fasta} ${sampleName}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam",
            "fasta",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag { sampleName }"
        ],
        "when": "",
        "stub": ""
    },
    "uploadToCLIMB": {
        "name_process": "uploadToCLIMB",
        "string_process": "\nprocess uploadToCLIMB {\n    tag { params.runPrefix }\n\n    input:\n    tuple(path(sshkey), path(\"${params.runPrefix}/*\"))\n\n    output:\n\n    script:\n    \"\"\"\n    echo \"rsync -Lav -e \"ssh -i ${sshkey} -l ${params.CLIMBUser}\" ${params.runPrefix} ${params.CLIMBHostname}:upload/\"\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    echo \"rsync -Lav -e \"ssh -i ${sshkey} -l ${params.CLIMBUser}\" ${params.runPrefix} ${params.CLIMBHostname}:upload/\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sshkey"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag { params.runPrefix }"
        ],
        "when": "",
        "stub": ""
    },
    "readTrimming": {
        "name_process": "readTrimming",
        "string_process": "process readTrimming {\n       \n                                                                                       \n                                                            \n                                                                                            \n      \n    cpus 16\n    memory '60 GB'\n\n\n\n\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: '*_val_{1,2}.fq.gz', mode: 'copy'\n\n   \n    input:\n    tuple(sampleName, path(forward), path(reverse))\n\n    output:\n    tuple(sampleName, path(\"*_val_1.fq.gz\"), path(\"*_val_2.fq.gz\")) optional true\n\n    script:\n    \"\"\"\n    if [[ \\$(zcat ${forward} | head -n4 | wc -l) -eq 0 ]]; then\n      exit 0\n    else\n      trim_galore --paired $forward $reverse\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    if [[ \\$(zcat ${forward} | head -n4 | wc -l) -eq 0 ]]; then\n      exit 0\n    else\n      trim_galore --paired $forward $reverse\n    fi\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "forward",
            "reverse",
            "sampleName"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "cpus 16",
            "memory '60 GB'",
            "tag { sampleName }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: '*_val_{1,2}.fq.gz', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "readMapping": {
        "name_process": "readMapping",
        "string_process": "\nprocess readMapping {\n    cpus 8\n    memory '24 GB'\n       \n                                                                           \n                                                                                                          \n             \n              \n      \n\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.sorted.bam\", mode: 'copy'\n\n    input:\n        tuple(path(schemeRepo), sampleName, path(forward), path(reverse))\n\n    output:\n        tuple(sampleName, path(\"ref.fa\"), path(\"${sampleName}.sorted.bam\"))\n\n    script:\n        \"\"\"\n        ln -s ${schemeRepo}/${params.schemeDir}/${params.scheme}/${params.schemeVersion}/*.reference.fasta ref.fa\n        bwa index ref.fa\n        bwa mem -t ${task.cpus} ref.fa ${forward} ${reverse} | samtools view -bS | \\\n        samtools sort -o ${sampleName}.sorted.bam\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        ln -s ${schemeRepo}/${params.schemeDir}/${params.scheme}/${params.schemeVersion}/*.reference.fasta ref.fa\n        bwa index ref.fa\n        bwa mem -t ${task.cpus} ref.fa ${forward} ${reverse} | samtools view -bS | \\\n        samtools sort -o ${sampleName}.sorted.bam\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "schemeRepo",
            "forward",
            "reverse"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "cpus 8",
            "memory '24 GB'",
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.sorted.bam\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeIvarBedfile": {
        "name_process": "makeIvarBedfile",
        "string_process": "\nprocess makeIvarBedfile {\n    cpus 16\n    memory '60 GB'\n    tag { schemeRepo }\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"ivar.bed\", mode: 'copy'\n\n    input:\n    file(schemeRepo)\n\n    output:\n    file(\"ivar.bed\")\n\n    script:\n    \"\"\"\n    #!/usr/bin/env python3\n  \n    import csv\n\n    bedrows = []\n    with open(\"${schemeRepo}/${params.schemeDir}/${params.scheme}/${params.schemeVersion}/nCoV-2019.scheme.bed\", newline='') as bedfile:\n        reader = csv.reader(bedfile, delimiter='\\t')\n        for row in reader:\n            row[4] = '60'\n            if row[3].endswith('LEFT'):\n                 row.append('+')\n            else: \n                row.append('-')\n            bedrows.append(row)\n\n    with open('ivar.bed', 'w', newline='') as bedfile:\n        writer = csv.writer(bedfile, delimiter='\\t')\n        for row in bedrows:\n            writer.writerow(row)\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    #!/usr/bin/env python3\n  \n    import csv\n\n    bedrows = []\n    with open(\"${schemeRepo}/${params.schemeDir}/${params.scheme}/${params.schemeVersion}/nCoV-2019.scheme.bed\", newline='') as bedfile:\n        reader = csv.reader(bedfile, delimiter='\\t')\n        for row in reader:\n            row[4] = '60'\n            if row[3].endswith('LEFT'):\n                 row.append('+')\n            else: \n                row.append('-')\n            bedrows.append(row)\n\n    with open('ivar.bed', 'w', newline='') as bedfile:\n        writer = csv.writer(bedfile, delimiter='\\t')\n        for row in bedrows:\n            writer.writerow(row)\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "python3",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "schemeRepo"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "cpus 16",
            "memory '60 GB'",
            "tag { schemeRepo }",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"ivar.bed\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "trimPrimerSequences": {
        "name_process": "trimPrimerSequences",
        "string_process": "\nprocess trimPrimerSequences {\n    cpus 16\n    memory '60 GB'\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'\n\n    input:\n        tuple(path(bedfile), sampleName, path(ref), path(bam))\n\n    output:\n        tuple(sampleName, path(\"${sampleName}.mapped.primertrimmed.sorted.bam\"))\n\n    script:\n    if (params.allowNoprimer){\n        ivarCmd = \"ivar trim -e\"\n    } else {\n        ivarCmd = \"ivar trim\"\n    }\n        \"\"\"\n        samtools view -F4 -o ivar.bam ${bam}\n        samtools index ivar.bam\n        ${ivarCmd} -i ivar.bam -b ${bedfile} ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n        samtools sort -o ${sampleName}.mapped.primertrimmed.sorted.bam ivar.out.bam\n        \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    if (params.allowNoprimer){\n        ivarCmd = \"ivar trim -e\"\n    } else {\n        ivarCmd = \"ivar trim\"\n    }\n        \"\"\"\n        samtools view -F4 -o ivar.bam ${bam}\n        samtools index ivar.bam\n        ${ivarCmd} -i ivar.bam -b ${bedfile} ${params.illuminaKeepLen} -q ${params.illuminaQualThreshold} -p ivar.out\n        samtools sort -o ${sampleName}.mapped.primertrimmed.sorted.bam ivar.out.bam\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bedfile",
            "ref",
            "bam"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "cpus 16",
            "memory '60 GB'",
            "tag { sampleName }",
            "publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeConsensus": {
        "name_process": "makeConsensus",
        "string_process": "\nprocess makeConsensus {\n    cpus 16\n    memory '60 GB'\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.primertrimmed.consensus.fa\", mode: 'copy'\n\n    input:\n        tuple(sampleName, path(bam))\n\n    output:\n        tuple(sampleName, path(\"${sampleName}.primertrimmed.consensus.fa\"))\n\n    script:\n        \"\"\"\n        samtools mpileup -A -d ${params.mpileupDepth} -Q0 ${bam} | \\\n        ivar consensus -t ${params.ivarFreqThreshold} -m ${params.ivarMinDepth} \\\n        -n N -p ${sampleName}.primertrimmed.consensus\n        \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "        \"\"\"\n        samtools mpileup -A -d ${params.mpileupDepth} -Q0 ${bam} | \\\n        ivar consensus -t ${params.ivarFreqThreshold} -m ${params.ivarMinDepth} \\\n        -n N -p ${sampleName}.primertrimmed.consensus\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "AIVAR"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/AIVAR"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "AIVAR",
                "uri": "https://bio.tools/AIVAR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Virulence prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3225",
                                    "term": "Variant classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3461",
                                    "term": "Pathogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Assessing concordance among human, in silico predictions and functional assays on genetic variant classification.",
                "homepage": "https://github.com/TopGene/AIvar"
            }
        ],
        "inputs": [
            "bam",
            "sampleName"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "cpus 16",
            "memory '60 GB'",
            "tag { sampleName }",
            "publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.primertrimmed.consensus.fa\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "articDownloadScheme": {
        "name_process": "articDownloadScheme",
        "string_process": "\nprocess articDownloadScheme{\n    tag params.schemeRepoURL\n\n    label 'internet'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"scheme\", mode: \"copy\"\n\n    output:\n    file(\"scheme\")\n\n    script:\n    \"\"\"\n    git clone ${params.schemeRepoURL} scheme\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    git clone ${params.schemeRepoURL} scheme\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag params.schemeRepoURL",
            "label 'internet'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"scheme\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articGather": {
        "name_process": "articGather",
        "string_process": "\nprocess articGather {\n    tag params.runPrefix\n\n    label 'largemem'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_fastq_pass.fastq\", mode: \"copy\"\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_sequencing_summary.txt\", mode: \"copy\"\n\n    input:\n    file(runDirectory)\n\n    output:\n    tuple file(\"${params.runPrefix}_fastq_pass.fastq\"), file(\"${params.runPrefix}_sequencing_summary.txt\"), emit: gathered\n    path \"${params.runPrefix}_fastq_pass.fastq\", emit: fastq\n\n    script:\n    if ( params.barcode ) \n        \"\"\"\n        artic gather \\\n        --min-length ${params.min_length} \\\n        --max-length ${params.max_length} \\\n        --prefix ${params.runPrefix} \\\n        --directory ${runDirectory}\n\n        cat ${params.runPrefix}_barcode*.fastq ${params.runPrefix}_unclassified.fastq > ${params.runPrefix}_fastq_pass.fastq\n        \"\"\"\n    else\n        \"\"\"\n        artic gather \\\n        --min-length ${params.min_length} \\\n        --max-length ${params.max_length} \\\n        --prefix ${params.runPrefix} \\\n        --directory ${runDirectory}\n        \"\"\"\n\n \n}",
        "nb_lignes_process": 36,
        "string_script": "    if ( params.barcode ) \n        \"\"\"\n        artic gather \\\n        --min-length ${params.min_length} \\\n        --max-length ${params.max_length} \\\n        --prefix ${params.runPrefix} \\\n        --directory ${runDirectory}\n\n        cat ${params.runPrefix}_barcode*.fastq ${params.runPrefix}_unclassified.fastq > ${params.runPrefix}_fastq_pass.fastq\n        \"\"\"\n    else\n        \"\"\"\n        artic gather \\\n        --min-length ${params.min_length} \\\n        --max-length ${params.max_length} \\\n        --prefix ${params.runPrefix} \\\n        --directory ${runDirectory}\n        \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "runDirectory"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag params.runPrefix",
            "label 'largemem'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_fastq_pass.fastq\", mode: \"copy\"",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_sequencing_summary.txt\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articDemultiplex": {
        "name_process": "articDemultiplex",
        "string_process": "\nprocess articDemultiplex {\n    tag params.runPrefix\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_fastq_pass-NB*.fastq\", mode: \"copy\"\n\n    input:\n    tuple file(fastqPass), file(sequencingSummary)\n\n    output:\n    file \"${params.runPrefix}_fastq_pass-NB*.fastq\"\n\n    script:\n    \"\"\"\n    artic demultiplex --threads ${task.cpus} ${fastqPass}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    artic demultiplex --threads ${task.cpus} ${fastqPass}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "fastqPass",
            "sequencingSummary"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag params.runPrefix",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${params.runPrefix}_fastq_pass-NB*.fastq\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "nanopolishIndex": {
        "name_process": "nanopolishIndex",
        "string_process": "\nprocess nanopolishIndex {\n   tag params.runPrefix\n\n   label 'largemem'\n\n   cpus 1\n\n   publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${fastqPass}.index*\", mode: \"copy\"\n\n   input:\n   tuple file(fastqPass), file(sequencingSummary), file(runDirectory)\n\n   output:\n   file \"${fastqPass}.index*\"\n\n   script:\n   \"\"\"\n   ln -s ${runDirectory}/fast5_pass .\n   nanopolish index -s ${sequencingSummary} -d fast5_pass ${fastqPass}\n   \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "   \"\"\"\n   ln -s ${runDirectory}/fast5_pass .\n   nanopolish index -s ${sequencingSummary} -d fast5_pass ${fastqPass}\n   \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "nanopolish"
        ],
        "tools_url": [
            "https://bio.tools/nanopolish"
        ],
        "tools_dico": [
            {
                "name": "nanopolish",
                "uri": "https://bio.tools/nanopolish",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            },
                            {
                                "uri": "http://edamontology.org/data_0849",
                                "term": "Sequence record"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0867",
                                "term": "Sequence alignment report"
                            }
                        ]
                    }
                ],
                "description": "A package for detecting cytosine methylations and genetic variations from nanopore MinION sequencing data.",
                "homepage": "https://github.com/jts/nanopolish"
            }
        ],
        "inputs": [
            "fastqPass",
            "sequencingSummary",
            "runDirectory"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag params.runPrefix",
            "label 'largemem'",
            "cpus 1",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${fastqPass}.index*\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "articMinIONNanopolish": {
        "name_process": "articMinIONNanopolish",
        "string_process": "\nprocess articMinIONNanopolish {\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.*\", mode: \"copy\"\n    publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.consensus.fasta\", mode: 'copy'\n\n    input:\n    tuple file(\"nanopolish/*\"), file(bcFastqPass), file(\"nanopolish/*\"), file(schemeRepo), file(runDirectory)\n\n    output:\n    file(\"${sampleName}.*\")\n    tuple sampleName, file(\"${sampleName}.primertrimmed.sorted.bam\"), emit: sorted_bam\n    tuple sampleName, file(\"${sampleName}.consensus.fasta\"), emit: consensus_fasta\n\n    script:\n    if ( bcFastqPass =~ /.*NB\\d{2}.fastq$/ ) {\n        sampleName = params.runPrefix + \"-\" + ( bcFastqPass =~ /.*(NB\\d{2}).fastq$/ )[0][1]\n    } else {\n        sampleName = params.runPrefix\n    }\n\n    if ( params.normalise )\n        if ( params.minimap )\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .                       \n\n            artic minion --minimap \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else \n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .            \n \n            artic minion \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n    else\n        if ( params.minimap )\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .\n \n            artic minion --minimap \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .\n\n            artic minion --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n}",
        "nb_lignes_process": 74,
        "string_script": "    if ( bcFastqPass =~ /.*NB\\d{2}.fastq$/ ) {\n        sampleName = params.runPrefix + \"-\" + ( bcFastqPass =~ /.*(NB\\d{2}).fastq$/ )[0][1]\n    } else {\n        sampleName = params.runPrefix\n    }\n\n    if ( params.normalise )\n        if ( params.minimap )\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .                       \n\n            artic minion --minimap \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else \n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .            \n \n            artic minion \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n    else\n        if ( params.minimap )\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .\n \n            artic minion --minimap \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            ln -s ${runDirectory}/fast5_pass .\n\n            artic minion --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            --nanopolish-read-file nanopolish/${params.runPrefix}_fastq_pass.fastq \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"",
        "nb_lignes_script": 56,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "bcFastqPass",
            "schemeRepo",
            "runDirectory"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.*\", mode: \"copy\"",
            "publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.consensus.fasta\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "articMinIONMedaka": {
        "name_process": "articMinIONMedaka",
        "string_process": "\nprocess articMinIONMedaka {\n    tag { sampleName }\n\n    label 'largecpu'\n\n    publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.*\", mode: \"copy\"\n    publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.consensus.fasta\", mode: 'copy'\n\n    input:\n    tuple file(bcFastqPass), file(schemeRepo), file(runDirectory)\n\n    output:\n    file(\"${sampleName}.*\")\n    tuple sampleName, file(\"${sampleName}.primertrimmed.sorted.bam\"), emit: sorted_bam\n    tuple sampleName, file(\"${sampleName}.consensus.fasta\"), emit: consensus_fasta\n    \n    script:\n    if ( bcFastqPass =~ /.*NB\\d{2}.fastq$/ ) {\n        sampleName = params.runPrefix + \"-\" + ( bcFastqPass =~ /.*(NB\\d{2}).fastq$/ )[0][1]\n    } else {\n        sampleName = params.runPrefix\n    }\n\n    if ( params.normalise )\n        if ( params.minimap )\n            \"\"\"\n            artic minion --medaka \\\n            --minimap \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            artic minion --medaka \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n    else\n        if ( params.minimap )\n            \"\"\"\n            artic minion --medaka \\\n            --minimap \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            artic minion --medaka \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n}",
        "nb_lignes_process": 65,
        "string_script": "    if ( bcFastqPass =~ /.*NB\\d{2}.fastq$/ ) {\n        sampleName = params.runPrefix + \"-\" + ( bcFastqPass =~ /.*(NB\\d{2}).fastq$/ )[0][1]\n    } else {\n        sampleName = params.runPrefix\n    }\n\n    if ( params.normalise )\n        if ( params.minimap )\n            \"\"\"\n            artic minion --medaka \\\n            --minimap \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            artic minion --medaka \\\n            --normalise ${params.normalise} \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n    else\n        if ( params.minimap )\n            \"\"\"\n            artic minion --medaka \\\n            --minimap \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"\n        else\n            \"\"\"\n            artic minion --medaka \\\n            --threads ${task.cpus} \\\n            --scheme-directory ${schemeRepo}/${params.schemeDir} \\\n            --read-file ${bcFastqPass} \\\n            ${params.scheme}/${params.schemeVersion} \\\n            ${sampleName}\n            \"\"\"",
        "nb_lignes_script": 47,
        "language_script": "bash",
        "tools": [
            "ARTIC"
        ],
        "tools_url": [
            "https://bio.tools/artic"
        ],
        "tools_dico": [
            {
                "name": "ARTIC",
                "uri": "https://bio.tools/artic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "A bioinformatics pipeline for working with virus sequencing data sequenced with nanopore",
                "homepage": "https://github.com/artic-network/fieldbioinformatics"
            }
        ],
        "inputs": [
            "bcFastqPass",
            "schemeRepo",
            "runDirectory"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag { sampleName }",
            "label 'largecpu'",
            "publishDir \"${params.outdir}/${task.process.replaceAll(\":\",\"_\")}\", pattern: \"${sampleName}.*\", mode: \"copy\"",
            "publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.consensus.fasta\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "articRemoveUnmappedReads": {
        "name_process": "articRemoveUnmappedReads",
        "string_process": "\nprocess articRemoveUnmappedReads {\n    tag { sampleName }\n\n    publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'\n\n    cpus 1\n\n    input:\n    tuple(sampleName, path(bamfile))\n\n    output:\n    tuple( sampleName, file(\"${sampleName}.mapped.primertrimmed.sorted.bam\"))\n\n    script:\n    \"\"\"\n    samtools view -F4 -o ${sampleName}.mapped.primertrimmed.sorted.bam ${bamfile} \n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    samtools view -F4 -o ${sampleName}.mapped.primertrimmed.sorted.bam ${bamfile} \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bamfile",
            "sampleName"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sampleName"
        ],
        "nb_outputs": 1,
        "name_workflow": "mikek498__artic-gls",
        "directive": [
            "tag { sampleName }",
            "publishDir \"${params.outdir}/climb_upload/${params.runPrefix}/${sampleName}\", pattern: \"${sampleName}.mapped.primertrimmed.sorted.bam\", mode: 'copy'",
            "cpus 1"
        ],
        "when": "",
        "stub": ""
    }
}