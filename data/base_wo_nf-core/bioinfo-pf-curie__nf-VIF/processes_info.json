{
    "makeBowtie2Index": {
        "name_process": "makeBowtie2Index",
        "string_process": " process makeBowtie2Index {\n     tag \"$ref_bwt2_base\"\n     publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir },\n              saveAs: { params.saveReference ? it : null }, mode: 'copy'\n       \n     input:\n     file fasta from reference_fasta_for_index\n\n     output:\n     file \"bowtie2_index\" into bwt2_index_end2end\n     file \"bowtie2_index\" into bwt2_index_trim\n\n     script:\n     ref_bwt2_base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n     \"\"\"\n     mkdir bowtie2_index\n     bowtie2-build ${fasta} bowtie2_index/${ref_bwt2_base}\n     \"\"\"\n  }",
        "nb_lignes_process": 17,
        "string_script": "     ref_bwt2_base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n     \"\"\"\n     mkdir bowtie2_index\n     bowtie2-build ${fasta} bowtie2_index/${ref_bwt2_base}\n     \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reference_fasta_for_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwt2_index_end2end",
            "bwt2_index_trim"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$ref_bwt2_base\"",
            "publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeBowtie2IndexHPV": {
        "name_process": "makeBowtie2IndexHPV",
        "string_process": " process makeBowtie2IndexHPV {\n     publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir },\n              saveAs: { params.saveReference ? it : null }, mode: 'copy'\n   \n     input:\n     file fasta from hpv_fasta_for_index\n\n     output:\n     file \"bowtie2_index_hpv\" into bwt2_index_hpv\n     file \"bowtie2_index_hpv_split\" into bwt2_index_hpv_split\n\n     script:\n     hpv_bwt2_base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n     \"\"\"\n     mkdir bowtie2_index_hpv\n     bowtie2-build ${fasta} bowtie2_index_hpv/${hpv_bwt2_base}\n   \n     mkdir fasta_split && cd fasta_split\n     cat ../$fasta | awk '{ if (substr(\\$0, 1, 1)==\">\") {filename=(substr(\\$0,2) \".fa\")} print \\$0 > filename }'\n     cd .. && ls fasta_split/* > listoffasta.txt\n   \n     mkdir bowtie2_index_hpv_split\n     while read ff; do\n       base=\"\\$(basename \\\"\\${ff}\\\" | sed -e 's/.fa//')\"\n       bowtie2-build \"\\${ff}\" bowtie2_index_hpv_split/\"\\${base}\"\n     done < listoffasta.txt\n     \"\"\"\n  }",
        "nb_lignes_process": 26,
        "string_script": "     hpv_bwt2_base = fasta.toString() - ~/(\\.fa)?(\\.fasta)?(\\.fas)?$/\n     \"\"\"\n     mkdir bowtie2_index_hpv\n     bowtie2-build ${fasta} bowtie2_index_hpv/${hpv_bwt2_base}\n   \n     mkdir fasta_split && cd fasta_split\n     cat ../$fasta | awk '{ if (substr(\\$0, 1, 1)==\">\") {filename=(substr(\\$0,2) \".fa\")} print \\$0 > filename }'\n     cd .. && ls fasta_split/* > listoffasta.txt\n   \n     mkdir bowtie2_index_hpv_split\n     while read ff; do\n       base=\"\\$(basename \\\"\\${ff}\\\" | sed -e 's/.fa//')\"\n       bowtie2-build \"\\${ff}\" bowtie2_index_hpv_split/\"\\${base}\"\n     done < listoffasta.txt\n     \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hpv_fasta_for_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwt2_index_hpv",
            "bwt2_index_hpv_split"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeBowtie2IndexCtrl": {
        "name_process": "makeBowtie2IndexCtrl",
        "string_process": "\nprocess makeBowtie2IndexCtrl {\n  publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir },\n            saveAs: { params.saveReference ? it : null }, mode: 'copy'\n\n  input:\n  file fasta from ch_fasta_ctrl\n\n  output:\n  file \"bowtie2_index_ctrl\" into bwt2_index_ctrl\n\n  script:\n  \"\"\"\n  mkdir bowtie2_index_ctrl\n  bowtie2-build ${fasta} bowtie2_index_ctrl/ctrl_regions\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  mkdir bowtie2_index_ctrl\n  bowtie2-build ${fasta} bowtie2_index_ctrl/ctrl_regions\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fasta_ctrl"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwt2_index_ctrl"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir path: { params.saveReference ? \"${params.outdir}/references\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "trimGalore": {
        "name_process": "trimGalore",
        "string_process": " process trimGalore {\n     tag \"$name\" \n\n     publishDir \"${params.outdir}/trimming\", mode: 'copy',\n                 saveAs: {filename -> filename.indexOf(\".log\") > 0 ? \"logs/$filename\" : \"$filename\"}\n\n     input:\n     set val(name), file(reads) from reads_trimgalore\n\n     output:\n     set val(name), file(\"*fq.gz\") into reads_hpvmap, reads_splitmap, reads_ctrl, reads_fastqc\n     set val(prefix), file(\"*trimming_report.txt\") into trimgalore_results\n\n     script:\n     prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n     if (params.singleEnd) {\n     \"\"\"\n     trim_galore --trim-n --quality 20 --length 20\\\n                --gzip $reads --basename ${prefix} --cores ${task.cpus}\n     \"\"\"\n     }else {\n     \"\"\"\n     trim_galore --trim-n --quality 20  --length 20 \\\n                --paired --gzip $reads --basename ${prefix} --cores ${task.cpus}\n     mv ${prefix}_R1_val_1.fq.gz ${prefix}_R1_trimmed.fq.gz\n     mv ${prefix}_R2_val_2.fq.gz ${prefix}_R2_trimmed.fq.gz\n     mv ${reads[0]}_trimming_report.txt ${prefix}_R1_trimming_report.txt\n     mv ${reads[1]}_trimming_report.txt ${prefix}_R2_trimming_report.txt\n     \"\"\"\n     }\n   }",
        "nb_lignes_process": 29,
        "string_script": "     prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n     if (params.singleEnd) {\n     \"\"\"\n     trim_galore --trim-n --quality 20 --length 20\\\n                --gzip $reads --basename ${prefix} --cores ${task.cpus}\n     \"\"\"\n     }else {\n     \"\"\"\n     trim_galore --trim-n --quality 20  --length 20 \\\n                --paired --gzip $reads --basename ${prefix} --cores ${task.cpus}\n     mv ${prefix}_R1_val_1.fq.gz ${prefix}_R1_trimmed.fq.gz\n     mv ${prefix}_R2_val_2.fq.gz ${prefix}_R2_trimmed.fq.gz\n     mv ${reads[0]}_trimming_report.txt ${prefix}_R1_trimming_report.txt\n     mv ${reads[1]}_trimming_report.txt ${prefix}_R2_trimming_report.txt\n     \"\"\"\n     }",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads_trimgalore"
        ],
        "nb_inputs": 1,
        "outputs": [
            "reads_hpvmap",
            "reads_splitmap",
            "reads_ctrl",
            "reads_fastqc",
            "trimgalore_results"
        ],
        "nb_outputs": 5,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trimming\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".log\") > 0 ? \"logs/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n   \n    when:\n    !params.skip_fastqc\n\n    input:\n    set val(name), file(reads) from reads_fastqc\n\n    output:\n    set val(prefix), file(\"${prefix}*.{zip,html}\") into fastqc_results\n\n    script:\n    prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    prefix = reads[0].toString() - ~/(_1)?(_2)?(_R1)?(_R2)?(.R1)?(.R2)?(_val_1)?(_val_2)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "reads_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "!params.skip_fastqc",
        "stub": ""
    },
    "HPVmapping": {
        "name_process": "HPVmapping",
        "string_process": "\nprocess HPVmapping {\n  tag \"$prefix\"\n  publishDir \"${params.outdir}/hpv_mapping/global\", mode: 'copy',\n        saveAs: {filename ->\n            if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n            else filename}\n\n  input:\n  set val(prefix), file(reads) from reads_hpvmap\n  file index from bwt2_index_hpv.collect()\n\n  output:\n  set val(prefix), file(\"${prefix}_hpvs.bam\") into hpv_bam\n\n  script:\n  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv_bwt2_base} \\\\\n          -U ${reads} > ${prefix}_hpvs.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  mv ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv_bwt2_base} \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}_hpvs.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  mv ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  \"\"\"\n  }\n}",
        "nb_lignes_process": 36,
        "string_script": "  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv_bwt2_base} \\\\\n          -U ${reads} > ${prefix}_hpvs.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  mv ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv_bwt2_base} \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}_hpvs.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  mv ${prefix}_sorted.bam ${prefix}_hpvs.bam\n  \"\"\"\n  }",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "reads_hpvmap",
            "bwt2_index_hpv"
        ],
        "nb_inputs": 2,
        "outputs": [
            "hpv_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$prefix\"",
            "publishDir \"${params.outdir}/hpv_mapping/global\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "ctrlMapping": {
        "name_process": "ctrlMapping",
        "string_process": "\nprocess ctrlMapping {\n  tag \"$prefix\"\n  publishDir \"${params.outdir}/ctrl_mapping/\", mode: 'copy',\n      saveAs: {filename ->\n          if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n          else filename}\n\n  input:\n  set val(prefix), file(reads) from reads_ctrl\n  file index from  bwt2_index_ctrl.collect()\n\n  output:\n  set val(prefix), file(\"${prefix}_ctrl.bam\") into ctrl_bam\n\n  script:\n  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/ctrl_regions \\\\\n          -U ${reads} > ${prefix}_ctrl.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  mv ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/ctrl_regions \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}_ctrl.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  mv ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  \"\"\"\n  }\n}",
        "nb_lignes_process": 36,
        "string_script": "  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/ctrl_regions \\\\\n          -U ${reads} > ${prefix}_ctrl.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  mv ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --very-sensitive \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/ctrl_regions \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}_ctrl.bam\n  samtools sort -@  ${task.cpus} -o ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  mv ${prefix}_sorted.bam ${prefix}_ctrl.bam\n  \"\"\"\n  }",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "reads_ctrl",
            "bwt2_index_ctrl"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ctrl_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$prefix\"",
            "publishDir \"${params.outdir}/ctrl_mapping/\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "ctrlStats": {
        "name_process": "ctrlStats",
        "string_process": "\nprocess ctrlStats {\n  tag \"$prefix\"\n  publishDir \"${params.outdir}/ctrl_mapping/\", mode: 'copy'\n\n  input:\n  set val(prefix), file(bam) from ctrl_bam\n\n  output:\n  set val(prefix), file(\"*ctrl.stats\") into ctrl_stats\n\n  script:\n  \"\"\"\n  samtools index ${bam}\n  samtools idxstats ${bam} | cut -f1,3 | sort -k2,2nr > ${prefix}_ctrl.stats\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools index ${bam}\n  samtools idxstats ${bam} | cut -f1,3 | sort -k2,2nr > ${prefix}_ctrl.stats\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ctrl_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ctrl_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "tag \"$prefix\"",
            "publishDir \"${params.outdir}/ctrl_mapping/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "selectGenotypes": {
        "name_process": "selectGenotypes",
        "string_process": "\nprocess selectGenotypes{\n  publishDir \"${params.outdir}/hpv_mapping/global\", mode: 'copy'\n\n  input:\n  set val(prefix), file(bam) from hpv_bam \n\n  output:\n  set val(prefix), file(\"${prefix}_HPVgenotyping.stats\") into hpv_geno_stats\n  file(\"${prefix}_HPVgenotyping.filtered\") into sel_hpv_geno\n\n  script:\n  \"\"\"\n  samtools index ${bam}\n  samtools idxstats ${bam} | cut -f1,3 | sort -k2,2nr > ${prefix}_HPVgenotyping.counts\n  awk '\\$2>=10{print}\\$2<10{others+=\\$2}END{print \"Others\\t\"others}' ${prefix}_HPVgenotyping.counts | grep -v \"*\" > ${prefix}_HPVgenotyping.stats\n  awk -F\"[_\\t]\" '!(\\$1 in done || \\$1==\"Others\") {print \\$0; done[\\$1]=1}' ${prefix}_HPVgenotyping.stats | cut -f1 > ${prefix}_HPVgenotyping.filtered.tmp\n  sed -i -e 's/^/${prefix},/' ${prefix}_HPVgenotyping.filtered.tmp\n  head -n 3 ${prefix}_HPVgenotyping.filtered.tmp > ${prefix}_HPVgenotyping.filtered\n  \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "  \"\"\"\n  samtools index ${bam}\n  samtools idxstats ${bam} | cut -f1,3 | sort -k2,2nr > ${prefix}_HPVgenotyping.counts\n  awk '\\$2>=10{print}\\$2<10{others+=\\$2}END{print \"Others\\t\"others}' ${prefix}_HPVgenotyping.counts | grep -v \"*\" > ${prefix}_HPVgenotyping.stats\n  awk -F\"[_\\t]\" '!(\\$1 in done || \\$1==\"Others\") {print \\$0; done[\\$1]=1}' ${prefix}_HPVgenotyping.stats | cut -f1 > ${prefix}_HPVgenotyping.filtered.tmp\n  sed -i -e 's/^/${prefix},/' ${prefix}_HPVgenotyping.filtered.tmp\n  head -n 3 ${prefix}_HPVgenotyping.filtered.tmp > ${prefix}_HPVgenotyping.filtered\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "hpv_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hpv_geno_stats",
            "sel_hpv_geno"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/global\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "HPVlocalMapping": {
        "name_process": "HPVlocalMapping",
        "string_process": "\nprocess HPVlocalMapping {\n\n  publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy',\n      saveAs: {filename ->\n          if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n          else filename}\n\n  input:\n  file index from bwt2_index_hpv_split.first()\n  set val(prefix), val(hpv), file(reads) from hpv_geno_filter\n    .splitCsv(header: [\"sample\", \"hpv\"])\n    .map{\n      [ it[\"sample\"], it[\"hpv\"] ]\n    }\n    .dump(tag: \"mapped\")\n    .combine(reads_splitmap, by: 0)\n    .dump(tag: \"combined\")\n\n  output:\n  set val(prefix), file(\"*.bam\") into hpv_local_bam, hpv_cov_bam, hpv_soft_bam\n\n  script: \n  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --local --very-sensitive-local --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv} \\\\\n          -U ${reads} > ${prefix}-${hpv}.bam 2> ${prefix}-${hpv}_bowtie2.log\n  samtools sort -@  ${task.cpus} -o ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  mv ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --local --very-sensitive-local --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv} \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}-${hpv}.bam 2> ${prefix}-${hpv}_bowtie2.log\n  samtools sort -@  ${task.cpus} -o ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  mv ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  \"\"\"\n  }\n}",
        "nb_lignes_process": 43,
        "string_script": "  if ( params.singleEnd ){\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --local --very-sensitive-local --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv} \\\\\n          -U ${reads} > ${prefix}-${hpv}.bam 2> ${prefix}-${hpv}_bowtie2.log\n  samtools sort -@  ${task.cpus} -o ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  mv ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  \"\"\"\n  }else{\n  \"\"\"\n  bowtie2 --rg-id BMG --rg SM:${prefix} \\\\\n          --local --very-sensitive-local --no-unal \\\\\n          -p ${task.cpus} \\\\\n          -x ${index}/${hpv} \\\\\n          -1 ${reads[0]} -2 ${reads[1]} > ${prefix}-${hpv}.bam 2> ${prefix}-${hpv}_bowtie2.log\n  samtools sort -@  ${task.cpus} -o ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  mv ${prefix}-${hpv}_sorted.bam ${prefix}-${hpv}.bam\n  \"\"\"\n  }",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bwt2_index_hpv_split",
            "hpv_geno_filter"
        ],
        "nb_inputs": 2,
        "outputs": [
            "hpv_local_bam",
            "hpv_cov_bam",
            "hpv_soft_bam"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else filename}"
        ],
        "when": "",
        "stub": ""
    },
    "HPVlocalMappingStats": {
        "name_process": "HPVlocalMappingStats",
        "string_process": "\nprocess HPVlocalMappingStats {\n  publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy'\n  \n  input:\n  set val(prefix), file(bam) from hpv_local_bam\n\n  output:\n  set val(prefix), file(\"*_coverage.stats\") into hpv_cov_stats\n\n  script:\n  pfix= bam.toString() - ~/(.bam)?$/\n  \"\"\"\n  genomeCoverageBed -d -ibam ${bam} > ${pfix}_coverage.out\n  nbaln=\\$(samtools flagstat ${bam} | grep 'mapped (' | awk '{print \\$1}')\n  echo -e \"ID,sample,HPVsubtype,mappedReads,minCov,maxCov,meanCov\" > ${pfix}_coverage.stats\n  awk -v id=${prefix} -v nbaln=\\$nbaln 'NR==1{hpv=\\$1;mn=mx=\\$3}{total+=\\$3}(\\$3>mx){mx=\\$3}(\\$3<mn){mn=\\$3} END{OFS=\",\"; print id\"_\"hpv,id,hpv,nbaln,mn,mx,total/NR}' ${pfix}_coverage.out >> ${pfix}_coverage.stats\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  pfix= bam.toString() - ~/(.bam)?$/\n  \"\"\"\n  genomeCoverageBed -d -ibam ${bam} > ${pfix}_coverage.out\n  nbaln=\\$(samtools flagstat ${bam} | grep 'mapped (' | awk '{print \\$1}')\n  echo -e \"ID,sample,HPVsubtype,mappedReads,minCov,maxCov,meanCov\" > ${pfix}_coverage.stats\n  awk -v id=${prefix} -v nbaln=\\$nbaln 'NR==1{hpv=\\$1;mn=mx=\\$3}{total+=\\$3}(\\$3>mx){mx=\\$3}(\\$3<mn){mn=\\$3} END{OFS=\",\"; print id\"_\"hpv,id,hpv,nbaln,mn,mx,total/NR}' ${pfix}_coverage.out >> ${pfix}_coverage.stats\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hpv_local_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hpv_cov_stats"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "HPVcoverage": {
        "name_process": "HPVcoverage",
        "string_process": "\nprocess HPVcoverage {\n  publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy'\n\n  input:\n  set val(prefix), file(bam) from hpv_cov_bam\n\n  output:\n  set val(prefix), file(\"*covmatrix.mqc\") into hpv_bw_cov\n\n  script:\n  pfix= bam.toString() - ~/(_sorted)?(.bam)?$/\n  \"\"\"\n  samtools index ${bam}\n  bamCoverage -b ${bam} --binSize 50 --normalizeUsing CPM --outFileFormat bedgraph -o ${pfix}.bedgraph\n  awk -F\"\\t\" '{OFS=\"\\t\"; print \\$2+25,\\$4}' ${pfix}.bedgraph > ${pfix}_covmatrix.mqc\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  pfix= bam.toString() - ~/(_sorted)?(.bam)?$/\n  \"\"\"\n  samtools index ${bam}\n  bamCoverage -b ${bam} --binSize 50 --normalizeUsing CPM --outFileFormat bedgraph -o ${pfix}.bedgraph\n  awk -F\"\\t\" '{OFS=\"\\t\"; print \\$2+25,\\$4}' ${pfix}.bedgraph > ${pfix}_covmatrix.mqc\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "hpv_cov_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hpv_bw_cov"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/local\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "extractBreakpointsSequence": {
        "name_process": "extractBreakpointsSequence",
        "string_process": "\nprocess extractBreakpointsSequence {\n   publishDir \"${params.outdir}/hpv_mapping/softclipped\", mode: 'copy'\n\n   input:\n   set val(prefix), file(bam) from hpv_soft_bam\n\n   output:\n   set val(prefix), file(\"*.mqc\") into bkp_pos mode 'flatten'\n   set val(prefix), file(\"*.fa\") into clipped_seq\n\n   script:\n   pfix= bam.toString() - ~/.bam$/\n   \"\"\"\n   extractSoftclipped.py -v --mqc --stranded --minLen 10 ${bam}\n   sort -k1,1n ${pfix}_3prime_bkp.mqc | awk 'BEGIN{nr=1} nr<\\$1{for (i=nr;i<\\$1;i++){print i\"\\t\"0} nr=\\$1}{print; nr+=1}' > file1.tmp\n   mv file1.tmp ${pfix}_3prime_bkp.mqc\n   sort -k1,1n ${pfix}_5prime_bkp.mqc | awk 'BEGIN{nr=1} nr<\\$1{for (i=nr;i<\\$1;i++){print i\"\\t\"0} nr=\\$1}{print; nr+=1}' > file2.tmp\n   mv file2.tmp ${pfix}_5prime_bkp.mqc\n   \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "   pfix= bam.toString() - ~/.bam$/\n   \"\"\"\n   extractSoftclipped.py -v --mqc --stranded --minLen 10 ${bam}\n   sort -k1,1n ${pfix}_3prime_bkp.mqc | awk 'BEGIN{nr=1} nr<\\$1{for (i=nr;i<\\$1;i++){print i\"\\t\"0} nr=\\$1}{print; nr+=1}' > file1.tmp\n   mv file1.tmp ${pfix}_3prime_bkp.mqc\n   sort -k1,1n ${pfix}_5prime_bkp.mqc | awk 'BEGIN{nr=1} nr<\\$1{for (i=nr;i<\\$1;i++){print i\"\\t\"0} nr=\\$1}{print; nr+=1}' > file2.tmp\n   mv file2.tmp ${pfix}_5prime_bkp.mqc\n   \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hpv_soft_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bkp_pos",
            "clipped_seq"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/softclipped\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "blatSoftClippedSeq": {
        "name_process": "blatSoftClippedSeq",
        "string_process": " process blatSoftClippedSeq {\n      publishDir \"${params.outdir}/hpv_mapping/blat\", mode: 'copy'\n\n      when:\n      !params.skip_blat\n\n      input:\n      file(blatdb) from blat_database.collect()\n      set val(prefix),file(fasta) from clipped_seq\n \n      output:\n      set val(prefix), file(\"*.tsv\") into blat_res\n\n      script:\n      pfix= fasta.toString() - ~/(.fa)?$/\n      \"\"\"\n      blat ${blatdb} ${fasta} ${pfix}.tsv -noHead -minScore=25 -minIdentity=90\n      \"\"\"\n   }",
        "nb_lignes_process": 17,
        "string_script": "      pfix= fasta.toString() - ~/(.fa)?$/\n      \"\"\"\n      blat ${blatdb} ${fasta} ${pfix}.tsv -noHead -minScore=25 -minIdentity=90\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BLAT"
        ],
        "tools_url": [
            "https://bio.tools/blat"
        ],
        "tools_dico": [
            {
                "name": "BLAT",
                "uri": "https://bio.tools/blat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fast, accurate spliced alignment of DNA sequences.",
                "homepage": "http://genome.ucsc.edu/cgi-bin/hgBlat?command=start"
            }
        ],
        "inputs": [
            "blat_database",
            "clipped_seq"
        ],
        "nb_inputs": 2,
        "outputs": [
            "blat_res"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/blat\", mode: 'copy'"
        ],
        "when": "!params.skip_blat",
        "stub": ""
    },
    "blatSummary": {
        "name_process": "blatSummary",
        "string_process": " process blatSummary {\n      publishDir \"${params.outdir}/hpv_mapping/blat\", mode: 'copy'\n\n      input:\n      set val(prefix), file(psl) from blat_res\n \n      output:\n      set val(prefix), file(\"*_table_filtered.csv\") into ttd\n      set val(prefix), file(\"*_table.csv\") into table\n\n      script:\n      pfix= psl.toString() - ~/(.tsv)?$/\n      \"\"\"\n      blat_parser.py ${psl}\n      \"\"\"\n   }",
        "nb_lignes_process": 14,
        "string_script": "      pfix= psl.toString() - ~/(.tsv)?$/\n      \"\"\"\n      blat_parser.py ${psl}\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "blat_res"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ttd",
            "table"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/hpv_mapping/blat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n\n    script:\n                                                              \n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py > software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    multiqc --version > v_multiqc.txt\n    scrape_software_versions.py > software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "workflow_summary_mqc": {
        "name_process": "workflow_summary_mqc",
        "string_process": "\nprocess workflow_summary_mqc {\n  when:\n  !params.skip_multiqc\n\n  output:\n  file 'workflow_summary_mqc.yaml' into workflow_summary_yaml\n\n  exec:\n  def yaml_file = task.workDir.resolve('workflow_summary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: 'https://gitlab.curie.fr/illumina-hpv'\n  plot_type: 'html'\n  data: |\n      <dl class=\\\"dl-horizontal\\\">\n${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n      </dl>\n  \"\"\".stripIndent()\n}",
        "nb_lignes_process": 20,
        "string_script": "  def yaml_file = task.workDir.resolve('workflow_summary_mqc.yaml')\n  yaml_file.text  = \"\"\"\n  id: 'summary'\n  description: \" - this information is collected when the pipeline is started.\"\n  section_name: 'Workflow Summary'\n  section_href: 'https://gitlab.curie.fr/illumina-hpv'\n  plot_type: 'html'\n  data: |\n      <dl class=\\\"dl-horizontal\\\">\n${summary.collect { k,v -> \"            <dt>$k</dt><dd><samp>${v ?: '<span style=\\\"color:#999999;\\\">N/A</a>'}</samp></dd>\" }.join(\"\\n\")}\n      </dl>\n  \"\"\".stripIndent()",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GDT",
            "SAMPL",
            "NDD",
            "DLP+"
        ],
        "tools_url": [
            "https://bio.tools/gdt",
            "https://bio.tools/SAMPL",
            "https://bio.tools/NDD",
            "https://bio.tools/DLP"
        ],
        "tools_dico": [
            {
                "name": "GDT",
                "uri": "https://bio.tools/gdt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software package for genome-wide association analysis.",
                "homepage": "http://people.virginia.edu/~wc9c/GDT/"
            },
            {
                "name": "SAMPL",
                "uri": "https://bio.tools/SAMPL",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Medicinal chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Sample collections"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Drug design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3277",
                            "term": "Specimen collections"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0455",
                                    "term": "Nucleic acid thermodynamic property calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3642",
                                    "term": "Dimethyl"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "> MEDIUM CONFIDENCE! | reference data for the sixth statistical assessment of modeling of proteins and ligands (SAMPL6) | From Wikipedia, the free encyclopedia | Jump to navigation Jump to search | SAMPL (Statistical Assessment of the Modeling of Proteins and Ligands) is a set of community-wide blind challenges aimed to advance computational techniques as standard predictive tools in rational drug design.[1][2][3][4][5] A broad range of biologically relevant systems with different sizes and levels of complexities including proteins, host guest complexes, and drug-like small molecules have been selected to test the latest modeling methods and force fields in SAMPL",
                "homepage": "https://en.wikipedia.org/wiki/SAMPL_Challenge"
            },
            {
                "name": "NDD",
                "uri": "https://bio.tools/NDD",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Drug-Drug Interaction Predicting by Neural Network Using Integrated Similarity | Link of paper: https://www.nature.com/articles/s41598-019-50121-3 A Novel Method For Predicting Drug-Drug Interaction By Neural Network Due to the great importance of this issue in the economy, industry, and health, proposing appropriate computational methods for predicting unknown DDI with high precision is challenging. We propose a novel machine learning method for predicting unknown DDIs called \"NDD\", using a two-layer fully connected neural network. NDD uses various characteristics of drugs to have comprehensive information. Multiple drug similarities are calculated. NDD integrat various drug similarities with a non-linear similarity fusion method called \"SNF\" to achieve high-level features. Dependency: python version 3.5.3 deep learning lib keras: https://github.com/fchollet/keras/ machine learning lib scikit-learn: https://github.com/scikit-learn/scikit-learn Contact: nasim.rohani74@gmail.com",
                "homepage": "https://github.com/nrohani/NDD"
            },
            {
                "name": "DLP+",
                "uri": "https://bio.tools/DLP",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deisotoping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3629",
                                    "term": "Deconvolution"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Clonal Decomposition and DNA Replication States Defined by Scaled Single-Cell Genome Sequencing.\n\nCollection of Standard Operating Procedures (SOPs) for DLP+",
                "homepage": "https://github.com/shahcompbio/dlpplus_protocols"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "workflow_summary_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "make_hpv_config_persample": {
        "name_process": "make_hpv_config_persample",
        "string_process": " process make_hpv_config_persample {        \n      when:\n      !params.skip_multiqc\n\n      input:\n      file(geno) from hpv_geno_mqc_config\n      file genes from ch_hpv_genes_coord.collect()\n\n      output:\n      set val(prefix),file('*conf.mqc') into mqc_hpv_conf\n      set val(prefix),file('*bkp.mqc') into mqc_genepos\n\n      script:\n      prefix = geno.toString() - \"_HPVgenotyping.filtered\"\n      \"\"\"\n      awk -F, '{print \\$2}' ${geno} | sort -u > allgenotypes_unique.txt\n      scrape_mqc_config.py  allgenotypes_unique.txt > ${prefix}_hpv_conf.mqc\n      gene_tracks.sh allgenotypes_unique.txt ${genes} ${prefix} \n      \"\"\"\n   }",
        "nb_lignes_process": 18,
        "string_script": "      prefix = geno.toString() - \"_HPVgenotyping.filtered\"\n      \"\"\"\n      awk -F, '{print \\$2}' ${geno} | sort -u > allgenotypes_unique.txt\n      scrape_mqc_config.py  allgenotypes_unique.txt > ${prefix}_hpv_conf.mqc\n      gene_tracks.sh allgenotypes_unique.txt ${genes} ${prefix} \n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hpv_geno_mqc_config",
            "ch_hpv_genes_coord"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mqc_hpv_conf",
            "mqc_genepos"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": " process multiqc {\n     publishDir \"${params.outdir}/MultiQC/\", mode: 'copy'\n\n     when:\n     !params.skip_multiqc\n\n     input:\n     file splan from ch_splan.first()\n     file multiqc_config from ch_multiqc_config.first()\n     set val(prefix), file('mqc/hpv_config.mqc'), file('fastqc/*'), file('trimming/*'), file('ctrl/*'), file('hpv/*'), file('hpv/*'), file('hpv/*'), file('hpv/*'), file('mqc/*'), file('mqc/*') from ch_hpv_report.dump(tag: \"mqc\") \n     file ('software_versions/*') from software_versions_yaml.collect()\n     file ('workflow_summary/*') from workflow_summary_yaml.collect()\n\n     output:\n     file splan\n     file \"*.html\" into multiqc_report\n     file \"*_data\"\n\n     script:\n     rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n     rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_\" + prefix + \"_multiqc_report\" : ''\n     \"\"\"\t\n     multiqc . -f $rtitle -n ${prefix}_HPVreport.html -c $multiqc_config -c 'mqc/hpv_config.mqc' -m fastqc -m custom_content\n     \"\"\"\n   }",
        "nb_lignes_process": 23,
        "string_script": "     rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n     rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_\" + prefix + \"_multiqc_report\" : ''\n     \"\"\"\t\n     multiqc . -f $rtitle -n ${prefix}_HPVreport.html -c $multiqc_config -c 'mqc/hpv_config.mqc' -m fastqc -m custom_content\n     \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_splan",
            "ch_multiqc_config",
            "ch_hpv_report",
            "software_versions_yaml",
            "workflow_summary_yaml"
        ],
        "nb_inputs": 5,
        "outputs": [
            "splan",
            "multiqc_report"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC/\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "make_hpv_config": {
        "name_process": "make_hpv_config",
        "string_process": " process make_hpv_config {\n\n      when:\n      !params.skip_multiqc\n\n      input:\n      file(geno) from hpv_geno_mqc_config.collect()\n      file genes from ch_hpv_genes_coord.collect()\n\n      output:\n      file('*conf.mqc') into mqc_hpv_conf\n      file('*bkp.mqc') into mqc_genepos\n\n      script:\n      prefix = geno.toString() - \"_HPVgenotyping.filtered\"\n      \"\"\"\n      awk -F, '{print \\$2}' ${geno} | sort -u > allgenotypes_unique.txt\n      scrape_mqc_config.py  allgenotypes_unique.txt > hpv_conf.mqc\n      gene_tracks.sh allgenotypes_unique.txt ${genes} 'genes' \n      \"\"\"\n   }",
        "nb_lignes_process": 19,
        "string_script": "      prefix = geno.toString() - \"_HPVgenotyping.filtered\"\n      \"\"\"\n      awk -F, '{print \\$2}' ${geno} | sort -u > allgenotypes_unique.txt\n      scrape_mqc_config.py  allgenotypes_unique.txt > hpv_conf.mqc\n      gene_tracks.sh allgenotypes_unique.txt ${genes} 'genes' \n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "hpv_geno_mqc_config",
            "ch_hpv_genes_coord"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mqc_hpv_conf",
            "mqc_genepos"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "multiqc_allsamples": {
        "name_process": "multiqc_allsamples",
        "string_process": " process multiqc_allsamples {\n     publishDir \"${params.outdir}/MultiQC/\", mode: 'copy'\n\n     when:\n     !params.skip_multiqc\n\n     input:\n     file splan from ch_splan.first()\n     file multiqc_config from ch_multiqc_config.first()\n     file hpv_config from mqc_hpv_conf.collect().ifEmpty([])\n     file('fastqc/*') from fastqc_results.map{items->items[1]}.collect().ifEmpty([])\n     file('trimming/*') from trimgalore_results.map{items->items[1]}.collect().ifEmpty([])\n     file ('hpv/*') from hpv_geno_stats.map{items->items[1]}.collect()\n     file ('hpv/*') from hpv_cov_stats.map{items->items[1]}.collect()\n     file ('hpv/*') from hpv_bw_cov.map{items->items[1]}.collect()\n     file ('hpv/*') from bkp_pos.map{items->items[1]}.collect()\n     file ('hpv/*') from mqc_genepos.collect()\n     file ('hpv/*') from ttd.collect().ifEmpty([])\n     file ('ctrl/*') from ctrl_stats.collect()\n  \n     file ('software_versions/*') from software_versions_yaml.collect()\n     file ('workflow_summary/*') from workflow_summary_yaml.collect()\n \n     output:\n     file splan\n     file \"*multiqc_report.html\" into multiqc_report\n     file \"*_data\"\n\n     script:\n     rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n     rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n     metadata_opts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n     splan_opts = params.samplePlan ? \"--splan ${params.samplePlan}\" : \"\"\n     \"\"\"\t\n     mqc_header.py --name \"nv-VIF\" --version ${workflow.manifest.version} ${metadata_opts} ${splan_opts} > multiqc-config-header.yaml         \n     multiqc . -f $rtitle $rfilename -c $multiqc_config -c $hpv_config -c multiqc-config-header.yaml -m fastqc -m custom_content\n     \"\"\"\n   }",
        "nb_lignes_process": 36,
        "string_script": "     rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n     rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n     metadata_opts = params.metadata ? \"--metadata ${metadata}\" : \"\"\n     splan_opts = params.samplePlan ? \"--splan ${params.samplePlan}\" : \"\"\n     \"\"\"\t\n     mqc_header.py --name \"nv-VIF\" --version ${workflow.manifest.version} ${metadata_opts} ${splan_opts} > multiqc-config-header.yaml         \n     multiqc . -f $rtitle $rfilename -c $multiqc_config -c $hpv_config -c multiqc-config-header.yaml -m fastqc -m custom_content\n     \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_splan",
            "ch_multiqc_config",
            "mqc_hpv_conf",
            "fastqc_results",
            "trimgalore_results",
            "hpv_geno_stats",
            "hpv_cov_stats",
            "hpv_bw_cov",
            "bkp_pos",
            "mqc_genepos",
            "ttd",
            "ctrl_stats",
            "software_versions_yaml",
            "workflow_summary_yaml"
        ],
        "nb_inputs": 14,
        "outputs": [
            "splan",
            "multiqc_report"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioinfo-pf-curie__nf-VIF",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC/\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    }
}