{
    "DownloadFastqFiles": {
        "name_process": "DownloadFastqFiles",
        "string_process": "\nprocess DownloadFastqFiles {\n\n\tpublishDir \"results/samples_sra/\"\n\n        input:\n        val sample from samples\n\n        output:\n        tuple val (sample), file (\"${sample}.sra\") into sra_files\n\n        script:\n        \"\"\"\n        wget -O ${sample}.sra https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos1/sra-pub-run-5/${sample}/${sample}.1\n        \"\"\"\n        }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        wget -O ${sample}.sra https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos1/sra-pub-run-5/${sample}/${sample}.1\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samples"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sra_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/samples_sra/\""
        ],
        "when": "",
        "stub": ""
    },
    "sraToFastqZip": {
        "name_process": "sraToFastqZip",
        "string_process": "\nprocess sraToFastqZip {\n\n\tpublishDir \"results/samples_fastq/\"\n\n        input:\n        tuple val (sample), file (samp_sra) from sra_files\n\n        output:\n        tuple val (sample), file (\"${sample}_1.fastq.gz\"), file (\"${sample}_2.fastq.gz\") into fastq_files\n\n        script:\n        \"\"\"\n\tfastq-dump --gzip --split-files ${samp_sra}\n        \"\"\"\n        }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n\tfastq-dump --gzip --split-files ${samp_sra}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sra_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastq_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/samples_fastq/\""
        ],
        "when": "",
        "stub": ""
    },
    "DownloadChromosomes": {
        "name_process": "DownloadChromosomes",
        "string_process": "\nprocess DownloadChromosomes {\n\n\tpublishDir \"results/chr/\"\n\n\tinput:\n\tval chromo from liste_chromosomes\n\n\toutput:\n\tfile \"${chromo}.fa.gz\" into genome_humain_zip\n\t\"\"\"\n\twget -O ${chromo}.fa.gz ftp://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.${chromo}.fa.gz\n\t\"\"\"\n\t}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n\twget -O ${chromo}.fa.gz ftp://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.${chromo}.fa.gz\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "liste_chromosomes"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genome_humain_zip"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/chr/\""
        ],
        "when": "",
        "stub": ""
    },
    "MergeChr": {
        "name_process": "MergeChr",
        "string_process": "\nprocess MergeChr {\n\n\tpublishDir \"results/genome/\"\n\n\tinput:\n\tfile gen from genome_humain_zip.collect()\n\n\toutput:\n\tfile \"ref.fa\" into genome_merge\n\n\tscript :\n\t\"\"\"\n\tgunzip -c ${gen} > ref.fa\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tgunzip -c ${gen} > ref.fa\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome_humain_zip"
        ],
        "nb_inputs": 1,
        "outputs": [
            "genome_merge"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/genome/\""
        ],
        "when": "",
        "stub": ""
    },
    "indexGen": {
        "name_process": "indexGen",
        "string_process": "\nprocess indexGen {\n\n\tpublishDir \"results/gen_index/\"\n\n\tinput :\n\tfile genome from genome_merge.collect()\n\n\toutput :\n\tpath \"ref\" into star_index\n\n\tscript :\n\t\"\"\"\n\tSTAR --runThreadN ${task.cpus} --runMode genomeGenerate --genomeDir ref/ --genomeFastaFiles ${genome}\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tSTAR --runThreadN ${task.cpus} --runMode genomeGenerate --genomeDir ref/ --genomeFastaFiles ${genome}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genome_merge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "star_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/gen_index/\""
        ],
        "when": "",
        "stub": ""
    },
    "getGenomic_features": {
        "name_process": "getGenomic_features",
        "string_process": "\nprocess getGenomic_features{\n\n\tpublishDir \"results/gen_features/\"\n\n\toutput:\n\tfile \"*.gtf\" into annotation\n\n\tscript:\n\t\"\"\"\n\twget ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.chr.gtf.gz\n\tgzip -d  Homo_sapiens.GRCh38.101.chr.gtf.gz\n\t\"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\t\"\"\"\n\twget ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.chr.gtf.gz\n\tgzip -d  Homo_sapiens.GRCh38.101.chr.gtf.gz\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "annotation"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/gen_features/\""
        ],
        "when": "",
        "stub": ""
    },
    "mapping_Fastq": {
        "name_process": "mapping_Fastq",
        "string_process": "\nprocess mapping_Fastq {\n\n\tpublishDir \"results/bam_files/\"\n\n\tinput:\n\ttuple val(sample), file(fastq1), file(fastq2) from fastq_files\n\tpath chemin from star_index\n\n\toutput:\n\tfile \"${sample}.bam\" into mapped_fastq_1, mapped_fastq_2\n\n\tscript:\n\t\"\"\"\n\tSTAR --outSAMstrandField intronMotif \\\n        --outFilterMismatchNmax 4 \\\n        --outFilterMultimapNmax 10 \\\n        --genomeDir ${chemin} \\\n        --readFilesIn <(gunzip -c ${fastq1}) <(gunzip -c ${fastq2}) \\\n        --runThreadN ${task.cpus} \\\n        --outSAMunmapped None \\\n        --outSAMtype BAM SortedByCoordinate \\\n        --outStd BAM_SortedByCoordinate \\\n        --genomeLoad NoSharedMemory \\\n        --limitBAMsortRAM ${task.memory.toBytes()} \\\n\t >${sample}.bam\n\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\t\"\"\"\n\tSTAR --outSAMstrandField intronMotif \\\n        --outFilterMismatchNmax 4 \\\n        --outFilterMultimapNmax 10 \\\n        --genomeDir ${chemin} \\\n        --readFilesIn <(gunzip -c ${fastq1}) <(gunzip -c ${fastq2}) \\\n        --runThreadN ${task.cpus} \\\n        --outSAMunmapped None \\\n        --outSAMtype BAM SortedByCoordinate \\\n        --outStd BAM_SortedByCoordinate \\\n        --genomeLoad NoSharedMemory \\\n        --limitBAMsortRAM ${task.memory.toBytes()} \\\n\t >${sample}.bam\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "fastq_files",
            "star_index"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mapped_fastq_1",
            "mapped_fastq_2"
        ],
        "nb_outputs": 2,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/bam_files/\""
        ],
        "when": "",
        "stub": ""
    },
    "indexBam": {
        "name_process": "indexBam",
        "string_process": "\nprocess indexBam {\n\n\tpublishDir \"results/bam_files/\"\n\n\tinput:\n\tfile bam from mapped_fastq_1\n\n\toutput:\n\tfile \"*.bai\" into sam_fastq_files\n\n\tscript:\n\t\"\"\"\n\tsamtools index *.bam\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tsamtools index *.bam\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mapped_fastq_1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sam_fastq_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/bam_files/\""
        ],
        "when": "",
        "stub": ""
    },
    "getCountReads_feature": {
        "name_process": "getCountReads_feature",
        "string_process": "\nprocess getCountReads_feature {\n\n\tpublishDir \"results/count_output/\"\n\n\tinput:\n\tfile gtf from annotation\n\tfile bam from mapped_fastq_2.collect()\n\n\toutput:\n\tfile \"output.counts\" into FileReads\n\tfile \"output.counts.summary\" into logsFileReads\n\n\tscript:\n\t\"\"\"\n\tfeatureCounts -p -t gene -g gene_id -s 0 -a ${gtf} -o output.counts ${bam}\n\t\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\t\"\"\"\n\tfeatureCounts -p -t gene -g gene_id -s 0 -a ${gtf} -o output.counts ${bam}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "annotation",
            "mapped_fastq_2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "FileReads",
            "logsFileReads"
        ],
        "nb_outputs": 2,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/count_output/\""
        ],
        "when": "",
        "stub": ""
    },
    "dataAnalysis": {
        "name_process": "dataAnalysis",
        "string_process": "\nprocess dataAnalysis {\n\n\tpublishDir \"results/plots/\"\n\n\tinput:\n\tpath reads from FileReads\n\tpath metadata from fichier_meta\n\n\toutput:\n\tfile \"histogramm.png\" into histo\n\tfile \"MA_plot.png\" into MA\n\tfile \"plot_counts.png\" into plots_counts\n\tfile \"dispersion.png\" into disp\n\tfile \"deseq_res_1.csv\" into object_res_1\n\tfile \"deseq_res_2.csv\" into object_res_2\n\n\tscript :\n\t\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(\"DESeq2\")\n\tcounts <- read.table(\"${reads}\", sep=\"\\t\", row.names = 1, header=T)\n\tcoldata = read.csv(\"${metadata}\", row.names = 1, header=TRUE)\n\tcounts <- counts[,-1:-5]\n\tcounts <- counts[,row.names(coldata)]\n\tcounts <- counts[rowSums(counts)>0,]\n\tcounts <- as.matrix(counts)\n\tcond <- factor(coldata[,\"etat_echantillon\"])\n\tdds <- DESeqDataSetFromMatrix(counts, DataFrame(cond), ~ cond)\n\tdds <- DESeq(dds)\n\tres <- results(dds)\n\tpng(\"histogramm.png\")\n\thist(res[,\"pvalue\"], col=\"blue\", main=\"\")\n\tdev.off()\n\tpng(\"MA_plot.png\")\n\tplotMA(res,ylim=c(-5,5))\n\tdev.off()\n\tpng(\"plot_counts.png\")\n\tplotCounts(dds, gene=which.min(res[,\"padj\"]), intgroup=\"cond\")\n\tdev.off()\n\tpng(\"dispersion.png\")\n\tplotDispEsts(dds)\n\tdev.off()\n\tres <- as.data.frame(res)\n\twrite.csv(res, file=\"deseq_res_1.csv\")\n\tres2 <- results(dds, tidy=TRUE)\n\tres2 <- as.data.frame(res2)\n\twrite.csv(res2, file=\"deseq_res_2.csv\")\n\t\"\"\"\n\t}",
        "nb_lignes_process": 48,
        "string_script": "\t\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(\"DESeq2\")\n\tcounts <- read.table(\"${reads}\", sep=\"\\t\", row.names = 1, header=T)\n\tcoldata = read.csv(\"${metadata}\", row.names = 1, header=TRUE)\n\tcounts <- counts[,-1:-5]\n\tcounts <- counts[,row.names(coldata)]\n\tcounts <- counts[rowSums(counts)>0,]\n\tcounts <- as.matrix(counts)\n\tcond <- factor(coldata[,\"etat_echantillon\"])\n\tdds <- DESeqDataSetFromMatrix(counts, DataFrame(cond), ~ cond)\n\tdds <- DESeq(dds)\n\tres <- results(dds)\n\tpng(\"histogramm.png\")\n\thist(res[,\"pvalue\"], col=\"blue\", main=\"\")\n\tdev.off()\n\tpng(\"MA_plot.png\")\n\tplotMA(res,ylim=c(-5,5))\n\tdev.off()\n\tpng(\"plot_counts.png\")\n\tplotCounts(dds, gene=which.min(res[,\"padj\"]), intgroup=\"cond\")\n\tdev.off()\n\tpng(\"dispersion.png\")\n\tplotDispEsts(dds)\n\tdev.off()\n\tres <- as.data.frame(res)\n\twrite.csv(res, file=\"deseq_res_1.csv\")\n\tres2 <- results(dds, tidy=TRUE)\n\tres2 <- as.data.frame(res2)\n\twrite.csv(res2, file=\"deseq_res_2.csv\")\n\t\"\"\"",
        "nb_lignes_script": 30,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "FileReads",
            "fichier_meta"
        ],
        "nb_inputs": 2,
        "outputs": [
            "histo",
            "MA",
            "plots_counts",
            "disp",
            "object_res_1",
            "object_res_2"
        ],
        "nb_outputs": 6,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/plots/\""
        ],
        "when": "",
        "stub": ""
    },
    "plotVolcano": {
        "name_process": "plotVolcano",
        "string_process": "\nprocess plotVolcano {\n\n\tpublishDir \"results/plots/\"\n\n\tinput:\n\tpath res from object_res_2\n\n\toutput:\n\tfile \"volcano.png\"\n\n\tscript :\n\t\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(ggplot2)\n\tres2 = read.csv(\"${res}\", header=TRUE, sep=\",\")\n\tres2.condition1 <- subset(res2, padj<.1)\n\tres2.condition2 <- subset(res2, (padj<.005 & -log10(pvalue) > 6))\n\tplot.volcano <- ggplot(data = res2.condition2, aes(x = log2FoldChange, y = -log10(pvalue), label = row)) +\n\t  geom_point(data = res2, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"black\") +\n\t  geom_point(data = res2.condition1, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"blue\") +\n\t  geom_point(data = res2.condition2, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"red\") +\n\t  geom_text(label=res2.condition2[,\"row\"], nudge_x = 0.25, nudge_y = 0.25, check_overlap = T, size = 2) +\n\t  xlim(-8, 8)\n\tggsave(\"volcano.png\", plot.volcano)\n\t\"\"\"\n\t}",
        "nb_lignes_process": 25,
        "string_script": "\t\"\"\"\n\t#!/usr/bin/env Rscript\n\tlibrary(ggplot2)\n\tres2 = read.csv(\"${res}\", header=TRUE, sep=\",\")\n\tres2.condition1 <- subset(res2, padj<.1)\n\tres2.condition2 <- subset(res2, (padj<.005 & -log10(pvalue) > 6))\n\tplot.volcano <- ggplot(data = res2.condition2, aes(x = log2FoldChange, y = -log10(pvalue), label = row)) +\n\t  geom_point(data = res2, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"black\") +\n\t  geom_point(data = res2.condition1, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"blue\") +\n\t  geom_point(data = res2.condition2, aes(x = log2FoldChange, y = -log10(pvalue)), color = \"red\") +\n\t  geom_text(label=res2.condition2[,\"row\"], nudge_x = 0.25, nudge_y = 0.25, check_overlap = T, size = 2) +\n\t  xlim(-8, 8)\n\tggsave(\"volcano.png\", plot.volcano)\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "object_res_2"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Irvibena__Groupe10_Hackaton",
        "directive": [
            "publishDir \"results/plots/\""
        ],
        "when": "",
        "stub": ""
    }
}