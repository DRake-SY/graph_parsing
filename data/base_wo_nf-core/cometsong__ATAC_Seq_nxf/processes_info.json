{
    "trim_fastq": {
        "name_process": "trim_fastq",
        "string_process": "\nprocess trim_fastq {\n    tag \"$sampleID\"\n    label 'cutadapt'\n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'                     \n    cpus params.threads\n\n    input:\n    tuple sampleID, fqR1, fqR2 from sample_fastqs_ch\n    output:\n    tuple sampleID, file(\"${sampleID}_R{1,2}_paired_trimmed.fq\") \\\n          into ( trimmed_reads_fq, trim_fastqc )\n    tuple sampleID, file(\"*.log\") into log_cutadapt\n\n    script:\n    log.info \"-----Cutadapt running on ${sampleID}-----\"\n    \"\"\"\n    cutadapt \\\n        -a ${params.cutadaptAdapterR1} \\\n        -A ${params.cutadaptAdapterR2} \\\n        --minimum-length ${params.cutadaptMinLength} \\\n        --quality-cutoff ${params.cutadaptQualCutoff} \\\n        -j ${params.threads} \\\n        -o ${sampleID}_R1_paired_trimmed.fq \\\n        -p ${sampleID}_R2_paired_trimmed.fq \\\n        ${fqR1} ${fqR2} \\\n        > ${sampleID}_cutadapt.log \\\n        2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    log.info \"-----Cutadapt running on ${sampleID}-----\"\n    \"\"\"\n    cutadapt \\\n        -a ${params.cutadaptAdapterR1} \\\n        -A ${params.cutadaptAdapterR2} \\\n        --minimum-length ${params.cutadaptMinLength} \\\n        --quality-cutoff ${params.cutadaptQualCutoff} \\\n        -j ${params.threads} \\\n        -o ${sampleID}_R1_paired_trimmed.fq \\\n        -p ${sampleID}_R2_paired_trimmed.fq \\\n        ${fqR1} ${fqR2} \\\n        > ${sampleID}_cutadapt.log \\\n        2>&1\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Cutadapt"
        ],
        "tools_url": [
            "https://bio.tools/cutadapt"
        ],
        "tools_dico": [
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            }
        ],
        "inputs": [
            "sample_fastqs_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "",
            "log_cutadapt"
        ],
        "nb_outputs": 2,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'cutadapt'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$sampleID\"\n    label 'fastqc'\n    publishDir \"${sample_outdir}\", pattern: \"*_fastqc.*\", mode: 'move'\n    cpus 2\n\n    input:\n    tuple sampleID, file(trimmedfqs) from trim_fastqc\n    output:\n    file(\"*_fastqc.*\")\n\n    script:\n    log.info \"-----FastQC running on ${sampleID}-----\"\n    \"\"\"\n    /opt/bin/FastQC/fastqc -t 2 ${trimmedfqs[0]} ${trimmedfqs[1]}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    log.info \"-----FastQC running on ${sampleID}-----\"\n    \"\"\"\n    /opt/bin/FastQC/fastqc -t 2 ${trimmedfqs[0]} ${trimmedfqs[1]}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "trim_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'fastqc'",
            "publishDir \"${sample_outdir}\", pattern: \"*_fastqc.*\", mode: 'move'",
            "cpus 2"
        ],
        "when": "",
        "stub": ""
    },
    "align_trimmed_fastq": {
        "name_process": "align_trimmed_fastq",
        "string_process": "\nprocess align_trimmed_fastq {\n    tag \"$sampleID\"\n    label 'bowtie2'\n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'                     \n    cpus params.threads\n\n    input:\n    tuple sampleID, file(trimmedfqs) from trimmed_reads_fq\n    output:\n    tuple sampleID, file(\"${sampleID}.sam\") into aligned_ch\n    file(\"${sampleID}_bowtie2.log\") into log_bowtie\n\n    script:\n    log.info \"-----Bowtie running on ${sampleID}-----\"\n    \"\"\"\n    bowtie2 \\\n        --very-sensitive \\\n        -X ${params.bowtieMaxInsert} \\\n        -q \\\n        -p ${params.threads} \\\n        -x ${params.bowtieIndex} \\\n        -1 ${sampleID}_R1_paired_trimmed.fq \\\n        -2 ${sampleID}_R2_paired_trimmed.fq \\\n        -S ${sampleID}.sam \\\n        2>${sampleID}_bowtie2.log\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    log.info \"-----Bowtie running on ${sampleID}-----\"\n    \"\"\"\n    bowtie2 \\\n        --very-sensitive \\\n        -X ${params.bowtieMaxInsert} \\\n        -q \\\n        -p ${params.threads} \\\n        -x ${params.bowtieIndex} \\\n        -1 ${sampleID}_R1_paired_trimmed.fq \\\n        -2 ${sampleID}_R2_paired_trimmed.fq \\\n        -S ${sampleID}.sam \\\n        2>${sampleID}_bowtie2.log\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "trimmed_reads_fq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aligned_ch",
            "log_bowtie"
        ],
        "nb_outputs": 2,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'bowtie2'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "sort_alignment": {
        "name_process": "sort_alignment",
        "string_process": "\nprocess sort_alignment {\n    tag \"$sampleID\"\n    label 'samtools'\n\n    input:\n    tuple sampleID, file(sample_aligned) from aligned_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.sorted.bam*\") into sorted_align_ch\n\n    script:\n    log.info \"-----Sorting and indexing Bowtie alignment of ${sampleID}-----\"\n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} \\\n        -O bam \\\n        -o ${sampleID}.sorted.bam \\\n        ${sample_aligned}\n    samtools index \\\n        ${sampleID}.sorted.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    log.info \"-----Sorting and indexing Bowtie alignment of ${sampleID}-----\"\n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} \\\n        -O bam \\\n        -o ${sampleID}.sorted.bam \\\n        ${sample_aligned}\n    samtools index \\\n        ${sampleID}.sorted.bam\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "aligned_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sorted_align_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'"
        ],
        "when": "",
        "stub": ""
    },
    "flag_pcr_dupes": {
        "name_process": "flag_pcr_dupes",
        "string_process": "\nprocess flag_pcr_dupes {\n    tag \"$sampleID\"\n    label 'gatk'\n    publishDir \"${sample_outdir}\", pattern: \"*.sorted.metrics\", mode: 'copy'                     \n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'                     \n    cpus params.threads\n\n    input:\n    tuple sampleID, file(sorted_bams) from sorted_align_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.sorted.marked.ba*\") \\\n          into ( sorted_marked_bam_rmdup_ch, sorted_marked_bam_lib_cmplx_ch )\n    file(\"${sampleID}.sorted.metrics\") into log_sorted_metrics\n    file(\"${sampleID}.picard.log\") into log_picard\n\n    script:\n    log.info \"-----Flagging PCR Duplicates on ${sampleID}-----\"\n    \"\"\"\n    gatk \\\n        --java-options \"-XX:ParallelGCThreads=${params.threads} -Djava.io.tmpdir=${tmpdir}\" \\\n        MarkDuplicates \\\n        --INPUT ${sorted_bams[0]} \\\n        --OUTPUT ${sampleID}.sorted.marked.bam \\\n        --METRICS_FILE ${sampleID}.sorted.metrics \\\n        --REMOVE_DUPLICATES false \\\n        --CREATE_INDEX true \\\n        --VALIDATION_STRINGENCY LENIENT \\\n        --TMP_DIR ${tmpdir} \\\n        > ${sampleID}.picard.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    log.info \"-----Flagging PCR Duplicates on ${sampleID}-----\"\n    \"\"\"\n    gatk \\\n        --java-options \"-XX:ParallelGCThreads=${params.threads} -Djava.io.tmpdir=${tmpdir}\" \\\n        MarkDuplicates \\\n        --INPUT ${sorted_bams[0]} \\\n        --OUTPUT ${sampleID}.sorted.marked.bam \\\n        --METRICS_FILE ${sampleID}.sorted.metrics \\\n        --REMOVE_DUPLICATES false \\\n        --CREATE_INDEX true \\\n        --VALIDATION_STRINGENCY LENIENT \\\n        --TMP_DIR ${tmpdir} \\\n        > ${sampleID}.picard.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "GATK",
            "MarkDuplicates (IP)"
        ],
        "tools_url": [
            "https://bio.tools/gatk",
            "https://bio.tools/markduplicates_ip"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MarkDuplicates (IP)",
                "uri": "https://bio.tools/markduplicates_ip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Marks all duplicate reads in a provided SAM or BAM file and either removes them or flags them.",
                "homepage": "https://galaxy.pasteur.fr/tool_runner?tool_id=toolshed.pasteur.fr/repos/fmareuil/picard_pasteur_wrapper/rgPicardMarkDups/1.56.0"
            }
        ],
        "inputs": [
            "sorted_align_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "",
            "log_sorted_metrics",
            "log_picard"
        ],
        "nb_outputs": 3,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'gatk'",
            "publishDir \"${sample_outdir}\", pattern: \"*.sorted.metrics\", mode: 'copy'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "rm_dupe_reads": {
        "name_process": "rm_dupe_reads",
        "string_process": "\nprocess rm_dupe_reads {\n    tag \"$sampleID\"\n    label 'samtools'\n\n    input:\n    tuple sampleID, file(marked_bams) from sorted_marked_bam_rmdup_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.sorted.rmDup.ba*\") into sorted_rmdup_bam_ch\n\n    script:\n    \"\"\"\n    samtools view -h -b -F 1024 ${marked_bams[1]} > ${sampleID}.sorted.rmDup.bam\n    samtools index ${sampleID}.sorted.rmDup.bam\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    samtools view -h -b -F 1024 ${marked_bams[1]} > ${sampleID}.sorted.rmDup.bam\n    samtools index ${sampleID}.sorted.rmDup.bam\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_marked_bam_rmdup_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sorted_rmdup_bam_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'"
        ],
        "when": "",
        "stub": ""
    },
    "calc_mtdna_filter_chrm": {
        "name_process": "calc_mtdna_filter_chrm",
        "string_process": "\nprocess calc_mtdna_filter_chrm {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*_mtDNA_Content.txt\", mode: 'copy'                     \n    cpus params.threads\n\n    input:\n    tuple sampleID, file(rmdup_bams) from sorted_rmdup_bam_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.sorted.rmDup.rmChrM.ba*\") into mtdna_filter_bams_ch\n    file(\"${sampleID}_mtDNA_Content.txt\") into log_mtdna_content\n\n    shell:\n    log.info \"-----Calculate %mtDNA and Filter Mitochondrial Reads on ${sampleID}-----\"\n    '''\n    mtReads=$(samtools idxstats !{rmdup_bams[0]} | grep 'MT' | cut -f 3)\n    totalReads=$(samtools idxstats !{rmdup_bams[0]} | awk '{SUM += $3} END {print SUM}')\n\n    echo 'mtDNA Content:' $(bc <<< \"scale=2;100*$mtReads/$totalReads\")'%' > !{sampleID}_mtDNA_Content.txt\n\n    samtools view -@ !{params.threads} -h !{rmdup_bams[0]} \\\n    | grep -v MT \\\n    | samtools sort -@ !{params.threads} -O bam \\\n        -o !{sampleID}.sorted.rmDup.rmChrM.bam \\\n    && samtools index !{sampleID}.sorted.rmDup.rmChrM.bam\n    '''\n}",
        "nb_lignes_process": 26,
        "string_script": "    log.info \"-----Calculate %mtDNA and Filter Mitochondrial Reads on ${sampleID}-----\"\n    '''\n    mtReads=$(samtools idxstats !{rmdup_bams[0]} | grep 'MT' | cut -f 3)\n    totalReads=$(samtools idxstats !{rmdup_bams[0]} | awk '{SUM += $3} END {print SUM}')\n\n    echo 'mtDNA Content:' $(bc <<< \"scale=2;100*$mtReads/$totalReads\")'%' > !{sampleID}_mtDNA_Content.txt\n\n    samtools view -@ !{params.threads} -h !{rmdup_bams[0]} \\\n    | grep -v MT \\\n    | samtools sort -@ !{params.threads} -O bam \\\n        -o !{sampleID}.sorted.rmDup.rmChrM.bam \\\n    && samtools index !{sampleID}.sorted.rmDup.rmChrM.bam\n    '''",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_rmdup_bam_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mtdna_filter_bams_ch",
            "log_mtdna_content"
        ],
        "nb_outputs": 2,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*_mtDNA_Content.txt\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "filter_rmmulti_shift": {
        "name_process": "filter_rmmulti_shift",
        "string_process": "\nprocess filter_rmmulti_shift {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*.sorted.rmDup.rmChrM.rmMulti.filtered.ba*\", mode: 'copy'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(mtdna_bams) from mtdna_filter_bams_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.shift.tmp0.ba*\") into shift_tmp_bams_ch\n    tuple sampleID, file(\"${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.ba*\") \\\n          into sort_rm_dup_chrm_multi_filter_ch\n\n    script:\n    log.info \"-----Filter Non-Unique and Include Only 'properly mapped reads' Alignments on ${sampleID}-----\"\n    \"\"\"\n    # Remove reads unmapped, mate unmapped, not primary alignment, reads failing platform, duplicates (-F 1804)\n    # Retain properly paired reads -f 2\n    samtools view \\\n        -@ ${params.threads} -h -q 30 ${mtdna_bams[0]} \\\n        > ${sampleID}.sorted.rmDup.rmChrM.rmMulti.bam\n    samtools view \\\n        -@ ${params.threads} -h -b -F 1804 -f 2 \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.bam \\\n        > ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools index \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.shift.tmp0.bam \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools index \\\n        ${sampleID}.shift.tmp0.bam\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    log.info \"-----Filter Non-Unique and Include Only 'properly mapped reads' Alignments on ${sampleID}-----\"\n    \"\"\"\n    # Remove reads unmapped, mate unmapped, not primary alignment, reads failing platform, duplicates (-F 1804)\n    # Retain properly paired reads -f 2\n    samtools view \\\n        -@ ${params.threads} -h -q 30 ${mtdna_bams[0]} \\\n        > ${sampleID}.sorted.rmDup.rmChrM.rmMulti.bam\n    samtools view \\\n        -@ ${params.threads} -h -b -F 1804 -f 2 \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.bam \\\n        > ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools index \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.shift.tmp0.bam \\\n        ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.bam\n    samtools index \\\n        ${sampleID}.shift.tmp0.bam\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mtdna_filter_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "shift_tmp_bams_ch",
            "sort_rm_dup_chrm_multi_filter_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.sorted.rmDup.rmChrM.rmMulti.filtered.ba*\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "filter_rmmulti_sieve": {
        "name_process": "filter_rmmulti_sieve",
        "string_process": "\nprocess filter_rmmulti_sieve {\n    tag \"$sampleID\"\n    label 'deeptools'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(shift_bams) from shift_tmp_bams_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.shift.tmp.ba*\") into shift_bams_ch\n\n    script:\n    log.info \"-----Running deeptools alignmentSieve on ${sampleID}-----\"\n    \"\"\"\n    alignmentSieve \\\n        --numberOfProcessors ${params.threads} \\\n        --ATACshift \\\n        --bam ${shift_bams[0]} \\\n        -o ${sampleID}.shift.tmp.bam\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    log.info \"-----Running deeptools alignmentSieve on ${sampleID}-----\"\n    \"\"\"\n    alignmentSieve \\\n        --numberOfProcessors ${params.threads} \\\n        --ATACshift \\\n        --bam ${shift_bams[0]} \\\n        -o ${sampleID}.shift.tmp.bam\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "shift_tmp_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "shift_bams_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'deeptools'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "filter_rmmulti_sort": {
        "name_process": "filter_rmmulti_sort",
        "string_process": "\nprocess filter_rmmulti_sort {\n    tag \"$sampleID\"\n    label 'samtools'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(shift_bams) from shift_bams_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.shifted.ba*\") \\\n        into ( sort_rm_dup_chrm_mult_filt_shift_chain_file,\n               sort_rm_dup_chrm_mult_filt_shift_chain_null )\n\n    script:\n    log.info \"-----Re-sorting shifted bam on ${sampleID}-----\"\n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.shifted.bam \\\n        ${shift_bams[0]}\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    log.info \"-----Re-sorting shifted bam on ${sampleID}-----\"\n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.sorted.rmDup.rmChrM.rmMulti.filtered.shifted.bam \\\n        ${shift_bams[0]}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "shift_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "chain_convert_peak_b6": {
        "name_process": "chain_convert_peak_b6",
        "string_process": "\nprocess chain_convert_peak_b6 {\n    tag \"$sampleID\"\n    label 'g2gtools'\n\n    input:\n    tuple sampleID, file(bam_shifted) from sort_rm_dup_chrm_mult_filt_shift_chain_file\n    output:\n    tuple sampleID, file(\"${sampleID}.tmp.mm10.ba*\") into bam_peak_b6_mm10_ch\n\n    when: chain != null\n\n    script:\n    log.info \"-----Convert Peak Coordinates to B6 on ${sampleID}-----\"\n    \"\"\"\n    # convert to mm10 coordinates\n    g2gtools convert \\\n        -r -f bam -c ${chain} \\\n        -i ${bam_shifted[0]} \\\n        -o ${sampleID}.tmp.mm10.bam\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    log.info \"-----Convert Peak Coordinates to B6 on ${sampleID}-----\"\n    \"\"\"\n    # convert to mm10 coordinates\n    g2gtools convert \\\n        -r -f bam -c ${chain} \\\n        -i ${bam_shifted[0]} \\\n        -o ${sampleID}.tmp.mm10.bam\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sort_rm_dup_chrm_mult_filt_shift_chain_file"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_peak_b6_mm10_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'g2gtools'"
        ],
        "when": "",
        "stub": ""
    },
    "chain_sort_coords": {
        "name_process": "chain_sort_coords",
        "string_process": "\nprocess chain_sort_coords {\n    tag \"$sampleID\"\n    label 'samtools'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(bam_peak_b6_mm10) from bam_peak_b6_mm10_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.tmp1.mm10.ba*\") \\\n        into ( bams_sort_mm10_extract_ch, bams_sort_mm10_filter_ch )\n\n    when: chain != null\n\n    script:\n    \"\"\"\n    # sort bam by coordinates\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp1.mm10.bam \\\n        ${bam_peak_b6_mm10[0]}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    # sort bam by coordinates\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp1.mm10.bam \\\n        ${bam_peak_b6_mm10[0]}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_peak_b6_mm10_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "chain_extract_badreads_b6": {
        "name_process": "chain_extract_badreads_b6",
        "string_process": "\nprocess chain_extract_badreads_b6 {\n    tag \"$sampleID\"\n    label 'gatk'\n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'\n\n                                           \n    errorStrategy { [0,3,4].contains(task.exitStatus) ? 'ignore' : 'terminate' }                   \n\n    input:\n    tuple sampleID, file(bam_sort_mm10) from bams_sort_mm10_extract_ch\n    output:\n    tuple sampleID, file(\"BAD_READS\") into bad_reads_ch\n    file(\"${sampleID}_ValidateSamFile.log\") \n\n    when: chain != null\n\n    script:\n    \"\"\"\n    # extract a list of 'bad reads'\n    gatk ValidateSamFile \\\n        -I ${bam_sort_mm10[0]} \\\n        -MODE VERBOSE -MO 10000000 \\\n        -O BAD_READS \\\n        --IGNORE MISSING_READ_GROUP \\\n        --IGNORE RECORD_MISSING_READ_GROUP \\\n        --IGNORE MISSING_TAG_NM \\\n        --IGNORE QUALITY_NOT_STORED \\\n        > ${sampleID}_ValidateSamFile.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "    \"\"\"\n    # extract a list of 'bad reads'\n    gatk ValidateSamFile \\\n        -I ${bam_sort_mm10[0]} \\\n        -MODE VERBOSE -MO 10000000 \\\n        -O BAD_READS \\\n        --IGNORE MISSING_READ_GROUP \\\n        --IGNORE RECORD_MISSING_READ_GROUP \\\n        --IGNORE MISSING_TAG_NM \\\n        --IGNORE QUALITY_NOT_STORED \\\n        > ${sampleID}_ValidateSamFile.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bams_sort_mm10_extract_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bad_reads_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'gatk'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'",
            "errorStrategy { [0,3,4].contains(task.exitStatus) ? 'ignore' : 'terminate' }"
        ],
        "when": "",
        "stub": ""
    },
    "chain_bad_to_uniq_reads": {
        "name_process": "chain_bad_to_uniq_reads",
        "string_process": "\nprocess chain_bad_to_uniq_reads {\n    tag \"$sampleID\"\n    label 'utils'\n\n    input:\n    tuple sampleID, file(bad_reads) from bad_reads_ch\n    output:\n    file(\"ReadName_unique\") into read_uniq_ch\n\n    when: chain != null\n\n    shell:\n    '''\n    # Remove 'bad reads' from bam file\n    cat !{bad_reads} \\\n    | awk '{print $5}' \\\n    | sed -r 's/\\\\,//g' \\\n    | sort -n \\\n    | uniq -c \\\n    | awk '{print $2}' \\\n    > ReadName_unique\n    '''\n}",
        "nb_lignes_process": 22,
        "string_script": "    '''\n    # Remove 'bad reads' from bam file\n    cat !{bad_reads} \\\n    | awk '{print $5}' \\\n    | sed -r 's/\\\\,//g' \\\n    | sort -n \\\n    | uniq -c \\\n    | awk '{print $2}' \\\n    > ReadName_unique\n    '''",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bad_reads_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "read_uniq_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'utils'"
        ],
        "when": "",
        "stub": ""
    },
    "chain_filter_reads_b6": {
        "name_process": "chain_filter_reads_b6",
        "string_process": "\nprocess chain_filter_reads_b6 {\n    tag \"$sampleID\"\n    label 'gatk'\n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'\n\n    input:\n    tuple sampleID, file(bam_sort_mm10) from bams_sort_mm10_filter_ch\n    file(ReadName_unique) from read_uniq_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.tmp2.mm10.ba*\") into bam_mm10_ch\n    file(\"${sampleID}_FilterSamReads.log\")\n\n    when: chain != null\n\n    script:\n    \"\"\"\n    # filter list to unique names (reads can fail for multiple reasons appear on list more than once)\n    gatk FilterSamReads \\\n        -I ${bam_sort_mm10[0]} \\\n        -RLF ReadName_unique \\\n        --FILTER excludeReadList \\\n        --VALIDATION_STRINGENCY LENIENT \\\n        -O ${sampleID}.tmp2.mm10.bam \\\n        > ${sampleID}_FilterSamReads.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    # filter list to unique names (reads can fail for multiple reasons appear on list more than once)\n    gatk FilterSamReads \\\n        -I ${bam_sort_mm10[0]} \\\n        -RLF ReadName_unique \\\n        --FILTER excludeReadList \\\n        --VALIDATION_STRINGENCY LENIENT \\\n        -O ${sampleID}.tmp2.mm10.bam \\\n        > ${sampleID}_FilterSamReads.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bams_sort_mm10_filter_ch",
            "read_uniq_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bam_mm10_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'gatk'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "chain_sort_fixmate_bam": {
        "name_process": "chain_sort_fixmate_bam",
        "string_process": "\nprocess chain_sort_fixmate_bam {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*.${processed_bam_extension}.ba*\", mode: 'copy'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(bam_mm10) from bam_mm10_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.${processed_bam_extension}.ba*\") \\\n          into sort_rm_dup_chrm_multi_filter_shifted_mm10_chain\n\n    when: chain != null\n\n    script:\n    \"\"\"\n    # name sort the bam\n    samtools sort \\\n        -n \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp3.mm10.bam ${bam_mm10[0]}\n    # fix the mate information. This is done to fix 'TLEN' which is required for MACS2.\n    samtools fixmate \\\n        -O bam ${sampleID}.tmp3.mm10.bam ${sampleID}.tmp4.mm10.bam\n    # re-sort bam by coordinates.\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp5.mm10.bam ${sampleID}.tmp4.mm10.bam\n    samtools index ${sampleID}.tmp5.mm10.bam\n    samtools view ${sampleID}.tmp5.mm10.bam \\\n        -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y \\\n        | grep -ve 'SN:MT*' > tmp.sam\n    samtools view -b tmp.sam \\\n        > ${sampleID}.${processed_bam_extension}.bam\n    ### Note, for some reason the command that was working for mm10 only samples as seen\n    ### below was not working here. This work around provided a valid BAM file\n    samtools index \\\n        ${sampleID}.${processed_bam_extension}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    \"\"\"\n    # name sort the bam\n    samtools sort \\\n        -n \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp3.mm10.bam ${bam_mm10[0]}\n    # fix the mate information. This is done to fix 'TLEN' which is required for MACS2.\n    samtools fixmate \\\n        -O bam ${sampleID}.tmp3.mm10.bam ${sampleID}.tmp4.mm10.bam\n    # re-sort bam by coordinates.\n    samtools sort \\\n        -@ ${params.threads} -O bam \\\n        -o ${sampleID}.tmp5.mm10.bam ${sampleID}.tmp4.mm10.bam\n    samtools index ${sampleID}.tmp5.mm10.bam\n    samtools view ${sampleID}.tmp5.mm10.bam \\\n        -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y \\\n        | grep -ve 'SN:MT*' > tmp.sam\n    samtools view -b tmp.sam \\\n        > ${sampleID}.${processed_bam_extension}.bam\n    ### Note, for some reason the command that was working for mm10 only samples as seen\n    ### below was not working here. This work around provided a valid BAM file\n    samtools index \\\n        ${sampleID}.${processed_bam_extension}.bam\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_mm10_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sort_rm_dup_chrm_multi_filter_shifted_mm10_chain"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.${processed_bam_extension}.ba*\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "non_chain_reindex": {
        "name_process": "non_chain_reindex",
        "string_process": "\nprocess non_chain_reindex {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*.${processed_bam_extension}.ba*\", mode: 'copy'\n\n    input:\n    tuple sampleID, file(bam_shifted) from sort_rm_dup_chrm_mult_filt_shift_chain_null\n    output:\n    tuple sampleID, file(\"${sampleID}.${processed_bam_extension}.ba*\") \\\n          into sort_rm_dup_chrm_multi_filter_shifted_mm10_non_chain\n\n    when: chain == null\n\n    script:\n    \"\"\"\n    samtools index ${bam_shifted[0]}\n    samtools view  ${bam_shifted[0]} \\\n        -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y \\\n        | grep -ve 'SN:MT*\\\\|SN:GL*\\\\|SN:JH:*' > tmp.sam\n    samtools view -b tmp.sam \\\n      > ${sampleID}.${processed_bam_extension}.bam\n    # re-header to remove unplaced/unloacalized\n    samtools index \\\n      ${sampleID}.${processed_bam_extension}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    samtools index ${bam_shifted[0]}\n    samtools view  ${bam_shifted[0]} \\\n        -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y \\\n        | grep -ve 'SN:MT*\\\\|SN:GL*\\\\|SN:JH:*' > tmp.sam\n    samtools view -b tmp.sam \\\n      > ${sampleID}.${processed_bam_extension}.bam\n    # re-header to remove unplaced/unloacalized\n    samtools index \\\n      ${sampleID}.${processed_bam_extension}.bam\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sort_rm_dup_chrm_mult_filt_shift_chain_null"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sort_rm_dup_chrm_multi_filter_shifted_mm10_non_chain"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.${processed_bam_extension}.ba*\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "peak_calling": {
        "name_process": "peak_calling",
        "string_process": "\nprocess peak_calling {\n    tag \"$sampleID\"\n    label 'macs2'\n    publishDir \"${sample_outdir}\", pattern: \"*_peaks.narrowPeak\", mode: 'copy'\n    publishDir \"${sample_outdir}\", pattern: \"*_summits.bed\", mode: 'move'\n    publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'\n\n    scratch \"${tmpdir}\"\n\n    input:\n    tuple sampleID, file(processed_bams) from processed_bams_ch_peak_calling\n    output:\n    tuple sampleID, file(\"${sampleID}_peaks.narrowPeak\") \\\n        into ( peak_frip_reads_ch, peak_call_cvg_ch )\n    file(\"${sampleID}_summits.bed\")\n    file(\"${sampleID}_macs2.log\")\n\n    script:\n    log.info \"-----Peak Calling on ${sampleID}-----\"\n    \"\"\"\n    # -f BAMPE, use paired-end information\n    # --keep-dup all, keep all duplicate reads.\n    macs2 callpeak \\\n        -f BAMPE \\\n        --nomodel \\\n        -g mm \\\n        --keep-dup all \\\n        --cutoff-analysis \\\n        --tempdir ${tmpdir} \\\n        -n ${sampleID} \\\n        -t ${processed_bams[0]} \\\n        --outdir . \\\n        > ${sampleID}_macs2.log 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    log.info \"-----Peak Calling on ${sampleID}-----\"\n    \"\"\"\n    # -f BAMPE, use paired-end information\n    # --keep-dup all, keep all duplicate reads.\n    macs2 callpeak \\\n        -f BAMPE \\\n        --nomodel \\\n        -g mm \\\n        --keep-dup all \\\n        --cutoff-analysis \\\n        --tempdir ${tmpdir} \\\n        -n ${sampleID} \\\n        -t ${processed_bams[0]} \\\n        --outdir . \\\n        > ${sampleID}_macs2.log 2>&1\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "processed_bams_ch_peak_calling"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'macs2'",
            "publishDir \"${sample_outdir}\", pattern: \"*_peaks.narrowPeak\", mode: 'copy'",
            "publishDir \"${sample_outdir}\", pattern: \"*_summits.bed\", mode: 'move'",
            "publishDir \"${sample_outdir}\", pattern: \"*.log\", mode: 'copy'",
            "scratch \"${tmpdir}\""
        ],
        "when": "",
        "stub": ""
    },
    "bam_coverage_bigwig": {
        "name_process": "bam_coverage_bigwig",
        "string_process": "\nprocess bam_coverage_bigwig {\n    tag \"$sampleID\"\n    label 'deeptools'\n    publishDir \"${sample_outdir}\", pattern: \"*.bigwig\", mode: 'copy'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(processed_bams) from processed_bams_ch_bigwig\n    output:\n    file(\"*.bigwig\")\n\n    script:\n    log.info \"-----Running deeptools bamCoverage bigwig on ${sampleID}-----\"\n    \"\"\"\n    bamCoverage \\\n        --numberOfProcessors ${params.threads} \\\n        --binSize 10 \\\n        --normalizeUsing RPGC \\\n        --effectiveGenomeSize 2652783500 \\\n        --bam *filtered.shifted.mm10.bam \\\n        --outFileFormat bigwig \\\n        --outFileName ${sampleID}.bigwig\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    log.info \"-----Running deeptools bamCoverage bigwig on ${sampleID}-----\"\n    \"\"\"\n    bamCoverage \\\n        --numberOfProcessors ${params.threads} \\\n        --binSize 10 \\\n        --normalizeUsing RPGC \\\n        --effectiveGenomeSize 2652783500 \\\n        --bam *filtered.shifted.mm10.bam \\\n        --outFileFormat bigwig \\\n        --outFileName ${sampleID}.bigwig\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "processed_bams_ch_bigwig"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'deeptools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.bigwig\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "frip_reads_in_peaks": {
        "name_process": "frip_reads_in_peaks",
        "string_process": "\nprocess frip_reads_in_peaks {\n    tag \"$sampleID\"\n    label 'bedtools'\n\n    input:\n    tuple sampleID, file(narrow_peaks) from peak_frip_reads_ch\n    tuple sampleID, file(processed_bams) from processed_bams_ch_frip_reads\n    output:\n    tuple sampleID, file(\"reads_in_peaks.tmp.ba*\") into reads_peaks_bams_ch\n\n    script:\n    log.info \"-----Fraction of reads in peaks (FRiP) on ${sampleID}-----\"\n    \"\"\"\n    bedtools sort \\\n        -i ${narrow_peaks} \\\n    | bedtools merge -i stdin \\\n    | bedtools intersect -u -nonamecheck \\\n        -a ${processed_bams[0]} \\\n        -b stdin \\\n        -ubam \\\n    > reads_in_peaks.tmp.bam\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    log.info \"-----Fraction of reads in peaks (FRiP) on ${sampleID}-----\"\n    \"\"\"\n    bedtools sort \\\n        -i ${narrow_peaks} \\\n    | bedtools merge -i stdin \\\n    | bedtools intersect -u -nonamecheck \\\n        -a ${processed_bams[0]} \\\n        -b stdin \\\n        -ubam \\\n    > reads_in_peaks.tmp.bam\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "peak_frip_reads_ch",
            "processed_bams_ch_frip_reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "reads_peaks_bams_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'bedtools'"
        ],
        "when": "",
        "stub": ""
    },
    "final_calc_frip": {
        "name_process": "final_calc_frip",
        "string_process": "\nprocess final_calc_frip {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*_Fraction_reads_in_peak.txt\", mode: 'copy'                     \n\n    input:\n    tuple sampleID, file(reads_peaks_bams) from reads_peaks_bams_ch\n    tuple sampleID, file(processed_bams)   from processed_bams_ch_final_calc_frip\n    output:\n    file(\"${sampleID}_Fraction_reads_in_peak.txt\") into log_fraction_reads\n\n    shell:\n    '''\n       total_reads=$(samtools view -c !{processed_bams[0]})\n    reads_in_peaks=$(samtools view -c !{reads_peaks_bams[0]})\n    FRiP=$(awk \"BEGIN {print \"${reads_in_peaks}\"/\"${total_reads}\"}\")\n    echo -e ${FRiP}\"\\\\t\"${total_reads} \\\n        > !{sampleID}_Fraction_reads_in_peak.txt\n    '''\n}",
        "nb_lignes_process": 19,
        "string_script": "    '''\n       total_reads=$(samtools view -c !{processed_bams[0]})\n    reads_in_peaks=$(samtools view -c !{reads_peaks_bams[0]})\n    FRiP=$(awk \"BEGIN {print \"${reads_in_peaks}\"/\"${total_reads}\"}\")\n    echo -e ${FRiP}\"\\\\t\"${total_reads} \\\n        > !{sampleID}_Fraction_reads_in_peak.txt\n    '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads_peaks_bams_ch",
            "processed_bams_ch_final_calc_frip"
        ],
        "nb_inputs": 2,
        "outputs": [
            "log_fraction_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*_Fraction_reads_in_peak.txt\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "peak_coverage": {
        "name_process": "peak_coverage",
        "string_process": "\nprocess peak_coverage {\n    tag \"$sampleID\"\n    label 'utils'\n    publishDir \"${sample_outdir}\", pattern: \"*_peaks.narrowPeak.*\", mode: 'copy'\n\n    input:\n    tuple sampleID, file(narrow_peaks) from peak_call_cvg_ch\n    output:\n    tuple sampleID, file(\"${sampleID}_peaks.narrowPeak.saf\") into peak_cvg_saf_ch\n\n    shell:\n    log.info \"-----Get coverage in each peak on ${sampleID}-----\"\n    '''\n    ## Make SAF file (+1 because SAF is 1-based, BED/narrowPeak is 0-based)\n    awk 'OFS=\"\\\\t\" {print $1\".\"$2\".\"$3, $1, $2, $3, \".\"}' !{narrow_peaks} \\\n    > !{sampleID}_peaks.narrowPeak.saf\n    '''\n}",
        "nb_lignes_process": 17,
        "string_script": "    log.info \"-----Get coverage in each peak on ${sampleID}-----\"\n    '''\n    ## Make SAF file (+1 because SAF is 1-based, BED/narrowPeak is 0-based)\n    awk 'OFS=\"\\\\t\" {print $1\".\"$2\".\"$3, $1, $2, $3, \".\"}' !{narrow_peaks} \\\n    > !{sampleID}_peaks.narrowPeak.saf\n    '''",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "peak_call_cvg_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "peak_cvg_saf_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'utils'",
            "publishDir \"${sample_outdir}\", pattern: \"*_peaks.narrowPeak.*\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "feature_counts": {
        "name_process": "feature_counts",
        "string_process": "\nprocess feature_counts {\n    tag \"$sampleID\"\n    label 'subread'\n    cpus params.threads\n    publishDir \"${sample_outdir}\", pattern: \"*_peaks_countMatrix.txt\", mode: 'copy'\n\n    input:\n    tuple sampleID, file(peak_cvg_saf) from peak_cvg_saf_ch\n    tuple sampleID, file(processed_bams) from processed_bams_ch_feature_counts\n    output:\n    tuple sampleID, file(\"${sampleID}_peaks_countMatrix.txt\") into feat_count_ch\n\n    script:\n    log.info \"-----Feature Counts on ${sampleID}-----\"\n    \"\"\"\n    featureCounts \\\n        -a ${peak_cvg_saf} \\\n        -F SAF -p \\\n        -T ${params.threads} \\\n        -o ${sampleID}_peaks_countMatrix.txt \\\n        ${processed_bams[0]}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    log.info \"-----Feature Counts on ${sampleID}-----\"\n    \"\"\"\n    featureCounts \\\n        -a ${peak_cvg_saf} \\\n        -F SAF -p \\\n        -T ${params.threads} \\\n        -o ${sampleID}_peaks_countMatrix.txt \\\n        ${processed_bams[0]}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "peak_cvg_saf_ch",
            "processed_bams_ch_feature_counts"
        ],
        "nb_inputs": 2,
        "outputs": [
            "feat_count_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'subread'",
            "cpus params.threads",
            "publishDir \"${sample_outdir}\", pattern: \"*_peaks_countMatrix.txt\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "feature_count_to_bed": {
        "name_process": "feature_count_to_bed",
        "string_process": "\nprocess feature_count_to_bed {\n    tag \"$sampleID\"\n    label 'utils'\n    publishDir \"${sample_outdir}\", pattern: \"*_peaks_countMatrix.mm10.bed\", mode: 'copy'\n\n    input:\n    tuple sampleID, file(peak_cnt_matrx) from feat_count_ch\n    output:\n    file(\"${sampleID}_peaks_countMatrix.mm10.bed\")\n\n    shell:\n    '''\n    tail -n +3 !{peak_cnt_matrx} \\\n        | awk -F $'\\\\t' 'BEGIN {OFS = FS} { print $2, $3, $4, $7, $6 }' \\\n        > !{sampleID}_peaks_countMatrix.mm10.bed\n    '''\n}",
        "nb_lignes_process": 16,
        "string_script": "    '''\n    tail -n +3 !{peak_cnt_matrx} \\\n        | awk -F $'\\\\t' 'BEGIN {OFS = FS} { print $2, $3, $4, $7, $6 }' \\\n        > !{sampleID}_peaks_countMatrix.mm10.bed\n    '''",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "feat_count_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'utils'",
            "publishDir \"${sample_outdir}\", pattern: \"*_peaks_countMatrix.mm10.bed\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "quality_checks": {
        "name_process": "quality_checks",
        "string_process": "\nprocess quality_checks {\n    tag \"$sampleID\"\n    label 'samtools'\n    publishDir \"${sample_outdir}\", pattern: \"*.fragment_length_count.txt\", mode: 'copy'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(sort_rm_filter_bam) from sort_rm_dup_chrm_multi_filter_ch\n    output:\n    tuple sampleID, file(\"${sampleID}.fragment_length_count.txt\") into frag_len_count_ch\n\n    script:\n    log.info \"-----Quality checks on ${sampleID}-----\"\n    log.info \"-----Fragment/Insert size on ${sampleID}-----\"\n    \"\"\"\n    samtools view \\\n        -@ ${params.threads} ${sort_rm_filter_bam[0]} \\\n        | awk '\\$9>0' | cut -f 9 | sort | uniq -c | sort -b -k2,2n \\\n        | sed -e 's/^[ \\\\t]*//' > ${sampleID}.fragment_length_count.txt\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    log.info \"-----Quality checks on ${sampleID}-----\"\n    log.info \"-----Fragment/Insert size on ${sampleID}-----\"\n    \"\"\"\n    samtools view \\\n        -@ ${params.threads} ${sort_rm_filter_bam[0]} \\\n        | awk '\\$9>0' | cut -f 9 | sort | uniq -c | sort -b -k2,2n \\\n        | sed -e 's/^[ \\\\t]*//' > ${sampleID}.fragment_length_count.txt\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sort_rm_dup_chrm_multi_filter_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "frag_len_count_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.fragment_length_count.txt\", mode: 'copy'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "frag_len_plot": {
        "name_process": "frag_len_plot",
        "string_process": "\nprocess frag_len_plot {\n    tag \"$sampleID\"\n    label 'r_lang'\n    publishDir \"${sample_outdir}\", pattern: \"*fraglen_plot.pdf\", mode: 'move', \\\n        saveAs: { pdf -> \"${sampleID}.${pdf}\" }\n\n    input:\n    tuple sampleID, file(frag_len_count) from frag_len_count_ch\n    output:\n    file(\"*fraglen_plot.pdf\")\n\n    script:\n    log.info \"-----Fragment Length Plot on ${sampleID}-----\"\n    \"\"\"\n    Rscript ${workflow.projectDir}/bin/fragment_length_plot.R ${frag_len_count}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    log.info \"-----Fragment Length Plot on ${sampleID}-----\"\n    \"\"\"\n    Rscript ${workflow.projectDir}/bin/fragment_length_plot.R ${frag_len_count}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "frag_len_count_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'r_lang'",
            "publishDir \"${sample_outdir}\", pattern: \"*fraglen_plot.pdf\", mode: 'move', saveAs: { pdf -> \"${sampleID}.${pdf}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "library_complexity": {
        "name_process": "library_complexity",
        "string_process": "\nprocess library_complexity {\n    tag \"$sampleID\"\n    label 'samtools'\n    cpus params.threads\n\n    input:\n    tuple sampleID, file(sorted_marked_bam) from sorted_marked_bam_lib_cmplx_ch\n    output:\n    tuple sampleID, file(\"tmp.ba*\") into tmp_bams_ch\n\n    script:\n    log.info \"-----Library Complexity on ${sampleID}-----\"\n                                                                                      \n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} \\\n        -n \\\n        -O BAM \\\n        -o tmp.bam \\\n        ${sorted_marked_bam[1]}\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    log.info \"-----Library Complexity on ${sampleID}-----\"\n                                                                                      \n    \"\"\"\n    samtools sort \\\n        -@ ${params.threads} \\\n        -n \\\n        -O BAM \\\n        -o tmp.bam \\\n        ${sorted_marked_bam[1]}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_marked_bam_lib_cmplx_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tmp_bams_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'samtools'",
            "cpus params.threads"
        ],
        "when": "",
        "stub": ""
    },
    "calc_pbc_metrics": {
        "name_process": "calc_pbc_metrics",
        "string_process": "\nprocess calc_pbc_metrics {\n    tag \"$sampleID\"\n    label 'bedtools'\n    publishDir \"${sample_outdir}\", pattern: \"*.pbc.qc\", mode: 'copy'                     \n\n    input:\n    tuple sampleID, file(tmp_bams) from tmp_bams_ch\n    output:\n    file(\"${sampleID}.pbc.qc\") into log_pbc_qc\n\n    shell:\n    log.info \"-----Calculate PBC Metrics on ${sampleID}-----\"\n    '''\n    bedtools bamtobed -bedpe \\\n        -i !{tmp_bams[0]} \\\n        | awk 'BEGIN{OFS=\"\\\\t\"}{print $1,$2,$4,$6,$9,$10}' \\\n        | grep -v 'MT' | sort | uniq -c \\\n        | awk 'BEGIN{mt=0;m0=0;m1=0;m2=0}($1==1){m1=m1+1} \\\n        ($1==2){m2=m2+1} {m0=m0+1} {mt=mt+$1} \\\n        END{printf \"%d\\\\t%d\\\\t%d\\\\t%d\\\\t%f\\\\t%f\\\\t%f\\\\n\", mt,m0,m1,m2,m0/mt,m1/m0,m1/m2}' \\\n        > !{sampleID}.pbc.qc\n    '''\n}",
        "nb_lignes_process": 22,
        "string_script": "    log.info \"-----Calculate PBC Metrics on ${sampleID}-----\"\n    '''\n    bedtools bamtobed -bedpe \\\n        -i !{tmp_bams[0]} \\\n        | awk 'BEGIN{OFS=\"\\\\t\"}{print $1,$2,$4,$6,$9,$10}' \\\n        | grep -v 'MT' | sort | uniq -c \\\n        | awk 'BEGIN{mt=0;m0=0;m1=0;m2=0}($1==1){m1=m1+1} \\\n        ($1==2){m2=m2+1} {m0=m0+1} {mt=mt+$1} \\\n        END{printf \"%d\\\\t%d\\\\t%d\\\\t%d\\\\t%f\\\\t%f\\\\t%f\\\\n\", mt,m0,m1,m2,m0/mt,m1/m0,m1/m2}' \\\n        > !{sampleID}.pbc.qc\n    '''",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "tmp_bams_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "log_pbc_qc"
        ],
        "nb_outputs": 1,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'bedtools'",
            "publishDir \"${sample_outdir}\", pattern: \"*.pbc.qc\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "logparser": {
        "name_process": "logparser",
        "string_process": "\nprocess logparser {\n    tag \"$sampleID\"\n    label 'logparser'\n    publishDir \"${sample_outdir}\", pattern: \"*.summary_QC_metrics.txt\", mode: 'move'\n\n    input:\n    tuple sampleID, file(log_cutadapt) from log_cutadapt\n                    file(log_bowtie)\n                    file(log_sorted_metrics)\n                    file(log_mtdna_content)\n                    file(log_pbc_qc)\n                    file(log_fraction_reads)\n    output:\n    file(\"${sampleID}.summary_QC_metrics.txt\")\n\n    script:\n    log.info \"-----LogParser on ${sampleID}-----\"\n    \"\"\"\n    python /LogParser.py > ${sampleID}.summary_QC_metrics.txt\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    log.info \"-----LogParser on ${sampleID}-----\"\n    \"\"\"\n    python /LogParser.py > ${sampleID}.summary_QC_metrics.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "log_cutadapt",
            "log_bowtie",
            "log_sorted_metrics",
            "log_mtdna_content",
            "log_pbc_qc",
            "log_fraction_reads"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "cometsong__ATAC_Seq_nxf",
        "directive": [
            "tag \"$sampleID\"",
            "label 'logparser'",
            "publishDir \"${sample_outdir}\", pattern: \"*.summary_QC_metrics.txt\", mode: 'move'"
        ],
        "when": "",
        "stub": ""
    }
}