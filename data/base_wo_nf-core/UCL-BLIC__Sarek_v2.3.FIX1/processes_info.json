{
    "GetVersionAll": {
        "name_process": "GetVersionAll",
        "string_process": "\nprocess GetVersionAll {\n  publishDir \"${params.outDir}/Reports/MultiQC\", mode: params.publishDirMode\n\n  input:\n    file(versions) from Channel.fromPath(\"${params.outDir}/Reports/ToolsVersion/*\").collect().ifEmpty(null)\n\n  output:\n    file (\"tool_versions_mqc.yaml\") into versionsForMultiQC\n\n  when: !params.noReports\n\n  script:\n  \"\"\"\n  bcftools version > v_bcftools.txt 2>&1 || true\n  bwa &> v_bwa.txt 2>&1 || true\n  configManta.py --version > v_manta.txt 2>&1 || true\n  configureStrelkaGermlineWorkflow.py --version > v_strelka.txt 2>&1 || true\n  echo \"${workflow.manifest.version}\" &> v_sarek.txt 2>&1 || true\n  echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n  echo \"SNPEFF version\"\\$(snpEff -h 2>&1) > v_snpeff.txt\n  fastqc -v > v_fastqc.txt 2>&1 || true\n  freebayes --version > v_freebayes.txt 2>&1 || true\n  gatk ApplyBQSR --help 2>&1 | grep Version: > v_gatk.txt 2>&1 || true\n  multiqc --version &> v_multiqc.txt 2>&1 || true\n  qualimap --version &> v_qualimap.txt 2>&1 || true\n  samtools --version &> v_samtools.txt 2>&1 || true\n  vcftools --version &> v_vcftools.txt 2>&1 || true\n  vep --help > v_vep.txt\n\n  scrape_tool_versions.py &> tool_versions_mqc.yaml\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  bcftools version > v_bcftools.txt 2>&1 || true\n  bwa &> v_bwa.txt 2>&1 || true\n  configManta.py --version > v_manta.txt 2>&1 || true\n  configureStrelkaGermlineWorkflow.py --version > v_strelka.txt 2>&1 || true\n  echo \"${workflow.manifest.version}\" &> v_sarek.txt 2>&1 || true\n  echo \"${workflow.nextflow.version}\" &> v_nextflow.txt 2>&1 || true\n  echo \"SNPEFF version\"\\$(snpEff -h 2>&1) > v_snpeff.txt\n  fastqc -v > v_fastqc.txt 2>&1 || true\n  freebayes --version > v_freebayes.txt 2>&1 || true\n  gatk ApplyBQSR --help 2>&1 | grep Version: > v_gatk.txt 2>&1 || true\n  multiqc --version &> v_multiqc.txt 2>&1 || true\n  qualimap --version &> v_qualimap.txt 2>&1 || true\n  samtools --version &> v_samtools.txt 2>&1 || true\n  vcftools --version &> v_vcftools.txt 2>&1 || true\n  vep --help > v_vep.txt\n\n  scrape_tool_versions.py &> tool_versions_mqc.yaml\n  \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "BWA",
            "FastQC",
            "FreeBayes",
            "GATK",
            "MultiQC",
            "QualiMap",
            "SAMtools",
            "VCFtools",
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/bwa",
            "https://bio.tools/fastqc",
            "https://bio.tools/freebayes",
            "https://bio.tools/gatk",
            "https://bio.tools/multiqc",
            "https://bio.tools/qualimap",
            "https://bio.tools/samtools",
            "https://bio.tools/vcftools",
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            },
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "versionsForMultiQC"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "publishDir \"${params.outDir}/Reports/MultiQC\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunMultiQC": {
        "name_process": "RunMultiQC",
        "string_process": "\nprocess RunMultiQC {\n  publishDir \"${params.outDir}/Reports/MultiQC\", mode: params.publishDirMode\n\n  input:\n    file (multiqcConfig) from createMultiQCconfig()\n    file (reports) from reportsForMultiQC\n    file (versions) from versionsForMultiQC\n\n  output:\n    set file(\"*multiqc_report.html\"), file(\"*multiqc_data\") into multiQCReport\n\n  when: !params.noReports\n\n  script:\n  \"\"\"\n  multiqc -f -v .\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  multiqc -f -v .\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "",
            "reportsForMultiQC",
            "versionsForMultiQC"
        ],
        "nb_inputs": 3,
        "outputs": [
            "multiQCReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "publishDir \"${params.outDir}/Reports/MultiQC\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunFastQC": {
        "name_process": "RunFastQC",
        "string_process": "\nprocess RunFastQC {\n  tag {idPatient + \"-\" + idRun}\n\n  publishDir \"${params.outDir}/Reports/FastQC/${idRun}\", mode: params.publishDirMode\n\n  input:\n    set idPatient, status, idSample, idRun, file(inputFile1), file(inputFile2) from inputFilesforFastQC\n\n  output:\n    file \"*_fastqc.{zip,html}\" into fastQCreport\n\n  when: step == 'mapping' && !params.noReports\n\n  script:\n  inputFiles = SarekUtils.hasExtension(inputFile1,\"fastq.gz\") ? \"${inputFile1} ${inputFile2}\" : \"${inputFile1}\"\n  \"\"\"\n  fastqc -t 2 -q ${inputFiles}\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  inputFiles = SarekUtils.hasExtension(inputFile1,\"fastq.gz\") ? \"${inputFile1} ${inputFile2}\" : \"${inputFile1}\"\n  \"\"\"\n  fastqc -t 2 -q ${inputFiles}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "inputFilesforFastQC"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastQCreport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idRun}",
            "publishDir \"${params.outDir}/Reports/FastQC/${idRun}\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "MapReads": {
        "name_process": "MapReads",
        "string_process": "\nprocess MapReads {\n  tag {idPatient + \"-\" + idRun}\n\n  input:\n    set idPatient, status, idSample, idRun, file(inputFile1), file(inputFile2) from inputFiles\n    set file(genomeFile), file(bwaIndex) from Channel.value([referenceMap.genomeFile, referenceMap.bwaIndex])\n\n  output:\n    set idPatient, status, idSample, idRun, file(\"${idRun}.bam\") into (mappedBam, mappedBamForQC)\n\n  when: step == 'mapping' && !params.onlyQC\n\n  script:\n  CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n  readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                              \n  extra = status == 1 ? \"-B 3\" : \"\"\n  if (SarekUtils.hasExtension(inputFile1,\"fastq.gz\"))\n    \"\"\"\n    bwa mem -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M \\\n    ${genomeFile} ${inputFile1} ${inputFile2} | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idRun}.bam\n    \"\"\"\n  else if (SarekUtils.hasExtension(inputFile1,\"bam\"))\n                                                                                 \n                                                                                          \n                                             \n                                                                                        \n                                                                                                                                                                             \n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    SamToFastq \\\n    --INPUT=${inputFile1} \\\n    --FASTQ=/dev/stdout \\\n    --INTERLEAVE=true \\\n    --NON_PF=true \\\n    | \\\n    bwa mem -K 100000000 -p -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${genomeFile} \\\n    /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2) \\\n    | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idRun}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "  CN = params.sequencing_center ? \"CN:${params.sequencing_center}\\\\t\" : \"\"\n  readGroup = \"@RG\\\\tID:${idRun}\\\\t${CN}PU:${idRun}\\\\tSM:${idSample}\\\\tLB:${idSample}\\\\tPL:illumina\"\n                                              \n  extra = status == 1 ? \"-B 3\" : \"\"\n  if (SarekUtils.hasExtension(inputFile1,\"fastq.gz\"))\n    \"\"\"\n    bwa mem -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M \\\n    ${genomeFile} ${inputFile1} ${inputFile2} | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idRun}.bam\n    \"\"\"\n  else if (SarekUtils.hasExtension(inputFile1,\"bam\"))\n                                                                                 \n                                                                                          \n                                             \n                                                                                        \n                                                                                                                                                                             \n    \"\"\"\n    gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    SamToFastq \\\n    --INPUT=${inputFile1} \\\n    --FASTQ=/dev/stdout \\\n    --INTERLEAVE=true \\\n    --NON_PF=true \\\n    | \\\n    bwa mem -K 100000000 -p -R \\\"${readGroup}\\\" ${extra} -t ${task.cpus} -M ${genomeFile} \\\n    /dev/stdin - 2> >(tee ${inputFile1}.bwa.stderr.log >&2) \\\n    | \\\n    samtools sort --threads ${task.cpus} -m 2G - > ${idRun}.bam\n    \"\"\"",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [
            "CNN",
            "EXTRACT",
            "BWA",
            "SAMtools",
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/CNN",
            "https://bio.tools/extract",
            "https://bio.tools/bwa",
            "https://bio.tools/samtools",
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "CNN",
                "uri": "https://bio.tools/CNN",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3318",
                            "term": "Physics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Convolutional neural network for efficient estimation of regional brain strains.\n\nThree pretrained CNN neural network models are provided based on all of the brain response samples available in the published study (N=3069). They correspond to the peak maximum principal strain (MPS) of the whole brain (WB), MPS of the corpus callosum (CC), and fiber strain (FS) of the CC, all assessed at the 95th percentile levels",
                "homepage": "https://github.com/Jilab-biomechanics/CNN-brain-strains"
            },
            {
                "name": "EXTRACT",
                "uri": "https://bio.tools/extract",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "Natural language processing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0218",
                            "term": "NLP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3778",
                                    "term": "Text annotation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3671",
                                "term": "Text"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3779",
                                "term": "Annotated text"
                            }
                        ]
                    }
                ],
                "description": "EXTRACT identifies genes/proteins, chemical compounds, organisms, environments, tissues, diseases, phenotypes and Gene Ontology terms mentioned in a given piece of text and maps them to their corresponding ontology/taxonomy entries.",
                "homepage": "https://extract.jensenlab.org/"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "inputFiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idRun}"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCmapped": {
        "name_process": "RunBamQCmapped",
        "string_process": "\nprocess RunBamQCmapped {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir \"${params.outDir}/Reports/bamQC\", mode: params.publishDirMode\n\n  input:\n    file(targetBED) from ch_targetBED\n    set idPatient, status, idSample, idRun, file(bam) from mappedBamForQC\n\n  output:\n    file(\"${bam.baseName}\") into bamQCmappedReport\n\n  when: !params.noReports && !params.noBAMQC\n\n  script:\n  use_bed = params.targetBED ? \"-gff ${targetBED}\" : ''\n  \"\"\"\n  qualimap --java-mem-size=${task.memory.toGiga()}G \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  $use_bed \\\n  -nt ${task.cpus} \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName} \\\n  -outformat HTML\n  \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  use_bed = params.targetBED ? \"-gff ${targetBED}\" : ''\n  \"\"\"\n  qualimap --java-mem-size=${task.memory.toGiga()}G \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  $use_bed \\\n  -nt ${task.cpus} \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName} \\\n  -outformat HTML\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "ch_targetBED",
            "mappedBamForQC"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bamQCmappedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outDir}/Reports/bamQC\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "MergeBams": {
        "name_process": "MergeBams",
        "string_process": "\nprocess MergeBams {\n  tag {idPatient + \"-\" + idSample}\n\n  input:\n    set idPatient, status, idSample, idRun, file(bam) from groupedBam\n\n  output:\n    set idPatient, status, idSample, file(\"${idSample}.bam\") into mergedBam\n\n  when: step == 'mapping' && !params.onlyQC\n\n  script:\n  \"\"\"\n  samtools merge --threads ${task.cpus} ${idSample}.bam ${bam}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools merge --threads ${task.cpus} ${idSample}.bam ${bam}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "groupedBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mergedBam"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "MarkDuplicates": {
        "name_process": "MarkDuplicates",
        "string_process": "\nprocess MarkDuplicates {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir params.outDir, mode: params.publishDirMode,\n    saveAs: {\n      if (it == \"${idSample}.bam.metrics\") \"Reports/MarkDuplicates/${it}\"\n      else \"Preprocessing/DuplicateMarked/${it}\"\n    }\n\n  input:\n    set idPatient, status, idSample, file(\"${idSample}.bam\") from mergedBam\n\n  output:\n    set idPatient, file(\"${idSample}_${status}.md.bam\"), file(\"${idSample}_${status}.md.bai\") into duplicateMarkedBams\n    set idPatient, status, idSample, val(\"${idSample}_${status}.md.bam\"), val(\"${idSample}_${status}.md.bai\") into markDuplicatesTSV\n    file (\"${idSample}.bam.metrics\") into markDuplicatesReport\n\n  when: step == 'mapping' && !params.onlyQC\n\n  script:\n  \"\"\"\n  gatk --java-options ${params.markdup_java_options} \\\n  MarkDuplicates \\\n  --MAX_RECORDS_IN_RAM 50000 \\\n  --INPUT ${idSample}.bam \\\n  --METRICS_FILE ${idSample}.bam.metrics \\\n  --TMP_DIR . \\\n  --ASSUME_SORT_ORDER coordinate \\\n  --CREATE_INDEX true \\\n  --OUTPUT ${idSample}_${status}.md.bam\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  gatk --java-options ${params.markdup_java_options} \\\n  MarkDuplicates \\\n  --MAX_RECORDS_IN_RAM 50000 \\\n  --INPUT ${idSample}.bam \\\n  --METRICS_FILE ${idSample}.bam.metrics \\\n  --TMP_DIR . \\\n  --ASSUME_SORT_ORDER coordinate \\\n  --CREATE_INDEX true \\\n  --OUTPUT ${idSample}_${status}.md.bam\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK",
            "MarkDuplicates (IP)"
        ],
        "tools_url": [
            "https://bio.tools/gatk",
            "https://bio.tools/markduplicates_ip"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            },
            {
                "name": "MarkDuplicates (IP)",
                "uri": "https://bio.tools/markduplicates_ip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Marks all duplicate reads in a provided SAM or BAM file and either removes them or flags them.",
                "homepage": "https://galaxy.pasteur.fr/tool_runner?tool_id=toolshed.pasteur.fr/repos/fmareuil/picard_pasteur_wrapper/rgPicardMarkDups/1.56.0"
            }
        ],
        "inputs": [
            "mergedBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "duplicateMarkedBams",
            "markDuplicatesTSV",
            "markDuplicatesReport"
        ],
        "nb_outputs": 3,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir params.outDir, mode: params.publishDirMode , saveAs: { if (it == \"${idSample}.bam.metrics\") \"Reports/MarkDuplicates/${it}\" else \"Preprocessing/DuplicateMarked/${it}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "CreateRecalibrationTable": {
        "name_process": "CreateRecalibrationTable",
        "string_process": "\nprocess CreateRecalibrationTable {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir \"${params.outDir}/Preprocessing/DuplicateMarked\", mode: params.publishDirMode, overwrite: false\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai) from mdBam                \n    set file(genomeFile), file(genomeIndex), file(genomeDict), file(dbsnp), file(dbsnpIndex), file(knownIndels), file(knownIndelsIndex), file(intervals) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict,\n      referenceMap.dbsnp,\n      referenceMap.dbsnpIndex,\n      referenceMap.knownIndels,\n      referenceMap.knownIndelsIndex,\n      referenceMap.intervals,\n    ])\n\n  output:\n    set idPatient, status, idSample, file(\"${idSample}.recal.table\") into recalibrationTable\n    set idPatient, status, idSample, val(\"${idSample}_${status}.md.bam\"), val(\"${idSample}_${status}.md.bai\"), val(\"${idSample}.recal.table\") into recalibrationTableTSV\n\n  when: step == 'mapping' && !params.onlyQC\n\n  script:\n  known = knownIndels.collect{ \"--known-sites ${it}\" }.join(' ')\n  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n  BaseRecalibrator \\\n  --input ${bam} \\\n  --output ${idSample}.recal.table \\\n  --tmp-dir /tmp \\\n  -R ${genomeFile} \\\n  -L ${intervals} \\\n  --known-sites ${dbsnp} \\\n  ${known} \\\n  --verbosity INFO\n  \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "  known = knownIndels.collect{ \"--known-sites ${it}\" }.join(' ')\n  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n  BaseRecalibrator \\\n  --input ${bam} \\\n  --output ${idSample}.recal.table \\\n  --tmp-dir /tmp \\\n  -R ${genomeFile} \\\n  -L ${intervals} \\\n  --known-sites ${dbsnp} \\\n  ${known} \\\n  --verbosity INFO\n  \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "mdBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "recalibrationTable",
            "recalibrationTableTSV"
        ],
        "nb_outputs": 2,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outDir}/Preprocessing/DuplicateMarked\", mode: params.publishDirMode, overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "RecalibrateBam": {
        "name_process": "RecalibrateBam",
        "string_process": "\nprocess RecalibrateBam {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir \"${params.outDir}/Preprocessing/Recalibrated\", mode: params.publishDirMode\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai), file(recalibrationReport) from recalibrationTable\n    set file(genomeFile), file(genomeIndex), file(genomeDict), file(intervals) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict,\n      referenceMap.intervals,\n    ])\n\n  output:\n    set idPatient, status, idSample, file(\"${idSample}.recal.bam\"), file(\"${idSample}.recal.bai\") into recalibratedBam, recalibratedBamForStats\n    set idPatient, status, idSample, val(\"${idSample}.recal.bam\"), val(\"${idSample}.recal.bai\") into recalibratedBamTSV\n\n  when: !params.onlyQC\n\n  script:\n  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n  ApplyBQSR \\\n  -R ${genomeFile} \\\n  --input ${bam} \\\n  --output ${idSample}.recal.bam \\\n  -L ${intervals} \\\n  --create-output-bam-index true \\\n  --bqsr-recal-file ${recalibrationReport}\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n  ApplyBQSR \\\n  -R ${genomeFile} \\\n  --input ${bam} \\\n  --output ${idSample}.recal.bam \\\n  -L ${intervals} \\\n  --create-output-bam-index true \\\n  --bqsr-recal-file ${recalibrationReport}\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "recalibrationTable"
        ],
        "nb_inputs": 1,
        "outputs": [
            "recalibratedBam",
            "recalibratedBamForStats",
            "recalibratedBamTSV"
        ],
        "nb_outputs": 3,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outDir}/Preprocessing/Recalibrated\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunSamtoolsStats": {
        "name_process": "RunSamtoolsStats",
        "string_process": "\nprocess RunSamtoolsStats {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir \"${params.outDir}/Reports/SamToolsStats\", mode: params.publishDirMode\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai) from bamForSamToolsStats\n\n  output:\n    file (\"${bam}.samtools.stats.out\") into samtoolsStatsReport\n\n  when: !params.noReports\n\n  script: QC.samtoolsStats(bam)\n}",
        "nb_lignes_process": 14,
        "string_script": "",
        "nb_lignes_script": 0,
        "language_script": "",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamForSamToolsStats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "samtoolsStatsReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outDir}/Reports/SamToolsStats\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCrecalibrated": {
        "name_process": "RunBamQCrecalibrated",
        "string_process": "\nprocess RunBamQCrecalibrated {\n  tag {idPatient + \"-\" + idSample}\n\n  publishDir \"${params.outDir}/Reports/bamQC\", mode: params.publishDirMode\n\n  input:\n    file(targetBED) from ch_targetBED\n    set idPatient, status, idSample, file(bam), file(bai) from bamForBamQC\n\n  output:\n    file(\"${bam.baseName}\") into bamQCrecalibratedReport\n\n  when: !params.noReports && !params.noBAMQC\n\n  script:\n  use_bed = params.targetBED ? \"-gff ${targetBED}\" : ''\n  \"\"\"\n  qualimap --java-mem-size=${task.memory.toGiga()}G \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  $use_bed \\\n  -nt ${task.cpus} \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName} \\\n  -outformat HTML\n  \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  use_bed = params.targetBED ? \"-gff ${targetBED}\" : ''\n  \"\"\"\n  qualimap --java-mem-size=${task.memory.toGiga()}G \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  $use_bed \\\n  -nt ${task.cpus} \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName} \\\n  -outformat HTML\n  \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "ch_targetBED",
            "bamForBamQC"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bamQCrecalibratedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idPatient + \"-\" + idSample}",
            "publishDir \"${params.outDir}/Reports/bamQC\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "CreateIntervalBeds": {
        "name_process": "CreateIntervalBeds",
        "string_process": "\nprocess CreateIntervalBeds {\n  tag {intervals.fileName}\n\n  input:\n    file(intervals) from Channel.value(referenceMap.intervals)\n\n  output:\n    file '*.bed' into bedIntervals mode flatten\n\n  script:\n                                                                           \n                                                                                \n  if (intervals.getName().endsWith('.bed'))\n    \"\"\"\n    awk -vFS=\"\\t\" '{\n      t = \\$5  # runtime estimate\n      if (t == \"\") {\n        # no runtime estimate in this row, assume default value\n        t = (\\$3 - \\$2) / ${params.nucleotidesPerSecond}\n      }\n      if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n        # start a new chunk\n        name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n        chunk = 0\n        longest = 0\n      }\n      if (t > longest)\n        longest = t\n      chunk += t\n      print \\$0 > name\n    }' ${intervals}\n    \"\"\"\n  else\n    \"\"\"\n    awk -vFS=\"[:-]\" '{\n      name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n      printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n    }' ${intervals}\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "  if (intervals.getName().endsWith('.bed'))\n    \"\"\"\n    awk -vFS=\"\\t\" '{\n      t = \\$5  # runtime estimate\n      if (t == \"\") {\n        # no runtime estimate in this row, assume default value\n        t = (\\$3 - \\$2) / ${params.nucleotidesPerSecond}\n      }\n      if (name == \"\" || (chunk > 600 && (chunk + t) > longest * 1.05)) {\n        # start a new chunk\n        name = sprintf(\"%s_%d-%d.bed\", \\$1, \\$2+1, \\$3)\n        chunk = 0\n        longest = 0\n      }\n      if (t > longest)\n        longest = t\n      chunk += t\n      print \\$0 > name\n    }' ${intervals}\n    \"\"\"\n  else\n    \"\"\"\n    awk -vFS=\"[:-]\" '{\n      name = sprintf(\"%s_%d-%d\", \\$1, \\$2, \\$3);\n      printf(\"%s\\\\t%d\\\\t%d\\\\n\", \\$1, \\$2-1, \\$3) > name \".bed\"\n    }' ${intervals}\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "goname"
        ],
        "tools_url": [
            "https://bio.tools/goname"
        ],
        "tools_dico": [
            {
                "name": "goname",
                "uri": "https://bio.tools/goname",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2223",
                                "term": "Ontology metadata"
                            }
                        ]
                    }
                ],
                "description": "Find GO ontology terms by name.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/goname.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "bedIntervals"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {intervals.fileName}"
        ],
        "when": "",
        "stub": ""
    },
    "RunMutect2": {
        "name_process": "RunMutect2",
        "string_process": "\nprocess RunMutect2 {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}\n\n  input:\n    set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(intervalBed) from bamsFMT2\n    set file(genomeFile), file(genomeIndex), file(genomeDict), file(dbsnp), file(dbsnpIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict,\n      referenceMap.dbsnp,\n      referenceMap.dbsnpIndex\n    ])\n\n  output:\n    set val(\"MuTect2\"), idPatient, idSampleNormal, idSampleTumor, file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\") into mutect2Output\n\n  when: 'mutect2' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n    Mutect2 \\\n    -R ${genomeFile}\\\n    -I ${bamTumor}  -tumor ${idSampleTumor} \\\n    -I ${bamNormal} -normal ${idSampleNormal} \\\n    -L ${intervalBed} \\\n    -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n  \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n    Mutect2 \\\n    -R ${genomeFile}\\\n    -I ${bamTumor}  -tumor ${idSampleTumor} \\\n    -I ${bamNormal} -normal ${idSampleNormal} \\\n    -L ${intervalBed} \\\n    -O ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamsFMT2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mutect2Output"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "RunFreeBayes": {
        "name_process": "RunFreeBayes",
        "string_process": "\nprocess RunFreeBayes {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}\n\n  input:\n    set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(intervalBed) from bamsFFB\n    file(genomeFile) from Channel.value(referenceMap.genomeFile)\n    file(genomeIndex) from Channel.value(referenceMap.genomeIndex)\n\n  output:\n    set val(\"FreeBayes\"), idPatient, idSampleNormal, idSampleTumor, file(\"${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\") into freebayesOutput\n\n  when: 'freebayes' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  freebayes \\\n    -f ${genomeFile} \\\n    --pooled-continuous \\\n    --pooled-discrete \\\n    --genotype-qualities \\\n    --report-genotype-likelihood-max \\\n    --allele-balance-priors-off \\\n    --min-alternate-fraction 0.03 \\\n    --min-repeat-entropy 1 \\\n    --min-alternate-count 2 \\\n    -t ${intervalBed} \\\n    ${bamTumor} \\\n    ${bamNormal} > ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n  \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "  \"\"\"\n  freebayes \\\n    -f ${genomeFile} \\\n    --pooled-continuous \\\n    --pooled-discrete \\\n    --genotype-qualities \\\n    --report-genotype-likelihood-max \\\n    --allele-balance-priors-off \\\n    --min-alternate-fraction 0.03 \\\n    --min-repeat-entropy 1 \\\n    --min-alternate-count 2 \\\n    -t ${intervalBed} \\\n    ${bamTumor} \\\n    ${bamNormal} > ${intervalBed.baseName}_${idSampleTumor}_vs_${idSampleNormal}.vcf\n  \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "FreeBayes"
        ],
        "tools_url": [
            "https://bio.tools/freebayes"
        ],
        "tools_dico": [
            {
                "name": "FreeBayes",
                "uri": "https://bio.tools/freebayes",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs, indels, multi-nucleotide polymorphisms, and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.",
                "homepage": "https://github.com/ekg/freebayes"
            }
        ],
        "inputs": [
            "bamsFFB"
        ],
        "nb_inputs": 1,
        "outputs": [
            "freebayesOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "ConcatVCF": {
        "name_process": "ConcatVCF",
        "string_process": "\nprocess ConcatVCF {\n  tag {variantCaller + \"-\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/${\"$variantCaller\"}\", mode: params.publishDirMode\n\n  input:\n    set variantCaller, idPatient, idSampleNormal, idSampleTumor, file(vcFiles) from vcfsToMerge\n    file(genomeIndex) from Channel.value(referenceMap.genomeIndex)\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n\n  output:\n                                                                                  \n    set variantCaller, idPatient, idSampleNormal, idSampleTumor, file(\"*_*.vcf.gz\"), file(\"*_*.vcf.gz.tbi\") into vcfConcatenated\n\n  when: ( 'haplotypecaller' in tools || 'mutect2' in tools || 'freebayes' in tools ) && !params.onlyQC\n\n  script:\n  if (variantCaller == 'HaplotypeCaller') outputFile = \"${variantCaller}_${idSampleNormal}.vcf\"\n  else if (variantCaller == 'HaplotypeCallerGVCF') outputFile = \"haplotypecaller_${idSampleNormal}.g.vcf\"\n  else outputFile = \"${variantCaller}_${idSampleTumor}_vs_${idSampleNormal}.vcf\"\n  options = params.targetBED ? \"-t ${targetBED}\" : \"\"\n  \"\"\"\n  concatenateVCFs.sh -i ${genomeIndex} -c ${task.cpus} -o ${outputFile} ${options}\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  if (variantCaller == 'HaplotypeCaller') outputFile = \"${variantCaller}_${idSampleNormal}.vcf\"\n  else if (variantCaller == 'HaplotypeCallerGVCF') outputFile = \"haplotypecaller_${idSampleNormal}.g.vcf\"\n  else outputFile = \"${variantCaller}_${idSampleTumor}_vs_${idSampleNormal}.vcf\"\n  options = params.targetBED ? \"-t ${targetBED}\" : \"\"\n  \"\"\"\n  concatenateVCFs.sh -i ${genomeIndex} -c ${task.cpus} -o ${outputFile} ${options}\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfsToMerge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcfConcatenated"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {variantCaller + \"-\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/${\"$variantCaller\"}\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunStrelka": {
        "name_process": "RunStrelka",
        "string_process": "\nprocess RunStrelka {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode\n\n  input:\n    set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from bamsForStrelka\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n    set file(genomeFile), file(genomeIndex), file(genomeDict) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict\n    ])\n\n  output:\n    set val(\"Strelka\"), idPatient, idSampleNormal, idSampleTumor, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into strelkaOutput\n\n  when: 'strelka' in tools && !params.onlyQC\n\n  script:\n  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaSomaticWorkflow.py \\\n  --tumor ${bamTumor} \\\n  --normal ${bamNormal} \\\n  --referenceFasta ${genomeFile} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n  mv Strelka/results/variants/somatic.indels.vcf.gz Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n  mv Strelka/results/variants/somatic.indels.vcf.gz.tbi Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n  mv Strelka/results/variants/somatic.snvs.vcf.gz Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n  mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaSomaticWorkflow.py \\\n  --tumor ${bamTumor} \\\n  --normal ${bamNormal} \\\n  --referenceFasta ${genomeFile} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n  mv Strelka/results/variants/somatic.indels.vcf.gz Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n  mv Strelka/results/variants/somatic.indels.vcf.gz.tbi Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n  mv Strelka/results/variants/somatic.snvs.vcf.gz Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n  mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi Strelka_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n  \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForStrelka"
        ],
        "nb_inputs": 1,
        "outputs": [
            "strelkaOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunManta": {
        "name_process": "RunManta",
        "string_process": "\nprocess RunManta {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/Manta\", mode: params.publishDirMode\n\n  input:\n    set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor) from bamsForManta\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n    set file(genomeFile), file(genomeIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex\n    ])\n\n  output:\n    set val(\"Manta\"), idPatient, idSampleNormal, idSampleTumor, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into mantaOutput\n    set idPatient, idSampleNormal, idSampleTumor, file(\"*.candidateSmallIndels.vcf.gz\"), file(\"*.candidateSmallIndels.vcf.gz.tbi\") into mantaToStrelka\n\n  when: 'manta' in tools && !params.onlyQC\n\n  script:\n  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configManta.py \\\n  --normalBam ${bamNormal} \\\n  --tumorBam ${bamTumor} \\\n  --reference ${genomeFile} \\\n  ${options} \\\n  --runDir Manta\n\n  python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n  mv Manta/results/variants/candidateSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n  mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n  mv Manta/results/variants/diploidSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n  mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n  mv Manta/results/variants/somaticSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n  mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 50,
        "string_script": "  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configManta.py \\\n  --normalBam ${bamNormal} \\\n  --tumorBam ${bamTumor} \\\n  --reference ${genomeFile} \\\n  ${options} \\\n  --runDir Manta\n\n  python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSmallIndels.vcf.gz.tbi\n  mv Manta/results/variants/candidateSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz\n  mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.candidateSV.vcf.gz.tbi\n  mv Manta/results/variants/diploidSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz\n  mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.diploidSV.vcf.gz.tbi\n  mv Manta/results/variants/somaticSV.vcf.gz \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz\n  mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n    Manta_${idSampleTumor}_vs_${idSampleNormal}.somaticSV.vcf.gz.tbi\n  \"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForManta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mantaOutput",
            "mantaToStrelka"
        ],
        "nb_outputs": 2,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/Manta\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunSingleManta": {
        "name_process": "RunSingleManta",
        "string_process": "\nprocess RunSingleManta {\n  tag {idSample + \" - Single Diploid\"}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/Manta\", mode: params.publishDirMode\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai) from bamsForSingleManta\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n    set file(genomeFile), file(genomeIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex\n    ])\n\n  output:\n    set val(\"Manta\"), idPatient, idSample,  file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into singleMantaOutput\n\n  when: 'manta' in tools && status == 0 && !params.onlyQC\n\n  script:\n  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configManta.py \\\n  --bam ${bam} \\\n  --reference ${genomeFile} \\\n  ${options} \\\n  --runDir Manta\n\n  python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n    Manta_${idSample}.candidateSmallIndels.vcf.gz\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n    Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n  mv Manta/results/variants/candidateSV.vcf.gz \\\n    Manta_${idSample}.candidateSV.vcf.gz\n  mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n    Manta_${idSample}.candidateSV.vcf.gz.tbi\n  mv Manta/results/variants/diploidSV.vcf.gz \\\n    Manta_${idSample}.diploidSV.vcf.gz\n  mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n    Manta_${idSample}.diploidSV.vcf.gz.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configManta.py \\\n  --bam ${bam} \\\n  --reference ${genomeFile} \\\n  ${options} \\\n  --runDir Manta\n\n  python Manta/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n    Manta_${idSample}.candidateSmallIndels.vcf.gz\n  mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n    Manta_${idSample}.candidateSmallIndels.vcf.gz.tbi\n  mv Manta/results/variants/candidateSV.vcf.gz \\\n    Manta_${idSample}.candidateSV.vcf.gz\n  mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n    Manta_${idSample}.candidateSV.vcf.gz.tbi\n  mv Manta/results/variants/diploidSV.vcf.gz \\\n    Manta_${idSample}.diploidSV.vcf.gz\n  mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n    Manta_${idSample}.diploidSV.vcf.gz.tbi\n  \"\"\"",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForSingleManta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "singleMantaOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSample + \" - Single Diploid\"}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/Manta\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunStrelkaBP": {
        "name_process": "RunStrelkaBP",
        "string_process": "\nprocess RunStrelkaBP {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode\n\n  input:\n    set idPatient, idSampleNormal, file(bamNormal), file(baiNormal), idSampleTumor, file(bamTumor), file(baiTumor), file(mantaCSI), file(mantaCSIi) from bamsForStrelkaBP\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n    set file(genomeFile), file(genomeIndex), file(genomeDict) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict\n    ])\n\n  output:\n    set val(\"Strelka\"), idPatient, idSampleNormal, idSampleTumor, file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into strelkaBPOutput\n\n  when: 'strelka' in tools && 'manta' in tools && params.strelkaBP && !params.onlyQC\n\n  script:\n  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaSomaticWorkflow.py \\\n  --tumor ${bamTumor} \\\n  --normal ${bamNormal} \\\n  --referenceFasta ${genomeFile} \\\n  --indelCandidates ${mantaCSI} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Strelka/results/variants/somatic.indels.vcf.gz \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n  mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n  mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n  mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaSomaticWorkflow.py \\\n  --tumor ${bamTumor} \\\n  --normal ${bamNormal} \\\n  --referenceFasta ${genomeFile} \\\n  --indelCandidates ${mantaCSI} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n\n  mv Strelka/results/variants/somatic.indels.vcf.gz \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz\n  mv Strelka/results/variants/somatic.indels.vcf.gz.tbi \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_indels.vcf.gz.tbi\n  mv Strelka/results/variants/somatic.snvs.vcf.gz \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz\n  mv Strelka/results/variants/somatic.snvs.vcf.gz.tbi \\\n    StrelkaBP_${idSampleTumor}_vs_${idSampleNormal}_somatic_snvs.vcf.gz.tbi\n  \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForStrelkaBP"
        ],
        "nb_inputs": 1,
        "outputs": [
            "strelkaBPOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunAlleleCount": {
        "name_process": "RunAlleleCount",
        "string_process": "\nprocess RunAlleleCount {\n  tag {idSample}\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai) from bamsForAscat\n    set file(acLoci), file(genomeFile), file(genomeIndex), file(genomeDict) from Channel.value([\n      referenceMap.acLoci,\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict\n    ])\n\n  output:\n    set idPatient, status, idSample, file(\"${idSample}.alleleCount\") into alleleCountOutput\n\n  when: 'ascat' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  alleleCounter \\\n  -l ${acLoci} \\\n  -r ${genomeFile} \\\n  -b ${bam} \\\n  -o ${idSample}.alleleCount;\n  \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "  \"\"\"\n  alleleCounter \\\n  -l ${acLoci} \\\n  -r ${genomeFile} \\\n  -b ${bam} \\\n  -o ${idSample}.alleleCount;\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForAscat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "alleleCountOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSample}"
        ],
        "when": "",
        "stub": ""
    },
    "RunConvertAlleleCounts": {
        "name_process": "RunConvertAlleleCounts",
        "string_process": "\nprocess RunConvertAlleleCounts {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/ASCAT\", mode: params.publishDirMode\n\n  input:\n    set idPatient, idSampleNormal, idSampleTumor, file(alleleCountNormal), file(alleleCountTumor) from alleleCountOutput\n\n  output:\n    set idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleNormal}.BAF\"), file(\"${idSampleNormal}.LogR\"), file(\"${idSampleTumor}.BAF\"), file(\"${idSampleTumor}.LogR\") into convertAlleleCountsOutput\n\n  when: 'ascat' in tools && !params.onlyQC\n\n  script:\n  gender = patientGenders[idPatient]\n  \"\"\"\n  convertAlleleCounts.r ${idSampleTumor} ${alleleCountTumor} ${idSampleNormal} ${alleleCountNormal} ${gender}\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  gender = patientGenders[idPatient]\n  \"\"\"\n  convertAlleleCounts.r ${idSampleTumor} ${alleleCountTumor} ${idSampleNormal} ${alleleCountNormal} ${gender}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "WormGender"
        ],
        "tools_url": [
            "https://bio.tools/wormgender"
        ],
        "tools_dico": [
            {
                "name": "WormGender",
                "uri": "https://bio.tools/wormgender",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Zoology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Metazoa"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animal"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3500",
                            "term": "Animals"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source software which designed for accurate quantification of sex ratio in Caenorhabditis elegans.  The software functions include, i) automatic recognition and counting of adult hermaphrodites and males, ii) a manual inspection feature that enables manual correction of errors, and iii) flexibility to use new training images to optimize the software for different imaging conditions.",
                "homepage": "http://www.quantworm.org/"
            }
        ],
        "inputs": [
            "alleleCountOutput"
        ],
        "nb_inputs": 1,
        "outputs": [
            "convertAlleleCountsOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/ASCAT\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunAscat": {
        "name_process": "RunAscat",
        "string_process": "\nprocess RunAscat {\n  tag {idSampleTumor + \"_vs_\" + idSampleNormal}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/ASCAT\", mode: params.publishDirMode\n\n  input:\n    set idPatient, idSampleNormal, idSampleTumor, file(bafNormal), file(logrNormal), file(bafTumor), file(logrTumor) from convertAlleleCountsOutput\n    file(acLociGC) from Channel.value([referenceMap.acLociGC])\n\n  output:\n    set val(\"ASCAT\"), idPatient, idSampleNormal, idSampleTumor, file(\"${idSampleTumor}.*.{png,txt}\") into ascatOutput\n\n  when: 'ascat' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  # get rid of \"chr\" string if there is any\n  for f in *BAF *LogR; do sed 's/chr//g' \\$f > tmpFile; mv tmpFile \\$f;done\n  run_ascat.r ${bafTumor} ${logrTumor} ${bafNormal} ${logrNormal} ${idSampleTumor} ${baseDir} ${acLociGC}\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  \"\"\"\n  # get rid of \"chr\" string if there is any\n  for f in *BAF *LogR; do sed 's/chr//g' \\$f > tmpFile; mv tmpFile \\$f;done\n  run_ascat.r ${bafTumor} ${logrTumor} ${bafNormal} ${logrNormal} ${idSampleTumor} ${baseDir} ${acLociGC}\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "convertAlleleCountsOutput"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ascatOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSampleTumor + \"_vs_\" + idSampleNormal}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/ASCAT\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunBcftoolsStats": {
        "name_process": "RunBcftoolsStats",
        "string_process": "\nprocess RunBcftoolsStats {\n  tag {vcf}\n\n  publishDir \"${params.outDir}/Reports/BCFToolsStats\", mode: params.publishDirMode\n\n  input:\n    set variantCaller, file(vcf) from vcfForBCFtools\n\n  output:\n    file (\"${vcf.simpleName}.bcf.tools.stats.out\") into bcfReport\n\n  when: !params.noReports\n\n  script: QC.bcftools(vcf)\n}",
        "nb_lignes_process": 14,
        "string_script": "",
        "nb_lignes_script": 0,
        "language_script": "",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfForBCFtools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bcfReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {vcf}",
            "publishDir \"${params.outDir}/Reports/BCFToolsStats\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "RunVcftools": {
        "name_process": "RunVcftools",
        "string_process": "\nprocess RunVcftools {\n  tag {vcf}\n\n  publishDir \"${params.outDir}/Reports/VCFTools\", mode: params.publishDirMode\n\n  input:\n    set variantCaller, file(vcf) from vcfForVCFtools\n\n  output:\n    file (\"${vcf.simpleName}.*\") into vcfReport\n\n  when: !params.noReports\n\n  script: QC.vcftools(vcf)\n}",
        "nb_lignes_process": 14,
        "string_script": "",
        "nb_lignes_script": 0,
        "language_script": "",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcfForVCFtools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcfReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {vcf}",
            "publishDir \"${params.outDir}/Reports/VCFTools\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "GetVersionAlleleCount": {
        "name_process": "GetVersionAlleleCount",
        "string_process": "\nprocess GetVersionAlleleCount {\n  publishDir \"${params.outDir}/Reports/ToolsVersion\", mode: params.publishDirMode\n  output: file(\"v_*.txt\")\n  when: 'ascat' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  alleleCounter --version > v_allelecount.txt\n  \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "  \"\"\"\n  alleleCounter --version > v_allelecount.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "publishDir \"${params.outDir}/Reports/ToolsVersion\", mode: params.publishDirMode output: file(\"v_*.txt\") when: 'ascat' in tools && !params.onlyQC"
        ],
        "when": "",
        "stub": ""
    },
    "GetVersionASCAT": {
        "name_process": "GetVersionASCAT",
        "string_process": "\nprocess GetVersionASCAT {\n  publishDir \"${params.outDir}/Reports/ToolsVersion\", mode: params.publishDirMode\n  output: file(\"v_*.txt\")\n  when: 'ascat' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  R --version > v_r.txt\n  cat ${baseDir}/scripts/ascat.R | grep \"ASCAT version\" > v_ascat.txt\n  \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "  \"\"\"\n  R --version > v_r.txt\n  cat ${baseDir}/scripts/ascat.R | grep \"ASCAT version\" > v_ascat.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "publishDir \"${params.outDir}/Reports/ToolsVersion\", mode: params.publishDirMode output: file(\"v_*.txt\") when: 'ascat' in tools && !params.onlyQC"
        ],
        "when": "",
        "stub": ""
    },
    "RunHaplotypecaller": {
        "name_process": "RunHaplotypecaller",
        "string_process": "\nprocess RunHaplotypecaller {\n  tag {idSample + \"-\" + intervalBed.baseName}\n\n  input:\n    set idPatient, idSample, file(bam), file(bai), file(intervalBed), recalTable from bamsForHC                                              \n    set file(genomeFile), file(genomeIndex), file(genomeDict), file(dbsnp), file(dbsnpIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict,\n      referenceMap.dbsnp,\n      referenceMap.dbsnpIndex\n    ])\n\n  output:\n    set val(\"HaplotypeCallerGVCF\"), idPatient, idSample, idSample, file(\"${intervalBed.baseName}_${idSample}.g.vcf\") into hcGenomicVCF\n    set idPatient, idSample, file(intervalBed), file(\"${intervalBed.baseName}_${idSample}.g.vcf\") into vcfsToGenotype\n\n  when: 'haplotypecaller' in tools && !params.onlyQC\n\n  script:\n  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n    HaplotypeCaller \\\n    -R ${genomeFile} \\\n    -I ${bam} \\\n    -L ${intervalBed} \\\n    -D ${dbsnp} \\\n    -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n    -ERC GVCF\n  \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g -Xms6000m -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10\" \\\n    HaplotypeCaller \\\n    -R ${genomeFile} \\\n    -I ${bam} \\\n    -L ${intervalBed} \\\n    -D ${dbsnp} \\\n    -O ${intervalBed.baseName}_${idSample}.g.vcf \\\n    -ERC GVCF\n  \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamsForHC"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hcGenomicVCF",
            "vcfsToGenotype"
        ],
        "nb_outputs": 2,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSample + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "RunGenotypeGVCFs": {
        "name_process": "RunGenotypeGVCFs",
        "string_process": "\nprocess RunGenotypeGVCFs {\n  tag {idSample + \"-\" + intervalBed.baseName}\n\n  input:\n    set idPatient, idSample, file(intervalBed), file(gvcf) from vcfsToGenotype\n    set file(genomeFile), file(genomeIndex), file(genomeDict), file(dbsnp), file(dbsnpIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex,\n      referenceMap.genomeDict,\n      referenceMap.dbsnp,\n      referenceMap.dbsnpIndex\n    ])\n\n  output:\n    set val(\"HaplotypeCaller\"), idPatient, idSample, idSample, file(\"${intervalBed.baseName}_${idSample}.vcf\") into hcGenotypedVCF\n\n  when: 'haplotypecaller' in tools && !params.onlyQC\n\n  script:\n                                                                                 \n  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    IndexFeatureFile -F ${gvcf}\n\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    GenotypeGVCFs \\\n    -R ${genomeFile} \\\n    -L ${intervalBed} \\\n    -D ${dbsnp} \\\n    -V ${gvcf} \\\n    -O ${intervalBed.baseName}_${idSample}.vcf\n  \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "  \"\"\"\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    IndexFeatureFile -F ${gvcf}\n\n  gatk --java-options -Xmx${task.memory.toGiga()}g \\\n    GenotypeGVCFs \\\n    -R ${genomeFile} \\\n    -L ${intervalBed} \\\n    -D ${dbsnp} \\\n    -V ${gvcf} \\\n    -O ${intervalBed.baseName}_${idSample}.vcf\n  \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "vcfsToGenotype"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hcGenotypedVCF"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSample + \"-\" + intervalBed.baseName}"
        ],
        "when": "",
        "stub": ""
    },
    "RunSingleStrelka": {
        "name_process": "RunSingleStrelka",
        "string_process": "\nprocess RunSingleStrelka {\n  tag {idSample}\n\n  publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode\n\n  input:\n    set idPatient, status, idSample, file(bam), file(bai) from bamsForSingleStrelka\n    file(targetBED) from Channel.value(params.targetBED ? file(params.targetBED) : \"null\")\n    set file(genomeFile), file(genomeIndex) from Channel.value([\n      referenceMap.genomeFile,\n      referenceMap.genomeIndex\n    ])\n\n  output:\n    set val(\"Strelka\"), idPatient, idSample,  file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into singleStrelkaOutput\n\n  when: 'strelka' in tools && !params.onlyQC\n\n  script:\n  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaGermlineWorkflow.py \\\n  --bam ${bam} \\\n  --referenceFasta ${genomeFile} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n  mv Strelka/results/variants/genome.*.vcf.gz Strelka_${idSample}_genome.vcf.gz\n  mv Strelka/results/variants/genome.*.vcf.gz.tbi Strelka_${idSample}_genome.vcf.gz.tbi\n  mv Strelka/results/variants/variants.vcf.gz Strelka_${idSample}_variants.vcf.gz\n  mv Strelka/results/variants/variants.vcf.gz.tbi Strelka_${idSample}_variants.vcf.gz.tbi\n  \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "  beforeScript = params.targetBED ? \"bgzip --threads ${task.cpus} -c ${targetBED} > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n  options = params.targetBED ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n  \"\"\"\n  ${beforeScript}\n  configureStrelkaGermlineWorkflow.py \\\n  --bam ${bam} \\\n  --referenceFasta ${genomeFile} \\\n  ${options} \\\n  --runDir Strelka\n\n  python Strelka/runWorkflow.py -m local -j ${task.cpus}\n  mv Strelka/results/variants/genome.*.vcf.gz Strelka_${idSample}_genome.vcf.gz\n  mv Strelka/results/variants/genome.*.vcf.gz.tbi Strelka_${idSample}_genome.vcf.gz.tbi\n  mv Strelka/results/variants/variants.vcf.gz Strelka_${idSample}_variants.vcf.gz\n  mv Strelka/results/variants/variants.vcf.gz.tbi Strelka_${idSample}_variants.vcf.gz.tbi\n  \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bamsForSingleStrelka"
        ],
        "nb_inputs": 1,
        "outputs": [
            "singleStrelkaOutput"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {idSample}",
            "publishDir \"${params.outDir}/VariantCalling/${idPatient}/Strelka\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildWithDocker": {
        "name_process": "BuildWithDocker",
        "string_process": "\nprocess BuildWithDocker {\n  tag {\"${params.repository}/${container}:${params.tag}\"}\n\n  input:\n    val container from dockerContainers\n\n  output:\n    val container into containersBuilt\n\n  when: params.docker\n\n  script:\n  path = container == \"sarek\" ? \"${baseDir}\" : \"${baseDir}/containers/${container}/.\"\n  \"\"\"\n  docker build -t ${params.repository}/${container}:${params.tag} ${path}\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  path = container == \"sarek\" ? \"${baseDir}\" : \"${baseDir}/containers/${container}/.\"\n  \"\"\"\n  docker build -t ${params.repository}/${container}:${params.tag} ${path}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "iPATH",
            "AUDocker"
        ],
        "tools_url": [
            "https://bio.tools/ipath",
            "https://bio.tools/audocker"
        ],
        "tools_dico": [
            {
                "name": "iPATH",
                "uri": "https://bio.tools/ipath",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3083",
                                    "term": "Pathway or network visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2497",
                                    "term": "Pathway or network analysis"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1011",
                                "term": "EC number"
                            },
                            {
                                "uri": "http://edamontology.org/data_1027",
                                "term": "Gene ID (NCBI)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2343",
                                "term": "Pathway ID (KEGG)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2302",
                                "term": "STRING ID"
                            },
                            {
                                "uri": "http://edamontology.org/data_2764",
                                "term": "Protein name (UniProt)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2384",
                                "term": "IPI protein ID"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2082",
                                "term": "Matrix"
                            }
                        ]
                    }
                ],
                "description": "iPath is a web-based tool for the visualization and analysis of cellular pathways. Based on functional annotations (such as KEGG), it provides pathway maps for primary cellular metabolism as well as for some additional secondary metabolite synthesis and regulatory pathways. Users can map their own data onto these pathway maps. Due to its navigation and customization functions, iPATH allows users to easily explore and analyze the functional and metabolic capabilities of their (meta-)genomic data sets.",
                "homepage": "https://pathways.embl.de/"
            },
            {
                "name": "AUDocker",
                "uri": "https://bio.tools/audocker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A GUI for AutoDock Vina, it helps in virtual screening of huge number of ligands continuously. Helps in resumption of work in accidental shutdowns. This program can help you in docking several ligands automatically in to a prescribed protein receptor site.",
                "homepage": "http://sdisau.blogspot.kr/2011/04/audocker-10-easy-tool-for-virtual.html"
            }
        ],
        "inputs": [
            "dockerContainers"
        ],
        "nb_inputs": 1,
        "outputs": [
            "containersBuilt"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {\"${params.repository}/${container}:${params.tag}\"}"
        ],
        "when": "",
        "stub": ""
    },
    "PullToSingularity": {
        "name_process": "PullToSingularity",
        "string_process": "\nprocess PullToSingularity {\n  tag {\"${params.repository}/${container}:${params.tag}\"}\n\n  publishDir \"${params.containerPath}\", mode: params.publishDirMode\n\n  input:\n    val container from singularityContainers\n\n  output:\n    file(\"${container}-${params.tag}.simg\") into imagePulled\n\n  when: params.singularity\n\n  script:\n  \"\"\"\n  singularity build ${container}-${params.tag}.simg docker://${params.repository}/${container}:${params.tag}\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  singularity build ${container}-${params.tag}.simg docker://${params.repository}/${container}:${params.tag}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "singularityContainers"
        ],
        "nb_inputs": 1,
        "outputs": [
            "imagePulled"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {\"${params.repository}/${container}:${params.tag}\"}",
            "publishDir \"${params.containerPath}\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "PushToDocker": {
        "name_process": "PushToDocker",
        "string_process": "\nprocess PushToDocker {\n  tag {params.repository + \"/\" + container + \":\" + params.tag}\n\n  input:\n    val container from containersBuilt\n\n  output:\n    val container into containersPushed\n\n  when: params.docker && push\n\n  script:\n  \"\"\"\n  docker push ${params.repository}/${container}:${params.tag}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  docker push ${params.repository}/${container}:${params.tag}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "AUDocker"
        ],
        "tools_url": [
            "https://bio.tools/audocker"
        ],
        "tools_dico": [
            {
                "name": "AUDocker",
                "uri": "https://bio.tools/audocker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A GUI for AutoDock Vina, it helps in virtual screening of huge number of ligands continuously. Helps in resumption of work in accidental shutdowns. This program can help you in docking several ligands automatically in to a prescribed protein receptor site.",
                "homepage": "http://sdisau.blogspot.kr/2011/04/audocker-10-easy-tool-for-virtual.html"
            }
        ],
        "inputs": [
            "containersBuilt"
        ],
        "nb_inputs": 1,
        "outputs": [
            "containersPushed"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {params.repository + \"/\" + container + \":\" + params.tag}"
        ],
        "when": "",
        "stub": ""
    },
    "DecompressFile": {
        "name_process": "DecompressFile",
        "string_process": "\nprocess DecompressFile {\n  tag {f_reference}\n\n  input:\n    file(f_reference) from ch_compressedfiles\n\n  output:\n    file(\"*.{vcf,fasta,loci}\") into ch_decompressedFiles\n\n  script:\n  realReferenceFile=\"readlink ${f_reference}\"\n  if (f_reference =~ \".gz\")\n    \"\"\"\n    gzip -d -c \\$(${realReferenceFile}) > ${f_reference.baseName}\n    \"\"\"\n  else if (f_reference =~ \".tar.bz2\")\n    \"\"\"\n    tar xvjf \\$(${realReferenceFile})\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "  realReferenceFile=\"readlink ${f_reference}\"\n  if (f_reference =~ \".gz\")\n    \"\"\"\n    gzip -d -c \\$(${realReferenceFile}) > ${f_reference.baseName}\n    \"\"\"\n  else if (f_reference =~ \".tar.bz2\")\n    \"\"\"\n    tar xvjf \\$(${realReferenceFile})\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_compressedfiles"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_decompressedFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {f_reference}"
        ],
        "when": "",
        "stub": ""
    },
    "BuildBWAindexes": {
        "name_process": "BuildBWAindexes",
        "string_process": "\nprocess BuildBWAindexes {\n  tag {f_reference}\n\n  publishDir params.outDir, mode: params.publishDirMode\n\n  input:\n    file(f_reference) from ch_fastaForBWA\n\n  output:\n    file(\"*.{amb,ann,bwt,pac,sa}\") into bwaIndexes\n\n  script:\n  \"\"\"\n  bwa index ${f_reference}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  bwa index ${f_reference}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "ch_fastaForBWA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bwaIndexes"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {f_reference}",
            "publishDir params.outDir, mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildReferenceIndex": {
        "name_process": "BuildReferenceIndex",
        "string_process": "\nprocess BuildReferenceIndex {\n  tag {f_reference}\n\n  publishDir params.outDir, mode: params.publishDirMode\n\n  input:\n    file(f_reference) from ch_fastaReference\n\n  output:\n    file(\"*.dict\") into ch_referenceIndex\n\n  script:\n  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n  CreateSequenceDictionary \\\n  --REFERENCE ${f_reference} \\\n  --OUTPUT ${f_reference.baseName}.dict\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  gatk --java-options \"-Xmx${task.memory.toGiga()}g\" \\\n  CreateSequenceDictionary \\\n  --REFERENCE ${f_reference} \\\n  --OUTPUT ${f_reference.baseName}.dict\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "ch_fastaReference"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_referenceIndex"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {f_reference}",
            "publishDir params.outDir, mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildSAMToolsIndex": {
        "name_process": "BuildSAMToolsIndex",
        "string_process": "\nprocess BuildSAMToolsIndex {\n  tag {f_reference}\n\n  publishDir params.outDir, mode: params.publishDirMode\n\n  input:\n    file(f_reference) from ch_fastaForSAMTools\n\n  output:\n    file(\"*.fai\") into ch_samtoolsIndex\n\n  script:\n  \"\"\"\n  samtools faidx ${f_reference}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools faidx ${f_reference}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_fastaForSAMTools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_samtoolsIndex"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {f_reference}",
            "publishDir params.outDir, mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildVCFIndex": {
        "name_process": "BuildVCFIndex",
        "string_process": "\nprocess BuildVCFIndex {\n  tag {f_reference}\n\n  publishDir params.outDir, mode: params.publishDirMode\n\n  input:\n    file(f_reference) from ch_vcfFile\n\n  output:\n    file(\"${f_reference}.idx\") into ch_vcfIndex\n\n  script:\n  \"\"\"\n  igvtools index ${f_reference}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  igvtools index ${f_reference}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "IGVtools"
        ],
        "tools_url": [
            "https://bio.tools/igvtools"
        ],
        "tools_dico": [
            {
                "name": "IGVtools",
                "uri": "https://bio.tools/igvtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Sequence feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature table comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The igvtools utility provides a set of tools for pre-processing data files.",
                "homepage": "https://software.broadinstitute.org/software/igv/igvtools"
            }
        ],
        "inputs": [
            "ch_vcfFile"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_vcfIndex"
        ],
        "nb_outputs": 1,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {f_reference}",
            "publishDir params.outDir, mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildCache_snpEff": {
        "name_process": "BuildCache_snpEff",
        "string_process": "\nprocess BuildCache_snpEff {\n  tag {snpeffDb}\n\n  publishDir params.snpEff_cache, mode: params.publishDirMode\n\n  input:\n    val snpeffDb from Channel.value(params.genomes[params.genome].snpeffDb)\n\n  output:\n    file(\"*\")\n\n  when: params.snpEff_cache\n\n  script:\n  \"\"\"\n  snpEff download -v ${snpeffDb} -dataDir \\${PWD}\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  snpEff download -v ${snpeffDb} -dataDir \\${PWD}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {snpeffDb}",
            "publishDir params.snpEff_cache, mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "BuildCache_VEP": {
        "name_process": "BuildCache_VEP",
        "string_process": "\nprocess BuildCache_VEP {\n  tag {\"${species}_${cache_version}_${genome}\"}\n\n  publishDir \"${params.vep_cache}/${species}\", mode: params.publishDirMode\n\n  input:\n    val cache_version from Channel.value(params.genomes[params.genome].vepCacheVersion)\n\n  output:\n    file(\"*\")\n\n  when: params.vep_cache\n\n  script:\n  genome = params.genome == \"smallGRCh37\" ? \"GRCh37\" : params.genome\n  species = genome =~ \"GRCh3*\" ? \"homo_sapiens\" : \"\"\n  \"\"\"\n  vep_install \\\n    -a cf \\\n    -c . \\\n    -s ${species} \\\n    -v ${cache_version} \\\n    -y ${genome} \\\n    --CACHE_VERSION ${cache_version} \\\n    --CONVERT \\\n    --NO_HTSLIB --NO_TEST --NO_BIOPERL --NO_UPDATE\n\n  mv ${species}/* .\n  rm -rf ${species}\n  \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "  genome = params.genome == \"smallGRCh37\" ? \"GRCh37\" : params.genome\n  species = genome =~ \"GRCh3*\" ? \"homo_sapiens\" : \"\"\n  \"\"\"\n  vep_install \\\n    -a cf \\\n    -c . \\\n    -s ${species} \\\n    -v ${cache_version} \\\n    -y ${genome} \\\n    --CACHE_VERSION ${cache_version} \\\n    --CONVERT \\\n    --NO_HTSLIB --NO_TEST --NO_BIOPERL --NO_UPDATE\n\n  mv ${species}/* .\n  rm -rf ${species}\n  \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "Mgenome",
            "JSpecies"
        ],
        "tools_url": [
            "https://bio.tools/mgenome",
            "https://bio.tools/jspecies"
        ],
        "tools_dico": [
            {
                "name": "Mgenome",
                "uri": "https://bio.tools/mgenome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Designed to find the optimal trees for multiple genome rearrangement by signed reversals. The problem is modeled as: For a given collection of genomes represented by signed permutations on genes, find a tree to connect the given genomes by reversal paths such that the number of all signed reversals is minimized.",
                "homepage": "http://xungulab.com/software/mgenome/mgenome.html"
            },
            {
                "name": "JSpecies",
                "uri": "https://bio.tools/jspecies",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0797",
                            "term": "Comparative genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy to use, biologist-centric software designed to measure the probability if two genomes belonging to the same species or not.",
                "homepage": "http://www.imedea.uib-csic.es/jspecies/index.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {\"${species}_${cache_version}_${genome}\"}",
            "publishDir \"${params.vep_cache}/${species}\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    },
    "DownloadCADD": {
        "name_process": "DownloadCADD",
        "string_process": "\nprocess DownloadCADD {\n  tag {caddFile}\n\n  publishDir \"${params.cadd_cache}/${params.genome}\", mode: params.publishDirMode\n\n  input:\n    val(caddFile) from caddFileToDownload\n\n  output:\n    set file(\"*.tsv.gz\"), file(\"*.tsv.gz.tbi\")\n\n  when: params.cadd_cache\n\n  script:\n  \"\"\"\n  wget --quiet ${caddFile}\n  tabix *.tsv.gz\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  wget --quiet ${caddFile}\n  tabix *.tsv.gz\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "caddFileToDownload"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UCL-BLIC__Sarek_v2.3.FIX1",
        "directive": [
            "tag {caddFile}",
            "publishDir \"${params.cadd_cache}/${params.genome}\", mode: params.publishDirMode"
        ],
        "when": "",
        "stub": ""
    }
}