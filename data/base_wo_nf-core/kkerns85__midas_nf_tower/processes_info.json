{
    "midas": {
        "name_process": "midas",
        "string_process": "\nprocess midas {\n    container \"quay.io/fhcrc-microbiome/midas:latest\"\n    label \"mem_veryhigh\"\n    publishDir \"${params.output_folder}/${specimen}\"\n\n    input:\n    tuple val(specimen), file(\"${specimen}.R*.fastq.gz\") from fastq_ch\n    file DB from file(params.db_midas)\n\n    output:\n    file \"${specimen}.species.tar.gz\" into species_ch\n    file \"${specimen}.genes.tar.gz\" into gene_ch\n    file \"${specimen}.snps.tar.gz\" into snps_ch\n\n\"\"\"\n#!/bin/bash\nset -e\necho \"Running species summary\"\n# If the input is single-end, change the filename to match the pattern used for paired-end\nif [[ ! -s ${specimen}.R2.fastq.gz ]]; then\n    mv ${specimen}.R.fastq.gz ${specimen}.R1.fastq.gz\nfi\n# Run the same command differently, depending on whether the input is single- or paired-end\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    # Run the species abundance summary\n    run_midas.py \\\n        species \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB}\nelse\n    # Run the species abundance summary\n    run_midas.py \\\n        species \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB}\nfi\n# Run the gene abundance summary\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    echo \"Running gene summary\"\n    run_midas.py \\\n        genes \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nelse\n    echo \"Running gene summary\"\n    run_midas.py \\\n        genes \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nfi\n# Run the SNP summary\necho \"Running SNP summary\"\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    run_midas.py \\\n        snps \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nelse\n    run_midas.py \\\n        snps \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nfi\necho \"Gathering output files\"\n# Species-level results\necho \"Tarring up species results\"\ntar cvf ${specimen}.species.tar ${specimen}/species/*\ngzip ${specimen}.species.tar\n# Gene-level results\necho \"Tarring up gene results\"\ntar cvf ${specimen}.genes.tar ${specimen}/genes/*\ngzip ${specimen}.genes.tar\n# SNP-level results\necho \"Tarring up SNP results\"\ntar cvf ${specimen}.snps.tar ${specimen}/snps/*\ngzip ${specimen}.snps.tar\necho \"Done\"\n\"\"\"\n}",
        "nb_lignes_process": 97,
        "string_script": "\"\"\"\n#!/bin/bash\nset -e\necho \"Running species summary\"\n# If the input is single-end, change the filename to match the pattern used for paired-end\nif [[ ! -s ${specimen}.R2.fastq.gz ]]; then\n    mv ${specimen}.R.fastq.gz ${specimen}.R1.fastq.gz\nfi\n# Run the same command differently, depending on whether the input is single- or paired-end\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    # Run the species abundance summary\n    run_midas.py \\\n        species \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB}\nelse\n    # Run the species abundance summary\n    run_midas.py \\\n        species \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB}\nfi\n# Run the gene abundance summary\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    echo \"Running gene summary\"\n    run_midas.py \\\n        genes \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nelse\n    echo \"Running gene summary\"\n    run_midas.py \\\n        genes \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nfi\n# Run the SNP summary\necho \"Running SNP summary\"\nif [[ -s ${specimen}.R2.fastq.gz ]]; then\n    run_midas.py \\\n        snps \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -2 ${specimen}.R2.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nelse\n    run_midas.py \\\n        snps \\\n        ${specimen} \\\n        -1 ${specimen}.R1.fastq.gz \\\n        -t ${task.cpus} \\\n        -d ${DB} \\\n        --species_cov ${params.species_cov}\nfi\necho \"Gathering output files\"\n# Species-level results\necho \"Tarring up species results\"\ntar cvf ${specimen}.species.tar ${specimen}/species/*\ngzip ${specimen}.species.tar\n# Gene-level results\necho \"Tarring up gene results\"\ntar cvf ${specimen}.genes.tar ${specimen}/genes/*\ngzip ${specimen}.genes.tar\n# SNP-level results\necho \"Tarring up SNP results\"\ntar cvf ${specimen}.snps.tar ${specimen}/snps/*\ngzip ${specimen}.snps.tar\necho \"Done\"\n\"\"\"",
        "nb_lignes_script": 82,
        "language_script": "bash",
        "tools": [
            "JSpecies"
        ],
        "tools_url": [
            "https://bio.tools/jspecies"
        ],
        "tools_dico": [
            {
                "name": "JSpecies",
                "uri": "https://bio.tools/jspecies",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0797",
                            "term": "Comparative genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy to use, biologist-centric software designed to measure the probability if two genomes belonging to the same species or not.",
                "homepage": "http://www.imedea.uib-csic.es/jspecies/index.html"
            }
        ],
        "inputs": [
            "fastq_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "species_ch",
            "gene_ch",
            "snps_ch"
        ],
        "nb_outputs": 3,
        "name_workflow": "kkerns85__midas_nf_tower",
        "directive": [
            "container \"quay.io/fhcrc-microbiome/midas:latest\"",
            "label \"mem_veryhigh\"",
            "publishDir \"${params.output_folder}/${specimen}\""
        ],
        "when": "",
        "stub": ""
    },
    "midas_merge_species": {
        "name_process": "midas_merge_species",
        "string_process": "\nprocess midas_merge_species {\n    container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"\n    label \"mem_veryhigh\"\n    publishDir \"${params.output_folder}\"\n\n    input:\n    file species_tar_list from species_ch.toSortedList()\n    file DB from file(params.db_midas)\n\n    output:\n    file \"SPECIES/*\"\n\n\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${species_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.species.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging species results\"\nmerge_midas.py \\\n    species \\\n    SPECIES \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\nls -lahtr SPECIES\necho \"Compressing output files\"\nfind SPECIES -type f | xargs gzip\necho \"Done\"\n\"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${species_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.species.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging species results\"\nmerge_midas.py \\\n    species \\\n    SPECIES \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\nls -lahtr SPECIES\necho \"Compressing output files\"\nfind SPECIES -type f | xargs gzip\necho \"Done\"\n\"\"\"",
        "nb_lignes_script": 31,
        "language_script": "bash",
        "tools": [
            "JSpecies"
        ],
        "tools_url": [
            "https://bio.tools/jspecies"
        ],
        "tools_dico": [
            {
                "name": "JSpecies",
                "uri": "https://bio.tools/jspecies",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0797",
                            "term": "Comparative genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy to use, biologist-centric software designed to measure the probability if two genomes belonging to the same species or not.",
                "homepage": "http://www.imedea.uib-csic.es/jspecies/index.html"
            }
        ],
        "inputs": [
            "species_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "kkerns85__midas_nf_tower",
        "directive": [
            "container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"",
            "label \"mem_veryhigh\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "midas_merge_genes": {
        "name_process": "midas_merge_genes",
        "string_process": "\nprocess midas_merge_genes {\n    container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"\n    label \"mem_veryhigh\"\n    publishDir \"${params.output_folder}\"\n\n    input:\n    file genes_tar_list from gene_ch.toSortedList()\n    file DB from file(params.db_midas)\n\n    output:\n    file \"GENES/*\"\n\n\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${genes_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.genes.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging gene results\"\nmerge_midas.py \\\n    genes \\\n    GENES \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\nls -lahtr GENES\necho \"Compressing output files\"\nfind GENES -type f | xargs gzip\necho \"Done\"\n\"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${genes_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.genes.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging gene results\"\nmerge_midas.py \\\n    genes \\\n    GENES \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\nls -lahtr GENES\necho \"Compressing output files\"\nfind GENES -type f | xargs gzip\necho \"Done\"\n\"\"\"",
        "nb_lignes_script": 31,
        "language_script": "bash",
        "tools": [
            "Genesis"
        ],
        "tools_url": [
            "https://bio.tools/genesis_microarray"
        ],
        "tools_dico": [
            {
                "name": "Genesis",
                "uri": "https://bio.tools/genesis_microarray",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Various tools for microarray data analysis such as filters, normalization and visualization tools, distance measures as well as common clustering algorithms including hierarchical clustering, self-organizing maps, k-means, principal component analysis, and support vector machines.",
                "homepage": "http://genome.tugraz.at/genesisclient/genesisclient_description.shtml"
            }
        ],
        "inputs": [
            "gene_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "kkerns85__midas_nf_tower",
        "directive": [
            "container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"",
            "label \"mem_veryhigh\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    },
    "midas_merge_snps": {
        "name_process": "midas_merge_snps",
        "string_process": "\nprocess midas_merge_snps {\n    container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"\n    label \"mem_veryhigh\"\n    publishDir \"${params.output_folder}\"\n\n    input:\n    file snps_tar_list from snps_ch.toSortedList()\n    file DB from file(params.db_midas)\n\n    output:\n    file \"SNPS/*\"\n\n\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${snps_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.snps.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging snps results\"\nmerge_midas.py \\\n    snps \\\n    SNPS \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\ntouch SNPS/DONE\nls -lahtr SNPS\necho \"Compressing output files\"\nfind SNPS -type f | xargs gzip\necho \"Done\"\n\"\"\"\n}",
        "nb_lignes_process": 45,
        "string_script": "\"\"\"\n#!/bin/bash\nset -e\nls -lahtr\n# Keep track of the folders created while unpacking input files\ninput_string=\"\"\necho \"Unpacking all of the input files\"\nfor tarfile in ${snps_tar_list}; do\n    echo \"Making sure that \\$tarfile was downloaded correctly\"\n    [[ -s \\$tarfile ]]\n    echo \"Unpacking \\$tarfile\"\n    tar xzvf \\$tarfile\n    # Add this folder to the input string\n    input_string=\"\\$input_string,\\$( echo \\$tarfile | sed 's/.snps.tar.gz//' )\"\n    echo \"Updated input string: \\$input_string\"\ndone\n# Remove the leading comma from the input string\ninput_string=\\$( echo \\$input_string | sed 's/^,//' )\necho \"Merging snps results\"\nmerge_midas.py \\\n    snps \\\n    SNPS \\\n    -i \\$input_string \\\n    -t list \\\n    -d ${DB} \\\n    --sample_depth ${params.merge_sample_depth}\necho \"Done merging data\"\ntouch SNPS/DONE\nls -lahtr SNPS\necho \"Compressing output files\"\nfind SNPS -type f | xargs gzip\necho \"Done\"\n\"\"\"",
        "nb_lignes_script": 32,
        "language_script": "bash",
        "tools": [
            "SNPs"
        ],
        "tools_url": [
            "https://bio.tools/SNPs"
        ],
        "tools_dico": [
            {
                "name": "SNPs",
                "uri": "https://bio.tools/SNPs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3661",
                                    "term": "SNP annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide analysis of polymorphisms identified domestication-associated polymorphism desert carrying important rice grain size/weight QTL | By using SNP-Seek, you abide by the data use license stated | Query for SNPs from the 3000 genome project | - Mansueto, et al. Rice SNP-seek database update: new SNPs, indels, and queries . Nucl. Acids Res. (2017) 45 (D1): D1075-D1081. doi: 10.1093/nar/gkw1135 This paper describes new features and datasets added to SNP-Seek in 2015-2017 as well as software and database updates | This site provides Genotype, Phenotype, and Variety Information for rice (Oryza sativa L.)",
                "homepage": "http://snp-seek.irri.org/"
            }
        ],
        "inputs": [
            "snps_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "kkerns85__midas_nf_tower",
        "directive": [
            "container \"quay.io/fhcrc-microbiome/midas:v1.3.2--6\"",
            "label \"mem_veryhigh\"",
            "publishDir \"${params.output_folder}\""
        ],
        "when": "",
        "stub": ""
    }
}