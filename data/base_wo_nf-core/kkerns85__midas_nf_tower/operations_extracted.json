{
    "OPERATION_1": {
        "string": "fastq_ch = Channel.from(\n        file(\n            params.manifest\n        ).splitCsv(\n            header: true,\n            sep: \",\"\n        )\n    ).filter {\n        r -> (r.specimen != null)\n    }.ifEmpty {\n        exit 1, \"Cannot find values in the 'specimen' column: ${params.manifest}\"\n    }.filter {\n        r -> (r.R1 != null)\n    }.ifEmpty {\n        exit 1, \"Cannot find values in the 'R1' column: ${params.manifest}\"\n    }.map {\n        r -> [r[\"specimen\"], [file(r[\"R1\"])]]\n    }",
        "origin": [],
        "gives": [
            [
                "fastq_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "fastq_ch = Channel.from(\n        file(\n            params.manifest\n        ).splitCsv(\n            header: true,\n            sep: \",\"\n        )\n    ).filter {\n        r -> (r.specimen != null)\n    }.ifEmpty {\n        exit 1, \"Cannot find values in the 'specimen' column: ${params.manifest}\"\n    }.filter {\n        r -> (r.R1 != null)\n    }.ifEmpty {\n        exit 1, \"Cannot find values in the 'R1' column: ${params.manifest}\"\n    }.filter {\n        r -> (r.R2 != null)\n    }.ifEmpty {\n        exit 1, \"Cannot find values in the 'R2' column: ${params.manifest}\"\n    }.map {\n        r -> [r[\"specimen\"], [file(r[\"R1\"]), file(r[\"R2\"])]]\n    }",
        "origin": [],
        "gives": [
            [
                "fastq_ch",
                "P"
            ]
        ]
    }
}