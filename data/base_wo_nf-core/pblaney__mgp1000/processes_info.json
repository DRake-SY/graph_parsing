{
    "splitIntervalList_gatk": {
        "name_process": "splitIntervalList_gatk",
        "string_process": "\nprocess splitIntervalList_gatk {\n\t\n\tinput:\n\ttuple path(reference_genome_fasta_forSplitIntervals), path(reference_genome_fasta_index_forSplitIntervals), path(reference_genome_fasta_dict_forSplitIntervals) from reference_genome_bundle_forSplitIntervals\n\tpath gatk_bundle_wgs_interval_list\n\n\toutput:\n\tpath \"splitIntervals/*-split.interval_list\" into split_intervals mode flatten\n\n\tscript:\n\t\"\"\"\n\tgatk SplitIntervals \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--reference \"${reference_genome_fasta_forSplitIntervals}\" \\\n\t--intervals \"${gatk_bundle_wgs_interval_list}\" \\\n\t--subdivision-mode BALANCING_WITHOUT_INTERVAL_SUBDIVISION \\\n\t--extension -split.interval_list \\\n\t--scatter-count 20 \\\n\t--output splitIntervals\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\t\"\"\"\n\tgatk SplitIntervals \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--reference \"${reference_genome_fasta_forSplitIntervals}\" \\\n\t--intervals \"${gatk_bundle_wgs_interval_list}\" \\\n\t--subdivision-mode BALANCING_WITHOUT_INTERVAL_SUBDIVISION \\\n\t--extension -split.interval_list \\\n\t--scatter-count 20 \\\n\t--output splitIntervals\n\t\"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "reference_genome_bundle_forSplitIntervals",
            "gatk_bundle_wgs_interval_list"
        ],
        "nb_inputs": 2,
        "outputs": [
            "split_intervals"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "haplotypeCaller_gatk": {
        "name_process": "haplotypeCaller_gatk",
        "string_process": "\nprocess haplotypeCaller_gatk {\n\ttag \"${sample_id}.${interval_id}\"\n\n\tinput:\n\ttuple path(bam_preprocessed), path(reference_genome_fasta_forHaplotypeCaller), path(reference_genome_fasta_index_forHaplotypeCaller), path(reference_genome_fasta_dict_forHaplotypeCaller), path(interval) from input_bams_and_reference_fasta_forHaplotypeCaller.combine(split_intervals)\n\n\toutput:\n\ttuple val(sample_id), path(gvcf_per_interval_raw), path(gvcf_per_interval_raw_index) into raw_gvcfs\n\n\tscript:\n\tsample_id = \"${bam_preprocessed}\".replaceFirst(/\\.final\\..*bam/, \"\")\n\tinterval_id = \"${interval}\".replaceFirst(/-split\\.interval_list/, \"_int\")\n\tgvcf_per_interval_raw = \"${sample_id}.${interval_id}.g.vcf.gz\"\n\tgvcf_per_interval_raw_index = \"${gvcf_per_interval_raw}.tbi\"\n\t\"\"\"\n\tgatk HaplotypeCaller \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--max-alternate-alleles 3 \\\n\t--standard-min-confidence-threshold-for-calling 50 \\\n\t--emit-ref-confidence GVCF \\\n\t--reference \"${reference_genome_fasta_forHaplotypeCaller}\" \\\n\t--intervals \"${interval}\" \\\n\t--input \"${bam_preprocessed}\" \\\n\t--output \"${gvcf_per_interval_raw}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\tsample_id = \"${bam_preprocessed}\".replaceFirst(/\\.final\\..*bam/, \"\")\n\tinterval_id = \"${interval}\".replaceFirst(/-split\\.interval_list/, \"_int\")\n\tgvcf_per_interval_raw = \"${sample_id}.${interval_id}.g.vcf.gz\"\n\tgvcf_per_interval_raw_index = \"${gvcf_per_interval_raw}.tbi\"\n\t\"\"\"\n\tgatk HaplotypeCaller \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--max-alternate-alleles 3 \\\n\t--standard-min-confidence-threshold-for-calling 50 \\\n\t--emit-ref-confidence GVCF \\\n\t--reference \"${reference_genome_fasta_forHaplotypeCaller}\" \\\n\t--intervals \"${interval}\" \\\n\t--input \"${bam_preprocessed}\" \\\n\t--output \"${gvcf_per_interval_raw}\"\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "input_bams_and_reference_fasta_forHaplotypeCaller",
            "split_intervals"
        ],
        "nb_inputs": 2,
        "outputs": [
            "raw_gvcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}.${interval_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "mergeAndSortGvcfs_gatk": {
        "name_process": "mergeAndSortGvcfs_gatk",
        "string_process": "\nprocess mergeAndSortGvcfs_gatk {\n\ttag \"${sample_id}\"\n\t\n\tinput:\n\ttuple val(sample_id), path(gvcf_per_interval_raw), path(gvcf_per_interval_raw_index) from raw_gvcfs.groupTuple()\n\n\toutput:\n\tpath gvcf_merged_raw into merged_raw_gcvfs\n\tpath gvcf_merged_raw_index into merged_raw_gcvfs_indicies\n\n\tscript:\n\tgvcf_merged_raw = \"${sample_id}.g.vcf.gz\"\n\tgvcf_merged_raw_index = \"${gvcf_merged_raw}.tbi\"\n\t\"\"\"\n\tgatk SortVcf \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t${gvcf_per_interval_raw.collect { \"--INPUT $it \" }.join()} \\\n\t--OUTPUT \"${gvcf_merged_raw}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\tgvcf_merged_raw = \"${sample_id}.g.vcf.gz\"\n\tgvcf_merged_raw_index = \"${gvcf_merged_raw}.tbi\"\n\t\"\"\"\n\tgatk SortVcf \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t${gvcf_per_interval_raw.collect { \"--INPUT $it \" }.join()} \\\n\t--OUTPUT \"${gvcf_merged_raw}\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "raw_gvcfs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "merged_raw_gcvfs",
            "merged_raw_gcvfs_indicies"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "combineAllGvcfs_gatk": {
        "name_process": "combineAllGvcfs_gatk",
        "string_process": "\nprocess combineAllGvcfs_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\tpath gvcf_merged_raw from merged_raw_gcvfs.toList()\n\tpath gvcf_merged_raw_index from merged_raw_gcvfs_indicies.collect()\n\ttuple path(reference_genome_fasta_forCombineGvcfs), path(reference_genome_fasta_index_forCombineGvcfs), path(reference_genome_fasta_dict_forCombineGvcfs) from reference_genome_bundle_forCombineGvcfs\n\n\toutput:\n\ttuple path(gvcf_cohort_combined), path(gvcf_cohort_combined_index) into combined_cohort_gvcf\n\n\tscript:\n\tgvcf_cohort_combined = \"${params.cohort_name}.g.vcf.gz\"\n\tgvcf_cohort_combined_index = \"${gvcf_cohort_combined}.tbi\"\n\t\"\"\"\n\tgatk CombineGVCFs \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--reference \"${reference_genome_fasta_forCombineGvcfs}\" \\\n\t${gvcf_merged_raw.collect {\" --variant $it\" }.join()} \\\n\t--output \"${gvcf_cohort_combined}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\tgvcf_cohort_combined = \"${params.cohort_name}.g.vcf.gz\"\n\tgvcf_cohort_combined_index = \"${gvcf_cohort_combined}.tbi\"\n\t\"\"\"\n\tgatk CombineGVCFs \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--reference \"${reference_genome_fasta_forCombineGvcfs}\" \\\n\t${gvcf_merged_raw.collect {\" --variant $it\" }.join()} \\\n\t--output \"${gvcf_cohort_combined}\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "merged_raw_gcvfs",
            "merged_raw_gcvfs_indicies",
            "reference_genome_bundle_forCombineGvcfs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "combined_cohort_gvcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "jointGenotyping_gatk": {
        "name_process": "jointGenotyping_gatk",
        "string_process": "\nprocess jointGenotyping_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(gvcf_cohort_combined), path(gvcf_cohort_combined_index) from combined_cohort_gvcf\n\ttuple path(reference_genome_fasta_forJointGenotyping), path(reference_genome_fasta_index_forJointGenotyping), path(reference_genome_fasta_dict_forJointGenotyping) from reference_genome_bundle_forJointGenotyping\n\ttuple path(gatk_bundle_dbsnp138), path(gatk_bundle_dbsnp138_index) from gatk_reference_bundle_forJointGenotyping\n\n\toutput:\n\ttuple path(vcf_joint_genotyped), path(vcf_joint_genotyped_index) into joint_genotyped_vcfs\n\n\tscript:\n\tvcf_joint_genotyped = \"${params.cohort_name}.vcf.gz\"\n\tvcf_joint_genotyped_index = \"${vcf_joint_genotyped}.tbi\"\n\t\"\"\"\n\tgatk GenotypeGVCFs \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--dbsnp \"${gatk_bundle_dbsnp138}\" \\\n\t--reference \"${reference_genome_fasta_forJointGenotyping}\" \\\n\t--standard-min-confidence-threshold-for-calling 50 \\\n\t--annotation-group StandardAnnotation \\\n\t--annotation-group AS_StandardAnnotation \\\n\t--variant \"${gvcf_cohort_combined}\" \\\n\t--output \"${vcf_joint_genotyped}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\tvcf_joint_genotyped = \"${params.cohort_name}.vcf.gz\"\n\tvcf_joint_genotyped_index = \"${vcf_joint_genotyped}.tbi\"\n\t\"\"\"\n\tgatk GenotypeGVCFs \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--dbsnp \"${gatk_bundle_dbsnp138}\" \\\n\t--reference \"${reference_genome_fasta_forJointGenotyping}\" \\\n\t--standard-min-confidence-threshold-for-calling 50 \\\n\t--annotation-group StandardAnnotation \\\n\t--annotation-group AS_StandardAnnotation \\\n\t--variant \"${gvcf_cohort_combined}\" \\\n\t--output \"${vcf_joint_genotyped}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "combined_cohort_gvcf",
            "reference_genome_bundle_forJointGenotyping",
            "gatk_reference_bundle_forJointGenotyping"
        ],
        "nb_inputs": 3,
        "outputs": [
            "joint_genotyped_vcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "excessHeterozygosityHardFilter_gatk": {
        "name_process": "excessHeterozygosityHardFilter_gatk",
        "string_process": "\nprocess excessHeterozygosityHardFilter_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(vcf_joint_genotyped), path(vcf_joint_genotyped_index) from joint_genotyped_vcfs\n\n\toutput:\n\ttuple path(vcf_hard_filtered), path(vcf_hard_filtered_index) into hard_filtered_vcfs_forIndelVariantRecalibration, hard_filtered_vcfs_forSnpVariantRecalibration, hard_filtered_vcfs_forApplyVqsr\n\n\tscript:\n\tvcf_hard_filtered_marked = \"${vcf_joint_genotyped}\".replaceFirst(/\\.vcf\\.gz/, \".filtermarked.vcf.gz\")\n\tvcf_hard_filtered = \"${vcf_joint_genotyped}\".replaceFirst(/\\.vcf\\.gz/, \".filtered.vcf.gz\")\n\tvcf_hard_filtered_index = \"${vcf_hard_filtered}.tbi\"\n\t\"\"\"\n\tgatk VariantFiltration \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--filter-name ExcessHet \\\n\t--filter-expression \"ExcessHet > 54.69\" \\\n\t--variant \"${vcf_joint_genotyped}\" \\\n\t--output \"${vcf_hard_filtered_marked}\"\n\n\tgatk SelectVariants \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--exclude-filtered \\\n\t--variant \"${vcf_hard_filtered_marked}\" \\\n\t--output \"${vcf_hard_filtered}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\tvcf_hard_filtered_marked = \"${vcf_joint_genotyped}\".replaceFirst(/\\.vcf\\.gz/, \".filtermarked.vcf.gz\")\n\tvcf_hard_filtered = \"${vcf_joint_genotyped}\".replaceFirst(/\\.vcf\\.gz/, \".filtered.vcf.gz\")\n\tvcf_hard_filtered_index = \"${vcf_hard_filtered}.tbi\"\n\t\"\"\"\n\tgatk VariantFiltration \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--filter-name ExcessHet \\\n\t--filter-expression \"ExcessHet > 54.69\" \\\n\t--variant \"${vcf_joint_genotyped}\" \\\n\t--output \"${vcf_hard_filtered_marked}\"\n\n\tgatk SelectVariants \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--exclude-filtered \\\n\t--variant \"${vcf_hard_filtered_marked}\" \\\n\t--output \"${vcf_hard_filtered}\"\n\t\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "joint_genotyped_vcfs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hard_filtered_vcfs_forIndelVariantRecalibration",
            "hard_filtered_vcfs_forSnpVariantRecalibration",
            "hard_filtered_vcfs_forApplyVqsr"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "indelVariantRecalibration_gatk": {
        "name_process": "indelVariantRecalibration_gatk",
        "string_process": "\nprocess indelVariantRecalibration_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(vcf_hard_filtered), path(vcf_hard_filtered_index) from hard_filtered_vcfs_forIndelVariantRecalibration\n\ttuple path(gatk_bundle_mills_1000G), path(gatk_bundle_mills_1000G_index), path(gatk_bundle_axiom), path(gatk_bundle_axiom_index), path(gatk_bundle_dbsnp138_forIndelVariantRecalibration), path(gatk_bundle_dbsnp138_index_forIndelVariantRecalibration) from gatk_reference_bundle_forIndelVariantRecalibration\n\ttuple path(reference_genome_fasta_forIndelVariantRecalibration), path(reference_genome_fasta_index_forIndelVariantRecalibration), path(reference_genome_fasta_dict_forIndelVariantRecalibration) from reference_genome_bundle_forIndelVariantRecalibration\n\n\toutput:\n\ttuple path(indel_vqsr_table), path(indel_vqsr_table_index), path(indel_vqsr_tranches) into indel_vqsr_files\n\n\tscript:\n\tindel_vqsr_table = \"${params.cohort_name}.indel.recaldata.table\"\n\tindel_vqsr_table_index = \"${indel_vqsr_table}.idx\"\n\tindel_vqsr_tranches = \"${params.cohort_name}.indel.tranches\"\n\t\"\"\"\n\tgatk VariantRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode INDEL \\\n\t-an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum \\\n\t--max-gaussians 4 \\\n\t--trust-all-polymorphic \\\n\t--reference \"${reference_genome_fasta_forIndelVariantRecalibration}\" \\\n\t--resource:mills,known=false,training=true,truth=true,prior=12 \"${gatk_bundle_mills_1000G}\" \\\n\t--resource:axiomPoly,known=false,training=true,truth=false,prior=10 \"${gatk_bundle_axiom}\" \\\n\t--resource:dbsnp,known=true,training=false,truth=false,prior=2 \"${gatk_bundle_dbsnp138_forIndelVariantRecalibration}\" \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--output \"${indel_vqsr_table}\" \\\n\t--tranches-file \"${indel_vqsr_tranches}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\tindel_vqsr_table = \"${params.cohort_name}.indel.recaldata.table\"\n\tindel_vqsr_table_index = \"${indel_vqsr_table}.idx\"\n\tindel_vqsr_tranches = \"${params.cohort_name}.indel.tranches\"\n\t\"\"\"\n\tgatk VariantRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode INDEL \\\n\t-an QD -an DP -an FS -an SOR -an ReadPosRankSum -an MQRankSum \\\n\t--max-gaussians 4 \\\n\t--trust-all-polymorphic \\\n\t--reference \"${reference_genome_fasta_forIndelVariantRecalibration}\" \\\n\t--resource:mills,known=false,training=true,truth=true,prior=12 \"${gatk_bundle_mills_1000G}\" \\\n\t--resource:axiomPoly,known=false,training=true,truth=false,prior=10 \"${gatk_bundle_axiom}\" \\\n\t--resource:dbsnp,known=true,training=false,truth=false,prior=2 \"${gatk_bundle_dbsnp138_forIndelVariantRecalibration}\" \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--output \"${indel_vqsr_table}\" \\\n\t--tranches-file \"${indel_vqsr_tranches}\"\n\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "hard_filtered_vcfs_forIndelVariantRecalibration",
            "gatk_reference_bundle_forIndelVariantRecalibration",
            "reference_genome_bundle_forIndelVariantRecalibration"
        ],
        "nb_inputs": 3,
        "outputs": [
            "indel_vqsr_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "snpVariantRecalibration_gatk": {
        "name_process": "snpVariantRecalibration_gatk",
        "string_process": "\nprocess snpVariantRecalibration_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(vcf_hard_filtered), path(vcf_hard_filtered_index) from hard_filtered_vcfs_forSnpVariantRecalibration\n\ttuple path(gatk_bundle_hapmap), path(gatk_bundle_hapmap_index), path(gatk_bundle_1000G_omni), path(gatk_bundle_1000G_omni_index), path(gatk_bundle_1000G_snps), path(gatk_bundle_1000G_snps_index), path(gatk_bundle_dbsnp138_forSnpVariantRecalibration), path(gatk_bundle_dbsnp138_index_forSnpVariantRecalibration) from gatk_reference_bundle_forSnpVariantRecalibration\n\ttuple path(reference_genome_fasta_forSnpVariantRecalibration), path(reference_genome_fasta_index_forSnpVariantRecalibration), path(reference_genome_fasta_dict_forSnpVariantRecalibration) from reference_genome_bundle_forSnpVariantRecalibration\n\n\toutput:\n\ttuple path(snp_vqsr_table), path(snp_vqsr_table_index), path(snp_vqsr_tranches) into snp_vqsr_files\n\n\tscript:\n\tsnp_vqsr_table = \"${params.cohort_name}.snp.recaldata.table\"\n\tsnp_vqsr_table_index = \"${snp_vqsr_table}.idx\"\n\tsnp_vqsr_tranches = \"${params.cohort_name}.snp.tranches\"\t\n\t\"\"\"\n\tgatk VariantRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode SNP \\\n\t-an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP \\\n\t--max-gaussians 6 \\\n\t--trust-all-polymorphic \\\n\t--reference \"${reference_genome_fasta_forSnpVariantRecalibration}\" \\\n\t--resource:hapmap,known=false,training=true,truth=true,prior=15 \"${gatk_bundle_hapmap}\" \\\n\t--resource:omni,known=false,training=true,truth=true,prior=12 \"${gatk_bundle_1000G_omni}\" \\\n\t--resource:1000G,known=false,training=true,truth=false,prior=10 \"${gatk_bundle_1000G_snps}\" \\\n\t--resource:dbsnp,known=true,training=false,truth=false,prior=7 \"${gatk_bundle_dbsnp138_forSnpVariantRecalibration}\" \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--output \"${snp_vqsr_table}\" \\\n\t--tranches-file \"${snp_vqsr_tranches}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\tsnp_vqsr_table = \"${params.cohort_name}.snp.recaldata.table\"\n\tsnp_vqsr_table_index = \"${snp_vqsr_table}.idx\"\n\tsnp_vqsr_tranches = \"${params.cohort_name}.snp.tranches\"\t\n\t\"\"\"\n\tgatk VariantRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode SNP \\\n\t-an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP \\\n\t--max-gaussians 6 \\\n\t--trust-all-polymorphic \\\n\t--reference \"${reference_genome_fasta_forSnpVariantRecalibration}\" \\\n\t--resource:hapmap,known=false,training=true,truth=true,prior=15 \"${gatk_bundle_hapmap}\" \\\n\t--resource:omni,known=false,training=true,truth=true,prior=12 \"${gatk_bundle_1000G_omni}\" \\\n\t--resource:1000G,known=false,training=true,truth=false,prior=10 \"${gatk_bundle_1000G_snps}\" \\\n\t--resource:dbsnp,known=true,training=false,truth=false,prior=7 \"${gatk_bundle_dbsnp138_forSnpVariantRecalibration}\" \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--output \"${snp_vqsr_table}\" \\\n\t--tranches-file \"${snp_vqsr_tranches}\"\n\t\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "hard_filtered_vcfs_forSnpVariantRecalibration",
            "gatk_reference_bundle_forSnpVariantRecalibration",
            "reference_genome_bundle_forSnpVariantRecalibration"
        ],
        "nb_inputs": 3,
        "outputs": [
            "snp_vqsr_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "applyIndelAndSnpVqsr_gatk": {
        "name_process": "applyIndelAndSnpVqsr_gatk",
        "string_process": "\nprocess applyIndelAndSnpVqsr_gatk {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(vcf_hard_filtered), path(vcf_hard_filtered_index) from hard_filtered_vcfs_forApplyVqsr\n\ttuple path(indel_vqsr_table), path(indel_vqsr_table_index), path(indel_vqsr_tranches) from indel_vqsr_files\n\ttuple path(snp_vqsr_table), path(snp_vqsr_table_index), path(snp_vqsr_tranches) from snp_vqsr_files\n\n\toutput:\n\ttuple path(final_vqsr_germline_vcf), path(final_vqsr_germline_vcf_index) into vqsr_germline_vcfs\n\n\tscript:\n\tintermediate_vqsr_germline_vcf = \"${vcf_hard_filtered}\".replaceFirst(/\\.filtered\\.vcf\\.gz/, \".intermediate.vqsr.vcf.gz\")\n\tfinal_vqsr_germline_vcf = \"${vcf_hard_filtered}\".replaceFirst(/\\.filtered\\.vcf\\.gz/, \".final.vqsr.vcf.gz\")\n\tfinal_vqsr_germline_vcf_index = \"${final_vqsr_germline_vcf}.tbi\"\n\t\"\"\"\n\tgatk ApplyVQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode INDEL \\\n\t--truth-sensitivity-filter-level 99.0 \\\n\t--exclude-filtered \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--recal-file \"${indel_vqsr_table}\" \\\n\t--tranches-file \"${indel_vqsr_tranches}\" \\\n\t--create-output-variant-index true \\\n\t--output \"${intermediate_vqsr_germline_vcf}\"\n\n\tgatk ApplyVQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode SNP \\\n\t--truth-sensitivity-filter-level 99.5 \\\n\t--exclude-filtered \\\n\t--variant \"${intermediate_vqsr_germline_vcf}\" \\\n\t--recal-file \"${snp_vqsr_table}\" \\\n\t--tranches-file \"${snp_vqsr_tranches}\" \\\n\t--create-output-variant-index true \\\n\t--output \"${final_vqsr_germline_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "\tintermediate_vqsr_germline_vcf = \"${vcf_hard_filtered}\".replaceFirst(/\\.filtered\\.vcf\\.gz/, \".intermediate.vqsr.vcf.gz\")\n\tfinal_vqsr_germline_vcf = \"${vcf_hard_filtered}\".replaceFirst(/\\.filtered\\.vcf\\.gz/, \".final.vqsr.vcf.gz\")\n\tfinal_vqsr_germline_vcf_index = \"${final_vqsr_germline_vcf}.tbi\"\n\t\"\"\"\n\tgatk ApplyVQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode INDEL \\\n\t--truth-sensitivity-filter-level 99.0 \\\n\t--exclude-filtered \\\n\t--variant \"${vcf_hard_filtered}\" \\\n\t--recal-file \"${indel_vqsr_table}\" \\\n\t--tranches-file \"${indel_vqsr_tranches}\" \\\n\t--create-output-variant-index true \\\n\t--output \"${intermediate_vqsr_germline_vcf}\"\n\n\tgatk ApplyVQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--mode SNP \\\n\t--truth-sensitivity-filter-level 99.5 \\\n\t--exclude-filtered \\\n\t--variant \"${intermediate_vqsr_germline_vcf}\" \\\n\t--recal-file \"${snp_vqsr_table}\" \\\n\t--tranches-file \"${snp_vqsr_tranches}\" \\\n\t--create-output-variant-index true \\\n\t--output \"${final_vqsr_germline_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "hard_filtered_vcfs_forApplyVqsr",
            "indel_vqsr_files",
            "snp_vqsr_files"
        ],
        "nb_inputs": 3,
        "outputs": [
            "vqsr_germline_vcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "splitMultiallelicAndLeftNormalizeVcf_bcftools": {
        "name_process": "splitMultiallelicAndLeftNormalizeVcf_bcftools",
        "string_process": "\nprocess splitMultiallelicAndLeftNormalizeVcf_bcftools {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(final_vqsr_germline_vcf), path(final_vqsr_germline_vcf_index) from vqsr_germline_vcfs\n\ttuple path(reference_genome_fasta_forSplitAndNorm), path(reference_genome_fasta_index_forSplitAndNorm), path(reference_genome_fasta_dict_forSplitAndNorm) from reference_genome_bundle_forSplitAndNorm\n\n\toutput:\n\ttuple path(final_germline_vcf), path(final_germline_vcf_index) into final_germline_vcf_forAnnotation, final_germline_vcf_forAdmixture\n\tpath multiallelics_stats\n\tpath realign_normalize_stats\n\n\tscript:\n\tfinal_germline_vcf = \"${final_vqsr_germline_vcf}\".replaceFirst(/\\.final\\.vqsr\\.vcf\\.gz/, \".germline.vcf.gz\")\n\tfinal_germline_vcf_index = \"${final_germline_vcf}.tbi\"\n\tmultiallelics_stats = \"${params.cohort_name}.multiallelicsstats.txt\"\n\trealign_normalize_stats = \"${params.cohort_name}.realignnormalizestats.txt\"\n\t\"\"\"\n\tzcat \"${final_vqsr_germline_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -both \\\n\t--output-type z \\\n\t- 2>\"${multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forSplitAndNorm}\" \\\n\t--output-type z \\\n\t- 2>\"${realign_normalize_stats}\" \\\n\t--output \"${final_germline_vcf}\"\n\n\ttabix \"${final_germline_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tfinal_germline_vcf = \"${final_vqsr_germline_vcf}\".replaceFirst(/\\.final\\.vqsr\\.vcf\\.gz/, \".germline.vcf.gz\")\n\tfinal_germline_vcf_index = \"${final_germline_vcf}.tbi\"\n\tmultiallelics_stats = \"${params.cohort_name}.multiallelicsstats.txt\"\n\trealign_normalize_stats = \"${params.cohort_name}.realignnormalizestats.txt\"\n\t\"\"\"\n\tzcat \"${final_vqsr_germline_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -both \\\n\t--output-type z \\\n\t- 2>\"${multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forSplitAndNorm}\" \\\n\t--output-type z \\\n\t- 2>\"${realign_normalize_stats}\" \\\n\t--output \"${final_germline_vcf}\"\n\n\ttabix \"${final_germline_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "vqsr_germline_vcfs",
            "reference_genome_bundle_forSplitAndNorm"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_germline_vcf_forAnnotation",
            "final_germline_vcf_forAdmixture",
            "multiallelics_stats",
            "realign_normalize_stats"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "downloadVepAnnotationReferences_vep": {
        "name_process": "downloadVepAnnotationReferences_vep",
        "string_process": "\nprocess downloadVepAnnotationReferences_vep {\n\tpublishDir \"references/hg38\", mode: 'copy'\n\n\toutput:\n\tpath cached_ref_dir_vep into vep_ref_dir_fromProcess\n\n\twhen:\n\tparams.vep_ref_cached == \"no\"\n\n\tscript:\n\tcached_ref_dir_vep = \"homo_sapiens_vep_101_GRCh38\"\n\t\"\"\"\n\tcurl -O ftp://ftp.ensembl.org/pub/release-101/variation/indexed_vep_cache/homo_sapiens_vep_101_GRCh38.tar.gz && \\\n\tmkdir -p \"${cached_ref_dir_vep}\" && \\\n\tmv homo_sapiens_vep_101_GRCh38.tar.gz \"${cached_ref_dir_vep}/\" && \\\n\tcd \"${cached_ref_dir_vep}/\" && \\\n\ttar xzf homo_sapiens_vep_101_GRCh38.tar.gz && \\\n\trm homo_sapiens_vep_101_GRCh38.tar.gz\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\tcached_ref_dir_vep = \"homo_sapiens_vep_101_GRCh38\"\n\t\"\"\"\n\tcurl -O ftp://ftp.ensembl.org/pub/release-101/variation/indexed_vep_cache/homo_sapiens_vep_101_GRCh38.tar.gz && \\\n\tmkdir -p \"${cached_ref_dir_vep}\" && \\\n\tmv homo_sapiens_vep_101_GRCh38.tar.gz \"${cached_ref_dir_vep}/\" && \\\n\tcd \"${cached_ref_dir_vep}/\" && \\\n\ttar xzf homo_sapiens_vep_101_GRCh38.tar.gz && \\\n\trm homo_sapiens_vep_101_GRCh38.tar.gz\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "vep_ref_dir_fromProcess"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"references/hg38\", mode: 'copy'"
        ],
        "when": "params.vep_ref_cached == \"no\"",
        "stub": ""
    },
    "annotateGermlineVcf_vep": {
        "name_process": "annotateGermlineVcf_vep",
        "string_process": "\nprocess annotateGermlineVcf_vep {\n\tpublishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy'\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(final_germline_vcf), path(final_germline_vcf_index) from final_germline_vcf_forAnnotation\n\tpath cached_ref_dir_vep from vep_ref_dir\n\ttuple path(reference_genome_fasta_forAnnotation), path(reference_genome_fasta_index_forAnnotation), path(reference_genome_fasta_dict_forAnnotation) from reference_genome_bundle_forAnnotation\n\n\toutput:\n\tpath final_annotated_germline_vcf\n\tpath annotation_summary\n\n\tscript:\n\tfinal_annotated_germline_vcf = \"${final_germline_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".annotated.vcf.gz\")\n\tannotation_summary = \"${final_germline_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".vep.summary.html\")\n\t\"\"\"\n\tvep \\\n\t--offline \\\n\t--cache \\\n\t--dir \"${cached_ref_dir_vep}\" \\\n\t--assembly GRCh38 \\\n\t--fasta \"${reference_genome_fasta_forAnnotation}\" \\\n\t--input_file \"${final_germline_vcf}\" \\\n\t--format vcf \\\n\t--hgvs \\\n\t--hgvsg \\\n\t--protein \\\n\t--symbol \\\n\t--ccds \\\n\t--canonical \\\n\t--biotype \\\n\t--sift b \\\n\t--polyphen b \\\n\t--stats_file \"${annotation_summary}\" \\\n\t--output_file \"${final_annotated_germline_vcf}\" \\\n\t--compress_output bgzip \\\n\t--vcf\n\t\"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "\tfinal_annotated_germline_vcf = \"${final_germline_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".annotated.vcf.gz\")\n\tannotation_summary = \"${final_germline_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".vep.summary.html\")\n\t\"\"\"\n\tvep \\\n\t--offline \\\n\t--cache \\\n\t--dir \"${cached_ref_dir_vep}\" \\\n\t--assembly GRCh38 \\\n\t--fasta \"${reference_genome_fasta_forAnnotation}\" \\\n\t--input_file \"${final_germline_vcf}\" \\\n\t--format vcf \\\n\t--hgvs \\\n\t--hgvsg \\\n\t--protein \\\n\t--symbol \\\n\t--ccds \\\n\t--canonical \\\n\t--biotype \\\n\t--sift b \\\n\t--polyphen b \\\n\t--stats_file \"${annotation_summary}\" \\\n\t--output_file \"${final_annotated_germline_vcf}\" \\\n\t--compress_output bgzip \\\n\t--vcf\n\t\"\"\"",
        "nb_lignes_script": 24,
        "language_script": "bash",
        "tools": [
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [
            "final_germline_vcf_forAnnotation",
            "vep_ref_dir",
            "reference_genome_bundle_forAnnotation"
        ],
        "nb_inputs": 3,
        "outputs": [
            "final_annotated_germline_vcf",
            "annotation_summary"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy'",
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "referenceVcfPrep_bcftools": {
        "name_process": "referenceVcfPrep_bcftools",
        "string_process": "\nprocess referenceVcfPrep_bcftools {\n\tpublishDir \"references/hg38\", mode: 'copy'\n\n\tinput:\n\tpath per_chromosome_ref_vcf from reference_vcf_1000G_per_chromosome\n\tpath per_chromosome_ref_vcf_index from reference_vcf_1000G_per_chromosome_index.toList()\n\tpath chr_name_conversion_map from reference_vcf_1000G_chr_name_conversion_map\n\n\toutput:\n\ttuple path(whole_genome_ref_vcf), path(whole_genome_ref_vcf_index) into reference_vcf_1000G_fromProcess\n\n\twhen:\n\tparams.ref_vcf_concatenated == \"no\"\n\n\tscript:\n\twhole_genome_ref_vcf = \"ALL.wgs.shapeit2_integrated_snvindels_v2a_27022019.GRCh38.phased.vcf.gz\"\n\twhole_genome_ref_vcf_index = \"ALL.wgs.shapeit2_integrated_snvindels_v2a_27022019.GRCh38.phased.vcf.gz.tbi\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t${per_chromosome_ref_vcf.collect { \"$it \"}.join()} \\\n\t| \\\n\tbcftools annotate \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--rename-chrs \"${chr_name_conversion_map}\" \\\n\t- > \"${whole_genome_ref_vcf}\"\n\n\ttabix \"${whole_genome_ref_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\twhole_genome_ref_vcf = \"ALL.wgs.shapeit2_integrated_snvindels_v2a_27022019.GRCh38.phased.vcf.gz\"\n\twhole_genome_ref_vcf_index = \"ALL.wgs.shapeit2_integrated_snvindels_v2a_27022019.GRCh38.phased.vcf.gz.tbi\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t${per_chromosome_ref_vcf.collect { \"$it \"}.join()} \\\n\t| \\\n\tbcftools annotate \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--rename-chrs \"${chr_name_conversion_map}\" \\\n\t- > \"${whole_genome_ref_vcf}\"\n\n\ttabix \"${whole_genome_ref_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "reference_vcf_1000G_per_chromosome",
            "reference_vcf_1000G_per_chromosome_index",
            "reference_vcf_1000G_chr_name_conversion_map"
        ],
        "nb_inputs": 3,
        "outputs": [
            "reference_vcf_1000G_fromProcess"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"references/hg38\", mode: 'copy'"
        ],
        "when": "params.ref_vcf_concatenated == \"no\"",
        "stub": ""
    },
    "mergeCohortAndReferenceVcf_bcftools": {
        "name_process": "mergeCohortAndReferenceVcf_bcftools",
        "string_process": "\nprocess mergeCohortAndReferenceVcf_bcftools {\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple path(vcf_germline_final), path(vcf_germline_final_index) from final_germline_vcf_forAdmixture\n\ttuple path(whole_genome_ref_vcf), path(whole_genome_ref_vcf_index) from reference_vcf_1000G\n\n\toutput:\n\tpath sample_ref_merged_vcf into merged_unfiltered_vcf\n\n\tscript:\n\tsample_ref_merged_vcf = \"${params.cohort_name}.refmerged.vcf.gz\"\n\tvcf_germline_final_gt_only = \"${vcf_germline_final}\".replaceFirst(/\\.germline\\.vcf\\.gz/, \".germline.gto.vcf.gz\")\n\t\"\"\"\n\tbcftools annotate \\\n\t--threads ${task.cpus} \\\n\t--remove FORMAT \\\n\t--output-type z \\\n\t--output \"${vcf_germline_final_gt_only}\" \\\n\t\"${vcf_germline_final}\"\n\n\ttabix \"${vcf_germline_final_gt_only}\"\n\n\tbcftools merge \\\n\t--threads ${task.cpus} \\\n\t--merge none \\\n\t--missing-to-ref \\\n\t--output-type z \\\n\t--output \"${sample_ref_merged_vcf}\" \\\n\t\"${vcf_germline_final_gt_only}\" \"${whole_genome_ref_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\tsample_ref_merged_vcf = \"${params.cohort_name}.refmerged.vcf.gz\"\n\tvcf_germline_final_gt_only = \"${vcf_germline_final}\".replaceFirst(/\\.germline\\.vcf\\.gz/, \".germline.gto.vcf.gz\")\n\t\"\"\"\n\tbcftools annotate \\\n\t--threads ${task.cpus} \\\n\t--remove FORMAT \\\n\t--output-type z \\\n\t--output \"${vcf_germline_final_gt_only}\" \\\n\t\"${vcf_germline_final}\"\n\n\ttabix \"${vcf_germline_final_gt_only}\"\n\n\tbcftools merge \\\n\t--threads ${task.cpus} \\\n\t--merge none \\\n\t--missing-to-ref \\\n\t--output-type z \\\n\t--output \"${sample_ref_merged_vcf}\" \\\n\t\"${vcf_germline_final_gt_only}\" \"${whole_genome_ref_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "final_germline_vcf_forAdmixture",
            "reference_vcf_1000G"
        ],
        "nb_inputs": 2,
        "outputs": [
            "merged_unfiltered_vcf"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "hardFilterCohortReferenceMergedVcf_vcftools": {
        "name_process": "hardFilterCohortReferenceMergedVcf_vcftools",
        "string_process": "\nprocess hardFilterCohortReferenceMergedVcf_vcftools {\n\tpublishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy', pattern: '*.{stats.txt}'\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\tpath sample_ref_merged_vcf from merged_unfiltered_vcf\n\n\toutput:\n\ttuple val(hard_filtered_plink_file_prefix), path(hard_filtered_plink_ped_file), path(hard_filtered_plink_map_file) into hard_filtered_refmerged_plink_files\n\tpath hard_filtered_stats_file\n\n\tscript:\n\thard_filtered_plink_file_prefix = \"${params.cohort_name}.hardfiltered.refmerged\"\n\thard_filtered_plink_ped_file = \"${hard_filtered_plink_file_prefix}.ped\"\n\thard_filtered_plink_map_file = \"${hard_filtered_plink_file_prefix}.map\"\n\thard_filtered_stats_file = \"${hard_filtered_plink_file_prefix}.stats.txt\"\n\t\"\"\"\n\tvcftools \\\n\t--gzvcf \"${sample_ref_merged_vcf}\" \\\n\t--thin 2000 \\\n\t--min-alleles 2 \\\n\t--max-alleles 2 \\\n\t--non-ref-ac 2 \\\n\t--max-missing 1.0 \\\n\t--plink \\\n\t--temp . \\\n\t--out \"${hard_filtered_plink_file_prefix}\" \\\n\t2>\"${hard_filtered_stats_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\thard_filtered_plink_file_prefix = \"${params.cohort_name}.hardfiltered.refmerged\"\n\thard_filtered_plink_ped_file = \"${hard_filtered_plink_file_prefix}.ped\"\n\thard_filtered_plink_map_file = \"${hard_filtered_plink_file_prefix}.map\"\n\thard_filtered_stats_file = \"${hard_filtered_plink_file_prefix}.stats.txt\"\n\t\"\"\"\n\tvcftools \\\n\t--gzvcf \"${sample_ref_merged_vcf}\" \\\n\t--thin 2000 \\\n\t--min-alleles 2 \\\n\t--max-alleles 2 \\\n\t--non-ref-ac 2 \\\n\t--max-missing 1.0 \\\n\t--plink \\\n\t--temp . \\\n\t--out \"${hard_filtered_plink_file_prefix}\" \\\n\t2>\"${hard_filtered_stats_file}\"\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "merged_unfiltered_vcf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "hard_filtered_refmerged_plink_files",
            "hard_filtered_stats_file"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy', pattern: '*.{stats.txt}'",
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "filterPlinkFilesForAdmixture_plink": {
        "name_process": "filterPlinkFilesForAdmixture_plink",
        "string_process": "\nprocess filterPlinkFilesForAdmixture_plink {\n\tpublishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy', pattern: '*.{txt,fam}'\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple val(hard_filtered_plink_file_prefix), path(hard_filtered_plink_ped_file), path(hard_filtered_plink_map_file) from hard_filtered_refmerged_plink_files\n\n\toutput:\n\ttuple val(pruned_filtered_plink_file_prefix), path(pruned_filtered_plink_bed_file), path(pruned_filtered_plink_bim_file), path(pruned_filtered_plink_fam_file) into pruned_filtered_refmerged_plink_files\n\tpath maf_gt_filtered_plink_stats\n\tpath pruned_filtered_plink_stats\n\n\tscript:\n\tmaf_gt_filtered_plink_file_prefix = \"${params.cohort_name}.maf.gt.filtered.refmerged\"\n\tmaf_gt_filtered_plink_stats = \"${maf_gt_filtered_plink_file_prefix}.stats.txt\"\n\tpruned_filtered_plink_file_prefix = \"${params.cohort_name}.pruned.maf.gt.filtered.refmerged\"\n\tpruned_filtered_plink_bed_file = \"${pruned_filtered_plink_file_prefix}.bed\"\n\tpruned_filtered_plink_bim_file = \"${pruned_filtered_plink_file_prefix}.bim\"\n\tpruned_filtered_plink_fam_file = \"${pruned_filtered_plink_file_prefix}.fam\"\n\tpruned_filtered_plink_stats = \"${pruned_filtered_plink_file_prefix}.stats.txt\"\n\t\"\"\"\n\tplink \\\n\t--threads ${task.cpus} \\\n\t--file \"${hard_filtered_plink_file_prefix}\" \\\n\t--out \"${maf_gt_filtered_plink_file_prefix}\" \\\n\t--make-bed \\\n\t--maf 0.05 \\\n\t--geno 0.1 \\\n\t--indep-pairwise 50 10 0.5 \\\n\t\n\tmv \"${maf_gt_filtered_plink_file_prefix}.log\" \"${maf_gt_filtered_plink_stats}\"\n\n\tplink \\\n\t--threads ${task.cpus} \\\n\t--bfile \"${maf_gt_filtered_plink_file_prefix}\" \\\n\t--extract \"${maf_gt_filtered_plink_file_prefix}.prune.in\" \\\n\t--make-bed \\\n\t--out \"${pruned_filtered_plink_file_prefix}\" \\\n\t\n\tmv \"${pruned_filtered_plink_file_prefix}.log\" \"${pruned_filtered_plink_stats}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\tmaf_gt_filtered_plink_file_prefix = \"${params.cohort_name}.maf.gt.filtered.refmerged\"\n\tmaf_gt_filtered_plink_stats = \"${maf_gt_filtered_plink_file_prefix}.stats.txt\"\n\tpruned_filtered_plink_file_prefix = \"${params.cohort_name}.pruned.maf.gt.filtered.refmerged\"\n\tpruned_filtered_plink_bed_file = \"${pruned_filtered_plink_file_prefix}.bed\"\n\tpruned_filtered_plink_bim_file = \"${pruned_filtered_plink_file_prefix}.bim\"\n\tpruned_filtered_plink_fam_file = \"${pruned_filtered_plink_file_prefix}.fam\"\n\tpruned_filtered_plink_stats = \"${pruned_filtered_plink_file_prefix}.stats.txt\"\n\t\"\"\"\n\tplink \\\n\t--threads ${task.cpus} \\\n\t--file \"${hard_filtered_plink_file_prefix}\" \\\n\t--out \"${maf_gt_filtered_plink_file_prefix}\" \\\n\t--make-bed \\\n\t--maf 0.05 \\\n\t--geno 0.1 \\\n\t--indep-pairwise 50 10 0.5 \\\n\t\n\tmv \"${maf_gt_filtered_plink_file_prefix}.log\" \"${maf_gt_filtered_plink_stats}\"\n\n\tplink \\\n\t--threads ${task.cpus} \\\n\t--bfile \"${maf_gt_filtered_plink_file_prefix}\" \\\n\t--extract \"${maf_gt_filtered_plink_file_prefix}.prune.in\" \\\n\t--make-bed \\\n\t--out \"${pruned_filtered_plink_file_prefix}\" \\\n\t\n\tmv \"${pruned_filtered_plink_file_prefix}.log\" \"${pruned_filtered_plink_stats}\"\n\t\"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "hard_filtered_refmerged_plink_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pruned_filtered_refmerged_plink_files",
            "maf_gt_filtered_plink_stats",
            "pruned_filtered_plink_stats"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy', pattern: '*.{txt,fam}'",
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "ancestryEstimation_admixture": {
        "name_process": "ancestryEstimation_admixture",
        "string_process": "\nprocess ancestryEstimation_admixture {\n\tpublishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy'\n\ttag \"${params.cohort_name}\"\n\n\tinput:\n\ttuple val(pruned_filtered_plink_file_prefix), path(pruned_filtered_plink_bed_file), path(pruned_filtered_plink_bim_file), path(pruned_filtered_plink_fam_file) from pruned_filtered_refmerged_plink_files\n\tpath known_ancestry_file_ref_vcf from reference_vcf_1000G_known_ancestry\n\n\toutput:\n\tpath admixture_supervised_analysis_pop_file\n\tpath admixture_ancestry_fractions\n\tpath admixture_allele_frequencies\n\tpath admixture_standard_error\n\n\tscript:\n\tancestry_groups = 26\n\tadmixture_supervised_analysis_pop_file = \"${pruned_filtered_plink_file_prefix}.pop\"\n\tadmixture_ancestry_fractions = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.Q\"\n\tadmixture_allele_frequencies = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.P\"\n\tadmixture_standard_error = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.Q_se\"\n\t\"\"\"\n\tcohort_pop_file_creator.sh \\\n\t\"${pruned_filtered_plink_file_prefix}.fam\" \\\n\t\"${known_ancestry_file_ref_vcf}\" \\\n\t\"${admixture_supervised_analysis_pop_file}\"\n\n\tadmixture \\\n\t-j${task.cpus}\\\n\t-B200 \\\n\t--supervised \\\n\t--haploid=\"male:23\" \\\n\t\"${pruned_filtered_plink_file_prefix}.bed\" \\\n\t\"${ancestry_groups}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "\tancestry_groups = 26\n\tadmixture_supervised_analysis_pop_file = \"${pruned_filtered_plink_file_prefix}.pop\"\n\tadmixture_ancestry_fractions = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.Q\"\n\tadmixture_allele_frequencies = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.P\"\n\tadmixture_standard_error = \"${pruned_filtered_plink_file_prefix}.${ancestry_groups}.Q_se\"\n\t\"\"\"\n\tcohort_pop_file_creator.sh \\\n\t\"${pruned_filtered_plink_file_prefix}.fam\" \\\n\t\"${known_ancestry_file_ref_vcf}\" \\\n\t\"${admixture_supervised_analysis_pop_file}\"\n\n\tadmixture \\\n\t-j${task.cpus}\\\n\t-B200 \\\n\t--supervised \\\n\t--haploid=\"male:23\" \\\n\t\"${pruned_filtered_plink_file_prefix}.bed\" \\\n\t\"${ancestry_groups}\"\n\t\"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "Admixture"
        ],
        "tools_url": [
            "https://bio.tools/admixture"
        ],
        "tools_dico": [
            {
                "name": "Admixture",
                "uri": "https://bio.tools/admixture",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Maximum likelihood estimation of individual ancestries from multilocus SNP genotype datasets. It uses the same statistical model as STRUCTURE but calculates estimates using a fast numerical optimization algorithm.",
                "homepage": "http://software.genetics.ucla.edu/admixture/"
            }
        ],
        "inputs": [
            "pruned_filtered_refmerged_plink_files",
            "reference_vcf_1000G_known_ancestry"
        ],
        "nb_inputs": 2,
        "outputs": [
            "admixture_supervised_analysis_pop_file",
            "admixture_ancestry_fractions",
            "admixture_allele_frequencies",
            "admixture_standard_error"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/germline/${params.cohort_name}\", mode: 'copy'",
            "tag \"${params.cohort_name}\""
        ],
        "when": "",
        "stub": ""
    },
    "identifySampleSex_allelecount": {
        "name_process": "identifySampleSex_allelecount",
        "string_process": "\nprocess identifySampleSex_allelecount {\n\tpublishDir \"${params.output_dir}/somatic/sexOfSamples\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_index_forAlleleCount), path(sex_identification_loci) from tumor_normal_pair_forAlleleCount.combine(ref_index_and_sex_ident_loci)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index) into bams_forVarscanBamReadcount\n\ttuple val(tumor_normal_sample_id), path(sample_sex) into sex_of_sample_forControlFreecCalling\n\ttuple val(tumor_normal_sample_id), path(tumor_bam) into bam_forCopycat\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(sample_sex) into bams_and_sex_of_sample_forAscatNgs\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index) into bams_forConsensusSnvMpileup\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index) into bams_forConsensusIndelMpileup\n\ttuple val(tumor_normal_sample_id), path(sample_sex) into sex_of_sample_forConsensusCnvTransform\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index) into bam_forConsensusSvFpFilter\n\ttuple val(tumor_normal_sample_id), path(sample_sex) into allelecount_output_forConsensusMetadata\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tsex_loci_allele_counts = \"${tumor_normal_sample_id}.sexloci.txt\"\n\tsample_sex = \"${tumor_normal_sample_id}.sexident.txt\"\n\t\"\"\"\n\talleleCounter \\\n\t--loci-file \"${sex_identification_loci}\" \\\n\t--hts-file \"${normal_bam}\" \\\n\t--ref-file \"${reference_genome_fasta_index_forAlleleCount}\" \\\n\t--output-file \"${sex_loci_allele_counts}\"\n\n\tsample_sex_determinator.sh \"${sex_loci_allele_counts}\" > \"${sample_sex}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tsex_loci_allele_counts = \"${tumor_normal_sample_id}.sexloci.txt\"\n\tsample_sex = \"${tumor_normal_sample_id}.sexident.txt\"\n\t\"\"\"\n\talleleCounter \\\n\t--loci-file \"${sex_identification_loci}\" \\\n\t--hts-file \"${normal_bam}\" \\\n\t--ref-file \"${reference_genome_fasta_index_forAlleleCount}\" \\\n\t--output-file \"${sex_loci_allele_counts}\"\n\n\tsample_sex_determinator.sh \"${sex_loci_allele_counts}\" > \"${sample_sex}\"\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tumor_normal_pair_forAlleleCount",
            "ref_index_and_sex_ident_loci"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bams_forVarscanBamReadcount",
            "sex_of_sample_forControlFreecCalling",
            "bam_forCopycat",
            "bams_and_sex_of_sample_forAscatNgs",
            "bams_forConsensusSnvMpileup",
            "bams_forConsensusIndelMpileup",
            "sex_of_sample_forConsensusCnvTransform",
            "bam_forConsensusSvFpFilter",
            "allelecount_output_forConsensusMetadata"
        ],
        "nb_outputs": 9,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/sexOfSamples\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "telomereLengthEstimation_telomerecat": {
        "name_process": "telomereLengthEstimation_telomerecat",
        "string_process": "\nprocess telomereLengthEstimation_telomerecat {\n    publishDir \"${params.output_dir}/somatic/telomerecat\", mode: 'copy', pattern: '*.{csv}'\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index) from tumor_normal_pair_forTelomerecat\n\n    output:\n    path normal_telomere_estimates\n    path tumor_telomere_estimates\n\n    when:\n    params.telomerecat == \"on\"\n\n    script:\n    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    normal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    tumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n    normal_telomere_estimates = \"${normal_id}.telomerecat.csv\"\n    tumor_telomere_estimates = \"${tumor_id}.telomerecat.csv\"\n    \"\"\"\n    telomerecat bam2length \\\n    -p ${task.cpus} \\\n    -v 1 \\\n    --output \"${tumor_telomere_estimates}\" \\\n    \"${tumor_bam}\"\n\n    telomerecat bam2length \\\n    -p ${task.cpus} \\\n    -v 1 \\\n    --output \"${normal_telomere_estimates}\" \\\n    \"${normal_bam}\"\n    \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    normal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    tumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n    normal_telomere_estimates = \"${normal_id}.telomerecat.csv\"\n    tumor_telomere_estimates = \"${tumor_id}.telomerecat.csv\"\n    \"\"\"\n    telomerecat bam2length \\\n    -p ${task.cpus} \\\n    -v 1 \\\n    --output \"${tumor_telomere_estimates}\" \\\n    \"${tumor_bam}\"\n\n    telomerecat bam2length \\\n    -p ${task.cpus} \\\n    -v 1 \\\n    --output \"${normal_telomere_estimates}\" \\\n    \"${normal_bam}\"\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tumor_normal_pair_forTelomerecat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "normal_telomere_estimates",
            "tumor_telomere_estimates"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/telomerecat\", mode: 'copy', pattern: '*.{csv}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.telomerecat == \"on\"",
        "stub": ""
    },
    "telomereEstimation_telomerehunter": {
        "name_process": "telomereEstimation_telomerehunter",
        "string_process": "\nprocess telomereEstimation_telomerehunter {\n\tpublishDir \"${params.output_dir}/somatic/telomereHunter\", mode: 'copy'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(cytoband_bed) from tumor_normal_pair_forTelomereHunter.combine(cytoband_bed)\n\n\toutput:\n\tpath \"${tumor_normal_sample_id}/*.tsv\"\n\tpath \"${tumor_normal_sample_id}/*.png\"\n\tpath \"${tumor_normal_sample_id}/control_TelomerCnt_${tumor_normal_sample_id}/*.tsv\"\n\tpath \"${tumor_normal_sample_id}/control_TelomerCnt_${tumor_normal_sample_id}/TVRs\"\n\tpath \"${tumor_normal_sample_id}/tumor_TelomerCnt_${tumor_normal_sample_id}/*.tsv\"\n\tpath \"${tumor_normal_sample_id}/tumor_TelomerCnt_${tumor_normal_sample_id}/TVRs\"\n\tpath \"${tumor_normal_sample_id}/plots\"\n\n\twhen:\n\tparams.telomerehunter == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\t\"\"\"\n\ttelomerehunter \\\n\t--inputBamTumor \"${tumor_bam}\" \\\n\t--inputBamControl \"${normal_bam}\" \\\n\t--outPath . \\\n\t--pid \"${tumor_normal_sample_id}\" \\\n\t--bandingFile \"${cytoband_bed}\" \\\n\t--parallel \\\n\t--plotFileFormat png\n\t\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\t\"\"\"\n\ttelomerehunter \\\n\t--inputBamTumor \"${tumor_bam}\" \\\n\t--inputBamControl \"${normal_bam}\" \\\n\t--outPath . \\\n\t--pid \"${tumor_normal_sample_id}\" \\\n\t--bandingFile \"${cytoband_bed}\" \\\n\t--parallel \\\n\t--plotFileFormat png\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "TelomereHunter"
        ],
        "tools_url": [
            "https://bio.tools/TelomereHunter"
        ],
        "tools_dico": [
            {
                "name": "TelomereHunter",
                "uri": "https://bio.tools/TelomereHunter",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Read binning"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning shotgun reads"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3798",
                                    "term": "Binning"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "In silico estimation of telomere content and composition from cancer genomes.",
                "homepage": "https://www.dkfz.de/en/applied-bioinformatics/telomerehunter/telomerehunter.html"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forTelomereHunter",
            "cytoband_bed"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/telomereHunter\", mode: 'copy'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.telomerehunter == \"on\"",
        "stub": ""
    },
    "bamPileupForConpair_conpair": {
        "name_process": "bamPileupForConpair_conpair",
        "string_process": "\nprocess bamPileupForConpair_conpair {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forConpairPileup), path(reference_genome_fasta_index_forConpairPileup), path(reference_genome_fasta_dict_forConpairPileup) from tumor_normal_pair_forConpairPileup.combine(reference_genome_bundle_forConpairPileup)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup), path(normal_pileup) into bam_pileups_forConpair\n\n\twhen:\n\tparams.conpair == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\ttumor_pileup = \"${tumor_id}.pileup\"\n\tnormal_pileup = \"${normal_id}.pileup\"\n\thg38_ref_genome_markers = \"/data/markers/GRCh38.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.liftover\"\n\t\"\"\"\n\t\\${CONPAIR_DIR}/scripts/run_gatk_pileup_for_sample.py \\\n\t--xmx_jav \"${task.memory.toGiga()}g\" \\\n\t--bam \"${tumor_bam}\" \\\n\t--outfile \"${tumor_pileup}\" \\\n\t--reference \"${reference_genome_fasta_forConpairPileup}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.bed\"\n\n\t\\${CONPAIR_DIR}/scripts/run_gatk_pileup_for_sample.py \\\n\t--xmx_jav \"${task.memory.toGiga()}g\" \\\n\t--bam \"${normal_bam}\" \\\n\t--outfile \"${normal_pileup}\" \\\n\t--reference \"${reference_genome_fasta_forConpairPileup}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.bed\"\n\t\"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\ttumor_pileup = \"${tumor_id}.pileup\"\n\tnormal_pileup = \"${normal_id}.pileup\"\n\thg38_ref_genome_markers = \"/data/markers/GRCh38.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.liftover\"\n\t\"\"\"\n\t\\${CONPAIR_DIR}/scripts/run_gatk_pileup_for_sample.py \\\n\t--xmx_jav \"${task.memory.toGiga()}g\" \\\n\t--bam \"${tumor_bam}\" \\\n\t--outfile \"${tumor_pileup}\" \\\n\t--reference \"${reference_genome_fasta_forConpairPileup}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.bed\"\n\n\t\\${CONPAIR_DIR}/scripts/run_gatk_pileup_for_sample.py \\\n\t--xmx_jav \"${task.memory.toGiga()}g\" \\\n\t--bam \"${normal_bam}\" \\\n\t--outfile \"${normal_pileup}\" \\\n\t--reference \"${reference_genome_fasta_forConpairPileup}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.bed\"\n\t\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tumor_normal_pair_forConpairPileup",
            "reference_genome_bundle_forConpairPileup"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bam_pileups_forConpair"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.conpair == \"on\"",
        "stub": ""
    },
    "concordanceAndContaminationEstimation_conpair": {
        "name_process": "concordanceAndContaminationEstimation_conpair",
        "string_process": "\nprocess concordanceAndContaminationEstimation_conpair {\n\tpublishDir \"${params.output_dir}/somatic/conpair\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup), path(normal_pileup) from bam_pileups_forConpair\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(conpair_concordance_file), path(conpair_contamination_file) into conpair_output_forConsensusMetadata\n\n\twhen:\n\tparams.conpair == \"on\"\n\t\n\tscript:\n\tconpair_concordance_file = \"${tumor_normal_sample_id}.conpair.concordance.txt\"\n\tconpair_contamination_file = \"${tumor_normal_sample_id}.conpair.contamination.txt\"\n\thg38_ref_genome_markers = \"/data/markers/GRCh38.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.liftover\"\n\t\"\"\"\n\t\\${CONPAIR_DIR}/scripts/verify_concordance.py \\\n\t--min_cov 10 \\\n\t--min_mapping_quality 10 \\\n\t--min_base_quality 20 \\\n\t--tumor_pileup \"${tumor_pileup}\" \\\n\t--normal_pileup \"${normal_pileup}\" \\\n\t--outfile \"${conpair_concordance_file}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.txt\"\n\n\t\\${CONPAIR_DIR}/scripts/estimate_tumor_normal_contamination.py \\\n\t--grid 0.01 \\\n\t--min_mapping_quality 10 \\\n\t--tumor_pileup \"${tumor_pileup}\" \\\n\t--normal_pileup \"${normal_pileup}\" \\\n\t--outfile \"${conpair_contamination_file}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.txt\"\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tconpair_concordance_file = \"${tumor_normal_sample_id}.conpair.concordance.txt\"\n\tconpair_contamination_file = \"${tumor_normal_sample_id}.conpair.contamination.txt\"\n\thg38_ref_genome_markers = \"/data/markers/GRCh38.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.liftover\"\n\t\"\"\"\n\t\\${CONPAIR_DIR}/scripts/verify_concordance.py \\\n\t--min_cov 10 \\\n\t--min_mapping_quality 10 \\\n\t--min_base_quality 20 \\\n\t--tumor_pileup \"${tumor_pileup}\" \\\n\t--normal_pileup \"${normal_pileup}\" \\\n\t--outfile \"${conpair_concordance_file}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.txt\"\n\n\t\\${CONPAIR_DIR}/scripts/estimate_tumor_normal_contamination.py \\\n\t--grid 0.01 \\\n\t--min_mapping_quality 10 \\\n\t--tumor_pileup \"${tumor_pileup}\" \\\n\t--normal_pileup \"${normal_pileup}\" \\\n\t--outfile \"${conpair_contamination_file}\" \\\n\t--markers \\${CONPAIR_DIR}\"${hg38_ref_genome_markers}.txt\"\n\t\"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_pileups_forConpair"
        ],
        "nb_inputs": 1,
        "outputs": [
            "conpair_output_forConsensusMetadata"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/conpair\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.conpair == \"on\"",
        "stub": ""
    },
    "snvAndIndelCalling_varscan": {
        "name_process": "snvAndIndelCalling_varscan",
        "string_process": "\nprocess snvAndIndelCalling_varscan {\n\ttag \"${tumor_normal_sample_id} C=${chromosome}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forVarscanSamtoolsMpileup), path(reference_genome_fasta_index_forVarscanSamtoolsMpileup), path(reference_genome_fasta_dict_forVarscanSamtoolsMpileup), path(gatk_bundle_wgs_bed_forVarscanSamtoolsMpileup) from tumor_normal_pair_forVarscanSamtoolsMpileup.combine(reference_genome_bundle_and_bed_forVarscanSamtoolsMpileup)\n\teach chromosome from chromosome_list_forVarscanSamtoolsMpileup\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_snv_vcf), path(raw_per_chromosome_snv_vcf_index), path(raw_per_chromosome_indel_vcf), path(raw_per_chromosome_indel_vcf_index) into raw_per_chromosome_vcfs_forVarscanBcftools\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\traw_per_chromosome_snv_vcf = \"${tumor_normal_sample_id}.${chromosome}.snv.vcf.gz\"\n\traw_per_chromosome_snv_vcf_index = \"${raw_per_chromosome_snv_vcf}.tbi\"\n\traw_per_chromosome_indel_vcf = \"${tumor_normal_sample_id}.${chromosome}.indel.vcf.gz\"\n\traw_per_chromosome_indel_vcf_index = \"${raw_per_chromosome_indel_vcf}.tbi\"\n\t\"\"\"\n\tsamtools mpileup \\\n\t--no-BAQ \\\n\t--min-MQ 1 \\\n\t--positions \"${gatk_bundle_wgs_bed_forVarscanSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forVarscanSamtoolsMpileup}\" \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} somatic \\\n\t--mpileup 1 \\\n\t--min-coverage-normal 8 \\\n\t--min-coverage-tumor 6 \\\n\t--min-var-freq 0.10 \\\n\t--min-freq-for-hom 0.75 \\\n\t--normal-purity 1.00 \\\n\t--tumor-purity 1.00 \\\n\t--p-value 0.99 \\\n\t--somatic-p-value 0.05 \\\n\t--strand-filter 0 \\\n\t--output-vcf \\\n\t--output-snp \"${tumor_normal_sample_id}.${chromosome}.snv\" \\\n\t--output-indel \"${tumor_normal_sample_id}.${chromosome}.indel\"\n\n\tbgzip < \"${tumor_normal_sample_id}.${chromosome}.snv.vcf\" > \"${raw_per_chromosome_snv_vcf}\"\n\ttabix \"${raw_per_chromosome_snv_vcf}\"\n\n\tbgzip < \"${tumor_normal_sample_id}.${chromosome}.indel.vcf\" > \"${raw_per_chromosome_indel_vcf}\"\n\ttabix \"${raw_per_chromosome_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 51,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\traw_per_chromosome_snv_vcf = \"${tumor_normal_sample_id}.${chromosome}.snv.vcf.gz\"\n\traw_per_chromosome_snv_vcf_index = \"${raw_per_chromosome_snv_vcf}.tbi\"\n\traw_per_chromosome_indel_vcf = \"${tumor_normal_sample_id}.${chromosome}.indel.vcf.gz\"\n\traw_per_chromosome_indel_vcf_index = \"${raw_per_chromosome_indel_vcf}.tbi\"\n\t\"\"\"\n\tsamtools mpileup \\\n\t--no-BAQ \\\n\t--min-MQ 1 \\\n\t--positions \"${gatk_bundle_wgs_bed_forVarscanSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forVarscanSamtoolsMpileup}\" \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} somatic \\\n\t--mpileup 1 \\\n\t--min-coverage-normal 8 \\\n\t--min-coverage-tumor 6 \\\n\t--min-var-freq 0.10 \\\n\t--min-freq-for-hom 0.75 \\\n\t--normal-purity 1.00 \\\n\t--tumor-purity 1.00 \\\n\t--p-value 0.99 \\\n\t--somatic-p-value 0.05 \\\n\t--strand-filter 0 \\\n\t--output-vcf \\\n\t--output-snp \"${tumor_normal_sample_id}.${chromosome}.snv\" \\\n\t--output-indel \"${tumor_normal_sample_id}.${chromosome}.indel\"\n\n\tbgzip < \"${tumor_normal_sample_id}.${chromosome}.snv.vcf\" > \"${raw_per_chromosome_snv_vcf}\"\n\ttabix \"${raw_per_chromosome_snv_vcf}\"\n\n\tbgzip < \"${tumor_normal_sample_id}.${chromosome}.indel.vcf\" > \"${raw_per_chromosome_indel_vcf}\"\n\ttabix \"${raw_per_chromosome_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 36,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forVarscanSamtoolsMpileup",
            "reference_genome_bundle_and_bed_forVarscanSamtoolsMpileup",
            "chromosome_list_forVarscanSamtoolsMpileup"
        ],
        "nb_inputs": 3,
        "outputs": [
            "raw_per_chromosome_vcfs_forVarscanBcftools"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id} C=${chromosome}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "concatenateVarscanPerChromosomeVcfs_bcftools": {
        "name_process": "concatenateVarscanPerChromosomeVcfs_bcftools",
        "string_process": "\nprocess concatenateVarscanPerChromosomeVcfs_bcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\t\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_snv_vcf), path(raw_per_chromosome_snv_vcf_index), path(raw_per_chromosome_indel_vcf), path(raw_per_chromosome_indel_vcf_index) from raw_per_chromosome_vcfs_forVarscanBcftools.groupTuple()\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(raw_snv_vcf), path(raw_indel_vcf) into raw_vcfs_forVarscanHcFilter\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\traw_snv_vcf = \"${tumor_normal_sample_id}.snv.vcf.gz\"\n\traw_indel_vcf = \"${tumor_normal_sample_id}.indel.vcf.gz\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${raw_snv_vcf}\" \\\n\t\"${tumor_normal_sample_id}.chr1.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr2.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr3.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr4.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr5.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr6.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr7.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr8.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr9.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr10.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr11.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr12.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr13.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr14.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr15.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr16.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr17.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr18.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr19.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr20.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr21.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr22.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrX.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrY.snv.vcf.gz\"\n\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${raw_indel_vcf}\" \\\n\t\"${tumor_normal_sample_id}.chr1.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr2.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr3.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr4.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr5.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr6.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr7.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr8.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr9.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr10.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr11.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr12.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr13.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr14.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr15.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr16.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr17.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr18.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr19.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr20.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr21.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr22.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrX.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrY.indel.vcf.gz\"\n\t\"\"\"\n}",
        "nb_lignes_process": 74,
        "string_script": "\traw_snv_vcf = \"${tumor_normal_sample_id}.snv.vcf.gz\"\n\traw_indel_vcf = \"${tumor_normal_sample_id}.indel.vcf.gz\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${raw_snv_vcf}\" \\\n\t\"${tumor_normal_sample_id}.chr1.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr2.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr3.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr4.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr5.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr6.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr7.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr8.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr9.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr10.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr11.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr12.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr13.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr14.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr15.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr16.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr17.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr18.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr19.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr20.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr21.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr22.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrX.snv.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrY.snv.vcf.gz\"\n\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${raw_indel_vcf}\" \\\n\t\"${tumor_normal_sample_id}.chr1.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr2.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr3.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr4.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr5.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr6.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr7.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr8.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr9.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr10.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr11.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr12.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr13.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr14.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr15.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr16.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr17.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr18.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr19.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr20.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr21.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chr22.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrX.indel.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.chrY.indel.vcf.gz\"\n\t\"\"\"",
        "nb_lignes_script": 60,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "raw_per_chromosome_vcfs_forVarscanBcftools"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raw_vcfs_forVarscanHcFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "filterRawSnvAndIndels_varscan": {
        "name_process": "filterRawSnvAndIndels_varscan",
        "string_process": "\nprocess filterRawSnvAndIndels_varscan {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(raw_snv_vcf), path(raw_indel_vcf) from raw_vcfs_forVarscanHcFilter\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(high_confidence_snv_vcf), path(high_confidence_snv_vcf_index), path(high_confidence_indel_vcf), path(high_confidence_indel_vcf_index) into high_confidence_vcfs_forVarscanBamReadcount, high_confidence_vcfs_forVarscanFpFilter\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\thigh_confidence_snv_vcf = \"${raw_snv_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".somatic.hc.vcf.gz\")\n\thigh_confidence_snv_vcf_index = \"${high_confidence_snv_vcf}.tbi\"\n\thigh_confidence_indel_vcf = \"${raw_indel_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".somatic.hc.vcf.gz\")\n\thigh_confidence_indel_vcf_index = \"${high_confidence_indel_vcf}.tbi\"\n\t\"\"\"\n\tzcat \"${raw_snv_vcf}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} processSomatic \\\n\t\"${tumor_normal_sample_id}.snv\" \\\n\t--min-tumor-freq 0.10 \\\n\t--max-normal-freq 0.05 \\\n\t--p-value 0.07\n\n\tbgzip < \"${tumor_normal_sample_id}.snv.Somatic.hc\" > \"${high_confidence_snv_vcf}\"\n\ttabix \"${high_confidence_snv_vcf}\"\n\n\tzcat \"${raw_indel_vcf}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} processSomatic \\\n\t\"${tumor_normal_sample_id}.indel\" \\\n\t--min-tumor-freq 0.10 \\\n\t--max-normal-freq 0.05 \\\n\t--p-value 0.07\n\n\tbgzip < \"${tumor_normal_sample_id}.indel.Somatic.hc\" > \"${high_confidence_indel_vcf}\"\n\ttabix \"${high_confidence_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\thigh_confidence_snv_vcf = \"${raw_snv_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".somatic.hc.vcf.gz\")\n\thigh_confidence_snv_vcf_index = \"${high_confidence_snv_vcf}.tbi\"\n\thigh_confidence_indel_vcf = \"${raw_indel_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".somatic.hc.vcf.gz\")\n\thigh_confidence_indel_vcf_index = \"${high_confidence_indel_vcf}.tbi\"\n\t\"\"\"\n\tzcat \"${raw_snv_vcf}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} processSomatic \\\n\t\"${tumor_normal_sample_id}.snv\" \\\n\t--min-tumor-freq 0.10 \\\n\t--max-normal-freq 0.05 \\\n\t--p-value 0.07\n\n\tbgzip < \"${tumor_normal_sample_id}.snv.Somatic.hc\" > \"${high_confidence_snv_vcf}\"\n\ttabix \"${high_confidence_snv_vcf}\"\n\n\tzcat \"${raw_indel_vcf}\" \\\n\t| \\\n\tjava -jar \\${VARSCAN} processSomatic \\\n\t\"${tumor_normal_sample_id}.indel\" \\\n\t--min-tumor-freq 0.10 \\\n\t--max-normal-freq 0.05 \\\n\t--p-value 0.07\n\n\tbgzip < \"${tumor_normal_sample_id}.indel.Somatic.hc\" > \"${high_confidence_indel_vcf}\"\n\ttabix \"${high_confidence_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "raw_vcfs_forVarscanHcFilter"
        ],
        "nb_inputs": 1,
        "outputs": [
            "high_confidence_vcfs_forVarscanBamReadcount",
            "high_confidence_vcfs_forVarscanFpFilter"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "bamReadcountForVarscanFpFilter_bamreadcount": {
        "name_process": "bamReadcountForVarscanFpFilter_bamreadcount",
        "string_process": "\nprocess bamReadcountForVarscanFpFilter_bamreadcount {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(high_confidence_snv_vcf), path(high_confidence_snv_vcf_index), path(high_confidence_indel_vcf), path(high_confidence_indel_vcf_index), path(reference_genome_fasta_forVarscanBamReadcount), path(reference_genome_fasta_index_forVarscanBamReadcount), path(reference_genome_fasta_dict_forVarscanBamReadcount) from bams_forVarscanBamReadcount.join(high_confidence_vcfs_forVarscanBamReadcount).combine(reference_genome_bundle_forVarscanBamReadcount)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(snv_readcount_file), path(indel_readcount_file) into readcount_forVarscanFpFilter\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\tsnv_readcount_file = \"${tumor_normal_sample_id}_bam_readcount_snv.tsv\"\n\tindel_readcount_file = \"${tumor_normal_sample_id}_bam_readcount_indel.tsv\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--allow-overlaps \\\n\t--output-type z \\\n\t--output \"${tumor_normal_sample_id}.somatic.hc.vcf.gz\" \\\n\t\"${high_confidence_snv_vcf}\" \"${high_confidence_indel_vcf}\"\n\n\ttabix \"${tumor_normal_sample_id}.somatic.hc.vcf.gz\"\n\n\tbam_readcount_helper.py \\\n\t\"${tumor_normal_sample_id}.somatic.hc.vcf.gz\" \\\n\tTUMOR \\\n\t\"${reference_genome_fasta_forVarscanBamReadcount}\" \\\n\t\"${tumor_bam}\" \\\n\t.\n\n\tmv TUMOR_bam_readcount_snv.tsv \"${snv_readcount_file}\"\n\tmv TUMOR_bam_readcount_indel.tsv \"${indel_readcount_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tsnv_readcount_file = \"${tumor_normal_sample_id}_bam_readcount_snv.tsv\"\n\tindel_readcount_file = \"${tumor_normal_sample_id}_bam_readcount_indel.tsv\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--allow-overlaps \\\n\t--output-type z \\\n\t--output \"${tumor_normal_sample_id}.somatic.hc.vcf.gz\" \\\n\t\"${high_confidence_snv_vcf}\" \"${high_confidence_indel_vcf}\"\n\n\ttabix \"${tumor_normal_sample_id}.somatic.hc.vcf.gz\"\n\n\tbam_readcount_helper.py \\\n\t\"${tumor_normal_sample_id}.somatic.hc.vcf.gz\" \\\n\tTUMOR \\\n\t\"${reference_genome_fasta_forVarscanBamReadcount}\" \\\n\t\"${tumor_bam}\" \\\n\t.\n\n\tmv TUMOR_bam_readcount_snv.tsv \"${snv_readcount_file}\"\n\tmv TUMOR_bam_readcount_indel.tsv \"${indel_readcount_file}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "TumorHPD"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/tumorhpd"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "TumorHPD",
                "uri": "https://bio.tools/tumorhpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Web server for predicting and designing tumor homing peptides. This server is extremely useful for the researchers working in the field of therapeutic peptides.",
                "homepage": "http://crdd.osdd.net/raghava/tumorhpd/"
            }
        ],
        "inputs": [
            "bams_forVarscanBamReadcount",
            "high_confidence_vcfs_forVarscanBamReadcount",
            "reference_genome_bundle_forVarscanBamReadcount"
        ],
        "nb_inputs": 3,
        "outputs": [
            "readcount_forVarscanFpFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "falsePositivefilterSnvAndIndels_varscan": {
        "name_process": "falsePositivefilterSnvAndIndels_varscan",
        "string_process": "\nprocess falsePositivefilterSnvAndIndels_varscan {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(high_confidence_snv_vcf), path(high_confidence_snv_vcf_index), path(high_confidence_indel_vcf), path(high_confidence_indel_vcf_index), path(snv_readcount_file), path(indel_readcount_file) from high_confidence_vcfs_forVarscanFpFilter.join(readcount_forVarscanFpFilter)\n\t\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(fp_filtered_snv_vcf), path(fp_filtered_indel_vcf) into filtered_vcfs_forVarscanBcftools\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\tunzipped_hc_snv_vcf = \"${high_confidence_snv_vcf}\".replaceFirst(/\\.gz/, \"\")\n\tunzipped_hc_indel_vcf = \"${high_confidence_indel_vcf}\".replaceFirst(/\\.gz/, \"\")\n\tfp_filtered_snv_vcf = \"${unzipped_hc_snv_vcf}\".replaceFirst(/\\.hc\\.vcf/, \".filtered.vcf\")\n\tfp_filtered_indel_vcf = \"${unzipped_hc_indel_vcf}\".replaceFirst(/\\.hc\\.vcf/, \".filtered.vcf\")\n\t\"\"\"\n\tgunzip -f \"${high_confidence_snv_vcf}\"\n\n\tjava -jar \\$VARSCAN fpfilter \\\n\t\"${unzipped_hc_snv_vcf}\" \\\n\t\"${snv_readcount_file}\" \\\n\t--filtered-file \"${tumor_normal_sample_id}.snv.failed.vcf\" \\\n\t--min-var-count 2 \\\n\t--min-var-freq 0.01 \\\n\t--min-ref-basequal 25 \\\n\t--min-var-basequal 25 \\\n\t--output-file \"${fp_filtered_snv_vcf}\"\n\n\tgunzip -f \"${high_confidence_indel_vcf}\"\n\n\tjava -jar \\$VARSCAN fpfilter \\\n\t\"${unzipped_hc_indel_vcf}\" \\\n\t\"${indel_readcount_file}\" \\\n\t--filtered-file \"${tumor_normal_sample_id}.indel.failed.vcf\" \\\n\t--min-var-count 2 \\\n\t--min-var-freq 0.01 \\\n\t--min-ref-basequal 25 \\\n\t--min-var-basequal 25 \\\n\t--output-file \"${fp_filtered_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "\tunzipped_hc_snv_vcf = \"${high_confidence_snv_vcf}\".replaceFirst(/\\.gz/, \"\")\n\tunzipped_hc_indel_vcf = \"${high_confidence_indel_vcf}\".replaceFirst(/\\.gz/, \"\")\n\tfp_filtered_snv_vcf = \"${unzipped_hc_snv_vcf}\".replaceFirst(/\\.hc\\.vcf/, \".filtered.vcf\")\n\tfp_filtered_indel_vcf = \"${unzipped_hc_indel_vcf}\".replaceFirst(/\\.hc\\.vcf/, \".filtered.vcf\")\n\t\"\"\"\n\tgunzip -f \"${high_confidence_snv_vcf}\"\n\n\tjava -jar \\$VARSCAN fpfilter \\\n\t\"${unzipped_hc_snv_vcf}\" \\\n\t\"${snv_readcount_file}\" \\\n\t--filtered-file \"${tumor_normal_sample_id}.snv.failed.vcf\" \\\n\t--min-var-count 2 \\\n\t--min-var-freq 0.01 \\\n\t--min-ref-basequal 25 \\\n\t--min-var-basequal 25 \\\n\t--output-file \"${fp_filtered_snv_vcf}\"\n\n\tgunzip -f \"${high_confidence_indel_vcf}\"\n\n\tjava -jar \\$VARSCAN fpfilter \\\n\t\"${unzipped_hc_indel_vcf}\" \\\n\t\"${indel_readcount_file}\" \\\n\t--filtered-file \"${tumor_normal_sample_id}.indel.failed.vcf\" \\\n\t--min-var-count 2 \\\n\t--min-var-freq 0.01 \\\n\t--min-ref-basequal 25 \\\n\t--min-var-basequal 25 \\\n\t--output-file \"${fp_filtered_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "high_confidence_vcfs_forVarscanFpFilter",
            "readcount_forVarscanFpFilter"
        ],
        "nb_inputs": 2,
        "outputs": [
            "filtered_vcfs_forVarscanBcftools"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "splitMultiallelicAndLeftNormalizeVarscanVcf_bcftools": {
        "name_process": "splitMultiallelicAndLeftNormalizeVarscanVcf_bcftools",
        "string_process": "\nprocess splitMultiallelicAndLeftNormalizeVarscanVcf_bcftools {\n\tpublishDir \"${params.output_dir}/somatic/varscan\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(fp_filtered_snv_vcf), path(fp_filtered_indel_vcf), path(reference_genome_fasta_forVarscanBcftoolsNorm), path(reference_genome_fasta_index_forVarscanBcftoolsNorm), path(reference_genome_fasta_dict_forVarscanBcftoolsNorm) from filtered_vcfs_forVarscanBcftools.combine(reference_genome_bundle_forVarscanBcftoolsNorm)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(final_varscan_snv_vcf), path(final_varscan_snv_vcf_index) into final_varscan_snv_vcf_forConsensus\n\ttuple val(tumor_normal_sample_id), path(final_varscan_indel_vcf), path(final_varscan_indel_vcf_index) into final_varscan_indel_vcf_forConsensus\n\tpath varscan_snv_multiallelics_stats\n\tpath varscan_indel_multiallelics_stats\n\tpath varscan_indel_realign_normalize_stats\n\n\twhen:\n\tparams.varscan == \"on\"\n\n\tscript:\n\tfinal_varscan_snv_vcf = \"${tumor_normal_sample_id}.varscan.somatic.snv.vcf.gz\"\n\tfinal_varscan_snv_vcf_index =\"${final_varscan_snv_vcf}.tbi\"\n\tfinal_varscan_indel_vcf = \"${tumor_normal_sample_id}.varscan.somatic.indel.vcf.gz\"\n\tfinal_varscan_indel_vcf_index = \"${final_varscan_indel_vcf}.tbi\"\n\tvarscan_snv_multiallelics_stats = \"${tumor_normal_sample_id}.varscan.snv.multiallelicsstats.txt\"\n\tvarscan_indel_multiallelics_stats = \"${tumor_normal_sample_id}.varscan.indel.multiallelicsstats.txt\"\n\tvarscan_indel_realign_normalize_stats = \"${tumor_normal_sample_id}.varscan.indel.realignnormalizestats.txt\"\n\t\"\"\"\n\tbgzip --stdout < \"${fp_filtered_snv_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -snps \\\n\t--output-type z \\\n\t--output \"${final_varscan_snv_vcf}\" \\\n\t- 2>\"${varscan_snv_multiallelics_stats}\"\n\n\ttabix \"${final_varscan_snv_vcf}\"\n\t\n\tbgzip --stdout < \"${fp_filtered_indel_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -indels \\\n\t--output-type z \\\n\t- 2>\"${varscan_indel_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forVarscanBcftoolsNorm}\" \\\n\t--output-type z \\\n\t--output \"${final_varscan_indel_vcf}\" \\\n\t- 2>\"${varscan_indel_realign_normalize_stats}\"\n\n\ttabix \"${final_varscan_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": "\tfinal_varscan_snv_vcf = \"${tumor_normal_sample_id}.varscan.somatic.snv.vcf.gz\"\n\tfinal_varscan_snv_vcf_index =\"${final_varscan_snv_vcf}.tbi\"\n\tfinal_varscan_indel_vcf = \"${tumor_normal_sample_id}.varscan.somatic.indel.vcf.gz\"\n\tfinal_varscan_indel_vcf_index = \"${final_varscan_indel_vcf}.tbi\"\n\tvarscan_snv_multiallelics_stats = \"${tumor_normal_sample_id}.varscan.snv.multiallelicsstats.txt\"\n\tvarscan_indel_multiallelics_stats = \"${tumor_normal_sample_id}.varscan.indel.multiallelicsstats.txt\"\n\tvarscan_indel_realign_normalize_stats = \"${tumor_normal_sample_id}.varscan.indel.realignnormalizestats.txt\"\n\t\"\"\"\n\tbgzip --stdout < \"${fp_filtered_snv_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -snps \\\n\t--output-type z \\\n\t--output \"${final_varscan_snv_vcf}\" \\\n\t- 2>\"${varscan_snv_multiallelics_stats}\"\n\n\ttabix \"${final_varscan_snv_vcf}\"\n\t\n\tbgzip --stdout < \"${fp_filtered_indel_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -indels \\\n\t--output-type z \\\n\t- 2>\"${varscan_indel_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forVarscanBcftoolsNorm}\" \\\n\t--output-type z \\\n\t--output \"${final_varscan_indel_vcf}\" \\\n\t- 2>\"${varscan_indel_realign_normalize_stats}\"\n\n\ttabix \"${final_varscan_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "filtered_vcfs_forVarscanBcftools",
            "reference_genome_bundle_forVarscanBcftoolsNorm"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_varscan_snv_vcf_forConsensus",
            "final_varscan_indel_vcf_forConsensus",
            "varscan_snv_multiallelics_stats",
            "varscan_indel_multiallelics_stats",
            "varscan_indel_realign_normalize_stats"
        ],
        "nb_outputs": 5,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/varscan\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\"",
        "stub": ""
    },
    "mutect2GnomadReferenceVcfPrep_bcftools": {
        "name_process": "mutect2GnomadReferenceVcfPrep_bcftools",
        "string_process": "\nprocess mutect2GnomadReferenceVcfPrep_bcftools {\n\tpublishDir \"references/hg38\", mode: 'copy'\n\n\tinput:\n\tpath gnomad_ref_vcf_chromosomes1_9\n\tpath gnomad_ref_vcf_chromosomes1_9_index\n\tpath gnomad_ref_vcf_chromosomes10_22\n\tpath gnomad_ref_vcf_chromosomesXYM_alts\n\tpath gnomad_ref_vcf_chromosomesXYM_alts_index\n\n\toutput:\n\ttuple path(mutect_gnomad_ref_vcf), path(mutect_gnomad_ref_vcf_index) into mutect_gnomad_ref_vcf_fromProcess\n\n\twhen:\n\tparams.mutect == \"on\" && params.mutect_ref_vcf_concatenated == \"no\"\n\n\tscript:\n\tmutect_gnomad_ref_vcf = \"af-only-gnomad.hg38.vcf.gz\"\n\tmutect_gnomad_ref_vcf_index = \"${mutect_gnomad_ref_vcf}.tbi\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${mutect_gnomad_ref_vcf}\" \\\n\t\"${gnomad_ref_vcf_chromosomes1_9}\" \\\n\t\"${gnomad_ref_vcf_chromosomes10_22}\" \\\n\t\"${gnomad_ref_vcf_chromosomesXYM_alts}\"\n\n\ttabix \"${mutect_gnomad_ref_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "\tmutect_gnomad_ref_vcf = \"af-only-gnomad.hg38.vcf.gz\"\n\tmutect_gnomad_ref_vcf_index = \"${mutect_gnomad_ref_vcf}.tbi\"\n\t\"\"\"\n\tbcftools concat \\\n\t--threads ${task.cpus} \\\n\t--output-type z \\\n\t--output \"${mutect_gnomad_ref_vcf}\" \\\n\t\"${gnomad_ref_vcf_chromosomes1_9}\" \\\n\t\"${gnomad_ref_vcf_chromosomes10_22}\" \\\n\t\"${gnomad_ref_vcf_chromosomesXYM_alts}\"\n\n\ttabix \"${mutect_gnomad_ref_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "gnomad_ref_vcf_chromosomes1_9",
            "gnomad_ref_vcf_chromosomes1_9_index",
            "gnomad_ref_vcf_chromosomes10_22",
            "gnomad_ref_vcf_chromosomesXYM_alts",
            "gnomad_ref_vcf_chromosomesXYM_alts_index"
        ],
        "nb_inputs": 5,
        "outputs": [
            "mutect_gnomad_ref_vcf_fromProcess"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"references/hg38\", mode: 'copy'"
        ],
        "when": "params.mutect == \"on\" && params.mutect_ref_vcf_concatenated == \"no\"",
        "stub": ""
    },
    "snvAndIndelCalling_gatk": {
        "name_process": "snvAndIndelCalling_gatk",
        "string_process": "\nprocess snvAndIndelCalling_gatk {\n\ttag \"${tumor_normal_sample_id} C=${chromosome} \"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forMutectCalling), path(reference_genome_fasta_index_forMutectCalling), path(reference_genome_fasta_dict_forMutectCalling), path(gatk_bundle_wgs_bed_forMutectCalling), path(mutect_gnomad_ref_vcf), path(mutect_gnomad_ref_vcf_index), path(panel_of_normals_1000G), path(panel_of_normals_1000G_index) from tumor_normal_pair_forMutectCalling.combine(reference_genome_bed_and_vcfs_forMutectCalling)\n\teach chromosome from chromosome_list_forMutectCalling\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_vcf), path(raw_per_chromosome_vcf_index) into raw_per_chromosome_vcfs_forMutectVcfMerge\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_mutect_stats_file) into raw_per_chromosome_mutect_stats_forMutectStatsMerge\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tper_chromosome_bed_file = \"${gatk_bundle_wgs_bed_forMutectCalling}\".replaceFirst(/\\.bed/, \".${chromosome}.bed\")\n\traw_per_chromosome_vcf = \"${tumor_normal_sample_id}.${chromosome}.vcf.gz\"\n\traw_per_chromosome_vcf_index = \"${raw_per_chromosome_vcf}.tbi\"\n\traw_per_chromosome_mutect_stats_file = \"${tumor_normal_sample_id}.${chromosome}.vcf.gz.stats\"\n\t\"\"\"\n\tgrep -w '${chromosome}' \"${gatk_bundle_wgs_bed_forMutectCalling}\" > \"${per_chromosome_bed_file}\"\n\n\tgatk Mutect2 \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--native-pair-hmm-threads ${task.cpus} \\\n\t--af-of-alleles-not-in-resource 0.00003125 \\\n\t--seconds-between-progress-updates 600 \\\n\t--reference \"${reference_genome_fasta_forMutectCalling}\" \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--germline-resource \"${mutect_gnomad_ref_vcf}\" \\\n\t--panel-of-normals \"${panel_of_normals_1000G}\" \\\n\t--input \"${tumor_bam}\" \\\n\t--input \"${normal_bam}\" \\\n\t--normal-sample \"${normal_id}\" \\\n\t--output \"${raw_per_chromosome_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tper_chromosome_bed_file = \"${gatk_bundle_wgs_bed_forMutectCalling}\".replaceFirst(/\\.bed/, \".${chromosome}.bed\")\n\traw_per_chromosome_vcf = \"${tumor_normal_sample_id}.${chromosome}.vcf.gz\"\n\traw_per_chromosome_vcf_index = \"${raw_per_chromosome_vcf}.tbi\"\n\traw_per_chromosome_mutect_stats_file = \"${tumor_normal_sample_id}.${chromosome}.vcf.gz.stats\"\n\t\"\"\"\n\tgrep -w '${chromosome}' \"${gatk_bundle_wgs_bed_forMutectCalling}\" > \"${per_chromosome_bed_file}\"\n\n\tgatk Mutect2 \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--native-pair-hmm-threads ${task.cpus} \\\n\t--af-of-alleles-not-in-resource 0.00003125 \\\n\t--seconds-between-progress-updates 600 \\\n\t--reference \"${reference_genome_fasta_forMutectCalling}\" \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--germline-resource \"${mutect_gnomad_ref_vcf}\" \\\n\t--panel-of-normals \"${panel_of_normals_1000G}\" \\\n\t--input \"${tumor_bam}\" \\\n\t--input \"${normal_bam}\" \\\n\t--normal-sample \"${normal_id}\" \\\n\t--output \"${raw_per_chromosome_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forMutectCalling",
            "reference_genome_bed_and_vcfs_forMutectCalling",
            "chromosome_list_forMutectCalling"
        ],
        "nb_inputs": 3,
        "outputs": [
            "raw_per_chromosome_vcfs_forMutectVcfMerge",
            "raw_per_chromosome_mutect_stats_forMutectStatsMerge"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id} C=${chromosome} \""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "mergeAndSortMutect2Vcfs_gatk": {
        "name_process": "mergeAndSortMutect2Vcfs_gatk",
        "string_process": "\nprocess mergeAndSortMutect2Vcfs_gatk {\n\ttag \"${tumor_normal_sample_id}\"\n\t\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_vcf), path(raw_per_chromosome_vcf_index) from raw_per_chromosome_vcfs_forMutectVcfMerge.groupTuple()\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(merged_raw_vcf), path(merged_raw_vcf_index) into merged_raw_vcfs_forMutectFilter\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tmerged_raw_vcf = \"${tumor_normal_sample_id}.vcf.gz\"\n\tmerged_raw_vcf_index = \"${merged_raw_vcf}.tbi\"\n\t\"\"\"\n\tgatk SortVcf \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t${raw_per_chromosome_vcf.collect { \"--INPUT $it \" }.join()} \\\n\t--OUTPUT \"${merged_raw_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\tmerged_raw_vcf = \"${tumor_normal_sample_id}.vcf.gz\"\n\tmerged_raw_vcf_index = \"${merged_raw_vcf}.tbi\"\n\t\"\"\"\n\tgatk SortVcf \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t${raw_per_chromosome_vcf.collect { \"--INPUT $it \" }.join()} \\\n\t--OUTPUT \"${merged_raw_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "raw_per_chromosome_vcfs_forMutectVcfMerge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "merged_raw_vcfs_forMutectFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "mergeMutect2StatsForFiltering_gatk": {
        "name_process": "mergeMutect2StatsForFiltering_gatk",
        "string_process": "\nprocess mergeMutect2StatsForFiltering_gatk {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(raw_per_chromosome_mutect_stats_file) from raw_per_chromosome_mutect_stats_forMutectStatsMerge.groupTuple()\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(merged_mutect_stats_file) into merged_mutect_stats_file_forMutectFilter\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tmerged_mutect_stats_file = \"${tumor_normal_sample_id}.vcf.gz.stats\"\n\t\"\"\"\n\tgatk MergeMutectStats \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t${raw_per_chromosome_mutect_stats_file.collect { \"--stats $it \" }.join()} \\\n\t--output \"${merged_mutect_stats_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\tmerged_mutect_stats_file = \"${tumor_normal_sample_id}.vcf.gz.stats\"\n\t\"\"\"\n\tgatk MergeMutectStats \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t${raw_per_chromosome_mutect_stats_file.collect { \"--stats $it \" }.join()} \\\n\t--output \"${merged_mutect_stats_file}\"\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "raw_per_chromosome_mutect_stats_forMutectStatsMerge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "merged_mutect_stats_file_forMutectFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "pileupSummariesForMutect2Contamination_gatk": {
        "name_process": "pileupSummariesForMutect2Contamination_gatk",
        "string_process": "\nprocess pileupSummariesForMutect2Contamination_gatk {\n\ttag \"${tumor_normal_sample_id} C=${chromosome}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(gatk_bundle_wgs_bed_forMutectPileup), path(exac_common_sites_ref_vcf), path(exac_common_sites_ref_vcf_index) from tumor_normal_pair_forMutectPileup.combine(bed_and_resources_vcfs_forMutectPileup)\n\teach chromosome from chromosome_list_forMutectPileup\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(per_chromosome_tumor_pileup) into per_chromosome_tumor_pileups_forMutectPileupGather\n\ttuple val(tumor_normal_sample_id), path(per_chromosome_normal_pileup) into per_chromosome_normal_pileups_forMutectPileupGather\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tper_chromosome_bed_file = \"${gatk_bundle_wgs_bed_forMutectPileup}\".replaceFirst(/\\.bed/, \".${chromosome}.bed\")\n\tper_chromosome_tumor_pileup = \"${tumor_id}.${chromosome}.pileup\"\n\tper_chromosome_normal_pileup = \"${normal_id}.${chromosome}.pileup\"\n\t\"\"\"\n\tgrep -w '${chromosome}' \"${gatk_bundle_wgs_bed_forMutectPileup}\" > \"${per_chromosome_bed_file}\"\n\n\tgatk GetPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--variant \"${exac_common_sites_ref_vcf}\" \\\n\t--input \"${tumor_bam}\" \\\n\t--output \"${per_chromosome_tumor_pileup}\"\n\n\tgatk GetPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--variant \"${exac_common_sites_ref_vcf}\" \\\n\t--input \"${normal_bam}\" \\\n\t--output \"${per_chromosome_normal_pileup}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tper_chromosome_bed_file = \"${gatk_bundle_wgs_bed_forMutectPileup}\".replaceFirst(/\\.bed/, \".${chromosome}.bed\")\n\tper_chromosome_tumor_pileup = \"${tumor_id}.${chromosome}.pileup\"\n\tper_chromosome_normal_pileup = \"${normal_id}.${chromosome}.pileup\"\n\t\"\"\"\n\tgrep -w '${chromosome}' \"${gatk_bundle_wgs_bed_forMutectPileup}\" > \"${per_chromosome_bed_file}\"\n\n\tgatk GetPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--variant \"${exac_common_sites_ref_vcf}\" \\\n\t--input \"${tumor_bam}\" \\\n\t--output \"${per_chromosome_tumor_pileup}\"\n\n\tgatk GetPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--intervals \"${per_chromosome_bed_file}\" \\\n\t--variant \"${exac_common_sites_ref_vcf}\" \\\n\t--input \"${normal_bam}\" \\\n\t--output \"${per_chromosome_normal_pileup}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forMutectPileup",
            "bed_and_resources_vcfs_forMutectPileup",
            "chromosome_list_forMutectPileup"
        ],
        "nb_inputs": 3,
        "outputs": [
            "per_chromosome_tumor_pileups_forMutectPileupGather",
            "per_chromosome_normal_pileups_forMutectPileupGather"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id} C=${chromosome}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "gatherTumorPileupSummariesForMutect2Contamination_gatk": {
        "name_process": "gatherTumorPileupSummariesForMutect2Contamination_gatk",
        "string_process": "\nprocess gatherTumorPileupSummariesForMutect2Contamination_gatk {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(per_chromosome_tumor_pileup), path(reference_genome_fasta_dict) from per_chromosome_tumor_pileups_forMutectPileupGather.groupTuple().combine(reference_genome_fasta_dict_forMutectPileupGatherTumor)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup) into tumor_pileups_forMutectContamination\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_normal_sample_id}\".replaceFirst(/\\_vs\\_.*/, \"\")\n\ttumor_pileup = \"${tumor_id}.pileup\"\n\t\"\"\"\n\tgatk GatherPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--sequence-dictionary \"${reference_genome_fasta_dict}\" \\\n\t${per_chromosome_tumor_pileup.collect { \"--I $it \" }.join()} \\\n\t--O \"${tumor_pileup}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\ttumor_id = \"${tumor_normal_sample_id}\".replaceFirst(/\\_vs\\_.*/, \"\")\n\ttumor_pileup = \"${tumor_id}.pileup\"\n\t\"\"\"\n\tgatk GatherPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--sequence-dictionary \"${reference_genome_fasta_dict}\" \\\n\t${per_chromosome_tumor_pileup.collect { \"--I $it \" }.join()} \\\n\t--O \"${tumor_pileup}\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "per_chromosome_tumor_pileups_forMutectPileupGather",
            "reference_genome_fasta_dict_forMutectPileupGatherTumor"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tumor_pileups_forMutectContamination"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "gatherNormalPileupSummariesForMutect2Contamination_gatk": {
        "name_process": "gatherNormalPileupSummariesForMutect2Contamination_gatk",
        "string_process": "\nprocess gatherNormalPileupSummariesForMutect2Contamination_gatk {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(per_chromosome_normal_pileup), path(reference_genome_fasta_dict) from per_chromosome_normal_pileups_forMutectPileupGather.groupTuple().combine(reference_genome_fasta_dict_forMutectPileupGatherNormal)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(normal_pileup) into normal_pileups_forMutectContamination\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tnormal_id = \"${tumor_normal_sample_id}\".replaceFirst(/.*\\_vs\\_/, \"\")\n\tnormal_pileup = \"${normal_id}.pileup\"\n\t\"\"\"\n\tgatk GatherPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--sequence-dictionary \"${reference_genome_fasta_dict}\" \\\n\t${per_chromosome_normal_pileup.collect { \"--I $it \" }.join()} \\\n\t--O \"${normal_pileup}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\tnormal_id = \"${tumor_normal_sample_id}\".replaceFirst(/.*\\_vs\\_/, \"\")\n\tnormal_pileup = \"${normal_id}.pileup\"\n\t\"\"\"\n\tgatk GatherPileupSummaries \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--sequence-dictionary \"${reference_genome_fasta_dict}\" \\\n\t${per_chromosome_normal_pileup.collect { \"--I $it \" }.join()} \\\n\t--O \"${normal_pileup}\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "per_chromosome_normal_pileups_forMutectPileupGather",
            "reference_genome_fasta_dict_forMutectPileupGatherNormal"
        ],
        "nb_inputs": 2,
        "outputs": [
            "normal_pileups_forMutectContamination"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "mutect2ContaminationCalculation_gatk": {
        "name_process": "mutect2ContaminationCalculation_gatk",
        "string_process": "\nprocess mutect2ContaminationCalculation_gatk {\n\tpublishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup), path(normal_pileup) from tumor_pileups_forMutectContamination.join(normal_pileups_forMutectContamination)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(mutect_contamination_file) into contamination_file_forMutectFilter, mutect_output_forConsensusMetadata\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tmutect_contamination_file = \"${tumor_normal_sample_id}.mutect.contamination.txt\" \n\t\"\"\"\n\tgatk CalculateContamination \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--input \"${tumor_pileup}\" \\\n\t--matched-normal \"${normal_pileup}\" \\\n\t--output \"${mutect_contamination_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\tmutect_contamination_file = \"${tumor_normal_sample_id}.mutect.contamination.txt\" \n\t\"\"\"\n\tgatk CalculateContamination \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--input \"${tumor_pileup}\" \\\n\t--matched-normal \"${normal_pileup}\" \\\n\t--output \"${mutect_contamination_file}\"\n\t\"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "tumor_pileups_forMutectContamination",
            "normal_pileups_forMutectContamination"
        ],
        "nb_inputs": 2,
        "outputs": [
            "contamination_file_forMutectFilter",
            "mutect_output_forConsensusMetadata"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "mutect2VariantFiltration_gatk": {
        "name_process": "mutect2VariantFiltration_gatk",
        "string_process": "\nprocess mutect2VariantFiltration_gatk {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(merged_raw_vcf), path(merged_raw_vcf_index), path(merged_mutect_stats_file), path(mutect_contamination_file), path(reference_genome_fasta_forMutectFilter), path(reference_genome_fasta_index_forMutectFilter), path(reference_genome_fasta_dict_forMutectFilter) from input_vcf_stats_and_contamination_forMutectFilter.combine(reference_genome_bundle_forMutectFilter)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(filtered_vcf), path(filtered_vcf_index) into filtered_vcf_forMutectBcftools\n\tpath filter_stats_file\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tfiltered_vcf = \"${tumor_normal_sample_id}.filtered.vcf.gz\"\n\tfiltered_vcf_index = \"${filtered_vcf}.tbi\"\n\tfilter_stats_file = \"${tumor_normal_sample_id}.filterstats.txt\"\n\t\"\"\"\n\tgatk FilterMutectCalls \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--unique-alt-read-count 5 \\\n\t--reference \"${reference_genome_fasta_forMutectFilter}\" \\\n\t--stats \"${merged_mutect_stats_file}\" \\\n\t--variant \"${merged_raw_vcf}\" \\\n\t--contamination-table \"${mutect_contamination_file}\" \\\n\t--output \"${filtered_vcf}\" \\\n\t--filtering-stats \"${filter_stats_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "\tfiltered_vcf = \"${tumor_normal_sample_id}.filtered.vcf.gz\"\n\tfiltered_vcf_index = \"${filtered_vcf}.tbi\"\n\tfilter_stats_file = \"${tumor_normal_sample_id}.filterstats.txt\"\n\t\"\"\"\n\tgatk FilterMutectCalls \\\n\t--java-options \"-Xmx${task.memory.toGiga()}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--unique-alt-read-count 5 \\\n\t--reference \"${reference_genome_fasta_forMutectFilter}\" \\\n\t--stats \"${merged_mutect_stats_file}\" \\\n\t--variant \"${merged_raw_vcf}\" \\\n\t--contamination-table \"${mutect_contamination_file}\" \\\n\t--output \"${filtered_vcf}\" \\\n\t--filtering-stats \"${filter_stats_file}\"\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "input_vcf_stats_and_contamination_forMutectFilter",
            "reference_genome_bundle_forMutectFilter"
        ],
        "nb_inputs": 2,
        "outputs": [
            "filtered_vcf_forMutectBcftools",
            "filter_stats_file"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "splitMultiallelicAndLeftNormalizeMutect2Vcf_bcftools": {
        "name_process": "splitMultiallelicAndLeftNormalizeMutect2Vcf_bcftools",
        "string_process": "\nprocess splitMultiallelicAndLeftNormalizeMutect2Vcf_bcftools {\n\tpublishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(filtered_vcf), path(filtered_vcf_index), path(reference_genome_fasta_forMutectBcftools), path(reference_genome_fasta_index_forMutectBcftools), path(reference_genome_fasta_dict_forMutectBcftools) from filtered_vcf_forMutectBcftools.combine(reference_genome_bundle_forMutectBcftools)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(final_mutect_vcf), path(final_mutect_vcf_index) into mutect_vcf_forSclust\n\ttuple val(tumor_normal_sample_id), path(final_mutect_vcf), path(final_mutect_vcf_index) into final_combined_mutect_vcf\n\tpath mutect_multiallelics_stats\n\tpath mutect_realign_normalize_stats\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tfinal_mutect_vcf = \"${tumor_normal_sample_id}.mutect.somatic.vcf.gz\"\n\tfinal_mutect_vcf_index = \"${final_mutect_vcf}.tbi\"\n\tmutect_multiallelics_stats = \"${tumor_normal_sample_id}.mutect.multiallelicsstats.txt\"\n\tmutect_realign_normalize_stats = \"${tumor_normal_sample_id}.mutect.realignnormalizestats.txt\"\n\t\"\"\"\n\tzcat \"${filtered_vcf}\" \\\n\t| \\\n\tgrep -E '^#|PASS' \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -both \\\n\t--output-type z \\\n\t- 2>\"${mutect_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forMutectBcftools}\" \\\n\t--output-type z \\\n\t- 2>\"${mutect_realign_normalize_stats}\" \\\n\t--output \"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\tfinal_mutect_vcf = \"${tumor_normal_sample_id}.mutect.somatic.vcf.gz\"\n\tfinal_mutect_vcf_index = \"${final_mutect_vcf}.tbi\"\n\tmutect_multiallelics_stats = \"${tumor_normal_sample_id}.mutect.multiallelicsstats.txt\"\n\tmutect_realign_normalize_stats = \"${tumor_normal_sample_id}.mutect.realignnormalizestats.txt\"\n\t\"\"\"\n\tzcat \"${filtered_vcf}\" \\\n\t| \\\n\tgrep -E '^#|PASS' \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -both \\\n\t--output-type z \\\n\t- 2>\"${mutect_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forMutectBcftools}\" \\\n\t--output-type z \\\n\t- 2>\"${mutect_realign_normalize_stats}\" \\\n\t--output \"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "PASS",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/pass",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "PASS",
                "uri": "https://bio.tools/pass",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PASS: a program to align short sequences",
                "homepage": "http://pass.cribi.unipd.it/cgi-bin/pass.pl"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "filtered_vcf_forMutectBcftools",
            "reference_genome_bundle_forMutectBcftools"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mutect_vcf_forSclust",
            "final_combined_mutect_vcf",
            "mutect_multiallelics_stats",
            "mutect_realign_normalize_stats"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "splitMutectSnvsAndIndelsForConsensus_bcftools": {
        "name_process": "splitMutectSnvsAndIndelsForConsensus_bcftools",
        "string_process": "\nprocess splitMutectSnvsAndIndelsForConsensus_bcftools {\n\tpublishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(final_mutect_vcf), path(final_mutect_vcf_index) from final_combined_mutect_vcf\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(final_mutect_snv_vcf), path(final_mutect_snv_vcf_index) into final_mutect_snv_vcf_forConsensus\n\ttuple val(tumor_normal_sample_id), path(final_mutect_indel_vcf), path(final_mutect_indel_vcf_index) into final_mutect_indel_vcf_forConsensus\n\n\twhen:\n\tparams.mutect == \"on\"\n\n\tscript:\n\tfinal_mutect_snv_vcf = \"${final_mutect_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".snv.vcf.gz\")\n\tfinal_mutect_snv_vcf_index =\"${final_mutect_snv_vcf}.tbi\"\n\tfinal_mutect_indel_vcf = \"${final_mutect_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".indel.vcf.gz\")\n\tfinal_mutect_indel_vcf_index = \"${final_mutect_indel_vcf}.tbi\"\n\t\"\"\"\n\tbcftools view \\\n\t--threads \"${task.cpus}\" \\\n\t--output-type z \\\n\t--types snps \\\n\t--output-file \"${final_mutect_snv_vcf}\" \\\n\t\"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_snv_vcf}\"\n\n\tbcftools view \\\n\t--threads \"${task.cpus}\" \\\n\t--output-type z \\\n\t--types indels \\\n\t--output-file \"${final_mutect_indel_vcf}\" \\\n\t\"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "\tfinal_mutect_snv_vcf = \"${final_mutect_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".snv.vcf.gz\")\n\tfinal_mutect_snv_vcf_index =\"${final_mutect_snv_vcf}.tbi\"\n\tfinal_mutect_indel_vcf = \"${final_mutect_vcf}\".replaceFirst(/\\.vcf\\.gz/, \".indel.vcf.gz\")\n\tfinal_mutect_indel_vcf_index = \"${final_mutect_indel_vcf}.tbi\"\n\t\"\"\"\n\tbcftools view \\\n\t--threads \"${task.cpus}\" \\\n\t--output-type z \\\n\t--types snps \\\n\t--output-file \"${final_mutect_snv_vcf}\" \\\n\t\"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_snv_vcf}\"\n\n\tbcftools view \\\n\t--threads \"${task.cpus}\" \\\n\t--output-type z \\\n\t--types indels \\\n\t--output-file \"${final_mutect_indel_vcf}\" \\\n\t\"${final_mutect_vcf}\"\n\n\ttabix \"${final_mutect_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "final_combined_mutect_vcf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final_mutect_snv_vcf_forConsensus",
            "final_mutect_indel_vcf_forConsensus"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/mutect\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.mutect == \"on\"",
        "stub": ""
    },
    "binReadCoverage_copycat": {
        "name_process": "binReadCoverage_copycat",
        "string_process": "\nprocess binReadCoverage_copycat {\n    publishDir \"${params.output_dir}/somatic/copycat\", mode: 'copy', pattern: '*.{csv.gz,seg}'\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(tumor_bam), path(autosome_sex_chromosome_sizes) from bam_forCopycat.combine(autosome_sex_chromosome_sizes_forCopycat)\n     \n    output:\n    path tumor_copycat_coverage_csv\n    path tumor_copycat_coverage_seg\n\n    when:\n    params.copycat == \"on\"\n\n    script:\n    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    tumor_copycat_coverage_csv = \"${tumor_id}.coverage.10kb.csv.gz\"\n    tumor_copycat_coverage_seg = \"${tumor_id}.coverage.10kb.igv.seg\"\n    \"\"\"\n    copycat.sh \\\n    \"${tumor_bam}\" \\\n    \"${autosome_sex_chromosome_sizes}\" \\\n    \"${tumor_id}\"\n\n    mv \"${tumor_id}.coverage.10kb.for_IGV.seg\" \"${tumor_copycat_coverage_seg}\"\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n    tumor_copycat_coverage_csv = \"${tumor_id}.coverage.10kb.csv.gz\"\n    tumor_copycat_coverage_seg = \"${tumor_id}.coverage.10kb.igv.seg\"\n    \"\"\"\n    copycat.sh \\\n    \"${tumor_bam}\" \\\n    \"${autosome_sex_chromosome_sizes}\" \\\n    \"${tumor_id}\"\n\n    mv \"${tumor_id}.coverage.10kb.for_IGV.seg\" \"${tumor_copycat_coverage_seg}\"\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_forCopycat",
            "autosome_sex_chromosome_sizes_forCopycat"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tumor_copycat_coverage_csv",
            "tumor_copycat_coverage_seg"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/copycat\", mode: 'copy', pattern: '*.{csv.gz,seg}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.copycat == \"on\"",
        "stub": ""
    },
    "cnvCalling_ascatngs": {
        "name_process": "cnvCalling_ascatngs",
        "string_process": "\nprocess cnvCalling_ascatngs {\n\tpublishDir \"${params.output_dir}/somatic/ascatNgs\", mode: 'copy', pattern: '*.{png,csv,vcf.gz,txt,tbi}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(sample_sex), path(reference_genome_fasta_forAscatNgs), path(reference_genome_fasta_index_forAscatNgs), path(reference_genome_fasta_dict_forAscatNgs), path(snp_gc_corrections) from bams_and_sex_of_sample_forAscatNgs.combine(reference_genome_and_snpgc_forAscatNgs)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(ascat_cnv_profile_final) into final_ascat_cnv_profile_forConsensus\n\ttuple val(tumor_normal_sample_id), path(ascat_run_statistics) into ascat_output_forConsensusMetadata\n\tpath ascat_cnv_profile_vcf\n\tpath ascat_cnv_profile_vcf_index\n\tpath ascat_profile_png\n\tpath ascat_raw_profile_png\n\tpath sunrise_png\n\tpath aspcf_png\n\tpath germline_png\n\tpath tumor_png\n\n\twhen:\n\tparams.ascatngs == \"on\"\n\n\tscript:\n\tascat_ploidy_and_purity = (params.ascatngs_ploidy && params.ascatngs_purity) ? \"-ploidy ${params.ascatngs_ploidy} -purity ${params.ascatngs_purity}\" : \"\"\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tascat_profile_png = \"${tumor_normal_sample_id}.ascat.profile.png\"\n\tascat_raw_profile_png = \"${tumor_normal_sample_id}.ascat.raw.profile.png\"\n\tsunrise_png = \"${tumor_normal_sample_id}.ascat.sunrise.png\"\n\taspcf_png = \"${tumor_normal_sample_id}.ascat.aspcf.png\"\n\tgermline_png = \"${tumor_normal_sample_id}.ascat.germline.png\"\n\ttumor_png = \"${tumor_normal_sample_id}.ascat.tumor.png\"\n\tascat_cnv_profile_final = \"${tumor_normal_sample_id}.ascat.cnv.csv\"\n\tascat_cnv_profile_vcf = \"${tumor_normal_sample_id}.ascat.vcf.gz\"\n\tascat_cnv_profile_vcf_index = \"${ascat_cnv_profile_vcf}.tbi\"\n\tascat_run_statistics = \"${tumor_normal_sample_id}.ascat.runstatistics.txt\"\n\t\"\"\"\n\tsex=\\$(cut -d ' ' -f 2 \"${sample_sex}\")\n\n\tascat.pl \\\n\t-outdir . \\\n\t-tumour \"${tumor_bam}\" \\\n\t-t_name \"${tumor_id}\" \\\n\t-normal \"${normal_bam}\" \\\n\t-n_name \"${normal_id}\" \\\n\t-reference \"${reference_genome_fasta_forAscatNgs}\" \\\n\t-snp_gc \"${snp_gc_corrections}\" \\\n\t-protocol WGS \\\n\t-gender \"\\${sex}\" \\\n\t-genderChr chrY \\\n\t-species Homo_sapiens \\\n\t-assembly GRCh38 \\\n\t-cpus \"${task.cpus}\" \\\n\t-nobigwig \\\n\t${ascat_ploidy_and_purity}\n\n\tmv \"${tumor_id}.ASCATprofile.png\" \"${ascat_profile_png}\"\n\tmv \"${tumor_id}.rawprofile.png\" \"${ascat_raw_profile_png}\"\n\tmv \"${tumor_id}.sunrise.png\" \"${sunrise_png}\"\n\tmv \"${tumor_id}.ASPCF.png\" \"${aspcf_png}\"\n\tmv \"${tumor_id}.germline.png\" \"${germline_png}\"\n\tmv \"${tumor_id}.tumour.png\" \"${tumor_png}\"\n\tmv \"${tumor_id}.copynumber.caveman.vcf.gz\" \"${ascat_cnv_profile_vcf}\"\n\tmv \"${tumor_id}.copynumber.caveman.vcf.gz.tbi\" \"${ascat_cnv_profile_vcf_index}\"\n\tmv \"${tumor_id}.samplestatistics.txt\" \"${ascat_run_statistics}\"\n\n\ttouch \"${ascat_cnv_profile_final}\"\n\techo \"segment_number,chromosome,start_position,end_position,normal_total_copy_number,normal_minor_copy_number,tumor_total_copy_number,tumor_minor_copy_number\" >> \"${ascat_cnv_profile_final}\"\n\tcat \"${tumor_id}.copynumber.caveman.csv\" >> \"${ascat_cnv_profile_final}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 70,
        "string_script": "\tascat_ploidy_and_purity = (params.ascatngs_ploidy && params.ascatngs_purity) ? \"-ploidy ${params.ascatngs_ploidy} -purity ${params.ascatngs_purity}\" : \"\"\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tascat_profile_png = \"${tumor_normal_sample_id}.ascat.profile.png\"\n\tascat_raw_profile_png = \"${tumor_normal_sample_id}.ascat.raw.profile.png\"\n\tsunrise_png = \"${tumor_normal_sample_id}.ascat.sunrise.png\"\n\taspcf_png = \"${tumor_normal_sample_id}.ascat.aspcf.png\"\n\tgermline_png = \"${tumor_normal_sample_id}.ascat.germline.png\"\n\ttumor_png = \"${tumor_normal_sample_id}.ascat.tumor.png\"\n\tascat_cnv_profile_final = \"${tumor_normal_sample_id}.ascat.cnv.csv\"\n\tascat_cnv_profile_vcf = \"${tumor_normal_sample_id}.ascat.vcf.gz\"\n\tascat_cnv_profile_vcf_index = \"${ascat_cnv_profile_vcf}.tbi\"\n\tascat_run_statistics = \"${tumor_normal_sample_id}.ascat.runstatistics.txt\"\n\t\"\"\"\n\tsex=\\$(cut -d ' ' -f 2 \"${sample_sex}\")\n\n\tascat.pl \\\n\t-outdir . \\\n\t-tumour \"${tumor_bam}\" \\\n\t-t_name \"${tumor_id}\" \\\n\t-normal \"${normal_bam}\" \\\n\t-n_name \"${normal_id}\" \\\n\t-reference \"${reference_genome_fasta_forAscatNgs}\" \\\n\t-snp_gc \"${snp_gc_corrections}\" \\\n\t-protocol WGS \\\n\t-gender \"\\${sex}\" \\\n\t-genderChr chrY \\\n\t-species Homo_sapiens \\\n\t-assembly GRCh38 \\\n\t-cpus \"${task.cpus}\" \\\n\t-nobigwig \\\n\t${ascat_ploidy_and_purity}\n\n\tmv \"${tumor_id}.ASCATprofile.png\" \"${ascat_profile_png}\"\n\tmv \"${tumor_id}.rawprofile.png\" \"${ascat_raw_profile_png}\"\n\tmv \"${tumor_id}.sunrise.png\" \"${sunrise_png}\"\n\tmv \"${tumor_id}.ASPCF.png\" \"${aspcf_png}\"\n\tmv \"${tumor_id}.germline.png\" \"${germline_png}\"\n\tmv \"${tumor_id}.tumour.png\" \"${tumor_png}\"\n\tmv \"${tumor_id}.copynumber.caveman.vcf.gz\" \"${ascat_cnv_profile_vcf}\"\n\tmv \"${tumor_id}.copynumber.caveman.vcf.gz.tbi\" \"${ascat_cnv_profile_vcf_index}\"\n\tmv \"${tumor_id}.samplestatistics.txt\" \"${ascat_run_statistics}\"\n\n\ttouch \"${ascat_cnv_profile_final}\"\n\techo \"segment_number,chromosome,start_position,end_position,normal_total_copy_number,normal_minor_copy_number,tumor_total_copy_number,tumor_minor_copy_number\" >> \"${ascat_cnv_profile_final}\"\n\tcat \"${tumor_id}.copynumber.caveman.csv\" >> \"${ascat_cnv_profile_final}\"\n\t\"\"\"",
        "nb_lignes_script": 46,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bams_and_sex_of_sample_forAscatNgs",
            "reference_genome_and_snpgc_forAscatNgs"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_ascat_cnv_profile_forConsensus",
            "ascat_output_forConsensusMetadata",
            "ascat_cnv_profile_vcf",
            "ascat_cnv_profile_vcf_index",
            "ascat_profile_png",
            "ascat_raw_profile_png",
            "sunrise_png",
            "aspcf_png",
            "germline_png",
            "tumor_png"
        ],
        "nb_outputs": 10,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/ascatNgs\", mode: 'copy', pattern: '*.{png,csv,vcf.gz,txt,tbi}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.ascatngs == \"on\"",
        "stub": ""
    },
    "bamMpileupForControlFreec_samtools": {
        "name_process": "bamMpileupForControlFreec_samtools",
        "string_process": "\nprocess bamMpileupForControlFreec_samtools {\n\ttag \"${tumor_normal_sample_id} C=${chromosome}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forControlFreecSamtoolsMpileup), path(reference_genome_fasta_index_forControlFreecSamtoolsMpileup), path(reference_genome_fasta_dict_forControlFreecSamtoolsMpileup), path(gatk_bundle_wgs_bed_forControlFreecSamtoolsMpileup) from tumor_normal_pair_forControlFreecSamtoolsMpileup.combine(reference_genome_bundle_and_bed_forControlFreecSamtoolsMpileup)\n\teach chromosome from chromosome_list_forControlFreecSamtoolsMpileup\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(tumor_pileup_per_chromosome), path(normal_pileup_per_chromosome) into per_chromosome_tumor_normal_pileups_forControlFreecMerge\n\n\twhen:\n\tparams.controlfreec == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\ttumor_pileup_per_chromosome = \"${tumor_id}.${chromosome}.pileup.gz\"\n\tnormal_pileup_per_chromosome = \"${normal_id}.${chromosome}.pileup.gz\"\n\t\"\"\"\n\tsamtools mpileup \\\n\t--positions \"${gatk_bundle_wgs_bed_forControlFreecSamtoolsMpileup}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forControlFreecSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t\"${tumor_bam}\" \\\n\t| \\\n\tbgzip > \"${tumor_pileup_per_chromosome}\"\n\n\tsamtools mpileup \\\n\t--positions \"${gatk_bundle_wgs_bed_forControlFreecSamtoolsMpileup}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forControlFreecSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t\"${normal_bam}\" \\\n\t| \\\n\tbgzip > \"${normal_pileup_per_chromosome}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\ttumor_pileup_per_chromosome = \"${tumor_id}.${chromosome}.pileup.gz\"\n\tnormal_pileup_per_chromosome = \"${normal_id}.${chromosome}.pileup.gz\"\n\t\"\"\"\n\tsamtools mpileup \\\n\t--positions \"${gatk_bundle_wgs_bed_forControlFreecSamtoolsMpileup}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forControlFreecSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t\"${tumor_bam}\" \\\n\t| \\\n\tbgzip > \"${tumor_pileup_per_chromosome}\"\n\n\tsamtools mpileup \\\n\t--positions \"${gatk_bundle_wgs_bed_forControlFreecSamtoolsMpileup}\" \\\n\t--fasta-ref \"${reference_genome_fasta_forControlFreecSamtoolsMpileup}\" \\\n\t--region \"${chromosome}\" \\\n\t\"${normal_bam}\" \\\n\t| \\\n\tbgzip > \"${normal_pileup_per_chromosome}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forControlFreecSamtoolsMpileup",
            "reference_genome_bundle_and_bed_forControlFreecSamtoolsMpileup",
            "chromosome_list_forControlFreecSamtoolsMpileup"
        ],
        "nb_inputs": 3,
        "outputs": [
            "per_chromosome_tumor_normal_pileups_forControlFreecMerge"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id} C=${chromosome}\""
        ],
        "when": "params.controlfreec == \"on\"",
        "stub": ""
    },
    "mergeMpileupsForControlFreec_samtools": {
        "name_process": "mergeMpileupsForControlFreec_samtools",
        "string_process": "\nprocess mergeMpileupsForControlFreec_samtools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(tumor_pileup_per_chromosome), path(normal_pileup_per_chromosome) from per_chromosome_tumor_normal_pileups_forControlFreecMerge.groupTuple(by: [0,1,2])\n\tval chromosome_list from chromosome_list_forControlFreecMerge.collect()\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup), path(normal_pileup) into tumor_normal_pileups_forControlFreecCalling\n\n\twhen:\n\tparams.controlfreec == \"on\"\n\n\tscript:\n\ttumor_pileup = \"${tumor_id}.pileup.gz\"\n\tnormal_pileup = \"${normal_id}.pileup.gz\"\n\t\"\"\"\n\tchromosome_array=\\$(echo \"${chromosome_list}\" | sed 's/[][]//g' | sed 's/,//g')\n\n\tfor chrom in \\$chromosome_array;\n\t\tdo\n\t\t\tzcat \"${tumor_id}.\\${chrom}.pileup.gz\" >> \"${tumor_id}.pileup\"\n\n\t\t\tzcat \"${normal_id}.\\${chrom}.pileup.gz\" >> \"${normal_id}.pileup\"\n\t\tdone\n\n\tbgzip < \"${tumor_id}.pileup\" > \"${tumor_pileup}\"\n\tbgzip < \"${normal_id}.pileup\" > \"${normal_pileup}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\ttumor_pileup = \"${tumor_id}.pileup.gz\"\n\tnormal_pileup = \"${normal_id}.pileup.gz\"\n\t\"\"\"\n\tchromosome_array=\\$(echo \"${chromosome_list}\" | sed 's/[][]//g' | sed 's/,//g')\n\n\tfor chrom in \\$chromosome_array;\n\t\tdo\n\t\t\tzcat \"${tumor_id}.\\${chrom}.pileup.gz\" >> \"${tumor_id}.pileup\"\n\n\t\t\tzcat \"${normal_id}.\\${chrom}.pileup.gz\" >> \"${normal_id}.pileup\"\n\t\tdone\n\n\tbgzip < \"${tumor_id}.pileup\" > \"${tumor_pileup}\"\n\tbgzip < \"${normal_id}.pileup\" > \"${normal_pileup}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "per_chromosome_tumor_normal_pileups_forControlFreecMerge",
            "chromosome_list_forControlFreecMerge"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tumor_normal_pileups_forControlFreecCalling"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.controlfreec == \"on\"",
        "stub": ""
    },
    "cnvCalling_controlfreec": {
        "name_process": "cnvCalling_controlfreec",
        "string_process": "\nprocess cnvCalling_controlfreec {\n\tpublishDir \"${params.output_dir}/somatic/controlFreec\", mode: 'copy', pattern: '*.{txt,cnv,bedGraph}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_pileup), path(normal_pileup), path(sex_of_sample_forControlFreecCalling), path(reference_genome_fasta_forControlFreecCalling), path(reference_genome_fasta_index_forControlFreecCalling), path(reference_genome_fasta_dict_forControlFreecCalling), path(autosome_sex_chromosome_fasta_dir), path(autosome_sex_chromosome_sizes), path(common_dbsnp_ref_vcf), path(common_dbsnp_ref_vcf_index), path(mappability_track_zip) from tumor_normal_pileups_and_sex_ident.combine(reference_data_bundle_forControlFreec)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(cnv_profile_raw), path(cnv_ratio_file), path(baf_file), path(control_freec_bedgraph) into cnv_calling_files_forControlFreecPostProcessing\n\tpath control_freec_config_file\n\ttuple val(tumor_normal_sample_id), path(control_freec_subclones_file) into control_freec_subclones_forConsensusSubclones\n\ttuple val(tumor_normal_sample_id), path(control_freec_run_info) into control_freec_output_forConsensusMetadata\n\n\twhen:\n\tparams.controlfreec == \"on\"\n\n\tscript:\n\tbreakpoint_threshold = \"${params.controlfreec_bp_threshold}\"\n\tcontrol_freec_ploidy = \"${params.controlfreec_ploidy}\"\n\tcontrol_freec_config_file = \"${tumor_normal_sample_id}.controlfreec.config.txt\"\n\tcontrol_freec_run_info = \"${tumor_normal_sample_id}.controlfreec.runinfo.txt\"\n\tcnv_profile_raw = \"${tumor_normal_sample_id}.controlfreec.raw.cnv\"\n\tcnv_ratio_file = \"${tumor_normal_sample_id}.controlfreec.ratio.txt\"\n\tcontrol_freec_subclones_file = \"${tumor_normal_sample_id}.controlfreec.subclones.txt\"\n\tbaf_file = \"${tumor_normal_sample_id}.controlfreec.baf.txt\"\n\tcontrol_freec_bedgraph = \"${tumor_normal_sample_id}.controlfreec.ratio.bedGraph\"\n\t\"\"\"\n\tunzip -q \"${mappability_track_zip}\"\n\tsex=\\$(cut -d ' ' -f 2 \"${sex_of_sample_forControlFreecCalling}\")\n\n\ttouch \"${control_freec_config_file}\"\n\techo \"[general]\" >> \"${control_freec_config_file}\"\n\techo \"BedGraphOutput = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"breakPointThreshold = ${breakpoint_threshold}\" >> \"${control_freec_config_file}\"\n\techo \"breakPointType = 2\" >> \"${control_freec_config_file}\"\n\techo \"chrFiles = \\${PWD}/${autosome_sex_chromosome_fasta_dir}\" >> \"${control_freec_config_file}\"\n\techo \"chrLenFile = \\${PWD}/${autosome_sex_chromosome_sizes}\" >> \"${control_freec_config_file}\"\n\techo \"contaminationAdjustment = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"forceGCcontentNormalization = 1\" >> \"${control_freec_config_file}\"\n\techo \"gemMappabilityFile = \\${PWD}/out100m2_hg38.gem\" >> \"${control_freec_config_file}\"\n\techo \"minimalSubclonePresence = 20\" >> \"${control_freec_config_file}\"\n\techo \"maxThreads = ${task.cpus}\" >> \"${control_freec_config_file}\"\n\techo \"ploidy = ${control_freec_ploidy}\" >> \"${control_freec_config_file}\"\n\techo \"sex = \\${sex}\" >> \"${control_freec_config_file}\"\n\techo \"uniqueMatch = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"window = 50000\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[sample]\" >> \"${control_freec_config_file}\"\n\techo \"mateFile = ${tumor_pileup}\" >> \"${control_freec_config_file}\"\n\techo \"inputFormat = pileup\" >> \"${control_freec_config_file}\"\n\techo \"mateOrientation = FR\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[control]\" >> \"${control_freec_config_file}\"\n\techo \"mateFile = ${normal_pileup}\" >> \"${control_freec_config_file}\"\n\techo \"inputFormat = pileup\" >> \"${control_freec_config_file}\"\n\techo \"mateOrientation = FR\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[BAF]\" >> \"${control_freec_config_file}\"\n\techo \"SNPfile = \\${PWD}/${common_dbsnp_ref_vcf}\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\tfreec -conf \"${control_freec_config_file}\"\n\n\tmv \"${tumor_pileup}_info.txt\" \"${control_freec_run_info}\"\n\tmv \"${tumor_pileup}_CNVs\" \"${cnv_profile_raw}\"\n\tmv \"${tumor_pileup}_ratio.txt\" \"${cnv_ratio_file}\"\n\tmv \"${tumor_pileup}_subclones.txt\" \"${control_freec_subclones_file}\"\n\tmv \"${tumor_pileup}_BAF.txt\" \"${baf_file}\"\n\tmv \"${tumor_pileup}_ratio.BedGraph\" \"${control_freec_bedgraph}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 73,
        "string_script": "\tbreakpoint_threshold = \"${params.controlfreec_bp_threshold}\"\n\tcontrol_freec_ploidy = \"${params.controlfreec_ploidy}\"\n\tcontrol_freec_config_file = \"${tumor_normal_sample_id}.controlfreec.config.txt\"\n\tcontrol_freec_run_info = \"${tumor_normal_sample_id}.controlfreec.runinfo.txt\"\n\tcnv_profile_raw = \"${tumor_normal_sample_id}.controlfreec.raw.cnv\"\n\tcnv_ratio_file = \"${tumor_normal_sample_id}.controlfreec.ratio.txt\"\n\tcontrol_freec_subclones_file = \"${tumor_normal_sample_id}.controlfreec.subclones.txt\"\n\tbaf_file = \"${tumor_normal_sample_id}.controlfreec.baf.txt\"\n\tcontrol_freec_bedgraph = \"${tumor_normal_sample_id}.controlfreec.ratio.bedGraph\"\n\t\"\"\"\n\tunzip -q \"${mappability_track_zip}\"\n\tsex=\\$(cut -d ' ' -f 2 \"${sex_of_sample_forControlFreecCalling}\")\n\n\ttouch \"${control_freec_config_file}\"\n\techo \"[general]\" >> \"${control_freec_config_file}\"\n\techo \"BedGraphOutput = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"breakPointThreshold = ${breakpoint_threshold}\" >> \"${control_freec_config_file}\"\n\techo \"breakPointType = 2\" >> \"${control_freec_config_file}\"\n\techo \"chrFiles = \\${PWD}/${autosome_sex_chromosome_fasta_dir}\" >> \"${control_freec_config_file}\"\n\techo \"chrLenFile = \\${PWD}/${autosome_sex_chromosome_sizes}\" >> \"${control_freec_config_file}\"\n\techo \"contaminationAdjustment = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"forceGCcontentNormalization = 1\" >> \"${control_freec_config_file}\"\n\techo \"gemMappabilityFile = \\${PWD}/out100m2_hg38.gem\" >> \"${control_freec_config_file}\"\n\techo \"minimalSubclonePresence = 20\" >> \"${control_freec_config_file}\"\n\techo \"maxThreads = ${task.cpus}\" >> \"${control_freec_config_file}\"\n\techo \"ploidy = ${control_freec_ploidy}\" >> \"${control_freec_config_file}\"\n\techo \"sex = \\${sex}\" >> \"${control_freec_config_file}\"\n\techo \"uniqueMatch = TRUE\" >> \"${control_freec_config_file}\"\n\techo \"window = 50000\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[sample]\" >> \"${control_freec_config_file}\"\n\techo \"mateFile = ${tumor_pileup}\" >> \"${control_freec_config_file}\"\n\techo \"inputFormat = pileup\" >> \"${control_freec_config_file}\"\n\techo \"mateOrientation = FR\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[control]\" >> \"${control_freec_config_file}\"\n\techo \"mateFile = ${normal_pileup}\" >> \"${control_freec_config_file}\"\n\techo \"inputFormat = pileup\" >> \"${control_freec_config_file}\"\n\techo \"mateOrientation = FR\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\techo \"[BAF]\" >> \"${control_freec_config_file}\"\n\techo \"SNPfile = \\${PWD}/${common_dbsnp_ref_vcf}\" >> \"${control_freec_config_file}\"\n\techo \"\" >> \"${control_freec_config_file}\"\n\n\tfreec -conf \"${control_freec_config_file}\"\n\n\tmv \"${tumor_pileup}_info.txt\" \"${control_freec_run_info}\"\n\tmv \"${tumor_pileup}_CNVs\" \"${cnv_profile_raw}\"\n\tmv \"${tumor_pileup}_ratio.txt\" \"${cnv_ratio_file}\"\n\tmv \"${tumor_pileup}_subclones.txt\" \"${control_freec_subclones_file}\"\n\tmv \"${tumor_pileup}_BAF.txt\" \"${baf_file}\"\n\tmv \"${tumor_pileup}_ratio.BedGraph\" \"${control_freec_bedgraph}\"\n\t\"\"\"",
        "nb_lignes_script": 55,
        "language_script": "bash",
        "tools": [
            "FREEC"
        ],
        "tools_url": [
            "https://bio.tools/freec"
        ],
        "tools_dico": [
            {
                "name": "FREEC",
                "uri": "https://bio.tools/freec",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3473",
                            "term": "Data mining"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3574",
                            "term": "Human genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Copy number estimation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Genome alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3182",
                                    "term": "Whole genome alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3233",
                                    "term": "Transcript copy number estimation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for control-free copy number alteration (CNA) and allelic imbalances (LOH) detection using deep-sequencing data, particularly useful for cancer studies.",
                "homepage": "http://boevalab.com/FREEC/"
            }
        ],
        "inputs": [
            "tumor_normal_pileups_and_sex_ident",
            "reference_data_bundle_forControlFreec"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cnv_calling_files_forControlFreecPostProcessing",
            "control_freec_config_file",
            "control_freec_subclones_forConsensusSubclones",
            "control_freec_output_forConsensusMetadata"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/controlFreec\", mode: 'copy', pattern: '*.{txt,cnv,bedGraph}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.controlfreec == \"on\"",
        "stub": ""
    },
    "cnvPredictionPostProcessing_controlfreec": {
        "name_process": "cnvPredictionPostProcessing_controlfreec",
        "string_process": "\nprocess cnvPredictionPostProcessing_controlfreec {\n\tpublishDir \"${params.output_dir}/somatic/controlFreec\", mode: 'copy', pattern: '*.{txt,bed,png}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(cnv_profile_raw), path(cnv_ratio_file), path(baf_file), path(control_freec_bedgraph) from cnv_calling_files_forControlFreecPostProcessing\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(control_freec_bedgraph), path(control_freec_cnv_profile_final) into final_control_freec_cnv_profile_forConsensus\n\tpath ratio_graph_png\n\tpath ratio_log2_graph_png\n\tpath baf_graph_png\n\n\twhen:\n\tparams.controlfreec == \"on\"\n\n\tscript:\n\tcontrol_freec_cnv_profile_final = \"${tumor_normal_sample_id}.controlfreec.cnv.txt\"\n\tcontrol_freec_cnv_ratio_bed_file = \"${tumor_normal_sample_id}.controlfreec.ratio.bed\"\n\tratio_graph_png = \"${tumor_normal_sample_id}.controlfreec.ratio.png\"\n\tratio_log2_graph_png = \"${tumor_normal_sample_id}.controlfreec.ratio.log2.png\"\n\tbaf_graph_png = \"${tumor_normal_sample_id}.controlfreec.baf.png\"\n\t\"\"\"\n\tcat \\${CONTROLFREEC_DIR}/scripts/assess_significance.R | R --slave --args \"${cnv_profile_raw}\" \"${cnv_ratio_file}\"\n\tmv \"${cnv_profile_raw}.p.value.txt\" \"${control_freec_cnv_profile_final}\"\n\n\tcat \\${CONTROLFREEC_DIR}/scripts/makeGraph.R | R --slave --args 2 \"${cnv_ratio_file}\" \"${baf_file}\"\n\tmv \"${cnv_ratio_file}.png\" \"${ratio_graph_png}\"\n\tmv \"${cnv_ratio_file}.log2.png\" \"${ratio_log2_graph_png}\"\n\tmv \"${baf_file}.png\" \"${baf_graph_png}\"\n\n\tperl \\${CONTROLFREEC_DIR}/scripts/freec2bed.pl -f \"${cnv_ratio_file}\" > \"${control_freec_cnv_ratio_bed_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\tcontrol_freec_cnv_profile_final = \"${tumor_normal_sample_id}.controlfreec.cnv.txt\"\n\tcontrol_freec_cnv_ratio_bed_file = \"${tumor_normal_sample_id}.controlfreec.ratio.bed\"\n\tratio_graph_png = \"${tumor_normal_sample_id}.controlfreec.ratio.png\"\n\tratio_log2_graph_png = \"${tumor_normal_sample_id}.controlfreec.ratio.log2.png\"\n\tbaf_graph_png = \"${tumor_normal_sample_id}.controlfreec.baf.png\"\n\t\"\"\"\n\tcat \\${CONTROLFREEC_DIR}/scripts/assess_significance.R | R --slave --args \"${cnv_profile_raw}\" \"${cnv_ratio_file}\"\n\tmv \"${cnv_profile_raw}.p.value.txt\" \"${control_freec_cnv_profile_final}\"\n\n\tcat \\${CONTROLFREEC_DIR}/scripts/makeGraph.R | R --slave --args 2 \"${cnv_ratio_file}\" \"${baf_file}\"\n\tmv \"${cnv_ratio_file}.png\" \"${ratio_graph_png}\"\n\tmv \"${cnv_ratio_file}.log2.png\" \"${ratio_log2_graph_png}\"\n\tmv \"${baf_file}.png\" \"${baf_graph_png}\"\n\n\tperl \\${CONTROLFREEC_DIR}/scripts/freec2bed.pl -f \"${cnv_ratio_file}\" > \"${control_freec_cnv_ratio_bed_file}\"\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "cnv_calling_files_forControlFreecPostProcessing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final_control_freec_cnv_profile_forConsensus",
            "ratio_graph_png",
            "ratio_log2_graph_png",
            "baf_graph_png"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/controlFreec\", mode: 'copy', pattern: '*.{txt,bed,png}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.controlfreec == \"on\"",
        "stub": ""
    },
    "bamprocessPerChromosome_sclust": {
        "name_process": "bamprocessPerChromosome_sclust",
        "string_process": "\nprocess bamprocessPerChromosome_sclust {\n\ttag \"${tumor_normal_sample_id} C=${chromosome}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index) from tumor_normal_pair_forSclustBamprocess\n\teach chromosome from chromosome_list_forSclustBamprocess\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(bamprocess_data_per_chromosome) into per_chromosome_bamprocess_data\n\n\twhen:\n\tparams.sclust == \"on\" && params.mutect == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tbamprocess_data_per_chromosome = \"${tumor_normal_sample_id}_${chromosome}_bamprocess_data.txt\"\n\t\"\"\"\n\tSclust bamprocess \\\n\t-t \"${tumor_bam}\" \\\n\t-n \"${normal_bam}\" \\\n\t-o \"${tumor_normal_sample_id}\" \\\n\t-build hg38 \\\n\t-part 2 \\\n\t-r \"${chromosome}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tbamprocess_data_per_chromosome = \"${tumor_normal_sample_id}_${chromosome}_bamprocess_data.txt\"\n\t\"\"\"\n\tSclust bamprocess \\\n\t-t \"${tumor_bam}\" \\\n\t-n \"${normal_bam}\" \\\n\t-o \"${tumor_normal_sample_id}\" \\\n\t-build hg38 \\\n\t-part 2 \\\n\t-r \"${chromosome}\"\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "MSClust"
        ],
        "tools_url": [
            "https://bio.tools/msclust"
        ],
        "tools_dico": [
            {
                "name": "MSClust",
                "uri": "https://bio.tools/msclust",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Matlab package for Clustering 16S rRNA sequences into OTUs.",
                "homepage": "http://zhaocenter.org/software/#Genomic_Protein_Sequence_Analysis"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forSclustBamprocess",
            "chromosome_list_forSclustBamprocess"
        ],
        "nb_inputs": 2,
        "outputs": [
            "per_chromosome_bamprocess_data"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id} C=${chromosome}\""
        ],
        "when": "params.sclust == \"on\" && params.mutect == \"on\"",
        "stub": ""
    },
    "mergeBamprocessData_sclust": {
        "name_process": "mergeBamprocessData_sclust",
        "string_process": "\nprocess mergeBamprocessData_sclust {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(bamprocess_data_per_chromosome) from per_chromosome_bamprocess_data.groupTuple()\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(read_count_file), path(common_snp_count_file) into read_count_and_snp_count_files\n\n\twhen:\n\tparams.sclust == \"on\" && params.mutect == \"on\"\n\n\tscript:\n\tread_count_file = \"${tumor_normal_sample_id}_rcount.txt\"\n\tcommon_snp_count_file = \"${tumor_normal_sample_id}_snps.txt\"\n\t\"\"\"\n\tSclust bamprocess \\\n\t-build hg38 \\\n\t-i \"${tumor_normal_sample_id}\" \\\n\t-o \"${tumor_normal_sample_id}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\tread_count_file = \"${tumor_normal_sample_id}_rcount.txt\"\n\tcommon_snp_count_file = \"${tumor_normal_sample_id}_snps.txt\"\n\t\"\"\"\n\tSclust bamprocess \\\n\t-build hg38 \\\n\t-i \"${tumor_normal_sample_id}\" \\\n\t-o \"${tumor_normal_sample_id}\"\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "MSClust"
        ],
        "tools_url": [
            "https://bio.tools/msclust"
        ],
        "tools_dico": [
            {
                "name": "MSClust",
                "uri": "https://bio.tools/msclust",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Matlab package for Clustering 16S rRNA sequences into OTUs.",
                "homepage": "http://zhaocenter.org/software/#Genomic_Protein_Sequence_Analysis"
            }
        ],
        "inputs": [
            "per_chromosome_bamprocess_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "read_count_and_snp_count_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.sclust == \"on\" && params.mutect == \"on\"",
        "stub": ""
    },
    "prepareVcfForSclust_vcftools": {
        "name_process": "prepareVcfForSclust_vcftools",
        "string_process": "\nprocess prepareVcfForSclust_vcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(final_mutect_vcf), path(final_mutect_vcf_index) from mutect_vcf_forSclust\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(mutations_vcf) into vcf_forSclustCn, vcf_forSclustClustering\n\n\twhen:\n\tparams.sclust == \"on\" && params.mutect == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_normal_sample_id}\".replaceFirst(/\\_vs\\_.*/, \"\")\n\tnormal_id = \"${tumor_normal_sample_id}\".replaceFirst(/.*\\_vs\\_/, \"\")\n\ttumor_normal_read_depth = \"${tumor_normal_sample_id}.DP.FORMAT\"\n\ttumor_normal_allelic_frequency = \"${tumor_normal_sample_id}.AF.FORMAT\"\n\ttumor_normal_forward_reverse_reads = \"${tumor_normal_sample_id}.SB.FORMAT\"\n\tmutations_vcf = \"${tumor_normal_sample_id}.sclust.final.vcf.gz\"\n\t\"\"\"\n\tzcat \"${final_mutect_vcf}\" \\\n\t| \\\n\tsed 's|Approximate read depth; some reads may have been filtered|Read Depth Tumor|' \\\n\t| \\\n\tgzip > \"${tumor_normal_sample_id}.sclust.base.vcf.gz\"\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info DP \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > tumor.dp.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info DP \\\n\t--indv \"${normal_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > normal.dp.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info AF \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > tumor.af.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info AF \\\n\t--indv \"${normal_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > normal.af.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info SB \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' \\\n\t| \\\n\tforward_reverse_score_calculator.py > tumor.fr.tsv\n\t\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\".\"}' tumor.dp.tsv > placeholder.tg.tsv\n\n\tvcf-info-annotator \\\n\t--overwrite \\\n\t--description \"Read Depth Tumor\" \\\n\t--value_format Integer \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int1.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\ttumor.dp.tsv \\\n\tDP\n\n\tvcf-info-annotator \\\n\t--description \"Read Depth Normal\" \\\n\t--value_format Integer \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int2.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int1.vcf.gz\" \\\n\tnormal.dp.tsv \\\n\tDP_N\n\n\tvcf-info-annotator \\\n\t--description \"Allelic Frequency Tumor\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int3.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int2.vcf.gz\" \\\n\ttumor.af.tsv \\\n\tAF\n\n\tvcf-info-annotator \\\n\t--description \"Allelic Frequency Normal\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int4.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int3.vcf.gz\" \\\n\tnormal.af.tsv \\\n\tAF_N\n\n\tvcf-info-annotator \\\n\t--description \"Forward-Reverse Score\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int5.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int4.vcf.gz\" \\\n\ttumor.fr.tsv \\\n\tFR\n\n\tvcf-info-annotator \\\n\t--description \"Target Name (Genome Partition)\" \\\n\t--value_format String \\\n\t--output-vcf \"${mutations_vcf}\" \\\n\t\"${tumor_normal_sample_id}.sclust.int5.vcf.gz\" \\\n\tplaceholder.tg.tsv \\\n\tTG\n\t\"\"\"\n}",
        "nb_lignes_process": 119,
        "string_script": "\ttumor_id = \"${tumor_normal_sample_id}\".replaceFirst(/\\_vs\\_.*/, \"\")\n\tnormal_id = \"${tumor_normal_sample_id}\".replaceFirst(/.*\\_vs\\_/, \"\")\n\ttumor_normal_read_depth = \"${tumor_normal_sample_id}.DP.FORMAT\"\n\ttumor_normal_allelic_frequency = \"${tumor_normal_sample_id}.AF.FORMAT\"\n\ttumor_normal_forward_reverse_reads = \"${tumor_normal_sample_id}.SB.FORMAT\"\n\tmutations_vcf = \"${tumor_normal_sample_id}.sclust.final.vcf.gz\"\n\t\"\"\"\n\tzcat \"${final_mutect_vcf}\" \\\n\t| \\\n\tsed 's|Approximate read depth; some reads may have been filtered|Read Depth Tumor|' \\\n\t| \\\n\tgzip > \"${tumor_normal_sample_id}.sclust.base.vcf.gz\"\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info DP \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > tumor.dp.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info DP \\\n\t--indv \"${normal_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > normal.dp.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info AF \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > tumor.af.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info AF \\\n\t--indv \"${normal_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' > normal.af.tsv\n\n\tvcftools \\\n\t--gzvcf \"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\t--stdout \\\n\t--extract-FORMAT-info SB \\\n\t--indv \"${tumor_id}\" \\\n\t| \\\n\tgrep -v 'CHROM' \\\n\t| \\\n\tforward_reverse_score_calculator.py > tumor.fr.tsv\n\t\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\".\"}' tumor.dp.tsv > placeholder.tg.tsv\n\n\tvcf-info-annotator \\\n\t--overwrite \\\n\t--description \"Read Depth Tumor\" \\\n\t--value_format Integer \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int1.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.base.vcf.gz\" \\\n\ttumor.dp.tsv \\\n\tDP\n\n\tvcf-info-annotator \\\n\t--description \"Read Depth Normal\" \\\n\t--value_format Integer \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int2.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int1.vcf.gz\" \\\n\tnormal.dp.tsv \\\n\tDP_N\n\n\tvcf-info-annotator \\\n\t--description \"Allelic Frequency Tumor\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int3.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int2.vcf.gz\" \\\n\ttumor.af.tsv \\\n\tAF\n\n\tvcf-info-annotator \\\n\t--description \"Allelic Frequency Normal\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int4.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int3.vcf.gz\" \\\n\tnormal.af.tsv \\\n\tAF_N\n\n\tvcf-info-annotator \\\n\t--description \"Forward-Reverse Score\" \\\n\t--value_format Float \\\n\t--output-vcf \"${tumor_normal_sample_id}.sclust.int5.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.sclust.int4.vcf.gz\" \\\n\ttumor.fr.tsv \\\n\tFR\n\n\tvcf-info-annotator \\\n\t--description \"Target Name (Genome Partition)\" \\\n\t--value_format String \\\n\t--output-vcf \"${mutations_vcf}\" \\\n\t\"${tumor_normal_sample_id}.sclust.int5.vcf.gz\" \\\n\tplaceholder.tg.tsv \\\n\tTG\n\t\"\"\"",
        "nb_lignes_script": 105,
        "language_script": "bash",
        "tools": [
            "SomeNA",
            "FREAD",
            "VCFtools",
            "DP2",
            "MAF",
            "Frog",
            "FTG"
        ],
        "tools_url": [
            "https://bio.tools/somena",
            "https://bio.tools/fread",
            "https://bio.tools/vcftools",
            "https://bio.tools/dp2",
            "https://bio.tools/maf",
            "https://bio.tools/frog",
            "https://bio.tools/ftg"
        ],
        "tools_dico": [
            {
                "name": "SomeNA",
                "uri": "https://bio.tools/somena",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_1775",
                            "term": "Function analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_1775",
                            "term": "Functional analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Protein DNA/RNA binding predictor.",
                "homepage": "https://github.com/Rostlab/someNA"
            },
            {
                "name": "FREAD",
                "uri": "https://bio.tools/fread",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0271",
                                    "term": "Structure prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "FREAD\u00a0is a database search loop structure prediction protocol. Loops are generally located in the protein\u2019s surface and they are known to be notoriously difficult to predict.The basic assumption of FREAD is that local sequence similarity may determine the backbone structure of a local protein structure if it is constrained within anchor structures.",
                "homepage": "http://opig.stats.ox.ac.uk/webapps/fread/php/index.php"
            },
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            },
            {
                "name": "DP2",
                "uri": "https://bio.tools/dp2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0611",
                            "term": "Electron microscopy"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software for segmentation of 3D structures contained in 3D microscopy.",
                "homepage": "https://sites.google.com/site/imagecrowdseg/home"
            },
            {
                "name": "MAF",
                "uri": "https://bio.tools/maf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2430",
                                    "term": "Design"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Laboratory database system we have developed for managing the design, production and hybridization of spotted microarrays. Although it supports the widely used glass microarrays and oligo-chips, it was designed with the specific idiosyncrasies of Nylon based microarrays in mind.",
                "homepage": "http://tagc.univ-mrs.fr/bioinformatics/maf/"
            },
            {
                "name": "Frog",
                "uri": "https://bio.tools/frog",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3343",
                            "term": "Compound libraries and screening"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3336",
                            "term": "Drug discovery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Medicinal chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein structural motifs and surfaces"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0209",
                            "term": "Drug design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0166",
                            "term": "Protein 3D motifs"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "3D profile generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Molecular docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "Structural profile construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0297",
                                    "term": "Structural profile generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Macromolecular docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0478",
                                    "term": "Docking simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Frog (Free Online Drug Conformation) is a service aimed at generating 3D conformations for drug-like compounds starting from their 1D or 2D descriptions (smiles or sdf).",
                "homepage": "http://bioserv.rpbs.jussieu.fr/cgi-bin/Frog"
            },
            {
                "name": "FTG",
                "uri": "https://bio.tools/ftg",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Web server for locating probable protein coding region in nucleotide sequence using fourier tranform approach.",
                "homepage": "http://www.imtech.res.in/raghava/ftg/"
            }
        ],
        "inputs": [
            "mutect_vcf_forSclust"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcf_forSclustCn",
            "vcf_forSclustClustering"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.sclust == \"on\" && params.mutect == \"on\"",
        "stub": ""
    },
    "cnvCalling_sclust": {
        "name_process": "cnvCalling_sclust",
        "string_process": "\nprocess cnvCalling_sclust {\n\tpublishDir \"${params.output_dir}/somatic/sclust\", mode: 'copy', pattern: '*.{txt,pdf}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(read_count_file), path(common_snp_count_file), path(mutations_vcf) from read_count_and_snp_count_files.join(vcf_forSclustCn)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(read_count_file), path(common_snp_count_file), path(sclust_allelic_states_file), path(sclust_subclones_file), path(sclust_cnv_summary_file), path(mutations_exp_af_file), path(sclust_cnv_segments_file) into sclust_cn_output_forClustering\n\ttuple val(tumor_normal_sample_id), path(sclust_allelic_states_file) into final_sclust_cnv_profile_forConsensus\n\ttuple val(tumor_normal_sample_id), path(sclust_subclones_file) into sclust_subclones_forConsensusSubclones\n\ttuple val(tumor_normal_sample_id), path(sclust_cnv_summary_file) into sclust_output_forConsensusMetadata\n\tpath mutations_exp_af_file\n\tpath sclust_cnv_profile_pdf\n\tpath sclust_cnv_segments_file\n\n\twhen:\n\tparams.sclust == \"on\" && params.mutect == \"on\"\n\n\tscript:\n\tsclust_min_ploidy = \"${params.sclust_minp}\"\n\tsclust_max_ploidy = \"${params.sclust_maxp}\"\n\tsclust_lambda = params.sclust_lambda ? \"-lambda ${params.sclust_lambda}\" : \"\"\n\tsclust_allelic_states_file = \"${tumor_normal_sample_id}.sclust.allelicstates.txt\"\n\tsclust_cnv_profile_pdf = \"${tumor_normal_sample_id}.sclust.profile.pdf\"\n\tsclust_cnv_summary_file = \"${tumor_normal_sample_id}.sclust.cnvsummary.txt\"\n\tsclust_cnv_segments_file = \"${tumor_normal_sample_id}.sclust.cnvsegments.txt\"\n\tmutations_exp_af_file = \"${tumor_normal_sample_id}_muts_expAF.txt\"\n\tsclust_subclones_file = \"${tumor_normal_sample_id}.sclust.subclones.txt\"\n\t\"\"\"\n\tgunzip -f \"${mutations_vcf}\"\n\n\tSclust cn \\\n\t-ns 1000 \\\n\t-rc \"${read_count_file}\" \\\n\t-snp \"${common_snp_count_file}\" \\\n\t-vcf \"${tumor_normal_sample_id}.sclust.final.vcf\" \\\n\t-o \"${tumor_normal_sample_id}\" \\\n\t-minp \"${sclust_min_ploidy}\" \\\n\t-maxp \"${sclust_max_ploidy}\"\n\n\tmv \"${tumor_normal_sample_id}_allelic_states.txt\" \"${sclust_allelic_states_file}\"\n\tmv \"${tumor_normal_sample_id}_cn_profile.pdf\" \"${sclust_cnv_profile_pdf}\"\n\tmv \"${tumor_normal_sample_id}_cn_summary.txt\" \"${sclust_cnv_summary_file}\"\n\tmv \"${tumor_normal_sample_id}_iCN.seg\" \"${sclust_cnv_segments_file}\"\n\tmv \"${tumor_normal_sample_id}_subclonal_cn.txt\" \"${sclust_subclones_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 47,
        "string_script": "\tsclust_min_ploidy = \"${params.sclust_minp}\"\n\tsclust_max_ploidy = \"${params.sclust_maxp}\"\n\tsclust_lambda = params.sclust_lambda ? \"-lambda ${params.sclust_lambda}\" : \"\"\n\tsclust_allelic_states_file = \"${tumor_normal_sample_id}.sclust.allelicstates.txt\"\n\tsclust_cnv_profile_pdf = \"${tumor_normal_sample_id}.sclust.profile.pdf\"\n\tsclust_cnv_summary_file = \"${tumor_normal_sample_id}.sclust.cnvsummary.txt\"\n\tsclust_cnv_segments_file = \"${tumor_normal_sample_id}.sclust.cnvsegments.txt\"\n\tmutations_exp_af_file = \"${tumor_normal_sample_id}_muts_expAF.txt\"\n\tsclust_subclones_file = \"${tumor_normal_sample_id}.sclust.subclones.txt\"\n\t\"\"\"\n\tgunzip -f \"${mutations_vcf}\"\n\n\tSclust cn \\\n\t-ns 1000 \\\n\t-rc \"${read_count_file}\" \\\n\t-snp \"${common_snp_count_file}\" \\\n\t-vcf \"${tumor_normal_sample_id}.sclust.final.vcf\" \\\n\t-o \"${tumor_normal_sample_id}\" \\\n\t-minp \"${sclust_min_ploidy}\" \\\n\t-maxp \"${sclust_max_ploidy}\"\n\n\tmv \"${tumor_normal_sample_id}_allelic_states.txt\" \"${sclust_allelic_states_file}\"\n\tmv \"${tumor_normal_sample_id}_cn_profile.pdf\" \"${sclust_cnv_profile_pdf}\"\n\tmv \"${tumor_normal_sample_id}_cn_summary.txt\" \"${sclust_cnv_summary_file}\"\n\tmv \"${tumor_normal_sample_id}_iCN.seg\" \"${sclust_cnv_segments_file}\"\n\tmv \"${tumor_normal_sample_id}_subclonal_cn.txt\" \"${sclust_subclones_file}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "MSClust"
        ],
        "tools_url": [
            "https://bio.tools/msclust"
        ],
        "tools_dico": [
            {
                "name": "MSClust",
                "uri": "https://bio.tools/msclust",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Matlab package for Clustering 16S rRNA sequences into OTUs.",
                "homepage": "http://zhaocenter.org/software/#Genomic_Protein_Sequence_Analysis"
            }
        ],
        "inputs": [
            "read_count_and_snp_count_files",
            "vcf_forSclustCn"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sclust_cn_output_forClustering",
            "final_sclust_cnv_profile_forConsensus",
            "sclust_subclones_forConsensusSubclones",
            "sclust_output_forConsensusMetadata",
            "mutations_exp_af_file",
            "sclust_cnv_profile_pdf",
            "sclust_cnv_segments_file"
        ],
        "nb_outputs": 7,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/sclust\", mode: 'copy', pattern: '*.{txt,pdf}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.sclust == \"on\" && params.mutect == \"on\"",
        "stub": ""
    },
    "mutationalClustering_sclust": {
        "name_process": "mutationalClustering_sclust",
        "string_process": "\nprocess mutationalClustering_sclust {\n\tpublishDir \"${params.output_dir}/somatic/sclust\", mode: 'copy', pattern: '*.{txt,pdf}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(read_count_file), path(common_snp_count_file), path(sclust_allelic_states_file), path(sclust_subclones_file), path(sclust_cnv_summary_file), path(mutations_exp_af_file), path(sclust_cnv_segments_file), path(mutations_vcf) from sclust_cn_output_forClustering.join(vcf_forSclustClustering)\n\n\toutput:\n\tpath mutation_clusters_file\n\tpath mutation_clusters_pdf\n\tpath cluster_assignment_file\n\n\twhen:\n\tparams.sclust == \"on\" && params.mutect == \"on\" && params.sclust_mutclustering == \"on\"\n\n\tscript:\n\tsclust_lambda = params.sclust_lambda ? \"-lambda ${params.sclust_lambda}\" : \"\"\n\tmutation_clusters_file = \"${tumor_normal_sample_id}.sclust.mutclusters.txt\"\n\tmutation_clusters_pdf = \"${tumor_normal_sample_id}.sclust.mutclusters.pdf\"\n\tcluster_assignment_file = \"${tumor_normal_sample_id}.sclust.clusterassignments.txt\"\n\t\"\"\"\n\tgunzip -f \"${mutations_vcf}\"\n\t\n\tSclust cluster \\\n\t-i \"${tumor_normal_sample_id}\" \\\n\t${sclust_lambda}\n\n\tmv \"${tumor_normal_sample_id}_mclusters.txt\" \"${mutation_clusters_file}\"\n\tmv \"${tumor_normal_sample_id}_mcluster.pdf\" \"${mutation_clusters_pdf}\"\n\tmv \"${tumor_normal_sample_id}_cluster_assignments.txt\" \"${cluster_assignment_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\tsclust_lambda = params.sclust_lambda ? \"-lambda ${params.sclust_lambda}\" : \"\"\n\tmutation_clusters_file = \"${tumor_normal_sample_id}.sclust.mutclusters.txt\"\n\tmutation_clusters_pdf = \"${tumor_normal_sample_id}.sclust.mutclusters.pdf\"\n\tcluster_assignment_file = \"${tumor_normal_sample_id}.sclust.clusterassignments.txt\"\n\t\"\"\"\n\tgunzip -f \"${mutations_vcf}\"\n\t\n\tSclust cluster \\\n\t-i \"${tumor_normal_sample_id}\" \\\n\t${sclust_lambda}\n\n\tmv \"${tumor_normal_sample_id}_mclusters.txt\" \"${mutation_clusters_file}\"\n\tmv \"${tumor_normal_sample_id}_mcluster.pdf\" \"${mutation_clusters_pdf}\"\n\tmv \"${tumor_normal_sample_id}_cluster_assignments.txt\" \"${cluster_assignment_file}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "MSClust"
        ],
        "tools_url": [
            "https://bio.tools/msclust"
        ],
        "tools_dico": [
            {
                "name": "MSClust",
                "uri": "https://bio.tools/msclust",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Matlab package for Clustering 16S rRNA sequences into OTUs.",
                "homepage": "http://zhaocenter.org/software/#Genomic_Protein_Sequence_Analysis"
            }
        ],
        "inputs": [
            "sclust_cn_output_forClustering",
            "vcf_forSclustClustering"
        ],
        "nb_inputs": 2,
        "outputs": [
            "mutation_clusters_file",
            "mutation_clusters_pdf",
            "cluster_assignment_file"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/sclust\", mode: 'copy', pattern: '*.{txt,pdf}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.sclust == \"on\" && params.mutect == \"on\" && params.sclust_mutclustering == \"on\"",
        "stub": ""
    },
    "svAndIndelCalling_manta": {
        "name_process": "svAndIndelCalling_manta",
        "string_process": "\nprocess svAndIndelCalling_manta {\n\tpublishDir \"${params.output_dir}/somatic/manta\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forManta), path(reference_genome_fasta_index_forManta), path(reference_genome_fasta_dict_forManta), path(gatk_bundle_wgs_bed_forManta) from tumor_normal_pair_forManta.combine(reference_genome_bundle_and_bed_forManta)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(candidate_indel_vcf), path(candidate_indel_vcf_index) into bams_and_candidate_indel_vcf_forStrelka\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(manta_somatic_sv_vcf), path(manta_somatic_sv_vcf_index) into manta_sv_vcf_forPostprocessing\n\ttuple path(unfiltered_sv_vcf), path(unfiltered_sv_vcf_index)\n\ttuple path(germline_sv_vcf), path(germline_sv_vcf_index)\n\n\twhen:\n\tparams.manta == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tzipped_wgs_bed_forManta = \"${gatk_bundle_wgs_bed_forManta}.gz\"\n\tunfiltered_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.unfiltered.vcf.gz\"\n\tmanta_somatic_config = \"${tumor_normal_sample_id}.manta.somatic.config.ini\"\n\tunfiltered_sv_vcf_index = \"${unfiltered_sv_vcf}.tbi\"\n\tgermline_sv_vcf = \"${tumor_normal_sample_id}.manta.germline.sv.vcf.gz\"\n\tgermline_sv_vcf_index = \"${germline_sv_vcf}.tbi\"\n\tcandidate_indel_vcf = \"${tumor_normal_sample_id}.manta.somatic.indels.unfiltered.vcf.gz\"\n\tcandidate_indel_vcf_index = \"${candidate_indel_vcf}.tbi\"\n\tmanta_somatic_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.unprocessed.vcf.gz\"\n\tmanta_somatic_sv_vcf_index = \"${manta_somatic_sv_vcf}.tbi\"\n\t\"\"\"\n\tbgzip < \"${gatk_bundle_wgs_bed_forManta}\" > \"${zipped_wgs_bed_forManta}\"\n\ttabix \"${zipped_wgs_bed_forManta}\"\n\n\ttouch \"${manta_somatic_config}\"\n\tcat \\${MANTA_DIR}/bin/configManta.py.ini \\\n\t| \\\n\tsed 's|enableRemoteReadRetrievalForInsertionsInCancerCallingModes = 0|enableRemoteReadRetrievalForInsertionsInCancerCallingModes = 1|' \\\n\t| \\\n\tsed 's|minPassSomaticScore = 30|minPassSomaticScore = 35|' \\\n\t| \\\n\tsed 's|minCandidateSpanningCount = 3|minCandidateSpanningCount = 4|' >> \"${manta_somatic_config}\"\n\n\tpython \\${MANTA_DIR}/bin/configManta.py \\\n\t--tumorBam \"${tumor_bam}\" \\\n\t--normalBam \"${normal_bam}\" \\\n\t--referenceFasta \"${reference_genome_fasta_forManta}\" \\\n\t--callRegions \"${zipped_wgs_bed_forManta}\" \\\n\t--config \"${manta_somatic_config}\" \\\n\t--runDir manta\n\n\tpython manta/runWorkflow.py \\\n\t--mode local \\\n\t--jobs ${task.cpus} \\\n\t--memGb ${task.memory.toGiga()}\n\n\tmv manta/results/variants/candidateSV.vcf.gz \"${unfiltered_sv_vcf}\"\n\tmv manta/results/variants/candidateSV.vcf.gz.tbi \"${unfiltered_sv_vcf_index}\"\n\tmv manta/results/variants/candidateSmallIndels.vcf.gz \"${candidate_indel_vcf}\"\n\tmv manta/results/variants/candidateSmallIndels.vcf.gz.tbi \"${candidate_indel_vcf_index}\"\n\n\tzcat manta/results/variants/diploidSV.vcf.gz \\\n\t| \\\n\tgrep -E \"^#|PASS\" \\\n\t| \\\n\tbgzip > \"${germline_sv_vcf}\"\n\ttabix \"${germline_sv_vcf}\"\n\n\tzcat manta/results/variants/somaticSV.vcf.gz \\\n\t| \\\n\tgrep -E \"^#|PASS\" > somaticSV.passonly.vcf\n\n\t\\${MANTA_DIR}/libexec/convertInversion.py \\\n\t\\${MANTA_DIR}/libexec/samtools \\\n\t\"${reference_genome_fasta_forManta}\" \\\n\tsomaticSV.passonly.vcf \\\n\t| \\\n\tbgzip > \"${manta_somatic_sv_vcf}\"\n\ttabix \"${manta_somatic_sv_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 80,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tzipped_wgs_bed_forManta = \"${gatk_bundle_wgs_bed_forManta}.gz\"\n\tunfiltered_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.unfiltered.vcf.gz\"\n\tmanta_somatic_config = \"${tumor_normal_sample_id}.manta.somatic.config.ini\"\n\tunfiltered_sv_vcf_index = \"${unfiltered_sv_vcf}.tbi\"\n\tgermline_sv_vcf = \"${tumor_normal_sample_id}.manta.germline.sv.vcf.gz\"\n\tgermline_sv_vcf_index = \"${germline_sv_vcf}.tbi\"\n\tcandidate_indel_vcf = \"${tumor_normal_sample_id}.manta.somatic.indels.unfiltered.vcf.gz\"\n\tcandidate_indel_vcf_index = \"${candidate_indel_vcf}.tbi\"\n\tmanta_somatic_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.unprocessed.vcf.gz\"\n\tmanta_somatic_sv_vcf_index = \"${manta_somatic_sv_vcf}.tbi\"\n\t\"\"\"\n\tbgzip < \"${gatk_bundle_wgs_bed_forManta}\" > \"${zipped_wgs_bed_forManta}\"\n\ttabix \"${zipped_wgs_bed_forManta}\"\n\n\ttouch \"${manta_somatic_config}\"\n\tcat \\${MANTA_DIR}/bin/configManta.py.ini \\\n\t| \\\n\tsed 's|enableRemoteReadRetrievalForInsertionsInCancerCallingModes = 0|enableRemoteReadRetrievalForInsertionsInCancerCallingModes = 1|' \\\n\t| \\\n\tsed 's|minPassSomaticScore = 30|minPassSomaticScore = 35|' \\\n\t| \\\n\tsed 's|minCandidateSpanningCount = 3|minCandidateSpanningCount = 4|' >> \"${manta_somatic_config}\"\n\n\tpython \\${MANTA_DIR}/bin/configManta.py \\\n\t--tumorBam \"${tumor_bam}\" \\\n\t--normalBam \"${normal_bam}\" \\\n\t--referenceFasta \"${reference_genome_fasta_forManta}\" \\\n\t--callRegions \"${zipped_wgs_bed_forManta}\" \\\n\t--config \"${manta_somatic_config}\" \\\n\t--runDir manta\n\n\tpython manta/runWorkflow.py \\\n\t--mode local \\\n\t--jobs ${task.cpus} \\\n\t--memGb ${task.memory.toGiga()}\n\n\tmv manta/results/variants/candidateSV.vcf.gz \"${unfiltered_sv_vcf}\"\n\tmv manta/results/variants/candidateSV.vcf.gz.tbi \"${unfiltered_sv_vcf_index}\"\n\tmv manta/results/variants/candidateSmallIndels.vcf.gz \"${candidate_indel_vcf}\"\n\tmv manta/results/variants/candidateSmallIndels.vcf.gz.tbi \"${candidate_indel_vcf_index}\"\n\n\tzcat manta/results/variants/diploidSV.vcf.gz \\\n\t| \\\n\tgrep -E \"^#|PASS\" \\\n\t| \\\n\tbgzip > \"${germline_sv_vcf}\"\n\ttabix \"${germline_sv_vcf}\"\n\n\tzcat manta/results/variants/somaticSV.vcf.gz \\\n\t| \\\n\tgrep -E \"^#|PASS\" > somaticSV.passonly.vcf\n\n\t\\${MANTA_DIR}/libexec/convertInversion.py \\\n\t\\${MANTA_DIR}/libexec/samtools \\\n\t\"${reference_genome_fasta_forManta}\" \\\n\tsomaticSV.passonly.vcf \\\n\t| \\\n\tbgzip > \"${manta_somatic_sv_vcf}\"\n\ttabix \"${manta_somatic_sv_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 62,
        "language_script": "bash",
        "tools": [
            "PASS",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/pass",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PASS",
                "uri": "https://bio.tools/pass",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PASS: a program to align short sequences",
                "homepage": "http://pass.cribi.unipd.it/cgi-bin/pass.pl"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forManta",
            "reference_genome_bundle_and_bed_forManta"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bams_and_candidate_indel_vcf_forStrelka",
            "manta_sv_vcf_forPostprocessing",
            "unfiltered_sv_vcf_index",
            "germline_sv_vcf_index"
        ],
        "nb_outputs": 4,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/manta\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\"",
        "stub": ""
    },
    "filterAndPostprocessMantaVcf_bcftools": {
        "name_process": "filterAndPostprocessMantaVcf_bcftools",
        "string_process": "\nprocess filterAndPostprocessMantaVcf_bcftools {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(manta_somatic_sv_vcf), path(manta_somatic_sv_vcf_index) from manta_sv_vcf_forPostprocessing\n\n    output:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(final_manta_somatic_sv_vcf) into manta_sv_vcf_forSurvivor\n    tuple val(tumor_normal_sample_id), path(final_manta_somatic_sv_read_support) into manta_sv_read_support_forAnnotation\n\n    when:\n    params.manta == \"on\"\n\n    script:\n    final_manta_somatic_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.vcf\"\n    final_manta_somatic_sv_read_support = \"${tumor_normal_sample_id}.manta.somatic.sv.readsupp.txt\"\n    \"\"\"\n    touch name.txt\n    echo \"${normal_id}\" >> name.txt\n\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'FORMAT/SR[@name.txt:1]>2 || FORMAT/PR[@name.txt:1]>2' \\\n    \"${manta_somatic_sv_vcf}\" \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_manta_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t[%PR{1}]\\t[%SR{1}]\\n' \\\n    --output \"${final_manta_somatic_sv_read_support}\" \\\n    \"${final_manta_somatic_sv_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    final_manta_somatic_sv_vcf = \"${tumor_normal_sample_id}.manta.somatic.sv.vcf\"\n    final_manta_somatic_sv_read_support = \"${tumor_normal_sample_id}.manta.somatic.sv.readsupp.txt\"\n    \"\"\"\n    touch name.txt\n    echo \"${normal_id}\" >> name.txt\n\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'FORMAT/SR[@name.txt:1]>2 || FORMAT/PR[@name.txt:1]>2' \\\n    \"${manta_somatic_sv_vcf}\" \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_manta_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t[%PR{1}]\\t[%SR{1}]\\n' \\\n    --output \"${final_manta_somatic_sv_read_support}\" \\\n    \"${final_manta_somatic_sv_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "manta_sv_vcf_forPostprocessing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "manta_sv_vcf_forSurvivor",
            "manta_sv_read_support_forAnnotation"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\"",
        "stub": ""
    },
    "snvAndIndelCalling_strelka": {
        "name_process": "snvAndIndelCalling_strelka",
        "string_process": "\nprocess snvAndIndelCalling_strelka {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(candidate_indel_vcf), path(candidate_indel_vcf_index), path(reference_genome_fasta_forStrelka), path(reference_genome_fasta_index_forStrelka), path(reference_genome_fasta_dict_forStrelka), path(gatk_bundle_wgs_bed_forStrelka) from bams_and_candidate_indel_vcf_forStrelka.combine(reference_genome_bundle_and_bed_forStrelka)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(unfiltered_strelka_snv_vcf), path(unfiltered_strelka_snv_vcf_index), path(unfiltered_strelka_indel_vcf), path(unfiltered_strelka_indel_vcf_index) into unfiltered_snv_and_indel_vcfs_forStrelkaBcftools\n\n\twhen:\n\tparams.strelka == \"on\" && params.manta == \"on\"\n\n\tscript:\n\tzipped_wgs_bed_forStrelka = \"${gatk_bundle_wgs_bed_forStrelka}.gz\"\n\tunfiltered_strelka_snv_vcf = \"${tumor_normal_sample_id}.strelka.somatic.snv.unfiltered.vcf.gz\"\n\tunfiltered_strelka_snv_vcf_index = \"${unfiltered_strelka_snv_vcf}.tbi\"\n\tunfiltered_strelka_indel_vcf = \"${tumor_normal_sample_id}.strelka.somatic.indel.unfiltered.vcf.gz\"\n\tunfiltered_strelka_indel_vcf_index = \"${unfiltered_strelka_indel_vcf}.tbi\"\n\t\"\"\"\n\tbgzip < \"${gatk_bundle_wgs_bed_forStrelka}\" > \"${zipped_wgs_bed_forStrelka}\"\n\ttabix \"${zipped_wgs_bed_forStrelka}\"\n\n\tpython \\${STRELKA_DIR}/bin/configureStrelkaSomaticWorkflow.py \\\n\t--normalBam \"${normal_bam}\" \\\n\t--tumorBam \"${tumor_bam}\" \\\n\t--referenceFasta \"${reference_genome_fasta_forStrelka}\" \\\n\t--indelCandidates \"${candidate_indel_vcf}\" \\\n\t--callRegions \"${zipped_wgs_bed_forStrelka}\" \\\n\t--runDir strelka\n\n\tpython strelka/runWorkflow.py \\\n\t--mode local \\\n\t--jobs ${task.cpus} \\\n\t--memGb ${task.memory.toGiga()}\n\n\tmv strelka/results/variants/somatic.snvs.vcf.gz \"${unfiltered_strelka_snv_vcf}\"\n\tmv strelka/results/variants/somatic.snvs.vcf.gz.tbi \"${unfiltered_strelka_snv_vcf_index}\"\n\tmv strelka/results/variants/somatic.indels.vcf.gz \"${unfiltered_strelka_indel_vcf}\"\n\tmv strelka/results/variants/somatic.indels.vcf.gz.tbi \"${unfiltered_strelka_indel_vcf_index}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\tzipped_wgs_bed_forStrelka = \"${gatk_bundle_wgs_bed_forStrelka}.gz\"\n\tunfiltered_strelka_snv_vcf = \"${tumor_normal_sample_id}.strelka.somatic.snv.unfiltered.vcf.gz\"\n\tunfiltered_strelka_snv_vcf_index = \"${unfiltered_strelka_snv_vcf}.tbi\"\n\tunfiltered_strelka_indel_vcf = \"${tumor_normal_sample_id}.strelka.somatic.indel.unfiltered.vcf.gz\"\n\tunfiltered_strelka_indel_vcf_index = \"${unfiltered_strelka_indel_vcf}.tbi\"\n\t\"\"\"\n\tbgzip < \"${gatk_bundle_wgs_bed_forStrelka}\" > \"${zipped_wgs_bed_forStrelka}\"\n\ttabix \"${zipped_wgs_bed_forStrelka}\"\n\n\tpython \\${STRELKA_DIR}/bin/configureStrelkaSomaticWorkflow.py \\\n\t--normalBam \"${normal_bam}\" \\\n\t--tumorBam \"${tumor_bam}\" \\\n\t--referenceFasta \"${reference_genome_fasta_forStrelka}\" \\\n\t--indelCandidates \"${candidate_indel_vcf}\" \\\n\t--callRegions \"${zipped_wgs_bed_forStrelka}\" \\\n\t--runDir strelka\n\n\tpython strelka/runWorkflow.py \\\n\t--mode local \\\n\t--jobs ${task.cpus} \\\n\t--memGb ${task.memory.toGiga()}\n\n\tmv strelka/results/variants/somatic.snvs.vcf.gz \"${unfiltered_strelka_snv_vcf}\"\n\tmv strelka/results/variants/somatic.snvs.vcf.gz.tbi \"${unfiltered_strelka_snv_vcf_index}\"\n\tmv strelka/results/variants/somatic.indels.vcf.gz \"${unfiltered_strelka_indel_vcf}\"\n\tmv strelka/results/variants/somatic.indels.vcf.gz.tbi \"${unfiltered_strelka_indel_vcf_index}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bams_and_candidate_indel_vcf_forStrelka",
            "reference_genome_bundle_and_bed_forStrelka"
        ],
        "nb_inputs": 2,
        "outputs": [
            "unfiltered_snv_and_indel_vcfs_forStrelkaBcftools"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.strelka == \"on\" && params.manta == \"on\"",
        "stub": ""
    },
    "splitMultiallelicAndLeftNormalizeStrelkaVcf_bcftools": {
        "name_process": "splitMultiallelicAndLeftNormalizeStrelkaVcf_bcftools",
        "string_process": "\nprocess splitMultiallelicAndLeftNormalizeStrelkaVcf_bcftools {\n\tpublishDir \"${params.output_dir}/somatic/strelka\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(unfiltered_strelka_snv_vcf), path(unfiltered_strelka_snv_vcf_index), path(unfiltered_strelka_indel_vcf), path(unfiltered_strelka_indel_vcf_index), path(reference_genome_fasta_forStrelkaBcftools), path(reference_genome_fasta_index_forStrelkaBcftools), path(reference_genome_fasta_dict_forStrelkaBcftools) from unfiltered_snv_and_indel_vcfs_forStrelkaBcftools.combine(reference_genome_bundle_forStrelkaBcftools)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(final_strelka_snv_vcf), path(final_strelka_snv_vcf_index) into final_strelka_snv_vcf_forConsensus\n\ttuple val(tumor_normal_sample_id), path(final_strelka_indel_vcf), path(final_strelka_indel_vcf_index) into final_strelka_indel_vcf_forConsensus\n\tpath strelka_snv_multiallelics_stats\n\tpath strelka_indel_multiallelics_stats\n\tpath strelka_indel_realign_normalize_stats\n\n\twhen:\n\tparams.strelka == \"on\" && params.manta == \"on\"\n\n\tscript:\n\tfinal_strelka_snv_vcf = \"${tumor_normal_sample_id}.strelka.somatic.snv.vcf.gz\"\n\tfinal_strelka_snv_vcf_index =\"${final_strelka_snv_vcf}.tbi\"\n\tfinal_strelka_indel_vcf = \"${tumor_normal_sample_id}.strelka.somatic.indel.vcf.gz\"\n\tfinal_strelka_indel_vcf_index = \"${final_strelka_indel_vcf}.tbi\"\n\tstrelka_snv_multiallelics_stats = \"${tumor_normal_sample_id}.strelka.snv.multiallelicsstats.txt\"\n\tstrelka_indel_multiallelics_stats = \"${tumor_normal_sample_id}.strelka.indel.multiallelicsstats.txt\"\n\tstrelka_indel_realign_normalize_stats = \"${tumor_normal_sample_id}.strelka.indel.realignnormalizestats.txt\"\n\t\"\"\"\n\tzgrep -E \"^#|PASS\" \"${unfiltered_strelka_snv_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -snps \\\n\t--output-type z \\\n\t--output \"${final_strelka_snv_vcf}\" \\\n\t- 2>\"${strelka_snv_multiallelics_stats}\"\n\n\ttabix \"${final_strelka_snv_vcf}\"\n\t\n\tzgrep -E \"^#|PASS\" \"${unfiltered_strelka_indel_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -indels \\\n\t--output-type z \\\n\t- 2>\"${strelka_indel_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forStrelkaBcftools}\" \\\n\t--output-type z \\\n\t--output \"${final_strelka_indel_vcf}\" \\\n\t- 2>\"${strelka_indel_realign_normalize_stats}\"\n\n\ttabix \"${final_strelka_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": "\tfinal_strelka_snv_vcf = \"${tumor_normal_sample_id}.strelka.somatic.snv.vcf.gz\"\n\tfinal_strelka_snv_vcf_index =\"${final_strelka_snv_vcf}.tbi\"\n\tfinal_strelka_indel_vcf = \"${tumor_normal_sample_id}.strelka.somatic.indel.vcf.gz\"\n\tfinal_strelka_indel_vcf_index = \"${final_strelka_indel_vcf}.tbi\"\n\tstrelka_snv_multiallelics_stats = \"${tumor_normal_sample_id}.strelka.snv.multiallelicsstats.txt\"\n\tstrelka_indel_multiallelics_stats = \"${tumor_normal_sample_id}.strelka.indel.multiallelicsstats.txt\"\n\tstrelka_indel_realign_normalize_stats = \"${tumor_normal_sample_id}.strelka.indel.realignnormalizestats.txt\"\n\t\"\"\"\n\tzgrep -E \"^#|PASS\" \"${unfiltered_strelka_snv_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -snps \\\n\t--output-type z \\\n\t--output \"${final_strelka_snv_vcf}\" \\\n\t- 2>\"${strelka_snv_multiallelics_stats}\"\n\n\ttabix \"${final_strelka_snv_vcf}\"\n\t\n\tzgrep -E \"^#|PASS\" \"${unfiltered_strelka_indel_vcf}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics -indels \\\n\t--output-type z \\\n\t- 2>\"${strelka_indel_multiallelics_stats}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forStrelkaBcftools}\" \\\n\t--output-type z \\\n\t--output \"${final_strelka_indel_vcf}\" \\\n\t- 2>\"${strelka_indel_realign_normalize_stats}\"\n\n\ttabix \"${final_strelka_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [
            "PASS",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/pass",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "PASS",
                "uri": "https://bio.tools/pass",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PASS: a program to align short sequences",
                "homepage": "http://pass.cribi.unipd.it/cgi-bin/pass.pl"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "unfiltered_snv_and_indel_vcfs_forStrelkaBcftools",
            "reference_genome_bundle_forStrelkaBcftools"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_strelka_snv_vcf_forConsensus",
            "final_strelka_indel_vcf_forConsensus",
            "strelka_snv_multiallelics_stats",
            "strelka_indel_multiallelics_stats",
            "strelka_indel_realign_normalize_stats"
        ],
        "nb_outputs": 5,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/strelka\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.strelka == \"on\" && params.manta == \"on\"",
        "stub": ""
    },
    "svAndIndelCalling_svaba": {
        "name_process": "svAndIndelCalling_svaba",
        "string_process": "\nprocess svAndIndelCalling_svaba {\n\tpublishDir \"${params.output_dir}/somatic/svaba\", mode: 'copy', pattern: '*.{somatic.sv.unprocessed.vcf.gz,somatic.sv.unprocessed.vcf.gz.tbi}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(\"Homo_sapiens_assembly38.fasta\"), path(\"Homo_sapiens_assembly38.fasta.fai\"), path(\"Homo_sapiens_assembly38.fasta.64.alt\"), path(\"Homo_sapiens_assembly38.fasta.64.amb\"), path(\"Homo_sapiens_assembly38.fasta.64.ann\"), path(\"Homo_sapiens_assembly38.fasta.64.bwt\"), path(\"Homo_sapiens_assembly38.fasta.64.pac\"), path(\"Homo_sapiens_assembly38.fasta.64.sa\"), path(reference_genome_fasta_dict_forSvaba), path(gatk_bundle_wgs_bed_blacklist_0based_forSvaba), path(dbsnp_known_indel_ref_vcf), path(dbsnp_known_indel_ref_vcf_index), path(simple_and_centromeric_repeats_bed_forSvaba) from tumor_normal_pair_forSvaba.combine(bwa_ref_genome_wgs_bed_and_ref_files)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(filtered_somatic_indel_vcf), path(filtered_somatic_indel_vcf_index) into filtered_indel_vcf_forSvabaBcftools\n\ttuple val(tumor_normal_sample_id), val(tumor_id), path(svaba_somatic_sv_vcf), path(svaba_somatic_sv_vcf_index), path(svaba_somatic_sv_unclassified_vcf), path(sample_renaming_file) into svaba_sv_vcf_forPostprocessing\n\tpath unfiltered_somatic_indel_vcf\n\tpath unfiltered_somatic_sv_vcf\n\tpath germline_indel_vcf\n\tpath germline_sv_vcf\n\tpath contig_alignment_plot\n\n\twhen:\n\tparams.svaba == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tcontig_alignment_plot = \"${tumor_normal_sample_id}.svaba.alignments.txt.gz\"\n\tgermline_indel_vcf = \"${tumor_normal_sample_id}.svaba.germline.indel.vcf.gz\"\n\tgermline_sv_vcf = \"${tumor_normal_sample_id}.svaba.germline.sv.vcf.gz\"\n\tunfiltered_somatic_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.unfiltered.indel.vcf.gz\"\n\tunfiltered_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.unfiltered.sv.vcf.gz\"\n\tfiltered_somatic_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.filtered.indel.vcf.gz\"\n\tfiltered_somatic_indel_vcf_index = \"${filtered_somatic_indel_vcf}.tbi\"\n\tsvaba_somatic_sv_unclassified_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.unclassified.vcf\"\n\tsvaba_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.unprocessed.vcf.gz\"\n\tsvaba_somatic_sv_vcf_index = \"${svaba_somatic_sv_vcf}.tbi\"\n\tsample_renaming_file = \"sample_renaming_file.txt\"\n\t\"\"\"\n\tsvaba run \\\n\t-t \"${tumor_bam}\" \\\n\t-n \"${normal_bam}\" \\\n\t--reference-genome Homo_sapiens_assembly38.fasta \\\n\t--blacklist \"${gatk_bundle_wgs_bed_blacklist_0based_forSvaba}\" \\\n\t--id-string \"${tumor_normal_sample_id}\" \\\n\t--dbsnp-vcf \"${dbsnp_known_indel_ref_vcf}\" \\\n\t--simple-seq-database \"${simple_and_centromeric_repeats_bed_forSvaba}\" \\\n\t--threads \"${task.cpus}\" \\\n\t--verbose 1 \\\n\t--g-zip\n\n\tmv \"${tumor_normal_sample_id}.alignments.txt.gz\" \"${contig_alignment_plot}\"\n\tmv \"${tumor_normal_sample_id}.svaba.unfiltered.somatic.indel.vcf.gz\" \"${unfiltered_somatic_indel_vcf}\"\n\tmv \"${tumor_normal_sample_id}.svaba.unfiltered.somatic.sv.vcf.gz\" \"${unfiltered_somatic_sv_vcf}\"\n\tmv \"${tumor_normal_sample_id}.svaba.somatic.indel.vcf.gz\" \"${filtered_somatic_indel_vcf}\"\n\n\tgunzip -c \"${tumor_normal_sample_id}.svaba.somatic.sv.vcf.gz\" > \"${svaba_somatic_sv_unclassified_vcf}\"\n\n\tsvaba_sv_classifier.py \\\n\t\"${svaba_somatic_sv_unclassified_vcf}\" \\\n\t| \\\n\tbgzip > \"${svaba_somatic_sv_vcf}\"\n\n\ttabix \"${filtered_somatic_indel_vcf}\"\n\ttabix \"${svaba_somatic_sv_vcf}\"\n\n\ttouch \"${sample_renaming_file}\"\n\techo \"${tumor_bam} ${tumor_id}\" >> \"${sample_renaming_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 65,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tcontig_alignment_plot = \"${tumor_normal_sample_id}.svaba.alignments.txt.gz\"\n\tgermline_indel_vcf = \"${tumor_normal_sample_id}.svaba.germline.indel.vcf.gz\"\n\tgermline_sv_vcf = \"${tumor_normal_sample_id}.svaba.germline.sv.vcf.gz\"\n\tunfiltered_somatic_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.unfiltered.indel.vcf.gz\"\n\tunfiltered_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.unfiltered.sv.vcf.gz\"\n\tfiltered_somatic_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.filtered.indel.vcf.gz\"\n\tfiltered_somatic_indel_vcf_index = \"${filtered_somatic_indel_vcf}.tbi\"\n\tsvaba_somatic_sv_unclassified_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.unclassified.vcf\"\n\tsvaba_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.unprocessed.vcf.gz\"\n\tsvaba_somatic_sv_vcf_index = \"${svaba_somatic_sv_vcf}.tbi\"\n\tsample_renaming_file = \"sample_renaming_file.txt\"\n\t\"\"\"\n\tsvaba run \\\n\t-t \"${tumor_bam}\" \\\n\t-n \"${normal_bam}\" \\\n\t--reference-genome Homo_sapiens_assembly38.fasta \\\n\t--blacklist \"${gatk_bundle_wgs_bed_blacklist_0based_forSvaba}\" \\\n\t--id-string \"${tumor_normal_sample_id}\" \\\n\t--dbsnp-vcf \"${dbsnp_known_indel_ref_vcf}\" \\\n\t--simple-seq-database \"${simple_and_centromeric_repeats_bed_forSvaba}\" \\\n\t--threads \"${task.cpus}\" \\\n\t--verbose 1 \\\n\t--g-zip\n\n\tmv \"${tumor_normal_sample_id}.alignments.txt.gz\" \"${contig_alignment_plot}\"\n\tmv \"${tumor_normal_sample_id}.svaba.unfiltered.somatic.indel.vcf.gz\" \"${unfiltered_somatic_indel_vcf}\"\n\tmv \"${tumor_normal_sample_id}.svaba.unfiltered.somatic.sv.vcf.gz\" \"${unfiltered_somatic_sv_vcf}\"\n\tmv \"${tumor_normal_sample_id}.svaba.somatic.indel.vcf.gz\" \"${filtered_somatic_indel_vcf}\"\n\n\tgunzip -c \"${tumor_normal_sample_id}.svaba.somatic.sv.vcf.gz\" > \"${svaba_somatic_sv_unclassified_vcf}\"\n\n\tsvaba_sv_classifier.py \\\n\t\"${svaba_somatic_sv_unclassified_vcf}\" \\\n\t| \\\n\tbgzip > \"${svaba_somatic_sv_vcf}\"\n\n\ttabix \"${filtered_somatic_indel_vcf}\"\n\ttabix \"${svaba_somatic_sv_vcf}\"\n\n\ttouch \"${sample_renaming_file}\"\n\techo \"${tumor_bam} ${tumor_id}\" >> \"${sample_renaming_file}\"\n\t\"\"\"",
        "nb_lignes_script": 44,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tumor_normal_pair_forSvaba",
            "bwa_ref_genome_wgs_bed_and_ref_files"
        ],
        "nb_inputs": 2,
        "outputs": [
            "filtered_indel_vcf_forSvabaBcftools",
            "svaba_sv_vcf_forPostprocessing",
            "unfiltered_somatic_indel_vcf",
            "unfiltered_somatic_sv_vcf",
            "germline_indel_vcf",
            "germline_sv_vcf",
            "contig_alignment_plot"
        ],
        "nb_outputs": 7,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/svaba\", mode: 'copy', pattern: '*.{somatic.sv.unprocessed.vcf.gz,somatic.sv.unprocessed.vcf.gz.tbi}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.svaba == \"on\"",
        "stub": ""
    },
    "filterAndPostprocessSvabaVcf_bcftools": {
        "name_process": "filterAndPostprocessSvabaVcf_bcftools",
        "string_process": "\nprocess filterAndPostprocessSvabaVcf_bcftools {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(svaba_somatic_sv_vcf), path(svaba_somatic_sv_vcf_index), path(svaba_somatic_sv_unclassified_vcf), path(sample_renaming_file) from svaba_sv_vcf_forPostprocessing\n\n    output:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(final_svaba_somatic_sv_vcf) into svaba_sv_vcf_forSurvivor\n    tuple val(tumor_normal_sample_id), path(final_svaba_somatic_sv_read_support) into svaba_sv_read_support_forAnnotation\n\n    when:\n    params.svaba == \"on\"\n\n    script:\n    final_svaba_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.vcf\"\n    final_svaba_somatic_sv_read_support = \"${tumor_normal_sample_id}.svaba.somatic.sv.readsupp.txt\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'QUAL<6' \\\n    \"${svaba_somatic_sv_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/MAPQ=60 || INFO/DISC_MAPQ=60' \\\n    | \\\n    bcftools reheader \\\n    --samples \"${sample_renaming_file}\" \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_svaba_somatic_sv_vcf}\"\n\n    svaba_interchromosomal_mate_finder.sh \\\n    \"${final_svaba_somatic_sv_vcf}\" \\\n    \"${svaba_somatic_sv_unclassified_vcf}\" > \"${tumor_normal_sample_id}.svaba.missingmates.txt\"\n\n    cat \"${tumor_normal_sample_id}.svaba.missingmates.txt\" >> \"${final_svaba_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t[%DR]\\t[%SR]\\n' \\\n    --output \"${final_svaba_somatic_sv_read_support}\" \\\n    \"${final_svaba_somatic_sv_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 45,
        "string_script": "    final_svaba_somatic_sv_vcf = \"${tumor_normal_sample_id}.svaba.somatic.sv.vcf\"\n    final_svaba_somatic_sv_read_support = \"${tumor_normal_sample_id}.svaba.somatic.sv.readsupp.txt\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'QUAL<6' \\\n    \"${svaba_somatic_sv_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/MAPQ=60 || INFO/DISC_MAPQ=60' \\\n    | \\\n    bcftools reheader \\\n    --samples \"${sample_renaming_file}\" \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_svaba_somatic_sv_vcf}\"\n\n    svaba_interchromosomal_mate_finder.sh \\\n    \"${final_svaba_somatic_sv_vcf}\" \\\n    \"${svaba_somatic_sv_unclassified_vcf}\" > \"${tumor_normal_sample_id}.svaba.missingmates.txt\"\n\n    cat \"${tumor_normal_sample_id}.svaba.missingmates.txt\" >> \"${final_svaba_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t[%DR]\\t[%SR]\\n' \\\n    --output \"${final_svaba_somatic_sv_read_support}\" \\\n    \"${final_svaba_somatic_sv_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 30,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "svaba_sv_vcf_forPostprocessing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "svaba_sv_vcf_forSurvivor",
            "svaba_sv_read_support_forAnnotation"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.svaba == \"on\"",
        "stub": ""
    },
    "leftNormalizeSvabaVcf_bcftools": {
        "name_process": "leftNormalizeSvabaVcf_bcftools",
        "string_process": "\nprocess leftNormalizeSvabaVcf_bcftools {\n\tpublishDir \"${params.output_dir}/somatic/svaba\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(filtered_somatic_indel_vcf), path(filtered_somatic_indel_vcf_index), path(reference_genome_fasta_forSvabaBcftools), path(reference_genome_fasta_index_forSvabaBcftools), path(reference_genome_fasta_dict_forSvabaBcftools) from filtered_indel_vcf_forSvabaBcftools.combine(reference_genome_bundle_forSvabaBcftools)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(final_svaba_indel_vcf), path(final_svaba_indel_vcf_index) into final_svaba_indel_vcf_forConsensus\n\tpath svaba_realign_normalize_stats\n\n\twhen:\n\tparams.svaba == \"on\"\n\n\tscript:\n\tfinal_svaba_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.indel.vcf.gz\"\n\tfinal_svaba_indel_vcf_index = \"${final_svaba_indel_vcf}.tbi\"\n\tsvaba_realign_normalize_stats = \"${tumor_normal_sample_id}.svaba.realignnormalizestats.txt\"\n\t\"\"\"\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forSvabaBcftools}\" \\\n\t--output-type z \\\n\t--output \"${final_svaba_indel_vcf}\" \\\n\t\"${filtered_somatic_indel_vcf}\" 2>\"${svaba_realign_normalize_stats}\"\n\n\ttabix \"${final_svaba_indel_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\tfinal_svaba_indel_vcf = \"${tumor_normal_sample_id}.svaba.somatic.indel.vcf.gz\"\n\tfinal_svaba_indel_vcf_index = \"${final_svaba_indel_vcf}.tbi\"\n\tsvaba_realign_normalize_stats = \"${tumor_normal_sample_id}.svaba.realignnormalizestats.txt\"\n\t\"\"\"\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forSvabaBcftools}\" \\\n\t--output-type z \\\n\t--output \"${final_svaba_indel_vcf}\" \\\n\t\"${filtered_somatic_indel_vcf}\" 2>\"${svaba_realign_normalize_stats}\"\n\n\ttabix \"${final_svaba_indel_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "filtered_indel_vcf_forSvabaBcftools",
            "reference_genome_bundle_forSvabaBcftools"
        ],
        "nb_inputs": 2,
        "outputs": [
            "final_svaba_indel_vcf_forConsensus",
            "svaba_realign_normalize_stats"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/svaba\", mode: 'copy', pattern: '*.{vcf.gz,tbi,txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.svaba == \"on\"",
        "stub": ""
    },
    "svAndIndelCalling_delly": {
        "name_process": "svAndIndelCalling_delly",
        "string_process": "\nprocess svAndIndelCalling_delly {\n\tpublishDir \"${params.output_dir}/somatic/delly\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forDelly), path(reference_genome_fasta_index_forDelly), path(reference_genome_fasta_dict_forDelly), path(gatk_bundle_wgs_bed_blacklist_0based_forDelly) from tumor_normal_pair_forDelly.combine(reference_genome_and_blacklist_bundle_forDelly)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), path(delly_somatic_sv_vcf), path(delly_somatic_sv_vcf_index) into delly_sv_vcf_forPostprocessing\n\tpath delly_germline_sv_vcf\n\tpath delly_germline_sv_vcf_index\n\n\twhen:\n\tparams.delly == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tdelly_somatic_sv_vcf = \"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.vcf.gz\"\n\tdelly_somatic_sv_vcf_index = \"${delly_somatic_sv_vcf}.tbi\"\n\tdelly_germline_sv_vcf = \"${tumor_normal_sample_id}.delly.germline.sv.vcf.gz\"\n\tdelly_germline_sv_vcf_index = \"${delly_germline_sv_vcf}.tbi\"\n\t\"\"\"\n\tdelly call \\\n\t--genome \"${reference_genome_fasta_forDelly}\" \\\n\t--exclude \"${gatk_bundle_wgs_bed_blacklist_0based_forDelly}\" \\\n\t--outfile \"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\" \\\n\t\"${tumor_bam}\" \"${normal_bam}\"\n\n\ttouch samples.tsv\n\techo \"${tumor_id}\\ttumor\" >> samples.tsv\n\techo \"${normal_id}\\tcontrol\" >> samples.tsv\n\n\tdelly filter \\\n\t--filter somatic \\\n\t--pass \\\n\t--altaf 0.1 \\\n\t--minsize 51 \\\n\t--coverage 10 \\\n\t--samples samples.tsv \\\n\t--outfile \"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" \\\n\t\"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\"\n\n\tbcftools isec \\\n\t--nfiles 1 \\\n\t--complement \\\n\t--write 1 \\\n\t--output-type v \\\n\t\"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\" \\\n\t\"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--include 'FILTER=\"PASS\"' \\\n\t| \\\n\tbgzip > \"${delly_germline_sv_vcf}\"\n\n\ttabix \"${delly_germline_sv_vcf}\"\n\n\tbcftools view \\\n\t--output-type z \\\n\t\"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" > \"${delly_somatic_sv_vcf}\"\n\n\ttabix \"${delly_somatic_sv_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 66,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tdelly_somatic_sv_vcf = \"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.vcf.gz\"\n\tdelly_somatic_sv_vcf_index = \"${delly_somatic_sv_vcf}.tbi\"\n\tdelly_germline_sv_vcf = \"${tumor_normal_sample_id}.delly.germline.sv.vcf.gz\"\n\tdelly_germline_sv_vcf_index = \"${delly_germline_sv_vcf}.tbi\"\n\t\"\"\"\n\tdelly call \\\n\t--genome \"${reference_genome_fasta_forDelly}\" \\\n\t--exclude \"${gatk_bundle_wgs_bed_blacklist_0based_forDelly}\" \\\n\t--outfile \"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\" \\\n\t\"${tumor_bam}\" \"${normal_bam}\"\n\n\ttouch samples.tsv\n\techo \"${tumor_id}\\ttumor\" >> samples.tsv\n\techo \"${normal_id}\\tcontrol\" >> samples.tsv\n\n\tdelly filter \\\n\t--filter somatic \\\n\t--pass \\\n\t--altaf 0.1 \\\n\t--minsize 51 \\\n\t--coverage 10 \\\n\t--samples samples.tsv \\\n\t--outfile \"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" \\\n\t\"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\"\n\n\tbcftools isec \\\n\t--nfiles 1 \\\n\t--complement \\\n\t--write 1 \\\n\t--output-type v \\\n\t\"${tumor_normal_sample_id}.delly.sv.unfiltered.bcf\" \\\n\t\"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--include 'FILTER=\"PASS\"' \\\n\t| \\\n\tbgzip > \"${delly_germline_sv_vcf}\"\n\n\ttabix \"${delly_germline_sv_vcf}\"\n\n\tbcftools view \\\n\t--output-type z \\\n\t\"${tumor_normal_sample_id}.delly.somatic.sv.unprocessed.bcf\" > \"${delly_somatic_sv_vcf}\"\n\n\ttabix \"${delly_somatic_sv_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 49,
        "language_script": "bash",
        "tools": [
            "Delly2",
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/delly2",
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "Delly2",
                "uri": "https://bio.tools/delly2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3796",
                            "term": "Population genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Sequence alignment analysis (indel detection)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3228",
                                    "term": "Structural variation discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_1383",
                                "term": "Nucleic acid sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Integrated structural variant prediction method that can discover, genotype and visualize deletions, tandem duplications, inversions and translocations at single-nucleotide resolution in short-read massively parallel sequencing data. It uses paired-ends and split-reads to sensitively and accurately delineate genomic rearrangements throughout the genome. Structural variants can be visualized using Delly-maze and Delly-suave.",
                "homepage": "https://github.com/dellytools/delly"
            },
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "tumor_normal_pair_forDelly",
            "reference_genome_and_blacklist_bundle_forDelly"
        ],
        "nb_inputs": 2,
        "outputs": [
            "delly_sv_vcf_forPostprocessing",
            "delly_germline_sv_vcf",
            "delly_germline_sv_vcf_index"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/delly\", mode: 'copy', pattern: '*.{vcf.gz,tbi}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.delly == \"on\"",
        "stub": ""
    },
    "filterAndPostprocessDellyVcf_bcftools": {
        "name_process": "filterAndPostprocessDellyVcf_bcftools",
        "string_process": "\nprocess filterAndPostprocessDellyVcf_bcftools {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(delly_somatic_sv_vcf), path(delly_somatic_sv_vcf_index) from delly_sv_vcf_forPostprocessing\n\n    output:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(final_delly_somatic_sv_vcf) into delly_sv_vcf_forSurvivor\n    tuple val(tumor_normal_sample_id), path(final_delly_somatic_sv_read_support) into delly_sv_read_support_forAnnotation\n\n    when:\n    params.delly == \"on\"\n\n    script:\n    final_delly_somatic_sv_vcf = \"${tumor_normal_sample_id}.delly.somatic.sv.vcf\"\n    final_delly_somatic_sv_read_support = \"${tumor_normal_sample_id}.delly.somatic.sv.readsupp.txt\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/MAPQ=60 || INFO/SRMAPQ=60' \\\n    \"${delly_somatic_sv_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/PE>3 || INFO/SR>3' \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_delly_somatic_sv_vcf}\"\n\n    touch \"${tumor_normal_sample_id}.delly.splitmates.txt\"\n    delly_interchromosomal_record_splitter.sh \\\n    \"${final_delly_somatic_sv_vcf}\" > \"${tumor_normal_sample_id}.delly.splitmates.txt\"\n\n    cat \"${tumor_normal_sample_id}.delly.splitmates.txt\" >> \"${final_delly_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t%PE\\t%SR\\n' \\\n    --output \"${final_delly_somatic_sv_read_support}\" \\\n    \"${final_delly_somatic_sv_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "    final_delly_somatic_sv_vcf = \"${tumor_normal_sample_id}.delly.somatic.sv.vcf\"\n    final_delly_somatic_sv_read_support = \"${tumor_normal_sample_id}.delly.somatic.sv.readsupp.txt\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/MAPQ=60 || INFO/SRMAPQ=60' \\\n    \"${delly_somatic_sv_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --include 'INFO/PE>3 || INFO/SR>3' \\\n    | \\\n    bcftools view \\\n    --output-type v \\\n    --samples \"${tumor_id}\" \\\n    --output-file \"${final_delly_somatic_sv_vcf}\"\n\n    touch \"${tumor_normal_sample_id}.delly.splitmates.txt\"\n    delly_interchromosomal_record_splitter.sh \\\n    \"${final_delly_somatic_sv_vcf}\" > \"${tumor_normal_sample_id}.delly.splitmates.txt\"\n\n    cat \"${tumor_normal_sample_id}.delly.splitmates.txt\" >> \"${final_delly_somatic_sv_vcf}\"\n\n    bcftools query \\\n    --format '%ID\\t%PE\\t%SR\\n' \\\n    --output \"${final_delly_somatic_sv_read_support}\" \\\n    \"${final_delly_somatic_sv_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "LSR"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/lsr"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "LSR",
                "uri": "https://bio.tools/lsr",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3678",
                            "term": "Experimental design and studies"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3678",
                            "term": "Studies"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3678",
                            "term": "Experimental design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3678",
                            "term": "Design of experiments"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "LSR (Longest Run Test) is an S-plus program computes the distribution and the first moment of the length of the longest k-interrupted run (Lk) in a binary sequence.",
                "homepage": "http://www.csjfann.ibms.sinica.edu.tw/eag/programlist/LSR/LSR.html"
            }
        ],
        "inputs": [
            "delly_sv_vcf_forPostprocessing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "delly_sv_vcf_forSurvivor",
            "delly_sv_read_support_forAnnotation"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.delly == \"on\"",
        "stub": ""
    },
    "igRearrangementsAndTranslocations_igcaller": {
        "name_process": "igRearrangementsAndTranslocations_igcaller",
        "string_process": "\nprocess igRearrangementsAndTranslocations_igcaller {\n    publishDir \"${params.output_dir}/somatic/igcaller\", mode: 'copy', pattern: '*.{tsv}'\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forIgCaller), path(reference_genome_fasta_index_forIgCaller), path(reference_genome_fasta_dict_forIgCaller) from tumor_normal_pair_forIgCaller.combine(reference_genome_bundle_forIgCaller)\n     \n    output:\n    path igcaller_csr_tsv\n    path igcaller_igk_tsv\n    path igcaller_igl_tsv\n    path igcaller_igh_tsv\n    path igcaller_filtered_calls_tsv\n    path igcaller_oncogenic_rearrangements_tsv\n\n    when:\n    params.igcaller == \"on\"\n\n    script:\n    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tigcaller_csr_tsv = \"${tumor_normal_sample_id}.igcaller.csr.tsv\"\n\tigcaller_igk_tsv = \"${tumor_normal_sample_id}.igcaller.igk.tsv\"\n\tigcaller_igl_tsv = \"${tumor_normal_sample_id}.igcaller.igl.tsv\"\n\tigcaller_igh_tsv = \"${tumor_normal_sample_id}.igcaller.igh.tsv\"\n\tigcaller_filtered_calls_tsv = \"${tumor_normal_sample_id}.igcaller.filtered.tsv\"\n\tigcaller_oncogenic_rearrangements_tsv = \"${tumor_normal_sample_id}.igcaller.oncogenic.rearrangements.tsv\"\n    \"\"\"\n    python3 \\${IGCALLER_DIR}/IgCaller.py \\\n    --inputsFolder \\${IGCALLER_DIR}/IgCaller_reference_files/ \\\n    --genomeVersion hg38 \\\n    --chromosomeAnnotation ucsc \\\n    --bamN \"${normal_bam}\" \\\n    --bamT \"${tumor_bam}\" \\\n    --refGenome \"${reference_genome_fasta_forIgCaller}\" \\\n    --outputPath . \\\n    -@ ${task.cpus}\n\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_CSR.tsv\" \"${igcaller_csr_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGK.tsv\" \"${igcaller_igk_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGL.tsv\" \"${igcaller_igl_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGH.tsv\" \"${igcaller_igh_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_filtered.tsv\" \"${igcaller_filtered_calls_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_oncogenic_IG_rearrangements.tsv\" \"${igcaller_oncogenic_rearrangements_tsv}\"\n    \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "    tumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\ttumor_normal_sample_id = \"${tumor_id}_vs_${normal_id}\"\n\tigcaller_csr_tsv = \"${tumor_normal_sample_id}.igcaller.csr.tsv\"\n\tigcaller_igk_tsv = \"${tumor_normal_sample_id}.igcaller.igk.tsv\"\n\tigcaller_igl_tsv = \"${tumor_normal_sample_id}.igcaller.igl.tsv\"\n\tigcaller_igh_tsv = \"${tumor_normal_sample_id}.igcaller.igh.tsv\"\n\tigcaller_filtered_calls_tsv = \"${tumor_normal_sample_id}.igcaller.filtered.tsv\"\n\tigcaller_oncogenic_rearrangements_tsv = \"${tumor_normal_sample_id}.igcaller.oncogenic.rearrangements.tsv\"\n    \"\"\"\n    python3 \\${IGCALLER_DIR}/IgCaller.py \\\n    --inputsFolder \\${IGCALLER_DIR}/IgCaller_reference_files/ \\\n    --genomeVersion hg38 \\\n    --chromosomeAnnotation ucsc \\\n    --bamN \"${normal_bam}\" \\\n    --bamT \"${tumor_bam}\" \\\n    --refGenome \"${reference_genome_fasta_forIgCaller}\" \\\n    --outputPath . \\\n    -@ ${task.cpus}\n\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_CSR.tsv\" \"${igcaller_csr_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGK.tsv\" \"${igcaller_igk_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGL.tsv\" \"${igcaller_igl_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_IGH.tsv\" \"${igcaller_igh_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_filtered.tsv\" \"${igcaller_filtered_calls_tsv}\"\n    mv \"${tumor_bam.baseName}_IgCaller/${tumor_bam.baseName}_output_oncogenic_IG_rearrangements.tsv\" \"${igcaller_oncogenic_rearrangements_tsv}\"\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tumor_normal_pair_forIgCaller",
            "reference_genome_bundle_forIgCaller"
        ],
        "nb_inputs": 2,
        "outputs": [
            "igcaller_csr_tsv",
            "igcaller_igk_tsv",
            "igcaller_igl_tsv",
            "igcaller_igh_tsv",
            "igcaller_filtered_calls_tsv",
            "igcaller_oncogenic_rearrangements_tsv"
        ],
        "nb_outputs": 6,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/igcaller\", mode: 'copy', pattern: '*.{tsv}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.igcaller == \"on\"",
        "stub": ""
    },
    "mergeAndGenerateConsensusSnvCalls_mergevcf": {
        "name_process": "mergeAndGenerateConsensusSnvCalls_mergevcf",
        "string_process": "\nprocess mergeAndGenerateConsensusSnvCalls_mergevcf {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(final_varscan_snv_vcf), path(final_varscan_snv_vcf_index), path(final_mutect_snv_vcf), path(final_mutect_snv_vcf_index), path(final_strelka_snv_vcf), path(final_strelka_snv_vcf_index) from final_varscan_snv_vcf_forConsensus.join(final_mutect_snv_vcf_forConsensus).join(final_strelka_snv_vcf_forConsensus)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(consensus_somatic_snv_nosamples_badheader_noformat_vcf), path(snv_vcf_base_header) into consensus_snv_vcf_forConsensusSnvMpileup\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"\n\n\tscript:\n\tconsensus_somatic_snv_nosamples_badheader_noformat_vcf = \"${tumor_normal_sample_id}.consensus.somatic.snv.nosamples.badheader.noformat.vcf\"\n\tsnv_vcf_base_header = \"snv_vcf_base_header.txt\"\n\t\"\"\"\n\tmergevcf \\\n\t--labels varscan,mutect,strelka \\\n\t--ncallers \\\n\t--mincallers 2 \\\n\t\"${final_varscan_snv_vcf}\" \\\n\t\"${final_mutect_snv_vcf}\" \\\n\t\"${final_strelka_snv_vcf}\" \\\n\t| \\\n\tawk '\\$1 ~ /^#/ {print \\$0;next} {print \\$0 | \"sort -k1,1V -k2,2n\"}' > \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\"\n\n\ttouch \"${snv_vcf_base_header}\"\n\tgrep '##fileformat=' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##fileDate=' \"${final_strelka_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\techo '##source=varscan,mutect,strelka' >> \"${snv_vcf_base_header}\"\n\tzgrep '##normal_sample=' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##tumor_sample=' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##reference=' \"${final_strelka_snv_vcf}\" | sed -E 's|file.*/||' >> \"${snv_vcf_base_header}\"\n\tzgrep '##contig=<ID=chr' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tconsensus_somatic_snv_nosamples_badheader_noformat_vcf = \"${tumor_normal_sample_id}.consensus.somatic.snv.nosamples.badheader.noformat.vcf\"\n\tsnv_vcf_base_header = \"snv_vcf_base_header.txt\"\n\t\"\"\"\n\tmergevcf \\\n\t--labels varscan,mutect,strelka \\\n\t--ncallers \\\n\t--mincallers 2 \\\n\t\"${final_varscan_snv_vcf}\" \\\n\t\"${final_mutect_snv_vcf}\" \\\n\t\"${final_strelka_snv_vcf}\" \\\n\t| \\\n\tawk '\\$1 ~ /^#/ {print \\$0;next} {print \\$0 | \"sort -k1,1V -k2,2n\"}' > \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\"\n\n\ttouch \"${snv_vcf_base_header}\"\n\tgrep '##fileformat=' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##fileDate=' \"${final_strelka_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\techo '##source=varscan,mutect,strelka' >> \"${snv_vcf_base_header}\"\n\tzgrep '##normal_sample=' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##tumor_sample=' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\tzgrep '##reference=' \"${final_strelka_snv_vcf}\" | sed -E 's|file.*/||' >> \"${snv_vcf_base_header}\"\n\tzgrep '##contig=<ID=chr' \"${final_mutect_snv_vcf}\" >> \"${snv_vcf_base_header}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "final_varscan_snv_vcf_forConsensus",
            "final_mutect_snv_vcf_forConsensus",
            "final_strelka_snv_vcf_forConsensus"
        ],
        "nb_inputs": 3,
        "outputs": [
            "consensus_snv_vcf_forConsensusSnvMpileup"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"",
        "stub": ""
    },
    "mergeAndGenerateConsensusIndelCalls_mergevcf": {
        "name_process": "mergeAndGenerateConsensusIndelCalls_mergevcf",
        "string_process": "\nprocess mergeAndGenerateConsensusIndelCalls_mergevcf {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(final_varscan_indel_vcf), path(final_varscan_indel_vcf_index), path(final_mutect_indel_vcf), path(final_mutect_indel_vcf_index), path(final_strelka_indel_vcf), path(final_strelka_indel_vcf_index), path(final_svaba_indel_vcf), path(final_svaba_indel_vcf_index) from final_varscan_indel_vcf_forConsensus.join(final_mutect_indel_vcf_forConsensus).join(final_strelka_indel_vcf_forConsensus).join(final_svaba_indel_vcf_forConsensus)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(consensus_somatic_indel_nosamples_badheader_noformat_vcf), path(indel_vcf_base_header) into consensus_indel_vcf_forConsensusIndelMpileup\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\tconsensus_somatic_indel_nosamples_badheader_noformat_vcf = \"${tumor_normal_sample_id}.consensus.somatic.indel.nosamples.badheader.noformat.vcf\"\n\tindel_vcf_base_header = \"indel_vcf_base_header.txt\"\n\t\"\"\"\n\tmergevcf \\\n\t--labels varscan,mutect,strelka,svaba \\\n\t--ncallers \\\n\t--mincallers 2 \\\n\t\"${final_varscan_indel_vcf}\" \\\n\t\"${final_mutect_indel_vcf}\" \\\n\t\"${final_strelka_indel_vcf}\" \\\n\t\"${final_svaba_indel_vcf}\" \\\n\t| \\\n\tawk '\\$1 ~ /^#/ {print \\$0;next} {print \\$0 | \"sort -k1,1V -k2,2n\"}' > \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\"\n\n\ttouch \"${indel_vcf_base_header}\"\n\tgrep '##fileformat=' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##fileDate=' \"${final_svaba_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\techo '##source=varscan,mutect,strelka,svaba' >> \"${indel_vcf_base_header}\"\n\tzgrep '##normal_sample=' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##tumor_sample=' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##reference=' \"${final_svaba_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##contig=<ID=chr' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "\tconsensus_somatic_indel_nosamples_badheader_noformat_vcf = \"${tumor_normal_sample_id}.consensus.somatic.indel.nosamples.badheader.noformat.vcf\"\n\tindel_vcf_base_header = \"indel_vcf_base_header.txt\"\n\t\"\"\"\n\tmergevcf \\\n\t--labels varscan,mutect,strelka,svaba \\\n\t--ncallers \\\n\t--mincallers 2 \\\n\t\"${final_varscan_indel_vcf}\" \\\n\t\"${final_mutect_indel_vcf}\" \\\n\t\"${final_strelka_indel_vcf}\" \\\n\t\"${final_svaba_indel_vcf}\" \\\n\t| \\\n\tawk '\\$1 ~ /^#/ {print \\$0;next} {print \\$0 | \"sort -k1,1V -k2,2n\"}' > \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\"\n\n\ttouch \"${indel_vcf_base_header}\"\n\tgrep '##fileformat=' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##fileDate=' \"${final_svaba_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\techo '##source=varscan,mutect,strelka,svaba' >> \"${indel_vcf_base_header}\"\n\tzgrep '##normal_sample=' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##tumor_sample=' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##reference=' \"${final_svaba_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\tzgrep '##contig=<ID=chr' \"${final_mutect_indel_vcf}\" >> \"${indel_vcf_base_header}\"\n\t\"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "final_varscan_indel_vcf_forConsensus",
            "final_mutect_indel_vcf_forConsensus",
            "final_strelka_indel_vcf_forConsensus",
            "final_svaba_indel_vcf_forConsensus"
        ],
        "nb_inputs": 4,
        "outputs": [
            "consensus_indel_vcf_forConsensusIndelMpileup"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "consensusSnvMpileup_bcftools": {
        "name_process": "consensusSnvMpileup_bcftools",
        "string_process": "\nprocess consensusSnvMpileup_bcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(consensus_somatic_snv_nosamples_badheader_noformat_vcf), path(snv_vcf_base_header), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forConsensusSnvMpileup), path(reference_genome_fasta_index_forConsensusSnvMpileup), path(reference_genome_fasta_dict_forConsensusSnvMpileup) from consensus_snv_vcf_forConsensusSnvMpileup.join(bams_forConsensusSnvMpileup).combine(reference_genome_bundle_forConsensusSnvMpileup)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf) into consensus_snv_vcf_forAddSamples\n\ttuple val(tumor_normal_sample_id), path(snv_mpileup_info_dp_metrics), path(snv_mpileup_normal_format_metrics), path(snv_mpileup_normal_format_metrics_index), path(snv_mpileup_tumor_format_metrics), path(snv_mpileup_tumor_format_metrics_index) into consensus_snv_mpileup_metrics_forAddFormat\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tfull_snv_vcf_header = \"full_snv_vcf_header.txt\"\n\tmpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.nosamples.noformat.vcf\"\n\tsnv_mpileup_info_dp_metrics = \"${tumor_normal_sample_id}.snv.mpileup.info.dp.metrics.txt\"\n\tsnv_mpileup_normal_format_metrics = \"${tumor_normal_sample_id}.snv.mpileup.normal.format.metrics.txt.gz\"\n\tsnv_mpileup_normal_format_metrics_index = \"${snv_mpileup_normal_format_metrics}.tbi\"\n\tsnv_mpileup_tumor_format_metrics = \"${tumor_normal_sample_id}.snv.mpileup.tumor.format.metrics.txt.gz\"\n\tsnv_mpileup_tumor_format_metrics_index = \"${snv_mpileup_tumor_format_metrics}.tbi\"\n\t\"\"\"\n\tbcftools mpileup \\\n\t--no-BAQ \\\n\t--max-depth 5000 \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusSnvMpileup}\" \\\n\t--regions-file \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" \\\n\t--samples ${normal_id},${tumor_id} \\\n\t--annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics - \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusSnvMpileup}\" \\\n\t- \\\n\t| \\\n\tbcftools filter \\\n\t--exclude 'FORMAT/DP == 0' \\\n\t- \\\n\t| \\\n\tgrep -Ev '<.>|INDEL;' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\ttabix \"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\n\tbgzip < \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" > \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\"\n\ttabix \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\"\n\n\ttouch \"${full_snv_vcf_header}\"\n\tcat \"${snv_vcf_base_header}\" >> \"${full_snv_vcf_header}\"\n\tzgrep '##FILTER=<ID=LOWSUPPORT' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_snv_vcf_header}\"\n\tzgrep '##INFO=' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_snv_vcf_header}\"\n\techo -e '#CHROM\\tPOS\\tID\\tREF\\tALT\\tQUAL\\tFILTER\\tINFO' >> \"${full_snv_vcf_header}\"\n\n\tbcftools isec \\\n\t--nfiles =2 \\\n\t--write 1 \\\n\t\"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbcftools reheader \\\n\t--header \"${full_snv_vcf_header}\" \\\n\t--output \"${mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t%INFO/DP\\n' \\\n\t--output \"${snv_mpileup_info_dp_metrics}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${normal_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${snv_mpileup_normal_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${snv_mpileup_normal_format_metrics}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${snv_mpileup_tumor_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${snv_mpileup_tumor_format_metrics}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 89,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tfull_snv_vcf_header = \"full_snv_vcf_header.txt\"\n\tmpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.nosamples.noformat.vcf\"\n\tsnv_mpileup_info_dp_metrics = \"${tumor_normal_sample_id}.snv.mpileup.info.dp.metrics.txt\"\n\tsnv_mpileup_normal_format_metrics = \"${tumor_normal_sample_id}.snv.mpileup.normal.format.metrics.txt.gz\"\n\tsnv_mpileup_normal_format_metrics_index = \"${snv_mpileup_normal_format_metrics}.tbi\"\n\tsnv_mpileup_tumor_format_metrics = \"${tumor_normal_sample_id}.snv.mpileup.tumor.format.metrics.txt.gz\"\n\tsnv_mpileup_tumor_format_metrics_index = \"${snv_mpileup_tumor_format_metrics}.tbi\"\n\t\"\"\"\n\tbcftools mpileup \\\n\t--no-BAQ \\\n\t--max-depth 5000 \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusSnvMpileup}\" \\\n\t--regions-file \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" \\\n\t--samples ${normal_id},${tumor_id} \\\n\t--annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics - \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusSnvMpileup}\" \\\n\t- \\\n\t| \\\n\tbcftools filter \\\n\t--exclude 'FORMAT/DP == 0' \\\n\t- \\\n\t| \\\n\tgrep -Ev '<.>|INDEL;' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\ttabix \"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\n\tbgzip < \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}\" > \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\"\n\ttabix \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\"\n\n\ttouch \"${full_snv_vcf_header}\"\n\tcat \"${snv_vcf_base_header}\" >> \"${full_snv_vcf_header}\"\n\tzgrep '##FILTER=<ID=LOWSUPPORT' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_snv_vcf_header}\"\n\tzgrep '##INFO=' \"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_snv_vcf_header}\"\n\techo -e '#CHROM\\tPOS\\tID\\tREF\\tALT\\tQUAL\\tFILTER\\tINFO' >> \"${full_snv_vcf_header}\"\n\n\tbcftools isec \\\n\t--nfiles =2 \\\n\t--write 1 \\\n\t\"${consensus_somatic_snv_nosamples_badheader_noformat_vcf}.gz\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbcftools reheader \\\n\t--header \"${full_snv_vcf_header}\" \\\n\t--output \"${mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t%INFO/DP\\n' \\\n\t--output \"${snv_mpileup_info_dp_metrics}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${normal_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${snv_mpileup_normal_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${snv_mpileup_normal_format_metrics}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.snv.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${snv_mpileup_tumor_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${snv_mpileup_tumor_format_metrics}\"\n\t\"\"\"",
        "nb_lignes_script": 74,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "mInDel"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/mindel"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "mInDel",
                "uri": "https://bio.tools/mindel",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Sequence alignment analysis (indel detection)"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Next-generation variant caller specifically designed for InDel marker discovery. By taking in raw sequence reads and assembling them into contigs de novo, identifies InDel polymorphisms using a sliding window alignment from assembled contigs, rendering a unique advantage when a reference genome is unavailable.",
                "homepage": "https://github.com/lyd0527/mInDel"
            }
        ],
        "inputs": [
            "consensus_snv_vcf_forConsensusSnvMpileup",
            "bams_forConsensusSnvMpileup",
            "reference_genome_bundle_forConsensusSnvMpileup"
        ],
        "nb_inputs": 3,
        "outputs": [
            "consensus_snv_vcf_forAddSamples",
            "consensus_snv_mpileup_metrics_forAddFormat"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"",
        "stub": ""
    },
    "addSamplesToConsensusSnvVcf_vatools": {
        "name_process": "addSamplesToConsensusSnvVcf_vatools",
        "string_process": "\nprocess addSamplesToConsensusSnvVcf_vatools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf) from consensus_snv_vcf_forAddSamples\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_snv_noformat_vcf) into consensus_snv_vcf_forAddFormat\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"\n\n\tscript:\n\tmpileup_supported_consensus_somatic_snv_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.noformat.vcf\"\n\t\"\"\"\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.halfsamples.noformat.vcf\" \\\n\t\"${mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf}\" \\\n\t\"${normal_id}\" \\\n\t.\n\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${mpileup_supported_consensus_somatic_snv_noformat_vcf}\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.halfsamples.noformat.vcf\" \\\n\t\"${tumor_id}\" \\\n\t.\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\tmpileup_supported_consensus_somatic_snv_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.noformat.vcf\"\n\t\"\"\"\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.halfsamples.noformat.vcf\" \\\n\t\"${mpileup_supported_consensus_somatic_snv_nosamples_noformat_vcf}\" \\\n\t\"${normal_id}\" \\\n\t.\n\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${mpileup_supported_consensus_somatic_snv_noformat_vcf}\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.halfsamples.noformat.vcf\" \\\n\t\"${tumor_id}\" \\\n\t.\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "consensus_snv_vcf_forAddSamples"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_snv_vcf_forAddFormat"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"",
        "stub": ""
    },
    "annotateConsensusSnvVcfFormatColumnAndFilter_bcftools": {
        "name_process": "annotateConsensusSnvVcfFormatColumnAndFilter_bcftools",
        "string_process": "\nprocess annotateConsensusSnvVcfFormatColumnAndFilter_bcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_snv_noformat_vcf), path(snv_mpileup_info_dp_metrics), path(snv_mpileup_normal_format_metrics), path(snv_mpileup_normal_format_metrics_index), path(snv_mpileup_tumor_format_metrics), path(snv_mpileup_tumor_format_metrics_index) from consensus_snv_vcf_forAddFormat.join(consensus_snv_mpileup_metrics_forAddFormat)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(snv_consensus_vcf), path(snv_consensus_vcf_index), path(snv_strand_metrics) into consensus_snv_forBedFilters\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"\n\n\tscript:\n\tsnv_consensus_vcf_info_header = \"snv_consensus_vcf_info_header.txt\"\n\tsnv_consensus_vcf_format_headers = \"snv_consensus_vcf_format_header.txt\"\n\tsnv_consensus_vcf = \"${tumor_normal_sample_id}.consensus.somatic.snv.vcf.gz\"\n\tsnv_consensus_vcf_index = \"${snv_consensus_vcf}.tbi\"\n\tsnv_strand_metrics = \"${tumor_normal_sample_id}.snv.strand.metrics.txt\"\n\t\"\"\"\n\tcat \"${snv_mpileup_info_dp_metrics}\" \\\n\t| \\\n\tpaste - <(zcat \"${snv_mpileup_tumor_format_metrics}\" | cut -f 6 | awk '{split(\\$0,x,\",\"); print x[2]}') > \"${tumor_normal_sample_id}.snv.mpileup.info.dp.ac.metrics.txt\"\n\n\tcat \"${tumor_normal_sample_id}.snv.mpileup.info.dp.ac.metrics.txt\" \\\n\t| \\\n\tpaste - <(zcat \"${snv_mpileup_tumor_format_metrics}\" | cut -f 5) \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$5,\\$6,\\$6/\\$7}' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\"\n\ttabix -s1 -b2 -e2 \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\"\n\n\ttouch \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total read depth across samples (normal sample DP + tumor sample DP)\">' >> \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=AC,Number=1,Type=Integer,Description=\"Count of ALT allele reads in tumor sample\">' >> \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=VAF,Number=1,Type=Float,Description=\"Variant allele frequency, expressed as fraction of ALT allele reads in total read depth in tumor sample (tumor sample ALT AC / tumor sample DP)\">' >> \"${snv_consensus_vcf_info_header}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--annotations \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\" \\\n\t--header-lines \"${snv_consensus_vcf_info_header}\" \\\n\t--columns CHROM,POS,REF,ALT,INFO/DP,INFO/AC,INFO/VAF \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.noformat.vcf.gz\" \\\n\t\"${mpileup_supported_consensus_somatic_snv_noformat_vcf}\"\n\n\ttouch \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=DPS,Number=1,Type=Integer,Description=\"Total read depth in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACFS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on forward(+) strand in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACRS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on reverse(-) strand in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${normal_id}\" \\\n\t--annotations \"${snv_mpileup_normal_format_metrics}\" \\\n\t--header-lines \"${snv_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.halfformat.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.noformat.vcf.gz\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${tumor_id}\" \\\n\t--annotations \"${snv_mpileup_tumor_format_metrics}\" \\\n\t--header-lines \"${snv_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--remove FORMAT/GT \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.format.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.halfformat.vcf.gz\"\n\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'INFO/AC<3 | INFO/VAF<0.01' \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.format.vcf.gz\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'FILTER=\"LOWSUPPORT\"' - \\\n\t| \\\n\tgrep -v '##bcftools_annotate' \\\n\t| \\\n\tbgzip > \"${snv_consensus_vcf}\"\n\ttabix \"${snv_consensus_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t[%ACFS]\\t[%ACRS]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t--output \"${snv_strand_metrics}\" \\\n\t\"${snv_consensus_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 90,
        "string_script": "\tsnv_consensus_vcf_info_header = \"snv_consensus_vcf_info_header.txt\"\n\tsnv_consensus_vcf_format_headers = \"snv_consensus_vcf_format_header.txt\"\n\tsnv_consensus_vcf = \"${tumor_normal_sample_id}.consensus.somatic.snv.vcf.gz\"\n\tsnv_consensus_vcf_index = \"${snv_consensus_vcf}.tbi\"\n\tsnv_strand_metrics = \"${tumor_normal_sample_id}.snv.strand.metrics.txt\"\n\t\"\"\"\n\tcat \"${snv_mpileup_info_dp_metrics}\" \\\n\t| \\\n\tpaste - <(zcat \"${snv_mpileup_tumor_format_metrics}\" | cut -f 6 | awk '{split(\\$0,x,\",\"); print x[2]}') > \"${tumor_normal_sample_id}.snv.mpileup.info.dp.ac.metrics.txt\"\n\n\tcat \"${tumor_normal_sample_id}.snv.mpileup.info.dp.ac.metrics.txt\" \\\n\t| \\\n\tpaste - <(zcat \"${snv_mpileup_tumor_format_metrics}\" | cut -f 5) \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$5,\\$6,\\$6/\\$7}' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\"\n\ttabix -s1 -b2 -e2 \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\"\n\n\ttouch \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total read depth across samples (normal sample DP + tumor sample DP)\">' >> \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=AC,Number=1,Type=Integer,Description=\"Count of ALT allele reads in tumor sample\">' >> \"${snv_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=VAF,Number=1,Type=Float,Description=\"Variant allele frequency, expressed as fraction of ALT allele reads in total read depth in tumor sample (tumor sample ALT AC / tumor sample DP)\">' >> \"${snv_consensus_vcf_info_header}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--annotations \"${tumor_normal_sample_id}.snv.mpileup.info.metrics.txt.gz\" \\\n\t--header-lines \"${snv_consensus_vcf_info_header}\" \\\n\t--columns CHROM,POS,REF,ALT,INFO/DP,INFO/AC,INFO/VAF \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.noformat.vcf.gz\" \\\n\t\"${mpileup_supported_consensus_somatic_snv_noformat_vcf}\"\n\n\ttouch \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=DPS,Number=1,Type=Integer,Description=\"Total read depth in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACFS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on forward(+) strand in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACRS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on reverse(-) strand in sample\">' >> \"${snv_consensus_vcf_format_headers}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${normal_id}\" \\\n\t--annotations \"${snv_mpileup_normal_format_metrics}\" \\\n\t--header-lines \"${snv_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.halfformat.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.noformat.vcf.gz\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${tumor_id}\" \\\n\t--annotations \"${snv_mpileup_tumor_format_metrics}\" \\\n\t--header-lines \"${snv_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--remove FORMAT/GT \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.format.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.halfformat.vcf.gz\"\n\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'INFO/AC<3 | INFO/VAF<0.01' \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.snv.info.format.vcf.gz\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'FILTER=\"LOWSUPPORT\"' - \\\n\t| \\\n\tgrep -v '##bcftools_annotate' \\\n\t| \\\n\tbgzip > \"${snv_consensus_vcf}\"\n\ttabix \"${snv_consensus_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t[%ACFS]\\t[%ACRS]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t--output \"${snv_strand_metrics}\" \\\n\t\"${snv_consensus_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 76,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "consensus_snv_vcf_forAddFormat",
            "consensus_snv_mpileup_metrics_forAddFormat"
        ],
        "nb_inputs": 2,
        "outputs": [
            "consensus_snv_forBedFilters"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"",
        "stub": ""
    },
    "repeatsAndStrandBiasFilterSnvs_vcftools": {
        "name_process": "repeatsAndStrandBiasFilterSnvs_vcftools",
        "string_process": "\nprocess repeatsAndStrandBiasFilterSnvs_vcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(snv_consensus_vcf), path(snv_consensus_vcf_index), path(snv_strand_metrics), path(simple_and_centromeric_repeats_bed) from consensus_snv_forBedFilters.combine(simple_and_centromeric_repeats_bed_forSnvBedFilter)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(hq_snv_consensus_vcf), path(hq_snv_consensus_vcf_index) into high_quality_consensus_snv_forAnnotation\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"\n\n\tscript:\n\tstrand_bias_filter_bed = \"${tumor_normal_sample_id}.snv.strandbias.bed\"\n\thq_snv_consensus_vcf = \"${tumor_normal_sample_id}.hq.consensus.somatic.snv.vcf.gz\"\n\thq_snv_consensus_vcf_index = \"${hq_snv_consensus_vcf}.tbi\"\n\t\"\"\"\n\tRscript --vanilla  \\\n\t${workflow.projectDir}/bin/strand_bias_proportion_tester.R \\\n\t\"${snv_strand_metrics}\" \\\n\t\"${strand_bias_filter_bed}\"\n\n\tvcftools \\\n\t--gzvcf \"${snv_consensus_vcf}\" \\\n\t--exclude-bed \"${strand_bias_filter_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tvcftools \\\n\t--vcf - \\\n\t--exclude-bed \"${simple_and_centromeric_repeats_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tbgzip > \"${hq_snv_consensus_vcf}\"\n\n\ttabix \"${hq_snv_consensus_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\tstrand_bias_filter_bed = \"${tumor_normal_sample_id}.snv.strandbias.bed\"\n\thq_snv_consensus_vcf = \"${tumor_normal_sample_id}.hq.consensus.somatic.snv.vcf.gz\"\n\thq_snv_consensus_vcf_index = \"${hq_snv_consensus_vcf}.tbi\"\n\t\"\"\"\n\tRscript --vanilla  \\\n\t${workflow.projectDir}/bin/strand_bias_proportion_tester.R \\\n\t\"${snv_strand_metrics}\" \\\n\t\"${strand_bias_filter_bed}\"\n\n\tvcftools \\\n\t--gzvcf \"${snv_consensus_vcf}\" \\\n\t--exclude-bed \"${strand_bias_filter_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tvcftools \\\n\t--vcf - \\\n\t--exclude-bed \"${simple_and_centromeric_repeats_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tbgzip > \"${hq_snv_consensus_vcf}\"\n\n\ttabix \"${hq_snv_consensus_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "consensus_snv_forBedFilters",
            "simple_and_centromeric_repeats_bed_forSnvBedFilter"
        ],
        "nb_inputs": 2,
        "outputs": [
            "high_quality_consensus_snv_forAnnotation"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\"",
        "stub": ""
    },
    "consensusIndelMpileup_bcftools": {
        "name_process": "consensusIndelMpileup_bcftools",
        "string_process": "\nprocess consensusIndelMpileup_bcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(consensus_somatic_indel_nosamples_badheader_noformat_vcf), path(indel_vcf_base_header), path(tumor_bam), path(tumor_bam_index), path(normal_bam), path(normal_bam_index), path(reference_genome_fasta_forConsensusIndelMpileup), path(reference_genome_fasta_index_forConsensusIndelMpileup), path(reference_genome_fasta_dict_forConsensusIndelMpileup) from consensus_indel_vcf_forConsensusIndelMpileup.join(bams_forConsensusIndelMpileup).combine(reference_genome_bundle_forConsensusIndelMpileup)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf) into consensus_indel_vcf_forAddSamples\n\ttuple val(tumor_normal_sample_id), path(indel_mpileup_info_dp_metrics), path(indel_mpileup_normal_format_metrics), path(indel_mpileup_normal_format_metrics_index), path(indel_mpileup_tumor_format_metrics), path(indel_mpileup_tumor_format_metrics_index) into consensus_indel_mpileup_metrics_forAddFormat\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tfull_indel_vcf_header = \"full_indel_vcf_header.txt\"\n\tmpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.nosamples.noformat.vcf\"\n\tindel_mpileup_info_dp_metrics = \"${tumor_normal_sample_id}.indel.mpileup.info.dp.metrics.txt\"\n\tindel_mpileup_normal_format_metrics = \"${tumor_normal_sample_id}.indel.mpileup.normal.format.metrics.txt.gz\"\n\tindel_mpileup_normal_format_metrics_index = \"${indel_mpileup_normal_format_metrics}.tbi\"\n\tindel_mpileup_tumor_format_metrics = \"${tumor_normal_sample_id}.indel.mpileup.tumor.format.metrics.txt.gz\"\n\tindel_mpileup_tumor_format_metrics_index = \"${indel_mpileup_tumor_format_metrics}.tbi\"\n\t\"\"\"\n\tbcftools mpileup \\\n\t--no-BAQ \\\n\t--max-depth 5000 \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusIndelMpileup}\" \\\n\t--regions-file \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" \\\n\t--samples ${normal_id},${tumor_id} \\\n\t--annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics - \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusIndelMpileup}\" \\\n\t- \\\n\t| \\\n\tbcftools filter \\\n\t--exclude 'FORMAT/DP == 0' \\\n\t- \\\n\t| \\\n\tgrep -E '^#|INDEL;' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\ttabix \"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\n\tbgzip < \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" > \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\"\n\ttabix \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\"\n\n\ttouch \"${full_indel_vcf_header}\"\n\tcat \"${indel_vcf_base_header}\" >> \"${full_indel_vcf_header}\"\n\tzgrep '##FILTER=<ID=LOWSUPPORT' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_indel_vcf_header}\"\n\tzgrep '##INFO=' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_indel_vcf_header}\"\n\techo -e '#CHROM\\tPOS\\tID\\tREF\\tALT\\tQUAL\\tFILTER\\tINFO' >> \"${full_indel_vcf_header}\"\n\n\tbcftools isec \\\n\t--nfiles =2 \\\n\t--write 1 \\\n\t\"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbcftools reheader \\\n\t--header \"${full_indel_vcf_header}\" \\\n\t--output \"${mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t%INFO/DP\\n' \\\n\t--output \"${indel_mpileup_info_dp_metrics}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${normal_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${indel_mpileup_normal_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${indel_mpileup_normal_format_metrics}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${indel_mpileup_tumor_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${indel_mpileup_tumor_format_metrics}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 89,
        "string_script": "\ttumor_id = \"${tumor_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tnormal_id = \"${normal_bam.baseName}\".replaceFirst(/\\..*$/, \"\")\n\tfull_indel_vcf_header = \"full_indel_vcf_header.txt\"\n\tmpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.nosamples.noformat.vcf\"\n\tindel_mpileup_info_dp_metrics = \"${tumor_normal_sample_id}.indel.mpileup.info.dp.metrics.txt\"\n\tindel_mpileup_normal_format_metrics = \"${tumor_normal_sample_id}.indel.mpileup.normal.format.metrics.txt.gz\"\n\tindel_mpileup_normal_format_metrics_index = \"${indel_mpileup_normal_format_metrics}.tbi\"\n\tindel_mpileup_tumor_format_metrics = \"${tumor_normal_sample_id}.indel.mpileup.tumor.format.metrics.txt.gz\"\n\tindel_mpileup_tumor_format_metrics_index = \"${indel_mpileup_tumor_format_metrics}.tbi\"\n\t\"\"\"\n\tbcftools mpileup \\\n\t--no-BAQ \\\n\t--max-depth 5000 \\\n\t--threads ${task.cpus} \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusIndelMpileup}\" \\\n\t--regions-file \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" \\\n\t--samples ${normal_id},${tumor_id} \\\n\t--annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP \\\n\t\"${normal_bam}\" \"${tumor_bam}\" \\\n\t| \\\n\tbcftools norm \\\n\t--threads ${task.cpus} \\\n\t--multiallelics - \\\n\t--fasta-ref \"${reference_genome_fasta_forConsensusIndelMpileup}\" \\\n\t- \\\n\t| \\\n\tbcftools filter \\\n\t--exclude 'FORMAT/DP == 0' \\\n\t- \\\n\t| \\\n\tgrep -E '^#|INDEL;' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\ttabix \"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\n\tbgzip < \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}\" > \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\"\n\ttabix \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\"\n\n\ttouch \"${full_indel_vcf_header}\"\n\tcat \"${indel_vcf_base_header}\" >> \"${full_indel_vcf_header}\"\n\tzgrep '##FILTER=<ID=LOWSUPPORT' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_indel_vcf_header}\"\n\tzgrep '##INFO=' \"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" >> \"${full_indel_vcf_header}\"\n\techo -e '#CHROM\\tPOS\\tID\\tREF\\tALT\\tQUAL\\tFILTER\\tINFO' >> \"${full_indel_vcf_header}\"\n\n\tbcftools isec \\\n\t--nfiles =2 \\\n\t--write 1 \\\n\t\"${consensus_somatic_indel_nosamples_badheader_noformat_vcf}.gz\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbcftools reheader \\\n\t--header \"${full_indel_vcf_header}\" \\\n\t--output \"${mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t%INFO/DP\\n' \\\n\t--output \"${indel_mpileup_info_dp_metrics}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${normal_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${indel_mpileup_normal_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${indel_mpileup_normal_format_metrics}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t%REF\\t%ALT\\t[%DP]\\t[%AD]\\t[%ADF]\\t[%ADR]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t\"${tumor_normal_sample_id}.consensus.somatic.indel.mpileup.vcf.gz\" \\\n\t| \\\n\tbgzip > \"${indel_mpileup_tumor_format_metrics}\"\n\ttabix -s1 -b2 -e2 \"${indel_mpileup_tumor_format_metrics}\"\n\t\"\"\"",
        "nb_lignes_script": 74,
        "language_script": "bash",
        "tools": [
            "BCFtools",
            "mInDel"
        ],
        "tools_url": [
            "https://bio.tools/bcftools",
            "https://bio.tools/mindel"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "mInDel",
                "uri": "https://bio.tools/mindel",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Indel discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0452",
                                    "term": "Sequence alignment analysis (indel detection)"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Next-generation variant caller specifically designed for InDel marker discovery. By taking in raw sequence reads and assembling them into contigs de novo, identifies InDel polymorphisms using a sliding window alignment from assembled contigs, rendering a unique advantage when a reference genome is unavailable.",
                "homepage": "https://github.com/lyd0527/mInDel"
            }
        ],
        "inputs": [
            "consensus_indel_vcf_forConsensusIndelMpileup",
            "bams_forConsensusIndelMpileup",
            "reference_genome_bundle_forConsensusIndelMpileup"
        ],
        "nb_inputs": 3,
        "outputs": [
            "consensus_indel_vcf_forAddSamples",
            "consensus_indel_mpileup_metrics_forAddFormat"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "addSamplesToConsensusIndelVcf_vatools": {
        "name_process": "addSamplesToConsensusIndelVcf_vatools",
        "string_process": "\nprocess addSamplesToConsensusIndelVcf_vatools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf) from consensus_indel_vcf_forAddSamples\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_indel_noformat_vcf) into consensus_indel_vcf_forAddFormat\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\tmpileup_supported_consensus_somatic_indel_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.noformat.vcf\"\n\t\"\"\"\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.halfsamples.noformat.vcf\" \\\n\t\"${mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf}\" \\\n\t\"${normal_id}\" \\\n\t.\n\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${mpileup_supported_consensus_somatic_indel_noformat_vcf}\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.halfsamples.noformat.vcf\" \\\n\t\"${tumor_id}\" \\\n\t.\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\tmpileup_supported_consensus_somatic_indel_noformat_vcf = \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.noformat.vcf\"\n\t\"\"\"\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.halfsamples.noformat.vcf\" \\\n\t\"${mpileup_supported_consensus_somatic_indel_nosamples_noformat_vcf}\" \\\n\t\"${normal_id}\" \\\n\t.\n\n\tvcf-genotype-annotator \\\n\t--output-vcf \"${mpileup_supported_consensus_somatic_indel_noformat_vcf}\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.halfsamples.noformat.vcf\" \\\n\t\"${tumor_id}\" \\\n\t.\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "consensus_indel_vcf_forAddSamples"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_indel_vcf_forAddFormat"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "annotateConsensusIndelVcfFormatColumnAndFilter_bcftools": {
        "name_process": "annotateConsensusIndelVcfFormatColumnAndFilter_bcftools",
        "string_process": "\nprocess annotateConsensusIndelVcfFormatColumnAndFilter_bcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), val(tumor_id), val(normal_id), path(mpileup_supported_consensus_somatic_indel_noformat_vcf), path(indel_mpileup_info_dp_metrics), path(indel_mpileup_normal_format_metrics), path(indel_mpileup_normal_format_metrics_index), path(indel_mpileup_tumor_format_metrics), path(indel_mpileup_tumor_format_metrics_index) from consensus_indel_vcf_forAddFormat.join(consensus_indel_mpileup_metrics_forAddFormat)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(indel_consensus_vcf), path(indel_consensus_vcf_index), path(indel_strand_metrics) into consensus_indel_forBedFilters\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\tindel_consensus_vcf_info_header = \"indel_consensus_vcf_info_header.txt\"\n\tindel_consensus_vcf_format_headers = \"indel_consensus_vcf_format_header.txt\"\n\tindel_consensus_vcf = \"${tumor_normal_sample_id}.consensus.somatic.indel.vcf.gz\"\n\tindel_consensus_vcf_index = \"${indel_consensus_vcf}.tbi\"\n\tindel_strand_metrics = \"${tumor_normal_sample_id}.indel.strand.mertrics.txt\"\n\t\"\"\"\n\tcat \"${indel_mpileup_info_dp_metrics}\" \\\n\t| \\\n\tpaste - <(zcat \"${indel_mpileup_tumor_format_metrics}\" | cut -f 6 | awk '{split(\\$0,x,\",\"); print x[2]}') > \"${tumor_normal_sample_id}.indel.mpileup.info.dp.ac.metrics.txt\"\n\n\tcat \"${tumor_normal_sample_id}.indel.mpileup.info.dp.ac.metrics.txt\" \\\n\t| \\\n\tpaste - <(zcat \"${indel_mpileup_tumor_format_metrics}\" | cut -f 5) \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$5,\\$6,\\$6/\\$7}' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\"\n\ttabix -s1 -b2 -e2 \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\"\n\n\ttouch \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total read depth across samples (normal sample DP + tumor sample DP)\">' >> \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=AC,Number=1,Type=Integer,Description=\"Count of ALT allele reads in tumor sample\">' >> \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=VAF,Number=1,Type=Float,Description=\"Variant allele frequency, expressed as fraction of ALT allele reads in total read depth in tumor sample (tumor sample ALT AC / tumor sample DP)\">' >> \"${indel_consensus_vcf_info_header}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--annotations \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\" \\\n\t--header-lines \"${indel_consensus_vcf_info_header}\" \\\n\t--columns CHROM,POS,REF,ALT,INFO/DP,INFO/AC,INFO/VAF \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.noformat.vcf.gz\" \\\n\t\"${mpileup_supported_consensus_somatic_indel_noformat_vcf}\"\n\n\ttouch \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=DPS,Number=1,Type=Integer,Description=\"Total read depth in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACFS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on forward(+) strand in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACRS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on reverse(-) strand in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${normal_id}\" \\\n\t--annotations \"${indel_mpileup_normal_format_metrics}\" \\\n\t--header-lines \"${indel_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.halfformat.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.noformat.vcf.gz\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${tumor_id}\" \\\n\t--annotations \"${indel_mpileup_tumor_format_metrics}\" \\\n\t--header-lines \"${indel_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--remove FORMAT/GT \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.format.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.halfformat.vcf.gz\"\n\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'INFO/AC<3 | INFO/VAF<0.01' \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.format.vcf.gz\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'FILTER=\"LOWSUPPORT\"' - \\\n\t| \\\n\tgrep -v '##bcftools_annotate' \\\n\t| \\\n\tbgzip > \"${indel_consensus_vcf}\"\n\ttabix \"${indel_consensus_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t[%ACFS]\\t[%ACRS]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t--output \"${indel_strand_metrics}\" \\\n\t\"${indel_consensus_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 90,
        "string_script": "\tindel_consensus_vcf_info_header = \"indel_consensus_vcf_info_header.txt\"\n\tindel_consensus_vcf_format_headers = \"indel_consensus_vcf_format_header.txt\"\n\tindel_consensus_vcf = \"${tumor_normal_sample_id}.consensus.somatic.indel.vcf.gz\"\n\tindel_consensus_vcf_index = \"${indel_consensus_vcf}.tbi\"\n\tindel_strand_metrics = \"${tumor_normal_sample_id}.indel.strand.mertrics.txt\"\n\t\"\"\"\n\tcat \"${indel_mpileup_info_dp_metrics}\" \\\n\t| \\\n\tpaste - <(zcat \"${indel_mpileup_tumor_format_metrics}\" | cut -f 6 | awk '{split(\\$0,x,\",\"); print x[2]}') > \"${tumor_normal_sample_id}.indel.mpileup.info.dp.ac.metrics.txt\"\n\n\tcat \"${tumor_normal_sample_id}.indel.mpileup.info.dp.ac.metrics.txt\" \\\n\t| \\\n\tpaste - <(zcat \"${indel_mpileup_tumor_format_metrics}\" | cut -f 5) \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$5,\\$6,\\$6/\\$7}' \\\n\t| \\\n\tbgzip > \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\"\n\ttabix -s1 -b2 -e2 \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\"\n\n\ttouch \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Total read depth across samples (normal sample DP + tumor sample DP)\">' >> \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=AC,Number=1,Type=Integer,Description=\"Count of ALT allele reads in tumor sample\">' >> \"${indel_consensus_vcf_info_header}\"\n\techo '##INFO=<ID=VAF,Number=1,Type=Float,Description=\"Variant allele frequency, expressed as fraction of ALT allele reads in total read depth in tumor sample (tumor sample ALT AC / tumor sample DP)\">' >> \"${indel_consensus_vcf_info_header}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--annotations \"${tumor_normal_sample_id}.indel.mpileup.info.metrics.txt.gz\" \\\n\t--header-lines \"${indel_consensus_vcf_info_header}\" \\\n\t--columns CHROM,POS,REF,ALT,INFO/DP,INFO/AC,INFO/VAF \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.noformat.vcf.gz\" \\\n\t\"${mpileup_supported_consensus_somatic_indel_noformat_vcf}\"\n\n\ttouch \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=DPS,Number=1,Type=Integer,Description=\"Total read depth in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACFS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on forward(+) strand in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\techo '##FORMAT=<ID=ACRS,Number=R,Type=Integer,Description=\"Count of REF,ALT allele reads on reverse(-) strand in sample\">' >> \"${indel_consensus_vcf_format_headers}\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${normal_id}\" \\\n\t--annotations \"${indel_mpileup_normal_format_metrics}\" \\\n\t--header-lines \"${indel_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.halfformat.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.noformat.vcf.gz\"\n\n\tbcftools annotate \\\n\t--output-type z \\\n\t--samples \"${tumor_id}\" \\\n\t--annotations \"${indel_mpileup_tumor_format_metrics}\" \\\n\t--header-lines \"${indel_consensus_vcf_format_headers}\" \\\n\t--columns CHROM,POS,REF,ALT,FORMAT/DPS,FORMAT/ACS,FORMAT/ACFS,FORMAT/ACRS \\\n\t--remove FORMAT/GT \\\n\t--output \"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.format.vcf.gz\" \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.halfformat.vcf.gz\"\n\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'INFO/AC<3 | INFO/VAF<0.01' \\\n\t\"${tumor_normal_sample_id}.ms.consensus.somatic.indel.info.format.vcf.gz\" \\\n\t| \\\n\tbcftools filter \\\n\t--output-type v \\\n\t--exclude 'FILTER=\"LOWSUPPORT\"' - \\\n\t| \\\n\tgrep -v '##bcftools_annotate' \\\n\t| \\\n\tbgzip > \"${indel_consensus_vcf}\"\n\ttabix \"${indel_consensus_vcf}\"\n\n\tbcftools query \\\n\t--format '%CHROM\\t%POS\\t[%ACFS]\\t[%ACRS]\\n' \\\n\t--samples \"${tumor_id}\" \\\n\t--output \"${indel_strand_metrics}\" \\\n\t\"${indel_consensus_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 76,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "consensus_indel_vcf_forAddFormat",
            "consensus_indel_mpileup_metrics_forAddFormat"
        ],
        "nb_inputs": 2,
        "outputs": [
            "consensus_indel_forBedFilters"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "repeatsAndStrandBiasFilterIndels_vcftools": {
        "name_process": "repeatsAndStrandBiasFilterIndels_vcftools",
        "string_process": "\nprocess repeatsAndStrandBiasFilterIndels_vcftools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(indel_consensus_vcf), path(indel_consensus_vcf_index), path(indel_strand_metrics), path(simple_and_centromeric_repeats_bed) from consensus_indel_forBedFilters.combine(simple_and_centromeric_repeats_bed_forIndelBedFilter)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(hq_indel_consensus_vcf), path(hq_indel_consensus_vcf_index) into high_quality_consensus_indel_forAnnotation\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\tstrand_bias_filter_bed = \"${tumor_normal_sample_id}.indel.strandbias.bed\"\n\thq_indel_consensus_vcf = \"${tumor_normal_sample_id}.hq.consensus.somatic.indel.vcf.gz\"\n\thq_indel_consensus_vcf_index = \"${hq_indel_consensus_vcf}.tbi\"\n\t\"\"\"\n\tRscript --vanilla  \\\n\t${workflow.projectDir}/bin/strand_bias_proportion_tester.R \\\n\t\"${indel_strand_metrics}\" \\\n\t\"${strand_bias_filter_bed}\"\n\n\tvcftools \\\n\t--gzvcf \"${indel_consensus_vcf}\" \\\n\t--exclude-bed \"${strand_bias_filter_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tvcftools \\\n\t--vcf - \\\n\t--exclude-bed \"${simple_and_centromeric_repeats_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tbgzip > \"${hq_indel_consensus_vcf}\"\n\n\ttabix \"${hq_indel_consensus_vcf}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\tstrand_bias_filter_bed = \"${tumor_normal_sample_id}.indel.strandbias.bed\"\n\thq_indel_consensus_vcf = \"${tumor_normal_sample_id}.hq.consensus.somatic.indel.vcf.gz\"\n\thq_indel_consensus_vcf_index = \"${hq_indel_consensus_vcf}.tbi\"\n\t\"\"\"\n\tRscript --vanilla  \\\n\t${workflow.projectDir}/bin/strand_bias_proportion_tester.R \\\n\t\"${indel_strand_metrics}\" \\\n\t\"${strand_bias_filter_bed}\"\n\n\tvcftools \\\n\t--gzvcf \"${indel_consensus_vcf}\" \\\n\t--exclude-bed \"${strand_bias_filter_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tvcftools \\\n\t--vcf - \\\n\t--exclude-bed \"${simple_and_centromeric_repeats_bed}\" \\\n\t--recode \\\n\t--recode-INFO-all \\\n\t--stdout \\\n\t| \\\n\tbgzip > \"${hq_indel_consensus_vcf}\"\n\n\ttabix \"${hq_indel_consensus_vcf}\"\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "VCFtools"
        ],
        "tools_url": [
            "https://bio.tools/vcftools"
        ],
        "tools_dico": [
            {
                "name": "VCFtools",
                "uri": "https://bio.tools/vcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3675",
                                    "term": "Variant filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provide easily accessible methods for working with complex genetic variation data in the form of VCF files.",
                "homepage": "https://vcftools.github.io/index.html"
            }
        ],
        "inputs": [
            "consensus_indel_forBedFilters",
            "simple_and_centromeric_repeats_bed_forIndelBedFilter"
        ],
        "nb_inputs": 2,
        "outputs": [
            "high_quality_consensus_indel_forAnnotation"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "mergeAndGenerateConsensusCnvCalls_bedtools": {
        "name_process": "mergeAndGenerateConsensusCnvCalls_bedtools",
        "string_process": "\nprocess mergeAndGenerateConsensusCnvCalls_bedtools {\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(ascat_cnv_profile_final), path(control_freec_bedgraph), path(control_freec_cnv_profile_final), path(sclust_allelic_states_file), path(reference_genome_fasta_index_forConsensusCnv) from final_ascat_cnv_profile_forConsensus.join(final_control_freec_cnv_profile_forConsensus).join(final_sclust_cnv_profile_forConsensus).combine(reference_genome_fasta_index_forConsensusCnv)\n\n\toutput:\n\ttuple val(tumor_normal_sample_id), path(consensus_merged_cnv_alleles_bed) into consensus_cnv_and_allele_bed_forConsensusCnvTransform\n\n\twhen:\n\tparams.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"\n\n\tscript:\n\tascat_somatic_cnv_bed = \"${tumor_normal_sample_id}.ascat.somatic.cnv.bed\"\n\tascat_somatic_alleles_bed = \"${tumor_normal_sample_id}.ascat.somatic.alleles.bed\"\n\tcontrol_freec_somatic_cnv_bed = \"${tumor_normal_sample_id}.controlfreec.somatic.cnv.bed\"\n\tcontrol_freec_somatic_alleles_bed = \"${tumor_normal_sample_id}.controlfreec.somatic.alleles.bed\"\n\tsclust_somatic_cnv_bed = \"${tumor_normal_sample_id}.sclust.somatic.cnv.bed\"\n\tsclust_somatic_alleles_bed = \"${tumor_normal_sample_id}.sclust.somatic.alleles.bed\"\n\tmerged_cnv_bed = \"${tumor_normal_sample_id}.merged.somatic.cnv.bed\"\n\tmerged_alleles_bed = \"${tumor_normal_sample_id}.merged.somatic.alleles.bed\"\n\tconsensus_cnv_bed = \"${tumor_normal_sample_id}.consensus.somatic.cnv.bed\"\n\tconsensus_alleles_bed = \"${tumor_normal_sample_id}.consensus.somatic.alleles.bed\"\n\tconsensus_merged_cnv_alleles_bed = \"${tumor_normal_sample_id}.consensus.somatic.cnv.alleles.merged.bed\"\n\t\"\"\"\n\t### Prep ASCAT files ###\n\t# total copy number per segment\n\tgrep -v 'segment_number' \"${ascat_cnv_profile_final}\" \\\n\t| \\\n\tawk -F, 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7}' > \"${ascat_somatic_cnv_bed}\"\n\n\t# major/minor alleles per segment\n\tgrep -v 'segment_number' \"${ascat_cnv_profile_final}\" \\\n\t| \\\n\tawk -F, 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7-\\$8\"/\"\\$8}' > \"${ascat_somatic_alleles_bed}\"\n\n\n\t### Prep Control-FREEC files ###\n\tcontrol_freec_cnv_and_allele_preparer.sh \\\n\t\"${tumor_normal_sample_id}\" \\\n\t\"${control_freec_cnv_profile_final}\" \\\n\t\"${control_freec_bedgraph}\" \\\n\t\"${reference_genome_fasta_index_forConsensusCnv}\"\n\n\tcontrol_freec_segment_refiner.py \\\n\t\"${tumor_normal_sample_id}.controlfreec.complete.cnv.alleles.merged.bed\" \\\n\t\"${control_freec_somatic_alleles_bed}\" \\\n\t\"${control_freec_somatic_cnv_bed}\"\n\n\n\t### Prep Sclust files ###\n\t# total copy number per segment\n\tgrep -v 'Sample' \"${sclust_allelic_states_file}\" \\\n\t| \\\n\tcut -f 2-4,6 > \"${sclust_somatic_cnv_bed}\"\n\n\t# major/minor alleles per segment\n\tgrep -v 'Sample' \"${sclust_allelic_states_file}\" \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7\"/\"\\$8}' > \"${sclust_somatic_alleles_bed}\"\n\n\n\t### Create consensus total copy number file ###\n\tbedtools unionbedg \\\n\t-filler . \\\n\t-i \"${ascat_somatic_cnv_bed}\" \"${control_freec_somatic_cnv_bed}\" \"${sclust_somatic_cnv_bed}\" \\\n\t-header \\\n\t-names ascat_total_cn controlfreec_total_cn sclust_total_cn > \"${merged_cnv_bed}\"\n\n\tconsensus_cnv_generator.py \\\n\t<(grep -v 'chrom' \"${merged_cnv_bed}\") \\\n\t\"${consensus_cnv_bed}\"\n\n\n\t### Create consensus major and minor allele file ###\n\tbedtools unionbedg \\\n\t-filler . \\\n\t-i \"${ascat_somatic_alleles_bed}\" \"${control_freec_somatic_alleles_bed}\" \"${sclust_somatic_alleles_bed}\" \\\n\t-header \\\n\t-names ascat_major_minor_alleles controlfreec_major_minor_alleles sclust_major_minor_alleles > \"${merged_alleles_bed}\"\n\n\tconsensus_allele_generator.py \\\n\t<(grep -v 'chrom' \"${merged_alleles_bed}\") \\\n\t\"${consensus_alleles_bed}\"\n\n\n\t### Merge both consensus CNV and called alleles per segment ###\n\tpaste \"${consensus_cnv_bed}\" <(cut -f 4-9 \"${consensus_alleles_bed}\") \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$9,\\$10,\\$5,\\$11,\\$6,\\$12,\\$7,\\$13,\\$8,\\$14}' > \"${consensus_merged_cnv_alleles_bed}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 91,
        "string_script": "\tascat_somatic_cnv_bed = \"${tumor_normal_sample_id}.ascat.somatic.cnv.bed\"\n\tascat_somatic_alleles_bed = \"${tumor_normal_sample_id}.ascat.somatic.alleles.bed\"\n\tcontrol_freec_somatic_cnv_bed = \"${tumor_normal_sample_id}.controlfreec.somatic.cnv.bed\"\n\tcontrol_freec_somatic_alleles_bed = \"${tumor_normal_sample_id}.controlfreec.somatic.alleles.bed\"\n\tsclust_somatic_cnv_bed = \"${tumor_normal_sample_id}.sclust.somatic.cnv.bed\"\n\tsclust_somatic_alleles_bed = \"${tumor_normal_sample_id}.sclust.somatic.alleles.bed\"\n\tmerged_cnv_bed = \"${tumor_normal_sample_id}.merged.somatic.cnv.bed\"\n\tmerged_alleles_bed = \"${tumor_normal_sample_id}.merged.somatic.alleles.bed\"\n\tconsensus_cnv_bed = \"${tumor_normal_sample_id}.consensus.somatic.cnv.bed\"\n\tconsensus_alleles_bed = \"${tumor_normal_sample_id}.consensus.somatic.alleles.bed\"\n\tconsensus_merged_cnv_alleles_bed = \"${tumor_normal_sample_id}.consensus.somatic.cnv.alleles.merged.bed\"\n\t\"\"\"\n\t### Prep ASCAT files ###\n\t# total copy number per segment\n\tgrep -v 'segment_number' \"${ascat_cnv_profile_final}\" \\\n\t| \\\n\tawk -F, 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7}' > \"${ascat_somatic_cnv_bed}\"\n\n\t# major/minor alleles per segment\n\tgrep -v 'segment_number' \"${ascat_cnv_profile_final}\" \\\n\t| \\\n\tawk -F, 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7-\\$8\"/\"\\$8}' > \"${ascat_somatic_alleles_bed}\"\n\n\n\t### Prep Control-FREEC files ###\n\tcontrol_freec_cnv_and_allele_preparer.sh \\\n\t\"${tumor_normal_sample_id}\" \\\n\t\"${control_freec_cnv_profile_final}\" \\\n\t\"${control_freec_bedgraph}\" \\\n\t\"${reference_genome_fasta_index_forConsensusCnv}\"\n\n\tcontrol_freec_segment_refiner.py \\\n\t\"${tumor_normal_sample_id}.controlfreec.complete.cnv.alleles.merged.bed\" \\\n\t\"${control_freec_somatic_alleles_bed}\" \\\n\t\"${control_freec_somatic_cnv_bed}\"\n\n\n\t### Prep Sclust files ###\n\t# total copy number per segment\n\tgrep -v 'Sample' \"${sclust_allelic_states_file}\" \\\n\t| \\\n\tcut -f 2-4,6 > \"${sclust_somatic_cnv_bed}\"\n\n\t# major/minor alleles per segment\n\tgrep -v 'Sample' \"${sclust_allelic_states_file}\" \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$2,\\$3,\\$4,\\$7\"/\"\\$8}' > \"${sclust_somatic_alleles_bed}\"\n\n\n\t### Create consensus total copy number file ###\n\tbedtools unionbedg \\\n\t-filler . \\\n\t-i \"${ascat_somatic_cnv_bed}\" \"${control_freec_somatic_cnv_bed}\" \"${sclust_somatic_cnv_bed}\" \\\n\t-header \\\n\t-names ascat_total_cn controlfreec_total_cn sclust_total_cn > \"${merged_cnv_bed}\"\n\n\tconsensus_cnv_generator.py \\\n\t<(grep -v 'chrom' \"${merged_cnv_bed}\") \\\n\t\"${consensus_cnv_bed}\"\n\n\n\t### Create consensus major and minor allele file ###\n\tbedtools unionbedg \\\n\t-filler . \\\n\t-i \"${ascat_somatic_alleles_bed}\" \"${control_freec_somatic_alleles_bed}\" \"${sclust_somatic_alleles_bed}\" \\\n\t-header \\\n\t-names ascat_major_minor_alleles controlfreec_major_minor_alleles sclust_major_minor_alleles > \"${merged_alleles_bed}\"\n\n\tconsensus_allele_generator.py \\\n\t<(grep -v 'chrom' \"${merged_alleles_bed}\") \\\n\t\"${consensus_alleles_bed}\"\n\n\n\t### Merge both consensus CNV and called alleles per segment ###\n\tpaste \"${consensus_cnv_bed}\" <(cut -f 4-9 \"${consensus_alleles_bed}\") \\\n\t| \\\n\tawk 'BEGIN {OFS=\"\\t\"} {print \\$1,\\$2,\\$3,\\$4,\\$9,\\$10,\\$5,\\$11,\\$6,\\$12,\\$7,\\$13,\\$8,\\$14}' > \"${consensus_merged_cnv_alleles_bed}\"\n\t\"\"\"",
        "nb_lignes_script": 77,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "final_ascat_cnv_profile_forConsensus",
            "final_control_freec_cnv_profile_forConsensus",
            "final_sclust_cnv_profile_forConsensus",
            "reference_genome_fasta_index_forConsensusCnv"
        ],
        "nb_inputs": 4,
        "outputs": [
            "consensus_cnv_and_allele_bed_forConsensusCnvTransform"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"",
        "stub": ""
    },
    "highQualityTransformConsensusCnvs_tidyverse": {
        "name_process": "highQualityTransformConsensusCnvs_tidyverse",
        "string_process": "\nprocess highQualityTransformConsensusCnvs_tidyverse {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(consensus_merged_cnv_alleles_bed), path(sample_sex) from consensus_cnv_and_allele_bed_forConsensusCnvTransform.join(sex_of_sample_forConsensusCnvTransform)\n\n    output:\n    tuple val(tumor_normal_sample_id), path(hq_consensus_cnv_bed) into hq_consensus_cnv_bed_forAnnotation\n\n    when:\n    params.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"\n\n    script:\n    hq_consensus_cnv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.bed\"\n    \"\"\"\n    sex=\\$(cut -d ' ' -f 1 \"${sample_sex}\")\n\n    Rscript --vanilla  \\\n\t${workflow.projectDir}/bin/high_quality_cnv_bed_transformer.R \\\n    \"${consensus_merged_cnv_alleles_bed}\" \\\n    \\${sex} \\\n    \"${hq_consensus_cnv_bed}\"\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    hq_consensus_cnv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.bed\"\n    \"\"\"\n    sex=\\$(cut -d ' ' -f 1 \"${sample_sex}\")\n\n    Rscript --vanilla  \\\n\t${workflow.projectDir}/bin/high_quality_cnv_bed_transformer.R \\\n    \"${consensus_merged_cnv_alleles_bed}\" \\\n    \\${sex} \\\n    \"${hq_consensus_cnv_bed}\"\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "consensus_cnv_and_allele_bed_forConsensusCnvTransform",
            "sex_of_sample_forConsensusCnvTransform"
        ],
        "nb_inputs": 2,
        "outputs": [
            "hq_consensus_cnv_bed_forAnnotation"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"",
        "stub": ""
    },
    "downloadAnnotsvAnnotationReferences_annotsv": {
        "name_process": "downloadAnnotsvAnnotationReferences_annotsv",
        "string_process": "\nprocess downloadAnnotsvAnnotationReferences_annotsv {\n    publishDir \"references/hg38\", mode: 'copy'\n\n    output:\n    path cached_ref_dir_annotsv into annotsv_ref_dir_from_process_forSvAnnotation, annotsv_ref_dir_from_process_forCnvAnnotation\n\n    when:\n    params.annotsv_ref_cached == \"no\"\n\n    script:\n    cached_ref_dir_annotsv = \"annotations_human_annotsv_hg38\"\n    \"\"\"\n    mkdir -p \"${cached_ref_dir_annotsv}\" && \\\n    cd \"${cached_ref_dir_annotsv}\" && \\\n    curl -C - -LO https://www.lbgi.fr/~geoffroy/Annotations/Annotations_Human_3.1.1.tar.gz && \\\n    tar -zxf Annotations_Human_3.1.1.tar.gz && \\\n    rm Annotations_Human_3.1.1.tar.gz\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    cached_ref_dir_annotsv = \"annotations_human_annotsv_hg38\"\n    \"\"\"\n    mkdir -p \"${cached_ref_dir_annotsv}\" && \\\n    cd \"${cached_ref_dir_annotsv}\" && \\\n    curl -C - -LO https://www.lbgi.fr/~geoffroy/Annotations/Annotations_Human_3.1.1.tar.gz && \\\n    tar -zxf Annotations_Human_3.1.1.tar.gz && \\\n    rm Annotations_Human_3.1.1.tar.gz\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "annotsv_ref_dir_from_process_forSvAnnotation",
            "annotsv_ref_dir_from_process_forCnvAnnotation"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"references/hg38\", mode: 'copy'"
        ],
        "when": "params.annotsv_ref_cached == \"no\"",
        "stub": ""
    },
    "annotateConsensusCnvCalls_annotsv": {
        "name_process": "annotateConsensusCnvCalls_annotsv",
        "string_process": "\nprocess annotateConsensusCnvCalls_annotsv {\n    publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{bed}'\n    tag  \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(hq_consensus_cnv_bed), path(annotsv_ref_dir_bundle) from hq_consensus_cnv_bed_forAnnotation.combine(annotsv_ref_dir_forCnvAnnotation)\n\n    output:\n    path hq_consensus_cnv_annotated_bed\n\n    when:\n    params.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"\n\n    script:\n    hq_consensus_cnv_annotated_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated.bed\"\n    \"\"\"\n    \\$ANNOTSV/bin/AnnotSV \\\n    -annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n    -annotationMode full \\\n    -genomeBuild GRCh38 \\\n    -outputDir . \\\n    -outputFile \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated\" \\\n    -SVinputFile \"${hq_consensus_cnv_bed}\" \\\n    -SVminSize 1 \\\n    -includeCI 0 \\\n    -tx ENSEMBL\n\n    touch \"${hq_consensus_cnv_annotated_bed}\"\n    echo \"chr\\tstart\\tend\\tconsensus_total_cn\\tconsensus_major_allele\\tconsensus_minor_allele\\ttype\\tclass\\tallele_status\\tconsensus_conf_rating\\tcytoband\\tgenes\" >> \"${hq_consensus_cnv_annotated_bed}\"\n    grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated.tsv\" \\\n    | \\\n    awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$2,\\$3,\\$4,\\$5,\\$6,\\$7,\\$8,\\$9,\\$10,\\$11,\\$13,\\$14}' \\\n    | \\\n    sort -k1,1V -k2,2n >> \"${hq_consensus_cnv_annotated_bed}\"\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    hq_consensus_cnv_annotated_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated.bed\"\n    \"\"\"\n    \\$ANNOTSV/bin/AnnotSV \\\n    -annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n    -annotationMode full \\\n    -genomeBuild GRCh38 \\\n    -outputDir . \\\n    -outputFile \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated\" \\\n    -SVinputFile \"${hq_consensus_cnv_bed}\" \\\n    -SVminSize 1 \\\n    -includeCI 0 \\\n    -tx ENSEMBL\n\n    touch \"${hq_consensus_cnv_annotated_bed}\"\n    echo \"chr\\tstart\\tend\\tconsensus_total_cn\\tconsensus_major_allele\\tconsensus_minor_allele\\ttype\\tclass\\tallele_status\\tconsensus_conf_rating\\tcytoband\\tgenes\" >> \"${hq_consensus_cnv_annotated_bed}\"\n    grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.cnv.annotated.tsv\" \\\n    | \\\n    awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$2,\\$3,\\$4,\\$5,\\$6,\\$7,\\$8,\\$9,\\$10,\\$11,\\$13,\\$14}' \\\n    | \\\n    sort -k1,1V -k2,2n >> \"${hq_consensus_cnv_annotated_bed}\"\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "AnnotSV"
        ],
        "tools_url": [
            "https://bio.tools/AnnotSV"
        ],
        "tools_dico": [
            {
                "name": "AnnotSV",
                "uri": "https://bio.tools/AnnotSV",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0226",
                                    "term": "Annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrated tool for annotation and ranking of structural variations.",
                "homepage": "https://lbgi.fr/AnnotSV/"
            }
        ],
        "inputs": [
            "hq_consensus_cnv_bed_forAnnotation",
            "annotsv_ref_dir_forCnvAnnotation"
        ],
        "nb_inputs": 2,
        "outputs": [
            "hq_consensus_cnv_annotated_bed"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{bed}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.ascatngs == \"on\" & params.controlfreec == \"on\" & params.sclust == \"on\"",
        "stub": ""
    },
    "mergeSubclonalCnvCalls": {
        "name_process": "mergeSubclonalCnvCalls",
        "string_process": "\nprocess mergeSubclonalCnvCalls {\n\tpublishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(control_freec_subclones_file), path(sclust_subclones_file) from control_freec_subclones_forConsensusSubclones.join(sclust_subclones_forConsensusSubclones)\n\n\toutput:\n\tpath consensus_subclonal_cnv_file\n\n\twhen:\n\tparams.controlfreec == \"on\" && params.sclust == \"on\"\n\n\tscript:\n\tconsensus_subclonal_cnv_file = \"${tumor_normal_sample_id}.consensus.somatic.cnv.subclonal.txt\"\n\t\"\"\"\n\ttouch \"${consensus_subclonal_cnv_file}\"\n\n\techo \"### Control-FREEC ###\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\tcat \"${control_freec_subclones_file}\" >> \"${consensus_subclonal_cnv_file}\"\n\n\techo \"### Sclust ###\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\tcut -f 2-11 \"${sclust_subclones_file}\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\tconsensus_subclonal_cnv_file = \"${tumor_normal_sample_id}.consensus.somatic.cnv.subclonal.txt\"\n\t\"\"\"\n\ttouch \"${consensus_subclonal_cnv_file}\"\n\n\techo \"### Control-FREEC ###\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\tcat \"${control_freec_subclones_file}\" >> \"${consensus_subclonal_cnv_file}\"\n\n\techo \"### Sclust ###\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\tcut -f 2-11 \"${sclust_subclones_file}\" >> \"${consensus_subclonal_cnv_file}\"\n\techo \"\" >> \"${consensus_subclonal_cnv_file}\"\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "control_freec_subclones_forConsensusSubclones",
            "sclust_subclones_forConsensusSubclones"
        ],
        "nb_inputs": 2,
        "outputs": [
            "consensus_subclonal_cnv_file"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.controlfreec == \"on\" && params.sclust == \"on\"",
        "stub": ""
    },
    "mergeAndGenerateConsensusSvCalls_survivor": {
        "name_process": "mergeAndGenerateConsensusSvCalls_survivor",
        "string_process": "\nprocess mergeAndGenerateConsensusSvCalls_survivor {\n    tag  \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(final_manta_somatic_sv_vcf), path(final_svaba_somatic_sv_vcf), path(final_delly_somatic_sv_vcf) from manta_sv_vcf_forSurvivor.join(svaba_sv_vcf_forSurvivor, by: [0,1]).join(delly_sv_vcf_forSurvivor, by: [0,1]) \n\n    output:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(consensus_somatic_sv_badheader_vcf) into consensus_sv_vcf_forFilterPrep\n\n    when:\n    params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"\n\n    script:\n    consensus_somatic_sv_badheader_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.badheader.vcf\"\n    \"\"\"\n    touch input_vcf_list.txt\n    ls *.vcf >> input_vcf_list.txt\n\n    SURVIVOR merge \\\n    input_vcf_list.txt \\\n    1000 \\\n    1 \\\n    0 \\\n    1 \\\n    0 \\\n    51 \\\n    \"${consensus_somatic_sv_badheader_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    consensus_somatic_sv_badheader_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.badheader.vcf\"\n    \"\"\"\n    touch input_vcf_list.txt\n    ls *.vcf >> input_vcf_list.txt\n\n    SURVIVOR merge \\\n    input_vcf_list.txt \\\n    1000 \\\n    1 \\\n    0 \\\n    1 \\\n    0 \\\n    51 \\\n    \"${consensus_somatic_sv_badheader_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "manta_sv_vcf_forSurvivor"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_sv_vcf_forFilterPrep"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"",
        "stub": ""
    },
    "prepConsensusSvVcfForFpFiltering_vatools": {
        "name_process": "prepConsensusSvVcfForFpFiltering_vatools",
        "string_process": "\nprocess prepConsensusSvVcfForFpFiltering_vatools {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), val(tumor_id), path(consensus_somatic_sv_badheader_vcf) from consensus_sv_vcf_forFilterPrep\n\n    output:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_vcf) into consensus_sv_vcf_forConsensusSvFpFilter\n\n    when:\n    params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"\n\n    script:\n    consensus_somatic_sv_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.vcf\"\n    \"\"\"\n    sed 's|${tumor_id}\\t${tumor_id}_1\\t${tumor_id}_2|${tumor_id}_delly\\t${tumor_id}_manta\\t${tumor_id}_svaba|' \"${tumor_normal_sample_id}.consensus.somatic.sv.badheader.vcf\" \\\n    | \\\n    sed 's|SVTYPE=TRA|SVTYPE=BND|' > \"${tumor_normal_sample_id}.consensus.somatic.sv.halffixed.vcf\"\n\n    vcf-genotype-annotator \\\n    --output-vcf \"${consensus_somatic_sv_vcf}\" \\\n    \"${tumor_normal_sample_id}.consensus.somatic.sv.halffixed.vcf\" \\\n    \"${tumor_id}\" \\\n    .\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    consensus_somatic_sv_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.vcf\"\n    \"\"\"\n    sed 's|${tumor_id}\\t${tumor_id}_1\\t${tumor_id}_2|${tumor_id}_delly\\t${tumor_id}_manta\\t${tumor_id}_svaba|' \"${tumor_normal_sample_id}.consensus.somatic.sv.badheader.vcf\" \\\n    | \\\n    sed 's|SVTYPE=TRA|SVTYPE=BND|' > \"${tumor_normal_sample_id}.consensus.somatic.sv.halffixed.vcf\"\n\n    vcf-genotype-annotator \\\n    --output-vcf \"${consensus_somatic_sv_vcf}\" \\\n    \"${tumor_normal_sample_id}.consensus.somatic.sv.halffixed.vcf\" \\\n    \"${tumor_id}\" \\\n    .\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "consensus_sv_vcf_forFilterPrep"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_sv_vcf_forConsensusSvFpFilter"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"",
        "stub": ""
    },
    "falsePostiveSvFiltering_duphold": {
        "name_process": "falsePostiveSvFiltering_duphold",
        "string_process": "\nprocess falsePostiveSvFiltering_duphold {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_vcf), path(tumor_bam), path(tumor_bam_index), path(reference_genome_fasta_forConsensusSvFpFilter), path(reference_genome_fasta_index_forConsensusSvFpFilter) from consensus_sv_vcf_forConsensusSvFpFilter.join(bam_forConsensusSvFpFilter).combine(reference_genome_bundle_forConsensusSvFpFilter)\n\n    output:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_fpmarked_vcf) into consensus_sv_vcf_forFpFiltering\n\n    when:\n    params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"\n\n    script:\n    consensus_somatic_sv_fpmarked_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.fpmarked.vcf\"\n    \"\"\"\n    duphold \\\n    --vcf \"${consensus_somatic_sv_vcf}\" \\\n    --bam \"${tumor_bam}\" \\\n    --fasta \"${reference_genome_fasta_forConsensusSvFpFilter}\" \\\n    --threads ${task.cpus} \\\n    --output \"${consensus_somatic_sv_fpmarked_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    consensus_somatic_sv_fpmarked_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.fpmarked.vcf\"\n    \"\"\"\n    duphold \\\n    --vcf \"${consensus_somatic_sv_vcf}\" \\\n    --bam \"${tumor_bam}\" \\\n    --fasta \"${reference_genome_fasta_forConsensusSvFpFilter}\" \\\n    --threads ${task.cpus} \\\n    --output \"${consensus_somatic_sv_fpmarked_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "consensus_sv_vcf_forConsensusSvFpFilter",
            "bam_forConsensusSvFpFilter",
            "reference_genome_bundle_forConsensusSvFpFilter"
        ],
        "nb_inputs": 3,
        "outputs": [
            "consensus_sv_vcf_forFpFiltering"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"",
        "stub": ""
    },
    "extractFpFilterPassingSvCalls_bcftools": {
        "name_process": "extractFpFilterPassingSvCalls_bcftools",
        "string_process": "\nprocess extractFpFilterPassingSvCalls_bcftools {\n    tag \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_fpmarked_vcf) from consensus_sv_vcf_forFpFiltering\n\n    output:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_fpfiltered_vcf) into consensus_sv_vcf_forAnnotation\n\n    when:\n    params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"\n\n    script:\n    consensus_somatic_sv_fpfiltered_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.fpfiltered.vcf\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'INFO/SVTYPE=\"DEL\" && FORMAT/DHFFC>0.7' \\\n    \"${consensus_somatic_sv_fpmarked_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'INFO/SVTYPE=\"DUP\" && FORMAT/DHBFC<1.3' \\\n    --output \"${consensus_somatic_sv_fpfiltered_vcf}\"\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    consensus_somatic_sv_fpfiltered_vcf = \"${tumor_normal_sample_id}.consensus.somatic.sv.fpfiltered.vcf\"\n    \"\"\"\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'INFO/SVTYPE=\"DEL\" && FORMAT/DHFFC>0.7' \\\n    \"${consensus_somatic_sv_fpmarked_vcf}\" \\\n    | \\\n    bcftools filter \\\n    --output-type v \\\n    --exclude 'INFO/SVTYPE=\"DUP\" && FORMAT/DHBFC<1.3' \\\n    --output \"${consensus_somatic_sv_fpfiltered_vcf}\"\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BCFtools"
        ],
        "tools_url": [
            "https://bio.tools/bcftools"
        ],
        "tools_dico": [
            {
                "name": "BCFtools",
                "uri": "https://bio.tools/bcftools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            }
                        ]
                    }
                ],
                "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "consensus_sv_vcf_forFpFiltering"
        ],
        "nb_inputs": 1,
        "outputs": [
            "consensus_sv_vcf_forAnnotation"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"",
        "stub": ""
    },
    "annotateConsensusSvCalls_annotsv": {
        "name_process": "annotateConsensusSvCalls_annotsv",
        "string_process": "\nprocess annotateConsensusSvCalls_annotsv {\n    publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{sv.annotated.genesplit.bed,bedpe}'\n    tag  \"${tumor_normal_sample_id}\"\n\n    input:\n    tuple val(tumor_normal_sample_id), path(consensus_somatic_sv_fpfiltered_vcf), path(final_manta_somatic_sv_read_support), path(final_svaba_somatic_sv_read_support), path(final_delly_somatic_sv_read_support), path(annotsv_ref_dir_bundle) from consensus_sv_vcf_forAnnotation.join(manta_sv_read_support_forAnnotation).join(svaba_sv_read_support_forAnnotation).join(delly_sv_read_support_forAnnotation).combine(annotsv_ref_dir_forSvAnnotation)\n\n    output:\n    path gene_split_annotated_consensus_sv_bed\n    path hq_consensus_sv_bedpe\n\n    when:\n    params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"\n\n    script:\n    gene_split_annotated_consensus_sv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.genesplit.bed\"\n    collapsed_annotated_consensus_sv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.collapsed.bed\"\n    hq_consensus_sv_bedpe = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.bedpe\"\n    \"\"\"\n    grep -v 'SVTYPE=BND' \"${consensus_somatic_sv_fpfiltered_vcf}\" > \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode split \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n    paste \\\n\t<(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n\t<(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \\$1-1,\\$2}') \\\n\t<(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 1 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 21,23-36,64-65 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\$|\\t.|') \\\n\t<(cut -f 44-45,48-49,52-63 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | sed 's|^\\t|.\\t|' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n\t| \\\n\tsed 's|\\t\\$|\\t.|' \\\n\t| \\\n\tsed 's|chrSV_chrom\\t-1|SV_chrom\\tSV_start|' \\\n\t| \\\n\tsort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.genesplit.bed\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode full \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n\tpaste \\\n\t<(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n\t<(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 1,106,108 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g') \\\n\t<(cut -f 8,13,15-17,21-22,66-79 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n\t| \\\n\tsed 's|\\t\\$|\\t.|' \\\n\t| \\\n\tsed 's|chrSV_chrom|SV_chrom|' \\\n\t| \\\n\tsort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.collapsed.bed\"\n\n\n\tgrep -E '^#|SVTYPE=BND' \"${consensus_somatic_sv_fpfiltered_vcf}\" > \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode split \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n\tpaste \\\n    <(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n    <(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \\$1-1,\\$2}') \\\n    <(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 1 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 21,23-36,64-65 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\$|\\t.|') \\\n    <(cut -f 44-45,48-49,52-63 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | sed 's|^\\t|.\\t|' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n    | \\\n    sed 's|\\t\\$|\\t.|' \\\n    | \\\n    sed 's|chrSV_chrom\\t-1|SV_chrom\\tSV_start|' \\\n    | \\\n    sort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.genesplit.bed\"\n\n    \\$ANNOTSV/bin/AnnotSV \\\n    -annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n    -annotationMode full \\\n    -genomeBuild GRCh38 \\\n    -hpo HP:0006775 \\\n    -outputDir . \\\n    -outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed\" \\\n    -SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\" \\\n    -SVminSize 1 \\\n\t-includeCI 0 \\\n    -tx ENSEMBL\n\n    paste \\\n    <(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n    <(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 1,106,108 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g') \\\n    <(cut -f 8,13,15-17,21-22,66-79 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n    | \\\n    sed 's|\\t\\$|\\t.|' \\\n    | \\\n    sed 's|chrSV_chrom|SV_chrom|' \\\n    | \\\n    sort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.collapsed.bed\"\n\n    cat \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.genesplit.bed\" \\\n    <(grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.genesplit.bed\") \\\n    | \\\n    sort -k1,1V -k2,2n > \"${gene_split_annotated_consensus_sv_bed}\"\n\n    cat \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.collapsed.bed\" \\\n    <(grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.collapsed.bed\") \\\n    | \\\n    sort -k1,1V -k2,2n > \"${collapsed_annotated_consensus_sv_bed}\"\n\n\n    # Transform collapsed annotation BED to high quality BEDPE\n    high_quality_bedpe_transformer.py \\\n    <(grep -v 'SV_chrom' \"${collapsed_annotated_consensus_sv_bed}\") \\\n    \"${final_manta_somatic_sv_read_support}\" \\\n    \"${final_svaba_somatic_sv_read_support}\" \\\n    \"${final_delly_somatic_sv_read_support}\" \\\n    \"${hq_consensus_sv_bedpe}\"\n    \"\"\"\n}",
        "nb_lignes_process": 149,
        "string_script": "    gene_split_annotated_consensus_sv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.genesplit.bed\"\n    collapsed_annotated_consensus_sv_bed = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.collapsed.bed\"\n    hq_consensus_sv_bedpe = \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.annotated.bedpe\"\n    \"\"\"\n    grep -v 'SVTYPE=BND' \"${consensus_somatic_sv_fpfiltered_vcf}\" > \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode split \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n    paste \\\n\t<(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n\t<(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \\$1-1,\\$2}') \\\n\t<(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 1 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\") \\\n\t<(cut -f 21,23-36,64-65 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\$|\\t.|') \\\n\t<(cut -f 44-45,48-49,52-63 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.genesplit.tsv\" | sed 's|^\\t|.\\t|' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n\t| \\\n\tsed 's|\\t\\$|\\t.|' \\\n\t| \\\n\tsed 's|chrSV_chrom\\t-1|SV_chrom\\tSV_start|' \\\n\t| \\\n\tsort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.genesplit.bed\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode full \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n\tpaste \\\n\t<(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n\t<(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\") \\\n\t<(cut -f 1,106,108 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g') \\\n\t<(cut -f 8,13,15-17,21-22,66-79 \"${tumor_normal_sample_id}.consensus.somatic.sv.nonbreakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n\t| \\\n\tsed 's|\\t\\$|\\t.|' \\\n\t| \\\n\tsed 's|chrSV_chrom|SV_chrom|' \\\n\t| \\\n\tsort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.collapsed.bed\"\n\n\n\tgrep -E '^#|SVTYPE=BND' \"${consensus_somatic_sv_fpfiltered_vcf}\" > \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\"\n\n\t\\$ANNOTSV/bin/AnnotSV \\\n\t-annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n\t-annotationMode split \\\n\t-genomeBuild GRCh38 \\\n\t-hpo HP:0006775 \\\n\t-outputDir . \\\n\t-outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit\" \\\n\t-SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\" \\\n\t-SVminSize 1 \\\n\t-includeCI 0 \\\n\t-tx ENSEMBL\n\n\tpaste \\\n    <(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n    <(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \\$1-1,\\$2}') \\\n    <(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 1 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\") \\\n    <(cut -f 21,23-36,64-65 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\$|\\t.|') \\\n    <(cut -f 44-45,48-49,52-63 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.genesplit.tsv\" | sed 's|^\\t|.\\t|' | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n    | \\\n    sed 's|\\t\\$|\\t.|' \\\n    | \\\n    sed 's|chrSV_chrom\\t-1|SV_chrom\\tSV_start|' \\\n    | \\\n    sort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.genesplit.bed\"\n\n    \\$ANNOTSV/bin/AnnotSV \\\n    -annotationsDir \"${annotsv_ref_dir_bundle}\" \\\n    -annotationMode full \\\n    -genomeBuild GRCh38 \\\n    -hpo HP:0006775 \\\n    -outputDir . \\\n    -outputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed\" \\\n    -SVinputFile \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.vcf\" \\\n    -SVminSize 1 \\\n\t-includeCI 0 \\\n    -tx ENSEMBL\n\n    paste \\\n    <(cut -f 2 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | awk 'BEGIN {OFS=\"\\t\"} {print \"chr\"\\$1}') \\\n    <(cut -f 3-4 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 20 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 5-6 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\") \\\n    <(cut -f 1,106,108 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g') \\\n    <(cut -f 8,13,15-17,21-22,66-79 \"${tumor_normal_sample_id}.consensus.somatic.sv.breakend.annotated.collapsed.tsv\" | sed 's|\\t\\t|\\t.\\t|g' | sed 's|\\t\\t|\\t.\\t|g') \\\n    | \\\n    sed 's|\\t\\$|\\t.|' \\\n    | \\\n    sed 's|chrSV_chrom|SV_chrom|' \\\n    | \\\n    sort -k1,1V -k2,2n > \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.collapsed.bed\"\n\n    cat \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.genesplit.bed\" \\\n    <(grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.genesplit.bed\") \\\n    | \\\n    sort -k1,1V -k2,2n > \"${gene_split_annotated_consensus_sv_bed}\"\n\n    cat \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.nonbreakend.annotated.collapsed.bed\" \\\n    <(grep -v 'SV_chrom' \"${tumor_normal_sample_id}.hq.consensus.somatic.sv.breakend.annotated.collapsed.bed\") \\\n    | \\\n    sort -k1,1V -k2,2n > \"${collapsed_annotated_consensus_sv_bed}\"\n\n\n    # Transform collapsed annotation BED to high quality BEDPE\n    high_quality_bedpe_transformer.py \\\n    <(grep -v 'SV_chrom' \"${collapsed_annotated_consensus_sv_bed}\") \\\n    \"${final_manta_somatic_sv_read_support}\" \\\n    \"${final_svaba_somatic_sv_read_support}\" \\\n    \"${final_delly_somatic_sv_read_support}\" \\\n    \"${hq_consensus_sv_bedpe}\"\n    \"\"\"",
        "nb_lignes_script": 133,
        "language_script": "bash",
        "tools": [
            "AnnotSV"
        ],
        "tools_url": [
            "https://bio.tools/AnnotSV"
        ],
        "tools_dico": [
            {
                "name": "AnnotSV",
                "uri": "https://bio.tools/AnnotSV",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0226",
                                    "term": "Annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrated tool for annotation and ranking of structural variations.",
                "homepage": "https://lbgi.fr/AnnotSV/"
            }
        ],
        "inputs": [
            "consensus_sv_vcf_forAnnotation",
            "manta_sv_read_support_forAnnotation",
            "svaba_sv_read_support_forAnnotation",
            "delly_sv_read_support_forAnnotation",
            "annotsv_ref_dir_forSvAnnotation"
        ],
        "nb_inputs": 5,
        "outputs": [
            "gene_split_annotated_consensus_sv_bed",
            "hq_consensus_sv_bedpe"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{sv.annotated.genesplit.bed,bedpe}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.manta == \"on\" && params.svaba == \"on\" && params.delly == \"on\"",
        "stub": ""
    },
    "mergeMetadataOutput": {
        "name_process": "mergeMetadataOutput",
        "string_process": "\nprocess mergeMetadataOutput {\n\tpublishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{txt}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(sample_sex), path(conpair_concordance_file), path(conpair_contamination_file), path(mutect_contamination_file), path(ascat_run_statistics), path(control_freec_run_info), path(sclust_cnv_summary_file) from allelecount_output_forConsensusMetadata.join(conpair_output_forConsensusMetadata).join(mutect_output_forConsensusMetadata).join(ascat_output_forConsensusMetadata).join(control_freec_output_forConsensusMetadata).join(sclust_output_forConsensusMetadata)\n\n\toutput:\n\tpath consensus_metadata_file\n\n\twhen:\n\tparams.conpair == \"on\" && params.mutect == \"on\" && params.ascatngs == \"on\" && params.sclust == \"on\"\n\n\tscript:\n\tconsensus_metadata_file = \"${tumor_normal_sample_id}.consensus.somatic.metadata.txt\"\n\t\"\"\"\n\ttouch \"${consensus_metadata_file}\"\n\n\techo \"### alleleCount ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"sample_sex\" >> \"${consensus_metadata_file}\"\n\tcat \"${sample_sex}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Conpair ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tcat \"${conpair_concordance_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"cross-sample\"\n\tcat \"${conpair_contamination_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Mutect2 ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"cross-sample\"\n\tcut -f 2,3 \"${mutect_contamination_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### ascatNGS ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tgrep 'NormalContamination' \"${ascat_run_statistics}\" >> \"${consensus_metadata_file}\"\n\tgrep 'Ploidy' \"${ascat_run_statistics}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Control-FREEC ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tgrep 'Sample_Purity' \"${control_freec_run_info}\" >> \"${consensus_metadata_file}\"\n\tgrep 'Output_Ploidy' \"${control_freec_run_info}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Sclust ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tcut -f 2,3,5 \"${sclust_cnv_summary_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 55,
        "string_script": "\tconsensus_metadata_file = \"${tumor_normal_sample_id}.consensus.somatic.metadata.txt\"\n\t\"\"\"\n\ttouch \"${consensus_metadata_file}\"\n\n\techo \"### alleleCount ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"sample_sex\" >> \"${consensus_metadata_file}\"\n\tcat \"${sample_sex}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Conpair ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tcat \"${conpair_concordance_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"cross-sample\"\n\tcat \"${conpair_contamination_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Mutect2 ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\techo \"cross-sample\"\n\tcut -f 2,3 \"${mutect_contamination_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### ascatNGS ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tgrep 'NormalContamination' \"${ascat_run_statistics}\" >> \"${consensus_metadata_file}\"\n\tgrep 'Ploidy' \"${ascat_run_statistics}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Control-FREEC ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tgrep 'Sample_Purity' \"${control_freec_run_info}\" >> \"${consensus_metadata_file}\"\n\tgrep 'Output_Ploidy' \"${control_freec_run_info}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\n\techo \"### Sclust ###\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\tcut -f 2,3,5 \"${sclust_cnv_summary_file}\" >> \"${consensus_metadata_file}\"\n\techo \"\" >> \"${consensus_metadata_file}\"\n\t\"\"\"",
        "nb_lignes_script": 40,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "allelecount_output_forConsensusMetadata",
            "conpair_output_forConsensusMetadata",
            "mutect_output_forConsensusMetadata",
            "ascat_output_forConsensusMetadata",
            "control_freec_output_forConsensusMetadata",
            "sclust_output_forConsensusMetadata"
        ],
        "nb_inputs": 6,
        "outputs": [
            "consensus_metadata_file"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{txt}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.conpair == \"on\" && params.mutect == \"on\" && params.ascatngs == \"on\" && params.sclust == \"on\"",
        "stub": ""
    },
    "annotateSnvAndIndelVcf_vep": {
        "name_process": "annotateSnvAndIndelVcf_vep",
        "string_process": "\nprocess annotateSnvAndIndelVcf_vep {\n\tpublishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{vcf.gz,html}'\n\ttag \"${tumor_normal_sample_id}\"\n\n\tinput:\n\ttuple val(tumor_normal_sample_id), path(hq_snv_consensus_vcf), path(hq_snv_consensus_vcf_index), path(hq_indel_consensus_vcf), path(hq_indel_consensus_vcf_index), path(cached_ref_dir_vep), path(reference_genome_fasta_forAnnotation), path(reference_genome_fasta_index_forAnnotation), path(reference_genome_fasta_dict_forAnnotation) from high_quality_consensus_snv_forAnnotation.join(high_quality_consensus_indel_forAnnotation).combine(vep_ref_dir).combine(reference_genome_bundle_forAnnotation)\n\n\toutput:\n\tpath(\"*.annotated.vcf.gz\")\n\tpath(\"*.vep.summary.html\")\n\n\twhen:\n\tparams.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"\n\n\tscript:\n\t\"\"\"\n\tfor vcf in `ls *.vcf.gz`;\n\t\tdo\n\t\t\toutput_vcf=\\$(echo \\${vcf} | sed 's|.vcf.gz|.annotated.vcf.gz|')\n\t\t\toutput_stats=\\$(echo \\${vcf} | sed 's|.vcf.gz|.vep.summary.html|')\n\n\t\t\tvep \\\n\t\t\t--offline \\\n\t\t\t--cache \\\n\t\t\t--dir \"${cached_ref_dir_vep}\" \\\n\t\t\t--assembly GRCh38 \\\n\t\t\t--fasta \"${reference_genome_fasta_forAnnotation}\" \\\n\t\t\t--input_file \\${vcf} \\\n\t\t\t--format vcf \\\n\t\t\t--sift b \\\n\t\t\t--polyphen b \\\n\t\t\t--biotype \\\n\t\t\t--symbol \\\n\t\t\t--nearest symbol \\\n\t\t\t--check_existing \\\n\t\t\t--max_af \\\n\t\t\t--gencode_basic \\\n\t\t\t--pick \\\n\t\t\t--stats_file \\${output_stats} \\\n\t\t\t--output_file \\${output_vcf} \\\n\t\t\t--compress_output bgzip \\\n\t\t\t--vcf\n\t\tdone\n\t\"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "\t\"\"\"\n\tfor vcf in `ls *.vcf.gz`;\n\t\tdo\n\t\t\toutput_vcf=\\$(echo \\${vcf} | sed 's|.vcf.gz|.annotated.vcf.gz|')\n\t\t\toutput_stats=\\$(echo \\${vcf} | sed 's|.vcf.gz|.vep.summary.html|')\n\n\t\t\tvep \\\n\t\t\t--offline \\\n\t\t\t--cache \\\n\t\t\t--dir \"${cached_ref_dir_vep}\" \\\n\t\t\t--assembly GRCh38 \\\n\t\t\t--fasta \"${reference_genome_fasta_forAnnotation}\" \\\n\t\t\t--input_file \\${vcf} \\\n\t\t\t--format vcf \\\n\t\t\t--sift b \\\n\t\t\t--polyphen b \\\n\t\t\t--biotype \\\n\t\t\t--symbol \\\n\t\t\t--nearest symbol \\\n\t\t\t--check_existing \\\n\t\t\t--max_af \\\n\t\t\t--gencode_basic \\\n\t\t\t--pick \\\n\t\t\t--stats_file \\${output_stats} \\\n\t\t\t--output_file \\${output_vcf} \\\n\t\t\t--compress_output bgzip \\\n\t\t\t--vcf\n\t\tdone\n\t\"\"\"",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [
            "fivepseq"
        ],
        "tools_url": [
            "https://bio.tools/fivepseq"
        ],
        "tools_dico": [
            {
                "name": "fivepseq",
                "uri": "https://bio.tools/fivepseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Fivepseq is a software package for analysis of 5prime endpoints distribution in RNA sequencing datasets. This is particularly useful for techniques that capture 5prime  monophosphorylated RNAs, such as 5PSeq, PARE-seq or GMUC. It may also be useful for ribosome profiling datasets and alike.",
                "homepage": "http://pelechanolab.com/software/fivepseq"
            }
        ],
        "inputs": [
            "high_quality_consensus_snv_forAnnotation",
            "high_quality_consensus_indel_forAnnotation",
            "vep_ref_dir",
            "reference_genome_bundle_forAnnotation"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/somatic/consensus/${tumor_normal_sample_id}\", mode: 'copy', pattern: '*.{vcf.gz,html}'",
            "tag \"${tumor_normal_sample_id}\""
        ],
        "when": "params.varscan == \"on\" && params.mutect == \"on\" && params.strelka == \"on\" && params.svaba == \"on\"",
        "stub": ""
    },
    "mergeLaneSplitFastqs_mergelane": {
        "name_process": "mergeLaneSplitFastqs_mergelane",
        "string_process": "\nprocess mergeLaneSplitFastqs_mergelane {\n\tpublishDir \"${params.output_dir}/preprocessing/\", mode: 'symlink'\n\n\tinput:\n\tpath split_fastqs from input_fastqs_forMerging\n\n\toutput:\n\tpath lane_merged_input_fastqs into lane_merged_fastq_dir\n\n\twhen:\n\tparams.input_format == \"fastq\" & params.lane_split == \"yes\"\n\n\tscript:\n\tlane_merged_input_fastqs = \"laneMergedFastqs\"\n\t\"\"\"\n\tlane_split_merger.sh \\\n\t. \\\n\t\"${lane_merged_input_fastqs}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\tlane_merged_input_fastqs = \"laneMergedFastqs\"\n\t\"\"\"\n\tlane_split_merger.sh \\\n\t. \\\n\t\"${lane_merged_input_fastqs}\"\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_fastqs_forMerging"
        ],
        "nb_inputs": 1,
        "outputs": [
            "lane_merged_fastq_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/\", mode: 'symlink'"
        ],
        "when": "params.input_format == \"fastq\" & params.lane_split == \"yes\"",
        "stub": ""
    },
    "gatherInputFastqs_fastqgatherer": {
        "name_process": "gatherInputFastqs_fastqgatherer",
        "string_process": "\nprocess gatherInputFastqs_fastqgatherer {\n\tpublishDir \"${params.output_dir}/preprocessing/\", mode: 'copy', pattern: '*.{txt}'\n\n\tinput:\n\tpath fastqs_forGathering\n\n\toutput:\n\tpath run_fastq_samplesheet into input_fastq_sample_sheet\n\n\twhen:\n\tparams.input_format == \"fastq\"\n\n\tscript:\n\trun_fastq_samplesheet = \"${params.run_id}.fastq.samplesheet.txt\"\n\t\"\"\"\n\tfastq_pair_gatherer.pl \\\n\t\"${fastqs_forGathering}\" \\\n\t\"${run_fastq_samplesheet}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\trun_fastq_samplesheet = \"${params.run_id}.fastq.samplesheet.txt\"\n\t\"\"\"\n\tfastq_pair_gatherer.pl \\\n\t\"${fastqs_forGathering}\" \\\n\t\"${run_fastq_samplesheet}\"\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastqs_forGathering"
        ],
        "nb_inputs": 1,
        "outputs": [
            "input_fastq_sample_sheet"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/\", mode: 'copy', pattern: '*.{txt}'"
        ],
        "when": "params.input_format == \"fastq\"",
        "stub": ""
    },
    "revertMappedBam_gatk": {
        "name_process": "revertMappedBam_gatk",
        "string_process": "\nprocess revertMappedBam_gatk {\n\ttag \"${bam_mapped.baseName}\"\n\n\tinput:\n\tpath bam_mapped from input_mapped_bams\n\n\toutput:\n\tpath bam_unmapped into unmapped_bams\n\n\twhen:\n\tparams.input_format == \"bam\"\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_unmapped = \"${bam_mapped}\".replaceFirst(/\\..*bam/, \".unmapped.bam\")\n\t\"\"\"\n\tgatk RevertSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--VALIDATION_STRINGENCY LENIENT \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--TMP_DIR . \\\n\t--SANITIZE true \\\n\t--ATTRIBUTE_TO_CLEAR XT \\\n\t--ATTRIBUTE_TO_CLEAR XN \\\n\t--ATTRIBUTE_TO_CLEAR OC \\\n\t--ATTRIBUTE_TO_CLEAR OP \\\n\t--INPUT \"${bam_mapped}\" \\\n\t--OUTPUT \"${bam_unmapped}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "\tbam_unmapped = \"${bam_mapped}\".replaceFirst(/\\..*bam/, \".unmapped.bam\")\n\t\"\"\"\n\tgatk RevertSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--VALIDATION_STRINGENCY LENIENT \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--TMP_DIR . \\\n\t--SANITIZE true \\\n\t--ATTRIBUTE_TO_CLEAR XT \\\n\t--ATTRIBUTE_TO_CLEAR XN \\\n\t--ATTRIBUTE_TO_CLEAR OC \\\n\t--ATTRIBUTE_TO_CLEAR OP \\\n\t--INPUT \"${bam_mapped}\" \\\n\t--OUTPUT \"${bam_unmapped}\"\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "input_mapped_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "unmapped_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${bam_mapped.baseName}\""
        ],
        "when": "params.input_format == \"bam\"\n\tparams.skip_to_qc == \"no\"",
        "stub": ""
    },
    "bamToFastq_biobambam": {
        "name_process": "bamToFastq_biobambam",
        "string_process": "\nprocess bamToFastq_biobambam {\n\ttag \"${sample_id}\"\n\n\tinput:\n\tpath bam_unmapped from unmapped_bams\n\n\toutput:\n\ttuple val(sample_id), path(fastq_R1), path(fastq_R2) into converted_fastqs_forTrimming\n\n\twhen:\n\tparams.input_format == \"bam\"\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tsample_id = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"\")\n\tfastq_R1 = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"_R1.fastq.gz\")\n\tfastq_R2 = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"_R2.fastq.gz\")\n\t\"\"\"\n\tbamtofastq \\\n\tfilename=\"${bam_unmapped}\" \\\n\tF=\"${fastq_R1}\" \\\n\tF2=\"${fastq_R2}\" \\\n\tgz=1\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\tsample_id = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"\")\n\tfastq_R1 = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"_R1.fastq.gz\")\n\tfastq_R2 = \"${bam_unmapped}\".replaceFirst(/\\.unmapped\\.bam/, \"_R2.fastq.gz\")\n\t\"\"\"\n\tbamtofastq \\\n\tfilename=\"${bam_unmapped}\" \\\n\tF=\"${fastq_R1}\" \\\n\tF2=\"${fastq_R2}\" \\\n\tgz=1\n\t\"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "unmapped_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "converted_fastqs_forTrimming"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "params.input_format == \"bam\"\n\tparams.skip_to_qc == \"no\"",
        "stub": ""
    },
    "fastqTrimming_trimmomatic": {
        "name_process": "fastqTrimming_trimmomatic",
        "string_process": "\nprocess fastqTrimming_trimmomatic {\n\tpublishDir \"${params.output_dir}/preprocessing/trimLogs\", mode: 'copy', pattern: '*.{log}'\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(input_R1_fastqs), path(input_R2_fastqs), path(trimmomatic_contaminants) from input_fastqs_forTrimming.combine(trimmomatic_contaminants)\n\n\toutput:\n\ttuple val(sample_id), path(fastq_R1_trimmed), path(fastq_R2_trimmed) into trimmed_fastqs_forFastqc, trimmed_fastqs_forAlignment\n\tpath fastq_trim_log\n\n\tscript:\n\tfastq_R1_trimmed = \"${sample_id}_R1_trim.fastq.gz\"\n\tfastq_R2_trimmed = \"${sample_id}_R2_trim.fastq.gz\"\n\tfastq_R1_unpaired = \"${sample_id}_R1_unpaired.fastq.gz\"\n\tfastq_R2_unpaired = \"${sample_id}_R2_unpaired.fastq.gz\"\n\tfastq_trim_log = \"${sample_id}.trim.log\"\n\t\"\"\"\n\ttrimmomatic PE \\\n\t-threads ${task.cpus} \\\n\t\"${input_R1_fastqs}\" \\\n\t\"${input_R2_fastqs}\" \\\n\t\"${fastq_R1_trimmed}\" \\\n\t\"${fastq_R1_unpaired}\" \\\n\t\"${fastq_R2_trimmed}\" \\\n\t\"${fastq_R2_unpaired}\" \\\n\tILLUMINACLIP:${trimmomatic_contaminants}:2:30:10:1:true \\\n\tTRAILING:5 \\\n\tSLIDINGWINDOW:4:15 \\\n\tMINLEN:35 \\\n\t2> \"${fastq_trim_log}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "\tfastq_R1_trimmed = \"${sample_id}_R1_trim.fastq.gz\"\n\tfastq_R2_trimmed = \"${sample_id}_R2_trim.fastq.gz\"\n\tfastq_R1_unpaired = \"${sample_id}_R1_unpaired.fastq.gz\"\n\tfastq_R2_unpaired = \"${sample_id}_R2_unpaired.fastq.gz\"\n\tfastq_trim_log = \"${sample_id}.trim.log\"\n\t\"\"\"\n\ttrimmomatic PE \\\n\t-threads ${task.cpus} \\\n\t\"${input_R1_fastqs}\" \\\n\t\"${input_R2_fastqs}\" \\\n\t\"${fastq_R1_trimmed}\" \\\n\t\"${fastq_R1_unpaired}\" \\\n\t\"${fastq_R2_trimmed}\" \\\n\t\"${fastq_R2_unpaired}\" \\\n\tILLUMINACLIP:${trimmomatic_contaminants}:2:30:10:1:true \\\n\tTRAILING:5 \\\n\tSLIDINGWINDOW:4:15 \\\n\tMINLEN:35 \\\n\t2> \"${fastq_trim_log}\"\n\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "Trimmomatic"
        ],
        "tools_url": [
            "https://bio.tools/trimmomatic"
        ],
        "tools_dico": [
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            }
        ],
        "inputs": [
            "input_fastqs_forTrimming",
            "trimmomatic_contaminants"
        ],
        "nb_inputs": 2,
        "outputs": [
            "trimmed_fastqs_forFastqc",
            "trimmed_fastqs_forAlignment",
            "fastq_trim_log"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/trimLogs\", mode: 'copy', pattern: '*.{log}'",
            "tag \"${sample_id}\""
        ],
        "when": "",
        "stub": ""
    },
    "fastqQualityControlMetrics_fastqc": {
        "name_process": "fastqQualityControlMetrics_fastqc",
        "string_process": "\nprocess fastqQualityControlMetrics_fastqc {\n\tpublishDir \"${params.output_dir}/preprocessing/fastqc\", mode: 'copy'\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(fastq_R1), path(fastq_R2) from trimmed_fastqs_forFastqc\n\n\toutput:\n\ttuple path(fastqc_R1_html), path(fastqc_R2_html)\n\ttuple path(fastqc_R1_zip), path(fastqc_R2_zip)\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tfastqc_R1_html = \"${fastq_R1}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.html\")\n\tfastqc_R1_zip = \"${fastq_R1}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.zip\")\n\tfastqc_R2_html = \"${fastq_R2}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.html\")\n\tfastqc_R2_zip = \"${fastq_R2}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.zip\")\n\t\"\"\"\n\tfastqc --outdir . \"${fastq_R1}\"\n\tfastqc --outdir . \"${fastq_R2}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\tfastqc_R1_html = \"${fastq_R1}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.html\")\n\tfastqc_R1_zip = \"${fastq_R1}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.zip\")\n\tfastqc_R2_html = \"${fastq_R2}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.html\")\n\tfastqc_R2_zip = \"${fastq_R2}\".replaceFirst(/\\.*fastq.gz/, \"_fastqc.zip\")\n\t\"\"\"\n\tfastqc --outdir . \"${fastq_R1}\"\n\tfastqc --outdir . \"${fastq_R2}\"\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "trimmed_fastqs_forFastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_R2_html",
            "fastqc_R2_zip"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/fastqc\", mode: 'copy'",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "alignment_bwa": {
        "name_process": "alignment_bwa",
        "string_process": "\nprocess alignment_bwa {\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(fastq_R1), path(fastq_R2), path(bwa_reference_dir) from trimmed_fastqs_forAlignment.combine(bwa_reference_dir)\n\n\toutput:\n\tpath bam_aligned into aligned_bams\n\ttuple val(sample_id), path(bam_aligned) into aligned_bam_forFlagstats\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_aligned = \"${sample_id}.bam\"\n\t\"\"\"\n\tbwa mem \\\n\t-M \\\n\t-K 100000000 \\\n\t-v 1 \\\n\t-t ${task.cpus} \\\n\t-R '@RG\\\\tID:${sample_id}\\\\tSM:${sample_id}\\\\tLB:${sample_id}\\\\tPL:ILLUMINA' \\\n\t\"${bwa_reference_dir}/Homo_sapiens_assembly38.fasta\" \\\n\t\"${fastq_R1}\" \"${fastq_R2}\" \\\n\t| \\\n\tsambamba view \\\n\t--sam-input \\\n\t--nthreads=${task.cpus} \\\n\t--filter='mapping_quality>=10' \\\n\t--format=bam \\\n\t--compression-level=0 \\\n\t/dev/stdin \\\n\t| \\\n\tsambamba sort \\\n\t--nthreads=${task.cpus} \\\n\t--tmpdir=. \\\n\t--memory-limit=8GB \\\n\t--sort-by-name \\\n\t--out=${bam_aligned} \\\n\t/dev/stdin\n\t\"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\tbam_aligned = \"${sample_id}.bam\"\n\t\"\"\"\n\tbwa mem \\\n\t-M \\\n\t-K 100000000 \\\n\t-v 1 \\\n\t-t ${task.cpus} \\\n\t-R '@RG\\\\tID:${sample_id}\\\\tSM:${sample_id}\\\\tLB:${sample_id}\\\\tPL:ILLUMINA' \\\n\t\"${bwa_reference_dir}/Homo_sapiens_assembly38.fasta\" \\\n\t\"${fastq_R1}\" \"${fastq_R2}\" \\\n\t| \\\n\tsambamba view \\\n\t--sam-input \\\n\t--nthreads=${task.cpus} \\\n\t--filter='mapping_quality>=10' \\\n\t--format=bam \\\n\t--compression-level=0 \\\n\t/dev/stdin \\\n\t| \\\n\tsambamba sort \\\n\t--nthreads=${task.cpus} \\\n\t--tmpdir=. \\\n\t--memory-limit=8GB \\\n\t--sort-by-name \\\n\t--out=${bam_aligned} \\\n\t/dev/stdin\n\t\"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "BWA",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "trimmed_fastqs_forAlignment",
            "bwa_reference_dir"
        ],
        "nb_inputs": 2,
        "outputs": [
            "aligned_bams",
            "aligned_bam_forFlagstats"
        ],
        "nb_outputs": 2,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "postAlignmentFlagstats_sambamba": {
        "name_process": "postAlignmentFlagstats_sambamba",
        "string_process": "\nprocess postAlignmentFlagstats_sambamba {\n\tpublishDir \"${params.output_dir}/preprocessing/alignmentFlagstats\", mode: 'copy', pattern: \"*${bam_flagstat_log}\"\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(bam_aligned) from aligned_bam_forFlagstats\n\n\toutput:\n\tpath bam_flagstat_log\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_flagstat_log = \"${sample_id}.alignment.flagstat.log\"\n\t\"\"\"\n\tsambamba flagstat \\\n\t\"${bam_aligned}\" > \"${bam_flagstat_log}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\tbam_flagstat_log = \"${sample_id}.alignment.flagstat.log\"\n\t\"\"\"\n\tsambamba flagstat \\\n\t\"${bam_aligned}\" > \"${bam_flagstat_log}\"\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "aligned_bam_forFlagstats"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_flagstat_log"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/alignmentFlagstats\", mode: 'copy', pattern: \"*${bam_flagstat_log}\"",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "fixMateInformationAndSort_gatk": {
        "name_process": "fixMateInformationAndSort_gatk",
        "string_process": "\nprocess fixMateInformationAndSort_gatk {\n\ttag \"${bam_aligned.baseName}\"\n\n\tinput:\n\tpath bam_aligned from aligned_bams\n\n\toutput:\n\tpath bam_fixed_mate into fixed_mate_bams\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_fixed_mate_unsorted = \"${bam_aligned}\".replaceFirst(/\\.bam/, \".unsorted.fixedmate.bam\")\n\tbam_fixed_mate = \"${bam_aligned}\".replaceFirst(/\\.bam/, \".fixedmate.bam\")\n\t\"\"\"\n\tgatk FixMateInformation \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 4}G -Djava.io.tmpdir=. -XX:ParallelGCThreads=2 -XX:-UseGCOverheadLimit\" \\\n\t--VERBOSITY ERROR \\\n\t--VALIDATION_STRINGENCY SILENT \\\n\t--ADD_MATE_CIGAR true \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--ASSUME_SORTED true \\\n\t--TMP_DIR . \\\n\t--INPUT \"${bam_aligned}\" \\\n\t--OUTPUT \"${bam_fixed_mate_unsorted}\"\n\n\tgatk SortSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 4}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--SORT_ORDER coordinate \\\n\t--INPUT \"${bam_fixed_mate_unsorted}\" \\\n\t--OUTPUT \"${bam_fixed_mate}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\tbam_fixed_mate_unsorted = \"${bam_aligned}\".replaceFirst(/\\.bam/, \".unsorted.fixedmate.bam\")\n\tbam_fixed_mate = \"${bam_aligned}\".replaceFirst(/\\.bam/, \".fixedmate.bam\")\n\t\"\"\"\n\tgatk FixMateInformation \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 4}G -Djava.io.tmpdir=. -XX:ParallelGCThreads=2 -XX:-UseGCOverheadLimit\" \\\n\t--VERBOSITY ERROR \\\n\t--VALIDATION_STRINGENCY SILENT \\\n\t--ADD_MATE_CIGAR true \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--ASSUME_SORTED true \\\n\t--TMP_DIR . \\\n\t--INPUT \"${bam_aligned}\" \\\n\t--OUTPUT \"${bam_fixed_mate_unsorted}\"\n\n\tgatk SortSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 4}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--SORT_ORDER coordinate \\\n\t--INPUT \"${bam_fixed_mate_unsorted}\" \\\n\t--OUTPUT \"${bam_fixed_mate}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "aligned_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fixed_mate_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${bam_aligned.baseName}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "markDuplicatesAndIndex_sambamba": {
        "name_process": "markDuplicatesAndIndex_sambamba",
        "string_process": "\nprocess markDuplicatesAndIndex_sambamba {\n\tpublishDir \"${params.output_dir}/preprocessing/markdupFlagstats\", mode: 'copy', pattern: '*.{log}'\n\ttag \"${sample_id}\"\n\n\tinput:\n\tpath bam_fixed_mate from fixed_mate_bams\n\n\toutput:\n\ttuple val(sample_id), path(bam_marked_dup) into marked_dup_bams_forDownsampleBam, marked_dup_bams_forApplyBqsr\n\tpath bam_marked_dup_index\n\tpath markdup_output_log\n\tpath bam_markdup_flagstat_log\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tsample_id = \"${bam_fixed_mate}\".replaceFirst(/\\.fixedmate\\.bam/, \"\")\n\tbam_marked_dup = \"${sample_id}.markdup.bam\"\n\tbam_marked_dup_index = \"${bam_marked_dup}.bai\"\n\tmarkdup_output_log = \"${sample_id}.markdup.log\"\n\tbam_markdup_flagstat_log = \"${sample_id}.markdup.flagstat.log\"\n\t\"\"\"\n\tsambamba markdup \\\n\t--remove-duplicates \\\n\t--nthreads ${task.cpus} \\\n\t--hash-table-size 1000000 \\\n\t--overflow-list-size 1000000 \\\n\t--tmpdir . \\\n\t\"${bam_fixed_mate}\" \\\n\t\"${bam_marked_dup}\" \\\n\t2> \"${markdup_output_log}\"\n\n\tsambamba flagstat \\\n\t\"${bam_marked_dup}\" > \"${bam_markdup_flagstat_log}\"\n\n\tsambamba index \\\n\t\"${bam_marked_dup}\" \"${bam_marked_dup_index}\"\n\t\"\"\"\t\n}",
        "nb_lignes_process": 39,
        "string_script": "\tsample_id = \"${bam_fixed_mate}\".replaceFirst(/\\.fixedmate\\.bam/, \"\")\n\tbam_marked_dup = \"${sample_id}.markdup.bam\"\n\tbam_marked_dup_index = \"${bam_marked_dup}.bai\"\n\tmarkdup_output_log = \"${sample_id}.markdup.log\"\n\tbam_markdup_flagstat_log = \"${sample_id}.markdup.flagstat.log\"\n\t\"\"\"\n\tsambamba markdup \\\n\t--remove-duplicates \\\n\t--nthreads ${task.cpus} \\\n\t--hash-table-size 1000000 \\\n\t--overflow-list-size 1000000 \\\n\t--tmpdir . \\\n\t\"${bam_fixed_mate}\" \\\n\t\"${bam_marked_dup}\" \\\n\t2> \"${markdup_output_log}\"\n\n\tsambamba flagstat \\\n\t\"${bam_marked_dup}\" > \"${bam_markdup_flagstat_log}\"\n\n\tsambamba index \\\n\t\"${bam_marked_dup}\" \"${bam_marked_dup_index}\"\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "fixed_mate_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "marked_dup_bams_forDownsampleBam",
            "marked_dup_bams_forApplyBqsr",
            "bam_marked_dup_index",
            "markdup_output_log",
            "bam_markdup_flagstat_log"
        ],
        "nb_outputs": 5,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/markdupFlagstats\", mode: 'copy', pattern: '*.{log}'",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "downsampleBam_gatk": {
        "name_process": "downsampleBam_gatk",
        "string_process": "\nprocess downsampleBam_gatk {\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(bam_marked_dup) from marked_dup_bams_forDownsampleBam\n\n\toutput:\n\tpath bam_marked_dup_downsampled into downsampled_makred_dup_bams\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_marked_dup_downsampled = \"${sample_id}.markdup.downsampled.bam\"\n\t\"\"\"\n\tgatk DownsampleSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--TMP_DIR . \\\n\t--STRATEGY ConstantMemory \\\n\t--RANDOM_SEED 1000 \\\n\t--CREATE_INDEX \\\n\t--VALIDATION_STRINGENCY SILENT \\\n\t--PROBABILITY 0.1 \\\n\t--INPUT \"${bam_marked_dup}\" \\\n\t--OUTPUT \"${bam_marked_dup_downsampled}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\tbam_marked_dup_downsampled = \"${sample_id}.markdup.downsampled.bam\"\n\t\"\"\"\n\tgatk DownsampleSam \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--MAX_RECORDS_IN_RAM 4000000 \\\n\t--TMP_DIR . \\\n\t--STRATEGY ConstantMemory \\\n\t--RANDOM_SEED 1000 \\\n\t--CREATE_INDEX \\\n\t--VALIDATION_STRINGENCY SILENT \\\n\t--PROBABILITY 0.1 \\\n\t--INPUT \"${bam_marked_dup}\" \\\n\t--OUTPUT \"${bam_marked_dup_downsampled}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "marked_dup_bams_forDownsampleBam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "downsampled_makred_dup_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "baseRecalibrator_gatk": {
        "name_process": "baseRecalibrator_gatk",
        "string_process": "\nprocess baseRecalibrator_gatk {\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple path(bam_marked_dup_downsampled), path(reference_genome_fasta_forBaseRecalibrator), path(reference_genome_fasta_index_forBaseRecalibrator), path(reference_genome_fasta_dict_forBaseRecalibrator), path(gatk_bundle_wgs_interval_list), path(gatk_bundle_mills_1000G), path(gatk_bundle_mills_1000G_index), path(gatk_bundle_known_indels), path(gatk_bundle_known_indels_index), path(gatk_bundle_dbsnp138), path(gatk_bundle_dbsnp138_index) from input_and_reference_files_forBaseRecalibrator\n\n\toutput:\n\ttuple val(sample_id), path(bqsr_table) into base_quality_score_recalibration_data\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tsample_id = \"${bam_marked_dup_downsampled}\".replaceFirst(/\\.markdup\\.downsampled\\.bam/, \"\")\n\tbqsr_table = \"${sample_id}.recaldata.table\"\n\t\"\"\"\n\tgatk BaseRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--read-filter GoodCigarReadFilter \\\n\t--reference \"${reference_genome_fasta_forBaseRecalibrator}\" \\\n\t--intervals \"${gatk_bundle_wgs_interval_list}\" \\\n\t--input \"${bam_marked_dup_downsampled}\" \\\n\t--output \"${bqsr_table}\" \\\n\t--known-sites \"${gatk_bundle_mills_1000G}\" \\\n\t--known-sites \"${gatk_bundle_known_indels}\" \\\n\t--known-sites \"${gatk_bundle_dbsnp138}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\tsample_id = \"${bam_marked_dup_downsampled}\".replaceFirst(/\\.markdup\\.downsampled\\.bam/, \"\")\n\tbqsr_table = \"${sample_id}.recaldata.table\"\n\t\"\"\"\n\tgatk BaseRecalibrator \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--read-filter GoodCigarReadFilter \\\n\t--reference \"${reference_genome_fasta_forBaseRecalibrator}\" \\\n\t--intervals \"${gatk_bundle_wgs_interval_list}\" \\\n\t--input \"${bam_marked_dup_downsampled}\" \\\n\t--output \"${bqsr_table}\" \\\n\t--known-sites \"${gatk_bundle_mills_1000G}\" \\\n\t--known-sites \"${gatk_bundle_known_indels}\" \\\n\t--known-sites \"${gatk_bundle_dbsnp138}\"\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "input_and_reference_files_forBaseRecalibrator"
        ],
        "nb_inputs": 1,
        "outputs": [
            "base_quality_score_recalibration_data"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "applyBqsr_gatk": {
        "name_process": "applyBqsr_gatk",
        "string_process": "\nprocess applyBqsr_gatk {\n\tpublishDir \"${params.output_dir}/preprocessing/finalPreprocessedBams\", mode: 'copy', pattern: '*.{final.bam,bai}'\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple val(sample_id), path(bam_marked_dup), path(bqsr_table), path(reference_genome_fasta_forApplyBqsr), path(reference_genome_fasta_index_forApplyBqsr), path(reference_genome_fasta_dict_forApplyBqsr) from input_and_reference_files_forApplyBqsr\n\n\toutput:\n\tpath bam_preprocessed_final into final_preprocessed_bams_forCollectWgsMetrics, final_preprocessed_bams_forCollectGcBiasMetrics\n\tpath bam_preprocessed_final_index\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tbam_preprocessed_final = \"${bam_marked_dup}\".replaceFirst(/\\.markdup\\.bam/, \".final.bam\")\n\tbam_preprocessed_final_index = \"${bam_preprocessed_final}\".replaceFirst(/\\.bam$/, \".bai\")\n\t\"\"\"\n\tgatk ApplyBQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--read-filter GoodCigarReadFilter \\\n\t--reference \"${reference_genome_fasta_forApplyBqsr}\" \\\n\t--input \"${bam_marked_dup}\" \\\n\t--output \"${bam_preprocessed_final}\" \\\n\t--bqsr-recal-file \"${bqsr_table}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\tbam_preprocessed_final = \"${bam_marked_dup}\".replaceFirst(/\\.markdup\\.bam/, \".final.bam\")\n\tbam_preprocessed_final_index = \"${bam_preprocessed_final}\".replaceFirst(/\\.bam$/, \".bai\")\n\t\"\"\"\n\tgatk ApplyBQSR \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--verbosity ERROR \\\n\t--tmp-dir . \\\n\t--read-filter GoodCigarReadFilter \\\n\t--reference \"${reference_genome_fasta_forApplyBqsr}\" \\\n\t--input \"${bam_marked_dup}\" \\\n\t--output \"${bam_preprocessed_final}\" \\\n\t--bqsr-recal-file \"${bqsr_table}\"\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "input_and_reference_files_forApplyBqsr"
        ],
        "nb_inputs": 1,
        "outputs": [
            "final_preprocessed_bams_forCollectWgsMetrics",
            "final_preprocessed_bams_forCollectGcBiasMetrics",
            "bam_preprocessed_final_index"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/finalPreprocessedBams\", mode: 'copy', pattern: '*.{final.bam,bai}'",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "collectWgsMetrics_gatk": {
        "name_process": "collectWgsMetrics_gatk",
        "string_process": "\nprocess collectWgsMetrics_gatk {\n\tpublishDir \"${params.output_dir}/preprocessing/coverageMetrics\", mode: 'copy'\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple path(bam_preprocessed_final), path(reference_genome_fasta_forCollectWgsMetrics), path(reference_genome_fasta_index_forCollectWgsMetrics), path(reference_genome_fasta_dict_forCollectWgsMetrics), path(autosome_chromosome_list) from final_preprocessed_bams_forCollectWgsMetrics.combine( reference_genome_bundle_forCollectWgsMetrics)\n\n\toutput:\n\tpath coverage_metrics\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tsample_id = \"${bam_preprocessed_final}\".replaceFirst(/\\.final\\.bam/, \"\")\n\tcoverage_metrics = \"${sample_id}.coverage.metrics.txt\"\n\t\"\"\"\n\tgatk CollectWgsMetrics \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--INCLUDE_BQ_HISTOGRAM \\\n\t--MINIMUM_BASE_QUALITY 20 \\\n\t--MINIMUM_MAPPING_QUALITY 20 \\\n\t--REFERENCE_SEQUENCE \"${reference_genome_fasta_forCollectWgsMetrics}\" \\\n\t--INTERVALS \"${autosome_chromosome_list}\" \\\n\t--INPUT \"${bam_preprocessed_final}\" \\\n\t--OUTPUT \"${coverage_metrics}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "\tsample_id = \"${bam_preprocessed_final}\".replaceFirst(/\\.final\\.bam/, \"\")\n\tcoverage_metrics = \"${sample_id}.coverage.metrics.txt\"\n\t\"\"\"\n\tgatk CollectWgsMetrics \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--INCLUDE_BQ_HISTOGRAM \\\n\t--MINIMUM_BASE_QUALITY 20 \\\n\t--MINIMUM_MAPPING_QUALITY 20 \\\n\t--REFERENCE_SEQUENCE \"${reference_genome_fasta_forCollectWgsMetrics}\" \\\n\t--INTERVALS \"${autosome_chromosome_list}\" \\\n\t--INPUT \"${bam_preprocessed_final}\" \\\n\t--OUTPUT \"${coverage_metrics}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "final_preprocessed_bams_forCollectWgsMetrics",
            "reference_genome_bundle_forCollectWgsMetrics"
        ],
        "nb_inputs": 2,
        "outputs": [
            "coverage_metrics"
        ],
        "nb_outputs": 1,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/coverageMetrics\", mode: 'copy'",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "collectGcBiasMetrics_gatk": {
        "name_process": "collectGcBiasMetrics_gatk",
        "string_process": "\nprocess collectGcBiasMetrics_gatk {\n\tpublishDir \"${params.output_dir}/preprocessing/gcBiasMetrics\", mode: 'copy'\n\ttag \"${sample_id}\"\n\n\tinput:\n\ttuple path(bam_preprocessed_final), path(reference_genome_fasta_forCollectGcBiasMetrics), path(reference_genome_fasta_index_forCollectGcBiasMetrics), path(reference_genome_fasta_dict_forCollectGcBiasMetrics) from final_preprocessed_bams_forCollectGcBiasMetrics.combine(reference_genome_bundle_forCollectGcBiasMetrics)\n\n\toutput:\n\tpath gc_bias_metrics\n\tpath gc_bias_chart\n\tpath gc_bias_summary\n\n\twhen:\n\tparams.skip_to_qc == \"no\"\n\n\tscript:\n\tsample_id = \"${bam_preprocessed_final}\".replaceFirst(/\\.final\\.bam/, \"\")\n\tgc_bias_metrics = \"${sample_id}.gcbias.metrics.txt\"\n\tgc_bias_chart = \"${sample_id}.gcbias.metrics.pdf\"\n\tgc_bias_summary = \"${sample_id}.gcbias.summary.txt\"\n\t\"\"\"\n\tgatk CollectGcBiasMetrics \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--REFERENCE_SEQUENCE \"${reference_genome_fasta_forCollectGcBiasMetrics}\" \\\n\t--INPUT \"${bam_preprocessed_final}\" \\\n\t--OUTPUT \"${gc_bias_metrics}\" \\\n\t--CHART_OUTPUT \"${gc_bias_chart}\" \\\n\t--SUMMARY_OUTPUT \"${gc_bias_summary}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\tsample_id = \"${bam_preprocessed_final}\".replaceFirst(/\\.final\\.bam/, \"\")\n\tgc_bias_metrics = \"${sample_id}.gcbias.metrics.txt\"\n\tgc_bias_chart = \"${sample_id}.gcbias.metrics.pdf\"\n\tgc_bias_summary = \"${sample_id}.gcbias.summary.txt\"\n\t\"\"\"\n\tgatk CollectGcBiasMetrics \\\n\t--java-options \"-Xmx${task.memory.toGiga() - 2}G -Djava.io.tmpdir=.\" \\\n\t--VERBOSITY ERROR \\\n\t--TMP_DIR . \\\n\t--REFERENCE_SEQUENCE \"${reference_genome_fasta_forCollectGcBiasMetrics}\" \\\n\t--INPUT \"${bam_preprocessed_final}\" \\\n\t--OUTPUT \"${gc_bias_metrics}\" \\\n\t--CHART_OUTPUT \"${gc_bias_chart}\" \\\n\t--SUMMARY_OUTPUT \"${gc_bias_summary}\"\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "final_preprocessed_bams_forCollectGcBiasMetrics",
            "reference_genome_bundle_forCollectGcBiasMetrics"
        ],
        "nb_inputs": 2,
        "outputs": [
            "gc_bias_metrics",
            "gc_bias_chart",
            "gc_bias_summary"
        ],
        "nb_outputs": 3,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/gcBiasMetrics\", mode: 'copy'",
            "tag \"${sample_id}\""
        ],
        "when": "params.skip_to_qc == \"no\"",
        "stub": ""
    },
    "extremeBamQualityControl_qualimap": {
        "name_process": "extremeBamQualityControl_qualimap",
        "string_process": "\nprocess extremeBamQualityControl_qualimap {\n\tpublishDir \"${params.output_dir}/preprocessing/qualimapBamQc\", mode: 'copy'\n\ttag \"${bam_mapped_high_coverage.baseName}\"\n\n\tinput:\n\tpath bam_mapped_high_coverage from input_mapped_bams_forQaulimap\n\n\toutput:\n\tpath \"${bam_mapped_high_coverage.baseName}\"\n\n\twhen:\n\tparams.input_format == \"bam\"\n\tparams.skip_to_qc == \"yes\"\n\n\tscript:\n\t\"\"\"\n\tqualimap --java-mem-size=12G \\\n\tbamqc \\\n\t-bam \"${bam_mapped_high_coverage}\" \\\n\t--paint-chromosome-limits \\\n\t--genome-gc-distr HUMAN \\\n\t-nt ${task.cpus} \\\n\t-outformat HTML \\\n\t-outdir \"${bam_mapped_high_coverage.baseName}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\t\"\"\"\n\tqualimap --java-mem-size=12G \\\n\tbamqc \\\n\t-bam \"${bam_mapped_high_coverage}\" \\\n\t--paint-chromosome-limits \\\n\t--genome-gc-distr HUMAN \\\n\t-nt ${task.cpus} \\\n\t-outformat HTML \\\n\t-outdir \"${bam_mapped_high_coverage.baseName}\"\n\t\"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "input_mapped_bams_forQaulimap"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "pblaney__mgp1000",
        "directive": [
            "publishDir \"${params.output_dir}/preprocessing/qualimapBamQc\", mode: 'copy'",
            "tag \"${bam_mapped_high_coverage.baseName}\""
        ],
        "when": "params.input_format == \"bam\"\n\tparams.skip_to_qc == \"yes\"",
        "stub": ""
    }
}