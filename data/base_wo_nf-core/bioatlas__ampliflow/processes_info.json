{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n\tpublishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n\tsaveAs: {filename ->\n\t\tif (filename.indexOf(\".csv\") > 0) filename\n\t\telse null\n\t}\n\n\toutput:\n\tfile 'software_versions_mqc.yaml' into ch_software_versions_yaml\n\tfile \"software_versions.csv\"\n\n\tscript:\n\t                                                                 \n\t\"\"\"\n\techo $workflow.manifest.version > v_pipeline.txt\n\techo $workflow.nextflow.version > v_nextflow.txt\n\tfastqc --version > v_fastqc.txt\n\tmultiqc --version > v_multiqc.txt\n\tcutadapt --version > v_cutadapt.txt\n\tqiime --version > v_qiime.txt\n\tscrape_software_versions.py &> software_versions_mqc.yaml\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\t\"\"\"\n\techo $workflow.manifest.version > v_pipeline.txt\n\techo $workflow.nextflow.version > v_nextflow.txt\n\tfastqc --version > v_fastqc.txt\n\tmultiqc --version > v_multiqc.txt\n\tcutadapt --version > v_cutadapt.txt\n\tqiime --version > v_qiime.txt\n\tscrape_software_versions.py &> software_versions_mqc.yaml\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "MultiQC",
            "Cutadapt",
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/multiqc",
            "https://bio.tools/cutadapt",
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            },
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\tprocess fastqc {\n\t\t\ttag \"${pair_id}\"\n\t\t\tpublishDir \"${params.outdir}/fastQC\", mode: 'copy',\n\t\t\tsaveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n\t\t\tinput:\n\t\t\tset val(pair_id), file(reads) from ch_read_pairs_fastqc\n\n\t\t\toutput:\n\t\t\tfile \"*_fastqc.{zip,html}\" into ch_fastqc_results\n\n\t\t\twhen:\n\t\t\t!params.skip_fastqc\n\n\t\t\tscript: \n\t\t\t\"\"\"\n\t\t\tfastqc -q ${reads}\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_process": 17,
        "string_script": "\t\t\t\"\"\"\n\t\t\tfastqc -q ${reads}\n\t\t\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_read_pairs_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${pair_id}\"",
            "publishDir \"${params.outdir}/fastQC\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "!params.skip_fastqc",
        "stub": ""
    },
    "fastqc_multi": {
        "name_process": "fastqc_multi",
        "string_process": "\tprocess fastqc_multi {\n\t\t\ttag \"${folder}${params.split}${pair_id}\"\n\t\t\tpublishDir \"${params.outdir}/fastQC\", mode: 'copy',\n\t\t\tsaveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n\t\t\tinput:\n\t\t\tset val(pair_id), file(reads), val(folder) from ch_read_pairs_fastqc\n\n\t\t\toutput:\n\t\t\tfile \"*_fastqc.{zip,html}\" into ch_fastqc_results\n\n\t\t\twhen:\n\t\t\t!params.skip_fastqc\n\n\t\t\tscript: \n\t\t\t\"\"\"\n\t\t\tfastqc -q ${reads}\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_process": 17,
        "string_script": "\t\t\t\"\"\"\n\t\t\tfastqc -q ${reads}\n\t\t\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_read_pairs_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${folder}${params.split}${pair_id}\"",
            "publishDir \"${params.outdir}/fastQC\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "!params.skip_fastqc",
        "stub": ""
    },
    "trimming": {
        "name_process": "trimming",
        "string_process": "\tprocess trimming {\n\t\t\ttag \"${pair_id}\"  \n\t\t\tpublishDir \"${params.outdir}/trimmed\", mode: 'copy',\n\t\t\t\tsaveAs: {filename -> \n\t\t\t\tif (filename.indexOf(\".gz\") == -1) \"logs/$filename\"\n\t\t\t\telse if(params.keepIntermediates) filename \n\t\t\t\telse null}\n\t\t\t\n\t\t\tinput:\n\t\t\tset val(pair_id), file(reads) from ch_read_pairs\n\t\t\n\t\t\toutput:\n\t\t\tfile \"trimmed/*.*\" into ch_fastq_trimmed, ch_fastq_trimmed_manifest\n\t\t\tfile \"cutadapt_log_*.txt\" into ch_fastq_cutadapt_log\n\n\t\t\tscript:\n\t\t\tdiscard_untrimmed = params.retain_untrimmed ? '' : '--discard-untrimmed'\n\t\t\t\"\"\"\n\t\t\tmkdir -p trimmed\n\t\t\tcutadapt -g ${params.FW_primer} -G ${params.RV_primer} ${discard_untrimmed} \\\n\t\t\t\t-o trimmed/${reads[0]} -p trimmed/${reads[1]} -e ${params.max_error_rate}\\\n\t\t\t\t${reads[0]} ${reads[1]} > cutadapt_log_${pair_id}.txt\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_process": 22,
        "string_script": "\t\t\tdiscard_untrimmed = params.retain_untrimmed ? '' : '--discard-untrimmed'\n\t\t\t\"\"\"\n\t\t\tmkdir -p trimmed\n\t\t\tcutadapt -g ${params.FW_primer} -G ${params.RV_primer} ${discard_untrimmed} \\\n\t\t\t\t-o trimmed/${reads[0]} -p trimmed/${reads[1]} -e ${params.max_error_rate}\\\n\t\t\t\t${reads[0]} ${reads[1]} > cutadapt_log_${pair_id}.txt\n\t\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Cutadapt"
        ],
        "tools_url": [
            "https://bio.tools/cutadapt"
        ],
        "tools_dico": [
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            }
        ],
        "inputs": [
            "ch_read_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_trimmed",
            "ch_fastq_trimmed_manifest",
            "ch_fastq_cutadapt_log"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${pair_id}\"",
            "publishDir \"${params.outdir}/trimmed\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".gz\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    },
    "trimming_multi": {
        "name_process": "trimming_multi",
        "string_process": "\tprocess trimming_multi {\n\t\t\ttag \"$folder${params.split}$pair_id\"  \n\t\t\tpublishDir \"${params.outdir}/trimmed\", mode: 'copy',\n\t\t\t\tsaveAs: {filename -> \n\t\t\t\tif (filename.indexOf(\".gz\") == -1) \"logs/$filename\"\n\t\t\t\telse if(params.keepIntermediates) filename \n\t\t\t\telse null}\n\t\t\n\t\t\tinput:\n\t\t\tset val(pair_id), file(reads), val(folder) from ch_read_pairs\n\t\t\n\t\t\toutput:\n\t\t\tset val(pair_id), file (\"trimmed/*.*\") into ch_fastq_trimmed\n\t\t\tfile \"trimmed/*.*\" into ch_fastq_trimmed_manifest\n\t\t\tfile \"cutadapt_log_*.txt\" into ch_fastq_cutadapt_log\n\n\t\t\tscript:\n\t\t\tdiscard_untrimmed = params.retain_untrimmed ? '' : '--discard-untrimmed'\n\t\t\t\"\"\"\n\t\t\tmkdir -p trimmed\n\t\t\tcutadapt -g ${params.FW_primer} -G ${params.RV_primer} ${discard_untrimmed} \\\n\t\t\t\t-o trimmed/$folder${params.split}${reads[0]} -p trimmed/$folder${params.split}${reads[1]} \\\n\t\t\t\t${reads[0]} ${reads[1]} > cutadapt_log_${pair_id}.txt\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_process": 23,
        "string_script": "\t\t\tdiscard_untrimmed = params.retain_untrimmed ? '' : '--discard-untrimmed'\n\t\t\t\"\"\"\n\t\t\tmkdir -p trimmed\n\t\t\tcutadapt -g ${params.FW_primer} -G ${params.RV_primer} ${discard_untrimmed} \\\n\t\t\t\t-o trimmed/$folder${params.split}${reads[0]} -p trimmed/$folder${params.split}${reads[1]} \\\n\t\t\t\t${reads[0]} ${reads[1]} > cutadapt_log_${pair_id}.txt\n\t\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Cutadapt"
        ],
        "tools_url": [
            "https://bio.tools/cutadapt"
        ],
        "tools_dico": [
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            }
        ],
        "inputs": [
            "ch_read_pairs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_trimmed",
            "ch_fastq_trimmed_manifest",
            "ch_fastq_cutadapt_log"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"$folder${params.split}$pair_id\"",
            "publishDir \"${params.outdir}/trimmed\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".gz\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\tprocess multiqc {\n\t\tpublishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n\t\tinput:\n\t\tfile ('fastqc/*') from ch_fastqc_results.collect()\n\t\tfile ('cutadapt/logs/*') from ch_fastq_cutadapt_log.collect()\n\n\t\toutput:\n\t\tfile \"*multiqc_report.html\" into multiqc_report\n\t\tfile \"*_data\"\n\n\t\twhen:\n\t\t!params.skip_multiqc\n\n\t\tscript:\n\t\t\"\"\"\n\t\tmultiqc --force --interactive .\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 17,
        "string_script": "\t\t\"\"\"\n\t\tmultiqc --force --interactive .\n\t\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_fastqc_results",
            "ch_fastq_cutadapt_log"
        ],
        "nb_inputs": 2,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "qiime_import": {
        "name_process": "qiime_import",
        "string_process": "\tprocess qiime_import {\n\t\t\tpublishDir \"${params.outdir}/demux\", mode: 'copy', \n\t\t\tsaveAs: { filename -> \n\t\t\t\tparams.keepIntermediates ? filename : null\n\t\t\t\tparams.untilQ2import ? filename : null }\n\n\t\t\tinput:\n\t\t\tfile(manifest) from ch_manifest\n\t\t\tenv MATPLOTLIBRC from ch_mpl_for_qiime_import\n\n\t\t\toutput:\n\t\t\tfile \"demux.qza\" into (ch_qiime_demux_import, ch_qiime_demux_vis, ch_qiime_demux_dada)\n\n\t\t\twhen:\n\t\t\t!params.Q2imported\n\t\t\n\t\t\tscript:\n\t\t\tif (!params.phred64) {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred33\n\t\t\t\t\"\"\"\n\t\t\t} else {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred64\n\t\t\t\t\"\"\"\n\t\t\t}\n\t\t}",
        "nb_lignes_process": 33,
        "string_script": "\t\t\tif (!params.phred64) {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred33\n\t\t\t\t\"\"\"\n\t\t\t} else {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred64\n\t\t\t\t\"\"\"\n\t\t\t}",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_manifest",
            "ch_mpl_for_qiime_import"
        ],
        "nb_inputs": 2,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/demux\", mode: 'copy' , saveAs: { filename -> params.keepIntermediates ? filename : null params.untilQ2import ? filename : null }"
        ],
        "when": "!params.Q2imported",
        "stub": ""
    },
    "qiime_import_multi": {
        "name_process": "qiime_import_multi",
        "string_process": "\tprocess qiime_import_multi {\n\t\t\ttag \"${manifest}\"\n\n\t\t\tpublishDir \"${params.outdir}\", mode: 'copy', \n\t\t\tsaveAs: { filename ->\n\t\t\t\tparams.keepIntermediates ? filename : null}\n\n\t\t\tinput:\n\t\t\tset file(manifest), env(MATPLOTLIBRC) from ch_manifest\n\n\t\t\toutput:\n\t\t\tfile \"*demux.qza\" into (ch_qiime_demux_import, ch_qiime_demux_vis, ch_qiime_demux_dada) mode flatten\n\n\t\t\twhen:\n\t\t\t!params.Q2imported\n\n\t\t\tscript:\n\t\t\tdef folder = \"${manifest}\".take(\"${manifest}\".indexOf(\"${params.split}\"))\n\t\t\tif (!params.phred64) {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path ${folder}-demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred33\n\t\t\t\t\"\"\"\n\t\t\t} else {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path ${folder}-demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred64\n\t\t\t\t\"\"\"\n\t\t\t}\n\t\t}",
        "nb_lignes_process": 34,
        "string_script": "\t\t\tdef folder = \"${manifest}\".take(\"${manifest}\".indexOf(\"${params.split}\"))\n\t\t\tif (!params.phred64) {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path ${folder}-demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred33\n\t\t\t\t\"\"\"\n\t\t\t} else {\n\t\t\t\t\"\"\"\n\t\t\t\tqiime tools import \\\n\t\t\t\t\t--type 'SampleData[PairedEndSequencesWithQuality]' \\\n\t\t\t\t\t--input-path ${manifest} \\\n\t\t\t\t\t--output-path ${folder}-demux.qza \\\n\t\t\t\t\t--source-format PairedEndFastqManifestPhred64\n\t\t\t\t\"\"\"\n\t\t\t}",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_manifest"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${manifest}\"",
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: { filename -> params.keepIntermediates ? filename : null}"
        ],
        "when": "!params.Q2imported",
        "stub": ""
    },
    "make_SILVA_132_16S_classifier": {
        "name_process": "make_SILVA_132_16S_classifier",
        "string_process": "\tprocess make_SILVA_132_16S_classifier {\n\t\tpublishDir \"${params.outdir}/DB/\", mode: 'copy', \n\t\tsaveAs: {filename -> \n\t\t\tif (filename.indexOf(\"${params.FW_primer}-${params.RV_primer}-${params.dereplication}-classifier.qza\") == 0) filename\n\t\t\telse if(params.keepIntermediates) filename \n\t\t\telse null}\n\n\t\tinput:\n\t\tfile database from ch_ref_database\n\t\tenv MATPLOTLIBRC from ch_mpl_for_make_classifier\n\n\t\toutput:\n\t\tfile(\"${params.FW_primer}-${params.RV_primer}-${params.dereplication}-classifier.qza\") into ch_qiime_classifier\n\t\tfile(\"*.qza\")\n\t\tstdout ch_message_classifier_removeHash\n\n\t\twhen:\n\t\t!params.onlyDenoising && !params.untilQ2import\n\n\t\tscript:\n\t  \n\t\t\"\"\"\n\t\tunzip -qq $database\n\n\t\tfasta=\\\"SILVA_132_QIIME_release/rep_set/rep_set_16S_only/${params.dereplication}/silva_132_${params.dereplication}_16S.fna\\\"\n\t\ttaxonomy=\\\"SILVA_132_QIIME_release/taxonomy/16S_only/${params.dereplication}/consensus_taxonomy_7_levels.txt\\\"\n\n\t\tif [ \\\"${params.classifier_removeHash}\\\" = \\\"true\\\" ]; then\n\t\t\tsed \\'s/#//g\\' \\$taxonomy >taxonomy-${params.dereplication}_removeHash.txt\n\t\t\ttaxonomy=\\\"taxonomy-${params.dereplication}_removeHash.txt\\\"\n\t\t\techo \\\"\\n######## WARNING! The taxonomy file was altered by removing all hash signs!\\\"\n\t\tfi\n\n\t\t### Import\n\t\tqiime tools import --type \\'FeatureData[Sequence]\\' \\\n\t\t\t--input-path \\$fasta \\\n\t\t\t--output-path ref-seq-${params.dereplication}.qza\n\t\tqiime tools import --type \\'FeatureData[Taxonomy]\\' \\\n\t\t\t--source-format HeaderlessTSVTaxonomyFormat \\\n\t\t\t--input-path \\$taxonomy \\\n\t\t\t--output-path ref-taxonomy-${params.dereplication}.qza\n\n\t\t#Extract sequences based on primers\n\t\tqiime feature-classifier extract-reads \\\n\t\t\t--i-sequences ref-seq-${params.dereplication}.qza \\\n\t\t\t--p-f-primer ${params.FW_primer} \\\n\t\t\t--p-r-primer ${params.RV_primer} \\\n\t\t\t--o-reads ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-ref-seq.qza \\\n\t\t\t--quiet\n\n\t\t#Train classifier\n\t\tqiime feature-classifier fit-classifier-naive-bayes \\\n\t\t\t--i-reference-reads ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-ref-seq.qza \\\n\t\t\t--i-reference-taxonomy ref-taxonomy-${params.dereplication}.qza \\\n\t\t\t--o-classifier ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-classifier.qza \\\n\t\t\t--quiet\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 56,
        "string_script": "\t\t\"\"\"\n\t\tunzip -qq $database\n\n\t\tfasta=\\\"SILVA_132_QIIME_release/rep_set/rep_set_16S_only/${params.dereplication}/silva_132_${params.dereplication}_16S.fna\\\"\n\t\ttaxonomy=\\\"SILVA_132_QIIME_release/taxonomy/16S_only/${params.dereplication}/consensus_taxonomy_7_levels.txt\\\"\n\n\t\tif [ \\\"${params.classifier_removeHash}\\\" = \\\"true\\\" ]; then\n\t\t\tsed \\'s/#//g\\' \\$taxonomy >taxonomy-${params.dereplication}_removeHash.txt\n\t\t\ttaxonomy=\\\"taxonomy-${params.dereplication}_removeHash.txt\\\"\n\t\t\techo \\\"\\n######## WARNING! The taxonomy file was altered by removing all hash signs!\\\"\n\t\tfi\n\n\t\t### Import\n\t\tqiime tools import --type \\'FeatureData[Sequence]\\' \\\n\t\t\t--input-path \\$fasta \\\n\t\t\t--output-path ref-seq-${params.dereplication}.qza\n\t\tqiime tools import --type \\'FeatureData[Taxonomy]\\' \\\n\t\t\t--source-format HeaderlessTSVTaxonomyFormat \\\n\t\t\t--input-path \\$taxonomy \\\n\t\t\t--output-path ref-taxonomy-${params.dereplication}.qza\n\n\t\t#Extract sequences based on primers\n\t\tqiime feature-classifier extract-reads \\\n\t\t\t--i-sequences ref-seq-${params.dereplication}.qza \\\n\t\t\t--p-f-primer ${params.FW_primer} \\\n\t\t\t--p-r-primer ${params.RV_primer} \\\n\t\t\t--o-reads ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-ref-seq.qza \\\n\t\t\t--quiet\n\n\t\t#Train classifier\n\t\tqiime feature-classifier fit-classifier-naive-bayes \\\n\t\t\t--i-reference-reads ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-ref-seq.qza \\\n\t\t\t--i-reference-taxonomy ref-taxonomy-${params.dereplication}.qza \\\n\t\t\t--o-classifier ${params.FW_primer}-${params.RV_primer}-${params.dereplication}-classifier.qza \\\n\t\t\t--quiet\n\t\t\"\"\"",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_ref_database",
            "ch_mpl_for_make_classifier"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_qiime_classifier",
            "ch_message_classifier_removeHash"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/DB/\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"${params.FW_primer}-${params.RV_primer}-${params.dereplication}-classifier.qza\") == 0) filename else if(params.keepIntermediates) filename else null}"
        ],
        "when": "!params.onlyDenoising && !params.untilQ2import",
        "stub": ""
    },
    "qiime_demux_visualize": {
        "name_process": "qiime_demux_visualize",
        "string_process": "\tprocess qiime_demux_visualize {\n\t\ttag \"${demux.baseName}\"\n\t\tpublishDir \"${params.outdir}\", mode: 'copy'\n\n\t\tinput:\n\t\tset file(demux), env(MATPLOTLIBRC) from ch_qiime_demux_visualisation\n\n\t\toutput:\n\t\tfile(\"${demux.baseName}/*-seven-number-summaries.csv\") into ch_csv_demux\n\t\tfile(\"${demux.baseName}/*\")\n\t  \n\t\t\"\"\"\n\t\tqiime demux summarize \\\n\t\t--i-data ${demux} \\\n\t\t--o-visualization ${demux.baseName}.qzv\n\n\t\tqiime tools export ${demux.baseName}.qzv --output-dir ${demux.baseName}\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n\t\tqiime demux summarize \\\n\t\t--i-data ${demux} \\\n\t\t--o-visualization ${demux.baseName}.qzv\n\n\t\tqiime tools export ${demux.baseName}.qzv --output-dir ${demux.baseName}\n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_qiime_demux_visualisation"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_csv_demux"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${demux.baseName}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "qiime_importdemux_visualize": {
        "name_process": "qiime_importdemux_visualize",
        "string_process": "\tprocess qiime_importdemux_visualize { \n\t\tpublishDir \"${params.outdir}\", mode: 'copy'\n\n\t\tinput:\n\t\tenv MATPLOTLIBRC from ch_mpl_for_demux_visualize\n\n\t\toutput:\n\t\tfile(\"demux/*-seven-number-summaries.csv\") into ch_csv_demux\n\t\tfile(\"demux/*\")\n\t  \n\t\t\"\"\"\n\t\tqiime demux summarize \\\n\t\t\t--i-data ${params.Q2imported} \\\n\t\t\t--o-visualization demux.qzv\n\n\t\tqiime tools export demux.qzv --output-dir demux\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n\t\tqiime demux summarize \\\n\t\t\t--i-data ${params.Q2imported} \\\n\t\t\t--o-visualization demux.qzv\n\n\t\tqiime tools export demux.qzv --output-dir demux\n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_mpl_for_demux_visualize"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_csv_demux"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "dada_trunc_parameter": {
        "name_process": "dada_trunc_parameter",
        "string_process": "\nprocess dada_trunc_parameter { \n\n\tinput:\n\tfile summary_demux from ch_csv_demux \n\n\toutput:\n\tstdout ch_dada_trunc\n\n\twhen:\n\t!params.untilQ2import\n\n\tscript:\n\tif( !params.trunclenf || !params.trunclenr ){\n\t\t\"\"\"\n\t\tdada_trunc_parameter.py ${summary_demux[0]} ${summary_demux[1]} ${params.trunc_qmin}\n\t\t\"\"\"\n\t}\n\telse\n\t\t\"\"\"\n\t\tprintf \"${params.trunclenf},${params.trunclenr}\"\n\t\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\tif( !params.trunclenf || !params.trunclenr ){\n\t\t\"\"\"\n\t\tdada_trunc_parameter.py ${summary_demux[0]} ${summary_demux[1]} ${params.trunc_qmin}\n\t\t\"\"\"\n\t}\n\telse\n\t\t\"\"\"\n\t\tprintf \"${params.trunclenf},${params.trunclenr}\"\n\t\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_csv_demux"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_dada_trunc"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [],
        "when": "!params.untilQ2import",
        "stub": ""
    },
    "dada_single": {
        "name_process": "dada_single",
        "string_process": "\tprocess dada_single {\n\t\ttag \"$trunc\"\n\t\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\t\tsaveAs: {filename -> \n\t\t\t\t\t if (filename.indexOf(\"stats.tsv\") > 0)                     \"abundance_table/unfiltered/dada_stats.tsv\"\n\t\t\t\telse if (filename.indexOf(\"dada_report.txt\") == 0)              \"abundance_table/unfiltered/dada_report.txt\"\n\t\t\t\telse if (filename.indexOf(\"table.qza\") == 0)                    \"abundance_table/unfiltered/$filename\"\n\t\t\t\telse if (filename.indexOf(\"rel-table/feature-table.biom\") == 0) \"abundance_table/unfiltered/rel-feature-table.biom\"\n\t\t\t\telse if (filename.indexOf(\"table/feature-table.biom\") == 0)     \"abundance_table/unfiltered/feature-table.biom\"\n\t\t\t\telse if (filename.indexOf(\"rel-feature-table.tsv\") > 0)         \"abundance_table/unfiltered/rel-feature-table.tsv\"\n\t\t\t\telse if (filename.indexOf(\"feature-table.tsv\") > 0)             \"abundance_table/unfiltered/feature-table.tsv\"\n\t\t\t\telse if (filename.indexOf(\"rep-seqs.qza\") == 0)                 \"representative_sequences/unfiltered/rep-seqs.qza\"\n\t\t\t\telse if (filename.indexOf(\"unfiltered/*\"))                      \"representative_sequences/$filename\"\n\t\t\t\telse null}\n\n\t\tinput:\n\t\tfile demux from ch_qiime_demux_dada\n\t\tval trunc from ch_dada_trunc\n\t\tenv MATPLOTLIBRC from ch_mpl_dada\n\n\t\toutput:\n\t\tfile(\"table.qza\") into ch_qiime_table_raw\n\t\tfile(\"rep-seqs.qza\") into (ch_qiime_repseq_raw_for_classifier,ch_qiime_repseq_raw_for_filter)\n\t\tfile(\"table/feature-table.tsv\") into ch_tsv_table_raw\n\t\tfile(\"dada_stats/stats.tsv\")\n\t\tfile(\"table/feature-table.biom\")\n\t\tfile(\"rel-table/feature-table.biom\")\n\t\tfile(\"table/rel-feature-table.tsv\")\n\t\tfile(\"unfiltered/*\")\n\t\tfile(\"dada_report.txt\")\n\n\t\twhen:\n\t\t!params.untilQ2import\n\n\t\tscript:\n\t\tdef values = trunc.split(',')\n\t\tif (values[0].toInteger() + values[1].toInteger() <= 10) { \n\t\t\tlog.info \"\\n######## ERROR: Total read pair length is below 10, this is definitely too low.\\nForward ${values[0]} and reverse ${values[1]} are chosen.\\nPlease provide appropriate values for --trunclenf and --trunclenr or lower --trunc_qmin\\n\" }\n\t\t\"\"\"\n\t\tIFS=',' read -r -a trunclen <<< \\\"$trunc\\\"\n\n\t\t#denoise samples with DADA2 and produce\n\t\tqiime dada2 denoise-paired  \\\n\t\t\t--i-demultiplexed-seqs ${demux}  \\\n\t\t\t--p-trunc-len-f \\${trunclen[0]} \\\n\t\t\t--p-trunc-len-r \\${trunclen[1]} \\\n\t\t\t--p-n-threads 0  \\\n\t\t\t--o-table table.qza  \\\n\t\t\t--o-representative-sequences rep-seqs.qza  \\\n\t\t\t--o-denoising-stats stats.qza \\\n\t\t\t--verbose \\\n\t\t>dada_report.txt\n\n\t\t#produce dada2 stats \"dada_stats/stats.tsv\"\n\t\tqiime tools export stats.qza \\\n\t\t\t--output-dir dada_stats\n\n\t\t#produce raw count table in biom format \"table/feature-table.biom\"\n\t\tqiime tools export table.qza  \\\n\t\t\t--output-dir table\n\n\t\t#produce raw count table\n\t\tbiom convert -i table/feature-table.biom \\\n\t\t\t-o table/feature-table.tsv  \\\n\t\t\t--to-tsv\n\n\t\t#produce representative sequence fasta file\n\t\tqiime feature-table tabulate-seqs  \\\n\t\t\t--i-data rep-seqs.qza  \\\n\t\t\t--o-visualization rep-seqs.qzv\n\t\tqiime tools export rep-seqs.qzv  \\\n\t\t\t--output-dir unfiltered\n\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table.qza \\\n\t\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t\t#export to biom\n\t\tqiime tools export relative-table-ASV.qza \\\n\t\t\t--output-dir rel-table\n\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i rel-table/feature-table.biom \\\n\t\t\t-o table/rel-feature-table.tsv --to-tsv\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 86,
        "string_script": "\t\tdef values = trunc.split(',')\n\t\tif (values[0].toInteger() + values[1].toInteger() <= 10) { \n\t\t\tlog.info \"\\n######## ERROR: Total read pair length is below 10, this is definitely too low.\\nForward ${values[0]} and reverse ${values[1]} are chosen.\\nPlease provide appropriate values for --trunclenf and --trunclenr or lower --trunc_qmin\\n\" }\n\t\t\"\"\"\n\t\tIFS=',' read -r -a trunclen <<< \\\"$trunc\\\"\n\n\t\t#denoise samples with DADA2 and produce\n\t\tqiime dada2 denoise-paired  \\\n\t\t\t--i-demultiplexed-seqs ${demux}  \\\n\t\t\t--p-trunc-len-f \\${trunclen[0]} \\\n\t\t\t--p-trunc-len-r \\${trunclen[1]} \\\n\t\t\t--p-n-threads 0  \\\n\t\t\t--o-table table.qza  \\\n\t\t\t--o-representative-sequences rep-seqs.qza  \\\n\t\t\t--o-denoising-stats stats.qza \\\n\t\t\t--verbose \\\n\t\t>dada_report.txt\n\n\t\t#produce dada2 stats \"dada_stats/stats.tsv\"\n\t\tqiime tools export stats.qza \\\n\t\t\t--output-dir dada_stats\n\n\t\t#produce raw count table in biom format \"table/feature-table.biom\"\n\t\tqiime tools export table.qza  \\\n\t\t\t--output-dir table\n\n\t\t#produce raw count table\n\t\tbiom convert -i table/feature-table.biom \\\n\t\t\t-o table/feature-table.tsv  \\\n\t\t\t--to-tsv\n\n\t\t#produce representative sequence fasta file\n\t\tqiime feature-table tabulate-seqs  \\\n\t\t\t--i-data rep-seqs.qza  \\\n\t\t\t--o-visualization rep-seqs.qzv\n\t\tqiime tools export rep-seqs.qzv  \\\n\t\t\t--output-dir unfiltered\n\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table.qza \\\n\t\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t\t#export to biom\n\t\tqiime tools export relative-table-ASV.qza \\\n\t\t\t--output-dir rel-table\n\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i rel-table/feature-table.biom \\\n\t\t\t-o table/rel-feature-table.tsv --to-tsv\n\t\t\"\"\"",
        "nb_lignes_script": 51,
        "language_script": "bash",
        "tools": [
            "QIIME",
            "BioMe"
        ],
        "tools_url": [
            "https://bio.tools/qiime",
            "https://bio.tools/biome"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            },
            {
                "name": "BioMe",
                "uri": "https://bio.tools/biome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Protein-metal contact calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1831",
                                    "term": "Metal-bound cysteine detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Residue-metal contact calculation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biologically Relevant Metals (BioMe) is a web based platform for calculation of various statistical properties of metal binding sites including distribution of coordinate geometry and other descriptive statistics for a metal ion. The underlying database contains for each metal ion: PDB code, structure determination method, types of metal binding chains and names and coordinates of bound ligands, among other details.",
                "homepage": "http://metals.zesoi.fer.hr"
            }
        ],
        "inputs": [
            "ch_qiime_demux_dada",
            "ch_dada_trunc",
            "ch_mpl_dada"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_qiime_table_raw",
            "",
            "ch_tsv_table_raw"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"$trunc\"",
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"stats.tsv\") > 0) \"abundance_table/unfiltered/dada_stats.tsv\" else if (filename.indexOf(\"dada_report.txt\") == 0) \"abundance_table/unfiltered/dada_report.txt\" else if (filename.indexOf(\"table.qza\") == 0) \"abundance_table/unfiltered/$filename\" else if (filename.indexOf(\"rel-table/feature-table.biom\") == 0) \"abundance_table/unfiltered/rel-feature-table.biom\" else if (filename.indexOf(\"table/feature-table.biom\") == 0) \"abundance_table/unfiltered/feature-table.biom\" else if (filename.indexOf(\"rel-feature-table.tsv\") > 0) \"abundance_table/unfiltered/rel-feature-table.tsv\" else if (filename.indexOf(\"feature-table.tsv\") > 0) \"abundance_table/unfiltered/feature-table.tsv\" else if (filename.indexOf(\"rep-seqs.qza\") == 0) \"representative_sequences/unfiltered/rep-seqs.qza\" else if (filename.indexOf(\"unfiltered/*\")) \"representative_sequences/$filename\" else null}"
        ],
        "when": "!params.untilQ2import",
        "stub": ""
    },
    "dada_multi": {
        "name_process": "dada_multi",
        "string_process": "\tprocess dada_multi {\n\t\ttag \"${demux.baseName} ${trunclenf} ${trunclenr}\"\n\n\t\tinput:\n\t\tset file(demux), val(trunclenf), val(trunclenr), env(MATPLOTLIBRC) from ch_dada_multi\n\n\t\toutput:\n\t\tfile(\"${demux.baseName}-table.qza\") into ch_qiime_table\n\t\tfile(\"${demux.baseName}-rep-seqs.qza\") into ch_qiime_repseq\n\t\tfile(\"${demux.baseName}-stats.tsv\") into ch_dada_stats\n\t\tfile(\"${demux.baseName}-report.txt\") into ch_dada_reports\n\n\t\twhen:\n\t\t!params.untilQ2import\n\n\t\tscript:\n\t\tif (trunclenf.toInteger() + trunclenr.toInteger() <= 10) { \n\t\t\tlog.info \"\\n######## ERROR: Total read pair length is below 10, this is definitely too low.\\nForward ${trunclenf} and reverse ${trunclenr} are chosen.\\nPlease provide appropriate values for --trunclenf and --trunclenr or lower --trunc_qmin\\n\" }\n\t\t\"\"\"\n\t\t#denoise samples with DADA2 and produce\n\t\tqiime dada2 denoise-paired  \\\n\t\t\t--i-demultiplexed-seqs ${demux}  \\\n\t\t\t--p-trunc-len-f ${trunclenf} \\\n\t\t\t--p-trunc-len-r ${trunclenr} \\\n\t\t\t--p-n-threads 0  \\\n\t\t\t--o-table ${demux.baseName}-table.qza  \\\n\t\t\t--o-representative-sequences ${demux.baseName}-rep-seqs.qza  \\\n\t\t\t--o-denoising-stats ${demux.baseName}-stats.qza \\\n\t\t\t--verbose \\\n\t\t\t>${demux.baseName}-report.txt\n\n\t\t#produce dada2 stats \"${demux.baseName}-dada_stats/stats.tsv\"\n\t\tqiime tools export ${demux.baseName}-stats.qza \\\n\t\t\t--output-dir ${demux.baseName}-dada_stats\n\t\tcp ${demux.baseName}-dada_stats/stats.tsv ${demux.baseName}-stats.tsv\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 35,
        "string_script": "\t\tif (trunclenf.toInteger() + trunclenr.toInteger() <= 10) { \n\t\t\tlog.info \"\\n######## ERROR: Total read pair length is below 10, this is definitely too low.\\nForward ${trunclenf} and reverse ${trunclenr} are chosen.\\nPlease provide appropriate values for --trunclenf and --trunclenr or lower --trunc_qmin\\n\" }\n\t\t\"\"\"\n\t\t#denoise samples with DADA2 and produce\n\t\tqiime dada2 denoise-paired  \\\n\t\t\t--i-demultiplexed-seqs ${demux}  \\\n\t\t\t--p-trunc-len-f ${trunclenf} \\\n\t\t\t--p-trunc-len-r ${trunclenr} \\\n\t\t\t--p-n-threads 0  \\\n\t\t\t--o-table ${demux.baseName}-table.qza  \\\n\t\t\t--o-representative-sequences ${demux.baseName}-rep-seqs.qza  \\\n\t\t\t--o-denoising-stats ${demux.baseName}-stats.qza \\\n\t\t\t--verbose \\\n\t\t\t>${demux.baseName}-report.txt\n\n\t\t#produce dada2 stats \"${demux.baseName}-dada_stats/stats.tsv\"\n\t\tqiime tools export ${demux.baseName}-stats.qza \\\n\t\t\t--output-dir ${demux.baseName}-dada_stats\n\t\tcp ${demux.baseName}-dada_stats/stats.tsv ${demux.baseName}-stats.tsv\n\t\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_dada_multi"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_qiime_table",
            "ch_qiime_repseq",
            "ch_dada_stats",
            "ch_dada_reports"
        ],
        "nb_outputs": 4,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${demux.baseName} ${trunclenf} ${trunclenr}\""
        ],
        "when": "!params.untilQ2import",
        "stub": ""
    },
    "dada_merge": {
        "name_process": "dada_merge",
        "string_process": "\tprocess dada_merge {\n\t\ttag \"${tables}\"\n\t\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\t\tsaveAs: {filename -> \n\t\t\t\t\t if (filename.indexOf(\"stats.tsv\") == 0)                    \"abundance_table/unfiltered/dada_stats.tsv\"\n\t\t\t\telse if (filename.indexOf(\"dada_report.txt\") == 0)              \"abundance_table/unfiltered/dada_report.txt\"\n\t\t\t\telse if (filename.indexOf(\"table.qza\") == 0)                    \"abundance_table/unfiltered/$filename\"\n\t\t\t\telse if (filename.indexOf(\"rel-table/feature-table.biom\") == 0) \"abundance_table/unfiltered/rel-feature-table.biom\"\n\t\t\t\telse if (filename.indexOf(\"table/feature-table.biom\") == 0)     \"abundance_table/unfiltered/feature-table.biom\"\n\t\t\t\telse if (filename.indexOf(\"rel-feature-table.tsv\") > 0)         \"abundance_table/unfiltered/rel-feature-table.tsv\"\n\t\t\t\telse if (filename.indexOf(\"feature-table.tsv\") > 0)             \"abundance_table/unfiltered/feature-table.tsv\"\n\t\t\t\telse if (filename.indexOf(\"rep-seqs.qza\") == 0)                 \"representative_sequences/unfiltered/rep-seqs.qza\"\n\t\t\t\telse if (filename.indexOf(\"unfiltered/*\"))                      \"representative_sequences/$filename\"\n\t\t\t\telse null}\n\n\t\tinput:\n\t\tfile tables from ch_qiime_table.collect()\n\t\tfile repseqs from ch_qiime_repseq.collect()\n\t\tfile stats from ch_dada_stats.collect()\n\t\tfile reports from ch_dada_reports.collect()\n\t\tenv MATPLOTLIBRC from ch_mpl_dada_merge\n\n\t\toutput:\n\t\tfile(\"table.qza\") into ch_qiime_table_raw\n\t\tfile(\"rep-seqs.qza\") into (ch_qiime_repseq_raw_for_classifier,ch_qiime_repseq_raw_for_filter)\n\t\tfile(\"table/feature-table.tsv\") into ch_tsv_table_raw\n\t\tfile(\"stats.tsv\")\n\t\tfile(\"table/feature-table.biom\")\n\t\tfile(\"rel-table/feature-table.biom\")\n\t\tfile(\"table/rel-feature-table.tsv\")\n\t\tfile(\"unfiltered/*\")\n\t\tfile(\"dada_report.txt\")\n\n\t\twhen:\n\t\t!params.untilQ2import\n\n\t\tscript:\n\t\tdef TABLES = ''\n\t\tdef REPSEQ = ''\n\t\tdef STAT = ''\n\t\tdef REPORT = ''\n\t\tfor (table in tables) { TABLES+= \" --i-tables ${table}\" }\n\t\tfor (repseq in repseqs) { REPSEQ+= \" --i-data ${repseq}\" }\n\t\tfor (stat in stats) { STAT+= \" $stat\" }\n\t\tfor (report in reports) { REPORT+= \" $report\" }\n\t\t\"\"\"\n\t\t#concatenate tables\n\t\t#merge files\n\t\tqiime feature-table merge \\\n\t\t\t${TABLES} \\\n\t\t\t--o-merged-table table.qza \\\n\t\t\t--quiet\n\t\tqiime feature-table merge-seqs \\\n\t\t\t${REPSEQ} \\\n\t\t\t--o-merged-data rep-seqs.qza \\\n\t\t\t--quiet\n\t\tcat ${STAT} >stats.tsv\n\t\tcat ${REPORT} >dada_report.txt\n\n\t\t#produce raw count table in biom format \"table/feature-table.biom\"\n\t\tqiime tools export table.qza  \\\n\t\t\t--output-dir table\n\n\t\t#produce raw count table\n\t\tbiom convert -i table/feature-table.biom \\\n\t\t\t-o table/feature-table.tsv  \\\n\t\t\t--to-tsv\n\n\t\t#produce representative sequence fasta file\n\t\tqiime feature-table tabulate-seqs  \\\n\t\t\t--i-data rep-seqs.qza  \\\n\t\t\t--o-visualization rep-seqs.qzv\n\t\tqiime tools export rep-seqs.qzv  \\\n\t\t\t--output-dir unfiltered\n\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table.qza \\\n\t\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t\t#export to biom\n\t\tqiime tools export relative-table-ASV.qza \\\n\t\t\t--output-dir rel-table\n\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i rel-table/feature-table.biom \\\n\t\t\t-o table/rel-feature-table.tsv --to-tsv\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 88,
        "string_script": "\t\tdef TABLES = ''\n\t\tdef REPSEQ = ''\n\t\tdef STAT = ''\n\t\tdef REPORT = ''\n\t\tfor (table in tables) { TABLES+= \" --i-tables ${table}\" }\n\t\tfor (repseq in repseqs) { REPSEQ+= \" --i-data ${repseq}\" }\n\t\tfor (stat in stats) { STAT+= \" $stat\" }\n\t\tfor (report in reports) { REPORT+= \" $report\" }\n\t\t\"\"\"\n\t\t#concatenate tables\n\t\t#merge files\n\t\tqiime feature-table merge \\\n\t\t\t${TABLES} \\\n\t\t\t--o-merged-table table.qza \\\n\t\t\t--quiet\n\t\tqiime feature-table merge-seqs \\\n\t\t\t${REPSEQ} \\\n\t\t\t--o-merged-data rep-seqs.qza \\\n\t\t\t--quiet\n\t\tcat ${STAT} >stats.tsv\n\t\tcat ${REPORT} >dada_report.txt\n\n\t\t#produce raw count table in biom format \"table/feature-table.biom\"\n\t\tqiime tools export table.qza  \\\n\t\t\t--output-dir table\n\n\t\t#produce raw count table\n\t\tbiom convert -i table/feature-table.biom \\\n\t\t\t-o table/feature-table.tsv  \\\n\t\t\t--to-tsv\n\n\t\t#produce representative sequence fasta file\n\t\tqiime feature-table tabulate-seqs  \\\n\t\t\t--i-data rep-seqs.qza  \\\n\t\t\t--o-visualization rep-seqs.qzv\n\t\tqiime tools export rep-seqs.qzv  \\\n\t\t\t--output-dir unfiltered\n\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table.qza \\\n\t\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t\t#export to biom\n\t\tqiime tools export relative-table-ASV.qza \\\n\t\t\t--output-dir rel-table\n\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i rel-table/feature-table.biom \\\n\t\t\t-o table/rel-feature-table.tsv --to-tsv\n\t\t\"\"\"",
        "nb_lignes_script": 51,
        "language_script": "bash",
        "tools": [
            "QIIME",
            "BioMe"
        ],
        "tools_url": [
            "https://bio.tools/qiime",
            "https://bio.tools/biome"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            },
            {
                "name": "BioMe",
                "uri": "https://bio.tools/biome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Protein-metal contact calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1831",
                                    "term": "Metal-bound cysteine detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Residue-metal contact calculation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biologically Relevant Metals (BioMe) is a web based platform for calculation of various statistical properties of metal binding sites including distribution of coordinate geometry and other descriptive statistics for a metal ion. The underlying database contains for each metal ion: PDB code, structure determination method, types of metal binding chains and names and coordinates of bound ligands, among other details.",
                "homepage": "http://metals.zesoi.fer.hr"
            }
        ],
        "inputs": [
            "ch_qiime_table",
            "ch_qiime_repseq",
            "ch_dada_stats",
            "ch_dada_reports",
            "ch_mpl_dada_merge"
        ],
        "nb_inputs": 5,
        "outputs": [
            "ch_qiime_table_raw",
            "",
            "ch_tsv_table_raw"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${tables}\"",
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"stats.tsv\") == 0) \"abundance_table/unfiltered/dada_stats.tsv\" else if (filename.indexOf(\"dada_report.txt\") == 0) \"abundance_table/unfiltered/dada_report.txt\" else if (filename.indexOf(\"table.qza\") == 0) \"abundance_table/unfiltered/$filename\" else if (filename.indexOf(\"rel-table/feature-table.biom\") == 0) \"abundance_table/unfiltered/rel-feature-table.biom\" else if (filename.indexOf(\"table/feature-table.biom\") == 0) \"abundance_table/unfiltered/feature-table.biom\" else if (filename.indexOf(\"rel-feature-table.tsv\") > 0) \"abundance_table/unfiltered/rel-feature-table.tsv\" else if (filename.indexOf(\"feature-table.tsv\") > 0) \"abundance_table/unfiltered/feature-table.tsv\" else if (filename.indexOf(\"rep-seqs.qza\") == 0) \"representative_sequences/unfiltered/rep-seqs.qza\" else if (filename.indexOf(\"unfiltered/*\")) \"representative_sequences/$filename\" else null}"
        ],
        "when": "!params.untilQ2import",
        "stub": ""
    },
    "classifier": {
        "name_process": "classifier",
        "string_process": "\nprocess classifier { \n\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\tsaveAs: {filename -> \n\t\t\tif (filename == \"taxonomy/taxonomy.tsv\") filename\n\t\t\telse if (filename == \"taxonomy.qza\") \"taxonomy/$filename\"}\n\n\tinput:\n\tfile repseq from ch_qiime_repseq_raw_for_classifier\n\tfile trained_classifier from ch_qiime_classifier\n\tenv MATPLOTLIBRC from ch_mpl_classifier\n\n\toutput:\n\tfile(\"taxonomy.qza\") into (ch_qiime_taxonomy_for_filter,ch_qiime_taxonomy_for_relative_abundance_reduced_taxa,ch_qiime_taxonomy_for_barplot,ch_qiime_taxonomy_for_ancom)\n\tfile(\"taxonomy/taxonomy.tsv\") into ch_tsv_taxonomy\n\n  \n\t\"\"\"\n\tqiime feature-classifier classify-sklearn  \\\n\t\t--i-classifier ${trained_classifier}  \\\n\t\t--p-n-jobs ${task.cpus}  \\\n\t\t--i-reads ${repseq}  \\\n\t\t--o-classification taxonomy.qza  \\\n\t\t--verbose\n\n\tqiime metadata tabulate  \\\n\t\t--m-input-file taxonomy.qza  \\\n\t\t--o-visualization taxonomy.qzv  \\\n\t\t--verbose\n\n\t#produce \"taxonomy/taxonomy.tsv\"\n\tqiime tools export taxonomy.qza  \\\n\t\t--output-dir taxonomy\n\n\tqiime tools export taxonomy.qzv  \\\n\t\t--output-dir taxonomy\n\t\"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "\"\"\"\n\tqiime feature-classifier classify-sklearn  \\\n\t\t--i-classifier ${trained_classifier}  \\\n\t\t--p-n-jobs ${task.cpus}  \\\n\t\t--i-reads ${repseq}  \\\n\t\t--o-classification taxonomy.qza  \\\n\t\t--verbose\n\n\tqiime metadata tabulate  \\\n\t\t--m-input-file taxonomy.qza  \\\n\t\t--o-visualization taxonomy.qzv  \\\n\t\t--verbose\n\n\t#produce \"taxonomy/taxonomy.tsv\"\n\tqiime tools export taxonomy.qza  \\\n\t\t--output-dir taxonomy\n\n\tqiime tools export taxonomy.qzv  \\\n\t\t--output-dir taxonomy\n\t\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_qiime_repseq_raw_for_classifier",
            "ch_qiime_classifier",
            "ch_mpl_classifier"
        ],
        "nb_inputs": 3,
        "outputs": [
            "",
            "ch_tsv_taxonomy"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename == \"taxonomy/taxonomy.tsv\") filename else if (filename == \"taxonomy.qza\") \"taxonomy/$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "filter_taxa": {
        "name_process": "filter_taxa",
        "string_process": "\tprocess filter_taxa {\n\t\ttag \"taxa:${params.exclude_taxa};min-freq:${params.min_frequency};min-samples:${params.min_samples}\"\n\n\t\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\tsaveAs: {filename -> \n\t\t\t\t if (filename.indexOf(\"filtered-table.qza\") == 0)      \"abundance_table/filtered/table.qza\"\n\t\t\telse if (filename.indexOf(\"filtered-sequences.qza\") == 0)  \"representative_sequences/filtered/rep-seqs.qza\"\n\t\t\telse null}  \n\n\t\tinput:\n\t\tfile table from ch_qiime_table_raw\n\t\tfile repseq from  ch_qiime_repseq_raw_for_filter\n\t\tfile taxonomy from ch_qiime_taxonomy_for_filter\n\t\tenv MATPLOTLIBRC from ch_mpl_filter_taxa\n\n\t\toutput:\n\t\tfile(\"filtered-table.qza\") into (ch_qiime_table_for_filtered_dada_output, ch_qiime_table_for_relative_abundance_asv,ch_qiime_table_for_relative_abundance_reduced_taxa,ch_qiime_table_for_ancom,ch_qiime_table_for_barplot,ch_qiime_table_for_alpha_rarefaction, ch_qiime_table_for_diversity_core)\n\t\tfile(\"filtered-sequences.qza\") into (ch_qiime_repseq_for_dada_output,ch_qiime_repseq_for_tree)\n\n\t\tscript:\n\t\tif ( \"${params.min_frequency}\" == \"false\" ) { minfrequency = 1 } else { minfrequency = \"${params.min_frequency}\" }\n\t\tif ( \"${params.min_samples}\" == \"false\" ) { minsamples = 1 } else { minsamples = \"${params.min_samples}\" }\n\t\t                                                                                                                                       \n\t\t\"\"\"\n\t\tif ! [ \\\"${params.exclude_taxa}\\\" = \\\"none\\\" ]; then\n\t\t\t#filter sequences\n\t\t\tqiime taxa filter-seqs \\\n\t\t\t\t--i-sequences ${repseq} \\\n\t\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t\t--p-exclude ${params.exclude_taxa} --p-mode contains \\\n\t\t\t\t--o-filtered-sequences tax_filtered-sequences.qza\n\n\t\t\t#filter abundance table\n\t\t\tqiime taxa filter-table \\\n\t\t\t\t--i-table ${table} \\\n\t\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t\t--p-exclude ${params.exclude_taxa} --p-mode contains \\\n\t\t\t\t--o-filtered-table tax_filtered-table.qza\n\n\t\t\tfiltered_table=\"tax_filtered-table.qza\"\n\t\t\tfiltered_sequences=\"tax_filtered-sequences.qza\"\n\t\telse\n\t\t\tfiltered_table=${table}\n\t\t\tfiltered_sequences=${repseq}\n\t\tfi\n\n\t\tqiime feature-table filter-features \\\n\t\t\t--i-table \\$filtered_table \\\n\t\t\t--p-min-frequency ${minfrequency} \\\n\t\t\t--p-min-samples ${minsamples} \\\n\t\t\t--o-filtered-table filtered-table.qza\n\t\t\n\t\tqiime feature-table filter-seqs \\\n\t\t\t--i-data \\$filtered_sequences \\\n\t\t\t--i-table filtered-table.qza \\\n\t\t\t--o-filtered-data filtered-sequences.qza\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 56,
        "string_script": "\t\tif ( \"${params.min_frequency}\" == \"false\" ) { minfrequency = 1 } else { minfrequency = \"${params.min_frequency}\" }\n\t\tif ( \"${params.min_samples}\" == \"false\" ) { minsamples = 1 } else { minsamples = \"${params.min_samples}\" }\n\t\t                                                                                                                                       \n\t\t\"\"\"\n\t\tif ! [ \\\"${params.exclude_taxa}\\\" = \\\"none\\\" ]; then\n\t\t\t#filter sequences\n\t\t\tqiime taxa filter-seqs \\\n\t\t\t\t--i-sequences ${repseq} \\\n\t\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t\t--p-exclude ${params.exclude_taxa} --p-mode contains \\\n\t\t\t\t--o-filtered-sequences tax_filtered-sequences.qza\n\n\t\t\t#filter abundance table\n\t\t\tqiime taxa filter-table \\\n\t\t\t\t--i-table ${table} \\\n\t\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t\t--p-exclude ${params.exclude_taxa} --p-mode contains \\\n\t\t\t\t--o-filtered-table tax_filtered-table.qza\n\n\t\t\tfiltered_table=\"tax_filtered-table.qza\"\n\t\t\tfiltered_sequences=\"tax_filtered-sequences.qza\"\n\t\telse\n\t\t\tfiltered_table=${table}\n\t\t\tfiltered_sequences=${repseq}\n\t\tfi\n\n\t\tqiime feature-table filter-features \\\n\t\t\t--i-table \\$filtered_table \\\n\t\t\t--p-min-frequency ${minfrequency} \\\n\t\t\t--p-min-samples ${minsamples} \\\n\t\t\t--o-filtered-table filtered-table.qza\n\t\t\n\t\tqiime feature-table filter-seqs \\\n\t\t\t--i-data \\$filtered_sequences \\\n\t\t\t--i-table filtered-table.qza \\\n\t\t\t--o-filtered-data filtered-sequences.qza\n\t\t\"\"\"",
        "nb_lignes_script": 36,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_qiime_table_raw",
            "ch_qiime_repseq_raw_for_filter",
            "ch_qiime_taxonomy_for_filter",
            "ch_mpl_filter_taxa"
        ],
        "nb_inputs": 4,
        "outputs": [
            "",
            ""
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"taxa:${params.exclude_taxa};min-freq:${params.min_frequency};min-samples:${params.min_samples}\"",
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"filtered-table.qza\") == 0) \"abundance_table/filtered/table.qza\" else if (filename.indexOf(\"filtered-sequences.qza\") == 0) \"representative_sequences/filtered/rep-seqs.qza\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "export_filtered_dada_output": {
        "name_process": "export_filtered_dada_output",
        "string_process": "\nprocess export_filtered_dada_output { \n\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\tsaveAs: {filename -> \n\t\t\t\t if (filename.indexOf(\"table/feature-table.biom\") == 0)  \"abundance_table/filtered/feature-table.biom\"\n\t\t\telse if (filename.indexOf(\"table/feature-table.tsv\") == 0)   \"abundance_table/filtered/feature-table.tsv\"\n\t\t\telse if (filename.indexOf(\"filtered/*\"))                     \"representative_sequences/$filename\"\n\t\t\telse null}   \n\n\tinput:\n\tfile table from ch_qiime_table_for_filtered_dada_output\n\tfile repseq from ch_qiime_repseq_for_dada_output\n\tenv MATPLOTLIBRC from ch_mpl_for_export_dada_output\n\n\toutput:\n\tfile(\"filtered/sequences.fasta\") into ch_fasta_repseq\n\tfile(\"table/feature-table.tsv\") into (ch_tsv_table_for_alpha_rarefaction,ch_tsv_table_for_report_filter_stats,ch_tsv_table_for_diversity_core)\n\tfile(\"table/feature-table.biom\")\n\tfile(\"filtered/*\")\n\n\t\"\"\"\n\t#produce raw count table in biom format \"table/feature-table.biom\"\n\tqiime tools export ${table}  \\\n\t\t--output-dir table\n\n\t#produce raw count table \"table/feature-table.tsv\"\n\tbiom convert -i table/feature-table.biom \\\n\t\t-o table/feature-table.tsv  \\\n\t\t--to-tsv\n\n\t#produce representative sequence fasta file \"${params.outdir}/representative_sequences/sequences.fasta\"\n\tqiime feature-table tabulate-seqs  \\\n\t\t--i-data ${repseq}  \\\n\t\t--o-visualization rep-seqs.qzv\n\tqiime tools export rep-seqs.qzv  \\\n\t\t--output-dir filtered\n\t\"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "\"\"\"\n\t#produce raw count table in biom format \"table/feature-table.biom\"\n\tqiime tools export ${table}  \\\n\t\t--output-dir table\n\n\t#produce raw count table \"table/feature-table.tsv\"\n\tbiom convert -i table/feature-table.biom \\\n\t\t-o table/feature-table.tsv  \\\n\t\t--to-tsv\n\n\t#produce representative sequence fasta file \"${params.outdir}/representative_sequences/sequences.fasta\"\n\tqiime feature-table tabulate-seqs  \\\n\t\t--i-data ${repseq}  \\\n\t\t--o-visualization rep-seqs.qzv\n\tqiime tools export rep-seqs.qzv  \\\n\t\t--output-dir filtered\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "QIIME",
            "BioMe"
        ],
        "tools_url": [
            "https://bio.tools/qiime",
            "https://bio.tools/biome"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            },
            {
                "name": "BioMe",
                "uri": "https://bio.tools/biome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Protein-metal contact calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1831",
                                    "term": "Metal-bound cysteine detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Residue-metal contact calculation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biologically Relevant Metals (BioMe) is a web based platform for calculation of various statistical properties of metal binding sites including distribution of coordinate geometry and other descriptive statistics for a metal ion. The underlying database contains for each metal ion: PDB code, structure determination method, types of metal binding chains and names and coordinates of bound ligands, among other details.",
                "homepage": "http://metals.zesoi.fer.hr"
            }
        ],
        "inputs": [
            "ch_qiime_table_for_filtered_dada_output",
            "ch_qiime_repseq_for_dada_output",
            "ch_mpl_for_export_dada_output"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_fasta_repseq",
            ""
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"table/feature-table.biom\") == 0) \"abundance_table/filtered/feature-table.biom\" else if (filename.indexOf(\"table/feature-table.tsv\") == 0) \"abundance_table/filtered/feature-table.tsv\" else if (filename.indexOf(\"filtered/*\")) \"representative_sequences/$filename\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "report_filter_stats": {
        "name_process": "report_filter_stats",
        "string_process": "\nprocess report_filter_stats { \n\tpublishDir \"${params.outdir}/abundance_table/filtered\", mode: 'copy'     \n\n\tinput:\n\tfile 'unfiltered_table' from ch_tsv_table_raw\n\tfile 'filtered_table' from ch_tsv_table_for_report_filter_stats\n\n\toutput:\n\tfile(\"count_table_filter_stats.tsv\")\n\t\n\t\"\"\"\n\tcount_table_filter_stats.py unfiltered_table filtered_table\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n\tcount_table_filter_stats.py unfiltered_table filtered_table\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_tsv_table_raw",
            "ch_tsv_table_for_report_filter_stats"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/abundance_table/filtered\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "RelativeAbundanceASV": {
        "name_process": "RelativeAbundanceASV",
        "string_process": "\nprocess RelativeAbundanceASV { \n\tpublishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'    \n\n\tinput:\n\tfile table from ch_qiime_table_for_relative_abundance_asv\n\tenv MATPLOTLIBRC from ch_mpl_for_relasv\n\n\toutput:\n\tfile(\"rel-table-ASV.tsv\") into ch_tsv_relASV_table\n\n\twhen:\n\t!params.skip_abundance_tables\n\n\t\"\"\"\n\t#convert to relative abundances\n\tqiime feature-table relative-frequency \\\n\t\t--i-table ${table} \\\n\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t#export to biom\n\tqiime tools export relative-table-ASV.qza --output-dir relative-table-ASV\n\n\t#convert to tab separated text file \"${params.outdir}/rel-table-ASV.tsv\"\n\tbiom convert -i relative-table-ASV/feature-table.biom \\\n\t\t-o rel-table-ASV.tsv --to-tsv\n\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n\t#convert to relative abundances\n\tqiime feature-table relative-frequency \\\n\t\t--i-table ${table} \\\n\t\t--o-relative-frequency-table relative-table-ASV.qza\n\n\t#export to biom\n\tqiime tools export relative-table-ASV.qza --output-dir relative-table-ASV\n\n\t#convert to tab separated text file \"${params.outdir}/rel-table-ASV.tsv\"\n\tbiom convert -i relative-table-ASV/feature-table.biom \\\n\t\t-o rel-table-ASV.tsv --to-tsv\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "QIIME",
            "BioMe"
        ],
        "tools_url": [
            "https://bio.tools/qiime",
            "https://bio.tools/biome"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            },
            {
                "name": "BioMe",
                "uri": "https://bio.tools/biome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Protein-metal contact calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1831",
                                    "term": "Metal-bound cysteine detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Residue-metal contact calculation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biologically Relevant Metals (BioMe) is a web based platform for calculation of various statistical properties of metal binding sites including distribution of coordinate geometry and other descriptive statistics for a metal ion. The underlying database contains for each metal ion: PDB code, structure determination method, types of metal binding chains and names and coordinates of bound ligands, among other details.",
                "homepage": "http://metals.zesoi.fer.hr"
            }
        ],
        "inputs": [
            "ch_qiime_table_for_relative_abundance_asv",
            "ch_mpl_for_relasv"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_tsv_relASV_table"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'"
        ],
        "when": "!params.skip_abundance_tables",
        "stub": ""
    },
    "RelativeAbundanceReducedTaxa": {
        "name_process": "RelativeAbundanceReducedTaxa",
        "string_process": "\nprocess RelativeAbundanceReducedTaxa { \n\tpublishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'    \n\n\tinput:\n\tfile table from ch_qiime_table_for_relative_abundance_reduced_taxa\n\tfile taxonomy from ch_qiime_taxonomy_for_relative_abundance_reduced_taxa\n\tenv MATPLOTLIBRC from ch_mpl_for_relreducetaxa\n\n\toutput:\n\tfile(\"*.tsv\")\n\n\twhen:\n\t!params.skip_abundance_tables && !params.skip_taxonomy\n\n\t\"\"\"\n\t##on several taxa level\n\n\tarray=( 2 3 4 5 6 7 )\n\tfor i in \\${array[@]}\n\tdo\n\t\t#collapse taxa\n\t\tqiime taxa collapse \\\n\t\t\t--i-table ${table} \\\n\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t--p-level \\$i \\\n\t\t\t--o-collapsed-table table-\\$i.qza\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table-\\$i.qza \\\n\t\t\t--o-relative-frequency-table relative-table-\\$i.qza\n\t\t#export to biom\n\t\tqiime tools export relative-table-\\$i.qza \\\n\t\t\t--output-dir relative-table-\\$i\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i relative-table-\\$i/feature-table.biom \\\n\t\t\t-o rel-table-\\$i.tsv --to-tsv\n\tdone\n\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\"\"\"\n\t##on several taxa level\n\n\tarray=( 2 3 4 5 6 7 )\n\tfor i in \\${array[@]}\n\tdo\n\t\t#collapse taxa\n\t\tqiime taxa collapse \\\n\t\t\t--i-table ${table} \\\n\t\t\t--i-taxonomy ${taxonomy} \\\n\t\t\t--p-level \\$i \\\n\t\t\t--o-collapsed-table table-\\$i.qza\n\t\t#convert to relative abundances\n\t\tqiime feature-table relative-frequency \\\n\t\t\t--i-table table-\\$i.qza \\\n\t\t\t--o-relative-frequency-table relative-table-\\$i.qza\n\t\t#export to biom\n\t\tqiime tools export relative-table-\\$i.qza \\\n\t\t\t--output-dir relative-table-\\$i\n\t\t#convert to tab separated text file\n\t\tbiom convert \\\n\t\t\t-i relative-table-\\$i/feature-table.biom \\\n\t\t\t-o rel-table-\\$i.tsv --to-tsv\n\tdone\n\n\t\"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "QIIME",
            "BioMe"
        ],
        "tools_url": [
            "https://bio.tools/qiime",
            "https://bio.tools/biome"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            },
            {
                "name": "BioMe",
                "uri": "https://bio.tools/biome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Protein-metal contact calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1831",
                                    "term": "Metal-bound cysteine detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2950",
                                    "term": "Residue distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0249",
                                    "term": "Protein geometry calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1834",
                                    "term": "Residue-metal contact calculation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biologically Relevant Metals (BioMe) is a web based platform for calculation of various statistical properties of metal binding sites including distribution of coordinate geometry and other descriptive statistics for a metal ion. The underlying database contains for each metal ion: PDB code, structure determination method, types of metal binding chains and names and coordinates of bound ligands, among other details.",
                "homepage": "http://metals.zesoi.fer.hr"
            }
        ],
        "inputs": [
            "ch_qiime_table_for_relative_abundance_reduced_taxa",
            "ch_qiime_taxonomy_for_relative_abundance_reduced_taxa",
            "ch_mpl_for_relreducetaxa"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'"
        ],
        "when": "!params.skip_abundance_tables && !params.skip_taxonomy",
        "stub": ""
    },
    "barplot": {
        "name_process": "barplot",
        "string_process": "\nprocess barplot { \n\tpublishDir \"${params.outdir}\", mode: 'copy'    \n\n\tinput:\n\tfile metadata from ch_metadata_for_barplot\n\tfile table from ch_qiime_table_for_barplot\n\tfile taxonomy from ch_qiime_taxonomy_for_barplot\n\tenv MATPLOTLIBRC from ch_mpl_for_barcode\n\n\toutput:\n\tfile(\"barplot/*\")\n\n\twhen:\n\t!params.skip_barplot && !params.skip_taxonomy\n  \n\t\"\"\"\n\tqiime taxa barplot  \\\n\t\t--i-table ${table}  \\\n\t\t--i-taxonomy ${taxonomy}  \\\n\t\t--m-metadata-file ${metadata}  \\\n\t\t--o-visualization taxa-bar-plots.qzv  \\\n\t\t--verbose\n\n\tqiime tools export taxa-bar-plots.qzv  \\\n\t\t--output-dir barplot\n\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n\tqiime taxa barplot  \\\n\t\t--i-table ${table}  \\\n\t\t--i-taxonomy ${taxonomy}  \\\n\t\t--m-metadata-file ${metadata}  \\\n\t\t--o-visualization taxa-bar-plots.qzv  \\\n\t\t--verbose\n\n\tqiime tools export taxa-bar-plots.qzv  \\\n\t\t--output-dir barplot\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_metadata_for_barplot",
            "ch_qiime_table_for_barplot",
            "ch_qiime_taxonomy_for_barplot",
            "ch_mpl_for_barcode"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "!params.skip_barplot && !params.skip_taxonomy",
        "stub": ""
    },
    "tree": {
        "name_process": "tree",
        "string_process": "\nprocess tree { \n\tpublishDir \"${params.outdir}\", mode: 'copy',\n\t\tsaveAs: {filename -> \n\t\t\tif (filename.indexOf(\"rooted-tree.qza\") == 0)  \"phylogenetic_tree/$filename\"\n\t\t\telse filename }   \n\n\tinput:\n\tfile repseq from ch_qiime_repseq_for_tree\n\tenv MATPLOTLIBRC from ch_mpl_for_tree\n\n\toutput:\n\tfile(\"rooted-tree.qza\") into (ch_qiime_tree_for_diversity_core, ch_qiime_tree_for_alpha_rarefaction)\n\tfile(\"phylogenetic_tree/tree.nwk\")\n\n\twhen:\n\t!params.skip_diversity_indices || !params.skip_alpha_rarefaction\n\n  \n\t\"\"\"\n\tqiime alignment mafft \\\n\t\t--i-sequences ${repseq} \\\n\t\t--o-alignment aligned-rep-seqs.qza \\\n\t\t--p-n-threads ${task.cpus}\n\n\tqiime alignment mask \\\n\t\t--i-alignment aligned-rep-seqs.qza \\\n\t\t--o-masked-alignment masked-aligned-rep-seqs.qza\n\n\tqiime phylogeny fasttree \\\n\t\t--i-alignment masked-aligned-rep-seqs.qza \\\n\t\t--p-n-threads ${task.cpus} \\\n\t\t--o-tree unrooted-tree.qza\n\n\tqiime phylogeny midpoint-root \\\n\t\t--i-tree unrooted-tree.qza \\\n\t\t--o-rooted-tree rooted-tree.qza\n\n\tqiime tools export rooted-tree.qza  \\\n\t\t--output-dir phylogenetic_tree\n\t\"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "\"\"\"\n\tqiime alignment mafft \\\n\t\t--i-sequences ${repseq} \\\n\t\t--o-alignment aligned-rep-seqs.qza \\\n\t\t--p-n-threads ${task.cpus}\n\n\tqiime alignment mask \\\n\t\t--i-alignment aligned-rep-seqs.qza \\\n\t\t--o-masked-alignment masked-aligned-rep-seqs.qza\n\n\tqiime phylogeny fasttree \\\n\t\t--i-alignment masked-aligned-rep-seqs.qza \\\n\t\t--p-n-threads ${task.cpus} \\\n\t\t--o-tree unrooted-tree.qza\n\n\tqiime phylogeny midpoint-root \\\n\t\t--i-tree unrooted-tree.qza \\\n\t\t--o-rooted-tree rooted-tree.qza\n\n\tqiime tools export rooted-tree.qza  \\\n\t\t--output-dir phylogenetic_tree\n\t\"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_qiime_repseq_for_tree",
            "ch_mpl_for_tree"
        ],
        "nb_inputs": 2,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"rooted-tree.qza\") == 0) \"phylogenetic_tree/$filename\" else filename }"
        ],
        "when": "!params.skip_diversity_indices || !params.skip_alpha_rarefaction",
        "stub": ""
    },
    "alpha_rarefaction": {
        "name_process": "alpha_rarefaction",
        "string_process": "\nprocess alpha_rarefaction { \n\tpublishDir \"${params.outdir}\", mode: 'copy'    \n\n\tinput:\n\tfile metadata from ch_metadata_for_alphararefaction\n\tfile table from ch_qiime_table_for_alpha_rarefaction\n\tfile tree from ch_qiime_tree_for_alpha_rarefaction\n\tfile stats from ch_tsv_table_for_alpha_rarefaction\n\tenv MATPLOTLIBRC from ch_mpl_for_alpha_rare\n\n\toutput:\n\tfile(\"alpha-rarefaction/*\")\n\n\twhen:\n\t!params.skip_alpha_rarefaction\n\n\t\"\"\"\n\tmaxdepth=\\$(count_table_minmax_reads.py $stats maximum 2>&1)\n\n\t#check values\n\tif [ \\\"\\$maxdepth\\\" -gt \\\"75000\\\" ]; then maxdepth=\\\"75000\\\"; fi\n\tif [ \\\"\\$maxdepth\\\" -gt \\\"5000\\\" ]; then maxsteps=\\\"250\\\"; else maxsteps=\\$((maxdepth/20)); fi\n\n\tqiime diversity alpha-rarefaction  \\\n\t\t--i-table ${table}  \\\n\t\t--i-phylogeny ${tree}  \\\n\t\t--p-max-depth \\$maxdepth  \\\n\t\t--m-metadata-file ${metadata}  \\\n\t\t--p-steps \\$maxsteps  \\\n\t\t--p-iterations 10  \\\n\t\t--o-visualization alpha-rarefaction.qzv\n\n\tqiime tools export alpha-rarefaction.qzv  \\\n\t\t--output-dir alpha-rarefaction\n\t\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "\"\"\"\n\tmaxdepth=\\$(count_table_minmax_reads.py $stats maximum 2>&1)\n\n\t#check values\n\tif [ \\\"\\$maxdepth\\\" -gt \\\"75000\\\" ]; then maxdepth=\\\"75000\\\"; fi\n\tif [ \\\"\\$maxdepth\\\" -gt \\\"5000\\\" ]; then maxsteps=\\\"250\\\"; else maxsteps=\\$((maxdepth/20)); fi\n\n\tqiime diversity alpha-rarefaction  \\\n\t\t--i-table ${table}  \\\n\t\t--i-phylogeny ${tree}  \\\n\t\t--p-max-depth \\$maxdepth  \\\n\t\t--m-metadata-file ${metadata}  \\\n\t\t--p-steps \\$maxsteps  \\\n\t\t--p-iterations 10  \\\n\t\t--o-visualization alpha-rarefaction.qzv\n\n\tqiime tools export alpha-rarefaction.qzv  \\\n\t\t--output-dir alpha-rarefaction\n\t\"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_metadata_for_alphararefaction",
            "ch_qiime_table_for_alpha_rarefaction",
            "ch_qiime_tree_for_alpha_rarefaction",
            "ch_tsv_table_for_alpha_rarefaction",
            "ch_mpl_for_alpha_rare"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "!params.skip_alpha_rarefaction",
        "stub": ""
    },
    "combinetable": {
        "name_process": "combinetable",
        "string_process": "\nprocess combinetable { \n\tpublishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'    \n\n\tinput:\n\tfile TABLE from ch_tsv_relASV_table\n\tfile SEQ from ch_fasta_repseq\n\tfile TAXONOMY from ch_tsv_taxonomy\n\n\toutput:\n\tfile(\"qiime2_ASV_table.tsv\")\n\n\twhen:\n\t!params.skip_abundance_tables && !params.skip_taxonomy\n\n\t\"\"\"\n\tcombineTable.r ${TABLE} ${SEQ} ${TAXONOMY}\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n\tcombineTable.r ${TABLE} ${SEQ} ${TAXONOMY}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_tsv_relASV_table",
            "ch_fasta_repseq",
            "ch_tsv_taxonomy"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/rel_abundance_tables\", mode: 'copy'"
        ],
        "when": "!params.skip_abundance_tables && !params.skip_taxonomy",
        "stub": ""
    },
    "diversity_core": {
        "name_process": "diversity_core",
        "string_process": "\nprocess diversity_core { \n\tpublishDir \"${params.outdir}\", mode: 'copy',\n\tsaveAs: {filename ->\n\t\tparams.keepIntermediates ? filename : null} \n\n\tinput:\n\tfile metadata from ch_metadata_for_diversity_core\n\tfile table from ch_qiime_table_for_diversity_core\n\tfile tree from ch_qiime_tree_for_diversity_core\n\tfile stats from ch_tsv_table_for_diversity_core\n\tenv MATPLOTLIBRC from ch_mpl_for_diversity_core\n\n\toutput:\n\tfile(\"diversity_core/*_pcoa_results.qza\") into (ch_qiime_diversity_core_for_beta_diversity_ordination) mode flatten\n\tfile(\"diversity_core/*_vector.qza\") into ch_qiime_diversity_core_for_alpha_diversity mode flatten\n\tfile(\"diversity_core/*_distance_matrix.qza\") into ch_qiime_diversity_core_for_beta_diversity mode flatten\n\tstdout rarefaction_depth\n\n\twhen:\n\t!params.skip_diversity_indices\n\n\t\"\"\"\n\tmindepth=\\$(count_table_minmax_reads.py $stats minimum 2>&1)\n\n\tif [ \\\"\\$mindepth\\\" -gt \\\"10000\\\" ]; then echo \\\"\\nUse the sampling depth of \\$mindepth for rarefaction\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"10000\\\" -a \\\"\\$mindepth\\\" -gt \\\"5000\\\" ]; then echo \\\"\\n######## WARNING! The sampling depth of \\$mindepth is quite small for rarefaction!\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"5000\\\" -a \\\"\\$mindepth\\\" -gt \\\"1000\\\" ]; then echo \\\"\\n######## WARNING! The sampling depth of \\$mindepth is very small for rarefaction!\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"1000\\\" ]; then echo \\\"\\n######## ERROR! The sampling depth of \\$mindepth seems too small for rarefaction!\\\" ; fi\n\t\n\tqiime diversity core-metrics-phylogenetic \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--i-phylogeny ${tree} \\\n\t\t--i-table ${table} \\\n\t\t--p-sampling-depth \\$mindepth \\\n\t\t--output-dir diversity_core \\\n\t\t--p-n-jobs ${task.cpus} \\\n\t\t--quiet\n\t\"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "\"\"\"\n\tmindepth=\\$(count_table_minmax_reads.py $stats minimum 2>&1)\n\n\tif [ \\\"\\$mindepth\\\" -gt \\\"10000\\\" ]; then echo \\\"\\nUse the sampling depth of \\$mindepth for rarefaction\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"10000\\\" -a \\\"\\$mindepth\\\" -gt \\\"5000\\\" ]; then echo \\\"\\n######## WARNING! The sampling depth of \\$mindepth is quite small for rarefaction!\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"5000\\\" -a \\\"\\$mindepth\\\" -gt \\\"1000\\\" ]; then echo \\\"\\n######## WARNING! The sampling depth of \\$mindepth is very small for rarefaction!\\\" ; fi\n\tif [ \\\"\\$mindepth\\\" -lt \\\"1000\\\" ]; then echo \\\"\\n######## ERROR! The sampling depth of \\$mindepth seems too small for rarefaction!\\\" ; fi\n\t\n\tqiime diversity core-metrics-phylogenetic \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--i-phylogeny ${tree} \\\n\t\t--i-table ${table} \\\n\t\t--p-sampling-depth \\$mindepth \\\n\t\t--output-dir diversity_core \\\n\t\t--p-n-jobs ${task.cpus} \\\n\t\t--quiet\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_metadata_for_diversity_core",
            "ch_qiime_table_for_diversity_core",
            "ch_qiime_tree_for_diversity_core",
            "ch_tsv_table_for_diversity_core",
            "ch_mpl_for_diversity_core"
        ],
        "nb_inputs": 5,
        "outputs": [
            "",
            "ch_qiime_diversity_core_for_alpha_diversity",
            "ch_qiime_diversity_core_for_beta_diversity",
            "rarefaction_depth"
        ],
        "nb_outputs": 4,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy' , saveAs: {filename -> params.keepIntermediates ? filename : null}"
        ],
        "when": "!params.skip_diversity_indices",
        "stub": ""
    },
    "metadata_category_all": {
        "name_process": "metadata_category_all",
        "string_process": "\nprocess metadata_category_all { \n\tinput:\n\tfile metadata from ch_metadata_for_metadata_category_all\n\tenv MATPLOTLIBRC from ch_mpl_for_metadata_cat\n\n\toutput:\n\tstdout into (ch_meta_category_all_for_alphadiversity, ch_meta_category_all_for_ancom)\n\n\twhen:\n\t!params.skip_ancom || !params.skip_diversity_indices\n\t!params.untilQ2import && !params.onlyDenoising\n\tparams.metadata\n\n\tscript:\n\tif( !params.metadata_category )\n\t\t\"\"\"\n\t\tmetadataCategory.r ${metadata}\n\t\t\"\"\"\n\telse\n\t\t\"\"\"\n\t\tprintf ${params.metadata_category}\n\t\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\tif( !params.metadata_category )\n\t\t\"\"\"\n\t\tmetadataCategory.r ${metadata}\n\t\t\"\"\"\n\telse\n\t\t\"\"\"\n\t\tprintf ${params.metadata_category}\n\t\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_metadata_for_metadata_category_all",
            "ch_mpl_for_metadata_cat"
        ],
        "nb_inputs": 2,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [],
        "when": "!params.skip_ancom || !params.skip_diversity_indices\n\t!params.untilQ2import && !params.onlyDenoising\n\tparams.metadata",
        "stub": ""
    },
    "metadata_category_pairwise": {
        "name_process": "metadata_category_pairwise",
        "string_process": "\nprocess metadata_category_pairwise { \n\n\tinput:\n\tfile metadata from ch_metadata_for_metadata_category_pairwise\n\tenv MATPLOTLIBRC from ch_mpl_for_metadata_pair\n\n\toutput:\n\tstdout ch_meta_category_pairwise\n\n\twhen:\n\t!params.skip_diversity_indices\n\n\t\"\"\"\n\tmetadataCategoryPairwise.r ${metadata}\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n\tmetadataCategoryPairwise.r ${metadata}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_metadata_for_metadata_category_pairwise",
            "ch_mpl_for_metadata_pair"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_meta_category_pairwise"
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [],
        "when": "!params.skip_diversity_indices",
        "stub": ""
    },
    "alpha_diversity": {
        "name_process": "alpha_diversity",
        "string_process": "\nprocess alpha_diversity { \n\ttag \"${core.baseName}\"\n\tpublishDir \"${params.outdir}\", mode: 'copy'    \n\n\tinput:\n\tset file(metadata), file(core), env(MATPLOTLIBRC), val(meta) from ch_for_alpha_diversity\n\n\toutput:\n\tfile(\"alpha-diversity/*\")\n\n\twhen:\n\tmeta.length() > 0\n\n\t\"\"\"\n\tqiime diversity alpha-group-significance \\\n\t\t--i-alpha-diversity ${core} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--o-visualization ${core.baseName}-vis.qzv\n\tqiime tools export ${core.baseName}-vis.qzv \\\n\t\t--output-dir \"alpha-diversity/${core.baseName}\"\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n\tqiime diversity alpha-group-significance \\\n\t\t--i-alpha-diversity ${core} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--o-visualization ${core.baseName}-vis.qzv\n\tqiime tools export ${core.baseName}-vis.qzv \\\n\t\t--output-dir \"alpha-diversity/${core.baseName}\"\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_for_alpha_diversity"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${core.baseName}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "meta.length() > 0",
        "stub": ""
    },
    "beta_diversity": {
        "name_process": "beta_diversity",
        "string_process": "\nprocess beta_diversity { \n\ttag \"${core.baseName}\"\n\tpublishDir \"${params.outdir}\", mode: 'copy'     \n\n\tinput:\n\tset file(meta), file(core), val(category), env(MATPLOTLIBRC) from ch_for_beta_diversity\n\n\toutput:\n\tfile(\"beta-diversity/*\")\n\n\twhen:\n\tcategory.length() > 0\n\n\t\"\"\"\n\tIFS=',' read -r -a metacategory <<< \\\"$category\\\"\n\n\tfor j in \\\"\\${metacategory[@]}\\\"\n\tdo\n\t\tqiime diversity beta-group-significance \\\n\t\t\t--i-distance-matrix $core \\\n\t\t\t--m-metadata-file ${meta} \\\n\t\t\t--m-metadata-column \\\"\\$j\\\" \\\n\t\t\t--o-visualization ${core.baseName}-\\$j.qzv \\\n\t\t\t--p-pairwise\n\t\tqiime tools export ${core.baseName}-\\$j.qzv \\\n\t\t\t--output-dir beta-diversity/${core.baseName}-\\$j\n\tdone\n\t\"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n\tIFS=',' read -r -a metacategory <<< \\\"$category\\\"\n\n\tfor j in \\\"\\${metacategory[@]}\\\"\n\tdo\n\t\tqiime diversity beta-group-significance \\\n\t\t\t--i-distance-matrix $core \\\n\t\t\t--m-metadata-file ${meta} \\\n\t\t\t--m-metadata-column \\\"\\$j\\\" \\\n\t\t\t--o-visualization ${core.baseName}-\\$j.qzv \\\n\t\t\t--p-pairwise\n\t\tqiime tools export ${core.baseName}-\\$j.qzv \\\n\t\t\t--output-dir beta-diversity/${core.baseName}-\\$j\n\tdone\n\t\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_for_beta_diversity"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${core.baseName}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "category.length() > 0",
        "stub": ""
    },
    "beta_diversity_ordination": {
        "name_process": "beta_diversity_ordination",
        "string_process": "\nprocess beta_diversity_ordination { \n\ttag \"${core.baseName}\"\n\tpublishDir \"${params.outdir}\", mode: 'copy'\n\n\tinput:\n\tset file(metadata), file(core), env(MATPLOTLIBRC) from ch_for_beta_diversity_ordination\n\n\toutput:\n\tfile(\"beta-diversity/*\")\n\n\t\"\"\"\n\tqiime emperor plot \\\n\t\t--i-pcoa ${core} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--o-visualization ${core.baseName}-vis.qzv\n\tqiime tools export ${core.baseName}-vis.qzv \\\n\t\t--output-dir beta-diversity/${core.baseName}-PCoA\n\t\"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n\tqiime emperor plot \\\n\t\t--i-pcoa ${core} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--o-visualization ${core.baseName}-vis.qzv\n\tqiime tools export ${core.baseName}-vis.qzv \\\n\t\t--output-dir beta-diversity/${core.baseName}-PCoA\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_for_beta_diversity_ordination"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${core.baseName}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "prepare_ancom": {
        "name_process": "prepare_ancom",
        "string_process": "\nprocess prepare_ancom { \n\ttag \"${meta}\"\n\n\tpublishDir \"${params.outdir}/ancom\", mode: 'copy', \n\tsaveAs: {filename ->\n\t\tparams.keepIntermediates ? filename : null}   \n\n\tinput:\n\tfile metadata from ch_metadata_for_ancom\n\tfile table from ch_qiime_table_for_ancom\n\tval meta from ch_meta_category_all_for_ancom\n\tenv MATPLOTLIBRC from ch_mpl_for_ancom\n\n\toutput:\n\tfile(\"*.qza\") into (ch_meta_tables_tax, ch_meta_tables_asv) mode flatten\n\n\twhen:\n\t!params.skip_ancom\n\tmeta.length() > 0\n\n\t\"\"\"\n\tIFS=',' read -r -a metacategory <<< \\\"$meta\\\"\n\n\t#remove samples that do not have any value\n\tfor j in \\\"\\${metacategory[@]}\\\"\n\tdo\n\t\tqiime feature-table filter-samples \\\n\t\t\t--i-table ${table} \\\n\t\t\t--m-metadata-file ${metadata} \\\n\t\t\t--p-where \\\"\\$j<>\\'\\'\\\" \\\n\t\t\t--o-filtered-table \\$j.qza\n\tdone\n\t\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "\"\"\"\n\tIFS=',' read -r -a metacategory <<< \\\"$meta\\\"\n\n\t#remove samples that do not have any value\n\tfor j in \\\"\\${metacategory[@]}\\\"\n\tdo\n\t\tqiime feature-table filter-samples \\\n\t\t\t--i-table ${table} \\\n\t\t\t--m-metadata-file ${metadata} \\\n\t\t\t--p-where \\\"\\$j<>\\'\\'\\\" \\\n\t\t\t--o-filtered-table \\$j.qza\n\tdone\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_metadata_for_ancom",
            "ch_qiime_table_for_ancom",
            "ch_meta_category_all_for_ancom",
            "ch_mpl_for_ancom"
        ],
        "nb_inputs": 4,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${meta}\"",
            "publishDir \"${params.outdir}/ancom\", mode: 'copy' , saveAs: {filename -> params.keepIntermediates ? filename : null}"
        ],
        "when": "!params.skip_ancom\n\tmeta.length() > 0",
        "stub": ""
    },
    "ancom_tax": {
        "name_process": "ancom_tax",
        "string_process": "\nprocess ancom_tax { \n\ttag \"${table.baseName}-level${taxlevel}\"\n\n\tpublishDir \"${params.outdir}\", mode: 'copy'    \n\n\tinput:\n\tset file(table), val(taxlevel), file(taxonomy), file(metadata), env(MATPLOTLIBRC) from ch_for_ancom_tax\n\n\toutput:\n\tfile(\"ancom/*\")\n\n\twhen:\n\t!params.skip_ancom\n\n\t\"\"\"\n\tqiime taxa collapse \\\n\t\t--i-table ${table} \\\n\t\t--i-taxonomy ${taxonomy} \\\n\t\t--p-level ${taxlevel} \\\n\t\t--o-collapsed-table lvl${taxlevel}-${table}\n\tqiime composition add-pseudocount \\\n\t\t--i-table lvl${taxlevel}-${table} \\\n\t\t--o-composition-table comp-lvl${taxlevel}-${table}\n\tqiime composition ancom \\\n\t\t--i-table comp-lvl${taxlevel}-${table} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--m-metadata-column ${table.baseName} \\\n\t\t--o-visualization comp-lvl${taxlevel}-${table.baseName}.qzv\n\tqiime tools export comp-lvl${taxlevel}-${table.baseName}.qzv \\\n\t\t--output-dir ancom/Category-${table.baseName}-level-${taxlevel}\n\t\"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "\"\"\"\n\tqiime taxa collapse \\\n\t\t--i-table ${table} \\\n\t\t--i-taxonomy ${taxonomy} \\\n\t\t--p-level ${taxlevel} \\\n\t\t--o-collapsed-table lvl${taxlevel}-${table}\n\tqiime composition add-pseudocount \\\n\t\t--i-table lvl${taxlevel}-${table} \\\n\t\t--o-composition-table comp-lvl${taxlevel}-${table}\n\tqiime composition ancom \\\n\t\t--i-table comp-lvl${taxlevel}-${table} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--m-metadata-column ${table.baseName} \\\n\t\t--o-visualization comp-lvl${taxlevel}-${table.baseName}.qzv\n\tqiime tools export comp-lvl${taxlevel}-${table.baseName}.qzv \\\n\t\t--output-dir ancom/Category-${table.baseName}-level-${taxlevel}\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_for_ancom_tax"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${table.baseName}-level${taxlevel}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "!params.skip_ancom",
        "stub": ""
    },
    "ancom_asv": {
        "name_process": "ancom_asv",
        "string_process": "\nprocess ancom_asv { \n\ttag \"${table.baseName}\"\n\n\tpublishDir \"${params.outdir}\", mode: 'copy' \n\n\tinput:\n\tset file(table), file(metadata), env(MATPLOTLIBRC) from ch_for_ancom_asv \n\n\toutput:\n\tfile(\"ancom/*\") \n\n\t\"\"\"\n\tqiime composition add-pseudocount \\\n\t\t--i-table ${table} \\\n\t\t--o-composition-table comp-${table}\n\tqiime composition ancom \\\n\t\t--i-table comp-${table} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--m-metadata-column ${table.baseName} \\\n\t\t--o-visualization comp-${table.baseName}.qzv\n\tqiime tools export comp-${table.baseName}.qzv \\\n\t\t--output-dir ancom/Category-${table.baseName}-ASV\n\t\"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n\tqiime composition add-pseudocount \\\n\t\t--i-table ${table} \\\n\t\t--o-composition-table comp-${table}\n\tqiime composition ancom \\\n\t\t--i-table comp-${table} \\\n\t\t--m-metadata-file ${metadata} \\\n\t\t--m-metadata-column ${table.baseName} \\\n\t\t--o-visualization comp-${table.baseName}.qzv\n\tqiime tools export comp-${table.baseName}.qzv \\\n\t\t--output-dir ancom/Category-${table.baseName}-ASV\n\t\"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QIIME"
        ],
        "tools_url": [
            "https://bio.tools/qiime"
        ],
        "tools_dico": [
            {
                "name": "QIIME",
                "uri": "https://bio.tools/qiime",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3070",
                            "term": "Biological science"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source bioinformatics pipeline for performing microbiome analysis from raw DNA sequencing data. The pipeline is designed to take users from raw sequencing data generated on the Illumina or other platforms through publication quality graphics and statistics. This includes demultiplexing and quality filtering, OTU picking, taxonomic assignment, and phylogenetic reconstruction, and diversity analyses and visualizations.",
                "homepage": "http://qiime.org/"
            }
        ],
        "inputs": [
            "ch_for_ancom_asv"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "tag \"${table.baseName}\"",
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n\tpublishDir \"${params.outdir}/Documentation\", mode: 'copy'\n\n\tinput:\n\tfile output_docs from ch_output_docs\n\n\toutput:\n\tfile \"results_description.html\"\n\n\tscript:\n\t\"\"\"\n\tmarkdown_to_html.r $output_docs results_description.html\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\tmarkdown_to_html.r $output_docs results_description.html\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/Documentation\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "dada2filter": {
        "name_process": "dada2filter",
        "string_process": "\tprocess dada2filter {\n\n\t\tpublishDir \"${params.outdir}/dada2filter\", mode: 'copy',\n\t\t\tsaveAs: {filename -> \n\t\t\tif (filename.indexOf(\".gz\") == -1) \"logs/$filename\"\n\t\t\telse if(params.keepIntermediates) filename \n\t\t\telse null}\n\t\tinput:\n\t\tfile(reads) from ch_fastq_trimmed.collect()\n\t\n\t\toutput:\n\t\tfile \"dada2filter/*fastq.gz\" into ch_fastq_dada2filter, ch_fastq_dada2filter2\n\t\tfile \"dada2filter_log\" into ch_fastq_dada2filter_log\n\n\t\tscript:\n\t\t                                                                                                      \n                                                                                                                 \n    \n\t\t                                                                                         \n\t\ttrunclenR1 = params.trunclenF - params.FW_primer.size()\n\t\ttrunclenR2 = params.trunclenR - params.RV_primer.size()\n\t\t\"\"\"\n\t\tdada2filter.R --verbose --trimleft=0,0 --trunclen=${trunclenR1},${trunclenR2} \\\n\t\t--filterdir=dada2filter --fwdmark=${params.fwdmark} --revmark=${params.revmark} \\\n\t\t>dada2filter_log 2>&1 \n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 25,
        "string_script": "\t\ttrunclenR1 = params.trunclenF - params.FW_primer.size()\n\t\ttrunclenR2 = params.trunclenR - params.RV_primer.size()\n\t\t\"\"\"\n\t\tdada2filter.R --verbose --trimleft=0,0 --trunclen=${trunclenR1},${trunclenR2} \\\n\t\t--filterdir=dada2filter --fwdmark=${params.fwdmark} --revmark=${params.revmark} \\\n\t\t>dada2filter_log 2>&1 \n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_trimmed"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_dada2filter",
            "ch_fastq_dada2filter2",
            "ch_fastq_dada2filter_log"
        ],
        "nb_outputs": 3,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/dada2filter\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".gz\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    },
    "dada2errmodels": {
        "name_process": "dada2errmodels",
        "string_process": "\tprocess dada2errmodels  {\n\t\n\t \tpublishDir \"${params.outdir}/dada2errmodels\", mode: 'copy',\n\t \t\tsaveAs: {filename -> \n\t \t\tif (filename.indexOf(\".rds\") == -1) \"logs/$filename\"\n\t \t\telse if(params.keepIntermediates) filename \n\t \t\telse null}\n\t  \n\t \tinput:\n\t \tfile(dada2filtered) from ch_fastq_dada2filter.collect()\n\t \n\t \toutput:\n\t\tfile (\"*.rds\") into ch_dada2errmodels\n\t \tfile (\"dada2errmodels_log\") into ch_dada2errmodels_log\n\n\t \tscript:\n\t \t\"\"\"\n\t \tdada2errmodels.R --verbose --nsamples=${params.nsamples} --maxconsist=${params.maxconsist} \\\n\t \t--filterdir=. --fwdmark=${params.fwdmark} --revmark=${params.revmark} \\\n\t \t>dada2errmodels_log 2>&1\n\t \t\"\"\"\n\t }",
        "nb_lignes_process": 20,
        "string_script": "\t \t\"\"\"\n\t \tdada2errmodels.R --verbose --nsamples=${params.nsamples} --maxconsist=${params.maxconsist} \\\n\t \t--filterdir=. --fwdmark=${params.fwdmark} --revmark=${params.revmark} \\\n\t \t>dada2errmodels_log 2>&1\n\t \t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_dada2filter"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_dada2errmodels",
            "ch_dada2errmodels_log"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/dada2errmodels\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".rds\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    },
    "dada2cleanNmerge": {
        "name_process": "dada2cleanNmerge",
        "string_process": "\tprocess dada2cleanNmerge  {\n\t\n\t \tpublishDir \"${params.outdir}/dada2cleanNmerge\", mode: 'copy',\n\t \t\tsaveAs: {filename -> \n\t \t\tif (filename.indexOf(\".merged.rds\") == -1) \"logs/$filename\"\n\t \t\telse if(params.keepIntermediates) filename \n\t \t\telse null}\n\t  \n\t \tinput:\n\t \tfile(dada2filtered) from ch_fastq_dada2filter2.collect()\n\t\tfile(dada2errmodels) from ch_dada2errmodels.collect()\n\t \n\t \toutput:\n\t\tfile (\"*merged.rds\") into ch_dada2cleanNmerge\n\t \tfile (\"dada2cleanNmerge_log\") into ch_dada2cleanNmerge_log\n\n\t \tscript:\n\t \t\"\"\"\n\t \tdada2cleanNmerge.R --verbose ${params.concatenate} --filterdir=. \\\n\t\t--minoverlap=${params.minoverlap} --maxmismatch=${params.maxmismatch} --fwderrmodel=seq.dada2errmodels.fwd.errorates.rds \\\n\t\t--reverrmodel=seq.dada2errmodels.rev.errorates.rds --fwdmark=${params.fwdmark} --revmark=${params.revmark} >dada2cleanNmerge_log 2>&1\n\t \t\"\"\"\n\t }",
        "nb_lignes_process": 21,
        "string_script": "\t \t\"\"\"\n\t \tdada2cleanNmerge.R --verbose ${params.concatenate} --filterdir=. \\\n\t\t--minoverlap=${params.minoverlap} --maxmismatch=${params.maxmismatch} --fwderrmodel=seq.dada2errmodels.fwd.errorates.rds \\\n\t\t--reverrmodel=seq.dada2errmodels.rev.errorates.rds --fwdmark=${params.fwdmark} --revmark=${params.revmark} >dada2cleanNmerge_log 2>&1\n\t \t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_dada2filter2",
            "ch_dada2errmodels"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_dada2cleanNmerge",
            "ch_dada2cleanNmerge_log"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/dada2cleanNmerge\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".merged.rds\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    },
    "dada2bimeras": {
        "name_process": "dada2bimeras",
        "string_process": "\tprocess dada2bimeras  {\n\t\n\t \tpublishDir \"${params.outdir}/dada2bimeras\", mode: 'copy',\n\t \t\tsaveAs: {filename -> \n\t \t\tif (filename.indexOf(\".bimeras.rds\") == -1) \"logs/$filename\"\n\t \t\telse if(params.keepIntermediates) filename \n\t \t\telse null}\n\t  \n\t \tinput:\n\t\tfile(dada2cleanNmerged) from ch_dada2cleanNmerge.collect()\n\t \n\t \toutput:\n\t\tfile (\"*bimeras.tsv.gz\") into ch_dada2bimeras\n\t \tfile (\"dada2bimeras_log\") into ch_dada2bimeras_log\n\n\t \tscript:\n\t \t\"\"\"\n\t \tdada2bimeras.R --verbose --method=${params.method} --minab=${params.minab} --overab=${params.overab} \\\n\t\t${params.bimeraoff} --prefix=dada2.cleaned.merged.bimeras --seqtabfile=dada2.cleaned.merged.rds \\\n\t\t>dada2bimeras_log 2>&1\n\t\t\"\"\"\n\t }",
        "nb_lignes_process": 20,
        "string_script": "\t \t\"\"\"\n\t \tdada2bimeras.R --verbose --method=${params.method} --minab=${params.minab} --overab=${params.overab} \\\n\t\t${params.bimeraoff} --prefix=dada2.cleaned.merged.bimeras --seqtabfile=dada2.cleaned.merged.rds \\\n\t\t>dada2bimeras_log 2>&1\n\t\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_dada2cleanNmerge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_dada2bimeras",
            "ch_dada2bimeras_log"
        ],
        "nb_outputs": 2,
        "name_workflow": "bioatlas__ampliflow",
        "directive": [
            "publishDir \"${params.outdir}/dada2bimeras\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bimeras.rds\") == -1) \"logs/$filename\" else if(params.keepIntermediates) filename else null}"
        ],
        "when": "",
        "stub": ""
    }
}