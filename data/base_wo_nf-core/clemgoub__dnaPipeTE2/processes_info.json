{
    "cluster_fasta": {
        "name_process": "cluster_fasta",
        "string_process": "\nprocess cluster_fasta {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n\n  output:\n    tuple val(file_id), path(\"Trin.Clustered.clstr\"), path(\"Trin.Clustered.bak.clstr\"), emit: cluster\n    tuple val(file_id), path(\"Trin.Clustered\"), emit: fasta \n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\ncd-hit-est \\\n  -i ${fasta} \\\n  -o Trin.Clustered \\\n  ${params.clustering} \\\n  -T ${task.cpus} \\\n  -M 0 \n\"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\ncd-hit-est \\\n  -i ${fasta} \\\n  -o Trin.Clustered \\\n  ${params.clustering} \\\n  -T ${task.cpus} \\\n  -M 0 \n\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "cluster_member": {
        "name_process": "cluster_member",
        "string_process": "\nprocess cluster_member {\n  container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(clstr), path(bak_clstr)\n\n  output:\n    path \"cluster_*.name\", emit: names\n    path \"mono_cluster.name\", emit: mono_cluster \n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nsort -k1n,1 ${bak_clstr} \\\n  | sed 's/\\\\.\\\\.\\\\.//' \\\n  | sed 's/>//' \\\n  | awk 'BEGIN{group = \\$1}; {if(\\$1 == group){print \\$3  >> \"cluster_\"\\$1\".name\"}; group = \\$1}'\n\n# get mono sequence clusters\nwc -l cluster_* \\\n  | grep \" 1 \" \\\n  | awk '{system(\"cat \"\\$2)}' \\\n  | sed -E 's/((TRINITY_DN[0-9]+_c[0-9]+_g[0-9]+)_i[0-9]+)/\\1 \\2/' \\\n  > mono_cluster_tmp.name\n\n# remove mono sequence clusters\nwc -l cluster_* \\\n  | grep \" 1 \" \\\n  | awk '{system(\"rm \"\\$2)}'\n\n# reassign mono cluster to cluster with the same gene name\n# mono cluster with no match are added to mono_cluster.name\nawk '{system(\"\\\n  echo \\\\\\$(\\\n    grep -c \\\\\"\"\\$2\"\\\\\" cluster_*.name \\\n      | sort -t: -k2nr \\\n      | head -n 1) \"\\$1\" \"\\$2\\\n  )}' mono_cluster_tmp.name \\\n  | sort -t: -k2nr \\\n  | sed -E 's/name:/name /' \\\n  | awk '{if(\\$2 != 0){print \\$3  >> \\$1}; if(\\$2 == 0){print \\$3  >> \"mono_cluster.name\"}}'  \nrm mono_cluster_tmp.name\n\"\"\"\n}",
        "nb_lignes_process": 60,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nsort -k1n,1 ${bak_clstr} \\\n  | sed 's/\\\\.\\\\.\\\\.//' \\\n  | sed 's/>//' \\\n  | awk 'BEGIN{group = \\$1}; {if(\\$1 == group){print \\$3  >> \"cluster_\"\\$1\".name\"}; group = \\$1}'\n\n# get mono sequence clusters\nwc -l cluster_* \\\n  | grep \" 1 \" \\\n  | awk '{system(\"cat \"\\$2)}' \\\n  | sed -E 's/((TRINITY_DN[0-9]+_c[0-9]+_g[0-9]+)_i[0-9]+)/\\1 \\2/' \\\n  > mono_cluster_tmp.name\n\n# remove mono sequence clusters\nwc -l cluster_* \\\n  | grep \" 1 \" \\\n  | awk '{system(\"rm \"\\$2)}'\n\n# reassign mono cluster to cluster with the same gene name\n# mono cluster with no match are added to mono_cluster.name\nawk '{system(\"\\\n  echo \\\\\\$(\\\n    grep -c \\\\\"\"\\$2\"\\\\\" cluster_*.name \\\n      | sort -t: -k2nr \\\n      | head -n 1) \"\\$1\" \"\\$2\\\n  )}' mono_cluster_tmp.name \\\n  | sort -t: -k2nr \\\n  | sed -E 's/name:/name /' \\\n  | awk '{if(\\$2 != 0){print \\$3  >> \\$1}; if(\\$2 == 0){print \\$3  >> \"mono_cluster.name\"}}'  \nrm mono_cluster_tmp.name\n\"\"\"",
        "nb_lignes_script": 42,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "group18"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/group18"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "group18",
                "uri": "https://bio.tools/group18",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3534",
                            "term": "Protein binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0202",
                            "term": "Pharmacology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "Nuclear magnetic resonance spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR spectroscopy"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3899",
                                    "term": "Protein-protein docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2575",
                                    "term": "Binding site prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3899",
                                    "term": "Protein docking"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2575",
                                    "term": "Protein binding site prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2575",
                                    "term": "Protein binding site detection"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Massive in Silico Study of Noble Gas Binding to the Structural Proteome.\n\nNoble gases are chemically inert, and it was therefore thought they would have little effect on biology. Paradoxically, it was found that they do exhibit a wide range of biological effects, many of which are target-specific and potentially useful and some of which have been demonstrated in vivo. The underlying mechanisms by which useful pharmacology, such as tissue and neuroprotection, anti-addiction effects, and analgesia, is elicited are relatively unexplored. Experiments to probe the interactions of noble gases with specific proteins are more difficult with gases than those with other chemicals.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/harman (CSIRO.AU), bio.tools/tilehmm (CSIRO.AU), bio.tools/k-link (CSIRO.AU), bio.tools/blue (CSIRO.AU).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'noble gases', 'gases', 'noble', 'gas-protein'",
                "homepage": "http://group18.csiro.au"
            }
        ],
        "inputs": [
            "file_id",
            "clstr",
            "bak_clstr"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "extract_cluster_member": {
        "name_process": "extract_cluster_member",
        "string_process": "\nprocess extract_cluster_member {\n  container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"\n  label \"small_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n    tuple val(cluster_id), path(cluster_sequence_name)\n\n  output:\n    tuple val(cluster_id), path(\"*.fasta\"), emit: fasta \n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nseqtk subseq ${fasta} ${cluster_sequence_name} \\\n  | sed -E 's/(>[^ ]+) .*/\\\\1/' \\\n  > ${cluster_sequence_name.simpleName}.fasta\n\"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nseqtk subseq ${fasta} ${cluster_sequence_name} \\\n  | sed -E 's/(>[^ ]+) .*/\\\\1/' \\\n  > ${cluster_sequence_name.simpleName}.fasta\n\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "file_id",
            "fasta",
            "cluster_id",
            "cluster_sequence_name"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"",
            "label \"small_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "align_cluster": {
        "name_process": "align_cluster",
        "string_process": "\nprocess align_cluster {\n  container = \"quay.io/biocontainers/mafft:7.490--h779adbc_0\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n\n  output:\n    tuple val(file_id), path(\"*.align\"), emit: align\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nmafft --thread ${task.cpus} \\\n  --quiet \\\n  --clustalout \\\n  ${fasta} \\\n  > ${fasta.simpleName}_cons.align\n\"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nmafft --thread ${task.cpus} \\\n  --quiet \\\n  --clustalout \\\n  ${fasta} \\\n  > ${fasta.simpleName}_cons.align\n\"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "MAFFT"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/MAFFT"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "MAFFT",
                "uri": "https://bio.tools/MAFFT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ]
                    }
                ],
                "description": "MAFFT (Multiple Alignment using Fast Fourier Transform) is a high speed multiple sequence alignment program.",
                "homepage": "http://mafft.cbrc.jp/alignment/server/index.html"
            }
        ],
        "inputs": [
            "file_id",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/mafft:7.490--h779adbc_0\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "consensus_cluster": {
        "name_process": "consensus_cluster",
        "string_process": "\nprocess consensus_cluster {\n  container = \"quay.io/biocontainers/emboss:6.6.0--h8719169_4\"\n  label \"big_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(align)\n\n  output:\n    tuple val(file_id), path(\"*.fasta\"), emit: fasta \n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\ncons -sequence ${align} \\\n  -name ${file_id} \\\n  -outseq ${align.simpleName}_cons.fasta\nsed -i 's/>multiple/>${align.simpleName}/' ${align.simpleName}_cons.fasta\n\"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\ncons -sequence ${align} \\\n  -name ${file_id} \\\n  -outseq ${align.simpleName}_cons.fasta\nsed -i 's/>multiple/>${align.simpleName}/' ${align.simpleName}_cons.fasta\n\"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "cons",
            "Multiple TDT"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/cons",
            "https://bio.tools/multiple_tdt"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "cons",
                "uri": "https://bio.tools/cons",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0448",
                                    "term": "Sequence alignment analysis (conservation)"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0448",
                                    "term": "Residue conservation analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0874",
                                "term": "Comparison matrix"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_0849",
                                "term": "Sequence record"
                            }
                        ]
                    }
                ],
                "description": "Create a consensus sequence from a multiple alignment.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/cons.html"
            },
            {
                "name": "Multiple TDT",
                "uri": "https://bio.tools/multiple_tdt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0283",
                                    "term": "Linkage analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program to do the associate test (TDT type test for nuclear-family data) using several tightly linked markers simultanously.",
                "homepage": "http://zhaocenter.org/software/#Genetic_Linkage_Analysis"
            }
        ],
        "inputs": [
            "file_id",
            "align"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/emboss:6.6.0--h8719169_4\"",
            "label \"big_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "merge_cluster_sequences": {
        "name_process": "merge_cluster_sequences",
        "string_process": "\nprocess merge_cluster_sequences {\n  container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.clustering_out != \"\") {\n    publishDir \"results/${params.clustering_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n    path cluster_fasta\n\n  output:\n    tuple val(file_id), path(\"concensus_*.fasta\"), emit: fasta\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\"\"\"\ncat ${cluster_fasta} \\\n  > concensus_${file_id}.fasta\n\"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\"\"\"\ncat ${cluster_fasta} \\\n  > concensus_${file_id}.fasta\n\"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta",
            "cluster_fasta"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.clustering_out != \"\") { publishDir \"results/${params.clustering_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "sra_dump": {
        "name_process": "sra_dump",
        "string_process": "\nprocess sra_dump {\n  container = \"${container_url}\"\n  label \"big_mem_mono_cpus\"\n  tag \"$sra\"\n  if (params.sra_dump_out != \"\") {\n    publishDir \"results/${params.sra_dump_out}\", mode: 'copy'\n  }\n\n  input:\n    val sra\n\n  output:\n    tuple val(sra), path(\"*.fastq.gz\"), emit: fastq\n\n  script:\n\"\"\"\nfastq-dump ${params.sra_dump} --split-files --gzip ${sra}\nif [ -f ${sra}_1.fastq.gz ]\nthen\n  mv ${sra}_1.fastq.gz ${sra}_R1.fastq.gz\nfi\nif [ -f ${sra}_2.fastq.gz ]\nthen\n  mv ${sra}_2.fastq.gz ${sra}_R2.fastq.gz\nfi\n\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\nfastq-dump ${params.sra_dump} --split-files --gzip ${sra}\nif [ -f ${sra}_1.fastq.gz ]\nthen\n  mv ${sra}_1.fastq.gz ${sra}_R1.fastq.gz\nfi\nif [ -f ${sra}_2.fastq.gz ]\nthen\n  mv ${sra}_2.fastq.gz ${sra}_R2.fastq.gz\nfi\n\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sra"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_mono_cpus\"",
            "tag \"$sra\" if (params.sra_dump_out != \"\") { publishDir \"results/${params.sra_dump_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "pre_assembly": {
        "name_process": "pre_assembly",
        "string_process": "\nprocess pre_assembly {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.assembly_out != \"\") {\n    publishDir \"results/${params.assembly_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fastq)\n\n  output:\n    tuple val(file_id), path(\"trinity_output_${file_prefix}/chrysalis/readsToComponents.out.sort\"), emit: read_names\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n  if (fastq.size() == 2)\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --no_distributed_trinity_exec \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --left ${fastq[0]} \\\n    --right ${fastq[1]} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n  else\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --no_distributed_trinity_exec \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --single ${fastq} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n}",
        "nb_lignes_process": 56,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n  if (fastq.size() == 2)\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --no_distributed_trinity_exec \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --left ${fastq[0]} \\\n    --right ${fastq[1]} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n  else\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --no_distributed_trinity_exec \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --single ${fastq} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"",
        "nb_lignes_script": 39,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "Trinity"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/trinity"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "Trinity",
                "uri": "https://bio.tools/trinity",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Trinity is a transcriptome assembler which relies on three different tools, inchworm an assembler, chrysalis which pools contigs and butterfly which amongst others compacts a graph resulting from butterfly with reads.",
                "homepage": "https://github.com/trinityrnaseq/trinityrnaseq/wiki"
            }
        ],
        "inputs": [
            "file_id",
            "fastq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.assembly_out != \"\") { publishDir \"results/${params.assembly_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "reads_enrichment": {
        "name_process": "reads_enrichment",
        "string_process": "\nprocess reads_enrichment {\n  container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.assembly_out != \"\") {\n    publishDir \"results/${params.assembly_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fastq)\n    tuple val(names_file_id), path(read_names)\n\n  output:\n    tuple val(file_id), path(\"selected_*\"), emit: fastq\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  if (fastq.size() == 2)\n\"\"\"\nmkfifo ${fastq[0].simpleName}_R1.pipe ${fastq[1].simpleName}_R2.pipe\nawk '{ \\\n  if(\\$2 ~ /1\\$/) { \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq[0].simpleName}_R1.pipe\" \\\n  }; \\\n  if(\\$2 ~ /2\\$/) { \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq[1].simpleName}_R2.pipe\" \\\n  }; \\\n}' ${read_names} &\n\ngzip -c ${fastq[0].simpleName}_R1.pipe \\\n  > selected_${fastq[0].simpleName}_R1.fastq.gz &\ngzip -c ${fastq[1].simpleName}_R2.pipe \\\n  > selected_${fastq[1].simpleName}_R2.fastq.gz &\nwait\n\"\"\"\n  else\n\"\"\"\nmkfifo ${fastq.simpleName}.pipe\nawk '{ \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq.simpleName}.pipe\" \\\n}' ${read_names} &\n\ngzip -c ${fastq.simpleName}.pipe \\\n  > selected_${fastq.simpleName}.fastq.gz &\nwait\n\"\"\"\n}",
        "nb_lignes_process": 57,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  if (fastq.size() == 2)\n\"\"\"\nmkfifo ${fastq[0].simpleName}_R1.pipe ${fastq[1].simpleName}_R2.pipe\nawk '{ \\\n  if(\\$2 ~ /1\\$/) { \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq[0].simpleName}_R1.pipe\" \\\n  }; \\\n  if(\\$2 ~ /2\\$/) { \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq[1].simpleName}_R2.pipe\" \\\n  }; \\\n}' ${read_names} &\n\ngzip -c ${fastq[0].simpleName}_R1.pipe \\\n  > selected_${fastq[0].simpleName}_R1.fastq.gz &\ngzip -c ${fastq[1].simpleName}_R2.pipe \\\n  > selected_${fastq[1].simpleName}_R2.fastq.gz &\nwait\n\"\"\"\n  else\n\"\"\"\nmkfifo ${fastq.simpleName}.pipe\nawk '{ \\\n    print \"@\"substr(\\$2, 2)\"\\\\n\" \\$4 \"\\\\n+\\\\n\" \\$4 >> \"${fastq.simpleName}.pipe\" \\\n}' ${read_names} &\n\ngzip -c ${fastq.simpleName}.pipe \\\n  > selected_${fastq.simpleName}.fastq.gz &\nwait\n\"\"\"",
        "nb_lignes_script": 39,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fastq",
            "names_file_id",
            "read_names"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"quay.io/biocontainers/seqtk:1.3--h5bf99c6_3\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.assembly_out != \"\") { publishDir \"results/${params.assembly_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "complete_assembly": {
        "name_process": "complete_assembly",
        "string_process": "\nprocess complete_assembly {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.assembly_out != \"\") {\n    publishDir \"results/${params.assembly_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fastq)\n\n  output:\n    tuple val(file_id), path(\"trinity_output_${file_prefix}/\"), emit: folder\n    tuple val(file_id), path(\"trinity_output_${file_prefix}.Trinity.fasta\"), emit: fasta\n    tuple val(file_id), path(\"trinity_output_${file_prefix}.Trinity.fasta.gene_trans_map\"), emit: gene_map \n    tuple val(file_id), path(\"trinity_output_${file_prefix}/salmon_outdir/quant.sf\"), emit: quant\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n  if (fastq.size() == 2)\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --left ${fastq[0]} \\\n    --right ${fastq[1]} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n  else\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --single ${fastq} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n}",
        "nb_lignes_process": 57,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n  if (fastq.size() == 2)\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --left ${fastq[0]} \\\n    --right ${fastq[1]} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"\n  else\n\"\"\"\n  mkdir trinity_output_${file_prefix}\n  Trinity \\\n    --seqType fq \\\n    --max_memory ${memory}G \\\n    --single ${fastq} \\\n    --CPU ${task.cpus} \\\n    --min_glue ${params.min_glue} \\\n    --min_contig_length ${params.min_contig_length} \\\n    --output trinity_output_${file_prefix}\n\"\"\"",
        "nb_lignes_script": 37,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "Trinity"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/trinity"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "Trinity",
                "uri": "https://bio.tools/trinity",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Trinity is a transcriptome assembler which relies on three different tools, inchworm an assembler, chrysalis which pools contigs and butterfly which amongst others compacts a graph resulting from butterfly with reads.",
                "homepage": "https://github.com/trinityrnaseq/trinityrnaseq/wiki"
            }
        ],
        "inputs": [
            "file_id",
            "fastq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.assembly_out != \"\") { publishDir \"results/${params.assembly_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "super_transcript": {
        "name_process": "super_transcript",
        "string_process": "\nprocess super_transcript {\n  container = \"${container_url}\"\n  label \"big_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.assembly_out != \"\") {\n    publishDir \"results/${params.assembly_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n\n  output:\n    tuple val(file_id), path(\"trinity_genes.fasta\"), path(\"trinity_genes.gtf\"), emit: fasta\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n\"\"\"\nTrinity_gene_splice_modeler.py \\\n  --trinity_fasta ${fasta}\n\"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break;\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break;\n    default:\n      file_prefix = file_id\n    break;\n  };\n  def memory = \"${task.memory}\" - ~/\\s*GB/\n\n\"\"\"\nTrinity_gene_splice_modeler.py \\\n  --trinity_fasta ${fasta}\n\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.assembly_out != \"\") { publishDir \"results/${params.assembly_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "index_fasta": {
        "name_process": "index_fasta",
        "string_process": "\nprocess index_fasta {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.index_fasta_out != \"\") {\n    publishDir \"results/${params.index_fasta_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta), path(gtf)\n\n  output:\n    tuple val(file_id), path(\"*.index*\"), emit: index\n    tuple val(file_id), path(\"*_report.txt\"), emit: report\n\n  script:\n\"\"\"\nkallisto index ${params.index_fasta} -i ${fasta.baseName}.index ${fasta} \\\n2> ${fasta.baseName}_kallisto_index_report.txt\n\"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\nkallisto index ${params.index_fasta} -i ${fasta.baseName}.index ${fasta} \\\n2> ${fasta.baseName}_kallisto_index_report.txt\n\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "kallisto"
        ],
        "tools_url": [
            "https://bio.tools/kallisto"
        ],
        "tools_dico": [
            {
                "name": "kallisto",
                "uri": "https://bio.tools/kallisto",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profiling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Functional profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profile construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Feature expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene transcription profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profile generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program for quantifying abundances of transcripts from RNA-Seq data, or more generally of target sequences using high-throughput sequencing reads. It is based on the novel idea of pseudoalignment for rapidly determining the compatibility of reads with targets, without the need for alignment.",
                "homepage": "https://pachterlab.github.io/kallisto/about.html"
            }
        ],
        "inputs": [
            "file_id",
            "fasta",
            "gtf"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.index_fasta_out != \"\") { publishDir \"results/${params.index_fasta_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "mapping_fastq": {
        "name_process": "mapping_fastq",
        "string_process": "\nprocess mapping_fastq {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.mapping_fastq_out != \"\") {\n    publishDir \"results/${params.mapping_fastq_out}\", mode: 'copy'\n  }\n\n  input:\n  tuple val(index_id), path(index)\n  tuple val(file_id), path(reads)\n\n  output:\n  tuple val(file_id), path(\"${file_prefix}\"), emit: counts\n  tuple val(file_id), path(\"${file_prefix}/*.tsv\"), emit: tsv\n  tuple val(file_id), path(\"*_report.txt\"), emit: report\n\n  script:\n  if (file_id instanceof List){\n    file_prefix = file_id[0]\n  } else {\n    file_prefix = file_id\n  }\n\n  if (reads.size() == 2)\n  \"\"\"\n  mkdir ${file_prefix}\n  kallisto quant -i ${index} -t ${task.cpus} \\\n  ${params.mapping_fastq} -o ${file_prefix} \\\n  ${reads[0]} ${reads[1]} &> ${file_prefix}_kallisto_mapping_report.txt\n  grep \"n_processed\" ${file_prefix}/run_info.json \\\n    | sed 's/.*\"n_processed\":/read_processed\\t0\\t0\\t/' \\\n    | sed 's/,/\\t0/' \\\n    >> ${file_prefix}/abundance.tsv\n  \"\"\"\n  else\n  \"\"\"\n  mkdir ${file_prefix}\n  kallisto quant -i ${index} -t ${task.cpus} --single \\\n  ${params.mapping_fastq} -o ${file_prefix} \\\n  ${reads[0]} &> ${file_prefix}_kallisto_mapping_report.txt\n  grep \"n_processed\" ${file_prefix}/run_info.json \\\n    | sed 's/.*\"n_processed\":/read_processed\\t0\\t0\\t/' \\\n    | sed 's/,/\\t0/' \\\n    >> ${file_prefix}/abundance.tsv\n  \"\"\"\n}",
        "nb_lignes_process": 46,
        "string_script": "  if (file_id instanceof List){\n    file_prefix = file_id[0]\n  } else {\n    file_prefix = file_id\n  }\n\n  if (reads.size() == 2)\n  \"\"\"\n  mkdir ${file_prefix}\n  kallisto quant -i ${index} -t ${task.cpus} \\\n  ${params.mapping_fastq} -o ${file_prefix} \\\n  ${reads[0]} ${reads[1]} &> ${file_prefix}_kallisto_mapping_report.txt\n  grep \"n_processed\" ${file_prefix}/run_info.json \\\n    | sed 's/.*\"n_processed\":/read_processed\\t0\\t0\\t/' \\\n    | sed 's/,/\\t0/' \\\n    >> ${file_prefix}/abundance.tsv\n  \"\"\"\n  else\n  \"\"\"\n  mkdir ${file_prefix}\n  kallisto quant -i ${index} -t ${task.cpus} --single \\\n  ${params.mapping_fastq} -o ${file_prefix} \\\n  ${reads[0]} &> ${file_prefix}_kallisto_mapping_report.txt\n  grep \"n_processed\" ${file_prefix}/run_info.json \\\n    | sed 's/.*\"n_processed\":/read_processed\\t0\\t0\\t/' \\\n    | sed 's/,/\\t0/' \\\n    >> ${file_prefix}/abundance.tsv\n  \"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "kallisto"
        ],
        "tools_url": [
            "https://bio.tools/kallisto"
        ],
        "tools_dico": [
            {
                "name": "kallisto",
                "uri": "https://bio.tools/kallisto",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profiling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Functional profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profile construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Feature expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene transcription profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0314",
                                    "term": "Gene expression profile generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program for quantifying abundances of transcripts from RNA-Seq data, or more generally of target sequences using high-throughput sequencing reads. It is based on the novel idea of pseudoalignment for rapidly determining the compatibility of reads with targets, without the need for alignment.",
                "homepage": "https://pachterlab.github.io/kallisto/about.html"
            }
        ],
        "inputs": [
            "index_id",
            "index",
            "file_id",
            "reads"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.mapping_fastq_out != \"\") { publishDir \"results/${params.mapping_fastq_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "extract_mapping_fastq": {
        "name_process": "extract_mapping_fastq",
        "string_process": "\nprocess extract_mapping_fastq {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.mapping_fastq_out != \"\") {\n    publishDir \"results/${params.extract_mapping_fastq_out}\", mode: 'copy'\n  }\n\n  input:\n  tuple val(index_id), path(index)\n  tuple val(file_id), path(reads)\n\n  output:\n  tuple val(file_id), path(\"selected_*.fastq.gz\"), emit: fastq \n  path \"*_report_tmp.txt\", emit: report\n\n  script:\n  index_id = index[0]\n  for (index_file in index) {\n    if (index_file =~ /.*\\.1\\.ht2.*/) {\n        index_id = ( index_file =~ /(.*)\\.1\\.ht2.*/)[0][1]\n    }\n  }\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  if (reads.size() == 2)\n  \"\"\"\n  mkfifo ${reads[0].simpleName}.pipe ${reads[1].simpleName}.pipe\n  hisat2 ${params.mapping_fastq} \\\n    -p ${task.cpus} \\\n    -x ${index_id} \\\n    -1 ${reads[0]} \\\n    -2 ${reads[1]} \\\n    2> ${file_prefix}_ht2_mapping_report_tmp.txt \\\n    | samtools view -b -F 4 - \\\n    | samtools collate -u -O -@ ${task.cpus} - \\\n    | samtools fastq -1 ${reads[0].simpleName}.pipe -2 ${reads[1].simpleName}.pipe -0 /dev/null -s /dev/null -n \\\n    2> ${file_prefix}_samtool_report_tmp.txt &\n  gzip -c ${reads[0].simpleName}.pipe > selected_${reads[0].simpleName}.fastq.gz &\n  gzip -c ${reads[1].simpleName}.pipe > selected_${reads[1].simpleName}.fastq.gz &\n  wait\n\n  if grep -q \"Error\" ${file_prefix}_ht2_mapping_report_tmp.txt; then\n    exit 1\n  fi\n  \"\"\"\n  else\n  \"\"\"\n  mkfifo ${reads.simpleName}.pipe\n  hisat2 ${params.mapping_fastq} \\\n    -p ${task.cpus} \\\n    -x ${index_id} \\\n    -U ${reads} \\\n    2> ${file_prefix}_ht2_mapping_report_tmp.txt \\\n    | samtools view -b -F 4 - \\\n    | samtools collate -u -O -@ ${task.cpus} - \\\n    | samtools fastq -0 ${reads.simpleName}.pipe -n \n    2> ${file_prefix}_samtool_report_tmp.txt &\n  gzip -c ${reads[0].simpleName}.pipe > selected_${reads[0].simpleName}.fastq.gz &\n  wait\n\n  if grep -q \"Error\" ${file_prefix}_ht2_mapping_report_tmp.txt; then\n    exit 1\n  fi\n  \"\"\"\n}",
        "nb_lignes_process": 75,
        "string_script": "  index_id = index[0]\n  for (index_file in index) {\n    if (index_file =~ /.*\\.1\\.ht2.*/) {\n        index_id = ( index_file =~ /(.*)\\.1\\.ht2.*/)[0][1]\n    }\n  }\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  if (reads.size() == 2)\n  \"\"\"\n  mkfifo ${reads[0].simpleName}.pipe ${reads[1].simpleName}.pipe\n  hisat2 ${params.mapping_fastq} \\\n    -p ${task.cpus} \\\n    -x ${index_id} \\\n    -1 ${reads[0]} \\\n    -2 ${reads[1]} \\\n    2> ${file_prefix}_ht2_mapping_report_tmp.txt \\\n    | samtools view -b -F 4 - \\\n    | samtools collate -u -O -@ ${task.cpus} - \\\n    | samtools fastq -1 ${reads[0].simpleName}.pipe -2 ${reads[1].simpleName}.pipe -0 /dev/null -s /dev/null -n \\\n    2> ${file_prefix}_samtool_report_tmp.txt &\n  gzip -c ${reads[0].simpleName}.pipe > selected_${reads[0].simpleName}.fastq.gz &\n  gzip -c ${reads[1].simpleName}.pipe > selected_${reads[1].simpleName}.fastq.gz &\n  wait\n\n  if grep -q \"Error\" ${file_prefix}_ht2_mapping_report_tmp.txt; then\n    exit 1\n  fi\n  \"\"\"\n  else\n  \"\"\"\n  mkfifo ${reads.simpleName}.pipe\n  hisat2 ${params.mapping_fastq} \\\n    -p ${task.cpus} \\\n    -x ${index_id} \\\n    -U ${reads} \\\n    2> ${file_prefix}_ht2_mapping_report_tmp.txt \\\n    | samtools view -b -F 4 - \\\n    | samtools collate -u -O -@ ${task.cpus} - \\\n    | samtools fastq -0 ${reads.simpleName}.pipe -n \n    2> ${file_prefix}_samtool_report_tmp.txt &\n  gzip -c ${reads[0].simpleName}.pipe > selected_${reads[0].simpleName}.fastq.gz &\n  wait\n\n  if grep -q \"Error\" ${file_prefix}_ht2_mapping_report_tmp.txt; then\n    exit 1\n  fi\n  \"\"\"",
        "nb_lignes_script": 57,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "HISAT2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "index_id",
            "index",
            "file_id",
            "reads"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.mapping_fastq_out != \"\") { publishDir \"results/${params.extract_mapping_fastq_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "repeatmasker": {
        "name_process": "repeatmasker",
        "string_process": "\nprocess repeatmasker {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.annotation_out != \"\") {\n    publishDir \"results/${params.annotation_out}\", mode: 'copy'\n  }\n\n  input:\n\n    tuple val(file_id), path(fasta)\n\n  output:\n    tuple val(file_id), path(\"*\"), emit: annotation\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nRepeatMasker \\\n  -pa ${task.cpus} \\\n  -s \\\n  -no_is \\\n  -lib /opt/RepeatMasker/Libraries/RepeatMasker.lib \\\n  ${fasta}\n\"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nRepeatMasker \\\n  -pa ${task.cpus} \\\n  -s \\\n  -no_is \\\n  -lib /opt/RepeatMasker/Libraries/RepeatMasker.lib \\\n  ${fasta}\n\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "RepeatMasker"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/repeatmasker"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "RepeatMasker",
                "uri": "https://bio.tools/repeatmasker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program that screens DNA sequences for interspersed repeats and low complexity DNA sequences. The output of the program is a detailed annotation of the repeats that are present in the query sequence as well as a modified version of the query sequence in which all the annotated repeats have been masked (default: replaced by Ns).",
                "homepage": "http://www.repeatmasker.org/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.annotation_out != \"\") { publishDir \"results/${params.annotation_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "repeatmasker_extented": {
        "name_process": "repeatmasker_extented",
        "string_process": "\nprocess repeatmasker_extented {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.annotation_out != \"\") {\n    publishDir \"results/${params.annotation_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n    tuple val(db_id), path(db)\n\n  output:\n    tuple val(file_id), path(\"*\"), emit: annotation\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n  def unzip_db = \"mv ${db} libraries/RepeatMaskerLib.h5\";\n  if (db =~ /^.*\\.gz$/) {\n    unzip_db = \"gunzip -c ${db} > libraries/RepeatMaskerLib.h5\";\n  }\n\"\"\"\nmkdir libraries\n${unzip_db}\nRepeatMasker \\\n  -pa ${task.cpus} \\\n   -s -no_is -e hmmer -libdir libraries/ \\\n  -s \\\n  -no_is \\\n  -e hmmer \\\n  ${fasta}\n\"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n  def unzip_db = \"mv ${db} libraries/RepeatMaskerLib.h5\";\n  if (db =~ /^.*\\.gz$/) {\n    unzip_db = \"gunzip -c ${db} > libraries/RepeatMaskerLib.h5\";\n  }\n\"\"\"\nmkdir libraries\n${unzip_db}\nRepeatMasker \\\n  -pa ${task.cpus} \\\n   -s -no_is -e hmmer -libdir libraries/ \\\n  -s \\\n  -no_is \\\n  -e hmmer \\\n  ${fasta}\n\"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "RepeatMasker"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/repeatmasker"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "RepeatMasker",
                "uri": "https://bio.tools/repeatmasker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program that screens DNA sequences for interspersed repeats and low complexity DNA sequences. The output of the program is a detailed annotation of the repeats that are present in the query sequence as well as a modified version of the query sequence in which all the annotated repeats have been masked (default: replaced by Ns).",
                "homepage": "http://www.repeatmasker.org/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta",
            "db_id",
            "db"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.annotation_out != \"\") { publishDir \"results/${params.annotation_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "repeatmasker_custom": {
        "name_process": "repeatmasker_custom",
        "string_process": "\nprocess repeatmasker_custom {\n  container = \"${container_url}\"\n  label \"big_mem_multi_cpus\"\n  tag \"$file_id\"\n  if (params.annotation_out != \"\") {\n    publishDir \"results/${params.annotation_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fasta)\n    tuple val(db_id), path(db)\n\n  output:\n    tuple val(file_id), path(\"*\"), emit: annotation\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nRepeatMasker \\\n  -pa ${task.cpus} \\\n  -s \\\n  -no_is \\\n  -lib ${db} \\\n  ${fasta}\n\"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\nRepeatMasker \\\n  -pa ${task.cpus} \\\n  -s \\\n  -no_is \\\n  -lib ${db} \\\n  ${fasta}\n\"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "RepeatMasker"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/repeatmasker"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "RepeatMasker",
                "uri": "https://bio.tools/repeatmasker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A program that screens DNA sequences for interspersed repeats and low complexity DNA sequences. The output of the program is a detailed annotation of the repeats that are present in the query sequence as well as a modified version of the query sequence in which all the annotated repeats have been masked (default: replaced by Ns).",
                "homepage": "http://www.repeatmasker.org/"
            }
        ],
        "inputs": [
            "file_id",
            "fasta",
            "db_id",
            "db"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_multi_cpus\"",
            "tag \"$file_id\" if (params.annotation_out != \"\") { publishDir \"results/${params.annotation_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "parse_repeatmasker": {
        "name_process": "parse_repeatmasker",
        "string_process": "\nprocess parse_repeatmasker {\n  container = \"python:3.9\"\n  label \"big_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.annotation_out != \"\") {\n    publishDir \"results/${params.annotation_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(annotation)\n\n  output:\n    tuple val(file_id), path(\"*\"), emit: annotation\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\n#! /usr/local/bin/python\nwith open(\"concensus_${file_id}.fasta.out\", 'r') as trinity_handle:\n    line_number = 0\n    trinity_out = list()\n    for line in trinity_handle:\n        line_number += 1\n        if line_number > 3:\n            line = line.split()\n            # we swap the start and left column if we are revese\n            if line[8] == \"C\":\n                tmp = line[13]\n                line[13] = line[11][1:-1]\n                line[11] = tmp\n            else:\n                line[13] = line[13][1:-1]\n            trinity_out_line = list()\n            trinity_out_line.append(line[4])\n            # size of the dnaPipeTE contig\n            trinity_out_line.append(int(line[6]) + int(line[7][1:-1]))\n            # percent of hit on the query\n            trinity_out_line.append(float(int(line[6]) - int(line[5])) / float(int(line[6]) + int(line[7][1:-1])))\n            # ET name\n            trinity_out_line.append(line[9])\n            # class name\n            trinity_out_line.append(line[10])\n            # target size\n            trinity_out_line.append(int(line[12]) + int(line[13]))\n            # query position\n            trinity_out_line.append(\"[\"+line[11]+\"-\"+line[12]+\"]\")\n            # percent of hit on the target\n            trinity_out_line.append(float(int(line[12]) - int(line[11])) / float(int(line[12]) + int(line[13])))\n            trinity_out_line.append(int(line[0]))\n            trinity_out.append(list(trinity_out_line))\n    print(str(line_number)+\" line read, sorting...\")\n    trinity_out = sorted(trinity_out, key=lambda x: (x[0], -x[8]))\n    prev_contig = \"\"\n    print(\"sort done, filtering...\")\n    with open(\"one_RM_hit_per_Trinity_contigs\", 'w') as output, open(\"Best_RM_annot_80\", 'w') as output_80_80, open(\"Best_RM_annot_partial\", 'w') as output_partial:\n        line_number = 0\n        line_number_80 = 0\n        line_number_partial = 0\n        for trinity_out_line in trinity_out:\n            if trinity_out_line[0] != prev_contig:\n                prev_contig = trinity_out_line[0]\n                if float(trinity_out_line[2]) >= float(${params.repeatmasker_threshold}) :\n                    for i in trinity_out_line[:-1]:\n                        output.write(str(i)+\"\\\\t\")\n                    output.write(\"\\\\n\")\n                    line_number += 1\n                    if float(trinity_out_line[2]) >= 0.80:\n                        if float(trinity_out_line[7]) >= 0.80:\n                            for i in trinity_out_line[:-1]:\n                                output_80_80.write(str(i)+\"\\\\t\")\n                            output_80_80.write(\"\\\\n\")\n                            line_number_80 += 1\n                        if float(trinity_out_line[7]) < 0.80:\n                            for i in trinity_out_line[:-1]:\n                                output_partial.write(str(i)+\"\\\\t\")\n                            output_partial.write(\"\\\\n\")\n                            line_number_partial += 1\n    print(str(line_number)+\" lines in one_RM_hit_per_Trinity_contigs\")\n    print(str(line_number_80)+\" lines in Best_RM_annot_80\")\n    print(str(line_number_partial)+\" lines in Best_RM_annot_partial\")\n    print(\"Done\")\n\"\"\"\n}",
        "nb_lignes_process": 94,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n\"\"\"\n#! /usr/local/bin/python\nwith open(\"concensus_${file_id}.fasta.out\", 'r') as trinity_handle:\n    line_number = 0\n    trinity_out = list()\n    for line in trinity_handle:\n        line_number += 1\n        if line_number > 3:\n            line = line.split()\n            # we swap the start and left column if we are revese\n            if line[8] == \"C\":\n                tmp = line[13]\n                line[13] = line[11][1:-1]\n                line[11] = tmp\n            else:\n                line[13] = line[13][1:-1]\n            trinity_out_line = list()\n            trinity_out_line.append(line[4])\n            # size of the dnaPipeTE contig\n            trinity_out_line.append(int(line[6]) + int(line[7][1:-1]))\n            # percent of hit on the query\n            trinity_out_line.append(float(int(line[6]) - int(line[5])) / float(int(line[6]) + int(line[7][1:-1])))\n            # ET name\n            trinity_out_line.append(line[9])\n            # class name\n            trinity_out_line.append(line[10])\n            # target size\n            trinity_out_line.append(int(line[12]) + int(line[13]))\n            # query position\n            trinity_out_line.append(\"[\"+line[11]+\"-\"+line[12]+\"]\")\n            # percent of hit on the target\n            trinity_out_line.append(float(int(line[12]) - int(line[11])) / float(int(line[12]) + int(line[13])))\n            trinity_out_line.append(int(line[0]))\n            trinity_out.append(list(trinity_out_line))\n    print(str(line_number)+\" line read, sorting...\")\n    trinity_out = sorted(trinity_out, key=lambda x: (x[0], -x[8]))\n    prev_contig = \"\"\n    print(\"sort done, filtering...\")\n    with open(\"one_RM_hit_per_Trinity_contigs\", 'w') as output, open(\"Best_RM_annot_80\", 'w') as output_80_80, open(\"Best_RM_annot_partial\", 'w') as output_partial:\n        line_number = 0\n        line_number_80 = 0\n        line_number_partial = 0\n        for trinity_out_line in trinity_out:\n            if trinity_out_line[0] != prev_contig:\n                prev_contig = trinity_out_line[0]\n                if float(trinity_out_line[2]) >= float(${params.repeatmasker_threshold}) :\n                    for i in trinity_out_line[:-1]:\n                        output.write(str(i)+\"\\\\t\")\n                    output.write(\"\\\\n\")\n                    line_number += 1\n                    if float(trinity_out_line[2]) >= 0.80:\n                        if float(trinity_out_line[7]) >= 0.80:\n                            for i in trinity_out_line[:-1]:\n                                output_80_80.write(str(i)+\"\\\\t\")\n                            output_80_80.write(\"\\\\n\")\n                            line_number_80 += 1\n                        if float(trinity_out_line[7]) < 0.80:\n                            for i in trinity_out_line[:-1]:\n                                output_partial.write(str(i)+\"\\\\t\")\n                            output_partial.write(\"\\\\n\")\n                            line_number_partial += 1\n    print(str(line_number)+\" lines in one_RM_hit_per_Trinity_contigs\")\n    print(str(line_number_80)+\" lines in Best_RM_annot_80\")\n    print(str(line_number_partial)+\" lines in Best_RM_annot_partial\")\n    print(\"Done\")\n\"\"\"",
        "nb_lignes_script": 77,
        "language_script": "/usr/local/bin/python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "file_id",
            "annotation"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"python:3.9\"",
            "label \"big_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.annotation_out != \"\") { publishDir \"results/${params.annotation_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "analysis": {
        "name_process": "analysis",
        "string_process": "\nprocess analysis {\n  container = \"${container_url}\"\n  label \"big_mem_mono_cpus\"\n  tag \"$tsv_id\"\n  publishDir \"results/\", mode: 'copy'\n\n  input:\n    tuple val(tsv_id), path(tsv)\n    tuple val(annotation_id), path(annotation)\n    tuple val(cluster_id), path(cluster), path(bak_clstr)\n    tuple val(transcript_id), path(fasta), path(gtf)\n\n  output:\n    tuple val(tsv_id), path(\"files/\"), emit: report\n\n  script:\n\"\"\"\nmkdir -p files\nmv ${tsv} ${annotation} ${cluster} ${bak_clstr} ${fasta} ${gtf} files/\nwhich R\n\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\nmkdir -p files\nmv ${tsv} ${annotation} ${cluster} ${bak_clstr} ${fasta} ${gtf} files/\nwhich R\n\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "whichdb"
        ],
        "tools_url": [
            "https://bio.tools/whichdb"
        ],
        "tools_dico": [
            {
                "name": "whichdb",
                "uri": "https://bio.tools/whichdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3077",
                            "term": "Data acquisition"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3077",
                            "term": "Data collection"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0957",
                                "term": "Database metadata"
                            }
                        ]
                    }
                ],
                "description": "Search all sequence databases for an entry and retrieve it.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/whichdb.html"
            }
        ],
        "inputs": [
            "tsv_id",
            "tsv",
            "annotation_id",
            "annotation",
            "cluster_id",
            "cluster",
            "bak_clstr",
            "transcript_id",
            "fasta",
            "gtf"
        ],
        "nb_inputs": 10,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"big_mem_mono_cpus\"",
            "tag \"$tsv_id\"",
            "publishDir \"results/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sampling": {
        "name_process": "sampling",
        "string_process": "\nprocess sampling {\n  container = \"${container_url}\"\n  label \"small_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.sampling_out != \"\") {\n    publishDir \"results/${params.sampling_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fastq)\n\n  output:\n    tuple val(file_id), path(\"sub_*.fastq.gz\"), emit: fastq\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  def corverage = params.coverage / 2.0;\n\n  if (fastq.size() == 2)\n\"\"\"\nrasusa \\\n  -b 100kb \\\n  -i ${fastq[0]} ${fastq[1]} \\\n  -o sub_${fastq[0].simpleName}_R1.fastq.gz sub_${fastq[1].simpleName}_R2.fastq.gz\n\"\"\"\n  else\n\"\"\"\nrasusa \\\n  -b 100kb \\\n  -i ${fastq} \\\n  -o sub_${fastq.simpleName}.fastq.gz\n\"\"\"\n}",
        "nb_lignes_process": 44,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  def corverage = params.coverage / 2.0;\n\n  if (fastq.size() == 2)\n\"\"\"\nrasusa \\\n  -b 100kb \\\n  -i ${fastq[0]} ${fastq[1]} \\\n  -o sub_${fastq[0].simpleName}_R1.fastq.gz sub_${fastq[1].simpleName}_R2.fastq.gz\n\"\"\"\n  else\n\"\"\"\nrasusa \\\n  -b 100kb \\\n  -i ${fastq} \\\n  -o sub_${fastq.simpleName}.fastq.gz\n\"\"\"",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fastq"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"small_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.sampling_out != \"\") { publishDir \"results/${params.sampling_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "sampling_enriched": {
        "name_process": "sampling_enriched",
        "string_process": "\nprocess sampling_enriched {\n  container = \"${container_url}\"\n  label \"small_mem_mono_cpus\"\n  tag \"$file_id\"\n  if (params.sampling_out != \"\") {\n    publishDir \"results/${params.sampling_out}\", mode: 'copy'\n  }\n\n  input:\n    tuple val(file_id), path(fastq)\n    tuple val(file_id_enriched), path(fastq_enriched)\n\n  output:\n    tuple val(file_id), path(\"enriched_sub_*.fastq.gz\"), emit: fastq\n\n  script:\n\n  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  if (fastq.size() == 2)\n\"\"\"\nrasusa \\\n  --coverage ${params.coverage} \\\n  --genome-size ${params.genome_size} \\\n  -i ${fastq[0]} ${fastq[1]} \\\n  -O g \\\n  -o sub2_${fastq[0].simpleName}_R1.fastq.gz sub2_${fastq[1].simpleName}_R2.fastq.gz\ncat sub2_${fastq[0].simpleName}_R1.fastq.gz \\\n  ${fastq_enriched[0]} \\\n  > enriched_sub_${fastq[0].simpleName}_R1.fastq.gz\ncat sub2_${fastq[1].simpleName}_R2.fastq.gz \\\n  ${fastq_enriched[1]} \\\n  > enriched_sub_${fastq[1].simpleName}_R2.fastq.gz\nrm sub2_${fastq[0].simpleName}_R1.fastq.gz sub2_${fastq[1].simpleName}_R2.fastq.gz\n\"\"\"\n  else\n\"\"\"\nrasusa \\\n  --coverage ${params.coverage} \\\n  --genome-size ${params.genome_size} \\\n  -i ${fastq} \\\n  -O g \\\n  -o sub2_${fastq.simpleName}.fastq.gz\ncat sub2_${fastq.simpleName}.fastq.gz \\\n  ${fastq_enriched} \\\n  > enriched_sub_${fastq.simpleName}.fastq.gz\nrm sub2_${fastq.simpleName}.fastq.gz\n\"\"\"\n}",
        "nb_lignes_process": 58,
        "string_script": "  switch(file_id) {\n    case {it instanceof List}:\n      file_prefix = file_id[0]\n    break\n    case {it instanceof Map}:\n      file_prefix = file_id.values()[0]\n    break\n    default:\n      file_prefix = file_id\n    break\n  }\n\n  if (fastq.size() == 2)\n\"\"\"\nrasusa \\\n  --coverage ${params.coverage} \\\n  --genome-size ${params.genome_size} \\\n  -i ${fastq[0]} ${fastq[1]} \\\n  -O g \\\n  -o sub2_${fastq[0].simpleName}_R1.fastq.gz sub2_${fastq[1].simpleName}_R2.fastq.gz\ncat sub2_${fastq[0].simpleName}_R1.fastq.gz \\\n  ${fastq_enriched[0]} \\\n  > enriched_sub_${fastq[0].simpleName}_R1.fastq.gz\ncat sub2_${fastq[1].simpleName}_R2.fastq.gz \\\n  ${fastq_enriched[1]} \\\n  > enriched_sub_${fastq[1].simpleName}_R2.fastq.gz\nrm sub2_${fastq[0].simpleName}_R1.fastq.gz sub2_${fastq[1].simpleName}_R2.fastq.gz\n\"\"\"\n  else\n\"\"\"\nrasusa \\\n  --coverage ${params.coverage} \\\n  --genome-size ${params.genome_size} \\\n  -i ${fastq} \\\n  -O g \\\n  -o sub2_${fastq.simpleName}.fastq.gz\ncat sub2_${fastq.simpleName}.fastq.gz \\\n  ${fastq_enriched} \\\n  > enriched_sub_${fastq.simpleName}.fastq.gz\nrm sub2_${fastq.simpleName}.fastq.gz\n\"\"\"",
        "nb_lignes_script": 40,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            }
        ],
        "inputs": [
            "file_id",
            "fastq",
            "file_id_enriched",
            "fastq_enriched"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "clemgoub__dnaPipeTE2",
        "directive": [
            "container = \"${container_url}\"",
            "label \"small_mem_mono_cpus\"",
            "tag \"$file_id\" if (params.sampling_out != \"\") { publishDir \"results/${params.sampling_out}\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    }
}