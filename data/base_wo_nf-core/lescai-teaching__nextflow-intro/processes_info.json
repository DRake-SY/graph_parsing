{
    "headLine": {
        "name_process": "headLine",
        "string_process": "process headLine {\n\n    input:\n    file content\n\n    output:\n    stdout emit: results\n\n    script:\n    \"\"\"\n    head -n 1 $content\n    \"\"\"\n\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    head -n 1 $content\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "content"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lescai-teaching__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "splitLines": {
        "name_process": "splitLines",
        "string_process": "\nprocess splitLines {\n\n    input:\n    path file\n\n    output:\n    file 'line_*'\n\n    \"\"\"\n    count=0\n    while read -r line\n    do\n    ((count++))\n    echo \\$line >line_\\$count\n    done <$file\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    count=0\n    while read -r line\n    do\n    ((count++))\n    echo \\$line >line_\\$count\n    done <$file\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lescai-teaching__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getLast": {
        "name_process": "getLast",
        "string_process": "\nprocess getLast {\n\n    input:\n    path file\n\n    output:\n    stdout\n\n    \"\"\"\n    cat $file | awk '{print \\$NF}'\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    cat $file | awk '{print \\$NF}'\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lescai-teaching__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "splitLetters": {
        "name_process": "splitLetters",
        "string_process": "\nprocess splitLetters {\n\n    input:\n    val x\n\n    output:\n    file 'chunk_*'\n\n    \"\"\"\n    printf '$x' | split -b 6 - chunk_\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    printf '$x' | split -b 6 - chunk_\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "x"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lescai-teaching__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "convertToUpper": {
        "name_process": "convertToUpper",
        "string_process": "\nprocess convertToUpper {\n\n    input:\n    file y\n\n    output:\n    stdout\n\n    \"\"\"\n    cat $y | tr '[a-z]' '[A-Z]'\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    cat $y | tr '[a-z]' '[A-Z]'\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "y"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lescai-teaching__nextflow-intro",
        "directive": [],
        "when": "",
        "stub": ""
    }
}