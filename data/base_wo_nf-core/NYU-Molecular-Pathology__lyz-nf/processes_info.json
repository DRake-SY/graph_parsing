{
    "fix_dirfile_permissions": {
        "name_process": "fix_dirfile_permissions",
        "string_process": " process fix_dirfile_permissions {\n        tag \"${input_dir}\"\n\n        input:\n        set val(type), file(input_dir), val(basename), val(fullpath) from pipelines_dirs\n\n        script:\n        \"\"\"\n        # update group of all items\n        find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n        # update permissions on all directories\n        find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n        # update permissions on all files\n        find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n        # make all exectuable files user & group executable\n        find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n        \"\"\"\n    }",
        "nb_lignes_process": 19,
        "string_script": "        \"\"\"\n        # update group of all items\n        find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n        # update permissions on all directories\n        find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n        # update permissions on all files\n        find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n        # make all exectuable files user & group executable\n        find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n        \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pipelines_dirs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NYU-Molecular-Pathology__lyz-nf",
        "directive": [
            "tag \"${input_dir}\""
        ],
        "when": "",
        "stub": ""
    },
    "sync_demultiplexing_run": {
        "name_process": "sync_demultiplexing_run",
        "string_process": " process sync_demultiplexing_run {\n        tag \"${demux_dir}\"\n\n        input:\n        set val(type), file(demux_dir), val(basename), val(fullpath) from demux_ch\n\n        when:\n        enable_sync_demux_run == true\n\n        script:\n        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # first attempt\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/Demultiplexing\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/Demultiplexing\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"\n    }",
        "nb_lignes_process": 50,
        "string_script": "        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # first attempt\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/Demultiplexing\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/Demultiplexing\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"",
        "nb_lignes_script": 40,
        "language_script": "bash",
        "tools": [
            "Yosshi",
            "PhosTryp"
        ],
        "tools_url": [
            "https://bio.tools/Yosshi",
            "https://bio.tools/phostryp"
        ],
        "tools_dico": [
            {
                "name": "Yosshi",
                "uri": "https://bio.tools/Yosshi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymes"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0130",
                            "term": "Protein folding, stability and design"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1850",
                                    "term": "Protein cysteine and disulfide bond assignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0471",
                                    "term": "Disulfide bond prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Yosshi (YOur web-server for S-S bond HarvestIng) - web server for disulfide engineering by bioinformatic analysis of diverse protein families.",
                "homepage": "https://biokinet.belozersky.msu.ru/yosshiserver/"
            },
            {
                "name": "PhosTryp",
                "uri": "https://bio.tools/phostryp",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A phosphorylation site predictor specific for parasitic protozoa of the family trypanosomatidae.",
                "homepage": "http://phostryp.bio.uniroma2.it"
            }
        ],
        "inputs": [
            "demux_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NYU-Molecular-Pathology__lyz-nf",
        "directive": [
            "tag \"${demux_dir}\""
        ],
        "when": "enable_sync_demux_run == true",
        "stub": ""
    },
    "sync_NGS580_run": {
        "name_process": "sync_NGS580_run",
        "string_process": " process sync_NGS580_run {\n        tag \"${ngs580_dir}\"\n\n        input:\n        set val(type), file(ngs580_dir), val(basename), val(fullpath) from ngs580_ch\n\n        when:\n        enable_sync_demux_run == true\n\n        script:\n        remote_base_dir = \"/mnt/${params.username}/molecular/MOLECULAR/NGS580\"\n        remote_run_dir = \"${remote_base_dir}/${basename}\"\n        remote_output_dir = \"${remote_run_dir}/output\"\n        remote_old_output_dir = \"${remote_run_dir}/old/${logSubDir}\"\n        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # check for changed files\n                ssh '${syncServer}' > changed_files.stdout.txt <<E0F\n                rsync --dry-run --itemize-changes -rt \"${fullpath}\" \"${remote_base_dir}\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n\n                num_changed_files=\"\\$(grep '^>' changed_files.stdout.txt | wc -l)\"\n                echo \"num_changed_files: \\${num_changed_files}\"\n\n                # check if there were files changed\n                if [ \"\\${num_changed_files}\" -ne \"0\" ]; then\n                    echo \"moving old output\"\n\n                # need to move old output to backup location, if it exists\n                # requested to delete output instead\n                ssh '${syncServer}'<<E0F\n                if [ -d \"${remote_output_dir}\" ]; then\n                mkdir -p \"${remote_old_output_dir}\" && \\\n                mv \"${remote_output_dir}\" \"${remote_old_output_dir}/\"\n                fi\n                E0F\n\n                # copy over the new results\n                echo \"starting new copy\"\n                ssh '${syncServer}' <<E0F\n                rsync -rt \"${fullpath}\" \"${remote_base_dir}\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                fi\n                \"\"\"\n                                                                      \n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/NGS580\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"\n    }",
        "nb_lignes_process": 80,
        "string_script": "        remote_base_dir = \"/mnt/${params.username}/molecular/MOLECULAR/NGS580\"\n        remote_run_dir = \"${remote_base_dir}/${basename}\"\n        remote_output_dir = \"${remote_run_dir}/output\"\n        remote_old_output_dir = \"${remote_run_dir}/old/${logSubDir}\"\n        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # check for changed files\n                ssh '${syncServer}' > changed_files.stdout.txt <<E0F\n                rsync --dry-run --itemize-changes -rt \"${fullpath}\" \"${remote_base_dir}\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n\n                num_changed_files=\"\\$(grep '^>' changed_files.stdout.txt | wc -l)\"\n                echo \"num_changed_files: \\${num_changed_files}\"\n\n                # check if there were files changed\n                if [ \"\\${num_changed_files}\" -ne \"0\" ]; then\n                    echo \"moving old output\"\n\n                # need to move old output to backup location, if it exists\n                # requested to delete output instead\n                ssh '${syncServer}'<<E0F\n                if [ -d \"${remote_output_dir}\" ]; then\n                mkdir -p \"${remote_old_output_dir}\" && \\\n                mv \"${remote_output_dir}\" \"${remote_old_output_dir}/\"\n                fi\n                E0F\n\n                # copy over the new results\n                echo \"starting new copy\"\n                ssh '${syncServer}' <<E0F\n                rsync -rt \"${fullpath}\" \"${remote_base_dir}\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                fi\n                \"\"\"\n                                                                      \n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/NGS580\" \\\n                --include=\"${basename}\" \\\n                --include=\"${basename}/output/***\" \\\n                --exclude=\"*:*\" \\\n                --exclude=\"*\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"",
        "nb_lignes_script": 70,
        "language_script": "bash",
        "tools": [
            "Yosshi",
            "PhosTryp"
        ],
        "tools_url": [
            "https://bio.tools/Yosshi",
            "https://bio.tools/phostryp"
        ],
        "tools_dico": [
            {
                "name": "Yosshi",
                "uri": "https://bio.tools/Yosshi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymes"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0130",
                            "term": "Protein folding, stability and design"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1850",
                                    "term": "Protein cysteine and disulfide bond assignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0471",
                                    "term": "Disulfide bond prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Yosshi (YOur web-server for S-S bond HarvestIng) - web server for disulfide engineering by bioinformatic analysis of diverse protein families.",
                "homepage": "https://biokinet.belozersky.msu.ru/yosshiserver/"
            },
            {
                "name": "PhosTryp",
                "uri": "https://bio.tools/phostryp",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A phosphorylation site predictor specific for parasitic protozoa of the family trypanosomatidae.",
                "homepage": "http://phostryp.bio.uniroma2.it"
            }
        ],
        "inputs": [
            "ngs580_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NYU-Molecular-Pathology__lyz-nf",
        "directive": [
            "tag \"${ngs580_dir}\""
        ],
        "when": "enable_sync_demux_run == true",
        "stub": ""
    },
    "sync_samplesheets": {
        "name_process": "sync_samplesheets",
        "string_process": " process sync_samplesheets {\n        tag \"${input_dir}\"\n        input:\n        set val(type), file(input_dir), val(basename), val(fullpath) from samplesheet_ch\n\n        script:\n        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/samplesheets\"\n                E0F\n                \"\"\"\n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/samplesheets\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"\n    }",
        "nb_lignes_process": 36,
        "string_script": "        if ( workflow.profile == 'bigpurple' )\n            if ( task.attempt < 2 )                                         \n                \"\"\"\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/samplesheets\"\n                E0F\n                \"\"\"\n            else\n                \"\"\"\n                # an error occurred; try to fix permissions first\n\n                # update group of all items\n                find \"${fullpath}\" ! -group \"${usergroup}\" -exec chgrp \"${usergroup}\" {} \\\\;\n\n                # update permissions on all directories\n                find \"${fullpath}\" -type d -exec chmod ${dirPerm} {} \\\\;\n\n                # update permissions on all files\n                find \"${fullpath}\" -type f -exec chmod ${filePerm} {} \\\\;\n\n                # make all exectuable files user & group executable\n                find \"${fullpath}\" -type f -executable -exec chmod ug+X {} \\\\;\n\n                # try to copy over files\n                ssh '${syncServer}' <<E0F\n                rsync -vrthP \"${fullpath}\" \"/mnt/${params.username}/molecular/MOLECULAR/samplesheets\"\n                E0F\n                \"\"\"\n        else\n            log.error \"only Big Purple profile is supported as this time\"",
        "nb_lignes_script": 30,
        "language_script": "bash",
        "tools": [
            "Yosshi",
            "PhosTryp"
        ],
        "tools_url": [
            "https://bio.tools/Yosshi",
            "https://bio.tools/phostryp"
        ],
        "tools_dico": [
            {
                "name": "Yosshi",
                "uri": "https://bio.tools/Yosshi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymes"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0130",
                            "term": "Protein folding, stability and design"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0821",
                            "term": "Enzymology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1850",
                                    "term": "Protein cysteine and disulfide bond assignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0471",
                                    "term": "Disulfide bond prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Fold prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Domain prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0303",
                                    "term": "Protein fold prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Yosshi (YOur web-server for S-S bond HarvestIng) - web server for disulfide engineering by bioinformatic analysis of diverse protein families.",
                "homepage": "https://biokinet.belozersky.msu.ru/yosshiserver/"
            },
            {
                "name": "PhosTryp",
                "uri": "https://bio.tools/phostryp",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A phosphorylation site predictor specific for parasitic protozoa of the family trypanosomatidae.",
                "homepage": "http://phostryp.bio.uniroma2.it"
            }
        ],
        "inputs": [
            "samplesheet_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NYU-Molecular-Pathology__lyz-nf",
        "directive": [
            "tag \"${input_dir}\""
        ],
        "when": "",
        "stub": ""
    }
}