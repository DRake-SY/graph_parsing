{
    "AlevinQC": {
        "name_process": "AlevinQC",
        "string_process": "\nprocess AlevinQC {\n\n    tag \"$sample_id\"\n\n    errorStrategy 'finish'\n\n    label 'process_alevinqc'\n\n    publishDir params.outdir, mode: params.publishmode    \n\n    if(workflow.profile.contains('conda'))  { conda \"$params.environment\" }\n    if(workflow.profile.contains('docker')) { container \"$params.container\" }\n    if(workflow.profile.contains('singularity')) { container \"$params.container\" }\n\n    input:\n    tuple val(sample_id), path(alevin)\n    val(suffix)\n\n    output:\n    path(\"*.html\")\n    \n    script:\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/alevin_qc.R $sample_id $alevin $suffix\n    \"\"\" \n\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    Rscript --vanilla $baseDir/bin/alevin_qc.R $sample_id $alevin $suffix\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sample_id",
            "alevin",
            "suffix"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "tag \"$sample_id\"",
            "errorStrategy 'finish'",
            "label 'process_alevinqc'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"$params.environment\" } if(workflow.profile.contains('docker')) { container \"$params.container\" } if(workflow.profile.contains('singularity')) { container \"$params.container\" }"
        ],
        "when": "",
        "stub": ""
    },
    "ValidateSamplesheet": {
        "name_process": "ValidateSamplesheet",
        "string_process": "process ValidateSamplesheet {\n\n    cpus 1\n    memory 2.GB\n    time '5m'\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"$params.environment\" }\n    if(workflow.profile.contains('docker')) { container \"$params.container\" }\n    if(workflow.profile.contains('singularity')) { container \"$params.container\" }\n\n    input:\n    path(samplesheet) \n    val(basedir)\n    val(launchdir)\n    val(projectdir)\n        \n    output:\n    path(\"samplesheet_validated.txt\"), emit: ssheet\n        \n    script: \n    \"\"\"\n    Rscript --vanilla $baseDir/bin/validate_samplesheet.R $samplesheet $basedir $launchdir $projectdir\n    \"\"\"                \n\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    Rscript --vanilla $baseDir/bin/validate_samplesheet.R $samplesheet $basedir $launchdir $projectdir\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "samplesheet",
            "basedir",
            "launchdir",
            "projectdir"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "cpus 1",
            "memory 2.GB",
            "time '5m'",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"$params.environment\" } if(workflow.profile.contains('docker')) { container \"$params.container\" } if(workflow.profile.contains('singularity')) { container \"$params.container\" }"
        ],
        "when": "",
        "stub": ""
    },
    "AlevinIndex": {
        "name_process": "AlevinIndex",
        "string_process": "\nprocess AlevinIndex {\n\n    label 'process_idx'\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"bioconda::salmon=1.6.0\"}\n    if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n    if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n\n    input:\n    path(genome) \n    path(txtome) \n    val(idxname)\n        \n    output:\n    path(\"decoynames.txt\")\n    path(\"gentrome.fa.gz\")\n    path(idxname), emit: idx\n    \n    script: \n\n    def decoynames  = \"decoynames.txt\"\n    def gentrome    = \"gentrome.fa.gz\"\n\n    \"\"\"\n    gzip -cd $genome | grep '^>' | cut -d \" \" -f 1 | awk '{gsub(\\\">\\\",\\\"\\\");print}' > $decoynames\n\n    cat $txtome $genome > $gentrome\n\n    salmon index --no-version-check \\\n        -t $gentrome \\\n        -d $decoynames \\\n        -i $idxname \\\n        -p $task.cpus \\\n        $params.additional\n    \"\"\"                \n\n}",
        "nb_lignes_process": 40,
        "string_script": "    def decoynames  = \"decoynames.txt\"\n    def gentrome    = \"gentrome.fa.gz\"\n\n    \"\"\"\n    gzip -cd $genome | grep '^>' | cut -d \" \" -f 1 | awk '{gsub(\\\">\\\",\\\"\\\");print}' > $decoynames\n\n    cat $txtome $genome > $gentrome\n\n    salmon index --no-version-check \\\n        -t $gentrome \\\n        -d $decoynames \\\n        -i $idxname \\\n        -p $task.cpus \\\n        $params.additional\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "genome",
            "txtome",
            "idxname"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "label 'process_idx'",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"bioconda::salmon=1.6.0\"} if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" } if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "AlevinIndexFB": {
        "name_process": "AlevinIndexFB",
        "string_process": "\nprocess AlevinIndexFB {\n\n    cpus 1\n    memory 100.MB\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"bioconda::salmon=1.6.0\"}\n    if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n    if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n\n    input:\n    path(featureset) \n    val(idxname)\n        \n    output:\n    path(idxname), emit: idx\n    path(\"$idxname/tgmap.txt\"), emit: tgmap\n    \n    script: \n    \"\"\"\n    salmon index --no-version-check \\\n        -t ${featureset} \\\n        -i ${idxname} \\\n        --features \\\n        -k7\n\n    awk 'OFS=\\\"\\t\\\" {print \\$1, \\$1}' $featureset > \"$idxname/tgmap.txt\"\n    \"\"\"                \n\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    salmon index --no-version-check \\\n        -t ${featureset} \\\n        -i ${idxname} \\\n        --features \\\n        -k7\n\n    awk 'OFS=\\\"\\t\\\" {print \\$1, \\$1}' $featureset > \"$idxname/tgmap.txt\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "featureset",
            "idxname"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "cpus 1",
            "memory 100.MB",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"bioconda::salmon=1.6.0\"} if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" } if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "AlevinQuant": {
        "name_process": "AlevinQuant",
        "string_process": "process AlevinQuant {\n\n    tag \"$sample_id\"\n\n    errorStrategy 'finish'\n\n    label 'process_quant_full'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"bioconda::salmon=1.6.0\"}\n    if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n    if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n\n    input:\n    tuple val(sample_id), path(R1), path(R2), val(type)\n    path(idx)                             \n    path(tgmap)                           \n    path(rrnagenes)                       \n    path(mtgenes)                         \n\n    output:\n    tuple val(sample_id), path(sample_id), emit: quants\n    \n    script:\n    \"\"\"\n    salmon alevin --no-version-check \\\n        -i $idx --tgMap $tgmap --mrna $mtgenes --rrna $rrnagenes \\\n        -o $sample_id \\\n        -l $params.libtype \\\n        -p $task.cpus \\\n        $params.additional \\\n        --dumpFeatures \\\n        -1 ${R1} -2 ${R2}\n    \"\"\"\n\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    salmon alevin --no-version-check \\\n        -i $idx --tgMap $tgmap --mrna $mtgenes --rrna $rrnagenes \\\n        -o $sample_id \\\n        -l $params.libtype \\\n        -p $task.cpus \\\n        $params.additional \\\n        --dumpFeatures \\\n        -1 ${R1} -2 ${R2}\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "sample_id",
            "type",
            "R1",
            "R2",
            "idx",
            "tgmap",
            "rrnagenes",
            "mtgenes"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "tag \"$sample_id\"",
            "errorStrategy 'finish'",
            "label 'process_quant_full'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"bioconda::salmon=1.6.0\"} if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" } if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "AlevinQuantFB": {
        "name_process": "AlevinQuantFB",
        "string_process": "\nprocess AlevinQuantFB {\n\n    tag \"$sample_id\"\n\n    errorStrategy 'finish'\n\n    label 'process_quant_features'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"bioconda::salmon=1.6.0\"}\n    if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n    if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }\n\n    input:\n    tuple val(sample_id), path(R1), path(R2), val(notused)\n    path(idx)                         \n    path(tgmap)     \n\n    output:\n    tuple val(sample_id), path(\"${sample_id}${params.suffix}\"), emit: quants\n    \n                                                                                \n    script:\n    \"\"\"   \n    salmon alevin --no-version-check \\\n        -i $idx --tgMap $tgmap \\\n        -o ${sample_id}${params.suffix} \\\n        --libType $params.libtype \\\n        -p $task.cpus \\\n        $params.additional \\\n        --dumpFeatures \\\n        --keepCBFraction 1.0 \\\n        -1 ${R1} -2 ${R2}\n    \"\"\"\n\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"   \n    salmon alevin --no-version-check \\\n        -i $idx --tgMap $tgmap \\\n        -o ${sample_id}${params.suffix} \\\n        --libType $params.libtype \\\n        -p $task.cpus \\\n        $params.additional \\\n        --dumpFeatures \\\n        --keepCBFraction 1.0 \\\n        -1 ${R1} -2 ${R2}\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "sample_id",
            "notused",
            "R1",
            "R2",
            "idx",
            "tgmap"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "tag \"$sample_id\"",
            "errorStrategy 'finish'",
            "label 'process_quant_features'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"bioconda::salmon=1.6.0\"} if(workflow.profile.contains('docker')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" } if(workflow.profile.contains('singularity')) { container \"quay.io/biocontainers/salmon:1.6.0--h84f40af_0\" }"
        ],
        "when": "",
        "stub": ""
    },
    "ParseExonIntronTx": {
        "name_process": "ParseExonIntronTx",
        "string_process": "\nprocess ParseExonIntronTx {\n\n    label 'process_parse_exon_intron'\n\n    errorStrategy 'finish'\n\n    publishDir params.outdir, mode: params.publishmode\n\n    if(workflow.profile.contains('conda'))  { conda \"$params.environment\" }\n    if(workflow.profile.contains('docker')) { container \"$params.container\" }\n    if(workflow.profile.contains('singularity')) { container \"$params.container\" }\n\n    input:\n    path(genome)            \n    path(gtf)               \n\n    output:\n    path \"*annotation.expanded.fa.gz\",              emit: txtome                \n    path \"*annotation.expanded.gtf.gz\",             emit: gtf                   \n    path \"*annotation.expanded.features.tsv.gz\",    emit: features              \n    path \"*annotation.expanded.tx2gene.tsv\",        emit: tgmap                 \n    path \"*annotation.mtRNA.txt\",                   emit: mtgenes               \n    path \"*annotation.rRNA.txt\",                    emit: rrnagenes             \n    path \"*annotation.gene2type.txt\",               emit: gene2type             \n\n    script:\n    \"\"\"\n    Rscript --vanilla \\\n        $baseDir/bin/parse_introns.R \\\n            $genome $gtf \\\"$params.gene_name\\\" \\\"$params.gene_id\\\" \\\"$params.gene_type\\\" \\\"$params.chrM\\\" \\\"$params.rrna\\\"\n    \"\"\"\n\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    Rscript --vanilla \\\n        $baseDir/bin/parse_introns.R \\\n            $genome $gtf \\\"$params.gene_name\\\" \\\"$params.gene_id\\\" \\\"$params.gene_type\\\" \\\"$params.chrM\\\" \\\"$params.rrna\\\"\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome",
            "gtf"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "label 'process_parse_exon_intron'",
            "errorStrategy 'finish'",
            "publishDir params.outdir, mode: params.publishmode if(workflow.profile.contains('conda')) { conda \"$params.environment\" } if(workflow.profile.contains('docker')) { container \"$params.container\" } if(workflow.profile.contains('singularity')) { container \"$params.container\" }"
        ],
        "when": "",
        "stub": ""
    },
    "WriteMtx": {
        "name_process": "WriteMtx",
        "string_process": "\nprocess WriteMtx {\n\n    tag \"$basename\"\n\n    errorStrategy 'finish'\n\n    label 'process_mtx'\n\n    publishDir = [\n        path: params.outdir, \n        mode: params.publishmode,\n        saveAs: {filename -> filename.contains(\"ncells.txt\") ? null : filename}\n    ]\n\n    if(workflow.profile.contains('conda'))  { conda \"$params.environment\" }\n    if(workflow.profile.contains('docker')) { container \"$params.container\" }\n    if(workflow.profile.contains('singularity')) { container \"$params.container\" }\n\n    input:\n    tuple val(basename), path(quant_rna), path(quant_fb)\n    path(expanded_features)\n    path(gene2type)\n    path(translate_table)\n\n    output:\n    path(\"${basename}*.mtx.gz\"), emit: mtx\n    path(\"${basename}_barcodes.tsv.gz\"), emit: barcodes\n    path(\"${basename}_features.tsv.gz\"), emit: features\n    path(\"${basename}_ncells.txt\"), emit: ncells\n    \n    script:\n                 \n    def do_translate = params.translate_barcodes==true ? '--do_translate' : ''\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/mtx.R \\\n        --sampleid $basename \\\n        --alevin_rna $quant_rna \\\n        --alevin_fb $quant_fb \\\n        --expanded_features $expanded_features \\\n        --gene2type $gene2type \\\n        --translate_table $translate_table \\\n        $do_translate\n    \"\"\" \n\n}",
        "nb_lignes_process": 44,
        "string_script": "    def do_translate = params.translate_barcodes==true ? '--do_translate' : ''\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/mtx.R \\\n        --sampleid $basename \\\n        --alevin_rna $quant_rna \\\n        --alevin_fb $quant_fb \\\n        --expanded_features $expanded_features \\\n        --gene2type $gene2type \\\n        --translate_table $translate_table \\\n        $do_translate\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "basename",
            "quant_rna",
            "quant_fb",
            "expanded_features",
            "gene2type",
            "translate_table"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "tag \"$basename\"",
            "errorStrategy 'finish'",
            "label 'process_mtx'",
            "publishDir = [ path: params.outdir , mode: params.publishmode, saveAs: {filename -> filename.contains(\"ncells.txt\") ? null : filename} ] if(workflow.profile.contains('conda')) { conda \"$params.environment\" } if(workflow.profile.contains('docker')) { container \"$params.container\" } if(workflow.profile.contains('singularity')) { container \"$params.container\" }"
        ],
        "when": "",
        "stub": ""
    },
    "WriteNcells": {
        "name_process": "WriteNcells",
        "string_process": "process WriteNcells {\n\n    cpus 1\n    memory 2.GB\n\n    errorStrategy 'finish'\n\n    publishDir = [\n        path: params.outdir, \n        mode: params.publishmode,\n    ]\n\n    if(workflow.profile.contains('conda'))  { conda \"$params.environment\" }\n    if(workflow.profile.contains('docker')) { container \"$params.container\" }\n    if(workflow.profile.contains('singularity')) { container \"$params.container\" }\n\n    input:\n    path(dirs)\n\n    output:\n    path(\"summary_detected_cells.txt\")\n    path(\"summary_detected_cells.pdf\")\n\n    script:\n    \"\"\"\n    Rscript --vanilla $baseDir/bin/summary.R\n    \"\"\"\n\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    Rscript --vanilla $baseDir/bin/summary.R\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dirs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ATpoint__sc_preprocess",
        "directive": [
            "cpus 1",
            "memory 2.GB",
            "errorStrategy 'finish'",
            "publishDir = [ path: params.outdir , mode: params.publishmode, ] if(workflow.profile.contains('conda')) { conda \"$params.environment\" } if(workflow.profile.contains('docker')) { container \"$params.container\" } if(workflow.profile.contains('singularity')) { container \"$params.container\" }"
        ],
        "when": "",
        "stub": ""
    }
}