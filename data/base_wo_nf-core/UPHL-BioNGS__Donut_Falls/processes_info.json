{
    "nanoplot": {
        "name_process": "nanoplot",
        "string_process": "\nprocess nanoplot {\n  publishDir \"${params.outdir}\", mode: 'copy'\n  tag \"nanoplot\"\n  cpus params.medcpus\n  container 'staphb/nanoplot:latest'\n\n  when:\n  params.nanoplot\n\n  input:\n  file(sequencing_summary) from sequencing_summary.view()\n\n  output:\n  path(\"${task.process}\")\n  path(\"logs/${task.process}/${workflow.sessionId}.{log,err}\")\n\n  shell:\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    NanoPlot --version | tee -a $log_file $err_file > /dev/null\n\n    NanoPlot !{params.nanoplot_options} \\\n      --summary !{sequencing_summary} \\\n      --threads !{task.cpus} \\\n      --outdir !{task.process} \\\n      --raw \\\n      2>> $err_file >> $log_file\n  '''\n}",
        "nb_lignes_process": 33,
        "string_script": "  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    NanoPlot --version | tee -a $log_file $err_file > /dev/null\n\n    NanoPlot !{params.nanoplot_options} \\\n      --summary !{sequencing_summary} \\\n      --threads !{task.cpus} \\\n      --outdir !{task.process} \\\n      --raw \\\n      2>> $err_file >> $log_file\n  '''",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "sequencing_summary"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"nanoplot\"",
            "cpus params.medcpus",
            "container 'staphb/nanoplot:latest'"
        ],
        "when": "params.nanoplot",
        "stub": ""
    },
    "fastp": {
        "name_process": "fastp",
        "string_process": "\nprocess fastp {\n  publishDir \"${params.outdir}\", mode: 'copy'\n  tag \"${sample}\"\n  cpus 1\n  container 'bromberglab/fastp:latest'\n\n  when:\n  sample != null\n\n  input:\n  tuple val(sample), path(fastq) from illumina_fastqs\n\n  output:\n  tuple val(sample), path(\"${task.process}/${sample}_{R1,R2}.fastq.gz\") into clean_reads\n  path(\"${task.process}\")\n  path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n  shell:\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    fastp --version >> $log_file 2>> $err_file\n\n    fastp !{params.fastp_options} \\\n      --in1 !{fastq[0]} \\\n      --in2 !{fastq[1]} \\\n      --out1 !{task.process}/!{sample}_R1.fastq.gz \\\n      --out2 !{task.process}/!{sample}_R2.fastq.gz \\\n      --unpaired1 !{task.process}/!{sample}_u.fastq.gz \\\n      --unpaired2 !{task.process}/!{sample}_u.fastq.gz \\\n      2>> $err_file >> $log_file\n\n    cp *.html !{task.process}/.\n    cp *.json !{task.process}/.\n  '''\n}",
        "nb_lignes_process": 39,
        "string_script": "  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    fastp --version >> $log_file 2>> $err_file\n\n    fastp !{params.fastp_options} \\\n      --in1 !{fastq[0]} \\\n      --in2 !{fastq[1]} \\\n      --out1 !{task.process}/!{sample}_R1.fastq.gz \\\n      --out2 !{task.process}/!{sample}_R2.fastq.gz \\\n      --unpaired1 !{task.process}/!{sample}_u.fastq.gz \\\n      --unpaired2 !{task.process}/!{sample}_u.fastq.gz \\\n      2>> $err_file >> $log_file\n\n    cp *.html !{task.process}/.\n    cp *.json !{task.process}/.\n  '''",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq",
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq",
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "illumina_fastqs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "clean_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus 1",
            "container 'bromberglab/fastp:latest'"
        ],
        "when": "sample != null",
        "stub": ""
    },
    "filtlong": {
        "name_process": "filtlong",
        "string_process": "\nprocess filtlong {\n  publishDir \"${params.outdir}\", mode: 'copy', pattern: \"logs/${task.process}/*.${workflow.sessionId}.{log,err}\"\n  tag \"${sample}\"\n  cpus 1\n  container 'staphb/filtlong:latest'\n\n  input:\n  tuple val(sample), file(fastq), file(short_reads) from fastq.join(clean_reads, by:0, remainder : true)\n\n  output:\n  tuple val(sample), path(\"${task.process}/${sample}_filtered.fastq\") optional true into filtlong_fastq\n  path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n  shell:\n  if (short_reads[1] == null) {\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    filtlong --version >> $log_file\n\n    filtlong !{params.filtlong_options} \\\n      !{fastq} 2>> $err_file > !{task.process}/!{sample}_filtered.fastq\n  '''\n  } else {\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    filtlong --version >> $log_file\n\n    filtlong !{params.filtlong_options} \\\n      -1 !{short_reads[0]} \\\n      -2 !{short_reads[1]} \\\n      !{fastq} \\\n      2>> $err_file > !{task.process}/!{sample}_filtered.fastq\n    '''\n  }\n}",
        "nb_lignes_process": 44,
        "string_script": "  if (short_reads[1] == null) {\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    filtlong --version >> $log_file\n\n    filtlong !{params.filtlong_options} \\\n      !{fastq} 2>> $err_file > !{task.process}/!{sample}_filtered.fastq\n  '''\n  } else {\n  '''\n    mkdir -p !{task.process} logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    filtlong --version >> $log_file\n\n    filtlong !{params.filtlong_options} \\\n      -1 !{short_reads[0]} \\\n      -2 !{short_reads[1]} \\\n      !{fastq} \\\n      2>> $err_file > !{task.process}/!{sample}_filtered.fastq\n    '''\n  }",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq",
            "Filtlong"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq",
            "https://bio.tools/Filtlong"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "Filtlong",
                "uri": "https://bio.tools/Filtlong",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0798",
                            "term": "Mobile genetic elements"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3482",
                                    "term": "Antimicrobial resistance prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3472",
                                    "term": "k-mer counting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3359",
                                    "term": "Splitting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3359",
                                    "term": "File splitting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Complete hybrid genome assembly of clinical multidrug-resistant Bacteroides fragilis isolates enables comprehensive identification of antimicrobial-resistance genes and plasmids.\n\nquality filtering tool for long reads.\n\nFiltlong is a tool for filtering long reads by quality. It can take a set of long reads and produce a smaller, better subset. It uses both read length (longer is better) and read identity (higher is better) when choosing which reads pass the filter.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'Unicycler' (bio.tools/unicycler), 'Canu-corrected ONT', 'AMR', 'fragilis'",
                "homepage": "https://github.com/rrwick/Filtlong"
            }
        ],
        "inputs": [
            "fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filtlong_fastq"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy', pattern: \"logs/${task.process}/*.${workflow.sessionId}.{log,err}\"",
            "tag \"${sample}\"",
            "cpus 1",
            "container 'staphb/filtlong:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "bgzip": {
        "name_process": "bgzip",
        "string_process": "\nprocess bgzip {\n  publishDir \"${params.outdir}\", mode: 'copy'\n  tag \"${sample}\"\n  cpus 1\n  container 'staphb/ivar:latest'\n\n  input:\n  tuple val(sample), path(fastq) from filtlong_fastq\n\n  output:\n  tuple val(sample), path(\"filtlong/${fastq}.gz\") optional true into filtered_fastq, filtered_fastq_medaka\n  path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n  shell:\n  '''\n    mkdir -p filtlong logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    bgzip --version 2>> $err_file >> $log_file\n\n    bgzip -@ {task.cpus} !{fastq}\n    mv !{fastq}.gz filtlong/.\n  '''\n}",
        "nb_lignes_process": 26,
        "string_script": "  '''\n    mkdir -p filtlong logs/!{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    bgzip --version 2>> $err_file >> $log_file\n\n    bgzip -@ {task.cpus} !{fastq}\n    mv !{fastq}.gz filtlong/.\n  '''",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "filtlong_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filtered_fastq",
            "filtered_fastq_medaka"
        ],
        "nb_outputs": 2,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus 1",
            "container 'staphb/ivar:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "flye": {
        "name_process": "flye",
        "string_process": " process flye {\n    publishDir \"${params.outdir}\", mode: 'copy'\n    tag \"${sample}\"\n    cpus params.medcpus\n    container 'staphb/flye:latest'\n                            \n\n    input:\n    tuple val(sample), path(fastq) from filtered_fastq\n\n    output:\n    tuple val(sample), path(\"${task.process}/${sample}.fasta\") into assembled_fastas\n    path(\"${task.process}/${sample}/*\")\n    path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n    shell:\n    '''\n      mkdir -p logs/!{task.process} !{task.process}/!{sample}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      flye --version 2>> $err_file >> $log_file\n\n      flye !{params.flye_options} \\\n        --nano-raw !{fastq} \\\n        --threads !{task.cpus} \\\n        --out-dir !{task.process}/!{sample} \\\n        2>> $err_file >> $log_file\n\n      cp !{task.process}/!{sample}/assembly.fasta !{task.process}/!{sample}.fasta\n    '''\n  }",
        "nb_lignes_process": 32,
        "string_script": "    '''\n      mkdir -p logs/!{task.process} !{task.process}/!{sample}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      flye --version 2>> $err_file >> $log_file\n\n      flye !{params.flye_options} \\\n        --nano-raw !{fastq} \\\n        --threads !{task.cpus} \\\n        --out-dir !{task.process}/!{sample} \\\n        2>> $err_file >> $log_file\n\n      cp !{task.process}/!{sample}/assembly.fasta !{task.process}/!{sample}.fasta\n    '''",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq",
            "Flye"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq",
            "https://bio.tools/Flye"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "Flye",
                "uri": "https://bio.tools/Flye",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flye is a de novo assembler for single molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PB / ONT reads as input and outputs polished contigs.",
                "homepage": "https://github.com/fenderglass/Flye"
            }
        ],
        "inputs": [
            "filtered_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "assembled_fastas"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus params.medcpus",
            "container 'staphb/flye:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "miniasm_and_minipolish": {
        "name_process": "miniasm_and_minipolish",
        "string_process": " process miniasm_and_minipolish {\n    publishDir \"${params.outdir}\", mode: 'copy'\n    tag \"${sample}\"\n    cpus params.medcpus\n    container 'staphb/minipolish:latest'\n\n    input:\n    tuple val(sample), path(fastq) from filtered_fastq\n\n    output:\n    tuple val(sample), path(\"${task.process}/${sample}/*gfa\") into miniasm_gfa\n    path(\"${task.process}/${sample}/*\")\n    path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n    shell:\n    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      echo \"miniasm version : $(miniasm -V)\" 2>> $err_file >> $log_file\n      minimap2 --version 2>> $err_file >> $log_file\n      minipolish --version 2>> $err_file >> $log_file\n\n      miniasm_and_minipolish.sh \\\n        !{fastq} \\\n        !{task.cpus} \\\n        2>> $err_file > !{task.process}/!{sample}/!{sample}.gfa\n    '''\n  }",
        "nb_lignes_process": 30,
        "string_script": "    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      echo \"miniasm version : $(miniasm -V)\" 2>> $err_file >> $log_file\n      minimap2 --version 2>> $err_file >> $log_file\n      minipolish --version 2>> $err_file >> $log_file\n\n      miniasm_and_minipolish.sh \\\n        !{fastq} \\\n        !{task.cpus} \\\n        2>> $err_file > !{task.process}/!{sample}/!{sample}.gfa\n    '''",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq",
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq",
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "filtered_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "miniasm_gfa"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus params.medcpus",
            "container 'staphb/minipolish:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "any2fasta": {
        "name_process": "any2fasta",
        "string_process": " process any2fasta {\n    publishDir \"${params.outdir}\", mode: 'copy'\n    tag \"${sample}\"\n    cpus 1\n    container 'staphb/any2fasta:latest'\n\n    input:\n    tuple val(sample), path(gfa) from miniasm_gfa\n\n    output:\n    tuple val(sample), path(\"${task.process}/${sample}.fasta\") into assembled_fastas\n    path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n    shell:\n    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      any2fasta -v 2>> $err_file >> $log_file\n\n      any2fasta !{params.any2fasta_options} \\\n        !{gfa} \\\n        2>> $err_file \\\n        > !{task.process}/!{sample}.fasta\n    '''\n  }",
        "nb_lignes_process": 27,
        "string_script": "    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      any2fasta -v 2>> $err_file >> $log_file\n\n      any2fasta !{params.any2fasta_options} \\\n        !{gfa} \\\n        2>> $err_file \\\n        > !{task.process}/!{sample}.fasta\n    '''",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "miniasm_gfa"
        ],
        "nb_inputs": 1,
        "outputs": [
            "assembled_fastas"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus 1",
            "container 'staphb/any2fasta:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "raven": {
        "name_process": "raven",
        "string_process": " process raven {\n    publishDir \"${params.outdir}\", mode: 'copy'\n    tag \"${sample}\"\n    cpus params.medcpus\n    container 'staphb/raven:latest'\n\n    input:\n    tuple val(sample), path(fastq) from filtered_fastq\n\n    output:\n    tuple val(sample), path(\"${task.process}/${sample}/${sample}.fasta\") into raven_fastas\n    path(\"${task.process}/${sample}/*\")\n    path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n    shell:\n    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      raven --version 2>> $err_file >> $log_file\n\n      raven !{params.raven_options} \\\n        --threads !{task.cpus} \\\n        --graphical-fragment-assembly !{task.process}/!{sample}/!{sample}.gfa \\\n        !{fastq} \\\n        2>> $err_file \\\n        > !{task.process}/!{sample}/!{sample}.fasta\n    '''\n  }",
        "nb_lignes_process": 30,
        "string_script": "    '''\n      mkdir -p !{task.process}/!{sample} logs/!{task.process}\n      log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n      err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n      # time stamp + capturing tool versions\n      date | tee -a $log_file $err_file > /dev/null\n      raven --version 2>> $err_file >> $log_file\n\n      raven !{params.raven_options} \\\n        --threads !{task.cpus} \\\n        --graphical-fragment-assembly !{task.process}/!{sample}/!{sample}.gfa \\\n        !{fastq} \\\n        2>> $err_file \\\n        > !{task.process}/!{sample}/!{sample}.fasta\n    '''",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "filtered_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raven_fastas"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus params.medcpus",
            "container 'staphb/raven:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "medaka": {
        "name_process": "medaka",
        "string_process": "\nprocess medaka {\n  publishDir \"${params.outdir}\", mode: 'copy'\n  tag \"${sample}\"\n  cpus 6\n  container 'ontresearch/medaka:latest'\n\n  input:\n  tuple val(sample), path(fasta), path(fastq) from assembled_fastas.join(filtered_fastq_medaka, by:0 )\n\n  output:\n  path(\"${task.process}/${sample}/\")\n  tuple val(sample), path(\"${task.process}/${sample}/${sample}_medaka_consensus.fasta\") into medaka_fastas\n  path(\"logs/${task.process}/${sample}.${workflow.sessionId}.{log,err}\")\n\n  shell:\n  '''\n    mkdir -p logs/!{task.process} !{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    medaka --version >> $log_file\n\n    medaka_consensus !{params.medaka_options} \\\n      -i !{fastq} \\\n      -d !{fasta} \\\n      -o !{task.process}/!{sample} \\\n      -t 2\n\n    cp !{task.process}/!{sample}/consensus.fasta !{task.process}/!{sample}/!{sample}_medaka_consensus.fasta\n  '''\n}",
        "nb_lignes_process": 32,
        "string_script": "  '''\n    mkdir -p logs/!{task.process} !{task.process}\n    log_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    medaka --version >> $log_file\n\n    medaka_consensus !{params.medaka_options} \\\n      -i !{fastq} \\\n      -d !{fasta} \\\n      -o !{task.process}/!{sample} \\\n      -t 2\n\n    cp !{task.process}/!{sample}/consensus.fasta !{task.process}/!{sample}/!{sample}_medaka_consensus.fasta\n  '''",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            }
        ],
        "inputs": [
            "assembled_fastas"
        ],
        "nb_inputs": 1,
        "outputs": [
            "medaka_fastas"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'",
            "tag \"${sample}\"",
            "cpus 6",
            "container 'ontresearch/medaka:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "polca": {
        "name_process": "polca",
        "string_process": "\nprocess polca {\n  publishDir \"${params.outdir}/${task.process}/${sample}/round_${round}\", mode: 'copy', pattern: \"*{err,batches,success,vcf,names,report,PolcaCorrected.fa}\"\n  publishDir \"${params.outdir}\", mode: 'copy', pattern: \"logs/${task.process}/${sample}_${round}.${workflow.sessionId}.{log,err}\"\n  publishDir \"${params.outdir}\", mode: 'copy', pattern: \"${task.process}/${sample}/${sample}_*.fasta\"\n  tag \"${sample} : round ${round} : changes ${changes}\"\n  cpus params.medcpus\n                                           \n\n  input:\n  tuple val(sample), path(fasta), path(fastq), val(round), val(changes) from for_polca\n\n  output:\n  tuple val(sample), path(\"next/${sample}_${round}.fasta\"), path(fastq), env(next_round), env(change_test) optional true into new_rounds\n  path(\"*\")\n  path(\"${task.process}/${sample}/${sample}_{${round},final}.fasta\") optional true\n  path(\"logs/${task.process}/${sample}_${round}.${workflow.sessionId}.{log,err}\")\n\n  shell:\n  '''\n    mkdir -p logs/!{task.process} !{task.process}/!{sample} next\n    log_file=logs/!{task.process}/!{sample}_!{round}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}_!{round}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    masurca --version >> $log_file\n\n    polca.sh !{params.polca_options} \\\n      -r '!{fastq}' \\\n      -a !{fasta} \\\n      -t !{task.cpus}\n\n    if [ -f \"!{fasta}.report\" ]\n    then\n      sub_err=$(grep \"Substitution Errors\" !{fasta}.report | awk '{print $3}')\n      del_err=$(grep \"Deletion Errors\" !{fasta}.report | awk '{print $3}')\n      if [ -z \"$sub_err\" ] ; then sub_err=0 ; fi\n      if [ -z \"$del_err\" ] ; then del_err=0 ; fi\n      change_test=$(( sub_err + del_err ))\n    else\n      echo \"WARNING : report not found\" >> $err_file\n      sub_err=0\n      del_err=0\n      change_test=0\n    fi\n\n    echo \"The number of changes from this round was $change_test\" >> $log_file\n    echo \"$sub_err changes were from substitution errors\" >> $log_file\n    echo \"$del_err changes were from insertion/deletion errors\" >> $log_file\n\n    if [ \"$change_test\" -lt \"1\" ]\n    then\n      next_round=1000\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_final.fasta\n    elif [ \"$change_test\" -eq \"!{changes}\" ] && [ \"$change_test\" -lt \"10000\" ]\n    then\n      next_round=1000\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_final.fasta\n    else\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n\n      next_round=$(( !{round} + 1 ))\n      if [ \"$next_round\" -le \"!{params.max_polish_rounds}\" ] ; then cp !{fasta}.PolcaCorrected.fa next/!{sample}_!{round}.fasta ; fi\n    fi\n  '''\n}",
        "nb_lignes_process": 67,
        "string_script": "  '''\n    mkdir -p logs/!{task.process} !{task.process}/!{sample} next\n    log_file=logs/!{task.process}/!{sample}_!{round}.!{workflow.sessionId}.log\n    err_file=logs/!{task.process}/!{sample}_!{round}.!{workflow.sessionId}.err\n\n    # time stamp + capturing tool versions\n    date | tee -a $log_file $err_file > /dev/null\n    masurca --version >> $log_file\n\n    polca.sh !{params.polca_options} \\\n      -r '!{fastq}' \\\n      -a !{fasta} \\\n      -t !{task.cpus}\n\n    if [ -f \"!{fasta}.report\" ]\n    then\n      sub_err=$(grep \"Substitution Errors\" !{fasta}.report | awk '{print $3}')\n      del_err=$(grep \"Deletion Errors\" !{fasta}.report | awk '{print $3}')\n      if [ -z \"$sub_err\" ] ; then sub_err=0 ; fi\n      if [ -z \"$del_err\" ] ; then del_err=0 ; fi\n      change_test=$(( sub_err + del_err ))\n    else\n      echo \"WARNING : report not found\" >> $err_file\n      sub_err=0\n      del_err=0\n      change_test=0\n    fi\n\n    echo \"The number of changes from this round was $change_test\" >> $log_file\n    echo \"$sub_err changes were from substitution errors\" >> $log_file\n    echo \"$del_err changes were from insertion/deletion errors\" >> $log_file\n\n    if [ \"$change_test\" -lt \"1\" ]\n    then\n      next_round=1000\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_final.fasta\n    elif [ \"$change_test\" -eq \"!{changes}\" ] && [ \"$change_test\" -lt \"10000\" ]\n    then\n      next_round=1000\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_final.fasta\n    else\n      cp !{fasta}.PolcaCorrected.fa !{task.process}/!{sample}/!{sample}_!{round}.fasta\n\n      next_round=$(( !{round} + 1 ))\n      if [ \"$next_round\" -le \"!{params.max_polish_rounds}\" ] ; then cp !{fasta}.PolcaCorrected.fa next/!{sample}_!{round}.fasta ; fi\n    fi\n  '''",
        "nb_lignes_script": 48,
        "language_script": "bash",
        "tools": [
            "datelife",
            "NullSeq",
            "MaSuRCA"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/nullseq",
            "https://bio.tools/masurca"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "MaSuRCA",
                "uri": "https://bio.tools/masurca",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Whole genome assembly software. It combines the efficiency of the de\u00a0Bruijn graph and Overlap-Layout-Consensus (OLC) approaches. MaSuRCA can assemble data sets containing only short reads from Illumina sequencing or a mixture of short reads and long reads (Sanger, 454).",
                "homepage": "http://www.genome.umd.edu/masurca.html"
            }
        ],
        "inputs": [
            "for_polca"
        ],
        "nb_inputs": 1,
        "outputs": [
            "new_rounds"
        ],
        "nb_outputs": 1,
        "name_workflow": "UPHL-BioNGS__Donut_Falls",
        "directive": [
            "publishDir \"${params.outdir}/${task.process}/${sample}/round_${round}\", mode: 'copy', pattern: \"*{err,batches,success,vcf,names,report,PolcaCorrected.fa}\"",
            "publishDir \"${params.outdir}\", mode: 'copy', pattern: \"logs/${task.process}/${sample}_${round}.${workflow.sessionId}.{log,err}\"",
            "publishDir \"${params.outdir}\", mode: 'copy', pattern: \"${task.process}/${sample}/${sample}_*.fasta\"",
            "tag \"${sample} : round ${round} : changes ${changes}\"",
            "cpus params.medcpus"
        ],
        "when": "",
        "stub": ""
    }
}