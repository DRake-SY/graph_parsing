{
    "gzip_to_bgzip": {
        "name_process": "gzip_to_bgzip",
        "string_process": "\nprocess gzip_to_bgzip {\n\n    publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"genome_in.fa.gz\")\n\n    output:\n        tuple val(row), path(\"${row.genome}.fa.gz\")\n\n    \"\"\"\n        gzip -dc genome_in.fa.gz > genome.fa\n        bgzip genome.fa\n        mv genome.fa.gz ${row.genome}.fa.gz\n    \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n        gzip -dc genome_in.fa.gz > genome.fa\n        bgzip genome.fa\n        mv genome.fa.gz ${row.genome}.fa.gz\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bwa_index": {
        "name_process": "bwa_index",
        "string_process": "\nprocess bwa_index {\n\n    publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"${row.genome}.fa.gz\")\n\n    output:\n        path(\"${row.genome}.fa.gz.amb\")\n        path(\"${row.genome}.fa.gz.ann\")\n        path(\"${row.genome}.fa.gz.bwt\")\n        path(\"${row.genome}.fa.gz.pac\")\n        path(\"${row.genome}.fa.gz.sa\")\n\n    \"\"\"\n        bwa index ${row.genome}.fa.gz\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n        bwa index ${row.genome}.fa.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_faidx": {
        "name_process": "samtools_faidx",
        "string_process": "\nprocess samtools_faidx {\n\n    publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"${row.genome}.fa.gz\")\n\n    output:\n        path(\"${row.genome}.fa.gz.fai\")\n        path(\"${row.genome}.fa.gz.gzi\")\n\n    \"\"\"\n        samtools faidx ${row.genome}.fa.gz\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n        samtools faidx ${row.genome}.fa.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "create_sequence_dictionary": {
        "name_process": "create_sequence_dictionary",
        "string_process": "\nprocess create_sequence_dictionary {\n\n    publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"${row.genome}.fa.gz\")\n\n    output:\n        path(\"${row.genome}.dict\")\n        \n    \"\"\"\n    picard CreateSequenceDictionary \\\n        R=${row.genome}.fa.gz \\\n        O=${row.genome}.dict\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    picard CreateSequenceDictionary \\\n        R=${row.genome}.fa.gz \\\n        O=${row.genome}.dict\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fetch_projects": {
        "name_process": "fetch_projects",
        "string_process": "\nprocess fetch_projects {\n\n    executor 'local'\n\n    publishDir \"${params.output}/\", mode: 'copy'\n\n    output:\n        path(\"project_species.tsv\")\n\n    shell:\n    '''\n    set -e\n    wormbase_url=\"ftp://ftp.wormbase.org/pub/wormbase\"\n    species=$(curl ${wormbase_url}/species/ | awk '{ print $9 }' | grep -v \"README\")\n\n    function fetch_projects {\n        species=${1}\n        curl \"${wormbase_url}/species/${species}/\" | \\\n            awk -v OFS=\"\\t\" -v species=${species} '$9 ~ \"^PR\" { print species, $9 }'\n    }\n    export wormbase_url\n    export -f fetch_projects\n    {\n        echo -e \"species\\tproject\";\n        parallel --retry-failed -j 8 --verbose fetch_projects ::: ${species};\n    } > project_species.tsv\n    '''\n}",
        "nb_lignes_process": 27,
        "string_script": "    '''\n    set -e\n    wormbase_url=\"ftp://ftp.wormbase.org/pub/wormbase\"\n    species=$(curl ${wormbase_url}/species/ | awk '{ print $9 }' | grep -v \"README\")\n\n    function fetch_projects {\n        species=${1}\n        curl \"${wormbase_url}/species/${species}/\" | \\\n            awk -v OFS=\"\\t\" -v species=${species} '$9 ~ \"^PR\" { print species, $9 }'\n    }\n    export wormbase_url\n    export -f fetch_projects\n    {\n        echo -e \"species\\tproject\";\n        parallel --retry-failed -j 8 --verbose fetch_projects ::: ${species};\n    } > project_species.tsv\n    '''",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "WormBase",
            "GOFunction",
            "CURLS",
            "parallelGWAS"
        ],
        "tools_url": [
            "https://bio.tools/wormbase",
            "https://bio.tools/gofunction",
            "https://bio.tools/CURLS",
            "https://bio.tools/parallelgwas"
        ],
        "tools_dico": [
            {
                "name": "WormBase",
                "uri": "https://bio.tools/wormbase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2295",
                                "term": "Gene ID"
                            },
                            {
                                "uri": "http://edamontology.org/data_0989",
                                "term": "Protein identifier"
                            },
                            {
                                "uri": "http://edamontology.org/data_1026",
                                "term": "Gene symbol"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0916",
                                "term": "Gene report"
                            }
                        ]
                    }
                ],
                "description": "Caenorhabditis elegans genome database. International consortium of biologists and computer scientists dedicated to providing the research community with accurate, current, accessible information concerning the genetics, genomics and biology of C. elegans and related nematodes. Founded in 2000, the Consortium is led by Paul Sternberg of CalTech, Paul Kersey of the EBI, Matt Berriman of the Wellcome Trust Sanger Institute, and Lincoln Stein of the Ontario Institute for Cancer Research.",
                "homepage": "http://www.wormbase.org/"
            },
            {
                "name": "GOFunction",
                "uri": "https://bio.tools/gofunction",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3658",
                                    "term": "Statistical inference"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The GO-function package provides a tool to address the redundancy that result from the GO structure or multiple annotation genes and derive biologically relevant functions from the statistically significant functions based on some intuitive assumption and statistical testing.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GOFunction.html"
            },
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            },
            {
                "name": "parallelGWAS",
                "uri": "https://bio.tools/parallelgwas",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Developing parallel computing tools for genome-wide association studies.",
                "homepage": "https://en.osdn.jp/projects/parallelgwas/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "executor 'local'",
            "publishDir \"${params.output}/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "manual_setup": {
        "name_process": "manual_setup",
        "string_process": "\nprocess manual_setup {\n\n\n    output:\n        file(\"setup_file.txt\")\n\n    \"\"\"\n    echo -e \"species\\tproject\" > setup_file.txt\n    echo \"${params.species}\\t${params.projects}\" >> setup_file.txt\n    \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    echo -e \"species\\tproject\" > setup_file.txt\n    echo \"${params.species}\\t${params.projects}\" >> setup_file.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cendr_browser_tracks": {
        "name_process": "cendr_browser_tracks",
        "string_process": "\nprocess cendr_browser_tracks {\n\n    executor 'local'\n\n    publishDir \"${params.output}/${row.out_dir}/browser_tracks/\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"gff\")\n\n    output:\n        tuple path(\"*.bed.gz\"), path(\"*.bed.gz.tbi\"), optional: true\n\n    \"\"\"\n    if [[ ${row.species} == 'c_elegans' ]];\n    then\n\n    function zip_index {\n        bgzip -f \\${1}\n        tabix \\${1}.gz\n    }\n\n    # Generate the transcripts track; Confusingly, this track is derived from one called elegans_genes on wormbase.\n    # Add parenthetical gene name for transcripts.\n\n    # curl ftp://ftp.wormbase.org/pub/wormbase/releases/current-production-release/MULTI_SPECIES/hub/elegans/elegans_genes_${params.wb_version}.bb > gene_file.bb\n    wget -O gene_file.bb ${WORMBASE_PREFIX}/${params.wb_version}/MULTI_SPECIES/hub/elegans/elegans_genes_${params.wb_version}.bb\n    bigBedToBed gene_file.bb tmp.bed\n    sortBed -i tmp.bed > elegans_transcripts_${params.wb_version}.bed\n    bgzip -f elegans_transcripts_${params.wb_version}.bed\n    tabix elegans_transcripts_${params.wb_version}.bed.gz\n    rm tmp.bed\n\n    # Generate Gene Track BED File \n    gzip -dc ${gff} | \\\n    grep 'locus' | \\\n    awk '\\$2 == \"WormBase\" && \\$3 == \"gene\"' > temp.gff\n    sortBed -i temp.gff > sorted.gff\n\n    # Install with conda install gawk\n    convert2bed --sort-tmpdir . -i gff < sorted.gff > final.bed\n    gawk -v OFS='\\\\t' '{ match(\\$0, \"locus=([^;\\\\t]+)\", f); \\$4=f[1]; print \\$1, \\$2, \\$3, \\$4, 100, \\$6  }' final.bed | \\\n    uniq > elegans_gene.${params.wb_version}.bed\n    zip_index elegans_gene.${params.wb_version}.bed\n\n    fi\n\n    \"\"\"\n\n}",
        "nb_lignes_process": 48,
        "string_script": "\"\"\"\n    if [[ ${row.species} == 'c_elegans' ]];\n    then\n\n    function zip_index {\n        bgzip -f \\${1}\n        tabix \\${1}.gz\n    }\n\n    # Generate the transcripts track; Confusingly, this track is derived from one called elegans_genes on wormbase.\n    # Add parenthetical gene name for transcripts.\n\n    # curl ftp://ftp.wormbase.org/pub/wormbase/releases/current-production-release/MULTI_SPECIES/hub/elegans/elegans_genes_${params.wb_version}.bb > gene_file.bb\n    wget -O gene_file.bb ${WORMBASE_PREFIX}/${params.wb_version}/MULTI_SPECIES/hub/elegans/elegans_genes_${params.wb_version}.bb\n    bigBedToBed gene_file.bb tmp.bed\n    sortBed -i tmp.bed > elegans_transcripts_${params.wb_version}.bed\n    bgzip -f elegans_transcripts_${params.wb_version}.bed\n    tabix elegans_transcripts_${params.wb_version}.bed.gz\n    rm tmp.bed\n\n    # Generate Gene Track BED File \n    gzip -dc ${gff} | \\\n    grep 'locus' | \\\n    awk '\\$2 == \"WormBase\" && \\$3 == \"gene\"' > temp.gff\n    sortBed -i temp.gff > sorted.gff\n\n    # Install with conda install gawk\n    convert2bed --sort-tmpdir . -i gff < sorted.gff > final.bed\n    gawk -v OFS='\\\\t' '{ match(\\$0, \"locus=([^;\\\\t]+)\", f); \\$4=f[1]; print \\$1, \\$2, \\$3, \\$4, 100, \\$6  }' final.bed | \\\n    uniq > elegans_gene.${params.wb_version}.bed\n    zip_index elegans_gene.${params.wb_version}.bed\n\n    fi\n\n    \"\"\"",
        "nb_lignes_script": 34,
        "language_script": "bash",
        "tools": [
            "GOFunction"
        ],
        "tools_url": [
            "https://bio.tools/gofunction"
        ],
        "tools_dico": [
            {
                "name": "GOFunction",
                "uri": "https://bio.tools/gofunction",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3658",
                                    "term": "Statistical inference"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The GO-function package provides a tool to address the redundancy that result from the GO structure or multiple annotation genes and derive biologically relevant functions from the statistically significant functions based on some intuitive assumption and statistical testing.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GOFunction.html"
            }
        ],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "executor 'local'",
            "publishDir \"${params.output}/${row.out_dir}/browser_tracks/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "download_url": {
        "name_process": "download_url",
        "string_process": "\nprocess download_url {\n\n    executor 'local'\n\n    tag { \"${row.species}/${row.project}\" }\n\n    input:\n        tuple val(row), val(url)\n    \n    output:\n        tuple val(row), path(\"out.file\")\n\n    \"\"\"\n        wget -O out.file ${url}\n    \"\"\"\n\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n        wget -O out.file ${url}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "row",
            "url"
        ],
        "nb_inputs": 2,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "executor 'local'",
            "tag { \"${row.species}/${row.project}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "decompress": {
        "name_process": "decompress",
        "string_process": "\nprocess decompress {\n\n    input:\n        tuple val(row), path(\"file.gz\")\n    \n    output:\n        tuple val(row), path(\"file_decompressed\")\n\n    \"\"\"\n        gzip -dc file.gz > file_decompressed\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n        gzip -dc file.gz > file_decompressed\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [
            "row"
        ],
        "nb_outputs": 1,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "snpeff_db": {
        "name_process": "snpeff_db",
        "string_process": "\nprocess snpeff_db {\n\n    tag { \"${row.name}\" }\n\n    publishDir \"${params.output}/${row.out_dir}/snpeff\", mode: 'copy'\n\n    input:\n        tuple val(name), \\\n              val(row), \\\n              path(\"${name}/sequences.fa\"), \\\n              path(\"${name}/genes.gtf.gz\"), \\\n              path(\"snpeff_config_base.txt\")\n\n    output:\n        path(\"snpEff.config\")\n        path(\"${name}/snpEffectPredictor.bin\")\n        path(\"${name}/genes.gtf.gz\")\n        path(\"${name}/sequences.fa\")\n\n    \"\"\"\n        {\n            cat snpeff_config_base.txt;\n            echo \"${name}.genome : ${row.species}\";\n            has_mtdna=\\$(grep 'MtDNA' ${name}/sequences.fa | wc -l)\n            if (( \\${has_mtdna} > 0 )); then\n                echo \"${name}.MtDNA.codonTable : Invertebrate_Mitochondrial\"\n            fi;\n        } > snpEff.config\n        snpEff build -c snpEff.config \\\n                     -dataDir . \\\n                     -gtf22 \\\n                     -v ${name}\n    \"\"\"\n\n}",
        "nb_lignes_process": 34,
        "string_script": "\"\"\"\n        {\n            cat snpeff_config_base.txt;\n            echo \"${name}.genome : ${row.species}\";\n            has_mtdna=\\$(grep 'MtDNA' ${name}/sequences.fa | wc -l)\n            if (( \\${has_mtdna} > 0 )); then\n                echo \"${name}.MtDNA.codonTable : Invertebrate_Mitochondrial\"\n            fi;\n        } > snpEff.config\n        snpEff build -c snpEff.config \\\n                     -dataDir . \\\n                     -gtf22 \\\n                     -v ${name}\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [
            "name",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "tag { \"${row.name}\" }",
            "publishDir \"${params.output}/${row.out_dir}/snpeff\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "format_csq": {
        "name_process": "format_csq",
        "string_process": "\nprocess format_csq {\n\n    tag { \"${row.name}\" }\n\n      \n                                                          \n      \n\n    publishDir \"${params.output}/${row.out_dir}/csq\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"in.gff.gz\")\n\n    output:\n        path(\"${row.name}.csq.gff3.gz\")\n        path(\"${row.name}.csq.gff3.gz.tbi\")\n        path(\"${row.name}.AA_Scores.tsv\")\n        path(\"${row.name}.AA_Length.tsv\")\n        path(\"*.gff\")\n\n    \"\"\"\n    if [[ ${row.species} = \"c_elegans\" ]]\n    then\n        # Ryan's fix for formatting gff3 for bcsq\n        zcat in.gff.gz | grep -P \"\\tWormBase\\t\" > simple.wormbase.gff3\n\n        Rscript --vanilla ${workflow.projectDir}/bin/bcsq_gff_format.R\n\n        cp fixed.wormbase.gff3 ${row.name}.csq.gff3\n        bgzip ${row.name}.csq.gff3\n        tabix -p gff ${row.name}.csq.gff3.gz\n\n    else\n        # to prep the gff3 for bcftools csq\n        gzip -dc in.gff.gz | \\\n            awk '\\$2 ~ \"WormBase.*\"' | \\\n            sed -e 's/ID=Transcript:/ID=transcript:/g' \\\n                -e 's/ID=Gene:/ID=gene:/g' \\\n                -e 's/Parent=Transcript:/Parent=transcript:/g' \\\n                -e 's/Parent=Gene:/Parent=gene:/g' \\\n                -e 's/Parent=Pseudogene:/Parent=transcript:/g' > prep.gff\n        \n        format_csq.R\n        {\n            # gzip -dc in.gff.gz | grep '^##'; # I don't understand this line\n            bedtools sort -i out.gff3;\n        } > ${row.name}.csq.gff3\n        \n        bgzip ${row.name}.csq.gff3\n        tabix -p gff ${row.name}.csq.gff3.gz\n\n    fi\n\n    # also run AA_scores and AA_length\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Length.R ${row.name}.csq.gff3.gz\n    mv gff_AA_Length.tsv ${row.name}.AA_Length.tsv\n\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Scores_Table.R ${workflow.projectDir}/bin/BLOSUM62\n    mv AA_Scores.tsv ${row.name}.AA_Scores.tsv\n\n    # also get gene file for nemascan\n    Rscript --vanilla ${workflow.projectDir}/bin/gene_file_nemascan.R ${row.name}.csq.gff3.gz ${row.species}\n\n    \"\"\"\n\n}",
        "nb_lignes_process": 65,
        "string_script": "\"\"\"\n    if [[ ${row.species} = \"c_elegans\" ]]\n    then\n        # Ryan's fix for formatting gff3 for bcsq\n        zcat in.gff.gz | grep -P \"\\tWormBase\\t\" > simple.wormbase.gff3\n\n        Rscript --vanilla ${workflow.projectDir}/bin/bcsq_gff_format.R\n\n        cp fixed.wormbase.gff3 ${row.name}.csq.gff3\n        bgzip ${row.name}.csq.gff3\n        tabix -p gff ${row.name}.csq.gff3.gz\n\n    else\n        # to prep the gff3 for bcftools csq\n        gzip -dc in.gff.gz | \\\n            awk '\\$2 ~ \"WormBase.*\"' | \\\n            sed -e 's/ID=Transcript:/ID=transcript:/g' \\\n                -e 's/ID=Gene:/ID=gene:/g' \\\n                -e 's/Parent=Transcript:/Parent=transcript:/g' \\\n                -e 's/Parent=Gene:/Parent=gene:/g' \\\n                -e 's/Parent=Pseudogene:/Parent=transcript:/g' > prep.gff\n        \n        format_csq.R\n        {\n            # gzip -dc in.gff.gz | grep '^##'; # I don't understand this line\n            bedtools sort -i out.gff3;\n        } > ${row.name}.csq.gff3\n        \n        bgzip ${row.name}.csq.gff3\n        tabix -p gff ${row.name}.csq.gff3.gz\n\n    fi\n\n    # also run AA_scores and AA_length\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Length.R ${row.name}.csq.gff3.gz\n    mv gff_AA_Length.tsv ${row.name}.AA_Length.tsv\n\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Scores_Table.R ${workflow.projectDir}/bin/BLOSUM62\n    mv AA_Scores.tsv ${row.name}.AA_Scores.tsv\n\n    # also get gene file for nemascan\n    Rscript --vanilla ${workflow.projectDir}/bin/gene_file_nemascan.R ${row.name}.csq.gff3.gz ${row.species}\n\n    \"\"\"",
        "nb_lignes_script": 43,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "tag { \"${row.name}\" }",
            "publishDir \"${params.output}/${row.out_dir}/csq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "format_csq_manual": {
        "name_process": "format_csq_manual",
        "string_process": "\nprocess format_csq_manual {\n\n      \n                                                          \n      \n\n    publishDir \"${params.output}/${row.out_dir}/csq\", mode: 'copy'\n                                                                            \n\n    input:\n        tuple val(\"row\"), path(\"gff_file\")\n\n    output:\n        path(\"${row.name}.csq.gff3.gz\")\n                                              \n                                       \n                                       \n        path(\"${row.name}.AA_Scores.tsv\")\n        path(\"${row.name}.AA_Length.tsv\")\n        path(\"*.gff\")\n\n    \"\"\"\n    bedtools sort -i ${gff_file} > ${row.name}.csq.gff3\n    bgzip ${row.name}.csq.gff3\n    tabix -p gff ${row.name}.csq.gff3.gz\n\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Length.R ${row.name}.csq.gff3.gz\n    mv gff_AA_Length.tsv ${row.name}.AA_Length.tsv\n    \n    # also run AA_scores and AA_length\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Scores_Table.R ${workflow.projectDir}/bin/BLOSUM62\n    mv AA_Scores.tsv ${row.name}.AA_Scores.tsv\n\n    # also get gene file for nemascan\n    Rscript --vanilla ${workflow.projectDir}/bin/gene_file_nemascan.R ${row.name}.csq.gff3.gz ${row.species}\n\n    \"\"\"\n\n}",
        "nb_lignes_process": 38,
        "string_script": "\"\"\"\n    bedtools sort -i ${gff_file} > ${row.name}.csq.gff3\n    bgzip ${row.name}.csq.gff3\n    tabix -p gff ${row.name}.csq.gff3.gz\n\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Length.R ${row.name}.csq.gff3.gz\n    mv gff_AA_Length.tsv ${row.name}.AA_Length.tsv\n    \n    # also run AA_scores and AA_length\n    Rscript --vanilla ${workflow.projectDir}/bin/AA_Scores_Table.R ${workflow.projectDir}/bin/BLOSUM62\n    mv AA_Scores.tsv ${row.name}.AA_Scores.tsv\n\n    # also get gene file for nemascan\n    Rscript --vanilla ${workflow.projectDir}/bin/gene_file_nemascan.R ${row.name}.csq.gff3.gz ${row.species}\n\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}/csq\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "snpeff_db_manual": {
        "name_process": "snpeff_db_manual",
        "string_process": "\nprocess snpeff_db_manual {\n\n    publishDir \"${params.output}/${row.out_dir}/snpeff\", mode: 'copy'\n                                                                               \n\n    input:\n        tuple val(name), val(row), \\\n              path(\"${name}/sequences.fa\"), \\\n              path(\"${name}/genes.gff\"), \\\n              path(\"snpeff_config_base.txt\")\n\n    output:\n        path(\"snpEff.config\")\n        path(\"${name}/snpEffectPredictor.bin\")\n        path(\"${name}/genes.gff\")\n        path(\"${name}/sequences.fa\")\n\n    \"\"\"\n    sp=`echo ${name} | cut -d '.' -f 1`\n\n        {\n            cat snpeff_config_base.txt;\n            echo \"${name}.genome : ${row.species}\";\n            has_mtdna=\\$(grep 'MtDNA' ${name}/sequences.fa | wc -l)\n            if (( \\${has_mtdna} > 0 )); then\n                echo \"${name}.MtDNA.codonTable : Invertebrate_Mitochondrial\"\n            fi;\n        } > snpEff.config\n        snpEff build -c snpEff.config \\\n                     -dataDir . \\\n                     -gff3 \\\n                     -v ${name}\n    \"\"\"\n\n}",
        "nb_lignes_process": 34,
        "string_script": "\"\"\"\n    sp=`echo ${name} | cut -d '.' -f 1`\n\n        {\n            cat snpeff_config_base.txt;\n            echo \"${name}.genome : ${row.species}\";\n            has_mtdna=\\$(grep 'MtDNA' ${name}/sequences.fa | wc -l)\n            if (( \\${has_mtdna} > 0 )); then\n                echo \"${name}.MtDNA.codonTable : Invertebrate_Mitochondrial\"\n            fi;\n        } > snpEff.config\n        snpEff build -c snpEff.config \\\n                     -dataDir . \\\n                     -gff3 \\\n                     -v ${name}\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "snpEff"
        ],
        "tools_url": [
            "https://bio.tools/snpeff"
        ],
        "tools_dico": [
            {
                "name": "snpEff",
                "uri": "https://bio.tools/snpeff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "Single nucleotide polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP discovery"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0484",
                                    "term": "SNP calling"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3498",
                                "term": "Sequence variations"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Variant annotation and effect prediction tool. It annotates and predicts the effects of variants on genes and proteins (such as amino acid changes).",
                "homepage": "http://snpeff.sourceforge.net/"
            }
        ],
        "inputs": [
            "name",
            "row"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}/snpeff\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "extract_lcrs": {
        "name_process": "extract_lcrs",
        "string_process": "\nprocess extract_lcrs {\n      \n                                           \n\n            \n                    \n      \n\n    publishDir \"${params.output}/${row.out_dir}/lcr\", mode: 'copy'\n\n    input:\n        tuple val(row), path(\"in.gff.gz\")\n\n    output:\n        path(\"${row.name}.dust.bed.gz\")\n        path(\"${row.name}.dust.bed.gz.tbi\")\n        path(\"${row.name}.repeat_masker.bed.gz\")\n        path(\"${row.name}.repeat_masker.bed.gz.tbi\")\n\n    shell:\n    '''\n        gzip -dc in.gff.gz | \\\n        awk -v OFS=\"\\t\" '$2 == \"dust\" { print $1, $4, $5, $2 > \"!{row.name}.dust.bed\" } \n                         $2 == \"RepeatMasker\" {  print $1, $4, $5, $2 > \"!{row.name}.repeat_masker.bed\" }'\n        bgzip !{row.name}.dust.bed\n        bgzip !{row.name}.repeat_masker.bed\n        tabix -f -p bed !{row.name}.dust.bed.gz\n        tabix -f -p bed !{row.name}.repeat_masker.bed.gz\n    '''\n}",
        "nb_lignes_process": 29,
        "string_script": "    '''\n        gzip -dc in.gff.gz | \\\n        awk -v OFS=\"\\t\" '$2 == \"dust\" { print $1, $4, $5, $2 > \"!{row.name}.dust.bed\" } \n                         $2 == \"RepeatMasker\" {  print $1, $4, $5, $2 > \"!{row.name}.repeat_masker.bed\" }'\n        bgzip !{row.name}.dust.bed\n        bgzip !{row.name}.repeat_masker.bed\n        tabix -f -p bed !{row.name}.dust.bed.gz\n        tabix -f -p bed !{row.name}.repeat_masker.bed.gz\n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "row"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AndersenLab__genomes-nf",
        "directive": [
            "publishDir \"${params.output}/${row.out_dir}/lcr\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}