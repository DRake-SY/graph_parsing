{
    "eval_scores": {
        "name_process": "eval_scores",
        "string_process": "\nprocess eval_scores {\n    label 'mod_mem'\n    publishDir launchDir\n    \n    input:\n        tuple path(prsice_scores),\n            path(sbayesr_ukbb_big_scores),\n            path(sbayesr_ukbb_hm3_scores),\n            path(prscs_ukbb_hm3_scores),\n            path(prscs_1kg_hm3_scores),\n            path(pheno_file),\n            path(covs_file),\n            val(binary),\n            val(prevalence),\n            val(out_prefix),\n            path(eval_scores_script)\n\n    output:\n        path \"${out_prefix}_VarianceExplained.txt\"\n        path \"${out_prefix}_VarianceExplained.png\"\n        path \"${out_prefix}_Scores.txt\"\n        \n    script:\n    if(binary == \"T\")\n        \"\"\"\n        Rscript ./evaluate_pgs.R $prsice_scores \\\n            $sbayesr_ukbb_big_scores \\\n            $sbayesr_ukbb_hm3_scores \\\n            $prscs_ukbb_hm3_scores \\\n            $prscs_1kg_hm3_scores \\\n            $out_prefix \\\n            $pheno_file \\\n            $covs_file \\\n            --binary \\\n            --prevalence $prevalence\n        \"\"\"\n    else\n        \"\"\"\n        Rscript ./evaluate_pgs.R $prsice_scores \\\n            $sbayesr_ukbb_big_scores \\\n            $sbayesr_ukbb_hm3_scores \\\n            $prscs_ukbb_hm3_scores \\\n            $prscs_1kg_hm3_scores \\\n            $out_prefix \\\n            $pheno_file \\\n            $covs_file\n        \"\"\"\n}",
        "nb_lignes_process": 47,
        "string_script": "    if(binary == \"T\")\n        \"\"\"\n        Rscript ./evaluate_pgs.R $prsice_scores \\\n            $sbayesr_ukbb_big_scores \\\n            $sbayesr_ukbb_hm3_scores \\\n            $prscs_ukbb_hm3_scores \\\n            $prscs_1kg_hm3_scores \\\n            $out_prefix \\\n            $pheno_file \\\n            $covs_file \\\n            --binary \\\n            --prevalence $prevalence\n        \"\"\"\n    else\n        \"\"\"\n        Rscript ./evaluate_pgs.R $prsice_scores \\\n            $sbayesr_ukbb_big_scores \\\n            $sbayesr_ukbb_hm3_scores \\\n            $prscs_ukbb_hm3_scores \\\n            $prscs_1kg_hm3_scores \\\n            $out_prefix \\\n            $pheno_file \\\n            $covs_file\n        \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "binary",
            "prevalence",
            "out_prefix",
            "prsice_scores",
            "sbayesr_ukbb_big_scores",
            "sbayesr_ukbb_hm3_scores",
            "prscs_ukbb_hm3_scores",
            "prscs_1kg_hm3_scores",
            "pheno_file",
            "covs_file",
            "eval_scores_script"
        ],
        "nb_inputs": 11,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'mod_mem'",
            "publishDir launchDir"
        ],
        "when": "",
        "stub": ""
    },
    "calc_score": {
        "name_process": "calc_score",
        "string_process": "\nprocess calc_score {\n    label 'mod_mem'\n    \n    input:\n        tuple val(chr),\n        path(snp_posteriors),\n        val(col_nums),\n        val(out_prefix),\n        val(bfile),\n        path(bed),\n        path(bim),\n        path(fam),\n        val(target_cohort),\n        val(target_population),\n        val(target_snp_set),\n        path(plink)\n\n    output:\n        path \"${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr}.sscore\"\n    \n    script:\n        \"\"\"\n        ./plink2 --bfile ${bfile} \\\n        --out ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr} \\\n        --score ${snp_posteriors} ${col_nums} header cols=+scoresums ignore-dup-ids\n\n        awk '{gsub(/^#/, \"\"); print}' ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr}.sscore > tmp.score\n        mv tmp.score ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr}.sscore\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        ./plink2 --bfile ${bfile} \\\n        --out ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr} \\\n        --score ${snp_posteriors} ${col_nums} header cols=+scoresums ignore-dup-ids\n\n        awk '{gsub(/^#/, \"\"); print}' ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr}.sscore > tmp.score\n        mv tmp.score ${target_cohort}_${target_population}_${target_snp_set}_${out_prefix}_chr${chr}.sscore\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr",
            "col_nums",
            "out_prefix",
            "bfile",
            "target_cohort",
            "target_population",
            "target_snp_set",
            "snp_posteriors",
            "bed",
            "bim",
            "fam",
            "plink"
        ],
        "nb_inputs": 12,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'mod_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "run_prsice": {
        "name_process": "run_prsice",
        "string_process": "\nprocess run_prsice {\n    label 'big_mem'\n\n    input: \n        tuple val(chr),\n            path(source),\n            val(bfile),\n            path(bed),\n            path(bim),\n            path(fam),\n            val(target_cohort),\n            val(target_population),\n            val(target_snp_set),\n            val(trait),\n            val(p_vals),\n            val(binary),\n            path(pheno),\n            path(prsice),\n            path(col_check_script)\n    \n    output:\n        path \"${trait}_chr${chr}_colCheck.txt\"\n\n    script:\n    \"\"\"\n        ./PRSice_linux \\\n            --base $source \\\n            --target $bfile \\\n            --thread 8 \\\n            --binary-target $binary \\\n            --pheno $pheno \\\n            --out ${trait}_chr${chr} \\\n            --all-score \\\n            --fastscore \\\n            --bar-levels $p_vals \\\n            --no-regress \\\n            --score sum\n\n        Rscript ./fill_missing_cols_prsice.R ${trait}_chr${chr}.all_score ${trait}_chr${chr}\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    \"\"\"\n        ./PRSice_linux \\\n            --base $source \\\n            --target $bfile \\\n            --thread 8 \\\n            --binary-target $binary \\\n            --pheno $pheno \\\n            --out ${trait}_chr${chr} \\\n            --all-score \\\n            --fastscore \\\n            --bar-levels $p_vals \\\n            --no-regress \\\n            --score sum\n\n        Rscript ./fill_missing_cols_prsice.R ${trait}_chr${chr}.all_score ${trait}_chr${chr}\n    \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr",
            "bfile",
            "target_cohort",
            "target_population",
            "target_snp_set",
            "trait",
            "p_vals",
            "binary",
            "source",
            "bed",
            "bim",
            "fam",
            "pheno",
            "prsice",
            "col_check_script"
        ],
        "nb_inputs": 15,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "calc_posteriors_sbayesr": {
        "name_process": "calc_posteriors_sbayesr",
        "string_process": "\nprocess calc_posteriors_sbayesr {\n    label 'big_mem'\n    \n    input:\n        tuple val(chr),\n            path(gwas_chr),\n            val(ld_prefix),\n            path(ld_bin), \n            path(ld_info), \n            val(ld_cohort),\n            val(ld_population),\n            val(ld_snp_set),\n            val(ld_format),\n            val(trait),\n            path(gctb)\n    \n    output:\n        tuple val(chr),\n            path(\"${trait}_${ld_cohort}_${ld_population}_${ld_snp_set}_sbayesr_chr${chr}.snpRes\")\n\n    script:\n        \"\"\"\n        ./gctb --sbayes R \\\n            --gwas-summary ${gwas_chr} \\\n            --ldm ${ld_prefix} \\\n            --gamma 0.0,0.01,0.1,1 \\\n            --pi 0.95,0.02,0.02,0.01 \\\n            --burn-in 5000 \\\n            --chain-length 25000 \\\n            --out ${trait}_${ld_cohort}_${ld_population}_${ld_snp_set}_sbayesr_chr${chr} \\\n            --exclude-mhc \\\n            --no-mcmc-bin \\\n            --thread 8 \\\n            --seed 80851 \\\n            --impute-n\n        \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "        \"\"\"\n        ./gctb --sbayes R \\\n            --gwas-summary ${gwas_chr} \\\n            --ldm ${ld_prefix} \\\n            --gamma 0.0,0.01,0.1,1 \\\n            --pi 0.95,0.02,0.02,0.01 \\\n            --burn-in 5000 \\\n            --chain-length 25000 \\\n            --out ${trait}_${ld_cohort}_${ld_population}_${ld_snp_set}_sbayesr_chr${chr} \\\n            --exclude-mhc \\\n            --no-mcmc-bin \\\n            --thread 8 \\\n            --seed 80851 \\\n            --impute-n\n        \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr",
            "ld_prefix",
            "gwas_chr",
            "ld_bin",
            "ld_info",
            "ld_cohort",
            "ld_population",
            "ld_snp_set",
            "ld_format",
            "trait",
            "gctb"
        ],
        "nb_inputs": 11,
        "outputs": [
            "chr"
        ],
        "nb_outputs": 1,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "split_reformat_gwas": {
        "name_process": "split_reformat_gwas",
        "string_process": "\nprocess split_reformat_gwas {\n    label 'mod_mem'\n\n    input:\n        tuple val(chr),\n            val(traitName),\n            path(vcf),\n            path(vcf_idx),\n            val(method),\n            path(split_gwas),\n            val(n)\n\n    output:\n        tuple val(chr), \n            path(\"${traitName}_${method}_chr${chr}.txt\")\n\n    script:\n        \"\"\"\n        python ${split_gwas} --vcf $vcf --chromosome $chr --format $method --out ${traitName} --n $n\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        python ${split_gwas} --vcf $vcf --chromosome $chr --format $method --out ${traitName} --n $n\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr",
            "traitName",
            "method",
            "n",
            "vcf",
            "vcf_idx",
            "split_gwas"
        ],
        "nb_inputs": 7,
        "outputs": [
            "chr"
        ],
        "nb_outputs": 1,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'mod_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "calc_posteriors_prscs": {
        "name_process": "calc_posteriors_prscs",
        "string_process": "\nprocess calc_posteriors_prscs {\n    label 'big_mem'\n    \n    input:\n        tuple val(chr),\n            path(gwas),\n            val(N),\n            path(ld_bin),\n            path(ld_info),\n            val(ld_cohort),\n            val(ld_population),\n            val(ld_snp_set),\n            val(ld_format),\n            val(bfile),\n            path(bed), \n            path(bim), \n            path(fam), \n            val(target_cohort),\n            val(target_population),\n            val(target_snp_set),\n            val(traitName),\n            path(prscs)\n    \n    output:\n        tuple val(chr),\n            path(\"${traitName}_${target_cohort}_${target_population}_${target_snp_set}_${ld_cohort}_${ld_population}_${ld_snp_set}_pst_eff_a1_b0.5_phiauto_chr${chr}.txt\")\n\n    script:\n        \"\"\"\n        mkdir ${ld_cohort}_${ld_population}_${ld_snp_set}\n        mv ${ld_bin} ${ld_info} ${ld_cohort}_${ld_population}_${ld_snp_set}/\n        python ./PRScs.py --ref_dir=\\$PWD/${ld_cohort}_${ld_population}_${ld_snp_set} \\\n            --sst_file=$gwas \\\n            --bim_prefix=$bfile \\\n            --n_gwas=$N \\\n            --chrom=$chr \\\n            --out_dir=${traitName}_${target_cohort}_${target_population}_${target_snp_set}_${ld_cohort}_${ld_population}_${ld_snp_set}\n        \"\"\" \n}",
        "nb_lignes_process": 38,
        "string_script": "        \"\"\"\n        mkdir ${ld_cohort}_${ld_population}_${ld_snp_set}\n        mv ${ld_bin} ${ld_info} ${ld_cohort}_${ld_population}_${ld_snp_set}/\n        python ./PRScs.py --ref_dir=\\$PWD/${ld_cohort}_${ld_population}_${ld_snp_set} \\\n            --sst_file=$gwas \\\n            --bim_prefix=$bfile \\\n            --n_gwas=$N \\\n            --chrom=$chr \\\n            --out_dir=${traitName}_${target_cohort}_${target_population}_${target_snp_set}_${ld_cohort}_${ld_population}_${ld_snp_set}\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "chr",
            "N",
            "ld_cohort",
            "ld_population",
            "ld_snp_set",
            "ld_format",
            "bfile",
            "gwas",
            "ld_bin",
            "ld_info",
            "bed",
            "bim",
            "fam",
            "target_cohort",
            "target_population",
            "target_snp_set",
            "traitName",
            "prscs"
        ],
        "nb_inputs": 18,
        "outputs": [
            "chr"
        ],
        "nb_outputs": 1,
        "name_workflow": "BioPsyk__ibp_pgs_pipelines",
        "directive": [
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    }
}