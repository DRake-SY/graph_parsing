{
    "racon": {
        "name_process": "racon",
        "string_process": "\nprocess racon {\n    tag \"${meta}\"\n    label 'process_high'\n\n    if (!workflow.profile=='google' && !workflow.profile=='slurm'){\n        maxForks 1\n    }\n\n    publishDir \"${params.outdir}/racon/${meta}/${iteration}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"staphb/racon:1.4.20\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads), path(aligned_sam)\n        val(iteration)\n    \n    output:\n        tuple val(meta), path(\"*.fasta\"), emit: racon_alignment\n    \n    script:\n        \"\"\"\n        racon -m 8 -x -6 -g -8 -w 500 -t $task.cpus $ont_reads $aligned_sam $ont_assembly > ${meta}_${iteration}_racon.fasta\n        \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "        \"\"\"\n        racon -m 8 -x -6 -g -8 -w 500 -t $task.cpus $ont_reads $aligned_sam $ont_assembly > ${meta}_${iteration}_racon.fasta\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Racon"
        ],
        "tools_url": [
            "https://bio.tools/Racon"
        ],
        "tools_dico": [
            {
                "name": "Racon",
                "uri": "https://bio.tools/Racon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Possibility to Use Oxford Nanopore Technology | Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads. http://genome.cshlp.org/content/early/2017/01/18/gr.214270.116 Note: This was the original repository which will no longer be officially maintained. Please use the new official repository here: | Racon is intended as a standalone consensus module to correct raw contigs generated by rapid assembly methods which do not include a consensus step | Consensus module for raw de novo DNA assembly of long uncorrected reads",
                "homepage": "https://github.com/isovic/racon"
            }
        ],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "aligned_sam",
            "iteration"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_high' if (!workflow.profile=='google' && !workflow.profile=='slurm'){ maxForks 1 }",
            "publishDir \"${params.outdir}/racon/${meta}/${iteration}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"staphb/racon:1.4.20\""
        ],
        "when": "",
        "stub": ""
    },
    "pilon": {
        "name_process": "pilon",
        "string_process": "\nprocess pilon {\n    tag \"${meta}\"\n    label 'process_high'\n\n    if (!workflow.profile=='google' && !workflow.profile=='slurm'){\n        maxForks 1\n    }\n\n    publishDir \"${params.outdir}/pilon/${meta}/${iteration}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"staphb/pilon:1.23.0\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads), path(illumina_r1), path(illumina_r2)\n        tuple val(meta), path(aligned_bam)\n        val(iteration)\n    \n    output:\n        tuple val(meta), path(\"*.fasta\"), emit: pilon_alignment\n    \n    script:\n        \"\"\"\n        pilon --genome $ont_assembly --threads $task.cpus --frags $aligned_bam --changes --output ${meta}_${iteration}_pilon --fix all\n        \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "        \"\"\"\n        pilon --genome $ont_assembly --threads $task.cpus --frags $aligned_bam --changes --output ${meta}_${iteration}_pilon --fix all\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "pilon"
        ],
        "tools_url": [
            "https://bio.tools/pilon"
        ],
        "tools_dico": [
            {
                "name": "pilon",
                "uri": "https://bio.tools/pilon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Read alignment analysis to diagnose, report, and automatically improve de novo genome assemblies.",
                "homepage": "http://www.broadinstitute.org/software/pilon/"
            }
        ],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "illumina_r1",
            "illumina_r2",
            "meta",
            "aligned_bam",
            "iteration"
        ],
        "nb_inputs": 8,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_high' if (!workflow.profile=='google' && !workflow.profile=='slurm'){ maxForks 1 }",
            "publishDir \"${params.outdir}/pilon/${meta}/${iteration}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"staphb/pilon:1.23.0\""
        ],
        "when": "",
        "stub": ""
    },
    "bwa_align": {
        "name_process": "bwa_align",
        "string_process": "\nprocess bwa_align {\n    tag \"${meta}\"\n    label 'process_high'\n\n    publishDir \"${params.outdir}/bwa/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"alemenze/bwa-tools\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads), path(illumina_r1), path(illumina_r2)\n        tuple val(meta), path(reads)\n    \n    output:\n        tuple val(meta), path(\"*.sam\"),     emit: aligned_sam\n        tuple val(meta), path('*.sorted.{bam,bam.bai}'), emit: aligned_bams\n        tuple val(meta), path('*.sorted.bam'), emit: aligned_bam\n        tuple val(meta), path(\"*{flagstat,idxstats,stats}\"),   emit: logs\n\n    script:\n        \"\"\"\n        mkdir bwa_index\n        bwa index $ont_assembly -p bwa_index/${ont_assembly.baseName}\n\n        INDEX=`find -L ./bwa_index/ -name \"*.amb\" | sed 's/.amb//'`\n        bwa mem -t $task.cpus \\$INDEX $reads > ${meta}.sam\n\n        samtools view -hSbo ${meta}.bam ${meta}.sam\n        samtools sort ${meta}.bam -o ${meta}.sorted.bam\n        samtools index ${meta}.sorted.bam\n        samtools flagstat ${meta}.sorted.bam > ${meta}.sorted.bam.flagstat\n        samtools idxstats ${meta}.sorted.bam > ${meta}.sorted.bam.idxstats\n        samtools stats ${meta}.sorted.bam > ${meta}.sorted.bam.stats\n        \"\"\"\n\n}",
        "nb_lignes_process": 37,
        "string_script": "        \"\"\"\n        mkdir bwa_index\n        bwa index $ont_assembly -p bwa_index/${ont_assembly.baseName}\n\n        INDEX=`find -L ./bwa_index/ -name \"*.amb\" | sed 's/.amb//'`\n        bwa mem -t $task.cpus \\$INDEX $reads > ${meta}.sam\n\n        samtools view -hSbo ${meta}.bam ${meta}.sam\n        samtools sort ${meta}.bam -o ${meta}.sorted.bam\n        samtools index ${meta}.sorted.bam\n        samtools flagstat ${meta}.sorted.bam > ${meta}.sorted.bam.flagstat\n        samtools idxstats ${meta}.sorted.bam > ${meta}.sorted.bam.idxstats\n        samtools stats ${meta}.sorted.bam > ${meta}.sorted.bam.stats\n        \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "illumina_r1",
            "illumina_r2",
            "meta",
            "reads"
        ],
        "nb_inputs": 7,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/bwa/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"alemenze/bwa-tools\""
        ],
        "when": "",
        "stub": ""
    },
    "medaka": {
        "name_process": "medaka",
        "string_process": "\nprocess medaka {\n    tag \"${meta}\"\n    label 'process_high'\n\n    if (!workflow.profile=='google' && !workflow.profile=='slurm'){\n        maxForks 1\n    }\n\n    publishDir \"${params.outdir}/medaka/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"staphb/medaka:1.2.0\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads)\n    \n    output:\n        tuple val(meta), path(\"*consensus.fasta\"), emit: consensus\n    \n    script:\n        \"\"\"\n        medaka_consensus -i $ont_reads -d $ont_assembly -o . -t $task.cpus -m r941_min_high_g360\n        \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "        \"\"\"\n        medaka_consensus -i $ont_reads -d $ont_assembly -o . -t $task.cpus -m r941_min_high_g360\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_high' if (!workflow.profile=='google' && !workflow.profile=='slurm'){ maxForks 1 }",
            "publishDir \"${params.outdir}/medaka/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"staphb/medaka:1.2.0\""
        ],
        "when": "",
        "stub": ""
    },
    "trimgalore": {
        "name_process": "trimgalore",
        "string_process": "\nprocess trimgalore {\n    tag \"${meta}\"\n    label 'process_medium'\n\n    publishDir \"${params.outdir}/trimgalore/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"quay.io/biocontainers/trim-galore:0.6.6--0\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads), path(illumina_r1), path(illumina_r2)\n\n    output:\n        tuple val(meta), path(\"*.fq.gz\"),       emit: reads\n        tuple val(meta), path(\"*report.txt\"),   emit: log\n        tuple val(meta), path(\"*.html\"),        emit: html \n        tuple val(meta), path(\"*.zip\") ,        emit: zip\n\n    script:\n        \"\"\"\n        trim_galore \\\\\n            --cores ${task.cpus} \\\\\n            --fastqc \\\\\n            --paired \\\\\n            --gzip \\\\\n            $illumina_r1 $illumina_r2\n        \"\"\"\n}",
        "nb_lignes_process": 29,
        "string_script": "        \"\"\"\n        trim_galore \\\\\n            --cores ${task.cpus} \\\\\n            --fastqc \\\\\n            --paired \\\\\n            --gzip \\\\\n            $illumina_r1 $illumina_r2\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "illumina_r1",
            "illumina_r2"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/trimgalore/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"quay.io/biocontainers/trim-galore:0.6.6--0\""
        ],
        "when": "",
        "stub": ""
    },
    "quast": {
        "name_process": "quast",
        "string_process": "\nprocess quast {\n    tag \"${meta}\"\n    label 'process_low'\n\n    publishDir \"${params.outdir}/quast/${meta}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"staphb/quast:5.0.2\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads), path(illumina_r1), path(illumina_r2)\n    \n    output:\n        path(\"${meta}*\"), emit: qc\n\n    script:\n        \"\"\"\n        quast.py -o $meta -b --circos $ont_assembly\n        \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "        \"\"\"\n        quast.py -o $meta -b --circos $ont_assembly\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "illumina_r1",
            "illumina_r2"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_low'",
            "publishDir \"${params.outdir}/quast/${meta}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"staphb/quast:5.0.2\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2": {
        "name_process": "minimap2",
        "string_process": "\nprocess minimap2 {\n    tag \"${meta}\"\n    label 'process_high'\n\n    publishDir \"${params.outdir}/minimap2/${meta}/${iteration}\",\n        mode: \"copy\",\n        overwrite: true,\n        saveAs: { filename -> filename }\n\n    container \"staphb/minimap2:2.21\"\n\n    input:\n        tuple val(meta), path(ont_assembly), path(ont_reads)\n        val(iteration)\n    \n    output:\n        tuple val(meta), path(\"${meta}_${iteration}.sam\"),     emit: aligned_sam\n\n    script:\n        \"\"\"\n        minimap2 -ax map-ont -t $task.cpus $ont_assembly $ont_reads > ${meta}_${iteration}.sam\n        \"\"\"\n\n}",
        "nb_lignes_process": 23,
        "string_script": "        \"\"\"\n        minimap2 -ax map-ont -t $task.cpus $ont_assembly $ont_reads > ${meta}_${iteration}.sam\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "meta",
            "ont_assembly",
            "ont_reads",
            "iteration"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alemenze__ONT-polish",
        "directive": [
            "tag \"${meta}\"",
            "label 'process_high'",
            "publishDir \"${params.outdir}/minimap2/${meta}/${iteration}\" , mode: \"copy\" , overwrite: true , saveAs: { filename -> filename }",
            "container \"staphb/minimap2:2.21\""
        ],
        "when": "",
        "stub": ""
    }
}