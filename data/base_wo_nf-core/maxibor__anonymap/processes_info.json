{
    "AdapterRemoval": {
        "name_process": "AdapterRemoval",
        "string_process": "\nprocess AdapterRemoval {\n    tag \"$name\"\n\n    conda 'bioconda::adapterremoval'\n\n    errorStrategy 'ignore'\n\n    label 'expresso'\n\n    input:\n        set val(name), file(reads) from reads_to_trim\n\n    output:\n        set val(name), file('*.trimmed.fastq') into trimmed_reads\n        file(\"*.settings\") into adapter_removal_results\n\n    script:\n        settings = name+\".settings\"\n        if (params.pairedEnd){\n            out1 = name+\".pair1.trimmed.fastq\"\n            out2 = name+\".pair2.trimmed.fastq\"\n            \"\"\"\n            AdapterRemoval --basename $name --file1 ${reads[0]} --file2 ${reads[1]} --trimns --trimqualities --minquality 20 --minlength 30 --output1 $out1 --output2 $out2 --threads ${task.cpus} --qualitybase ${params.phred} --settings $settings\n            \"\"\"\n        } else {\n            se_out = name+\".trimmed.fastq\"\n            \"\"\"\n            AdapterRemoval --basename $name --file1 ${reads[0]} --trimns --trimqualities --minquality 20 --minlength 30 --output1 $se_out --threads ${task.cpus} --qualitybase ${params.phred} --settings $settings\n            \"\"\"\n        }      \n}",
        "nb_lignes_process": 30,
        "string_script": "        settings = name+\".settings\"\n        if (params.pairedEnd){\n            out1 = name+\".pair1.trimmed.fastq\"\n            out2 = name+\".pair2.trimmed.fastq\"\n            \"\"\"\n            AdapterRemoval --basename $name --file1 ${reads[0]} --file2 ${reads[1]} --trimns --trimqualities --minquality 20 --minlength 30 --output1 $out1 --output2 $out2 --threads ${task.cpus} --qualitybase ${params.phred} --settings $settings\n            \"\"\"\n        } else {\n            se_out = name+\".trimmed.fastq\"\n            \"\"\"\n            AdapterRemoval --basename $name --file1 ${reads[0]} --trimns --trimqualities --minquality 20 --minlength 30 --output1 $se_out --threads ${task.cpus} --qualitybase ${params.phred} --settings $settings\n            \"\"\"\n        }",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads_to_trim"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads",
            "adapter_removal_results"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__anonymap",
        "directive": [
            "tag \"$name\"",
            "conda 'bioconda::adapterremoval'",
            "errorStrategy 'ignore'",
            "label 'expresso'"
        ],
        "when": "",
        "stub": ""
    },
    "Bowtie2Align": {
        "name_process": "Bowtie2Align",
        "string_process": "\nprocess Bowtie2Align {\n    tag \"$name\"\n\n    conda 'bioconda::bowtie2 bioconda::samtools'\n\n    errorStrategy 'ignore'\n\n    label 'intenso'\n\n    publishDir \"${params.results}\", pattern: \"*.flagstat.txt\", mode: 'copy'\n\n    input:\n        set val(name), file(reads) from trimmed_reads\n        file(index) from bt_index_genome.collect()\n    output:\n        set val(name), file(\"*.aligned.sorted.bam\") into alignment_genome\n        set val(name), file(\"*.flagstat.txt\") into align1_multiqc\n    script:\n        index_name = index.toString().tokenize(' ')[0].tokenize('.')[0]\n        samfile = name+\".aligned.sam\"\n        fstat = name+\".flagstat.txt\"\n        outfile = name+\".aligned.sorted.bam\"\n        if (params.pairedEnd) {\n            \"\"\"\n            bowtie2 -x $index_name -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile\n            samtools view -S -b -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools flagstat $outfile > $fstat\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2 -x $index_name -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile\n            samtools view -S -b -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools flagstat $outfile > $fstat\n            \"\"\"\n        }\n}",
        "nb_lignes_process": 35,
        "string_script": "        index_name = index.toString().tokenize(' ')[0].tokenize('.')[0]\n        samfile = name+\".aligned.sam\"\n        fstat = name+\".flagstat.txt\"\n        outfile = name+\".aligned.sorted.bam\"\n        if (params.pairedEnd) {\n            \"\"\"\n            bowtie2 -x $index_name -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile\n            samtools view -S -b -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools flagstat $outfile > $fstat\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2 -x $index_name -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile\n            samtools view -S -b -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools flagstat $outfile > $fstat\n            \"\"\"\n        }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "PFSTATS",
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/pfstats",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PFSTATS",
                "uri": "https://bio.tools/pfstats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PFSTATS is a set of programs and scripts devoted to analyze protein families using simple statistics.",
                "homepage": "http://www.biocomp.icb.ufmg.br/biocomp/?page_id=119"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmed_reads",
            "bt_index_genome"
        ],
        "nb_inputs": 2,
        "outputs": [
            "alignment_genome",
            "align1_multiqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__anonymap",
        "directive": [
            "tag \"$name\"",
            "conda 'bioconda::bowtie2 bioconda::samtools'",
            "errorStrategy 'ignore'",
            "label 'intenso'",
            "publishDir \"${params.results}\", pattern: \"*.flagstat.txt\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "anonymize": {
        "name_process": "anonymize",
        "string_process": "\nprocess anonymize {\n    tag \"$name\"\n\n    conda 'python=3.6 bioconda::pysam'\n\n    label 'ristretto'\n\n    echo true\n\n    publishDir \"${params.results}\", mode: 'copy'\n\n    input:\n        set val(name), file(sam) from alignment_genome\n    output:\n        set val(name), file(\"*.anonym.bam\") into anonysam\n    script:\n        outfile = name+\".anonym.bam\" \n        \"\"\"\n        anonymize -m ${params.mode} -o $outfile $sam\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        outfile = name+\".anonym.bam\" \n        \"\"\"\n        anonymize -m ${params.mode} -o $outfile $sam\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "alignment_genome"
        ],
        "nb_inputs": 1,
        "outputs": [
            "anonysam"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__anonymap",
        "directive": [
            "tag \"$name\"",
            "conda 'python=3.6 bioconda::pysam'",
            "label 'ristretto'",
            "echo true",
            "publishDir \"${params.results}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}