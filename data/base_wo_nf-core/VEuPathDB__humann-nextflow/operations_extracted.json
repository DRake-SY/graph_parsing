{
    "OPERATION_1": {
        "string": "sampleToFastqLocationsBunzips = Channel\n  .fromPath(params.sampleToFastqsPath)\n  .splitCsv(sep: \"\\t\")\n  .filter {it.size() == 2}\n  .filter{it[1].endsWith(\".tar.bz2\")}",
        "origin": [
            [
                "params.sampleToFastqsPath",
                "A"
            ]
        ],
        "gives": [
            [
                "sampleToFastqLocationsBunzips",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "sampleToFastqLocationsSingle = Channel\n  .fromPath(params.sampleToFastqsPath)\n  .splitCsv(sep: \"\\t\")\n  .filter {it.size() == 2}\n  .filter{!it[1].endsWith(\".tar.bz2\")}\n  .filter{!it[1].matches(\"^sra-single:[DES]RR[0-9]+\\$\")}\n  .filter{!it[1].matches(\"^sra-paired:[DES]RR[0-9]+\\$\")}PROCESS DEF prepareReadsSingle",
        "origin": [
            [
                "params.sampleToFastqsPath",
                "A"
            ]
        ],
        "gives": [
            [
                "sampleToFastqLocationsSingle",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "sampleToFastqLocationsSingleSra = Channel\n  .fromPath(params.sampleToFastqsPath)\n  .splitCsv(sep: \"\\t\")\n  .filter {it.size() == 2}\n  .filter{it[1].matches(\"^sra-single:[DES]RR[0-9]+\\$\")}PROCESS DEF prepareReadsSingleSra",
        "origin": [
            [
                "params.sampleToFastqsPath",
                "A"
            ]
        ],
        "gives": [
            [
                "sampleToFastqLocationsSingleSra",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "sampleToFastqLocationsPaired = Channel\n  .fromPath(params.sampleToFastqsPath)\n  .splitCsv(sep: \"\\t\")\n  .filter {it.size() == 3}PROCESS DEF prepareReadsPaired",
        "origin": [
            [
                "params.sampleToFastqsPath",
                "A"
            ]
        ],
        "gives": [
            [
                "sampleToFastqLocationsPaired",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "sampleToFastqLocationsPairedSra = Channel\n  .fromPath(params.sampleToFastqsPath)\n  .splitCsv(sep: \"\\t\")\n  .filter {it.size() == 2}\n  .filter{it[1].matches(\"^sra-paired:[DES]RR[0-9]+\\$\")}PROCESS DEF prepareReadsPairedSra",
        "origin": [
            [
                "params.sampleToFastqsPath",
                "A"
            ]
        ],
        "gives": [
            [
                "sampleToFastqLocationsPairedSra",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "kneadedReads = kneadedReadsSingle.mix(kneadedReadsPaired).mix(kneadedReadsBunzips).mix(kneadedReadsSingleSra).mix(kneadedReadsPairedSra)",
        "origin": [
            [
                "kneadedReadsSingle",
                "P"
            ],
            [
                "kneadedReadsPaired",
                "P"
            ],
            [
                "kneadedReadsBunzips",
                "P"
            ],
            [
                "kneadedReadsSingleSra",
                "P"
            ],
            [
                "kneadedReadsPairedSra",
                "P"
            ]
        ],
        "gives": [
            [
                "kneadedReads",
                "P"
            ]
        ]
    }
}