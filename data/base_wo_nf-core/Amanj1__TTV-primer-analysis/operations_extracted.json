{
    "OPERATION_1": {
        "string": "contig_files = Channel.fromFilePairs(\"${params.input}/*.fasta\",size:1) ",
        "origin": [
            [
                "\"${params.input}/*.fasta\",size:1",
                "A"
            ]
        ],
        "gives": [
            [
                "contig_files",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "filter_contigs_out.into{\nmisMatch0_in;\nmisMatch1_in;\nmisMatch2_in;\nfilt_contig_size_count_in;\n}",
        "origin": [
            [
                "filter_contigs_out",
                "P"
            ]
        ],
        "gives": [
            [
                "misMatch0_in",
                "P"
            ],
            [
                "misMatch1_in",
                "P"
            ],
            [
                "misMatch2_in",
                "P"
            ],
            [
                "filt_contig_size_count_in",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "collected_nrOfSeq_out.into{\ntotal_nrOfSeq_M0_in;\ntotal_nrOfSeq_M1_in;\ntotal_nrOfSeq_M2_in;\ntoatl_nrOfSeq_all_in\n}",
        "origin": [
            [
                "collected_nrOfSeq_out",
                "P"
            ]
        ],
        "gives": [
            [
                "total_nrOfSeq_M0_in",
                "P"
            ],
            [
                "total_nrOfSeq_M1_in",
                "P"
            ],
            [
                "total_nrOfSeq_M2_in",
                "P"
            ],
            [
                "toatl_nrOfSeq_all_in",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "misMatch0_table_out.into{\nmisMatch0_table_res_plot_in;\nmisMatch0_combine_all_in;\nmisMatch0_mix_misMatches_in;\n}",
        "origin": [
            [
                "misMatch0_table_out",
                "P"
            ]
        ],
        "gives": [
            [
                "misMatch0_table_res_plot_in",
                "P"
            ],
            [
                "misMatch0_combine_all_in",
                "P"
            ],
            [
                "misMatch0_mix_misMatches_in",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "misMatch1_table_out.into{\nmisMatch1_table_res_plot_in;\nmisMatch1_combine_all_in;\nmisMatch1_mix_misMatches_in;\n}",
        "origin": [
            [
                "misMatch1_table_out",
                "P"
            ]
        ],
        "gives": [
            [
                "misMatch1_table_res_plot_in",
                "P"
            ],
            [
                "misMatch1_combine_all_in",
                "P"
            ],
            [
                "misMatch1_mix_misMatches_in",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "misMatch2_table_out.into{\nmisMatch2_table_res_plot_in;\nmisMatch2_combine_all_in;\nmisMatch2_mix_misMatches_in;\n}",
        "origin": [
            [
                "misMatch2_table_out",
                "P"
            ]
        ],
        "gives": [
            [
                "misMatch2_table_res_plot_in",
                "P"
            ],
            [
                "misMatch2_combine_all_in",
                "P"
            ],
            [
                "misMatch2_mix_misMatches_in",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "tmp = misMatch0_mix_misMatches_in.combine(misMatch1_mix_misMatches_in, by: 0)",
        "origin": [
            [
                "misMatch0_mix_misMatches_in",
                "P"
            ]
        ],
        "gives": [
            [
                "tmp",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "all_misMatches_in = tmp.combine(misMatch2_mix_misMatches_in, by: 0)",
        "origin": [
            [
                "tmp",
                "P"
            ]
        ],
        "gives": [
            [
                "all_misMatches_in",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "nr_of_matched_seq.into{\nnr_of_matched_seq_M0;\nnr_of_matched_seq_M1;\nnr_of_matched_seq_M2\n}",
        "origin": [
            [
                "nr_of_matched_seq",
                "P"
            ]
        ],
        "gives": [
            [
                "nr_of_matched_seq_M0",
                "P"
            ],
            [
                "nr_of_matched_seq_M1",
                "P"
            ],
            [
                "nr_of_matched_seq_M2",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "collected_lists_and_nr_of_matched0.into{\ncollected_lists_and_nr_of_matched0_comb;\ncollected_lists_and_nr_of_matched0_plot\n}",
        "origin": [
            [
                "collected_lists_and_nr_of_matched0",
                "P"
            ]
        ],
        "gives": [
            [
                "collected_lists_and_nr_of_matched0_comb",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched0_plot",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "collected_lists_and_nr_of_matched1.into{\ncollected_lists_and_nr_of_matched1_comb;\ncollected_lists_and_nr_of_matched1_plot\n}",
        "origin": [
            [
                "collected_lists_and_nr_of_matched1",
                "P"
            ]
        ],
        "gives": [
            [
                "collected_lists_and_nr_of_matched1_comb",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched1_plot",
                "P"
            ]
        ]
    },
    "OPERATION_12": {
        "string": "collected_lists_and_nr_of_matched2.into{\ncollected_lists_and_nr_of_matched2_comb;\ncollected_lists_and_nr_of_matched2_plot\n}",
        "origin": [
            [
                "collected_lists_and_nr_of_matched2",
                "P"
            ]
        ],
        "gives": [
            [
                "collected_lists_and_nr_of_matched2_comb",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched2_plot",
                "P"
            ]
        ]
    },
    "OPERATION_13": {
        "string": "collected_lists_and_nr_of_matched_comb = collected_lists_and_nr_of_matched0_comb.combine(collected_lists_and_nr_of_matched1_comb).combine(collected_lists_and_nr_of_matched2_comb)",
        "origin": [
            [
                "collected_lists_and_nr_of_matched0_comb",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched1_comb",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched2_comb",
                "P"
            ]
        ],
        "gives": [
            [
                "collected_lists_and_nr_of_matched_comb",
                "P"
            ]
        ]
    },
    "OPERATION_14": {
        "string": "plot_M0_in = collected_misMatch_table_M0.combine(total_nrOfSeq_M0_in).combine(collected_lists_and_nr_of_matched0_plot)",
        "origin": [
            [
                "collected_misMatch_table_M0",
                "P"
            ],
            [
                "total_nrOfSeq_M0_in",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched0_plot",
                "P"
            ]
        ],
        "gives": [
            [
                "plot_M0_in",
                "P"
            ]
        ]
    },
    "OPERATION_15": {
        "string": "plot_M1_in = collected_misMatch_table_M1.combine(total_nrOfSeq_M1_in).combine(collected_lists_and_nr_of_matched1_plot)",
        "origin": [
            [
                "collected_misMatch_table_M1",
                "P"
            ],
            [
                "total_nrOfSeq_M1_in",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched1_plot",
                "P"
            ]
        ],
        "gives": [
            [
                "plot_M1_in",
                "P"
            ]
        ]
    },
    "OPERATION_16": {
        "string": "plot_M2_in = collected_misMatch_table_M2.combine(total_nrOfSeq_M2_in).combine(collected_lists_and_nr_of_matched2_plot)",
        "origin": [
            [
                "collected_misMatch_table_M2",
                "P"
            ],
            [
                "total_nrOfSeq_M2_in",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched2_plot",
                "P"
            ]
        ],
        "gives": [
            [
                "plot_M2_in",
                "P"
            ]
        ]
    },
    "OPERATION_17": {
        "string": "plot_comb_in = collected_misMatch_table_comb.combine(toatl_nrOfSeq_all_in).combine(collected_lists_and_nr_of_matched_comb)",
        "origin": [
            [
                "collected_misMatch_table_comb",
                "P"
            ],
            [
                "toatl_nrOfSeq_all_in",
                "P"
            ],
            [
                "collected_lists_and_nr_of_matched_comb",
                "P"
            ]
        ],
        "gives": [
            [
                "plot_comb_in",
                "P"
            ]
        ]
    }
}