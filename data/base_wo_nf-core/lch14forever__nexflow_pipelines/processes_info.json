{
    "porechop": {
        "name_process": "porechop",
        "string_process": "\nprocess porechop {\n\n    input:\n    file x from reads;\n    output:\n    file 'porechop/*' into porechop_res\n    \n    \"\"\"\n    /mnt/software/unstowable/anaconda/envs/nanopore_py3/bin/porechop -i $x --format fastq.gz -v 0 -b porechop\n    \"\"\"    \n}",
        "nb_lignes_process": 10,
        "string_script": "\"\"\"\n    /mnt/software/unstowable/anaconda/envs/nanopore_py3/bin/porechop -i $x --format fastq.gz -v 0 -b porechop\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "reads;"
        ],
        "nb_inputs": 1,
        "outputs": [
            "porechop_res"
        ],
        "nb_outputs": 1,
        "name_workflow": "lch14forever__nexflow_pipelines",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "combine": {
        "name_process": "combine",
        "string_process": "\nprocess combine {\n    tag \"$file\"\n    label 'process_low'\n\n    publishDir lib, mode: 'move'\n  \n    input:\n    set barcode, file(\"${barcode}.fastq.gz\") from ch_groupped_by_barcode  \n    output: \n    set barcode, file(\"${lib}_${barcode}/${lib}_${barcode}.fastq.gz\") into ch_combine\n\n    \"\"\"\n    mkdir ${lib}_${barcode}\n    cat *.fastq.gz* > ${lib}_${barcode}/${lib}_${barcode}.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    mkdir ${lib}_${barcode}\n    cat *.fastq.gz* > ${lib}_${barcode}/${lib}_${barcode}.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_groupped_by_barcode"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_combine"
        ],
        "nb_outputs": 1,
        "name_workflow": "lch14forever__nexflow_pipelines",
        "directive": [
            "tag \"$file\"",
            "label 'process_low'",
            "publishDir lib, mode: 'move'"
        ],
        "when": "",
        "stub": ""
    },
    "qcat": {
        "name_process": "qcat",
        "string_process": "\nprocess qcat {\n    tag \"$x\"\n    label 'process_lowCPU_highRAM'        \n                                                                         \n    \n    input:\n    file x from ch_reads;\n    output:\n    file 'qcat/*' into ch_qcat_res \n    \n    \"\"\"\n    zcat $x | ${params.qcat_path} -b qcat --trim --min-score ${params.min_score} -t $task.cpus\n    \"\"\"    \n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    zcat $x | ${params.qcat_path} -b qcat --trim --min-score ${params.min_score} -t $task.cpus\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_reads;"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_qcat_res"
        ],
        "nb_outputs": 1,
        "name_workflow": "lch14forever__nexflow_pipelines",
        "directive": [
            "tag \"$x\"",
            "label 'process_lowCPU_highRAM'"
        ],
        "when": "",
        "stub": ""
    },
    "compress_fastq": {
        "name_process": "compress_fastq",
        "string_process": "\nprocess compress_fastq {\n    tag \"$fq\"\n    label 'process_low'\n    \n    input:\n    file fq from ch_qcat_res.flatten()\n    output:\n    file \"${fq}.gz\" into ch_qcat_compress_res\n\n    \"\"\"\n    gzip -c ${fq} > ${fq}.gz\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "\"\"\"\n    gzip -c ${fq} > ${fq}.gz\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_qcat_res"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_qcat_compress_res"
        ],
        "nb_outputs": 1,
        "name_workflow": "lch14forever__nexflow_pipelines",
        "directive": [
            "tag \"$fq\"",
            "label 'process_low'"
        ],
        "when": "",
        "stub": ""
    }
}