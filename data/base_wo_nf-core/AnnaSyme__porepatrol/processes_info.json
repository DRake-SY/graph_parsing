{
    "unzip_inputfiles": {
        "name_process": "unzip_inputfiles",
        "string_process": " process unzip_inputfiles {\n\n        input:\n        file gzipped_fastq\n\n        output:\n        file \"*.{fq,fastq}\" into ch_input\n\n        script:\n        \"\"\"\n        gunzip -f $gzipped_fastq\n        \"\"\"\n        }",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        gunzip -f $gzipped_fastq\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gzipped_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_input"
        ],
        "nb_outputs": 1,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "concat_fastqs": {
        "name_process": "concat_fastqs",
        "string_process": "\nprocess concat_fastqs {\n    echo true\n    publishDir \"${params.outdir}/concatfastqs\", mode: 'copy'\n\n    input:\n    file \"nanoplot0/*\"\n    file fastq from ch_input.collect()                                        \n\n    output:\n    file \"inputs.fastq\" into ch_fastq_porechop\n    file \"num_reads_start.txt\" into ch1\n    file \"num_bases_start.txt\" into ch2\n\n    script:\n    \"\"\"\n    cat $fastq > inputs.fastq\n\n    NanoPlot --fastq inputs.fastq -o nanoplot0\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot0/NanoStats.txt))\n    echo Input: \\$numreads > num_reads_start.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot0/NanoStats.txt))\n    echo Input: \\$numbases > num_bases_start.txt\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    cat $fastq > inputs.fastq\n\n    NanoPlot --fastq inputs.fastq -o nanoplot0\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot0/NanoStats.txt))\n    echo Input: \\$numreads > num_reads_start.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot0/NanoStats.txt))\n    echo Input: \\$numbases > num_bases_start.txt\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_input"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_porechop",
            "ch1",
            "ch2"
        ],
        "nb_outputs": 3,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "echo true",
            "publishDir \"${params.outdir}/concatfastqs\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "porechop": {
        "name_process": "porechop",
        "string_process": "\nprocess porechop {\n    publishDir \"${params.outdir}/porechop\", mode: 'copy'\n\n    input:\n    file fastq from ch_fastq_porechop                                        \n\n    output:\n    file \"chopped.fastq\" into ch_fastq_nanoplot, ch_fastq_nanofilt\n\n    script:\n                                  \n                                                                        \n                                                   \n\n    \"\"\"\n    porechop -i $fastq -o chopped.fastq\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    porechop -i $fastq -o chopped.fastq\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_porechop"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_nanoplot",
            "ch_fastq_nanofilt"
        ],
        "nb_outputs": 2,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/porechop\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "nanoplot1": {
        "name_process": "nanoplot1",
        "string_process": "\nprocess nanoplot1 {\n    publishDir \"${params.outdir}/nanoplot1\", mode: 'copy'\n\n    input:\n    file fastq from ch_fastq_nanoplot\n\n    output:\n    file \"nanoplot1/*\"\n    file \"num_reads_after_porechop.txt\" into ch3\n    file \"num_bases_after_porechop.txt\" into ch4\n\n    script:\n    \"\"\"\n    NanoPlot --fastq $fastq -o nanoplot1\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot1/NanoStats.txt))\n    echo After adapter chop: \\$numreads > num_reads_after_porechop.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot1/NanoStats.txt))\n    echo After adapter chop: \\$numbases > num_bases_after_porechop.txt\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    NanoPlot --fastq $fastq -o nanoplot1\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot1/NanoStats.txt))\n    echo After adapter chop: \\$numreads > num_reads_after_porechop.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot1/NanoStats.txt))\n    echo After adapter chop: \\$numbases > num_bases_after_porechop.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_nanoplot"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch3",
            "ch4"
        ],
        "nb_outputs": 2,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/nanoplot1\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "nanofilt": {
        "name_process": "nanofilt",
        "string_process": "\nprocess nanofilt {\n    publishDir \"${params.outdir}/nanofilt\", mode: 'copy'\n\n    input:\n    file fastq from ch_fastq_nanofilt\n\n    output:\n    file 'filtered.fastq' into ch_fastq_filtered\n\n    script:\n    \"\"\"\n    NanoFilt ${params.nanofilt_args} < $fastq > filtered.fastq\n    \"\"\"\n                                                        \n                                     \n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    NanoFilt ${params.nanofilt_args} < $fastq > filtered.fastq\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_nanofilt"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastq_filtered"
        ],
        "nb_outputs": 1,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/nanofilt\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "nanoplot2": {
        "name_process": "nanoplot2",
        "string_process": "\nprocess nanoplot2 {\n    publishDir \"${params.outdir}/nanoplot2\", mode: 'copy'\n\n    input:\n    file fastq from ch_fastq_filtered\n\n    output:\n    file \"nanoplot2/*\"\n    file \"num_reads_after_filter.txt\" into ch5\n    file \"num_bases_after_filter.txt\" into ch6\n\n    script:\n    \"\"\"\n    NanoPlot --fastq $fastq -o nanoplot2\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot2/NanoStats.txt))\n    echo After filtering: \\$numreads > num_reads_after_filter.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot2/NanoStats.txt))\n    echo After filtering: \\$numbases > num_bases_after_filter.txt\n    \"\"\"\n                                                                                      \n\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    NanoPlot --fastq $fastq -o nanoplot2\n\n    #print line 6: number of reads\n    numreads=\\$(echo \\$(sed -n 6p nanoplot2/NanoStats.txt))\n    echo After filtering: \\$numreads > num_reads_after_filter.txt\n\n    #print line 8: number of bases\n    numbases=\\$(echo \\$(sed -n 8p nanoplot2/NanoStats.txt))\n    echo After filtering: \\$numbases > num_bases_after_filter.txt\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fastq_filtered"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch5",
            "ch6"
        ],
        "nb_outputs": 2,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/nanoplot2\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "readsummary": {
        "name_process": "readsummary",
        "string_process": "\nprocess readsummary {\n    echo true\n\n    publishDir \"${params.outdir}/read_summary\", mode: 'copy'\n\n    input:\n    file a from ch1\n    file b from ch2\n    file c from ch3\n    file d from ch4\n    file e from ch5\n    file f from ch6\n\n    output:\n    file \"read_summary.txt\"\n\n\n    script:\n    \"\"\"\n    cat $a $c $e $b $d $f | column -t -s: > read_summary.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    cat $a $c $e $b $d $f | column -t -s: > read_summary.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch1",
            "ch2",
            "ch3",
            "ch4",
            "ch5",
            "ch6"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "echo true",
            "publishDir \"${params.outdir}/read_summary\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n    saveAs: {filename ->\n        if (filename.indexOf(\".csv\") > 0) filename\n        else null\n    }\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    NanoPlot --version > v_nanoplot.txt\n    porechop --version > v_porechop.txt\n    NanoFilt --version > v_nanofilt.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    NanoPlot --version > v_nanoplot.txt\n    porechop --version > v_porechop.txt\n    NanoFilt --version > v_nanofilt.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "AnnaSyme__porepatrol",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}