{
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy'\n\n    when:\n    !params.skip_qc && !params.skip_fastqc\n\n    input:\n    set val(name), file(reads) from raw_reads_fastqc\n\n    output:\n    file '*_fastqc.{zip,html}' into fastqc_results\n    file '.command.out' into fastqc_stdout\n\n    script:\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "raw_reads_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results",
            "fastqc_stdout"
        ],
        "nb_outputs": 2,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy'"
        ],
        "when": "!params.skip_qc && !params.skip_fastqc",
        "stub": ""
    },
    "bbduk": {
        "name_process": "bbduk",
        "string_process": "\nprocess bbduk {\n    tag \"$name\"\n    publishDir \"${params.outdir}/bbduk\", mode: 'copy'\n\n    input:\n    set val(name), file(reads) from raw_reads_bbduk\n    file adapters from adapters\n\n    output:\n    file '*.gz' into trimmed_reads, trimmed_reads_insertsize, trimmed_reads_bowtie2\n\n    script:\n    tg_length = \"--length ${params.length}\"\n    tpc_r1 = params.three_prime_clip_R1 > 0 ? \"--three_prime_clip_R1 ${params.three_prime_clip_R1}\" : ''\n    prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    if (params.singleEnd) {\n        \"\"\"\n        bbduk.sh in=$reads out=${prefix}_trimmed.fastq.gz ref=$adapters -ktrim=r k=23 mink=11 hdist=1 tpe tbo qtrim=r trimq=20\n        \"\"\"\n    } else {\n        \"\"\"\n        bbduk.sh in=$reads out=${prefix}_trimmed.fastq.gz ref=$adapters -ktrim=r k=23 mink=11 hdist=1 tpe tbo qtrim=r trimq=20 $reads[0] $reads[1]\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 24,
        "string_script": "    tg_length = \"--length ${params.length}\"\n    tpc_r1 = params.three_prime_clip_R1 > 0 ? \"--three_prime_clip_R1 ${params.three_prime_clip_R1}\" : ''\n    prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    if (params.singleEnd) {\n        \"\"\"\n        bbduk.sh in=$reads out=${prefix}_trimmed.fastq.gz ref=$adapters -ktrim=r k=23 mink=11 hdist=1 tpe tbo qtrim=r trimq=20\n        \"\"\"\n    } else {\n        \"\"\"\n        bbduk.sh in=$reads out=${prefix}_trimmed.fastq.gz ref=$adapters -ktrim=r k=23 mink=11 hdist=1 tpe tbo qtrim=r trimq=20 $reads[0] $reads[1]\n        \"\"\"\n    }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "raw_reads_bbduk",
            "adapters"
        ],
        "nb_inputs": 2,
        "outputs": [
            "trimmed_reads",
            "trimmed_reads_insertsize",
            "trimmed_reads_bowtie2"
        ],
        "nb_outputs": 3,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bbduk\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "insertsize": {
        "name_process": "insertsize",
        "string_process": "\nprocess insertsize {\n    tag \"$reads\"\n    publishDir \"${params.outdir}/bbduk/insertsize\", mode: 'copy'\n\n    input:\n    file reads from trimmed_reads_insertsize\n\n    output:\n    file '*.insertsize' into insertsize_results\n\n    script:\n    prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \"\"\"\n    awk 'NR%4 == 2 {lengths[length(\\$0)]++} END {for (l in lengths) {print l, lengths[l]}}' <(zcat $reads) >${prefix}.insertsize\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \"\"\"\n    awk 'NR%4 == 2 {lengths[length(\\$0)]++} END {for (l in lengths) {print l, lengths[l]}}' <(zcat $reads) >${prefix}.insertsize\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "trimmed_reads_insertsize"
        ],
        "nb_inputs": 1,
        "outputs": [
            "insertsize_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$reads\"",
            "publishDir \"${params.outdir}/bbduk/insertsize\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "bowtie2": {
        "name_process": "bowtie2",
        "string_process": " process bowtie2 {\n        tag \"$reads\"\n        publishDir path: { params.saveAlignedIntermediates ? \"${params.outdir}/bowtie2\" : params.outdir }, mode: 'copy',\n               saveAs: {filename -> params.saveAlignedIntermediates ? filename : null }\n\n        input:\n        file reads from trimmed_reads_bowtie2\n        file bt2_indices\n\n        output:\n        file '*.bowtie2.bam' into bowtie2_bam, bowtie2_bam_ngi\n\n        script:\n        index_base = bt2_indices[0].toString()  - ~/\\.\\d+\\.bt2/\n        prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        if (params.singleEnd) {\n            \"\"\"\n            bowtie2 \\\\\n                -x $index_base \\\\\n                -U $reads \\\\\n                --very-sensitive \\\\\n                -p ${task.cpus} \\\\\n                -t \\\\\n                | samtools view -bT $index_base - | samtools sort - > ${prefix}.bowtie2.bam\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2 \\\\\n                -x $index_base \\\\\n                -1 $reads[0] \\\\\n                -2 $reads[1] \\\\\n                --very-sensitive \\\\\n                -p ${task.cpus} \\\\\n                -t \\\\\n                | samtools view -bT $index_base - | samtools sort - > ${prefix}.bowtie2.bam\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 36,
        "string_script": "        index_base = bt2_indices[0].toString()  - ~/\\.\\d+\\.bt2/\n        prefix = reads.toString() - ~/(.R1)?(_R1)?(_trimmed)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        if (params.singleEnd) {\n            \"\"\"\n            bowtie2 \\\\\n                -x $index_base \\\\\n                -U $reads \\\\\n                --very-sensitive \\\\\n                -p ${task.cpus} \\\\\n                -t \\\\\n                | samtools view -bT $index_base - | samtools sort - > ${prefix}.bowtie2.bam\n            \"\"\"\n        } else {\n            \"\"\"\n            bowtie2 \\\\\n                -x $index_base \\\\\n                -1 $reads[0] \\\\\n                -2 $reads[1] \\\\\n                --very-sensitive \\\\\n                -p ${task.cpus} \\\\\n                -t \\\\\n                | samtools view -bT $index_base - | samtools sort - > ${prefix}.bowtie2.bam\n            \"\"\"\n        }",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmed_reads_bowtie2",
            "bt2_indices"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bowtie2_bam",
            "bowtie2_bam_ngi"
        ],
        "nb_outputs": 2,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$reads\"",
            "publishDir path: { params.saveAlignedIntermediates ? \"${params.outdir}/bowtie2\" : params.outdir }, mode: 'copy' , saveAs: {filename -> params.saveAlignedIntermediates ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "ngi_visualizations": {
        "name_process": "ngi_visualizations",
        "string_process": " process ngi_visualizations {\n        tag \"$bowtie2_bam\"\n        publishDir \"${params.outdir}/bowtie2/ngi_visualizations\", mode: 'copy'\n\n        input:\n        file gtf from gtf\n        file bowtie2_bam from bowtie2_bam_ngi\n\n        output:\n        file '*.{png,pdf}' into bowtie2_ngi_visualizations\n\n        script:\n                                                          \n                                                                                   \n        \"\"\"\n        #!/usr/bin/env python\n        from ngi_visualizations.biotypes import count_biotypes\n        count_biotypes.main('$gtf','$bowtie2_bam')\n        \"\"\"\n    }",
        "nb_lignes_process": 18,
        "string_script": "        \"\"\"\n        #!/usr/bin/env python\n        from ngi_visualizations.biotypes import count_biotypes\n        count_biotypes.main('$gtf','$bowtie2_bam')\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "gtf",
            "bowtie2_bam_ngi"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bowtie2_ngi_visualizations"
        ],
        "nb_outputs": 1,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$bowtie2_bam\"",
            "publishDir \"${params.outdir}/bowtie2/ngi_visualizations\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n    tag \"${bam.baseName}\"\n    publishDir path: \"${params.outdir}/bowtie2\", mode: 'copy',\n               saveAs: { filename ->\n                   if (filename.indexOf(\".stats.txt\") > 0) \"stats/$filename\"\n                   else params.saveAlignedIntermediates ? filename : null\n               }\n\n    input:\n    file bam from bowtie2_bam\n\n    output:\n    file '*.sorted.bam' into bam_picard, bam_for_mapped\n    file '*.sorted.bam.bai' into bowtie2_bai, bai_for_mapped\n    file '*.sorted.bed' into bed_total\n    file '*.stats.txt' into samtools_stats\n\n    script:\n    \"\"\"\n    samtools sort $bam -o ${bam.baseName}.sorted.bam\n    samtools index ${bam.baseName}.sorted.bam\n    bedtools bamtobed -i ${bam.baseName}.sorted.bam | sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 > ${bam.baseName}.sorted.bed\n    samtools stats ${bam.baseName}.sorted.bam > ${bam.baseName}.stats.txt\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    samtools sort $bam -o ${bam.baseName}.sorted.bam\n    samtools index ${bam.baseName}.sorted.bam\n    bedtools bamtobed -i ${bam.baseName}.sorted.bam | sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 > ${bam.baseName}.sorted.bed\n    samtools stats ${bam.baseName}.sorted.bam > ${bam.baseName}.stats.txt\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bowtie2_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_picard",
            "bam_for_mapped",
            "bowtie2_bai",
            "bai_for_mapped",
            "bed_total",
            "samtools_stats"
        ],
        "nb_outputs": 6,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"${bam.baseName}\"",
            "publishDir path: \"${params.outdir}/bowtie2\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".stats.txt\") > 0) \"stats/$filename\" else params.saveAlignedIntermediates ? filename : null }"
        ],
        "when": "",
        "stub": ""
    },
    "bowtie2_mapped": {
        "name_process": "bowtie2_mapped",
        "string_process": "\nprocess bowtie2_mapped {\n    tag \"${input_files[0].baseName}\"\n    publishDir \"${params.outdir}/bowtie2/mapped\", mode: 'copy'\n\n    input:\n    file input_files from bam_for_mapped.collect()\n    file bai from bai_for_mapped.collect()\n\n    output:\n    file 'mapped_refgenome.txt' into bwa_mapped\n\n    script:\n    \"\"\"\n    for i in $input_files\n    do\n      samtools idxstats \\${i} | awk -v filename=\"\\${i}\" '{mapped+=\\$3; unmapped+=\\$4} END {print filename,\"\\t\",mapped,\"\\t\",unmapped}'\n    done > mapped_refgenome.txt\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    for i in $input_files\n    do\n      samtools idxstats \\${i} | awk -v filename=\"\\${i}\" '{mapped+=\\$3; unmapped+=\\$4} END {print filename,\"\\t\",mapped,\"\\t\",unmapped}'\n    done > mapped_refgenome.txt\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bam_for_mapped",
            "bai_for_mapped"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bwa_mapped"
        ],
        "nb_outputs": 1,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"${input_files[0].baseName}\"",
            "publishDir \"${params.outdir}/bowtie2/mapped\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "picard": {
        "name_process": "picard",
        "string_process": "\nprocess picard {\n    tag \"$prefix\"\n    publishDir \"${params.outdir}/picard\", mode: 'copy'\n\n    input:\n    file bam from bam_picard\n\n    output:\n    file '*.dedup.sorted.bam' into bam_dedup_ssp, bam_dedup_deepTools\n    file '*.dedup.sorted.bam.bai' into bai_dedup_deepTools, bai_dedup_ssp\n    file '*.dedup.sorted.bed' into bed_dedup\n    file '*.picardDupMetrics.txt' into picard_reports\n\n    script:\n    prefix = bam[0].toString() - ~/(\\.sorted)?(\\.bam)?$/\n    if( task.memory == null ){\n        log.warn \"[Picard MarkDuplicates] Available memory not known - defaulting to 6GB ($prefix)\"\n        avail_mem = 6000\n    } else {\n        avail_mem = task.memory.toMega()\n        if( avail_mem <= 0){\n            avail_mem = 6000\n            log.warn \"[Picard MarkDuplicates] Available memory 0 - defaulting to 6GB ($prefix)\"\n        } else if( avail_mem < 250){\n            avail_mem = 250\n            log.warn \"[Picard MarkDuplicates] Available memory under 250MB - defaulting to 250MB ($prefix)\"\n        }\n    }\n    \"\"\"\n    picard MarkDuplicates \\\\\n        INPUT=$bam \\\\\n        OUTPUT=${prefix}.dedup.bam \\\\\n        ASSUME_SORTED=true \\\\\n        REMOVE_DUPLICATES=false \\\\\n        METRICS_FILE=${prefix}.picardDupMetrics.txt \\\\\n        VALIDATION_STRINGENCY=LENIENT \\\\\n        PROGRAM_RECORD_ID='null'\n    samtools sort ${prefix}.dedup.bam -o ${prefix}.dedup.sorted.bam\n    samtools index ${prefix}.dedup.sorted.bam\n    bedtools bamtobed -i ${prefix}.dedup.sorted.bam | sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 > ${prefix}.dedup.sorted.bed\n    \"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "    prefix = bam[0].toString() - ~/(\\.sorted)?(\\.bam)?$/\n    if( task.memory == null ){\n        log.warn \"[Picard MarkDuplicates] Available memory not known - defaulting to 6GB ($prefix)\"\n        avail_mem = 6000\n    } else {\n        avail_mem = task.memory.toMega()\n        if( avail_mem <= 0){\n            avail_mem = 6000\n            log.warn \"[Picard MarkDuplicates] Available memory 0 - defaulting to 6GB ($prefix)\"\n        } else if( avail_mem < 250){\n            avail_mem = 250\n            log.warn \"[Picard MarkDuplicates] Available memory under 250MB - defaulting to 250MB ($prefix)\"\n        }\n    }\n    \"\"\"\n    picard MarkDuplicates \\\\\n        INPUT=$bam \\\\\n        OUTPUT=${prefix}.dedup.bam \\\\\n        ASSUME_SORTED=true \\\\\n        REMOVE_DUPLICATES=false \\\\\n        METRICS_FILE=${prefix}.picardDupMetrics.txt \\\\\n        VALIDATION_STRINGENCY=LENIENT \\\\\n        PROGRAM_RECORD_ID='null'\n    samtools sort ${prefix}.dedup.bam -o ${prefix}.dedup.sorted.bam\n    samtools index ${prefix}.dedup.sorted.bam\n    bedtools bamtobed -i ${prefix}.dedup.sorted.bam | sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 > ${prefix}.dedup.sorted.bed\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "Picard",
            "SAMtools",
            "BEDTools"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/samtools",
            "https://bio.tools/bedtools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            }
        ],
        "inputs": [
            "bam_picard"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_dedup_ssp",
            "bam_dedup_deepTools",
            "bai_dedup_deepTools",
            "bai_dedup_ssp",
            "bed_dedup",
            "picard_reports"
        ],
        "nb_outputs": 6,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$prefix\"",
            "publishDir \"${params.outdir}/picard\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "countstat": {
        "name_process": "countstat",
        "string_process": "\nprocess countstat {\n    tag \"${input[0].baseName}\"\n    publishDir \"${params.outdir}/countstat\", mode: 'copy'\n\n    input:\n    file input from bed_total.mix(bed_dedup).toSortedList()\n\n    output:\n    file 'read_count_statistics.txt' into countstat_results\n\n    script:\n    \"\"\"\n    countstat.pl $input\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    countstat.pl $input\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bed_total",
            "bed_dedup"
        ],
        "nb_inputs": 2,
        "outputs": [
            "countstat_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"${input[0].baseName}\"",
            "publishDir \"${params.outdir}/countstat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ssp": {
        "name_process": "ssp",
        "string_process": "\nprocess ssp {\n    tag \"${bam[0].baseName}\"\n    publishDir \"${params.outdir}/ssp\", mode: \"copy\"\n\n    when:\n    !params.skip_qc\n\n    input:\n    file bam from bam_dedup_ssp\n    file bai from bai_dedup_ssp\n    file chrom_sizes\n\n    output:\n    file 'sspout/*.{txt,pdf}' into ssp_results\n\n    script:\n    prefix = bam[0].toString() - ~/(\\.sorted)?(\\.bam)?$/\n    if (!params.singleEnd) {\n        \"\"\"\n        ssp -i $bam -o ${prefix} --gt $chrom_sizes -p ${task.cpus} --pair\n        \"\"\"\n    } else {\n        \"\"\"\n        ssp -i $bam -o ${prefix} --gt $chrom_sizes -p ${task.cpus}\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 26,
        "string_script": "    prefix = bam[0].toString() - ~/(\\.sorted)?(\\.bam)?$/\n    if (!params.singleEnd) {\n        \"\"\"\n        ssp -i $bam -o ${prefix} --gt $chrom_sizes -p ${task.cpus} --pair\n        \"\"\"\n    } else {\n        \"\"\"\n        ssp -i $bam -o ${prefix} --gt $chrom_sizes -p ${task.cpus}\n        \"\"\"\n    }",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SSP"
        ],
        "tools_url": [
            "https://bio.tools/ssp-shift"
        ],
        "tools_dico": [
            {
                "name": "SSP",
                "uri": "https://bio.tools/ssp-shift",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3292",
                            "term": "Biochemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3292",
                            "term": "Biological chemistry"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0474",
                                    "term": "Protein structure prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An algorithm that combines chemical shifts from different nuclei into a score, which reflects the expected fraction of \u03b1- or \u03b2-structure.",
                "homepage": "http://abragam.med.utoronto.ca/~JFKlab/"
            }
        ],
        "inputs": [
            "bam_dedup_ssp",
            "bai_dedup_ssp",
            "chrom_sizes"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ssp_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"${bam[0].baseName}\"",
            "publishDir \"${params.outdir}/ssp\", mode: \"copy\""
        ],
        "when": "!params.skip_qc",
        "stub": ""
    },
    "deepTools": {
        "name_process": "deepTools",
        "string_process": "\nprocess deepTools {\n    tag \"${bam[0].baseName}\"\n    publishDir \"${params.outdir}/deepTools\", mode: 'copy'\n\n    input:\n    file bam from bam_dedup_deepTools.collect()\n    file bai from bai_dedup_deepTools.collect()\n\n    output:\n    file '*.{txt,pdf,png,npz,bw}' into deepTools_results\n    file '*.txt' into deepTools_multiqc\n\n    script:\n    if (!params.singleEnd) {\n        \"\"\"\n        bamPEFragmentSize \\\\\n            --binSize 1000 \\\\\n            --bamfiles $bam \\\\\n            --histogram fragment_length_distribution_histogram.png \\\\\n            --plotTitle \"Fragment Length Distribution\"\n        \"\"\"\n    }\n    if(bam instanceof Path){\n        log.warn(\"Only 1 BAM file - skipping multiBam deepTool steps\")\n        \"\"\"\n        plotFingerprint \\\\\n            -b $bam \\\\\n            --outRawCounts ${bam.baseName}_fingerprint.txt \\\\\n            --skipZeros \\\\\n            --ignoreDuplicates \\\\\n            --numberOfSamples 50000 \\\\\n            --binSize 500 \\\\\n            --outQualityMetrics ${bam.baseName}_fingerprints_metrics.txt \\\\\n            -p ${task.cpus}\n        bamCoverage \\\\\n           -b $bam \\\\\n           --normalizeUsing RPKM \\\\\n           -p ${task.cpus} \\\\\n           --Offset 1 \\\\\n           -bs 1 \\\\\n           -o ${bam}.bw\n        \"\"\"\n    } else {\n        \"\"\"\n        plotFingerprint \\\\\n            -b $bam \\\\\n            --outRawCounts fingerprint.txt \\\\\n            --skipZeros \\\\\n            --ignoreDuplicates \\\\\n            --numberOfSamples 50000 \\\\\n            --binSize 500 \\\\\n            --outQualityMetrics all_fingerprint_metrics.txt \\\\\n            -p ${task.cpus}\n        for bamfile in ${bam}\n        do\n            bamCoverage \\\\\n              -b \\$bamfile \\\\\n              --normalizeUsing RPKM \\\\\n              -p ${task.cpus} \\\\\n              --Offset 1 \\\\\n              -bs 1 \\\\\n              -o \\${bamfile}.bw\n        done\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 65,
        "string_script": "    if (!params.singleEnd) {\n        \"\"\"\n        bamPEFragmentSize \\\\\n            --binSize 1000 \\\\\n            --bamfiles $bam \\\\\n            --histogram fragment_length_distribution_histogram.png \\\\\n            --plotTitle \"Fragment Length Distribution\"\n        \"\"\"\n    }\n    if(bam instanceof Path){\n        log.warn(\"Only 1 BAM file - skipping multiBam deepTool steps\")\n        \"\"\"\n        plotFingerprint \\\\\n            -b $bam \\\\\n            --outRawCounts ${bam.baseName}_fingerprint.txt \\\\\n            --skipZeros \\\\\n            --ignoreDuplicates \\\\\n            --numberOfSamples 50000 \\\\\n            --binSize 500 \\\\\n            --outQualityMetrics ${bam.baseName}_fingerprints_metrics.txt \\\\\n            -p ${task.cpus}\n        bamCoverage \\\\\n           -b $bam \\\\\n           --normalizeUsing RPKM \\\\\n           -p ${task.cpus} \\\\\n           --Offset 1 \\\\\n           -bs 1 \\\\\n           -o ${bam}.bw\n        \"\"\"\n    } else {\n        \"\"\"\n        plotFingerprint \\\\\n            -b $bam \\\\\n            --outRawCounts fingerprint.txt \\\\\n            --skipZeros \\\\\n            --ignoreDuplicates \\\\\n            --numberOfSamples 50000 \\\\\n            --binSize 500 \\\\\n            --outQualityMetrics all_fingerprint_metrics.txt \\\\\n            -p ${task.cpus}\n        for bamfile in ${bam}\n        do\n            bamCoverage \\\\\n              -b \\$bamfile \\\\\n              --normalizeUsing RPKM \\\\\n              -p ${task.cpus} \\\\\n              --Offset 1 \\\\\n              -bs 1 \\\\\n              -o \\${bamfile}.bw\n        done\n        \"\"\"\n    }",
        "nb_lignes_script": 51,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bam_dedup_deepTools",
            "bai_dedup_deepTools"
        ],
        "nb_inputs": 2,
        "outputs": [
            "deepTools_results",
            "deepTools_multiqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"${bam[0].baseName}\"",
            "publishDir \"${params.outdir}/deepTools\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    tag \"$prefix\"\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n    input:\n    file multiqc_config\n    file (fastqc:'fastqc/*') from fastqc_results.collect()\n    file ('samtools/*') from samtools_stats.collect()\n    file ('picard/*') from picard_reports.collect()\n    file ('deeptools/*') from deepTools_multiqc.collect()\n\n    output:\n    file '*multiqc_report.html' into multiqc_report\n    file '*_data' into multiqc_data\n    file '.command.err' into multiqc_stderr\n    val prefix into multiqc_prefix\n\n    script:\n    prefix = fastqc[0].toString() - '_fastqc.html' - 'fastqc/'\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename --config $multiqc_config . 2>&1\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    prefix = fastqc[0].toString() - '_fastqc.html' - 'fastqc/'\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename --config $multiqc_config . 2>&1\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqc_config",
            "fastqc_results",
            "samtools_stats",
            "picard_reports",
            "deepTools_multiqc"
        ],
        "nb_inputs": 5,
        "outputs": [
            "multiqc_report",
            "multiqc_data",
            "multiqc_stderr",
            "multiqc_prefix"
        ],
        "nb_outputs": 4,
        "name_workflow": "heinzlab__csrna",
        "directive": [
            "tag \"$prefix\"",
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}