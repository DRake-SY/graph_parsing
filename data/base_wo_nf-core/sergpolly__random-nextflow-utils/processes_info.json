{
    "getmd5": {
        "name_process": "getmd5",
        "string_process": "\nprocess getmd5 {\n   input:\n      file f from INPUT_CHNL_MD5\n   output:\n      set file(f), stdout into READY_INPUT_CHNL_MD5\n\n   \"\"\"\n   md5sum ${f} | cut -f1 -d' ' | tr -d '\\n'\n   \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n   md5sum ${f} | cut -f1 -d' ' | tr -d '\\n'\n   \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "INPUT_CHNL_MD5"
        ],
        "nb_inputs": 1,
        "outputs": [
            "READY_INPUT_CHNL_MD5"
        ],
        "nb_outputs": 1,
        "name_workflow": "sergpolly__random-nextflow-utils",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "copy_n_verify_hash": {
        "name_process": "copy_n_verify_hash",
        "string_process": "\nprocess copy_n_verify_hash {\n   input:\n      set file(f_in), hash_in from CHNL_FILES_HASHES\n   output:\n      stdout into OUTPUT_HASH\n\n                            \n\n   script:\n     \"\"\"\n     FOUT=${myDir}/${f_in}\n     cp ${f_in} \\$FOUT\n     HASH_OUT=\\$(md5sum \\$FOUT | cut -f1 -d' ' | tr -d '\\n')\n     if [ ${hash_in} = \\$HASH_OUT ]; then\n        exit 0\n     else\n        exit 1\n     fi\n     \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "     \"\"\"\n     FOUT=${myDir}/${f_in}\n     cp ${f_in} \\$FOUT\n     HASH_OUT=\\$(md5sum \\$FOUT | cut -f1 -d' ' | tr -d '\\n')\n     if [ ${hash_in} = \\$HASH_OUT ]; then\n        exit 0\n     else\n        exit 1\n     fi\n     \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "CHNL_FILES_HASHES"
        ],
        "nb_inputs": 1,
        "outputs": [
            "OUTPUT_HASH"
        ],
        "nb_outputs": 1,
        "name_workflow": "sergpolly__random-nextflow-utils",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "dump_cworld": {
        "name_process": "dump_cworld",
        "string_process": "\nprocess dump_cworld {\n    executor 'lsf'\n    cpus 2\n    queue 'short'\n    time { 45.m * task.attempt }\n    maxForks 100\n    errorStrategy 'retry'\n    maxRetries 2\n    memory '8 GB'\n    beforeScript 'source activate cooler-env'\n    publishDir \"./maaaatricy/$lib/$res\"\n\n    input:\n    set file(path), val(lib), val(res), val(chrom)  from pa_li_re_ch\n\n    output:\n    set file(\"${lib}.${res}.${chrom}.matrix\"), stdout into myout\n\n    script:\n    \"\"\"\n    echo ${lib}.${res}.${chrom}.matrix\n    cooltools dump_cworld --region ${chrom} ${path} ${lib}.${res}.${chrom}.matrix\n    \"\"\"\n\n }",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    echo ${lib}.${res}.${chrom}.matrix\n    cooltools dump_cworld --region ${chrom} ${path} ${lib}.${res}.${chrom}.matrix\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pa_li_re_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "myout"
        ],
        "nb_outputs": 1,
        "name_workflow": "sergpolly__random-nextflow-utils",
        "directive": [
            "executor 'lsf'",
            "cpus 2",
            "queue 'short'",
            "time { 45.m * task.attempt }",
            "maxForks 100",
            "errorStrategy 'retry'",
            "maxRetries 2",
            "memory '8 GB'",
            "beforeScript 'source activate cooler-env'",
            "publishDir \"./maaaatricy/$lib/$res\""
        ],
        "when": "",
        "stub": ""
    },
    "getmd5_2": {
        "name_process": "getmd5_2",
        "string_process": "\nprocess getmd5_2 {\n   input:\n      file f from OUTPUT_CHNL_MD5\n   output:\n      set file(f), stdout into READY_OUTPUT_CHNL_MD5\n   \"\"\"\n   md5sum ${f} | cut -f1 -d' ' | tr -d '\\n'\n   \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "\"\"\"\n   md5sum ${f} | cut -f1 -d' ' | tr -d '\\n'\n   \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "OUTPUT_CHNL_MD5"
        ],
        "nb_inputs": 1,
        "outputs": [
            "READY_OUTPUT_CHNL_MD5"
        ],
        "nb_outputs": 1,
        "name_workflow": "sergpolly__random-nextflow-utils",
        "directive": [],
        "when": "",
        "stub": ""
    }
}