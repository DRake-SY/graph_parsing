{
    "splitLetters": {
        "name_process": "splitLetters",
        "string_process": "\nprocess splitLetters {\n\n    output:\n    file 'chunk_*' into letters\n\n    \"\"\"\n    printf '${params.str}' | split -b 6 - chunk_\n    \"\"\"\n}",
        "nb_lignes_process": 8,
        "string_script": "\"\"\"\n    printf '${params.str}' | split -b 6 - chunk_\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "letters"
        ],
        "nb_outputs": 1,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "convertToUpper": {
        "name_process": "convertToUpper",
        "string_process": "\nprocess convertToUpper {\n\n    input:\n    file x from letters.flatten()\n\n    output:\n    stdout result\n\n    \"\"\"\n    cat $x | tr '[a-z]' '[A-Z]'\n    \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n    cat $x | tr '[a-z]' '[A-Z]'\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "letters"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cleanRep": {
        "name_process": "cleanRep",
        "string_process": "\nprocess cleanRep {\n\n   \"\"\"\n   printf '${params.str}'\n   \"\"\"\n}",
        "nb_lignes_process": 5,
        "string_script": "\"\"\"\n   printf '${params.str}'\n   \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "Greeting": {
        "name_process": "Greeting",
        "string_process": "\nprocess Greeting {\n    \n    input:\n    path username \n     \n    output:\n    println \"Hello: $params.username\"\n\n}",
        "nb_lignes_process": 8,
        "string_script": "",
        "nb_lignes_script": 0,
        "language_script": "",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "username"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "SraDownload": {
        "name_process": "SraDownload",
        "string_process": "\nprocess SraDownload {\n    echo true\n\n    input:\n    params.srainput\n    val id from sraIds\n\n\n    output:\n    println \"Reading from:  $params.srainput\"\n\n    \n    script:\n    \"\"\"\n    echo \"Step 1/2 Prefetch ....\"\n    echo \"Downloading .... $id\"\n    docker run -t --name $id -v /root/ncbi/public/sra/ -v $baseDir/${params.data}sra/srafiles/ najlabioinfo/nextflowtuto prefetch ${id}\n    docker cp $id:/root/ncbi/public/sra/${id}.sra $baseDir/${params.data}sra/srafiles/\n    docker stop $id\n    docker rm $id\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    echo \"Step 1/2 Prefetch ....\"\n    echo \"Downloading .... $id\"\n    docker run -t --name $id -v /root/ncbi/public/sra/ -v $baseDir/${params.data}sra/srafiles/ najlabioinfo/nextflowtuto prefetch ${id}\n    docker cp $id:/root/ncbi/public/sra/${id}.sra $baseDir/${params.data}sra/srafiles/\n    docker stop $id\n    docker rm $id\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "AUDocker"
        ],
        "tools_url": [
            "https://bio.tools/audocker"
        ],
        "tools_dico": [
            {
                "name": "AUDocker",
                "uri": "https://bio.tools/audocker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A GUI for AutoDock Vina, it helps in virtual screening of huge number of ligands continuously. Helps in resumption of work in accidental shutdowns. This program can help you in docking several ligands automatically in to a prescribed protein receptor site.",
                "homepage": "http://sdisau.blogspot.kr/2011/04/audocker-10-easy-tool-for-virtual.html"
            }
        ],
        "inputs": [
            "sraIds"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "FastqDumpDocker": {
        "name_process": "FastqDumpDocker",
        "string_process": "\nprocess FastqDumpDocker {\n    echo true\n\tpublishDir \"${params.output}\"\n\tcontainer 'najlabioinfo/nextflowtuto:latest'\n\n   input:\n    params.prefinput\n    params.output\n    params.fastqinput\n    val idsra from prefetchIds\n\n    script:\n    \"\"\"\n    echo \"Step 2/2 Fastq-dump ....\"\n    docker run -t --name $idsra\"f\"  najlabioinfo/nextflowtuto  fastq-dump -X 5 -Z ${idsra} > $params.fastqinput/$idsra\".fastq\" \n    docker stop $idsra\"f\"\n    docker rm $idsra\"f\"\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    echo \"Step 2/2 Fastq-dump ....\"\n    docker run -t --name $idsra\"f\"  najlabioinfo/nextflowtuto  fastq-dump -X 5 -Z ${idsra} > $params.fastqinput/$idsra\".fastq\" \n    docker stop $idsra\"f\"\n    docker rm $idsra\"f\"\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "AUDocker"
        ],
        "tools_url": [
            "https://bio.tools/audocker"
        ],
        "tools_dico": [
            {
                "name": "AUDocker",
                "uri": "https://bio.tools/audocker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A GUI for AutoDock Vina, it helps in virtual screening of huge number of ligands continuously. Helps in resumption of work in accidental shutdowns. This program can help you in docking several ligands automatically in to a prescribed protein receptor site.",
                "homepage": "http://sdisau.blogspot.kr/2011/04/audocker-10-easy-tool-for-virtual.html"
            }
        ],
        "inputs": [
            "prefetchIds"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [
            "echo true",
            "publishDir \"${params.output}\"",
            "container 'najlabioinfo/nextflowtuto:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "SayingBye": {
        "name_process": "SayingBye",
        "string_process": "\nprocess SayingBye {\n    echo true\n\n    input:\n    params.username\n\n    output:\n    println \"Thank you - $params.username - for using  Nextflow template \\nMore infos : bhndevtools@gmail.com\"\n\n    script:\n    \"\"\"\n    echo \"Goodbye\"\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    echo \"Goodbye\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "GreetingPlus": {
        "name_process": "GreetingPlus",
        "string_process": "\nprocess GreetingPlus {\n    echo true\n\n    input:\n    params.username\n    params.output\n    params.data\n\n    output:\n    println \"Hello: $params.username\"\n    println \"ResultPath: $params.output\"\n    println \"DataPath: $params.data\" \n    \n    script:\n    \"\"\"\n    python $baseDir/bin/argcheck.py ${params.username} $baseDir/${params.data} $baseDir/${params.output}\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    python $baseDir/bin/argcheck.py ${params.username} $baseDir/${params.data} $baseDir/${params.output}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "FastqcDocker": {
        "name_process": "FastqcDocker",
        "string_process": "\nprocess FastqcDocker {\n    echo true\n\tpublishDir \"${params.outdir}\"\n\tcontainer 'najlabioinfo/sra:latest'\n\n    script:\n    \"\"\"\n    docker run -t --name sraimage najlabioinfo/sra fastqc --version\n    \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "    \"\"\"\n    docker run -t --name sraimage najlabioinfo/sra fastqc --version\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "AUDocker"
        ],
        "tools_url": [
            "https://bio.tools/audocker"
        ],
        "tools_dico": [
            {
                "name": "AUDocker",
                "uri": "https://bio.tools/audocker",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0128",
                            "term": "Protein interactions"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Protein-ligand docking"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0482",
                                    "term": "Ligand-binding simulation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A GUI for AutoDock Vina, it helps in virtual screening of huge number of ligands continuously. Helps in resumption of work in accidental shutdowns. This program can help you in docking several ligands automatically in to a prescribed protein receptor site.",
                "homepage": "http://sdisau.blogspot.kr/2011/04/audocker-10-easy-tool-for-virtual.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "NajlaBioinfo__nextflow_tmpl",
        "directive": [
            "echo true",
            "publishDir \"${params.outdir}\"",
            "container 'najlabioinfo/sra:latest'"
        ],
        "when": "",
        "stub": ""
    }
}