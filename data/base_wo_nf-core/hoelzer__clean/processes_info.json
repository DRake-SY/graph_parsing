{
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "process fastqc {\n  label 'fastqc'\n\n  input:\n  tuple val(name), val(type), path(reads)\n\n  output:\n  tuple val(name), val(type), path(\"*_fastqc.zip\"), emit: zip\n\n  script:\n  \"\"\"\n  fastqc --noextract -t ${task.cpus} ${reads}\n  \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "  \"\"\"\n  fastqc --noextract -t ${task.cpus} ${reads}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "name",
            "type",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'fastqc'"
        ],
        "when": "",
        "stub": ""
    },
    "nanoplot": {
        "name_process": "nanoplot",
        "string_process": "\nprocess nanoplot {\n  label 'nanoplot'\n  errorStrategy { task.exitStatus in 1 ? 'ignore' : 'terminate' }\n\n  input:\n  tuple val(name), val(type), path(reads)\n\n  output:\n  tuple val(name), path(\"*.html\"), path(\"*.png\"), path(\"*.pdf\"), file(\"${name}_${type}_read_quality.txt\")\n  tuple val(name), val(type), path(\"${name}_${type}_read_quality_report.html\"), emit: html\n  \n  script:\n  \"\"\"\n  NanoPlot -t ${task.cpus} --fastq ${reads} --title ${name}_${type} --color darkslategrey --N50 --plots hex --loglength -f png --store\n  NanoPlot -t ${task.cpus} --pickle NanoPlot-data.pickle --title ${name}_${type} --color darkslategrey --N50 --plots hex --loglength -f pdf\n  mv NanoPlot-report.html ${name}_${type}_read_quality_report.html\n  mv NanoStats.txt ${name}_${type}_read_quality.txt\n  \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "  \"\"\"\n  NanoPlot -t ${task.cpus} --fastq ${reads} --title ${name}_${type} --color darkslategrey --N50 --plots hex --loglength -f png --store\n  NanoPlot -t ${task.cpus} --pickle NanoPlot-data.pickle --title ${name}_${type} --color darkslategrey --N50 --plots hex --loglength -f pdf\n  mv NanoPlot-report.html ${name}_${type}_read_quality_report.html\n  mv NanoStats.txt ${name}_${type}_read_quality.txt\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "type",
            "reads"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'nanoplot'",
            "errorStrategy { task.exitStatus in 1 ? 'ignore' : 'terminate' }"
        ],
        "when": "",
        "stub": ""
    },
    "format_nanoplot_report": {
        "name_process": "format_nanoplot_report",
        "string_process": "\nprocess format_nanoplot_report {\n    label 'smallTask'\n    \n    input:\n    tuple val(name), val(type), path(nanoplot_report)\n\n    output:\n    path(\"*_mqc.html\")\n\n    script:\n    \"\"\"\n    sed -e '25,30d;34,45d' ${nanoplot_report} > ${nanoplot_report}.tmp\n    echo \"<!--\" > tmp\n    echo \"id: 'nanoplot_${name}_${type}'\" >> tmp\n    echo \"section_name: 'NanoPlot: ${name}, ${type}'\" >> tmp\n    echo \"-->\"  >> tmp\n    cat tmp ${nanoplot_report}.tmp > ${nanoplot_report.baseName}_mqc.html\n    rm -f *tmp\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    sed -e '25,30d;34,45d' ${nanoplot_report} > ${nanoplot_report}.tmp\n    echo \"<!--\" > tmp\n    echo \"id: 'nanoplot_${name}_${type}'\" >> tmp\n    echo \"section_name: 'NanoPlot: ${name}, ${type}'\" >> tmp\n    echo \"-->\"  >> tmp\n    cat tmp ${nanoplot_report}.tmp > ${nanoplot_report.baseName}_mqc.html\n    rm -f *tmp\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "name",
            "type",
            "nanoplot_report"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'"
        ],
        "when": "",
        "stub": ""
    },
    "quast": {
        "name_process": "quast",
        "string_process": "\nprocess quast {\n  label 'quast'\n  errorStrategy { task.exitStatus in 4 ? 'ignore' : 'terminate' }\n\n  input:\n  tuple val(name), val(type), path(fasta)\n\n  output:\n  path(\"${name}_${type}_report.tsv\"), emit: report_tsv\n  path(\"quast_${name}_${type}\")\n\n  script:\n  \"\"\"\n  quast.py -o quast_${name}_${type} -t ${task.cpus} ${fasta}\n  cp quast_${name}_${type}/report.tsv ${name}_${type}_report.tsv\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  quast.py -o quast_${name}_${type} -t ${task.cpus} ${fasta}\n  cp quast_${name}_${type}/report.tsv ${name}_${type}_report.tsv\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "type",
            "fasta"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'quast'",
            "errorStrategy { task.exitStatus in 4 ? 'ignore' : 'terminate' }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n  label 'multiqc'\n                                                                                                                              \n   \n  publishDir \"${params.output}/${params.multiqc_dir}\", pattern: 'multiqc_report.html'\n  \n  input:\n  path(config)\n  path(fastqc)\n  path(nanoplot)\n  path(quast)\n  path(mapping_stats)\n    \n  output:\n  path \"multiqc_report.html\"\n  \n  script:\n  \"\"\"\n  multiqc . -s -c ${config}\n  \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "  \"\"\"\n  multiqc . -s -c ${config}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "config",
            "fastqc",
            "nanoplot",
            "quast",
            "mapping_stats"
        ],
        "nb_inputs": 5,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'multiqc'",
            "publishDir \"${params.output}/${params.multiqc_dir}\", pattern: 'multiqc_report.html'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_fasta": {
        "name_process": "minimap2_fasta",
        "string_process": "\nprocess minimap2_fasta {\n  label 'minimap2'\n\n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\"\n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*clean.fasta.gz\"\n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*contamination.fasta.gz\"\n\n  input: \n    tuple val(name), path(fasta)\n    path db\n\n  output:\n    tuple val(name), path ('idxstats.tsv'), env(TOTALCONTIGS), emit: stats\n    tuple val(name), val('clean'), path('*clean.fasta.gz'), emit: cleaned_contigs\n    tuple val(name), val('contamination'), path('*contamination.fasta.gz'), emit: contaminated_contigs\n    path '*.contamination.sorted.bam*'\n\n  script:\n  \"\"\"\n  if [[ ${fasta} =~ \\\\.gz\\$ ]]; then\n    TOTALCONTIGS=\\$(zgrep '^>' ${fasta} | wc -l)\n  else\n    TOTALCONTIGS=\\$(grep '^>' ${fasta} | wc -l)\n  fi\n\n  minimap2 -ax asm5 -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${fasta}\n\n  samtools fasta -f 4 -0 ${name}.clean.fasta ${name}.sam\n  samtools fasta -F 4 -0 ${name}.contamination.fasta ${name}.sam\n  pigz -p ${task.cpus} ${name}.clean.fasta\n  pigz -p ${task.cpus} ${name}.contamination.fasta\n\n  samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n  samtools index ${name}.contamination.sorted.bam\n  samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n\n  rm -f ${name}.sam\n  \"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "  \"\"\"\n  if [[ ${fasta} =~ \\\\.gz\\$ ]]; then\n    TOTALCONTIGS=\\$(zgrep '^>' ${fasta} | wc -l)\n  else\n    TOTALCONTIGS=\\$(grep '^>' ${fasta} | wc -l)\n  fi\n\n  minimap2 -ax asm5 -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${fasta}\n\n  samtools fasta -f 4 -0 ${name}.clean.fasta ${name}.sam\n  samtools fasta -F 4 -0 ${name}.contamination.fasta ${name}.sam\n  pigz -p ${task.cpus} ${name}.clean.fasta\n  pigz -p ${task.cpus} ${name}.contamination.fasta\n\n  samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n  samtools index ${name}.contamination.sorted.bam\n  samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n\n  rm -f ${name}.sam\n  \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "fasta",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\"",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*clean.fasta.gz\"",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*contamination.fasta.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_nano": {
        "name_process": "minimap2_nano",
        "string_process": "\nprocess minimap2_nano {\n  label 'minimap2'\n  \n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\"\n\n  input: \n    tuple val(name), path(reads)\n    path db\n\n  output:\n    tuple val(name), path ('idxstats.tsv'), emit: idxstats\n    tuple val(name), val('clean'), path('*clean.fastq'), emit: cleaned_reads\n    tuple val(name), val('contamination'), path('*contamination.fastq'), emit: contaminated_reads\n    path '*.contamination.sorted.bam*'\n\n  script:\n  \"\"\"\n  PARAMS=\"-ax map-ont\"\n  if [[ ${params.reads_rna} != 'false' ]]; then\n    PARAMS=\"-ax splice -k14\"\n  fi\n\n  minimap2 \\$PARAMS -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads}\n\n  samtools fastq -f 4 -0 ${reads.baseName}.clean.fastq ${name}.sam\n  samtools fastq -F 4 -0 ${reads.baseName}.contamination.fastq ${name}.sam\n\n  samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n  samtools index ${name}.contamination.sorted.bam\n  samtools idxstats  ${name}.contamination.sorted.bam > idxstats.tsv\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  PARAMS=\"-ax map-ont\"\n  if [[ ${params.reads_rna} != 'false' ]]; then\n    PARAMS=\"-ax splice -k14\"\n  fi\n\n  minimap2 \\$PARAMS -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads}\n\n  samtools fastq -f 4 -0 ${reads.baseName}.clean.fastq ${name}.sam\n  samtools fastq -F 4 -0 ${reads.baseName}.contamination.fastq ${name}.sam\n\n  samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n  samtools index ${name}.contamination.sorted.bam\n  samtools idxstats  ${name}.contamination.sorted.bam > idxstats.tsv\n  \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_illumina": {
        "name_process": "minimap2_illumina",
        "string_process": "\nprocess minimap2_illumina {\n  label 'minimap2'\n\n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\"\n\n  input: \n    tuple val(name), path(reads)\n    path db\n    val mode\n\n  output:\n    tuple val(name), path ('idxstats.tsv'), emit: idxstats\n    tuple val(name), val('clean'), path('*clean.fastq'), emit: cleaned_reads\n    tuple val(name), val('contamination'), path('*contamination.fastq'), emit: contaminated_reads\n    path '*.contamination.sorted.bam*'\n\n  script:\n  if ( mode == 'paired' ) {\n    \"\"\"\n    minimap2 -ax sr -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads[0]} ${reads[1]}\n    \n    # Use samtools -F 2 to discard only reads mapped in proper pair:\n    samtools fastq -F 2 -1 ${reads[0].baseName}.clean.fastq -2 ${reads[1].baseName}.clean.fastq ${name}.sam\n    samtools fastq -f 2 -1 ${reads[0].baseName}.contamination.fastq -2 ${reads[1].baseName}.contamination.fastq ${name}.sam\n\n    samtools view -b -f 2 -F 2048 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n    samtools index ${name}.contamination.sorted.bam\n    samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n    \"\"\"\n  } else {\n    \"\"\"\n    minimap2 -ax sr -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads}\n    \n    samtools fastq -f 4 -0 ${reads.baseName}.clean.fastq ${name}.sam\n    samtools fastq -F 4 -0 ${reads.baseName}.contamination.fastq ${name}.sam\n\n    samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n    samtools index ${name}.contamination.sorted.bam\n    samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 41,
        "string_script": "  if ( mode == 'paired' ) {\n    \"\"\"\n    minimap2 -ax sr -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads[0]} ${reads[1]}\n    \n    # Use samtools -F 2 to discard only reads mapped in proper pair:\n    samtools fastq -F 2 -1 ${reads[0].baseName}.clean.fastq -2 ${reads[1].baseName}.clean.fastq ${name}.sam\n    samtools fastq -f 2 -1 ${reads[0].baseName}.contamination.fastq -2 ${reads[1].baseName}.contamination.fastq ${name}.sam\n\n    samtools view -b -f 2 -F 2048 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n    samtools index ${name}.contamination.sorted.bam\n    samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n    \"\"\"\n  } else {\n    \"\"\"\n    minimap2 -ax sr -N 5 --secondary=no -t ${task.cpus} -o ${name}.sam ${db} ${reads}\n    \n    samtools fastq -f 4 -0 ${reads.baseName}.clean.fastq ${name}.sam\n    samtools fastq -F 4 -0 ${reads.baseName}.contamination.fastq ${name}.sam\n\n    samtools view -b -F 2052 ${name}.sam | samtools sort -o ${name}.contamination.sorted.bam --threads ${task.cpus}\n    samtools index ${name}.contamination.sorted.bam\n    samtools idxstats ${name}.contamination.sorted.bam > idxstats.tsv\n    \"\"\"\n  }",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "db",
            "mode"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"*.contamination.sorted.bam*\""
        ],
        "when": "",
        "stub": ""
    },
    "rename_reads": {
        "name_process": "rename_reads",
        "string_process": "process rename_reads {\n  label 'smallTask'\n\n  input:\n  tuple val(name), path(reads)\n  val(mode)\n\n  output:\n  tuple val(name), path(\"R*.fastq\")\n\n  script:\n  if ( mode == 'paired' ) {\n    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > R1.fastq\n      else\n        sed 's/ /DECONTAMINATE/g' ${reads[0]} > R1.fastq\n      fi\n      if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > R2.fastq\n      else\n        sed 's/ /DECONTAMINATE/g' ${reads[1]} > R2.fastq\n      fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > R1.fastq\n        zcat ${reads[1]} > R2.fastq\n      else\n        mv ${reads[0]} R1.fastq\n        mv ${reads[1]} R2.fastq\n      fi\n    fi\n    \"\"\"\n  } else {  \n    \"\"\"\n    if [[ ${reads} =~ \\\\.gz\\$ ]]; then\n      zcat ${reads} | sed 's/ /DECONTAMINATE/g' > R.fastq\n    else\n      sed 's/ /DECONTAMINATE/g' ${reads} > R.fastq\n    fi\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 46,
        "string_script": "  if ( mode == 'paired' ) {\n    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > R1.fastq\n      else\n        sed 's/ /DECONTAMINATE/g' ${reads[0]} > R1.fastq\n      fi\n      if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > R2.fastq\n      else\n        sed 's/ /DECONTAMINATE/g' ${reads[1]} > R2.fastq\n      fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > R1.fastq\n        zcat ${reads[1]} > R2.fastq\n      else\n        mv ${reads[0]} R1.fastq\n        mv ${reads[1]} R2.fastq\n      fi\n    fi\n    \"\"\"\n  } else {  \n    \"\"\"\n    if [[ ${reads} =~ \\\\.gz\\$ ]]; then\n      zcat ${reads} | sed 's/ /DECONTAMINATE/g' > R.fastq\n    else\n      sed 's/ /DECONTAMINATE/g' ${reads} > R.fastq\n    fi\n    \"\"\"\n  }",
        "nb_lignes_script": 35,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads",
            "mode"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'"
        ],
        "when": "",
        "stub": ""
    },
    "compress_reads": {
        "name_process": "compress_reads",
        "string_process": "\nprocess compress_reads {\n  label 'basics'\n\n  publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"*.gz\"\n\n  input:\n  tuple val(name), val(type), path(reads)\n  val(mode)\n  val(tool)\n\n  output:\n  tuple val(name), val(type), path(\"${name}*.${type}.fastq.gz\")\n\n  script:\n  if ( mode == 'paired' ) {\n    \"\"\"\n    pigz -fc -p ${task.cpus} ${reads[0]} > ${name}_1.${type}.fastq.gz \n    pigz -fc -p ${task.cpus} ${reads[1]} > ${name}_2.${type}.fastq.gz\n    \"\"\"\n  } else {\n    \"\"\"\n    pigz -fc -p ${task.cpus} ${reads} > ${name}.${type}.fastq.gz\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 24,
        "string_script": "  if ( mode == 'paired' ) {\n    \"\"\"\n    pigz -fc -p ${task.cpus} ${reads[0]} > ${name}_1.${type}.fastq.gz \n    pigz -fc -p ${task.cpus} ${reads[1]} > ${name}_2.${type}.fastq.gz\n    \"\"\"\n  } else {\n    \"\"\"\n    pigz -fc -p ${task.cpus} ${reads} > ${name}.${type}.fastq.gz\n    \"\"\"\n  }",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "type",
            "reads",
            "mode",
            "tool"
        ],
        "nb_inputs": 5,
        "outputs": [
            "type"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'basics'",
            "publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"*.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "get_number_of_reads": {
        "name_process": "get_number_of_reads",
        "string_process": "\nprocess get_number_of_reads {\n  label 'smallTask'\n\n  input:\n  tuple val(name), path(reads)\n  val(mode)\n\n  output:\n  tuple val(name), env(TOTALREADS), emit: totalreads\n\n  script:\n  if ( mode == 'paired' ) {\n    \"\"\"\n    if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n      TOTALREADS_1=\\$(zcat ${reads[0]} | echo \\$((`wc -l`/4)))\n      TOTALREADS_2=\\$(zcat ${reads[1]} | echo \\$((`wc -l`/4)))\n    else\n      TOTALREADS_1=\\$(cat ${reads[0]} | echo \\$((`wc -l`/4)))\n      TOTALREADS_2=\\$(cat ${reads[1]} | echo \\$((`wc -l`/4)))\n    fi\n    TOTALREADS=\\$(( TOTALREADS_1+TOTALREADS_2 ))\n    \"\"\"\n  } else {\n    \"\"\"\n    if [[ ${reads} =~ \\\\.gz\\$ ]]; then\n      TOTALREADS=\\$(zcat ${reads} | echo \\$((`wc -l`/4)))\n    else\n      TOTALREADS=\\$(cat ${reads} | echo \\$((`wc -l`/4)))\n    fi\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 31,
        "string_script": "  if ( mode == 'paired' ) {\n    \"\"\"\n    if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n      TOTALREADS_1=\\$(zcat ${reads[0]} | echo \\$((`wc -l`/4)))\n      TOTALREADS_2=\\$(zcat ${reads[1]} | echo \\$((`wc -l`/4)))\n    else\n      TOTALREADS_1=\\$(cat ${reads[0]} | echo \\$((`wc -l`/4)))\n      TOTALREADS_2=\\$(cat ${reads[1]} | echo \\$((`wc -l`/4)))\n    fi\n    TOTALREADS=\\$(( TOTALREADS_1+TOTALREADS_2 ))\n    \"\"\"\n  } else {\n    \"\"\"\n    if [[ ${reads} =~ \\\\.gz\\$ ]]; then\n      TOTALREADS=\\$(zcat ${reads} | echo \\$((`wc -l`/4)))\n    else\n      TOTALREADS=\\$(cat ${reads} | echo \\$((`wc -l`/4)))\n    fi\n    \"\"\"\n  }",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads",
            "mode"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2Stats": {
        "name_process": "minimap2Stats",
        "string_process": "\nprocess minimap2Stats {\n  label 'smallTask'\n  \n  publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"stats.txt\" \n\n  input:\n  tuple val(name), path(idxstats), val (totalreads)\n\n  output:\n  tuple val(name), path ('stats.txt')\n  path(\"${name}_minimap2_stats.tsv\"), emit: tsv\n\n  script:\n  \"\"\"\n  MAPPEDSUM=\\$(awk -F '\\\\t' '{sum += \\$3} END {print sum}' idxstats.tsv)\n  UNPROMAPPEDSUM=\\$(awk -F '\\\\t' '/^[^*]/ {sum += \\$4} END {print sum}' idxstats.tsv)\n  PROPMAP=\\$((\\$MAPPEDSUM-\\$UNPROMAPPEDSUM))\n\n  MAP=\\$(awk -v map=\\$MAPPEDSUM -v unpromap=\\$UNPROMAPPEDSUM -v tot=${totalreads} 'BEGIN {perc=(map-unpromap)/tot*100; print map-unpromap \" (\"  perc \" %) reads were properly mapped; of these:\"}')\n\n  FA=\\$(awk -v tot=${totalreads} -F '\\\\t' '/^[^*]/ {propmap=\\$3-\\$4; if (propmap != 0) print \"\\\\t\\\\t\" propmap \" (\" propmap/tot*100  \"%) reads aligned to \" \\$1}' idxstats.tsv;)\n\n  touch stats.txt\n  cat <<EOF >> stats.txt\n  ${totalreads} reads in total; of these:\n  \\t\\$MAP\n  \\$FA\n  EOF\n\n  touch ${name}_minimap2_stats.tsv\n  cat <<EOF >> ${name}_minimap2_stats.tsv\n  Sample Name\\tTotal reads\\tMapped reads\n  ${name}\\t${totalreads}\\t\\$PROPMAP\n  EOF\n  \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "  \"\"\"\n  MAPPEDSUM=\\$(awk -F '\\\\t' '{sum += \\$3} END {print sum}' idxstats.tsv)\n  UNPROMAPPEDSUM=\\$(awk -F '\\\\t' '/^[^*]/ {sum += \\$4} END {print sum}' idxstats.tsv)\n  PROPMAP=\\$((\\$MAPPEDSUM-\\$UNPROMAPPEDSUM))\n\n  MAP=\\$(awk -v map=\\$MAPPEDSUM -v unpromap=\\$UNPROMAPPEDSUM -v tot=${totalreads} 'BEGIN {perc=(map-unpromap)/tot*100; print map-unpromap \" (\"  perc \" %) reads were properly mapped; of these:\"}')\n\n  FA=\\$(awk -v tot=${totalreads} -F '\\\\t' '/^[^*]/ {propmap=\\$3-\\$4; if (propmap != 0) print \"\\\\t\\\\t\" propmap \" (\" propmap/tot*100  \"%) reads aligned to \" \\$1}' idxstats.tsv;)\n\n  touch stats.txt\n  cat <<EOF >> stats.txt\n  ${totalreads} reads in total; of these:\n  \\t\\$MAP\n  \\$FA\n  EOF\n\n  touch ${name}_minimap2_stats.tsv\n  cat <<EOF >> ${name}_minimap2_stats.tsv\n  Sample Name\\tTotal reads\\tMapped reads\n  ${name}\\t${totalreads}\\t\\$PROPMAP\n  EOF\n  \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "MOFs",
            "NeoFuse",
            "SAMPLE"
        ],
        "tools_url": [
            "https://bio.tools/MOFs",
            "https://bio.tools/NeoFuse",
            "https://bio.tools/sample"
        ],
        "tools_dico": [
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            },
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            }
        ],
        "inputs": [
            "name",
            "totalreads",
            "idxstats"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'",
            "publishDir \"${params.output}/${name}/minimap2\", mode: 'copy', pattern: \"stats.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "bbdukStats": {
        "name_process": "bbdukStats",
        "string_process": "\nprocess bbdukStats {\n  label 'smallTask'\n\n  publishDir \"${params.output}/${name}/bbduk\", mode: 'copy', pattern: \"stats.txt\"\n\n  input:\n  tuple val(name), path (bbdukStats)\n\n  output:\n  tuple val(name), path ('stats.txt')\n  path(\"${name}_bbduk_stats.tsv\"), emit: tsv\n\n  script:\n  \"\"\"\n  TOTAL=\\$(grep '#Total' ${bbdukStats} | awk -F '\\\\t' '{print \\$2}')\n  MNUM=\\$(grep '#Matched' ${bbdukStats} | awk -F '\\\\t' '{print \\$2}')\n  MPER=\\$(grep '#Matched' ${bbdukStats} | awk -F '\\\\t' '{print \\$3}')\n\n  FA=\\$(awk -F '\\\\t' '/^[^#]/ {print \"\\\\t\\\\t\"\\$2\" (\"\\$3\") aligned to \"\\$1}' ${bbdukStats})\n\n  touch stats.txt\n  cat <<EOF >> stats.txt\n  \\$TOTAL reads in total; of these:\n  \\t\\$MNUM (\\$MPER) reads were properly mapped; of these:\n  \\$FA\n  EOF\n\n  touch ${name}_bbduk_stats.tsv\n  cat <<EOF >> ${name}_bbduk_stats.tsv\n  Sample Name\\tTotal reads\\tMapped reads\n  ${name}\\t\\$TOTAL\\t\\$MNUM\n  EOF\n  \"\"\"\n}",
        "nb_lignes_process": 33,
        "string_script": "  \"\"\"\n  TOTAL=\\$(grep '#Total' ${bbdukStats} | awk -F '\\\\t' '{print \\$2}')\n  MNUM=\\$(grep '#Matched' ${bbdukStats} | awk -F '\\\\t' '{print \\$2}')\n  MPER=\\$(grep '#Matched' ${bbdukStats} | awk -F '\\\\t' '{print \\$3}')\n\n  FA=\\$(awk -F '\\\\t' '/^[^#]/ {print \"\\\\t\\\\t\"\\$2\" (\"\\$3\") aligned to \"\\$1}' ${bbdukStats})\n\n  touch stats.txt\n  cat <<EOF >> stats.txt\n  \\$TOTAL reads in total; of these:\n  \\t\\$MNUM (\\$MPER) reads were properly mapped; of these:\n  \\$FA\n  EOF\n\n  touch ${name}_bbduk_stats.tsv\n  cat <<EOF >> ${name}_bbduk_stats.tsv\n  Sample Name\\tTotal reads\\tMapped reads\n  ${name}\\t\\$TOTAL\\t\\$MNUM\n  EOF\n  \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "MOFs",
            "NeoFuse",
            "SAMPLE"
        ],
        "tools_url": [
            "https://bio.tools/MOFs",
            "https://bio.tools/NeoFuse",
            "https://bio.tools/sample"
        ],
        "tools_dico": [
            {
                "name": "MOFs",
                "uri": "https://bio.tools/MOFs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Cheminformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3314",
                            "term": "Chemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemoinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2258",
                            "term": "Chemical informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Role of Molecular Modeling & Simulation in the Discovery and Deployment of Metal-Organic Frameworks for Gas Storage and Separation.\n\nWelcome to the Computation-Ready, Experimental (CoRE) Metal-Organic Frameworks Database!.\n\nHigh-throughput computational screening of metal-organic frameworks rely on the availability of disorder-free atomic coordinate files which can be used as input to simulation software packages.\n\nWe have created CoRE MOF database and its variants which contains almost all MOFs that have been reported in the literature. We expect the database to continue to grow so please check back for new updates!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'adsorption', 'MOFs adsorption-based'",
                "homepage": "http://gregchung.github.io/CoRE-MOFs/"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            },
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            }
        ],
        "inputs": [
            "name",
            "bbdukStats"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'",
            "publishDir \"${params.output}/${name}/bbduk\", mode: 'copy', pattern: \"stats.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "writeLog": {
        "name_process": "writeLog",
        "string_process": "\nprocess writeLog {\n  label 'smallTask'\n\n  publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"log.txt\"\n  \n  input:\n    val name\n    val tool\n    val reads\n    val db\n\n  output:\n    path 'log.txt'\n  \n  script:\n  \"\"\"\n  touch log.txt\n  cat <<EOF >> log.txt\n  Input reads:\\t${reads}\n  Contamination:\\t${db}\n  \n  Statistics summary:\\t${params.output}/${name}/${tool}/stats.txt\n  EOF\n  \"\"\"\n\n}",
        "nb_lignes_process": 25,
        "string_script": "  \"\"\"\n  touch log.txt\n  cat <<EOF >> log.txt\n  Input reads:\\t${reads}\n  Contamination:\\t${db}\n  \n  Statistics summary:\\t${params.output}/${name}/${tool}/stats.txt\n  EOF\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "wossinput",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/wossinput",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "name",
            "tool",
            "reads",
            "db"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'smallTask'",
            "publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"log.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "download_host": {
        "name_process": "download_host",
        "string_process": "process download_host {\n  label 'minimap2'\n\n  if (params.cloudProcess) {\n    publishDir \"${params.databases}/hosts\", mode: 'copy', pattern: \"*.fa.gz\" \n  }\n  else {\n    storeDir \"${params.databases}/hosts\"\n  }\n\n  input:\n  val host\n\n  output:\n  path \"${host}.fa.gz\"\n\n  script:\n  \"\"\"\n  if [ $host == 'hsa' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'mmu' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'cli' ]; then\n    wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/337/935/GCF_000337935.1_Cliv_1.0/GCF_000337935.1_Cliv_1.0_genomic.fna.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'csa' ]; then\n    wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/409/795/GCF_000409795.2_Chlorocebus_sabeus_1.1/GCF_000409795.2_Chlorocebus_sabeus_1.1_genomic.fna.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'gga' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/gallus_gallus/dna/Gallus_gallus.GRCg6a.dna.toplevel.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'eco' ]; then\n    wget ftp://ftp.ensemblgenomes.org/pub/release-45/bacteria//fasta/bacteria_90_collection/escherichia_coli_k_12/dna/Escherichia_coli_k_12.ASM80076v1.dna.toplevel.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "  \"\"\"\n  if [ $host == 'hsa' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'mmu' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'cli' ]; then\n    wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/337/935/GCF_000337935.1_Cliv_1.0/GCF_000337935.1_Cliv_1.0_genomic.fna.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'csa' ]; then\n    wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/409/795/GCF_000409795.2_Chlorocebus_sabeus_1.1/GCF_000409795.2_Chlorocebus_sabeus_1.1_genomic.fna.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'gga' ]; then\n    wget ftp://ftp.ensembl.org/pub/release-99/fasta/gallus_gallus/dna/Gallus_gallus.GRCg6a.dna.toplevel.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  if [ $host == 'eco' ]; then\n    wget ftp://ftp.ensemblgenomes.org/pub/release-45/bacteria//fasta/bacteria_90_collection/escherichia_coli_k_12/dna/Escherichia_coli_k_12.ASM80076v1.dna.toplevel.fa.gz\n    zcat *.gz | bgzip -@ ${task.cpus} -c > ${host}.fa.gz\n  fi\n  \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "host"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2' if (params.cloudProcess) { publishDir \"${params.databases}/hosts\", mode: 'copy', pattern: \"*.fa.gz\" } else { storeDir \"${params.databases}/hosts\" }"
        ],
        "when": "",
        "stub": ""
    },
    "check_own": {
        "name_process": "check_own",
        "string_process": "\nprocess check_own {\n  label 'minimap2'\n\n  input:\n  path fasta\n\n  output:\n  path '*.gz', includeInputs: true\n\n  script:\n  \"\"\"\n  # -L for following a symbolic link\n  if ! ( file -L $fasta | grep -q 'gzip compressed' ); then\n    sed -i -e '\\$a\\\\' ${fasta}\n    bgzip -@ ${task.cpus} < ${fasta} > ${fasta}.gz\n    # now $fasta'.gz'\n  else\n    mv ${fasta} ${fasta}.tmp\n    zcat ${fasta}.tmp | sed -e '\\$a\\\\' | bgzip -@ ${task.cpus} -c > ${fasta}.gz\n  fi\n  \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  # -L for following a symbolic link\n  if ! ( file -L $fasta | grep -q 'gzip compressed' ); then\n    sed -i -e '\\$a\\\\' ${fasta}\n    bgzip -@ ${task.cpus} < ${fasta} > ${fasta}.gz\n    # now $fasta'.gz'\n  else\n    mv ${fasta} ${fasta}.tmp\n    zcat ${fasta}.tmp | sed -e '\\$a\\\\' | bgzip -@ ${task.cpus} -c > ${fasta}.gz\n  fi\n  \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2'"
        ],
        "when": "",
        "stub": ""
    },
    "concat_contamination": {
        "name_process": "concat_contamination",
        "string_process": "\nprocess concat_contamination {\n  label 'minimap2'                             \n  label 'smallTask'                  \n  \n  publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.gz\"\n  publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.fai\"\n  publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.gz.gzi\"\n\n  input:\n  val name\n  val tool\n  path '*'\n\n  output:\n  path 'db.fa.gz', emit: fa\n  path 'db.fa.fai'\n  path 'db.fa.gz.gzi'\n  \n  script:\n  \"\"\"\n  cat *.gz > db.fa.gz\n  samtools faidx db.fa.gz\n  mv db.fa.gz.fai db.fa.fai\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  cat *.gz > db.fa.gz\n  samtools faidx db.fa.gz\n  mv db.fa.gz.fai db.fa.fai\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "tool"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'minimap2'",
            "label 'smallTask'",
            "publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.gz\"",
            "publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.fai\"",
            "publishDir \"${params.output}/${name}/${tool}\", mode: 'copy', pattern: \"db.fa.gz.gzi\""
        ],
        "when": "",
        "stub": ""
    },
    "bbduk": {
        "name_process": "bbduk",
        "string_process": "process bbduk {\n  label 'bbmap'\n  \n  input:\n  tuple val(name), path(reads)\n  path db\n  val mode\n\n  output:\n  val name, emit: name\n  tuple val(name), val('clean'), path('*clean.fastq'), emit: cleaned_reads\n  tuple val(name), val('contamination'), path('*contamination.fastq'), emit: contaminated_reads\n  tuple val(name), path('bbduk_stats.txt'), emit: stats\n\n  script:\n  if ( mode == 'paired' ) {\n    \"\"\"\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} stats=bbduk_stats.txt ordered=t k=${params.bbduk_kmer} in=${reads[0]} in2=${reads[1]} out=${reads[0].baseName}.clean.fastq out2=${reads[1].baseName}.clean.fastq outm=${reads[0].baseName}.contamination.fastq outm2=${reads[1].baseName}.contamination.fastq\n    \"\"\"\n  } else {\n    \"\"\"\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} stats=bbduk_stats.txt ordered=t k=${params.bbduk_kmer} in=${reads} out=${reads.baseName}.clean.fastq outm=${reads.baseName}.contamination.fastq\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 25,
        "string_script": "  if ( mode == 'paired' ) {\n    \"\"\"\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} stats=bbduk_stats.txt ordered=t k=${params.bbduk_kmer} in=${reads[0]} in2=${reads[1]} out=${reads[0].baseName}.clean.fastq out2=${reads[1].baseName}.clean.fastq outm=${reads[0].baseName}.contamination.fastq outm2=${reads[1].baseName}.contamination.fastq\n    \"\"\"\n  } else {\n    \"\"\"\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} stats=bbduk_stats.txt ordered=t k=${params.bbduk_kmer} in=${reads} out=${reads.baseName}.clean.fastq outm=${reads.baseName}.contamination.fastq\n    \"\"\"\n  }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads",
            "db",
            "mode"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__clean",
        "directive": [
            "label 'bbmap'"
        ],
        "when": "",
        "stub": ""
    }
}