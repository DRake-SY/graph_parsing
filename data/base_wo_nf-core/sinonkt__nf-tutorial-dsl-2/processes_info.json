{
    "MyFastQBam": {
        "name_process": "MyFastQBam",
        "string_process": "\nprocess MyFastQBam {\n\n  tag { chr }\n\n  input:\n  set sampleId, file(fastq), file(bam)\n  each chrPos\n             \n\n  script:\n  (chr, pos) = chrPos\n  println (chr)\n  println (pos)\n  \"\"\"\n  ls\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  (chr, pos) = chrPos\n  println (chr)\n  println (pos)\n  \"\"\"\n  ls\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastq",
            "bam",
            "sampleId",
            "chrPos"
        ],
        "nb_inputs": 4,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "sinonkt__nf-tutorial-dsl-2",
        "directive": [
            "tag { chr }"
        ],
        "when": "",
        "stub": ""
    },
    "Power2": {
        "name_process": "Power2",
        "string_process": "\nprocess Power2 {\n\n  tag { \"oat_${a}\" }\n\n  input: \n  val a\n\n  output: \n  path \"result.*.txt\"\n  val a\n\n  script:\n  \"\"\"\n  sleep 10\n  echo \"${a ** 2}\" > result.${a}.txt\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  sleep 10\n  echo \"${a ** 2}\" > result.${a}.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "a"
        ],
        "nb_inputs": 1,
        "outputs": [
            "a"
        ],
        "nb_outputs": 1,
        "name_workflow": "sinonkt__nf-tutorial-dsl-2",
        "directive": [
            "tag { \"oat_${a}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "Power3": {
        "name_process": "Power3",
        "string_process": "\nprocess Power3 {\n\n  tag { \"oat_${a}\" }\n\n  input: val a\n\n  output:\n  set file(\"result.txt\"), file(\".command*\")\n\n  script:\n  \"\"\"\n  echo \"${a ** 3}\" > result.txt\n  \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "  \"\"\"\n  echo \"${a ** 3}\" > result.txt\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "sinonkt__nf-tutorial-dsl-2",
        "directive": [
            "tag { \"oat_${a}\" } input: val a"
        ],
        "when": "",
        "stub": ""
    },
    "Sum": {
        "name_process": "Sum",
        "string_process": "\nprocess Sum {\n\n  input: \n    val xs\n\n  output:\n    val y, emit: y\n    val z, emit: z\n\n  exec:\n  y = xs.sum()\n  z = xs.sum() + 1\n}",
        "nb_lignes_process": 12,
        "string_script": "  y = xs.sum()\n  z = xs.sum() + 1",
        "nb_lignes_script": 1,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "xs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "sinonkt__nf-tutorial-dsl-2",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "Concat": {
        "name_process": "Concat",
        "string_process": "\nprocess Concat {\n\n  publishDir \"${outputPrefixPath(params, task)}/oat\"\n\n  input: \n    path results\n  \n  output:\n    path \"result.sum.txt\"\n\n  script:\n  \"\"\"\n  sleep 10\n  cat *.txt > result.sum.txt\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  sleep 10\n  cat *.txt > result.sum.txt\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "results"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "sinonkt__nf-tutorial-dsl-2",
        "directive": [
            "publishDir \"${outputPrefixPath(params, task)}/oat\""
        ],
        "when": "",
        "stub": ""
    }
}