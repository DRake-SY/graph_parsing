{
    "julia_hw": {
        "name_process": "julia_hw",
        "string_process": "\nprocess julia_hw{\n\ttag \"julia\"\n    input: \n\t\tval(check)\n\n    output: \n    \tval(message)\n\n    script:\n    message = \"\"\n    if(check == true){\n    message = \"\"\"julia ${workDir}/../modules/julia/julia_hw.jl\"\"\".execute().text.strip(\"\\n\")\n    log.info \"${message}\"\n\t}\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    message = \"\"\n    if(check == true){\n    message = \"\"\"julia ${workDir}/../modules/julia/julia_hw.jl\"\"\".execute().text.strip(\"\\n\")\n    log.info \"${message}\"\n\t}\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "check"
        ],
        "nb_inputs": 1,
        "outputs": [
            "message"
        ],
        "nb_outputs": 1,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [
            "tag \"julia\""
        ],
        "when": "",
        "stub": ""
    },
    "rust_hw": {
        "name_process": "rust_hw",
        "string_process": "\nprocess rust_hw{\n    output: val(message)\n    script:\n    compile_hello_rust()\n    message = say_hello_rust().strip(\"\\n\")\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 7,
        "string_script": "    compile_hello_rust()\n    message = say_hello_rust().strip(\"\\n\")\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cpp_hw": {
        "name_process": "cpp_hw",
        "string_process": "\nprocess cpp_hw{\n    output: val(message)\n    script:\n    compile_hello_cpp()\n    message = say_hello_cpp().strip(\"\\n\")\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 7,
        "string_script": "    compile_hello_cpp()\n    message = say_hello_cpp().strip(\"\\n\")\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "nextflow_hw": {
        "name_process": "nextflow_hw",
        "string_process": "\nprocess nextflow_hw{\n    output: val(message)\n    script:\n    message = \"hello word from nextflow!\"\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 6,
        "string_script": "    message = \"hello word from nextflow!\"\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "c_hw": {
        "name_process": "c_hw",
        "string_process": "\nprocess c_hw{\n    tag \"gcc\"\n\tinput: \n\t\tval(check)\n\n    output: \n    \tval(message)\n\n    script:\n\n    message = \"\"\n    if(check == true){\t\n    compile_hello_c()\n    message = \"\"\"${workDir}/../modules/c/c_hw\"\"\".execute().text.strip(\"\\n\")\n    log.info \"${message}\"\n\t}\n\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    message = \"\"\n    if(check == true){\t\n    compile_hello_c()\n    message = \"\"\"${workDir}/../modules/c/c_hw\"\"\".execute().text.strip(\"\\n\")\n    log.info \"${message}\"\n\t}\n\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "check"
        ],
        "nb_inputs": 1,
        "outputs": [
            "message"
        ],
        "nb_outputs": 1,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [
            "tag \"gcc\""
        ],
        "when": "",
        "stub": ""
    },
    "python_hw": {
        "name_process": "python_hw",
        "string_process": "\nprocess python_hw{\n    tag \"python\"\n\n    script:\n    \"\"\"\n    python ${baseDir}/bin/python_hw.py\n    \"\"\"\n}",
        "nb_lignes_process": 7,
        "string_script": "    \"\"\"\n    python ${baseDir}/bin/python_hw.py\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [
            "tag \"python\""
        ],
        "when": "",
        "stub": ""
    },
    "bash_hw": {
        "name_process": "bash_hw",
        "string_process": "\nprocess bash_hw{\n\ttag \"bash\"\n\tinput: \n\t\tval(check)\n\n    output: \n    \tval(message)\n\n    script:\n    message = \"\"\n    if(check == true){\n    message = \"\"\"bash ${workDir}/../modules/bash/bash_hw.sh\"\"\".execute().text.strip(\"\\n\")\n\tlog.info \"${message}\"\n\t}\n\n\t\"\"\"\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    message = \"\"\n    if(check == true){\n    message = \"\"\"bash ${workDir}/../modules/bash/bash_hw.sh\"\"\".execute().text.strip(\"\\n\")\n\tlog.info \"${message}\"\n\t}\n\n\t\"\"\"\n\t\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "check"
        ],
        "nb_inputs": 1,
        "outputs": [
            "message"
        ],
        "nb_outputs": 1,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [
            "tag \"bash\""
        ],
        "when": "",
        "stub": ""
    },
    "ruby_hw": {
        "name_process": "ruby_hw",
        "string_process": "\nprocess ruby_hw{\n    output: val(message)\n    script:\n    message = say_hello_ruby().strip(\"\\n\")\n    \"\"\"\n    \"\"\"\n}",
        "nb_lignes_process": 6,
        "string_script": "    message = say_hello_ruby().strip(\"\\n\")\n    \"\"\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "Mxrcon__helloword-nextflow",
        "directive": [],
        "when": "",
        "stub": ""
    }
}