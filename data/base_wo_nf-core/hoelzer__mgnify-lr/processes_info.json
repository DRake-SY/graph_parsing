{
    "get_host": {
        "name_process": "get_host",
        "string_process": "\nprocess get_host {\n  label 'basics'\n  if (params.cloudProcess) { \n      publishDir \"${params.databases}/hosts/${params.species}\", mode: 'copy', pattern: \"*.fa.gz\" \n  }\n  else { \n      storeDir \"${params.databases}/hosts/${params.species}\" \n  }  \n\n  output:\n      file(\"*.fa.gz\")\n\n  script:\n    \"\"\"\n    if [ ${params.species} == 'hsa' ]; then\n      wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    if [ ${params.species} == 'mmu' ]; then\n      wget ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    if [ ${params.species} == 'eco' ]; then\n      wget ftp://ftp.ensemblgenomes.org/pub/release-45/bacteria//fasta/bacteria_90_collection/escherichia_coli_k_12/dna/Escherichia_coli_k_12.ASM80076v1.dna.toplevel.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    if [ ${params.species} == 'hsa' ]; then\n      wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    if [ ${params.species} == 'mmu' ]; then\n      wget ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    if [ ${params.species} == 'eco' ]; then\n      wget ftp://ftp.ensemblgenomes.org/pub/release-45/bacteria//fasta/bacteria_90_collection/escherichia_coli_k_12/dna/Escherichia_coli_k_12.ASM80076v1.dna.toplevel.fa.gz\n      mv *.fa.gz ${params.species}.fa.gz\n    fi\n    \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'basics' if (params.cloudProcess) { publishDir \"${params.databases}/hosts/${params.species}\", mode: 'copy', pattern: \"*.fa.gz\" } else { storeDir \"${params.databases}/hosts/${params.species}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "nanoplot": {
        "name_process": "nanoplot",
        "string_process": "process nanoplot {\n    label 'nanoplot'\n      publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.html\"\n      publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*_read_quality.txt\"\n      publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*.png\"\n      publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*.pdf\"\n    input:\n      tuple val(name), file(reads)\n    output:\n      tuple val(name), file(\"*.html\"), file(\"*.png\"), file(\"*.pdf\"), file(\"${name}_read_quality.txt\") \n    script:\n      \"\"\"\n      NanoPlot -t ${task.cpus} --fastq ${reads} --title ${name} --color darkslategrey --N50 --plots hex --loglength -f png --store\n      NanoPlot -t ${task.cpus} --pickle NanoPlot-data.pickle --title ${name} --color darkslategrey --N50 --plots hex --loglength -f pdf\n      mv NanoPlot-report.html ${name}_read_quality_report.html\n      mv NanoStats.txt ${name}_read_quality.txt\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      NanoPlot -t ${task.cpus} --fastq ${reads} --title ${name} --color darkslategrey --N50 --plots hex --loglength -f png --store\n      NanoPlot -t ${task.cpus} --pickle NanoPlot-data.pickle --title ${name} --color darkslategrey --N50 --plots hex --loglength -f pdf\n      mv NanoPlot-report.html ${name}_read_quality_report.html\n      mv NanoStats.txt ${name}_read_quality.txt\n      \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'nanoplot'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.html\"",
            "publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*_read_quality.txt\"",
            "publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*.png\"",
            "publishDir \"${params.output}/${name}/readQCdir/\", mode: 'copy', pattern: \"*.pdf\""
        ],
        "when": "",
        "stub": ""
    },
    "diamond_download_db": {
        "name_process": "diamond_download_db",
        "string_process": "process diamond_download_db {\n        if (params.cloudProcess) { publishDir \"${params.databases}/diamond\", mode: 'copy', pattern: \"database_uniprot.dmnd\" }\n        else { storeDir 'nextflow-autodownload-databases/diamond' }  \n        label 'diamond' \n      output:\n        file(\"database_uniprot.dmnd\")\n      script:\n        \"\"\"\n        wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz\n        diamond makedb --in uniprot_sprot.fasta.gz -d database_uniprot\n        rm -f uniprot_sprot.fasta.gz\n        \"\"\"\n    }",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz\n        diamond makedb --in uniprot_sprot.fasta.gz -d database_uniprot\n        rm -f uniprot_sprot.fasta.gz\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'diamond'"
        ],
        "when": "",
        "stub": ""
    },
    "removeSmallReads": {
        "name_process": "removeSmallReads",
        "string_process": "process removeSmallReads {\n    label 'ubuntu'\n  input:\n    tuple val(name), file(reads) \n  output:\n\t  tuple val(name), file(\"${name}_filtered.fastq.gz\") \n  shell:\n    \"\"\"\n    case \"!{reads}\" in\n      *.fastq.gz ) \n        zcat !{reads} | paste - - - - | awk -F\"\\\\t\" 'length(\\$2)  >= !{params.length}' | sed 's/\\\\t/\\\\n/g' | gzip > \"!{name}_filtered.fastq.gz\"\n        ;;\n      *.fastq)\n        cat !{reads} | paste - - - - | awk -F\"\\\\t\" 'length(\\$2)  >= !{params.length}' | sed 's/\\\\t/\\\\n/g' | gzip > \"!{name}_filtered.fastq.gz\"\n        ;;\n    esac   \n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    case \"!{reads}\" in\n      *.fastq.gz ) \n        zcat !{reads} | paste - - - - | awk -F\"\\\\t\" 'length(\\$2)  >= !{params.length}' | sed 's/\\\\t/\\\\n/g' | gzip > \"!{name}_filtered.fastq.gz\"\n        ;;\n      *.fastq)\n        cat !{reads} | paste - - - - | awk -F\"\\\\t\" 'length(\\$2)  >= !{params.length}' | sed 's/\\\\t/\\\\n/g' | gzip > \"!{name}_filtered.fastq.gz\"\n        ;;\n    esac   \n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "CASE"
        ],
        "tools_url": [
            "https://bio.tools/CASE"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'ubuntu'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n        label 'samtools'  \n    input:\n        tuple val(name), path(bam)\n    output:\n        tuple val(name), path(\"${name}.sorted.bam\"), path(\"${name}.sorted.bam.bai\")\n    script:\n        \"\"\"\n        samtools sort -@ ${task.cpus} ${bam} > ${name}.sorted.bam\n        samtools index -@ ${task.cpus} ${name}.sorted.bam\n        \"\"\"\n  }",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        samtools sort -@ ${task.cpus} ${bam} > ${name}.sorted.bam\n        samtools index -@ ${task.cpus} ${name}.sorted.bam\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "bam"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'samtools'"
        ],
        "when": "",
        "stub": ""
    },
    "fastp": {
        "name_process": "fastp",
        "string_process": "process fastp {\n      publishDir \"${params.output}/${name}\", mode: 'copy', pattern: \"${name}.fastp.R*.fastq.gz\"\n      publishDir \"${params.output}/${name}\", mode: 'copy', pattern: \"${name}.qc.html\"\n      label 'fastp'\n    input:\n      tuple val(name), file(sread)\n    output:\n      tuple val(name), file(\"${name}.fastp.R*.fastq.gz\")\n      tuple val(name), file(\"${name}.qc.html\") \n    script:\n      \"\"\"\n      fastp -w ${task.cpus} --in1 ${sread[0]} --in2 ${sread[1]} --out1 \"${name}.fastp.R1.fastq.gz\" \\\n        --out2 \"${name}.fastp.R2.fastq.gz\" --json \"${name}.qc.json\" --html \"${name}.qc.html\" ${params.fastp_additional_params}\n      \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "      \"\"\"\n      fastp -w ${task.cpus} --in1 ${sread[0]} --in2 ${sread[1]} --out1 \"${name}.fastp.R1.fastq.gz\" \\\n        --out2 \"${name}.fastp.R2.fastq.gz\" --json \"${name}.qc.json\" --html \"${name}.qc.html\" ${params.fastp_additional_params}\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "name",
            "sread"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "publishDir \"${params.output}/${name}\", mode: 'copy', pattern: \"${name}.fastp.R*.fastq.gz\"",
            "publishDir \"${params.output}/${name}\", mode: 'copy', pattern: \"${name}.qc.html\"",
            "label 'fastp'"
        ],
        "when": "",
        "stub": ""
    },
    "diamond": {
        "name_process": "diamond",
        "string_process": "\nprocess diamond {\n      label 'diamond'\n    input:\n      tuple val(name), val(ASSEMBLY_STATUS), file(proteins)\n      file(database)\n    output:\n      tuple val(name), val(ASSEMBLY_STATUS), file(\"${name}.data\")\n    script:\n      \"\"\"\n      diamond blastp --threads ${task.cpus} --max-target-seqs 1 --db ${database} \\\n      --query ${proteins} --outfmt 6 qlen slen --out ${name}.data\n      \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "      \"\"\"\n      diamond blastp --threads ${task.cpus} --max-target-seqs 1 --db ${database} \\\n      --query ${proteins} --outfmt 6 qlen slen --out ${name}.data\n      \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "name",
            "ASSEMBLY_STATUS",
            "proteins",
            "database"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ASSEMBLY_STATUS"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'diamond'"
        ],
        "when": "",
        "stub": ""
    },
    "ena_manifest": {
        "name_process": "ena_manifest",
        "string_process": "process ena_manifest {\n    label 'basics'\n    publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"manifest.txt\"\n    \n    input:\n    tuple val(name), file(assembly)\n    tuple val(name), file(flye_log)\n    tuple val(name), file(genome_size)\n    \n    output:\n    file(\"manifest.txt\")\n    \n    shell:\n    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    SIZE=\\$(cat !{genome_size})\n    COVERAGE=\\$(grep 'Mean coverage' !{flye_log} | awk '{print \\$3}')\n\n    FLYE_VERSION=2.5\n    RACON_VERSION=1.4.10\n    MEDAKA_VERSION=0.10.0\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch manifest.txt\n    cat <<EOF >> manifest.txt\nSTUDY   \\${STUDY}_${workflow.scriptId}\nSAMPLE  \\${SAMPLE}\nRUN_REF \\${RUN} \nASSEMBLYNAME    \\${RUN}_\\${MD5}\nASSEMBLY_TYPE   primary metagenome \nCOVERAGE        \\${COVERAGE}\nPROGRAM         ${params.assemblerLong} v\\${FLYE_VERSION} \nPLATFORM        Oxford Nanopore Technologies MinION \nFASTA           ${params.output}/${name}/assembly/${assembly}\nDESCRIPTION     Reads < 500 nt removed prior assembly. Draft flye assembly polished with racon v\\${RACON_VERSION} and medaka v\\${MEDAKA_VERSION} (model: ${params.model}).\nEOF\n    \"\"\"\n}",
        "nb_lignes_process": 39,
        "string_script": "    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    SIZE=\\$(cat !{genome_size})\n    COVERAGE=\\$(grep 'Mean coverage' !{flye_log} | awk '{print \\$3}')\n\n    FLYE_VERSION=2.5\n    RACON_VERSION=1.4.10\n    MEDAKA_VERSION=0.10.0\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch manifest.txt\n    cat <<EOF >> manifest.txt\nSTUDY   \\${STUDY}_${workflow.scriptId}\nSAMPLE  \\${SAMPLE}\nRUN_REF \\${RUN} \nASSEMBLYNAME    \\${RUN}_\\${MD5}\nASSEMBLY_TYPE   primary metagenome \nCOVERAGE        \\${COVERAGE}\nPROGRAM         ${params.assemblerLong} v\\${FLYE_VERSION} \nPLATFORM        Oxford Nanopore Technologies MinION \nFASTA           ${params.output}/${name}/assembly/${assembly}\nDESCRIPTION     Reads < 500 nt removed prior assembly. Draft flye assembly polished with racon v\\${RACON_VERSION} and medaka v\\${MEDAKA_VERSION} (model: ${params.model}).\nEOF\n    \"\"\"",
        "nb_lignes_script": 26,
        "language_script": "bash",
        "tools": [
            "studyStrap",
            "SAMPLE",
            "coveragegff",
            "R2 platform",
            "FASTA",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/studyStrap",
            "https://bio.tools/sample",
            "https://bio.tools/coveragegff",
            "https://bio.tools/r2_platform",
            "https://bio.tools/fasta",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "studyStrap",
                "uri": "https://bio.tools/studyStrap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Human biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Humans"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Covariate-Profile Similarity Weighting and Bagging Studies with the Study Strap.\n\nPrediction settings with multiple studies have become increasingly common. Ensembling models trained on individual studies has been shown to improve replicability in new studies. Motivated by a groundbreaking new technology in human neuroscience, we introduce two generalizations of multi-study ensemble predictions. First, while existing methods weight ensemble elements by cross-study prediction performance, we extend weighting schemes to also incorporate covariate similarity between training data and target validation studies. Second, we introduce a hierarchical resampling scheme to generate pseudo-study replicates (\u201cstudy straps\u201d) and ensemble classifiers trained on these rather than the original studies themselves. We demonstrate analytically that existing methods are special cases",
                "homepage": "https://github.com/gloewing/studyStrap"
            },
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            },
            {
                "name": "coveragegff",
                "uri": "https://bio.tools/coveragegff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Computes reads coverage form a \"nbElements\" tag and writes the calculated coverage in a gff3 out file.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            },
            {
                "name": "R2 platform",
                "uri": "https://bio.tools/r2_platform",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The R2 platform is an online genomics analysis tool which can analyze a large collection of public data, but also allows shielded analysis of your own microarray dataset. freely accessible and intended to be used by biologists, even those with little or no bioinformatics training.",
                "homepage": "http://r2.amc.nl"
            },
            {
                "name": "FASTA",
                "uri": "https://bio.tools/fasta",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "The FASTA programs find regions of local or global similarity between protein or DNA sequences, either by searching protein or DNA databases, or by identifying local duplications within a sequence. Like BLAST, FASTA can be used to infer functional and evolutionary relationships between sequences as well as help identify members of gene families.",
                "homepage": "http://fasta.bioch.virginia.edu/"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "name",
            "assembly",
            "name",
            "flye_log",
            "name",
            "genome_size"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'basics'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"manifest.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "ena_manifest_hybrid": {
        "name_process": "ena_manifest_hybrid",
        "string_process": "\nprocess ena_manifest_hybrid {\n    label 'basics'\n    publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"manifest.txt\"\n    \n    input:\n    tuple val(name), file(assembly)\n    \n    output:\n    file(\"manifest.txt\")\n    \n    shell:\n    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    COVERAGE=XXX\n\n    SPADES_VERSION=3.13.1\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch manifest.txt\n    cat <<EOF >> manifest.txt\nSTUDY   \\${STUDY}_${workflow.scriptId}\nSAMPLE  \\${SAMPLE}\nRUN_REF \\${RUN} \nASSEMBLYNAME    \\$( echo \\${RUN} | sed 's/,/_/g')_\\${MD5}\nASSEMBLY_TYPE   primary metagenome \nCOVERAGE        \\${COVERAGE}\nPROGRAM         ${params.assemblerHybrid} v\\${SPADES_VERSION} \nPLATFORM        Oxford Nanopore Technologies MinION, Illumina MiSeq\nFASTA           ${params.output}/${name}/assembly/${assembly}\nDESCRIPTION     Reads were quality controlled with fastp prior assembly. Assembly done with SPAdes v\\${SPADES_VERSION}.\nEOF\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    COVERAGE=XXX\n\n    SPADES_VERSION=3.13.1\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch manifest.txt\n    cat <<EOF >> manifest.txt\nSTUDY   \\${STUDY}_${workflow.scriptId}\nSAMPLE  \\${SAMPLE}\nRUN_REF \\${RUN} \nASSEMBLYNAME    \\$( echo \\${RUN} | sed 's/,/_/g')_\\${MD5}\nASSEMBLY_TYPE   primary metagenome \nCOVERAGE        \\${COVERAGE}\nPROGRAM         ${params.assemblerHybrid} v\\${SPADES_VERSION} \nPLATFORM        Oxford Nanopore Technologies MinION, Illumina MiSeq\nFASTA           ${params.output}/${name}/assembly/${assembly}\nDESCRIPTION     Reads were quality controlled with fastp prior assembly. Assembly done with SPAdes v\\${SPADES_VERSION}.\nEOF\n    \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "studyStrap",
            "SAMPLE",
            "coveragegff",
            "R2 platform",
            "FASTA",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/studyStrap",
            "https://bio.tools/sample",
            "https://bio.tools/coveragegff",
            "https://bio.tools/r2_platform",
            "https://bio.tools/fasta",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "studyStrap",
                "uri": "https://bio.tools/studyStrap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Human biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3474",
                            "term": "Machine learning"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2815",
                            "term": "Humans"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Covariate-Profile Similarity Weighting and Bagging Studies with the Study Strap.\n\nPrediction settings with multiple studies have become increasingly common. Ensembling models trained on individual studies has been shown to improve replicability in new studies. Motivated by a groundbreaking new technology in human neuroscience, we introduce two generalizations of multi-study ensemble predictions. First, while existing methods weight ensemble elements by cross-study prediction performance, we extend weighting schemes to also incorporate covariate similarity between training data and target validation studies. Second, we introduce a hierarchical resampling scheme to generate pseudo-study replicates (\u201cstudy straps\u201d) and ensemble classifiers trained on these rather than the original studies themselves. We demonstrate analytically that existing methods are special cases",
                "homepage": "https://github.com/gloewing/studyStrap"
            },
            {
                "name": "SAMPLE",
                "uri": "https://bio.tools/sample",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Linkage mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Functional mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic cartography"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0282",
                                    "term": "Genetic map generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The tool is designed to identify regions that are linked to a recessive disease by analysing genotype data from the parents and unaffected sibs of affected individuals. Since this analysis does not use data from affected patients, it is suited to the identification of lethal recessive genes, when the patients may have died before DNA samples could be obtained.",
                "homepage": "http://dna.leeds.ac.uk/sample/"
            },
            {
                "name": "coveragegff",
                "uri": "https://bio.tools/coveragegff",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Computes reads coverage form a \"nbElements\" tag and writes the calculated coverage in a gff3 out file.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            },
            {
                "name": "R2 platform",
                "uri": "https://bio.tools/r2_platform",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The R2 platform is an online genomics analysis tool which can analyze a large collection of public data, but also allows shielded analysis of your own microarray dataset. freely accessible and intended to be used by biologists, even those with little or no bioinformatics training.",
                "homepage": "http://r2.amc.nl"
            },
            {
                "name": "FASTA",
                "uri": "https://bio.tools/fasta",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "The FASTA programs find regions of local or global similarity between protein or DNA sequences, either by searching protein or DNA databases, or by identifying local duplications within a sequence. Like BLAST, FASTA can be used to infer functional and evolutionary relationships between sequences as well as help identify members of gene families.",
                "homepage": "http://fasta.bioch.virginia.edu/"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'basics'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"manifest.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "medaka": {
        "name_process": "medaka",
        "string_process": "process medaka {\n  label 'medaka'\n  publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_medaka.fasta\"\n\n      input:\n        tuple val(name), file(read), file(consensus) \n\n      output:\n  \t    tuple val(name), file(\"${name}_medaka.fasta\") \n\n      script:\n        \"\"\"\n      \tmedaka_consensus -i ${read} -d ${consensus} -o polished -t ${task.cpus} -m ${params.model}\n        mv polished/consensus.fasta ${name}_medaka.fasta\n      \t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n      \tmedaka_consensus -i ${read} -d ${consensus} -o polished -t ${task.cpus} -m ${params.model}\n        mv polished/consensus.fasta ${name}_medaka.fasta\n      \t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "read",
            "consensus"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'medaka'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_medaka.fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "bwa": {
        "name_process": "bwa",
        "string_process": "\nprocess bwa {\n    label \"bwa\"\n    input:\n        tuple val(name), path(reads), path(fasta)\n    output:\n        tuple val(name), path(\"${name}.bam\")\n    script:\n        \"\"\"\n        bwa index ${fasta}\n        bwa mem -t ${task.cpus} ${fasta} ${reads[0]} ${reads[1]} | samtools view -bS - > ${name}.bam\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        \"\"\"\n        bwa index ${fasta}\n        bwa mem -t ${task.cpus} ${fasta} ${reads[0]} ${reads[1]} | samtools view -bS - > ${name}.bam\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "BWA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bwa",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "fasta"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label \"bwa\""
        ],
        "when": "",
        "stub": ""
    },
    "ena_project_xml": {
        "name_process": "ena_project_xml",
        "string_process": "process ena_project_xml {\n    label 'basics'\n    publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.xml\"\n    \n    input:\n    tuple val(name), file(assembly)\n    tuple val(name), file(flye_log)\n    tuple val(name), file(genome_size)\n    \n    output:\n    file(\"*.xml\")\n    \n    shell:\n    date = Date().format( 'yyyy-MM-dd' )\n    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    SIZE=\\$(cat !{genome_size})\n    COVERAGE=\\$(grep 'Mean coverage' !{flye_log} | awk '{print \\$3}')\n\n    FLYE_VERSION=2.5\n    RACON_VERSION=1.4.10\n    MEDAKA_VERSION=0.10.0\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch project.xml\n    cat <<EOF >> project.xml\n<PROJECT_SET xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <PROJECT alias=\"\\${STUDY}_${workflow.scriptId}\">\n        <TITLE>Metagenomics assembly of study: \\${STUDY}, sample: \\${SAMPLE}, run: \\${RUN}.</TITLE>\n        <DESCRIPTION>This assembly was derived from the Oxford Nanopore Technologies MinION data set \\${RUN} and was assembled with ${params.assemblerLong} (v\\${FLYE_VERSION}) using the --meta and --plasmids options and an estimated genome size of \\${SIZE}. Before assembly, reads smaller 500 nt were filtered and the draft flye assembly was polished by one round of racon (v\\$RACON_VERSION) and medaka (v\\$MEDAKA_VERSION) using the ${params.model} model. </DESCRIPTION>\n        <SUBMISSION_PROJECT>\n            <SEQUENCING_PROJECT/>\n         </SUBMISSION_PROJECT>\n         <PROJECT_LINKS>\n            <PROJECT_LINK>\n                <XREF_LINK>\n                    <DB></DB>\n                    <ID></ID>\n                </XREF_LINK>\n            </PROJECT_LINK>\n        </PROJECT_LINKS>\n        <PROJECT_ATTRIBUTES>\n            <PROJECT_ATTRIBUTE>\n                <TAG>new_study_type</TAG>\n                <VALUE>Metagenomic assembly</VALUE>\n            </PROJECT_ATTRIBUTE>\n        </PROJECT_ATTRIBUTES>\n    </PROJECT>\n</PROJECT_SET>\nEOF\n\n    touch submission.xml\n    cat <<EOF >> submission.xml\n<SUBMISSION>\n   <ACTIONS>\n      <ACTION>\n         <ADD/>\n      </ACTION>\n      <ACTION>\n          <HOLD HoldUntilDate=\"${date}\"/>\n       </ACTION>\n   </ACTIONS>\n</SUBMISSION>\nEOF\n    \"\"\"\n}",
        "nb_lignes_process": 67,
        "string_script": "    date = Date().format( 'yyyy-MM-dd' )\n    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    SIZE=\\$(cat !{genome_size})\n    COVERAGE=\\$(grep 'Mean coverage' !{flye_log} | awk '{print \\$3}')\n\n    FLYE_VERSION=2.5\n    RACON_VERSION=1.4.10\n    MEDAKA_VERSION=0.10.0\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch project.xml\n    cat <<EOF >> project.xml\n<PROJECT_SET xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <PROJECT alias=\"\\${STUDY}_${workflow.scriptId}\">\n        <TITLE>Metagenomics assembly of study: \\${STUDY}, sample: \\${SAMPLE}, run: \\${RUN}.</TITLE>\n        <DESCRIPTION>This assembly was derived from the Oxford Nanopore Technologies MinION data set \\${RUN} and was assembled with ${params.assemblerLong} (v\\${FLYE_VERSION}) using the --meta and --plasmids options and an estimated genome size of \\${SIZE}. Before assembly, reads smaller 500 nt were filtered and the draft flye assembly was polished by one round of racon (v\\$RACON_VERSION) and medaka (v\\$MEDAKA_VERSION) using the ${params.model} model. </DESCRIPTION>\n        <SUBMISSION_PROJECT>\n            <SEQUENCING_PROJECT/>\n         </SUBMISSION_PROJECT>\n         <PROJECT_LINKS>\n            <PROJECT_LINK>\n                <XREF_LINK>\n                    <DB></DB>\n                    <ID></ID>\n                </XREF_LINK>\n            </PROJECT_LINK>\n        </PROJECT_LINKS>\n        <PROJECT_ATTRIBUTES>\n            <PROJECT_ATTRIBUTE>\n                <TAG>new_study_type</TAG>\n                <VALUE>Metagenomic assembly</VALUE>\n            </PROJECT_ATTRIBUTE>\n        </PROJECT_ATTRIBUTES>\n    </PROJECT>\n</PROJECT_SET>\nEOF\n\n    touch submission.xml\n    cat <<EOF >> submission.xml\n<SUBMISSION>\n   <ACTIONS>\n      <ACTION>\n         <ADD/>\n      </ACTION>\n      <ACTION>\n          <HOLD HoldUntilDate=\"${date}\"/>\n       </ACTION>\n   </ACTIONS>\n</SUBMISSION>\nEOF\n    \"\"\"",
        "nb_lignes_script": 54,
        "language_script": "bash",
        "tools": [
            "datelife",
            "themetagenomics",
            "MetHis",
            "ODB",
            "MID",
            "TAG",
            "project",
            "NeoFuse",
            "ACTION",
            "GEOsubmission"
        ],
        "tools_url": [
            "https://bio.tools/datelife",
            "https://bio.tools/themetagenomics",
            "https://bio.tools/MetHis",
            "https://bio.tools/odb",
            "https://bio.tools/mid",
            "https://bio.tools/tag",
            "https://bio.tools/project",
            "https://bio.tools/NeoFuse",
            "https://bio.tools/action",
            "https://bio.tools/geosubmission"
        ],
        "tools_dico": [
            {
                "name": "datelife",
                "uri": "https://bio.tools/datelife",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature and language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Language"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3068",
                            "term": "Literature"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3478",
                                    "term": "Phylogenetic tree reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Leveraging databases and analytical tools to reveal the dated Tree of Life.\n\nR package containing datelife's core functionality.\n\nDashboard \u22c5 phylotastic/datelife.\n\nGet a phylogenetic tree with branch lengths proportional to geologic time (aka a chronogram) of any two or more lineages of interest to you: use this R package or go to www.datelife.org to make a query of chronograms available for your lineages in the Open Tree of Life\u2019s tree store.\n\nWelcome to the DateLife project.\n\nAn R package, datelife for doing the calculations.\n\nCode coverage done right",
                "homepage": "http://www.datelife.org/"
            },
            {
                "name": "themetagenomics",
                "uri": "https://bio.tools/themetagenomics",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Microbial ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Environmental microbiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Exploring thematic structure and predicted functionality of 16S rRNA amplicon data.\n\nthemetagenomics provides functions to explore topics generated from 16S rRNA sequencing information on both the abundance and functional levels. It also provides an R implementation of PICRUSt and wraps Tax4fun, giving users a choice for their functional prediction strategy",
                "homepage": "https://cran.r-project.org/package=themetagenomics"
            },
            {
                "name": "MetHis",
                "uri": "https://bio.tools/MetHis",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Complex genetic admixture histories reconstructed with Approximate Bayesian Computations | MetHis is a population genetics forward simulation tool designed to simulate arbitrarily complex admixture histories between two populations",
                "homepage": "https://github.com/romain-laurent/MetHis"
            },
            {
                "name": "ODB",
                "uri": "https://bio.tools/odb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0114",
                            "term": "Gene structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0114",
                            "term": "Gene features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0435",
                                    "term": "Operon prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0579",
                                    "term": "Operon drawing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer design"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0579",
                                    "term": "Operon rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "Primer design"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Contains all known and conserved operons in completely sequenced genomes.",
                "homepage": "http://operondb.jp/"
            },
            {
                "name": "MID",
                "uri": "https://bio.tools/mid",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "MID (Micro-Inversion Detector) is a tool to detect microinversions (MIs) by mapping initially unmapped short reads back onto reference genome sequence (i.e. human genome assebly hg19).",
                "homepage": "http://cqb.pku.edu.cn/ZhuLab/MID/index.html"
            },
            {
                "name": "TAG",
                "uri": "https://bio.tools/tag",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for metatranscriptome assembly using de Bruijn graph of matched metagenome as the reference.",
                "homepage": "http://omics.informatics.indiana.edu/TAG/"
            },
            {
                "name": "project",
                "uri": "https://bio.tools/project",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "project is a program that projects genomic features onto their sequences. Please contact Sarah Djebali (sarah dot djebali at crg dot es for any question).",
                "homepage": "http://big.crg.cat/services/project"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            },
            {
                "name": "ACTION",
                "uri": "https://bio.tools/action",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1781",
                                    "term": "Gene regulatory network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3112",
                                "term": "Gene expression matrix"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2600",
                                "term": "Pathway or network"
                            }
                        ]
                    }
                ],
                "description": "A method for inferring the functional identity of cells from their transcriptional profile, classifying them based on their dominant function, and reconstructing regulatory networks that are responsible for mediating their identity.",
                "homepage": "http://compbio.mit.edu/ACTION/"
            },
            {
                "name": "GEOsubmission",
                "uri": "https://bio.tools/geosubmission",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Helps to easily submit a microarray dataset and the associated sample information to GEO by preparing a single file for upload (direct deposit).",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GEOsubmission.html"
            }
        ],
        "inputs": [
            "name",
            "assembly",
            "name",
            "flye_log",
            "name",
            "genome_size"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'basics'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.xml\""
        ],
        "when": "",
        "stub": ""
    },
    "ena_project_xml_hybrid": {
        "name_process": "ena_project_xml_hybrid",
        "string_process": "\nprocess ena_project_xml_hybrid {\n    label 'basics'\n    publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.xml\"\n    \n    input:\n    tuple val(name), file(assembly)\n    \n    output:\n    file(\"*.xml\")\n    \n    shell:\n                                          \n    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    COVERAGE=XXXX\n\n    SPADES_VERSION=3.13.1\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch project.xml\n    cat <<EOF >> project.xml\n<PROJECT_SET xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <PROJECT alias=\"\\${STUDY}_${workflow.scriptId}\">\n        <TITLE>Metagenomics assembly of study: \\${STUDY}, sample: \\${SAMPLE}, run: \\${RUN}.</TITLE>\n        <DESCRIPTION>This assembly was derived from hybrid data (Illumina, Oxford Nanopore Technologies MinION) data sets \\${RUN} and was assembled with ${params.assemblerHybrid} (v\\${SPADES_VERSION}) using the --meta and --nano options. Before assembly reads were filtered by fastp with default parameters.</DESCRIPTION>\n        <SUBMISSION_PROJECT>\n            <SEQUENCING_PROJECT/>\n         </SUBMISSION_PROJECT>\n         <PROJECT_LINKS>\n            <PROJECT_LINK>\n                <XREF_LINK>\n                    <DB></DB>\n                    <ID></ID>\n                </XREF_LINK>\n            </PROJECT_LINK>\n        </PROJECT_LINKS>\n        <PROJECT_ATTRIBUTES>\n            <PROJECT_ATTRIBUTE>\n                <TAG>new_study_type</TAG>\n                <VALUE>Metagenomic assembly</VALUE>\n            </PROJECT_ATTRIBUTE>\n        </PROJECT_ATTRIBUTES>\n    </PROJECT>\n</PROJECT_SET>\nEOF\n\n    touch submission.xml\n    cat <<EOF >> submission.xml\n<SUBMISSION>\n   <ACTIONS>\n      <ACTION>\n         <ADD/>\n      </ACTION>\n      <ACTION>\n          <HOLD HoldUntilDate=\"YYYY-MM-DD\"/>\n       </ACTION>\n   </ACTIONS>\n</SUBMISSION>\nEOF\n    \"\"\"\n}",
        "nb_lignes_process": 63,
        "string_script": "    \"\"\"\n    MD5=\\$(md5sum ${assembly} | awk '{print \\$1}')\n    COVERAGE=XXXX\n\n    SPADES_VERSION=3.13.1\n\n    STUDY=${params.study}\n    SAMPLE=${params.sample}\n    RUN=${params.run}\n\n    touch project.xml\n    cat <<EOF >> project.xml\n<PROJECT_SET xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <PROJECT alias=\"\\${STUDY}_${workflow.scriptId}\">\n        <TITLE>Metagenomics assembly of study: \\${STUDY}, sample: \\${SAMPLE}, run: \\${RUN}.</TITLE>\n        <DESCRIPTION>This assembly was derived from hybrid data (Illumina, Oxford Nanopore Technologies MinION) data sets \\${RUN} and was assembled with ${params.assemblerHybrid} (v\\${SPADES_VERSION}) using the --meta and --nano options. Before assembly reads were filtered by fastp with default parameters.</DESCRIPTION>\n        <SUBMISSION_PROJECT>\n            <SEQUENCING_PROJECT/>\n         </SUBMISSION_PROJECT>\n         <PROJECT_LINKS>\n            <PROJECT_LINK>\n                <XREF_LINK>\n                    <DB></DB>\n                    <ID></ID>\n                </XREF_LINK>\n            </PROJECT_LINK>\n        </PROJECT_LINKS>\n        <PROJECT_ATTRIBUTES>\n            <PROJECT_ATTRIBUTE>\n                <TAG>new_study_type</TAG>\n                <VALUE>Metagenomic assembly</VALUE>\n            </PROJECT_ATTRIBUTE>\n        </PROJECT_ATTRIBUTES>\n    </PROJECT>\n</PROJECT_SET>\nEOF\n\n    touch submission.xml\n    cat <<EOF >> submission.xml\n<SUBMISSION>\n   <ACTIONS>\n      <ACTION>\n         <ADD/>\n      </ACTION>\n      <ACTION>\n          <HOLD HoldUntilDate=\"YYYY-MM-DD\"/>\n       </ACTION>\n   </ACTIONS>\n</SUBMISSION>\nEOF\n    \"\"\"",
        "nb_lignes_script": 50,
        "language_script": "bash",
        "tools": [
            "themetagenomics",
            "MetHis",
            "ODB",
            "MID",
            "TAG",
            "project",
            "NeoFuse",
            "ACTION",
            "GEOsubmission"
        ],
        "tools_url": [
            "https://bio.tools/themetagenomics",
            "https://bio.tools/MetHis",
            "https://bio.tools/odb",
            "https://bio.tools/mid",
            "https://bio.tools/tag",
            "https://bio.tools/project",
            "https://bio.tools/NeoFuse",
            "https://bio.tools/action",
            "https://bio.tools/geosubmission"
        ],
        "tools_dico": [
            {
                "name": "themetagenomics",
                "uri": "https://bio.tools/themetagenomics",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Microbial ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3697",
                            "term": "Environmental microbiology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene finding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2454",
                                    "term": "Gene calling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Exploring thematic structure and predicted functionality of 16S rRNA amplicon data.\n\nthemetagenomics provides functions to explore topics generated from 16S rRNA sequencing information on both the abundance and functional levels. It also provides an R implementation of PICRUSt and wraps Tax4fun, giving users a choice for their functional prediction strategy",
                "homepage": "https://cran.r-project.org/package=themetagenomics"
            },
            {
                "name": "MetHis",
                "uri": "https://bio.tools/MetHis",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2885",
                            "term": "DNA polymorphism"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Essential dynamics"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype map generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0487",
                                    "term": "Haplotype inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "PCA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "Principal modes"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3891",
                                    "term": "ED"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Complex genetic admixture histories reconstructed with Approximate Bayesian Computations | MetHis is a population genetics forward simulation tool designed to simulate arbitrarily complex admixture histories between two populations",
                "homepage": "https://github.com/romain-laurent/MetHis"
            },
            {
                "name": "ODB",
                "uri": "https://bio.tools/odb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0114",
                            "term": "Gene structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0114",
                            "term": "Gene features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3489",
                            "term": "Database administration"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0435",
                                    "term": "Operon prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0579",
                                    "term": "Operon drawing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer design"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0579",
                                    "term": "Operon rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "Primer design"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Contains all known and conserved operons in completely sequenced genomes.",
                "homepage": "http://operondb.jp/"
            },
            {
                "name": "MID",
                "uri": "https://bio.tools/mid",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "MID (Micro-Inversion Detector) is a tool to detect microinversions (MIs) by mapping initially unmapped short reads back onto reference genome sequence (i.e. human genome assebly hg19).",
                "homepage": "http://cqb.pku.edu.cn/ZhuLab/MID/index.html"
            },
            {
                "name": "TAG",
                "uri": "https://bio.tools/tag",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for metatranscriptome assembly using de Bruijn graph of matched metagenome as the reference.",
                "homepage": "http://omics.informatics.indiana.edu/TAG/"
            },
            {
                "name": "project",
                "uri": "https://bio.tools/project",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "project is a program that projects genomic features onto their sequences. Please contact Sarah Djebali (sarah dot djebali at crg dot es for any question).",
                "homepage": "http://big.crg.cat/services/project"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            },
            {
                "name": "ACTION",
                "uri": "https://bio.tools/action",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_1781",
                                    "term": "Gene regulatory network analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3112",
                                "term": "Gene expression matrix"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2600",
                                "term": "Pathway or network"
                            }
                        ]
                    }
                ],
                "description": "A method for inferring the functional identity of cells from their transcriptional profile, classifying them based on their dominant function, and reconstructing regulatory networks that are responsible for mediating their identity.",
                "homepage": "http://compbio.mit.edu/ACTION/"
            },
            {
                "name": "GEOsubmission",
                "uri": "https://bio.tools/geosubmission",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarray experiment"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3518",
                            "term": "Microarrays"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Helps to easily submit a microarray dataset and the associated sample information to GEO by preparing a single file for upload (direct deposit).",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/GEOsubmission.html"
            }
        ],
        "inputs": [
            "name",
            "assembly"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'basics'",
            "publishDir \"${params.output}/${name}/\", mode: 'copy', pattern: \"*.xml\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_index_ont": {
        "name_process": "minimap2_index_ont",
        "string_process": "process minimap2_index_ont {\n  label 'minimap2'\n  if (params.cloudProcess) { \n      publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" \n  }\n  else { \n      storeDir \"${params.databases}/minimap2/\" \n  }  \n    input:\n  \t  tuple val(name), file(fasta) \n    output:\n      file(\"${name}.ont.mmi\") \n    script:\n      \"\"\"\n      minimap2 -x map-ont -t ${task.cpus} -d ${name}.ont.mmi ${fasta}\n      \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "      \"\"\"\n      minimap2 -x map-ont -t ${task.cpus} -d ${name}.ont.mmi ${fasta}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "name",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2' if (params.cloudProcess) { publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" } else { storeDir \"${params.databases}/minimap2/\" }"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_index_ill": {
        "name_process": "minimap2_index_ill",
        "string_process": "\nprocess minimap2_index_ill {\n  label 'minimap2'\n  if (params.cloudProcess) { \n      publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" \n  }\n  else { \n      storeDir \"${params.databases}/minimap2/\" \n  }  \n    input:\n  \t  tuple val(name), file(fasta) \n    output:\n      file(\"${name}.ill.mmi\") \n    script:\n      \"\"\"\n      minimap2 -x sr -t ${task.cpus} -d ${name}.ill.mmi ${fasta}\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      minimap2 -x sr -t ${task.cpus} -d ${name}.ill.mmi ${fasta}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "name",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2' if (params.cloudProcess) { publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" } else { storeDir \"${params.databases}/minimap2/\" }"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_index_assembly": {
        "name_process": "minimap2_index_assembly",
        "string_process": "\nprocess minimap2_index_assembly {\n  label 'minimap2'\n  if (params.cloudProcess) { \n      publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" \n  }\n  else { \n      storeDir \"${params.databases}/minimap2/\" \n  }  \n    input:\n  \t  tuple val(name), file(fasta) \n    output:\n      file(\"${name}.fna.mmi\") \n    script:\n      \"\"\"\n      minimap2 -x asm5 -t ${task.cpus} -d ${name}.fna.mmi ${fasta}\n      \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      minimap2 -x asm5 -t ${task.cpus} -d ${name}.fna.mmi ${fasta}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "name",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2' if (params.cloudProcess) { publishDir \"${params.databases}/minimap2/\", mode: 'copy', pattern: \"*.mmi\" } else { storeDir \"${params.databases}/minimap2/\" }"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_to_polish": {
        "name_process": "minimap2_to_polish",
        "string_process": "\nprocess minimap2_to_polish {\n  label 'minimap2'\n    input:\n  \t  tuple val(name), file(read), file(assembly) \n    output:\n      tuple val(name), file(read), file(assembly), file(\"${name}.paf\") \n    script:\n      \"\"\"\n      minimap2 -x map-ont -t ${task.cpus} ${assembly} ${read} > ${name}.paf\n      \"\"\"\n}",
        "nb_lignes_process": 10,
        "string_script": "      \"\"\"\n      minimap2 -x map-ont -t ${task.cpus} ${assembly} ${read} > ${name}.paf\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "name",
            "read",
            "assembly"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2'"
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_clean_ont": {
        "name_process": "minimap2_clean_ont",
        "string_process": "\nprocess minimap2_clean_ont {\n  label 'minimap2'\n  publishDir \"${params.output}/${name}/decontamination/\", mode: 'copy', pattern: \"${name}.*.fastq.gz\"  \n\n  input: \n    tuple val(name), file(fastq)\n    file(db)\n\n  output:\n    tuple val(name), file(\"*.clean.fastq.gz\")\n    tuple val(name), file(\"*.contamination.fastq.gz\")\n\n  script:\n    \"\"\"\n    # remove spaces in read IDs to keep them in the later cleaned output\n    if [[ ${fastq} =~ \\\\.gz\\$ ]]; then\n      zcat ${fastq} | sed 's/ /DECONTAMINATE/g' > ${name}.id.fastq\n    else\n      sed 's/ /DECONTAMINATE/g' ${fastq} > ${name}.id.fastq\n    fi\n\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.id.fastq\n    samtools fastq -f 4 -0 ${name}.clean.id.fastq ${name}.sam\n    samtools fastq -F 4 -0 ${name}.contamination.id.fastq ${name}.sam\n\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.id.fastq | gzip > ${name}.clean.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.id.fastq | gzip > ${name}.contamination.fastq.gz\n     \n    rm ${name}.sam ${name}.clean.id.fastq ${name}.contamination.id.fastq ${name}.id.fastq\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n    # remove spaces in read IDs to keep them in the later cleaned output\n    if [[ ${fastq} =~ \\\\.gz\\$ ]]; then\n      zcat ${fastq} | sed 's/ /DECONTAMINATE/g' > ${name}.id.fastq\n    else\n      sed 's/ /DECONTAMINATE/g' ${fastq} > ${name}.id.fastq\n    fi\n\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.id.fastq\n    samtools fastq -f 4 -0 ${name}.clean.id.fastq ${name}.sam\n    samtools fastq -F 4 -0 ${name}.contamination.id.fastq ${name}.sam\n\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.id.fastq | gzip > ${name}.clean.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.id.fastq | gzip > ${name}.contamination.fastq.gz\n     \n    rm ${name}.sam ${name}.clean.id.fastq ${name}.contamination.id.fastq ${name}.id.fastq\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "fastq",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/decontamination/\", mode: 'copy', pattern: \"${name}.*.fastq.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_clean_assembly": {
        "name_process": "minimap2_clean_assembly",
        "string_process": "\nprocess minimap2_clean_assembly {\n  label 'minimap2'\n  publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"*.fasta\"  \n\n  input: \n    tuple val(name), file(fasta)\n    file(db)\n\n  output:\n    tuple val(name), file(\"*clean.fasta\")\n    tuple val(name), file(\"*contamination.fasta\")\n\n  script:\n    \"\"\"\n    # get the basename of the assembly to not overwrite output\n    BN=\\$(basename ${fasta} .fasta)\n\n    # remove spaces in fasta IDs to keep them in the later cleaned output\n    if [[ ${fasta} =~ \\\\.gz\\$ ]]; then\n      zcat ${fasta} | sed 's/ /DECONTAMINATE/g' > ${name}.id.fasta\n    else\n      sed 's/ /DECONTAMINATE/g' ${fasta} > ${name}.id.fasta\n    fi\n\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.id.fasta\n    samtools fasta -f 4 -0 ${name}.clean.id.fasta ${name}.sam\n    samtools fasta -F 4 -0 ${name}.contamination.id.fasta ${name}.sam\n\n\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.id.fasta > \\${BN}_clean.fasta\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.id.fasta > \\${BN}_contamination.fasta\n     \n    rm ${name}.sam ${name}.clean.id.fasta ${name}.contamination.id.fasta ${name}.id.fasta\n    \"\"\"\n}",
        "nb_lignes_process": 34,
        "string_script": "    \"\"\"\n    # get the basename of the assembly to not overwrite output\n    BN=\\$(basename ${fasta} .fasta)\n\n    # remove spaces in fasta IDs to keep them in the later cleaned output\n    if [[ ${fasta} =~ \\\\.gz\\$ ]]; then\n      zcat ${fasta} | sed 's/ /DECONTAMINATE/g' > ${name}.id.fasta\n    else\n      sed 's/ /DECONTAMINATE/g' ${fasta} > ${name}.id.fasta\n    fi\n\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.id.fasta\n    samtools fasta -f 4 -0 ${name}.clean.id.fasta ${name}.sam\n    samtools fasta -F 4 -0 ${name}.contamination.id.fasta ${name}.sam\n\n\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.id.fasta > \\${BN}_clean.fasta\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.id.fasta > \\${BN}_contamination.fasta\n     \n    rm ${name}.sam ${name}.clean.id.fasta ${name}.contamination.id.fasta ${name}.id.fasta\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "name",
            "fasta",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"*.fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2_clean_ill": {
        "name_process": "minimap2_clean_ill",
        "string_process": "\nprocess minimap2_clean_ill {\n  label 'minimap2'\n  publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"*.fastq.gz\"  \n\n  input: \n    tuple val(name), file(reads)\n    file(db)\n\n  output:\n    tuple val(name), file(\"*clean*.fastq.gz\")\n    tuple val(name), file(\"*contamination*.fastq.gz\")\n\n  script:\n    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > ${name}.R1.id.fastq\n      else\n       sed 's/ /DECONTAMINATE/g' ${reads[0]} > ${name}.R1.id.fastq\n     fi\n     if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n       zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > ${name}.R2.id.fastq\n     else\n       sed 's/ /DECONTAMINATE/g' ${reads[1]} > ${name}.R2.id.fastq\n     fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > ${name}.R1.id.fastq\n        zcat ${reads[1]} > ${name}.R2.id.fastq\n      else\n        cp ${reads[0]} ${name}.R1.id.fastq\n        cp ${reads[1]} ${name}.R2.id.fastq\n      fi\n    fi\n\n    # Use samtools -F 2 to discard only reads mapped in proper pair:\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.R1.id.fastq ${name}.R2.id.fastq\n    samtools fastq -F 2 -1 ${name}.clean.R1.id.fastq -2 ${name}.clean.R2.id.fastq ${name}.sam\n    samtools fastq -f 2 -1 ${name}.contamination.R1.id.fastq -2 ${name}.contamination.R2.id.fastq ${name}.sam\n    \n    # restore the original read IDs\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R2.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R2.fastq.gz\n\n    # remove intermediate files\n    rm ${name}.R1.id.fastq ${name}.R2.id.fastq ${name}.clean.R1.id.fastq ${name}.clean.R2.id.fastq ${name}.contamination.R1.id.fastq ${name}.contamination.R2.id.fastq ${name}.sam\n\n    \"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": "    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > ${name}.R1.id.fastq\n      else\n       sed 's/ /DECONTAMINATE/g' ${reads[0]} > ${name}.R1.id.fastq\n     fi\n     if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n       zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > ${name}.R2.id.fastq\n     else\n       sed 's/ /DECONTAMINATE/g' ${reads[1]} > ${name}.R2.id.fastq\n     fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > ${name}.R1.id.fastq\n        zcat ${reads[1]} > ${name}.R2.id.fastq\n      else\n        cp ${reads[0]} ${name}.R1.id.fastq\n        cp ${reads[1]} ${name}.R2.id.fastq\n      fi\n    fi\n\n    # Use samtools -F 2 to discard only reads mapped in proper pair:\n    minimap2 -a -t ${task.cpus} -o ${name}.sam ${db} ${name}.R1.id.fastq ${name}.R2.id.fastq\n    samtools fastq -F 2 -1 ${name}.clean.R1.id.fastq -2 ${name}.clean.R2.id.fastq ${name}.sam\n    samtools fastq -f 2 -1 ${name}.contamination.R1.id.fastq -2 ${name}.contamination.R2.id.fastq ${name}.sam\n    \n    # restore the original read IDs\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R2.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R2.fastq.gz\n\n    # remove intermediate files\n    rm ${name}.R1.id.fastq ${name}.R2.id.fastq ${name}.clean.R1.id.fastq ${name}.clean.R2.id.fastq ${name}.contamination.R1.id.fastq ${name}.contamination.R2.id.fastq ${name}.sam\n\n    \"\"\"",
        "nb_lignes_script": 40,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools",
            "CLINE"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools",
            "https://bio.tools/CLINE"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "CLINE",
                "uri": "https://bio.tools/CLINE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0570",
                                    "term": "Structure visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrogram visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0570",
                                    "term": "Structure rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Expression data tree visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrograph visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrogram plotting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrograph plotting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Expression data tree or dendrogram rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "CLINE (Comparison of bioLogIcal deNdrogram structurEs), is a web-tool specifically designed for the visual comparison of dendrograms, with an emphasis on the display of matching clusters that, even when not isomorphic, can be perceived as having the same biological meaning.",
                "homepage": "http://mizuguchilab.org/cline/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'minimap2'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"*.fastq.gz\""
        ],
        "when": "",
        "stub": ""
    },
    "ideel": {
        "name_process": "ideel",
        "string_process": "process ideel {\n    publishDir \"${params.output}/${name}/ideel\", mode: 'copy', pattern: \"${name}_${ASSEMBLY_STATUS}_ideel.pdf\"\n    label 'ggplot2'\n\n    errorStrategy 'ignore'\n\n  input:\n    tuple val(name), val(ASSEMBLY_STATUS), file(results) \n\n  output:\n\t  tuple val(name), file(\"${name}_${ASSEMBLY_STATUS}_ideel.pdf\") \n\n  script:\n    \"\"\"\n    #!/usr/bin/env Rscript\n    library(ggplot2)  \n    data <- read.table(\"${results}\", header=FALSE, sep='\\\\t')\n    names(data) <- c('qlen', 'slen')\n    pseudogenes <- sum(data\\$qlen / data\\$slen < 0.9)\n    print(paste0('Encountered genes < 0.9 reference length: ', pseudogenes))\n    theme_min = function (\n      size=10, font=NA, face='plain',\n      panelColor=backgroundColor, axisColor='#999999',\n      gridColor=gridLinesColor, textColor='black')\n    {\n      theme_text = function(...)\n      ggplot2::theme_text(family=font, face=face, colour=textColor, size=size, ...)\n      opts(\n          axis.text.x = theme_text(),\n          axis.text.y = theme_text(),\n          axis.ticks = theme_segment(colour=axisColor, size=0.25),\n          panel.border = theme_rect(colour=backgroundColor),\n          legend.background = theme_blank(),\n          legend.key = theme_blank(),\n          legend.key.size = unit(1.5, 'lines'),\n          legend.text = theme_text(hjust=0),\n          legend.title = theme_text(hjust=0),\n          panel.background = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank(),\n          strip.background = theme_rect(fill=NA, colour=NA),\n          strip.text.x = theme_text(hjust=0),\n          strip.text.y = theme_text(angle=-90),\n          plot.title = theme_text(hjust=0),\n          plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), 'lines'))\n      }\n      # PLOT\n        p <- ggplot(data, aes(x=qlen/slen)) +\n          geom_histogram(fill='white', color='grey25', bins=20) +\n          xlab('query length / hit length') +\n          ylab('frequency') +\n          scale_x_continuous(limits=c(0, 1.3)) +\n          theme_minimal()\n      ggsave(\"${name}_${ASSEMBLY_STATUS}_ideel.pdf\", p, height=7, width=7, units='cm')\n    \"\"\"\n}",
        "nb_lignes_process": 54,
        "string_script": "    \"\"\"\n    #!/usr/bin/env Rscript\n    library(ggplot2)  \n    data <- read.table(\"${results}\", header=FALSE, sep='\\\\t')\n    names(data) <- c('qlen', 'slen')\n    pseudogenes <- sum(data\\$qlen / data\\$slen < 0.9)\n    print(paste0('Encountered genes < 0.9 reference length: ', pseudogenes))\n    theme_min = function (\n      size=10, font=NA, face='plain',\n      panelColor=backgroundColor, axisColor='#999999',\n      gridColor=gridLinesColor, textColor='black')\n    {\n      theme_text = function(...)\n      ggplot2::theme_text(family=font, face=face, colour=textColor, size=size, ...)\n      opts(\n          axis.text.x = theme_text(),\n          axis.text.y = theme_text(),\n          axis.ticks = theme_segment(colour=axisColor, size=0.25),\n          panel.border = theme_rect(colour=backgroundColor),\n          legend.background = theme_blank(),\n          legend.key = theme_blank(),\n          legend.key.size = unit(1.5, 'lines'),\n          legend.text = theme_text(hjust=0),\n          legend.title = theme_text(hjust=0),\n          panel.background = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank(),\n          strip.background = theme_rect(fill=NA, colour=NA),\n          strip.text.x = theme_text(hjust=0),\n          strip.text.y = theme_text(angle=-90),\n          plot.title = theme_text(hjust=0),\n          plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), 'lines'))\n      }\n      # PLOT\n        p <- ggplot(data, aes(x=qlen/slen)) +\n          geom_histogram(fill='white', color='grey25', bins=20) +\n          xlab('query length / hit length') +\n          ylab('frequency') +\n          scale_x_continuous(limits=c(0, 1.3)) +\n          theme_minimal()\n      ggsave(\"${name}_${ASSEMBLY_STATUS}_ideel.pdf\", p, height=7, width=7, units='cm')\n    \"\"\"",
        "nb_lignes_script": 41,
        "language_script": "Rscript",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "ASSEMBLY_STATUS",
            "results"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "publishDir \"${params.output}/${name}/ideel\", mode: 'copy', pattern: \"${name}_${ASSEMBLY_STATUS}_ideel.pdf\"",
            "label 'ggplot2'",
            "errorStrategy 'ignore'"
        ],
        "when": "",
        "stub": ""
    },
    "prodigal": {
        "name_process": "prodigal",
        "string_process": "process prodigal {\n    label 'prodigal'\n\n    input:\n      tuple val(name), file(fasta)\n    \n    output:\n      tuple val(name), env(ASSEMBLY_STATUS), file(\"${name}.faa\")\n    \n    script:\n      \"\"\"\n      #possible input channels\n      #ERR3662306_1_small_raw.fasta\n      #ERR3662306_1_small_racon.fasta\n      #ERR3662306_1_small_medaka.fasta\n      #ERR3662306_1_small_pilon.fasta\n      #ERR3662306_1_small_raw_assembly_clean.fasta\n      #ERR3662306_1_small_polished_clean.fasta\n      #ERR3662306_1_small_pilon_polished_clean.fasta\n\n      BN=\\$(basename ${fasta} .fasta)\n      ASSEMBLY_STATUS=\\$(echo \\$BN | sed 's/${name}_//g') # [raw_assembly, polished, pilon_polished, raw_assembly_clean, ...]\n\n      prodigal -p meta -a ${name}.faa -q -i ${fasta} > ${name}.log\n      \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "      \"\"\"\n      #possible input channels\n      #ERR3662306_1_small_raw.fasta\n      #ERR3662306_1_small_racon.fasta\n      #ERR3662306_1_small_medaka.fasta\n      #ERR3662306_1_small_pilon.fasta\n      #ERR3662306_1_small_raw_assembly_clean.fasta\n      #ERR3662306_1_small_polished_clean.fasta\n      #ERR3662306_1_small_pilon_polished_clean.fasta\n\n      BN=\\$(basename ${fasta} .fasta)\n      ASSEMBLY_STATUS=\\$(echo \\$BN | sed 's/${name}_//g') # [raw_assembly, polished, pilon_polished, raw_assembly_clean, ...]\n\n      prodigal -p meta -a ${name}.faa -q -i ${fasta} > ${name}.log\n      \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "fasta"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'prodigal'"
        ],
        "when": "",
        "stub": ""
    },
    "bbduk": {
        "name_process": "bbduk",
        "string_process": "process bbduk {\n    label 'bbmap'\n    publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_assembly.fasta\"\n\n    errorStrategy { 'retry' }\n    cpus { 16 }\n    memory { 40.GB * task.attempt }\n    clusterOptions { '-P bigmem' }\n    maxRetries 3\n\n    input:\n    tuple val(name), file(reads)\n    file(db)\n    \n    output:\n    tuple val(name), file(\"*clean*.fastq.gz\")\n    tuple val(name), file(\"*contamination*.fastq.gz\")\n    \n    shell:\n    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > ${name}.R1.id.fastq\n      else\n       sed 's/ /DECONTAMINATE/g' ${reads[0]} > ${name}.R1.id.fastq\n     fi\n     if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n       zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > ${name}.R2.id.fastq\n     else\n       sed 's/ /DECONTAMINATE/g' ${reads[1]} > ${name}.R2.id.fastq\n     fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > ${name}.R1.id.fastq\n        zcat ${reads[1]} > ${name}.R2.id.fastq\n      else\n        cp ${reads[0]} ${name}.R1.id.fastq\n        cp ${reads[1]} ${name}.R2.id.fastq\n      fi\n    fi\n\n    # bbduk\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} ordered=t k=31 in=${name}.R1.id.fastq in2=${name}.R2.id.fastq out=${name}.clean.R1.id.fastq out2=${name}.clean.R2.id.fastq outm=${name}.contamination.R1.id.fastq outm2=${name}.contamination.R2.id.fastq\n \n    # restore the original read IDs\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R2.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R2.fastq.gz\n\n    rm ${name}.R1.id.fastq ${name}.R2.id.fastq ${name}.clean.R1.id.fastq ${name}.clean.R2.id.fastq ${name}.contamination.R1.id.fastq ${name}.contamination.R2.id.fastq\n   \"\"\"\n\n}",
        "nb_lignes_process": 57,
        "string_script": "    \"\"\"\n    # replace the space in the header to retain the full read IDs after mapping (the mapper would split the ID otherwise after the first space)\n    # this is working for ENA reads that have at the end of a read id '/1' or '/2'\n    EXAMPLE_ID=\\$(zcat ${reads[0]} | head -1)\n    if [[ \\$EXAMPLE_ID == */1 ]]; then \n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} | sed 's/ /DECONTAMINATE/g' > ${name}.R1.id.fastq\n      else\n       sed 's/ /DECONTAMINATE/g' ${reads[0]} > ${name}.R1.id.fastq\n     fi\n     if [[ ${reads[1]} =~ \\\\.gz\\$ ]]; then\n       zcat ${reads[1]} | sed 's/ /DECONTAMINATE/g' > ${name}.R2.id.fastq\n     else\n       sed 's/ /DECONTAMINATE/g' ${reads[1]} > ${name}.R2.id.fastq\n     fi\n    else\n      # this is for paried-end SRA reads that don't follow the ENA pattern\n      if [[ ${reads[0]} =~ \\\\.gz\\$ ]]; then\n        zcat ${reads[0]} > ${name}.R1.id.fastq\n        zcat ${reads[1]} > ${name}.R2.id.fastq\n      else\n        cp ${reads[0]} ${name}.R1.id.fastq\n        cp ${reads[1]} ${name}.R2.id.fastq\n      fi\n    fi\n\n    # bbduk\n    MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n    bbduk.sh -Xmx\\${MEM}g ref=${db} threads=${task.cpus} ordered=t k=31 in=${name}.R1.id.fastq in2=${name}.R2.id.fastq out=${name}.clean.R1.id.fastq out2=${name}.clean.R2.id.fastq outm=${name}.contamination.R1.id.fastq outm2=${name}.contamination.R2.id.fastq\n \n    # restore the original read IDs\n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.clean.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.clean.R2.fastq.gz\n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R1.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/1\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R1.fastq.gz \n    sed 's/DECONTAMINATE/ /g' ${name}.contamination.R2.id.fastq | awk 'BEGIN{LINE=0};{if(LINE % 4 == 0 || LINE == 0){print \\$0\"/2\"}else{print \\$0};LINE++;}' | gzip > ${name}.contamination.R2.fastq.gz\n\n    rm ${name}.R1.id.fastq ${name}.R2.id.fastq ${name}.clean.R1.id.fastq ${name}.clean.R2.id.fastq ${name}.contamination.R1.id.fastq ${name}.contamination.R2.id.fastq\n   \"\"\"",
        "nb_lignes_script": 37,
        "language_script": "bash",
        "tools": [
            "CLINE"
        ],
        "tools_url": [
            "https://bio.tools/CLINE"
        ],
        "tools_dico": [
            {
                "name": "CLINE",
                "uri": "https://bio.tools/CLINE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0570",
                                    "term": "Structure visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrogram visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0570",
                                    "term": "Structure rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Expression data tree visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrograph visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrogram plotting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Dendrograph plotting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2938",
                                    "term": "Expression data tree or dendrogram rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "CLINE (Comparison of bioLogIcal deNdrogram structurEs), is a web-tool specifically designed for the visual comparison of dendrograms, with an emphasis on the display of matching clusters that, even when not isomorphic, can be perceived as having the same biological meaning.",
                "homepage": "http://mizuguchilab.org/cline/"
            }
        ],
        "inputs": [
            "name",
            "reads",
            "db"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'bbmap'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_assembly.fasta\"",
            "errorStrategy { 'retry' }",
            "cpus { 16 }",
            "memory { 40.GB * task.attempt }",
            "clusterOptions { '-P bigmem' }",
            "maxRetries 3"
        ],
        "when": "",
        "stub": ""
    },
    "flye": {
        "name_process": "flye",
        "string_process": "process flye {\n    label 'flye'\n    publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_flye.fasta\"\n    publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"flye.log\"\n    \n    input:\n    tuple val(name), file(ont)\n    \n    output:\n    tuple val(name), file(ont), file(\"${name}_raw_flye.fasta\"), emit: assembly\n    tuple val(name), file(\"flye.log\"), emit: log\n    \n    script:\n    \"\"\"\n    flye --nano-raw ${ont} -o flye_output -t ${task.cpus} --plasmids --meta\n    mv flye_output/assembly.fasta ${name}_raw_flye.fasta\n    mv flye_output/flye.log flye.log\n    \"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    flye --nano-raw ${ont} -o flye_output -t ${task.cpus} --plasmids --meta\n    mv flye_output/assembly.fasta ${name}_raw_flye.fasta\n    mv flye_output/flye.log flye.log\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Flye"
        ],
        "tools_url": [
            "https://bio.tools/Flye"
        ],
        "tools_dico": [
            {
                "name": "Flye",
                "uri": "https://bio.tools/Flye",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flye is a de novo assembler for single molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PB / ONT reads as input and outputs polished contigs.",
                "homepage": "https://github.com/fenderglass/Flye"
            }
        ],
        "inputs": [
            "name",
            "ont"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'flye'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_flye.fasta\"",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"flye.log\""
        ],
        "when": "",
        "stub": ""
    },
    "spades": {
        "name_process": "spades",
        "string_process": "process spades {\n    label 'spades'\n    publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_assembly.fasta\"\n\n    input:\n        tuple val(name), file(ont), file(illumina)\n    output:\n        tuple val(name), file(\"${name}_raw_assembly.fasta\")\n    script:\n        \"\"\"\n\tSIZE=\\$(echo ${task.memory} | awk 'BEGIN{FS=\" \"};{print \\$2}')\n\tif [ \\$SIZE == \"TB\" ]; then\n          MEM=\\$(echo ${task.memory} | sed 's/ TB//g') \n\t  MEM=\\$(echo \\$MEM*1000 | bc | awk 'BEGIN{FS=\".\"};{print \\$1}')\n\telse\n          MEM=\\$(echo ${task.memory} | sed 's/ GB//g') \n\tfi\n        spades.py --only-assembler -1 ${illumina[0]} -2 ${illumina[1]} --nanopore ${ont} --meta -o spades_output -t ${task.cpus} -m \\${MEM}\n        mv spades_output/contigs.fasta  ${name}_raw_assembly.fasta\n        \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "        \"\"\"\n\tSIZE=\\$(echo ${task.memory} | awk 'BEGIN{FS=\" \"};{print \\$2}')\n\tif [ \\$SIZE == \"TB\" ]; then\n          MEM=\\$(echo ${task.memory} | sed 's/ TB//g') \n\t  MEM=\\$(echo \\$MEM*1000 | bc | awk 'BEGIN{FS=\".\"};{print \\$1}')\n\telse\n          MEM=\\$(echo ${task.memory} | sed 's/ GB//g') \n\tfi\n        spades.py --only-assembler -1 ${illumina[0]} -2 ${illumina[1]} --nanopore ${ont} --meta -o spades_output -t ${task.cpus} -m \\${MEM}\n        mv spades_output/contigs.fasta  ${name}_raw_assembly.fasta\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "ont",
            "illumina"
        ],
        "nb_inputs": 3,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'spades'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_raw_assembly.fasta\""
        ],
        "when": "",
        "stub": ""
    },
    "racon": {
        "name_process": "racon",
        "string_process": "process racon {\n      label 'racon'\n\n    errorStrategy { task.exitStatus in 130..140 ? 'retry' : 'terminate' }\n    cpus { 24 }\n    memory { 60.GB * task.attempt }\n    clusterOptions { '-P bigmem' }\n    maxRetries 2\n\n   input:\n      tuple val(name), file(read), file(assembly), file(mapping) \n   output:\n   \ttuple val(name), file(read), file(\"${name}_racon.fasta\") \n   shell:\n      \"\"\"\n      racon -t ${task.cpus} ${read} ${mapping} ${assembly} > ${name}_racon.fasta\n      \"\"\"\n  }",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      racon -t ${task.cpus} ${read} ${mapping} ${assembly} > ${name}_racon.fasta\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Racon"
        ],
        "tools_url": [
            "https://bio.tools/Racon"
        ],
        "tools_dico": [
            {
                "name": "Racon",
                "uri": "https://bio.tools/Racon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Possibility to Use Oxford Nanopore Technology | Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads. http://genome.cshlp.org/content/early/2017/01/18/gr.214270.116 Note: This was the original repository which will no longer be officially maintained. Please use the new official repository here: | Racon is intended as a standalone consensus module to correct raw contigs generated by rapid assembly methods which do not include a consensus step | Consensus module for raw de novo DNA assembly of long uncorrected reads",
                "homepage": "https://github.com/isovic/racon"
            }
        ],
        "inputs": [
            "name",
            "read",
            "assembly",
            "mapping"
        ],
        "nb_inputs": 4,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'racon'",
            "errorStrategy { task.exitStatus in 130..140 ? 'retry' : 'terminate' }",
            "cpus { 24 }",
            "memory { 60.GB * task.attempt }",
            "clusterOptions { '-P bigmem' }",
            "maxRetries 2"
        ],
        "when": "",
        "stub": ""
    },
    "trim_low_abund": {
        "name_process": "trim_low_abund",
        "string_process": "\nprocess trim_low_abund {\n    label 'khmer'\n\n    input:\n        tuple val(name), file(reads)\n\n    output:\n        tuple val(name), file(\"*.abundtrim\")\n    \n    shell:\n    \"\"\"\n    trim-low-abund.py -k 25 -C 3 -M ${params.maxmem} ${reads}\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    trim-low-abund.py -k 25 -C 3 -M ${params.maxmem} ${reads}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'khmer'"
        ],
        "when": "",
        "stub": ""
    },
    "estimate_gsize": {
        "name_process": "estimate_gsize",
        "string_process": "\nprocess estimate_gsize {\n    label 'kmc'\n    publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"genome_size.txt\"\n\n                                                                                                                            \n                                                 \n    errorStrategy 'retry'\n    maxRetries 1\n\n    input:\n        tuple val(name), file(reads)\n\n    output:\n        tuple val(name), file('genome_size.txt')\n        \n\n    shell:\n    \"\"\"\n    if [[ \"${params.gsize}\" != \"\" ]]; then\n        echo \"${params.gsize}m\" > genome_size.txt\n    else\n        # maybe change this to /scratch on HPC\n        TMP=/tmp\n        gess.py --threads ${task.cpus} --cutoff 3 ${reads} -t \\$TMP | awk 'BEGIN{FS=\" \"};{print \\$5\"m\"}' > genome_size.txt\n\n        cp genome_size.txt estimated_genome_size.txt\n        size=\\$(cat genome_size.txt)\n        if [ \\$(echo \\$size | awk 'BEGIN{FS=\".\"}{print \\$1}') -lt 1 ]; then\n            echo '1m' > genome_size.txt\n        fi\n    fi\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    if [[ \"${params.gsize}\" != \"\" ]]; then\n        echo \"${params.gsize}m\" > genome_size.txt\n    else\n        # maybe change this to /scratch on HPC\n        TMP=/tmp\n        gess.py --threads ${task.cpus} --cutoff 3 ${reads} -t \\$TMP | awk 'BEGIN{FS=\" \"};{print \\$5\"m\"}' > genome_size.txt\n\n        cp genome_size.txt estimated_genome_size.txt\n        size=\\$(cat genome_size.txt)\n        if [ \\$(echo \\$size | awk 'BEGIN{FS=\".\"}{print \\$1}') -lt 1 ]; then\n            echo '1m' > genome_size.txt\n        fi\n    fi\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "TMPD"
        ],
        "tools_url": [
            "https://bio.tools/tmpd"
        ],
        "tools_dico": [
            {
                "name": "TMPD",
                "uri": "https://bio.tools/tmpd",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Tobacco Markers & Primers Database.",
                "homepage": "http://biodb.sdau.edu.cn/tmpd/index.html"
            }
        ],
        "inputs": [
            "name",
            "reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'kmc'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"genome_size.txt\"",
            "errorStrategy 'retry'",
            "maxRetries 1"
        ],
        "when": "",
        "stub": ""
    },
    "pilon": {
        "name_process": "pilon",
        "string_process": "process pilon {\n  label 'pilon'\n  publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_polished_${round}.fasta\"\n      input:\n        tuple val(name), path(assembly), path(bam), path(index) \n        val(round)\n      output:\n  \t    tuple val(name), file(\"${name}_polished_${round}.fasta\") \n      script:\n        \"\"\"\n        VALUE=\\$(echo ${task.memory} | awk '{print \\$2}')\n        if [[ \\$VALUE == \"GB\" ]]; then\n          MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n          VALUE=g\n        else\n          MEM=\\$(echo ${task.memory} | sed 's/ TB//g')\n          VALUE=t\n        fi\n        #only allow pilon to use 80% of the available memory\n        ADJUSTEDMEM=\\$(echo 0.8*\\$MEM | bc | awk 'BEGIN{FS=\".\"};{print \\$1}')\n        pilon -Xmx\\${ADJUSTEDMEM}\\${VALUE} --threads ${task.cpus} --genome ${assembly} --frags ${bam} --output ${name}_polished_${round}\n      \t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "        \"\"\"\n        VALUE=\\$(echo ${task.memory} | awk '{print \\$2}')\n        if [[ \\$VALUE == \"GB\" ]]; then\n          MEM=\\$(echo ${task.memory} | sed 's/ GB//g')\n          VALUE=g\n        else\n          MEM=\\$(echo ${task.memory} | sed 's/ TB//g')\n          VALUE=t\n        fi\n        #only allow pilon to use 80% of the available memory\n        ADJUSTEDMEM=\\$(echo 0.8*\\$MEM | bc | awk 'BEGIN{FS=\".\"};{print \\$1}')\n        pilon -Xmx\\${ADJUSTEDMEM}\\${VALUE} --threads ${task.cpus} --genome ${assembly} --frags ${bam} --output ${name}_polished_${round}\n      \t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "pilon"
        ],
        "tools_url": [
            "https://bio.tools/pilon"
        ],
        "tools_dico": [
            {
                "name": "pilon",
                "uri": "https://bio.tools/pilon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Read alignment analysis to diagnose, report, and automatically improve de novo genome assemblies.",
                "homepage": "http://www.broadinstitute.org/software/pilon/"
            }
        ],
        "inputs": [
            "name",
            "assembly",
            "bam",
            "index",
            "round"
        ],
        "nb_inputs": 5,
        "outputs": [
            "name"
        ],
        "nb_outputs": 1,
        "name_workflow": "hoelzer__mgnify-lr",
        "directive": [
            "label 'pilon'",
            "publishDir \"${params.output}/${name}/assembly/\", mode: 'copy', pattern: \"${name}_polished_${round}.fasta\""
        ],
        "when": "",
        "stub": ""
    }
}