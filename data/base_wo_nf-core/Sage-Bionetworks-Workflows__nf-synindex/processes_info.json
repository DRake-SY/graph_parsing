{
    "get_user_id": {
        "name_process": "get_user_id",
        "string_process": "\nprocess get_user_id {\n  \n  label 'synapse'\n\n  secret 'SYNAPSE_AUTH_TOKEN'\n\n  afterScript \"rm -f ${syn_config}\"\n\n  input:\n  file  syn_config from ch_synapse_config\n\n  output:\n  stdout ch_user_id\n\n  script:\n  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  get_user_id.py \\\n  ${config_cli_arg}\n  \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  get_user_id.py \\\n  ${config_cli_arg}\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_synapse_config"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_user_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'synapse' secret 'SYNAPSE_AUTH_TOKEN'",
            "afterScript \"rm -f ${syn_config}\""
        ],
        "when": "",
        "stub": ""
    },
    "update_owner": {
        "name_process": "update_owner",
        "string_process": "\nprocess update_owner {\n  \n  label 'aws'\n\n  input:\n  val user_id   from ch_user_id\n  val s3_prefix from s3_prefix\n\n  output:\n  val true into ch_update_owner_done\n\n  script:\n  \"\"\"\n  ( \\\n     ( aws s3 cp ${s3_prefix}/owner.txt - 2>/dev/null || true ); \\\n      echo $user_id \\\n  ) \\\n  | sort -u \\\n  | aws s3 cp - ${s3_prefix}/owner.txt\n  \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  ( \\\n     ( aws s3 cp ${s3_prefix}/owner.txt - 2>/dev/null || true ); \\\n      echo $user_id \\\n  ) \\\n  | sort -u \\\n  | aws s3 cp - ${s3_prefix}/owner.txt\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "NullSeq",
            "JABAWS"
        ],
        "tools_url": [
            "https://bio.tools/nullseq",
            "https://bio.tools/jabaws"
        ],
        "tools_dico": [
            {
                "name": "NullSeq",
                "uri": "https://bio.tools/nullseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0364",
                                    "term": "Random sequence generation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Creates Random Coding Sequences with specified GC content and Amino Acid usage.",
                "homepage": "https://github.com/amarallab/NullSeq"
            },
            {
                "name": "JABAWS",
                "uri": "https://bio.tools/jabaws",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3762",
                                    "term": "Service composition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Collection of web services for bioinformatics, and currently provides services that make it easy to access well-known multiple sequence It is free software which provides web services conveniently packaged to run on your local computer, server, cluster or Amazon EC2 instance.",
                "homepage": "http://www.compbio.dundee.ac.uk/jabaws/"
            }
        ],
        "inputs": [
            "ch_user_id",
            "s3_prefix"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_update_owner_done"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'aws'"
        ],
        "when": "",
        "stub": ""
    },
    "register_bucket": {
        "name_process": "register_bucket",
        "string_process": "\nprocess register_bucket {\n  \n  label 'synapse'\n\n  secret 'SYNAPSE_AUTH_TOKEN'\n\n  afterScript \"rm -f ${syn_config}\"\n\n  input:\n  val   bucket     from bucket_name\n  val   base_key   from base_key\n  file  syn_config from ch_synapse_config\n  val   flag       from ch_update_owner_done\n\n  output:\n  stdout ch_storage_id\n\n  script:\n  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  register_bucket.py \\\n  --bucket ${bucket} \\\n  --base_key ${base_key} \\\n  ${config_cli_arg}\n  \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  register_bucket.py \\\n  --bucket ${bucket} \\\n  --base_key ${base_key} \\\n  ${config_cli_arg}\n  \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bucket_name",
            "base_key",
            "ch_synapse_config",
            "ch_update_owner_done"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_storage_id"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'synapse' secret 'SYNAPSE_AUTH_TOKEN'",
            "afterScript \"rm -f ${syn_config}\""
        ],
        "when": "",
        "stub": ""
    },
    "list_objects": {
        "name_process": "list_objects",
        "string_process": "\nprocess list_objects {\n\n  label 'aws'\n\n  input:\n  val s3_prefix from s3_prefix\n  val bucket    from bucket_name\n\n  output:\n  path 'objects.txt'    into ch_objects\n\n  script:\n  \"\"\"\n  aws s3 ls ${s3_prefix} --recursive \\\n  | grep -v -e '/\\$' -e 'synindex/under-' -e 'owner.txt\\$' \\\n    -e 'synapseConfig' -e 'synapse_config' \\\n  | awk '{\\$1=\\$2=\\$3=\"\"; print \\$0}' \\\n  | sed 's|^   |s3://${bucket}/|' \\\n  > objects.txt\n  \"\"\"\n  \n}",
        "nb_lignes_process": 21,
        "string_script": "  \"\"\"\n  aws s3 ls ${s3_prefix} --recursive \\\n  | grep -v -e '/\\$' -e 'synindex/under-' -e 'owner.txt\\$' \\\n    -e 'synapseConfig' -e 'synapse_config' \\\n  | awk '{\\$1=\\$2=\\$3=\"\"; print \\$0}' \\\n  | sed 's|^   |s3://${bucket}/|' \\\n  > objects.txt\n  \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "JABAWS"
        ],
        "tools_url": [
            "https://bio.tools/jabaws"
        ],
        "tools_dico": [
            {
                "name": "JABAWS",
                "uri": "https://bio.tools/jabaws",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3762",
                                    "term": "Service composition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Collection of web services for bioinformatics, and currently provides services that make it easy to access well-known multiple sequence It is free software which provides web services conveniently packaged to run on your local computer, server, cluster or Amazon EC2 instance.",
                "homepage": "http://www.compbio.dundee.ac.uk/jabaws/"
            }
        ],
        "inputs": [
            "s3_prefix",
            "bucket_name"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_objects"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'aws'"
        ],
        "when": "",
        "stub": ""
    },
    "synapse_mirror": {
        "name_process": "synapse_mirror",
        "string_process": "\nprocess synapse_mirror {\n  \n  label 'synapse'\n\n  secret 'SYNAPSE_AUTH_TOKEN'\n\n  afterScript \"rm -f ${syn_config}\"\n\n  publishDir publish_dir, mode: 'copy'\n\n  input:\n  path  objects    from ch_objects\n  val   s3_prefix  from s3_prefix\n  val   parent_id  from params.parent_id\n  file  syn_config from ch_synapse_config\n\n  output:\n  path  'parent_ids.csv'    into ch_parent_ids_csv\n\n  script:\n  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  synmirror.py \\\n  --objects ${objects} \\\n  --s3_prefix ${s3_prefix} \\\n  --parent_id ${parent_id} \\\n  ${config_cli_arg} \\\n  > parent_ids.csv\n  \"\"\"\n\n}",
        "nb_lignes_process": 30,
        "string_script": "  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  synmirror.py \\\n  --objects ${objects} \\\n  --s3_prefix ${s3_prefix} \\\n  --parent_id ${parent_id} \\\n  ${config_cli_arg} \\\n  > parent_ids.csv\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_objects",
            "s3_prefix",
            "params",
            "ch_synapse_config"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_parent_ids_csv"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'synapse' secret 'SYNAPSE_AUTH_TOKEN'",
            "afterScript \"rm -f ${syn_config}\"",
            "publishDir publish_dir, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "synapse_index": {
        "name_process": "synapse_index",
        "string_process": "\nprocess synapse_index {\n  \n  label 'synapse'\n\n  secret 'SYNAPSE_AUTH_TOKEN'\n\n  afterScript \"rm -f ${syn_config}\"\n\n  input:\n  tuple val(uri), file(object), val(parent_id) from ch_parent_ids\n  val   storage_id                             from ch_storage_id\n  file  syn_config                             from ch_synapse_config\n\n  output:\n  stdout ch_file_ids\n\n  script:\n  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  synindex.py \\\n  --storage_id ${storage_id} \\\n  --file ${object} \\\n  --uri '${uri}' \\\n  --parent_id ${parent_id} \\\n  ${config_cli_arg}\n  \"\"\"\n\n}",
        "nb_lignes_process": 27,
        "string_script": "  config_cli_arg = params.synapse_config ? \"--config ${syn_config}\" : \"\"\n  \"\"\"\n  synindex.py \\\n  --storage_id ${storage_id} \\\n  --file ${object} \\\n  --uri '${uri}' \\\n  --parent_id ${parent_id} \\\n  ${config_cli_arg}\n  \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_parent_ids",
            "ch_storage_id",
            "ch_synapse_config"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_file_ids"
        ],
        "nb_outputs": 1,
        "name_workflow": "Sage-Bionetworks-Workflows__nf-synindex",
        "directive": [
            "label 'synapse' secret 'SYNAPSE_AUTH_TOKEN'",
            "afterScript \"rm -f ${syn_config}\""
        ],
        "when": "",
        "stub": ""
    }
}