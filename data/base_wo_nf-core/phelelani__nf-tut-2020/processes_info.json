{
    "showFiles": {
        "name_process": "showFiles",
        "string_process": "\nprocess showFiles {\n   input:\n     file script\n   publishDir \"output\", overwrite: true\n   output:\n     file output into result\n   echo true\n   script:\n     output = \"${script.baseName}.out\"\n     \"\"\"\n     echo \"I am running on `hostname`\"\n     echo \"Current directory <`pwd`\"\n     echo \"Check who owns  it\"\n     ls -ld .\n     echo \"This is a directory of the host that Docker mounts\"\n     ls ../../../..\n     echo \"This is the home directory of the Docker machine\"\n     ls \\$HOME\n     touch $output\n     \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "     output = \"${script.baseName}.out\"\n     \"\"\"\n     echo \"I am running on `hostname`\"\n     echo \"Current directory <`pwd`\"\n     echo \"Check who owns  it\"\n     ls -ld .\n     echo \"This is a directory of the host that Docker mounts\"\n     ls ../../../..\n     echo \"This is the home directory of the Docker machine\"\n     ls \\$HOME\n     touch $output\n     \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "wossoutput"
        ],
        "tools_url": [
            "https://bio.tools/wossoutput"
        ],
        "tools_dico": [
            {
                "name": "wossoutput",
                "uri": "https://bio.tools/wossoutput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM output data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossoutput.html"
            }
        ],
        "inputs": [
            "script"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getFreq": {
        "name_process": "getFreq",
        "string_process": "\nprocess getFreq {\n   input:\n     file(plinks) from plink_data\n   publishDir \"output\"\n   output:\n     file output into result\n   echo true\n   script:\n     bed  = plinks[0]\n     bim  = plinks[1]\n     fam  = plinks[2]\n     base = \"${bed.baseName}\"\n     output = \"${base}.frq\"\n     \"\"\"\n     #If you have plink, then uncomment the line below\n     #plink --bed $bed --bim $bim --fam $fam --freq --out ${bed.baseName}\n     #But since you probably don't have plink\n     echo plink --bed $bed --bim $bim --fam $fam --freq --out ${bed.baseName}\n     echo \"Interesting numbers\" >> $output\n     \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "     bed  = plinks[0]\n     bim  = plinks[1]\n     fam  = plinks[2]\n     base = \"${bed.baseName}\"\n     output = \"${base}.frq\"\n     \"\"\"\n     #If you have plink, then uncomment the line below\n     #plink --bed $bed --bim $bim --fam $fam --freq --out ${bed.baseName}\n     #But since you probably don't have plink\n     echo plink --bed $bed --bim $bim --fam $fam --freq --out ${bed.baseName}\n     echo \"Interesting numbers\" >> $output\n     \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "BED",
            "biMM",
            "FAME",
            "BASE",
            "wossoutput"
        ],
        "tools_url": [
            "https://bio.tools/bed",
            "https://bio.tools/bimm",
            "https://bio.tools/fame",
            "https://bio.tools/base-antibody",
            "https://bio.tools/wossoutput"
        ],
        "tools_dico": [
            {
                "name": "BED",
                "uri": "https://bio.tools/bed",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3345",
                            "term": "Data identity and mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "ID mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "Accession mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3282",
                                    "term": "Identifier mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Biological Entity Dictionary. Get and explore mapping between identifiers of biological entities. It provides a way to connect to a BED Neo4j database in which the relationships between the identifiers from different sources are recorded.",
                "homepage": "https://github.com/patzaw/BED"
            },
            {
                "name": "biMM",
                "uri": "https://bio.tools/bimm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Efficient estimation of genetic variances and covariances for cohorts with high-dimensional phenotype measurements.",
                "homepage": "http://www.helsinki.fi/~mjxpirin/download.html"
            },
            {
                "name": "FAME",
                "uri": "https://bio.tools/fame",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2259",
                            "term": "Systems biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2275",
                            "term": "Molecular modelling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2426",
                                    "term": "Modelling and simulation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flux Analysis and Modeling Environment.",
                "homepage": "http://f-a-m-e.fame-vu.surf-hosted.nl/ajax/page1.php"
            },
            {
                "name": "BASE",
                "uri": "https://bio.tools/base-antibody",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0804",
                            "term": "Immunology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3304",
                            "term": "Neurobiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy-to-use software for complete data analysis in single cell immunoglobulin cloning.",
                "homepage": "https://github.com/automatedSequencing/BASE"
            },
            {
                "name": "wossoutput",
                "uri": "https://bio.tools/wossoutput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM output data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossoutput.html"
            }
        ],
        "inputs": [
            "plink_data"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getIDs": {
        "name_process": "getIDs",
        "string_process": "\nprocess getIDs {\n    input:\n       file input from input_ch\n    output:\n       file \"${input.baseName}.ids\" into id_ch\n       file \"$input\" into orig_ch\n    script:\n       \" cut -f 2 $input | sort > ${input.baseName}.ids \"\n}",
        "nb_lignes_process": 8,
        "string_script": "       \" cut -f 2 $input | sort > ${input.baseName}.ids \"",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "input_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "id_ch",
            "orig_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "getDups": {
        "name_process": "getDups",
        "string_process": "\nprocess getDups {\n    input:\n       file input from id_ch\n    output:\n       file \"${input.baseName}.dups\" into dups_ch\n    script:\n       out = \"${input.baseName}.dups\"\n       \"\"\"\n       uniq -d $input > $out\n       touch ignore\n       \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "       out = \"${input.baseName}.dups\"\n       \"\"\"\n       uniq -d $input > $out\n       touch ignore\n       \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Ragout"
        ],
        "tools_url": [
            "https://bio.tools/ragout"
        ],
        "tools_dico": [
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            }
        ],
        "inputs": [
            "id_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "dups_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "removeDups": {
        "name_process": "removeDups",
        "string_process": "\nprocess removeDups {\n    input:\n       file badids  from dups_ch\n       file \"orig.bim\"    from orig_ch\n    output:\n       file \"${badids.baseName}.bim\" into cleaned_ch\n    publishDir \"output\", pattern: \"${badids.baseName}.bim\",\\\n                  overwrite:true, mode:'copy'\n\n    script:\n       \"grep -v -f $badids orig.bim > ${badids.baseName}.bim \"\n}",
        "nb_lignes_process": 11,
        "string_script": "       \"grep -v -f $badids orig.bim > ${badids.baseName}.bim \"",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dups_ch",
            "orig_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cleaned_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "splitIDs": {
        "name_process": "splitIDs",
        "string_process": "\nprocess splitIDs  {\n    input:\n       file bim from cleaned_ch\n    each split from splits\n    output:\n       file (\"*-$split-*\") into output_ch;\n\n    script:\n    \"split -l $split $bim ${bim.baseName}-$split- \"\n}",
        "nb_lignes_process": 9,
        "string_script": "    \"split -l $split $bim ${bim.baseName}-$split- \"",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "cleaned_ch",
            "splits"
        ],
        "nb_inputs": 2,
        "outputs": [
            "output_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "pasteData": {
        "name_process": "pasteData",
        "string_process": "\nprocess pasteData {\n   input:\n      set val(key), file(data) from inp_channel\n   output:\n      file \"${key}.res\" into concat_ch \n   publishDir ....\n   script:\n      \" ... \"\n}",
        "nb_lignes_process": 8,
        "string_script": "      \" ... \"",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inp_channel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "concat_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "concatData": {
        "name_process": "concatData",
        "string_process": "\nprocess concatData {\n   input:\n      file(\"*\") from concat_ch.toList()\n   output:\n      ....\n   publishDir \"output\", overwrite:true, mode:'move'\n   script:\n      \" .... \"\n}",
        "nb_lignes_process": 8,
        "string_script": "      \" .... \"",
        "nb_lignes_script": 0,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "concat_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "phelelani__nf-tut-2020",
        "directive": [],
        "when": "",
        "stub": ""
    }
}