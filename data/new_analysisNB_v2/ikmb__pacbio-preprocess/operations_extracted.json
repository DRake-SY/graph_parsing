{
    "OPERATION_1": {
        "string": "Channel.fromPath(file(params.barcodes))\n\t.ifEmpty { exit 1, \"Could not find the barcode fasta file...please check the path.\" }\n\t.set { barcodes }",
        "origin": [
            [
                "file(params.barcodes",
                "A"
            ]
        ],
        "gives": [
            [
                "barcodes",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel.fromPath(barcodes_ref_fa)\n\t.ifEmpty { exit 1, \"Could not find the built-in barcode fasta file...this should not happen!\" }\n        .set { barcodes }",
        "origin": [
            [
                "barcodes_ref_fa",
                "A"
            ]
        ],
        "gives": [
            [
                "barcodes",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t\t.fromPath(params.bam)\n\t\t.ifEmpty { exit 1, \"Could not find an input bam file\" }\n\t\t.map { b -> [ file(b).getBaseName(), file(b), file(\"${b}.pbi\") ] }\n\t\t.set { bamFile }",
        "origin": [
            [
                "params.bam",
                "A"
            ]
        ],
        "gives": [
            [
                "bamFile",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "ReadChunksGrouped = ReadChunks.groupTuple()",
        "origin": [
            [
                "ReadChunks",
                "P"
            ]
        ],
        "gives": [
            [
                "ReadChunksGrouped",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "mergedBam.into { HiFiBam; bamQC }",
        "origin": [
            [
                "mergedBam",
                "P"
            ]
        ],
        "gives": [
            [
                "HiFiBam",
                "P"
            ],
            [
                "bamQC",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "mergedBam = bamFile",
        "origin": [
            [
                "bamFile",
                "P"
            ]
        ],
        "gives": [
            [
                "mergedBam",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "final_bams = HiFiBam",
        "origin": [
            [
                "HiFiBam",
                "P"
            ]
        ],
        "gives": [
            [
                "final_bams",
                "P"
            ]
        ]
    }
}