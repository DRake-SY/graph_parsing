{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs( params.reads_pe )\n    .ifEmpty{ error \"Cannot find any reads matching: ${params.reads_pe}\" }\n    .set{ metagenome_fastq_pair }",
        "origin": [
            [
                "params.reads_pe",
                "A"
            ]
        ],
        "gives": [
            [
                "metagenome_fastq_pair",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(params.run_params_csv)\n    .splitCsv(header:true)\n    .map{ row -> tuple(row.tool, row.label, row.run_params) }\n    .branch {\n        METASPADES_params: it[0] == \"metaspades\"\n        MEGAHIT_params: it[0] == \"megahit\"\n        IDBA_UD_params: it[0] == \"idba_ud\"\n        CONCOCT_params: it[0] == \"concoct\"\n        MAXBIN2_params: it[0] == \"maxbin2\"\n        METABAT2_params: it[0] == \"metabat2\"\n        DASTOOL_params: it[0] == \"dastool\"\n    }\n    .set{ runs_ch }",
        "origin": [
            [
                "params.run_params_csv",
                "A"
            ]
        ],
        "gives": [
            [
                "runs_ch",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "runs_ch.METASPADES_params().combine( METASPADES_input )\n  .set{ METASPADES_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "METASPADES_input",
                "P"
            ]
        ],
        "gives": [
            [
                "METASPADES_run_params",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "runs_ch.IDBA_UD_params().combine( IDBA_UD_input )\n    .set{ IDBA_UD_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "IDBA_UD_input",
                "P"
            ]
        ],
        "gives": [
            [
                "IDBA_UD_run_params",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "runs_ch.MEGAHIT_params().combine( MEGAHIT_input )\n    .set{ MEGAHIT_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "MEGAHIT_input",
                "P"
            ]
        ],
        "gives": [
            [
                "MEGAHIT_run_params",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "METASPADES_assemblies\n    .concat( IDBAUD_assemblies, MEGAHIT_assemblies )\n    .combine( read_mapping_input )\n    .into{ assembly_coverage_input; concoct_coverage_input; dastool_assembly_inputs }",
        "origin": [
            [
                "METASPADES_assemblies",
                "P"
            ],
            [
                "read_mapping_input",
                "P"
            ],
            [
                "IDBAUD_assemblies",
                "P"
            ],
            [
                "MEGAHIT_assemblies",
                "P"
            ]
        ],
        "gives": [
            [
                "assembly_coverage_input",
                "P"
            ],
            [
                "concoct_coverage_input",
                "P"
            ],
            [
                "dastool_assembly_inputs",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "runs_ch.METABAT2_params().combine(METABAT2_input )\n    .set{ METABAT2_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "METABAT2_input",
                "P"
            ]
        ],
        "gives": [
            [
                "METABAT2_run_params",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "runs_ch.MAXBIN2_params().combine( MAXBIN2_input )\n    .set{ MAXBIN2_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "MAXBIN2_input",
                "P"
            ]
        ],
        "gives": [
            [
                "MAXBIN2_run_params",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "runs_ch.CONCOCT_params().combine( CONCOCT_input )\n    .set{ CONCOCT_run_params }",
        "origin": [
            [
                "runs_ch",
                "P"
            ],
            [
                "CONCOCT_input",
                "P"
            ]
        ],
        "gives": [
            [
                "CONCOCT_run_params",
                "P"
            ]
        ]
    }
}