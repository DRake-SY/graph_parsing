{
    "gunzip_dbsnp": {
        "name_process": "gunzip_dbsnp",
        "string_process": "\nprocess gunzip_dbsnp {\n    tag \"$dbsnp_gz\"\n\n    input:\n    file dbsnp_gz from dbsnp_gz\n    file dbsnp_idx_gz from dbsnp_idx_gz\n\n  \toutput:\n  \tfile \"*.vcf\" into dbsnp, dbsnp_variantrecalibrator_snps, dbsnp_variantrecalibrator_indels\n  \tfile \"*.vcf.idx\" into dbsnp_idx, dbsnp_idx_variantrecalibrator_snps, dbsnp_idx_variantrecalibrator_indels\n\n    script:\n    if ( \"${dbsnp_gz}\".endsWith(\".gz\") ) {\n     \"\"\"\n     gunzip -d --force $dbsnp_gz\n   \t gunzip -d --force $dbsnp_idx_gz\n     \"\"\"\n   } else {\n     \"\"\"\n     cp $dbsnp_gz dbsnp.vcf\n     cp $dbsnp_idx_gz dbsnp.vcf.idx\n     \"\"\"\n   }\n}",
        "nb_lignes_process": 23,
        "string_script": "    if ( \"${dbsnp_gz}\".endsWith(\".gz\") ) {\n     \"\"\"\n     gunzip -d --force $dbsnp_gz\n   \t gunzip -d --force $dbsnp_idx_gz\n     \"\"\"\n   } else {\n     \"\"\"\n     cp $dbsnp_gz dbsnp.vcf\n     cp $dbsnp_idx_gz dbsnp.vcf.idx\n     \"\"\"\n   }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dbsnp_gz",
            "dbsnp_idx_gz"
        ],
        "nb_inputs": 2,
        "outputs": [
            "dbsnp",
            "dbsnp_variantrecalibrator_snps",
            "dbsnp_variantrecalibrator_indels",
            "dbsnp_idx",
            "dbsnp_idx_variantrecalibrator_snps",
            "dbsnp_idx_variantrecalibrator_indels"
        ],
        "nb_outputs": 6,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$dbsnp_gz\""
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_golden_indel": {
        "name_process": "gunzip_golden_indel",
        "string_process": "\nprocess gunzip_golden_indel {\n    tag \"$golden_indel_gz\"\n\n    input:\n    file golden_indel_gz from golden_indel_gz\n    file golden_indel_idx_gz from golden_indel_idx_gz\n\n    output:\n    file \"*.vcf\" into golden_indel, golden_indel_variantrecalibrator_indels\n    file \"*.vcf.idx\" into golden_indel_idx, golden_indel_idx_variantrecalibrator_indels\n\n    script:\n    if ( \"${golden_indel_gz}\".endsWith(\".gz\") ) {\n        \"\"\"\n        gunzip -d --force $golden_indel_gz\n        gunzip -d --force $golden_indel_idx_gz\n        \"\"\"\n    } else {\n        \"\"\"\n        cp $golden_indel_gz golden_indel.vcf\n        cp $golden_indel_idx_gz golden_indel.vcf.idx\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 23,
        "string_script": "    if ( \"${golden_indel_gz}\".endsWith(\".gz\") ) {\n        \"\"\"\n        gunzip -d --force $golden_indel_gz\n        gunzip -d --force $golden_indel_idx_gz\n        \"\"\"\n    } else {\n        \"\"\"\n        cp $golden_indel_gz golden_indel.vcf\n        cp $golden_indel_idx_gz golden_indel.vcf.idx\n        \"\"\"\n    }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "golden_indel_gz",
            "golden_indel_idx_gz"
        ],
        "nb_inputs": 2,
        "outputs": [
            "golden_indel",
            "golden_indel_variantrecalibrator_indels",
            "golden_indel_idx",
            "golden_indel_idx_variantrecalibrator_indels"
        ],
        "nb_outputs": 4,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$golden_indel_gz\""
        ],
        "when": "",
        "stub": ""
    },
    "BAM_sort": {
        "name_process": "BAM_sort",
        "string_process": "\nprocess BAM_sort {\n    tag \"$bam\"\n    container 'lifebitai/samtools:latest'\n\n    input:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(bam) from bams\n\n    output:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(\"${name}_mitoless.bam\") into bam_sort, bam_sort_qc, bam_sort_baserecalibrator, bam_sort_applybqsr\n\n\n    \"\"\"\n    samtools index $bam\n    samtools view \\\n    -b $bam \\\n    chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr9 chr20 chr21 chr22  > temp.bam && mv temp.bam ${name}.bam\n    samtools sort -o temp.bam ${name}.bam\n    rm ${name}.bam && temp.bam ${name}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    samtools index $bam\n    samtools view \\\n    -b $bam \\\n    chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr9 chr20 chr21 chr22  > temp.bam && mv temp.bam ${name}.bam\n    samtools sort -o temp.bam ${name}.bam\n    rm ${name}.bam && temp.bam ${name}.bam\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_sort",
            "bam_sort_qc",
            "bam_sort_baserecalibrator",
            "bam_sort_applybqsr"
        ],
        "nb_outputs": 4,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$bam\"",
            "container 'lifebitai/samtools:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCmapped": {
        "name_process": "RunBamQCmapped",
        "string_process": "\nprocess RunBamQCmapped {\n    tag \"$bam\"\n\n    container 'maxulysse/sarek:latest'\n\n    input:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(bam) from bam_sort_qc\n\n    output:\n    file(\"${name}\") into bamQCmappedReport\n\n    when: !params.skip_multiqc\n\n    script:\n                                                         \n    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name} \\\n    -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name} \\\n    -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bam_sort_qc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bamQCmappedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$bam\"",
            "container 'maxulysse/sarek:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "BaseRecalibrator": {
        "name_process": "BaseRecalibrator",
        "string_process": "\nprocess BaseRecalibrator {\n    tag \"$bam_markdup\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(name), file(bam_markdup), file(bai), val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), \n    file(fasta), file(fai), file(dict), file(dbsnp), file(dbsnp_idx), file(golden_indel), file(golden_indel_idx) from baserecalibrator\n\n    output:\n    set val(name), file(\"${name}_recal_data.table\") into baserecalibrator_table\n    file(\"*data.table\") into baseRecalibratorReport\n\n    \"\"\"\n    gatk BaseRecalibrator \\\n    -I $bam_markdup \\\n    --known-sites $dbsnp \\\n    --known-sites $golden_indel \\\n    -O ${name}_recal_data.table \\\n    -R $fasta\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    gatk BaseRecalibrator \\\n    -I $bam_markdup \\\n    --known-sites $dbsnp \\\n    --known-sites $golden_indel \\\n    -O ${name}_recal_data.table \\\n    -R $fasta\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "baserecalibrator"
        ],
        "nb_inputs": 1,
        "outputs": [
            "baserecalibrator_table",
            "baseRecalibratorReport"
        ],
        "nb_outputs": 2,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$bam_markdup\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "ApplyBQSR": {
        "name_process": "ApplyBQSR",
        "string_process": "\nprocess ApplyBQSR {\n    tag \"$baserecalibrator_table\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(name), file(baserecalibrator_table), file(bam), file(bai), val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status) from applybqsr\n\n    output:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(\"${name}_bqsr.bam\"), file(\"${name}_bqsr.bai\") into bam_for_qc, bam_haplotypecaller, bam_mutect\n\n    script:\n    \"\"\"\n    gatk ApplyBQSR -I $bam -bqsr $baserecalibrator_table -OBI -O ${name}_bqsr.bam\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    gatk ApplyBQSR -I $bam -bqsr $baserecalibrator_table -OBI -O ${name}_bqsr.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "applybqsr"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_for_qc",
            "bam_haplotypecaller",
            "bam_mutect"
        ],
        "nb_outputs": 3,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$baserecalibrator_table\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCrecalibrated": {
        "name_process": "RunBamQCrecalibrated",
        "string_process": "\nprocess RunBamQCrecalibrated {\n    tag \"$bam\"\n\n    container 'maxulysse/sarek:latest'\n\n    input:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(bam), file(bai) from bam_for_qc\n\n    output:\n    file(\"${name}_recalibrated\") into bamQCrecalibratedReport\n\n    when: !params.skip_multiqc\n\n    script:\n                                                           \n    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name}_recalibrated \\\n    -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name}_recalibrated \\\n    -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bam_for_qc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bamQCrecalibratedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$bam\"",
            "container 'maxulysse/sarek:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "HaplotypeCaller": {
        "name_process": "HaplotypeCaller",
        "string_process": "\nprocess HaplotypeCaller {\n    tag \"${name}_bqsr.bam\"\n    publishDir \"${params.outdir}/GermlineVariantCalling\", mode: 'copy'\n    container 'broadinstitute/gatk:latest'\n\n    memory threadmem\n\n    input:\n    set val(shared_matched_pair_id), val(unique_subject_id), val(case_control_status), val(name), file(\"${name}_bqsr.bam\"), file(\"${name}_bqsr.bai\") from bam_haplotypecaller\n    each file(fasta) from fasta_haplotypecaller\n    each file(fai) from fai_haplotypecaller\n    each file(dict) from dict_haplotypecaller\n    each file(intervals) from intervals_haplotypecaller\n\n\n    output:\n    file(\"${name}.g.vcf\") into haplotypecaller_gvcf\n    file(\"${name}.g.vcf.idx\") into index\n    val(name) into name_mergevcfs\n\n    when: !params.skip_haplotypecaller\n\n    script:\n    \"\"\"\n    gatk HaplotypeCaller \\\n    --java-options -Xmx${task.memory.toMega()}M \\\n    -R $fasta \\\n    -O \"${name}.g.vcf\" \\\n    -I \"${name}_bqsr.bam\" \\\n    -ERC GVCF \\\n    -L $intervals\n    \"\"\"\n}",
        "nb_lignes_process": 32,
        "string_script": "    \"\"\"\n    gatk HaplotypeCaller \\\n    --java-options -Xmx${task.memory.toMega()}M \\\n    -R $fasta \\\n    -O \"${name}.g.vcf\" \\\n    -I \"${name}_bqsr.bam\" \\\n    -ERC GVCF \\\n    -L $intervals\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam_haplotypecaller",
            "fasta_haplotypecaller",
            "fai_haplotypecaller",
            "dict_haplotypecaller",
            "intervals_haplotypecaller"
        ],
        "nb_inputs": 5,
        "outputs": [
            "haplotypecaller_gvcf",
            "index",
            "name_mergevcfs"
        ],
        "nb_outputs": 3,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"${name}_bqsr.bam\"",
            "publishDir \"${params.outdir}/GermlineVariantCalling\", mode: 'copy'",
            "container 'broadinstitute/gatk:latest'",
            "memory threadmem"
        ],
        "when": "",
        "stub": ""
    },
    "run_mutect2_tumor_only_mode": {
        "name_process": "run_mutect2_tumor_only_mode",
        "string_process": "\nprocess run_mutect2_tumor_only_mode {\n\n    tag \"${normal_bam}\"\n    publishDir \"${params.outdir}/MutectTumorOnlyMode\", mode: 'copy'\n    container \"broadinstitute/gatk:latest\"\n\n    input:\n    file(normal_bam) from bamsNormal_PoN_bam\n    file(normal_bai) from bamsNormal_PoN_bai\n    each file(ref) from ref_mutect2_tum_only_mode_channel\n    each file(ref_index) from ref_index_mutect2_tum_only_mode_channel\n    each file(ref_dict) from ref_dict_mutect2_tum_only_mode_channel\n    each file(intervals) from interval_list_mutect2_tum_only_mode_channel\n\n    output:\n    file('*.vcf.gz') into vcf_for_create_GenomicsDB_channel\n    file('*.vcf.gz.tbi') into vcf_tbi_for_create_GenomicsDB_channel\n\n    script:\n    \"\"\"\n    gatk Mutect2 \\\n    -R ${ref} \\\n    -I ${normal_bam} -normal ${normal_bam.simpleName.minus('_Normal').minus('_CIN3').minus('_bqsr').minus('_a').minus('_b')} \\\n    --max-mnp-distance 0 \\\n    -O ${normal_bam.baseName}.vcf.gz \\\n    -L $intervals \\\n    --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true'\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    gatk Mutect2 \\\n    -R ${ref} \\\n    -I ${normal_bam} -normal ${normal_bam.simpleName.minus('_Normal').minus('_CIN3').minus('_bqsr').minus('_a').minus('_b')} \\\n    --max-mnp-distance 0 \\\n    -O ${normal_bam.baseName}.vcf.gz \\\n    -L $intervals \\\n    --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true'\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bamsNormal_PoN_bam",
            "bamsNormal_PoN_bai",
            "ref_mutect2_tum_only_mode_channel",
            "ref_index_mutect2_tum_only_mode_channel",
            "ref_dict_mutect2_tum_only_mode_channel",
            "interval_list_mutect2_tum_only_mode_channel"
        ],
        "nb_inputs": 6,
        "outputs": [
            "vcf_for_create_GenomicsDB_channel",
            "vcf_tbi_for_create_GenomicsDB_channel"
        ],
        "nb_outputs": 2,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"${normal_bam}\"",
            "publishDir \"${params.outdir}/MutectTumorOnlyMode\", mode: 'copy'",
            "container \"broadinstitute/gatk:latest\""
        ],
        "when": "",
        "stub": ""
    },
    "create_GenomicsDB": {
        "name_process": "create_GenomicsDB",
        "string_process": "\nprocess create_GenomicsDB {\n\n    tag \"all_the_Normals_vcfs!\"\n    publishDir \"${params.outdir}/GenomicsDBImport\", mode: 'copy'\n    container \"broadinstitute/gatk:latest\"\n\n    input:\n    file(\"*\") from vcf_for_create_GenomicsDB_channel.collect()\n    file(\"*\") from vcf_tbi_for_create_GenomicsDB_channel.collect()\n    file(ref) from ref_for_create_GenomicsDB_channel\n    file(ref_index) from ref_index_for_create_GenomicsDB_channel\n    file(ref_dict) from ref_dict_for_create_GenomicsDB_channel\n    file(intervals) from interval_list_create_GenomicsDB_channel\n\n    output:\n    file(\"pon_db\") into pon_db_for_create_somatic_PoN\n\n    shell:\n    '''\n    echo -n \"gatk GenomicsDBImport -R !{ref} --genomicsdb-workspace-path pon_db \" > create_GenomicsDB.sh\n    for vcf in $(ls *.vcf.gz); do\n    echo -n \"-V $vcf \" >> create_GenomicsDB.sh\n    done\n    echo -n \"-L !{intervals}\" --merge-input-intervals --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' >> create_GenomicsDB.sh\n    chmod ugo+xr create_GenomicsDB.sh\n    bash create_GenomicsDB.sh\n    chmod -R ugo+xrw pon_db\n    '''\n}",
        "nb_lignes_process": 28,
        "string_script": "    '''\n    echo -n \"gatk GenomicsDBImport -R !{ref} --genomicsdb-workspace-path pon_db \" > create_GenomicsDB.sh\n    for vcf in $(ls *.vcf.gz); do\n    echo -n \"-V $vcf \" >> create_GenomicsDB.sh\n    done\n    echo -n \"-L !{intervals}\" --merge-input-intervals --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' >> create_GenomicsDB.sh\n    chmod ugo+xr create_GenomicsDB.sh\n    bash create_GenomicsDB.sh\n    chmod -R ugo+xrw pon_db\n    '''",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf_for_create_GenomicsDB_channel",
            "vcf_tbi_for_create_GenomicsDB_channel",
            "ref_for_create_GenomicsDB_channel",
            "ref_index_for_create_GenomicsDB_channel",
            "ref_dict_for_create_GenomicsDB_channel",
            "interval_list_create_GenomicsDB_channel"
        ],
        "nb_inputs": 6,
        "outputs": [
            "pon_db_for_create_somatic_PoN"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"all_the_Normals_vcfs!\"",
            "publishDir \"${params.outdir}/GenomicsDBImport\", mode: 'copy'",
            "container \"broadinstitute/gatk:latest\""
        ],
        "when": "",
        "stub": ""
    },
    "create_somatic_PoN": {
        "name_process": "create_somatic_PoN",
        "string_process": "\nprocess create_somatic_PoN {\n    \n    tag \"$pon_db\"\n    publishDir \"${params.outdir}/CreateSomaticPanelOfNormals\", mode: 'copy'\n    container \"broadinstitute/gatk:latest\"\n\n    input:\n    file(pon_db) from pon_db_for_create_somatic_PoN\n    file(ref) from ref_create_somatic_PoN\n    file(ref_index) from ref_index_create_somatic_PoN\n    file(ref_dict) from ref_dict_create_somatic_PoN\n    file(af_only_gnomad_vcf) from af_only_gnomad_vcf_channel_PoN\n    file(af_only_gnomad_vcf_idx) from af_only_gnomad_vcf_idx_channel_PoN\n\n    output:\n    file(\"*.vcf.gz\") into pon_vcf_gz_for_PoN_results_channel\n    file(\"*.vcf.gz.tbi\") into pon_vcf_gz_tbi_for_PoN_results_channel\n    \n    script:\n    \"\"\"\n    gatk CreateSomaticPanelOfNormals \\\n    -R $ref \\\n    --germline-resource $af_only_gnomad_vcf \\\n    -V gendb://$pon_db \\\n    -O pon.vcf.gz  \n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    gatk CreateSomaticPanelOfNormals \\\n    -R $ref \\\n    --germline-resource $af_only_gnomad_vcf \\\n    -V gendb://$pon_db \\\n    -O pon.vcf.gz  \n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "pon_db_for_create_somatic_PoN",
            "ref_create_somatic_PoN",
            "ref_index_create_somatic_PoN",
            "ref_dict_create_somatic_PoN",
            "af_only_gnomad_vcf_channel_PoN",
            "af_only_gnomad_vcf_idx_channel_PoN"
        ],
        "nb_inputs": 6,
        "outputs": [
            "pon_vcf_gz_for_PoN_results_channel",
            "pon_vcf_gz_tbi_for_PoN_results_channel"
        ],
        "nb_outputs": 2,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"$pon_db\"",
            "publishDir \"${params.outdir}/CreateSomaticPanelOfNormals\", mode: 'copy'",
            "container \"broadinstitute/gatk:latest\""
        ],
        "when": "",
        "stub": ""
    },
    "Mutect2": {
        "name_process": "Mutect2",
        "string_process": "\nprocess Mutect2 {\n\n    tag \"${tumourSampleId}_vs_${sampleId}.vcf\"\n    container 'broadinstitute/gatk:latest'\n    publishDir \"${params.outdir}/Somatic\", mode: 'copy'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam), file(bai),\n    val(tumourSampleId), val(tumourStatus), val(tumourName), file(tumourBam), file(tumourBai) from combined_bam_mutect\n    each file(fasta) from fasta_mutect\n    each file(fai) from fai_mutect\n    each file(dict) from dict_mutect\n    each file(intervals_mutect) from intervals_mutect\n    each file(af_only_gnomad_vcf) from af_only_gnomad_vcf_channel\n    each file(af_only_gnomad_vcf_idx) from af_only_gnomad_vcf_idx_channel\n    each file(pon_vcf_gz) from pon_vcf_gz_for_PoN_results_channel\n    each file(pon_vcf_gz_tbi) from pon_vcf_gz_tbi_for_PoN_results_channel\n\n    output:\n    file(\"${tumourSampleId}_vs_${sampleId}.vcf\") into vcf_for_filter_mutect_calls\n    file(\"${tumourSampleId}_vs_${sampleId}.vcf.idx\") into idx_vcf_for_filter_mutect_calls\n    file(\"${tumourSampleId}_vs_${sampleId}.vcf.stats\") into stats_vcf_for_filter_mutect_calls\n\n    script:\n    \"\"\"\n    tumourName_bash=`echo ${tumourName}`\n    name_bash=`echo ${name}`\n\n    tumourName_trimmed=`echo \\${tumourName_bash%_*}`\n    name_trimmed=`echo \\${name_bash%_*}`\n\n    tumourName_trimmed_remove_a_b=`echo \\${tumourName_trimmed%_*}`\n    name_trimmed_trimmed_remove_a_b=`echo \\${name_trimmed%_*}`\n\n    gatk Mutect2 \\\n    -R ${fasta} \\\n    -I ${tumourBam}  -tumor \\${tumourName_trimmed_remove_a_b} \\\n    -I ${bam} -normal \\${name_trimmed_trimmed_remove_a_b} \\\n    -O ${tumourSampleId}_vs_${sampleId}.vcf \\\n    -L $intervals_mutect \\\n    --panel-of-normals  $pon_vcf_gz \\\n    --germline-resource $af_only_gnomad_vcf \\\n    --interval-padding 100 \n    #gatk --java-options \"-Xmx\\${task.memory.toGiga()}g\" \\\n    \"\"\"\n}",
        "nb_lignes_process": 45,
        "string_script": "    \"\"\"\n    tumourName_bash=`echo ${tumourName}`\n    name_bash=`echo ${name}`\n\n    tumourName_trimmed=`echo \\${tumourName_bash%_*}`\n    name_trimmed=`echo \\${name_bash%_*}`\n\n    tumourName_trimmed_remove_a_b=`echo \\${tumourName_trimmed%_*}`\n    name_trimmed_trimmed_remove_a_b=`echo \\${name_trimmed%_*}`\n\n    gatk Mutect2 \\\n    -R ${fasta} \\\n    -I ${tumourBam}  -tumor \\${tumourName_trimmed_remove_a_b} \\\n    -I ${bam} -normal \\${name_trimmed_trimmed_remove_a_b} \\\n    -O ${tumourSampleId}_vs_${sampleId}.vcf \\\n    -L $intervals_mutect \\\n    --panel-of-normals  $pon_vcf_gz \\\n    --germline-resource $af_only_gnomad_vcf \\\n    --interval-padding 100 \n    #gatk --java-options \"-Xmx\\${task.memory.toGiga()}g\" \\\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "combined_bam_mutect",
            "fasta_mutect",
            "fai_mutect",
            "dict_mutect",
            "intervals_mutect",
            "af_only_gnomad_vcf_channel",
            "af_only_gnomad_vcf_idx_channel",
            "pon_vcf_gz_for_PoN_results_channel",
            "pon_vcf_gz_tbi_for_PoN_results_channel"
        ],
        "nb_inputs": 9,
        "outputs": [
            "vcf_for_filter_mutect_calls",
            "idx_vcf_for_filter_mutect_calls",
            "stats_vcf_for_filter_mutect_calls"
        ],
        "nb_outputs": 3,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"${tumourSampleId}_vs_${sampleId}.vcf\"",
            "container 'broadinstitute/gatk:latest'",
            "publishDir \"${params.outdir}/Somatic\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "FilterMutectCalls": {
        "name_process": "FilterMutectCalls",
        "string_process": "\nprocess FilterMutectCalls {\n\n    tag \"${unfiltered_vcf}\"\n    container 'broadinstitute/gatk:latest'\n    publishDir \"${params.outdir}/FilterMutect2Calls\", mode: 'copy'\n\n    input:\n    file(unfiltered_vcf) from vcf_for_filter_mutect_calls\n    file(unfiltered_vcf_idx) from idx_vcf_for_filter_mutect_calls\n    file(unfiltered_vcf_stats) from stats_vcf_for_filter_mutect_calls\n    each file(fasta) from fasta_filter_mutect_calls\n    each file(fai) from fai_filter_mutect_calls\n    each file(dict) from dict_filter_mutect_calls\n\n    output:\n    file(\"*vcf\") into vcf_filtered_for_vcf2maf\n    file(\"*vcf.idx\") into idx_vcf_filtered_for_vcf2maf\n    file(\"*filteringStats.tsv\") into filterStats_vcf_filtered_for_vcf2maf\n \n    script:\n    \"\"\"\n    gatk FilterMutectCalls \\\n    -R ${fasta} \\\n    -V $unfiltered_vcf \\\n    -O \"${unfiltered_vcf}.filtered.vcf\"\n    #-contamination-table contamination.table\n   \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    gatk FilterMutectCalls \\\n    -R ${fasta} \\\n    -V $unfiltered_vcf \\\n    -O \"${unfiltered_vcf}.filtered.vcf\"\n    #-contamination-table contamination.table\n   \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "vcf_for_filter_mutect_calls",
            "idx_vcf_for_filter_mutect_calls",
            "stats_vcf_for_filter_mutect_calls",
            "fasta_filter_mutect_calls",
            "fai_filter_mutect_calls",
            "dict_filter_mutect_calls"
        ],
        "nb_inputs": 6,
        "outputs": [
            "vcf_filtered_for_vcf2maf",
            "idx_vcf_filtered_for_vcf2maf",
            "filterStats_vcf_filtered_for_vcf2maf"
        ],
        "nb_outputs": 3,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"${unfiltered_vcf}\"",
            "container 'broadinstitute/gatk:latest'",
            "publishDir \"${params.outdir}/FilterMutect2Calls\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "Vcf2maf": {
        "name_process": "Vcf2maf",
        "string_process": "\nprocess Vcf2maf {\n\n    tag \"${filtered_vcf}\"\n    container 'levim/vcf2maf:1.0'\n    publishDir \"${params.outdir}/Vcf2maf\", mode: 'copy'\n\n    input:\n    file(filtered_vcf) from vcf_filtered_for_vcf2maf\n    file(filtered_vcf_idx) from idx_vcf_filtered_for_vcf2maf\n    each file(fasta) from fasta_vcf2maf\n    each file(fai) from fai_vcf2maf\n    each file(dict) from dict_vcf2maf\n\n    output:\n    file(\"*\") into vcf2maf_annotated_files_channel\n \n    script:\n    \"\"\"\n    temp_temp_filename=\\$(echo ${filtered_vcf}) \n    temp_filename=\\${temp_temp_filename//$a_to_remove/}\n    filename=\\${temp_filename//$b_to_remove/}\n    basename=\\$(echo \\$filename | cut -f 1 -d '.')\n    tumourID=\\$(echo \\$filename | cut -f 1 -d '_')\n    normalID=\\$(echo \\$filename | cut -f 4 -d '_')\n\n    perl /opt/vcf2maf/vcf2maf.pl \\\n    --input-vcf $filtered_vcf \\\n    --output-maf \"\\${basename}.maf\"  \\\n    --tumor-id \\${tumourID} \\\n    --normal-id \\${normalID} \\\n    --ref-fasta /vepdata/Homo_sapiens.GRCh37.75.dna.primary_assembly.fa \\\n    --ncbi-build  GRCh37 \\\n    --filter-vcf /vepdata/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz \\\n    --vep-path /opt/variant_effect_predictor_89/ensembl-tools-release-89/scripts/variant_effect_predictor \\\n    --vep-data /vepdata/ \\\n    --vep-forks 2 \\\n    --buffer-size 200 \\\n    --species homo_sapiens     \\\n    --cache-version 89\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    \"\"\"\n    temp_temp_filename=\\$(echo ${filtered_vcf}) \n    temp_filename=\\${temp_temp_filename//$a_to_remove/}\n    filename=\\${temp_filename//$b_to_remove/}\n    basename=\\$(echo \\$filename | cut -f 1 -d '.')\n    tumourID=\\$(echo \\$filename | cut -f 1 -d '_')\n    normalID=\\$(echo \\$filename | cut -f 4 -d '_')\n\n    perl /opt/vcf2maf/vcf2maf.pl \\\n    --input-vcf $filtered_vcf \\\n    --output-maf \"\\${basename}.maf\"  \\\n    --tumor-id \\${tumourID} \\\n    --normal-id \\${normalID} \\\n    --ref-fasta /vepdata/Homo_sapiens.GRCh37.75.dna.primary_assembly.fa \\\n    --ncbi-build  GRCh37 \\\n    --filter-vcf /vepdata/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz \\\n    --vep-path /opt/variant_effect_predictor_89/ensembl-tools-release-89/scripts/variant_effect_predictor \\\n    --vep-data /vepdata/ \\\n    --vep-forks 2 \\\n    --buffer-size 200 \\\n    --species homo_sapiens     \\\n    --cache-version 89\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "vcf_filtered_for_vcf2maf",
            "idx_vcf_filtered_for_vcf2maf",
            "fasta_vcf2maf",
            "fai_vcf2maf",
            "dict_vcf2maf"
        ],
        "nb_inputs": 5,
        "outputs": [
            "vcf2maf_annotated_files_channel"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "tag \"${filtered_vcf}\"",
            "container 'levim/vcf2maf:1.0'",
            "publishDir \"${params.outdir}/Vcf2maf\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n    container 'ewels/multiqc:v1.7'\n\n    when:\n    !params.skip_multiqc\n\n    input:\n    file (bamQC) from bamQCmappedReport.collect().ifEmpty([])\n    file (bamQCrecalibrated) from bamQCrecalibratedReport.collect().ifEmpty([])\n    file (baseRecalibrator) from baseRecalibratorReport.collect().ifEmpty([])\n    \n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\"\n\n    script:\n    \"\"\"\n    multiqc . -m picard -m qualimap -m gatk\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    multiqc . -m picard -m qualimap -m gatk\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "bamQCmappedReport",
            "bamQCrecalibratedReport",
            "baseRecalibratorReport"
        ],
        "nb_inputs": 3,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__ion-somatic-variant-calling",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'",
            "container 'ewels/multiqc:v1.7'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    }
}