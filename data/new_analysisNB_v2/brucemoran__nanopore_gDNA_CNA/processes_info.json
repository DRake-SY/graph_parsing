{
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n\n  output:\n  file('minimap.mmi') into mnm_index\n  file('fasta.fa') into pbsv_fasta\n                                         \n\n  script:\n  \"\"\"\n  {\n  if [[ ${params.fa} =~ \".gz\\$\" ]];then\n    cp ${params.fa} fasta.fa.gz\n    gunzip -c fasta.fa.gz > fasta.fa\n    gunzip -c fasta.fa.gz | bgzip -c > fasta.fa.bgz\n    samtools faidx fasta.fa.bgz\n  else\n    cp ${params.fa} fasta.fa\n    gzip -c fasta.fa > fasta.fa.gz\n    gunzip -c fasta.fa.gz | bgzip -c > fasta.fa.bgz\n    samtools faidx fasta.fa.bgz\n  fi\n\n  minimap2 -x map-ont -d minimap.mmi fasta.fa.gz\n  } 2>&1 | tee index.log.txt\n  \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "  \"\"\"\n  {\n  if [[ ${params.fa} =~ \".gz\\$\" ]];then\n    cp ${params.fa} fasta.fa.gz\n    gunzip -c fasta.fa.gz > fasta.fa\n    gunzip -c fasta.fa.gz | bgzip -c > fasta.fa.bgz\n    samtools faidx fasta.fa.bgz\n  else\n    cp ${params.fa} fasta.fa\n    gzip -c fasta.fa > fasta.fa.gz\n    gunzip -c fasta.fa.gz | bgzip -c > fasta.fa.bgz\n    samtools faidx fasta.fa.bgz\n  fi\n\n  minimap2 -x map-ont -d minimap.mmi fasta.fa.gz\n  } 2>&1 | tee index.log.txt\n  \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "mnm_index",
            "pbsv_fasta"
        ],
        "nb_outputs": 2,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "guppy": {
        "name_process": "guppy",
        "string_process": "\nprocess guppy {\n\n  publishDir \"$params.outDir/guppy\", mode: \"copy\"\n\n  output:\n         'guppy/*fastq'            \n                                   \n  set file('guppy/sequencing_summary.txt'), file('guppy/barcoder/barcoding_summary.txt') into qc_summary\n  file('guppy/barcoder') into barcodedir\n\n  script:\n  \"\"\"\n  TMEM=\\$(echo ${task.memory} | sed 's/ GB//')\n  ##callers is cpu; threads-per-caller is mem/cpu\n  TPCS=\\$(( \\$TMEM / ${task.cpus} ))\n  guppy_basecaller \\\n    -s guppy \\\n    -c ${params.guppyConfig} \\\n    -i ${params.dataDir} \\\n    -r \\\n    --cpu_threads_per_caller \\$TPCS \\\n    --num_callers ${task.cpus} \\\n    --min_qscore 7 \\\n    -q 0\n\n  guppy_barcoder \\\n    -s guppy/barcoder \\\n    -i guppy \\\n    --worker_threads ${task.cpus} \\\n    -q 0\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  TMEM=\\$(echo ${task.memory} | sed 's/ GB//')\n  ##callers is cpu; threads-per-caller is mem/cpu\n  TPCS=\\$(( \\$TMEM / ${task.cpus} ))\n  guppy_basecaller \\\n    -s guppy \\\n    -c ${params.guppyConfig} \\\n    -i ${params.dataDir} \\\n    -r \\\n    --cpu_threads_per_caller \\$TPCS \\\n    --num_callers ${task.cpus} \\\n    --min_qscore 7 \\\n    -q 0\n\n  guppy_barcoder \\\n    -s guppy/barcoder \\\n    -i guppy \\\n    --worker_threads ${task.cpus} \\\n    -q 0\n  \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "qc_summary",
            "barcodedir"
        ],
        "nb_outputs": 2,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/guppy\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "pycoqc": {
        "name_process": "pycoqc",
        "string_process": "\nprocess pycoqc {\n\n  publishDir \"$params.outDir/pycoQC\", mode: \"copy\"\n\n  input:\n  set file(seqsummary), file(barcodesummary) from qc_summary\n\n  output:\n  file('*') into completed_11\n\n  script:\n  \"\"\"\n  pycoQC \\\n    --file $seqsummary \\\n    --barcode_file $barcodesummary \\\n    --outfile pycoQC.html\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  pycoQC \\\n    --file $seqsummary \\\n    --barcode_file $barcodesummary \\\n    --outfile pycoQC.html\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "qc_summary"
        ],
        "nb_inputs": 1,
        "outputs": [
            "completed_11"
        ],
        "nb_outputs": 1,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/pycoQC\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "minimap2": {
        "name_process": "minimap2",
        "string_process": "\nprocess minimap2 {\n\n  publishDir \"$params.outDir/$sampleID/minimap2\", mode: 'copy', pattern: '*[!.gz,.txt]'\n  publishDir \"$params.outDir/$sampleID/fastq\", mode: 'copy', pattern: '*.fastq.gz'\n\n  input:\n  set val(barcode), val(sampleID) from barcodeIDmap\n  each file(barcodebases) from barcodedir\n  each file(mmi) from mnm_index\n\n  output:\n  set val(sampleID), file('*.bam') into (nanostat_bam, pbsv_bam)\n  file('*.guppy.pass.fastq.gz') into mnm_fastq\n\n  script:\n  \"\"\"\n  INPUT=\\$(find $barcodebases/$barcode | grep fastq)\n  cp \\$INPUT \"${sampleID}.guppy.pass.fastq\"\n  gzip \"${sampleID}.guppy.pass.fastq\"\n  DAT=\\$(date +\"%Y-%m-%dT%T\")\n  RGLINE=\"@RG\\\\tID:$sampleID\\\\tPL:ONT\\\\tSM:$sampleID\\\\tDS:ONT\\\\tCN:UCD\\\\tLB:LANE_X\\\\tDT:\\$DATE\"\n  minimap2 \\\n    -t ${task.cpus} \\\n    -ax map-ont \\\n    -R \\$RGLINE \\\n    -Y \\\n    $mmi \\\n    \"${sampleID}.guppy.pass.fastq.gz\" | \\\n  samtools sort -T \"tmp.\"$sampleID - | \\\n  samtools view -Shb - > $sampleID\".bam\"\n  \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "  \"\"\"\n  INPUT=\\$(find $barcodebases/$barcode | grep fastq)\n  cp \\$INPUT \"${sampleID}.guppy.pass.fastq\"\n  gzip \"${sampleID}.guppy.pass.fastq\"\n  DAT=\\$(date +\"%Y-%m-%dT%T\")\n  RGLINE=\"@RG\\\\tID:$sampleID\\\\tPL:ONT\\\\tSM:$sampleID\\\\tDS:ONT\\\\tCN:UCD\\\\tLB:LANE_X\\\\tDT:\\$DATE\"\n  minimap2 \\\n    -t ${task.cpus} \\\n    -ax map-ont \\\n    -R \\$RGLINE \\\n    -Y \\\n    $mmi \\\n    \"${sampleID}.guppy.pass.fastq.gz\" | \\\n  samtools sort -T \"tmp.\"$sampleID - | \\\n  samtools view -Shb - > $sampleID\".bam\"\n  \"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "barcodeIDmap",
            "barcodedir",
            "mnm_index"
        ],
        "nb_inputs": 3,
        "outputs": [
            "",
            "mnm_fastq"
        ],
        "nb_outputs": 2,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/$sampleID/minimap2\", mode: 'copy', pattern: '*[!.gz,.txt]'",
            "publishDir \"$params.outDir/$sampleID/fastq\", mode: 'copy', pattern: '*.fastq.gz'"
        ],
        "when": "",
        "stub": ""
    },
    "nanostat": {
        "name_process": "nanostat",
        "string_process": "\nprocess nanostat {\n\n  publishDir \"$params.outDir/$sampleID/nanostat\", mode: 'copy', pattern: '*.nanostat.txt'\n\n  input:\n  set val(sampleID), file(bam) from nanostat_bam\n\n  output:\n  file('*.nanostat.txt') into nnosttc\n\n  script:\n  \"\"\"\n  NanoStat --bam $bam > $sampleID\".nanostat.txt\"\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  NanoStat --bam $bam > $sampleID\".nanostat.txt\"\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "nanostat_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "nnosttc"
        ],
        "nb_outputs": 1,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/$sampleID/nanostat\", mode: 'copy', pattern: '*.nanostat.txt'"
        ],
        "when": "",
        "stub": ""
    },
    "pbsv_discover_call": {
        "name_process": "pbsv_discover_call",
        "string_process": "\nprocess pbsv_discover_call {\n\n  publishDir \"$params.outDir/$sampleID/pbsv\", mode: \"copy\"\n\n  input:\n  file(fasta) from pbsv_fasta\n  set val(sampleID), file(bam) from pbsv_bam\n\n  output:\n  set val(sampleID), file(\"${sampleID}.svsig.vcf\") into pbsv_vcf\n  file('*') into pbsv_complete\n\n  script:\n  \"\"\"\n  pbsv discover $bam ${sampleID}.svsig.gz\n  pbsv call $fasta ${sampleID}.svsig.gz ${sampleID}.svsig.vcf\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  pbsv discover $bam ${sampleID}.svsig.gz\n  pbsv call $fasta ${sampleID}.svsig.gz ${sampleID}.svsig.vcf\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pbsv_fasta",
            "pbsv_bam"
        ],
        "nb_inputs": 2,
        "outputs": [
            "pbsv_vcf",
            "pbsv_complete"
        ],
        "nb_outputs": 2,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/$sampleID/pbsv\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "pbsv_vcf": {
        "name_process": "pbsv_vcf",
        "string_process": "\nprocess pbsv_vcf {\n\n  publishDir \"$params.outDir/$sampleID/pbsv\", mode: \"copy\"\n\n  input:\n  set val(sampleID), file(\"${sampleID}.svsig.vcf\") from pbsv_vcf\n\n  output:\n  file('*') into pbsv_complete2\n\n  script:\n  \"\"\"\n  pbsv discover $bam ${sampleID}.svsig.gz\n  pbsv call $fasta ${sampleID}.svsig.gz ${sampleID}.svsig.vcf\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  pbsv discover $bam ${sampleID}.svsig.gz\n  pbsv call $fasta ${sampleID}.svsig.gz ${sampleID}.svsig.vcf\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "pbsv_vcf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pbsv_complete2"
        ],
        "nb_outputs": 1,
        "name_workflow": "brucemoran__nanopore_gDNA_CNA",
        "directive": [
            "publishDir \"$params.outDir/$sampleID/pbsv\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}