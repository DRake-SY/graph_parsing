{
    "blast_swissprot": {
        "name_process": "blast_swissprot",
        "string_process": "\nprocess blast_swissprot {\n   module \"blast/2.8.1\" \n   publishDir \"query_results_chunks\"\n\n   input:\n      file query from query_ch\n      \n   output:\n      file 'swiss.fq' into match_ch\n\n   script:\n   \"\"\"\n      blastp \\\n       -query $query \\\n       -db ${params.database} \\\n       -num_threads ${task.cpus} \\\n       -outfmt 6 \\\n       -evalue 1e-6 > swiss.fq \n   \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "   \"\"\"\n      blastp \\\n       -query $query \\\n       -db ${params.database} \\\n       -num_threads ${task.cpus} \\\n       -outfmt 6 \\\n       -evalue 1e-6 > swiss.fq \n   \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "BLASTP-ACC"
        ],
        "tools_url": [
            "https://bio.tools/BLASTP-ACC"
        ],
        "tools_dico": [
            {
                "name": "BLASTP-ACC",
                "uri": "https://bio.tools/BLASTP-ACC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3297",
                            "term": "Biotechnology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Structural bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0081",
                            "term": "Biomolecular structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Database search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3802",
                                    "term": "Sorting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Local sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0495",
                                    "term": "Sequence alignment (local)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2421",
                                    "term": "Search"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parallel Architecture and Hardware Accelerator Design for BLAST-based Protein Sequence Alignment.\n\nIn this study, we design a hardware accelerator for a widely used sequence alignment algorithm, the basic local alignment search tool for proteins (BLASTP). The architecture of the proposed accelerator consists of five stages: a new systolic-array-based one-hit finding stage, a novel RAM-REG-based two-hit finding stage, a refined ungapped extension stage, a faster gapped extension stage, and a highly efficient parallel sorter. The system is implemented on an Altera Stratix V FPGA with a processing speed of more than 500 giga cell updates per second (GCUPS). It can receive a query sequence, compare it with the sequences in the database, and generate a list sorted in descending order of the similarity scores between the query sequence and the subject sequences.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'accelerator', 'Altera', 'Stratix', 'RAM-REG-based'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31581096"
            }
        ],
        "inputs": [
            "query_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "match_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "fullerharrison__afs505_u3_project",
        "directive": [
            "module \"blast/2.8.1\"",
            "publishDir \"query_results_chunks\""
        ],
        "when": "",
        "stub": ""
    },
    "collect": {
        "name_process": "collect",
        "string_process": "\nprocess collect {\n   publishDir \"query_collected_data\"\n   input:\n      file '*.fq' from match_ch.collect()                                         \n   output:\n      file 'done.txt' into last_leg                                                   \n   \"\"\"\n      cat *.fq > done.txt\n   \"\"\"\n}",
        "nb_lignes_process": 9,
        "string_script": "\"\"\"\n      cat *.fq > done.txt\n   \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "match_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "last_leg"
        ],
        "nb_outputs": 1,
        "name_workflow": "fullerharrison__afs505_u3_project",
        "directive": [
            "publishDir \"query_collected_data\""
        ],
        "when": "",
        "stub": ""
    },
    "sortSwiss": {
        "name_process": "sortSwiss",
        "string_process": "\nprocess sortSwiss {\n   publishDir \"query_sorted_data\"\n\n   input:\n      file sort from last_leg\n\n   output:\n      file 'Project_3.txt' into Complete\n\t\n   shell:\n\n$/\nsed -E 's/\\..*\\t/\\t/g' $sort | awk '{A[$1]++}END{for(i in A)print i, '\\t', A[i]}'  | sort -n -r -k 2  > Project_3.txt\n/$\n\n}",
        "nb_lignes_process": 15,
        "string_script": "$/\nsed -E 's/\\..*\\t/\\t/g' $sort | awk '{A[$1]++}END{for(i in A)print i, '\\t', A[i]}'  | sort -n -r -k 2  > Project_3.txt\n/$",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "last_leg"
        ],
        "nb_inputs": 1,
        "outputs": [
            "Complete"
        ],
        "nb_outputs": 1,
        "name_workflow": "fullerharrison__afs505_u3_project",
        "directive": [
            "publishDir \"query_sorted_data\""
        ],
        "when": "",
        "stub": ""
    }
}