{
    "with_cpus": {
        "name_process": "with_cpus",
        "string_process": " process with_cpus {\n            tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}, ${task.container}\"\n            label 'with_cpus'\n            publishDir \"${params.outdir}/cpu_mode/task_${rep}/\", mode: \"copy\"\n\n            input:\n            val(rep) from ch_reps\n\n            output:\n            file(\"cpu_compute_metadata.json\") optional true into my_output_files\n            file(\"*\") optional true\n\n            script:\n            if ( params.executor == 'google-lifesciences' )\n            \"\"\"\n            echo \"executor : ${params.executor}\"\n            echo \"rep: ${rep}\"\n            curl \"http://169.254.169.254/computeMetadata/v1/?recursive=true&alt=json\" -H \"Metadata-Flavor: Google\" > \"${rep}_cpu_compute_metadata.json\"\n            \"\"\"\n            else\n            \"\"\"\n            cat .command.run > command.run\n            echo \"executor : ${params.executor}\"\n            echo \"rep: ${rep}\"\n            ${params.script}\n            \"\"\"\n        }",
        "nb_lignes_process": 25,
        "string_script": "            if ( params.executor == 'google-lifesciences' )\n            \"\"\"\n            echo \"executor : ${params.executor}\"\n            echo \"rep: ${rep}\"\n            curl \"http://169.254.169.254/computeMetadata/v1/?recursive=true&alt=json\" -H \"Metadata-Flavor: Google\" > \"${rep}_cpu_compute_metadata.json\"\n            \"\"\"\n            else\n            \"\"\"\n            cat .command.run > command.run\n            echo \"executor : ${params.executor}\"\n            echo \"rep: ${rep}\"\n            ${params.script}\n            \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "CURLS"
        ],
        "tools_url": [
            "https://bio.tools/CURLS"
        ],
        "tools_dico": [
            {
                "name": "CURLS",
                "uri": "https://bio.tools/CURLS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "Public health and epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3335",
                            "term": "Cardiovascular medicine"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Public_health"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3305",
                            "term": "https://en.wikipedia.org/wiki/Epidemiology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3421",
                            "term": "https://en.wikipedia.org/wiki/Surgery"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "towards a wider use of basic echo applications in Africa.\n\nBACKGROUND:Point-of-care ultrasound is increasingly being used as a diagnostic tool in resource-limited settings. The majority of existing ultrasound protocols have been developed and implemented in high-resource settings. In sub-Saharan Africa (SSA), patients with heart failure of various etiologies commonly present late in the disease process, with a similar syndrome of dyspnea, edema and cardiomegaly on chest X-ray. The causes of heart failure in SSA differ from those in high-resource settings. Point-of-care ultrasound has the potential to identify the underlying etiology of heart failure, and lead to targeted therapy.\n\n||| HOMEPAGE MISSING!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'ultrasound', 'Cardiac ultrasound resource-limited settings', 'high-resource', 'cardiomegaly SSA'",
                "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31883027"
            }
        ],
        "inputs": [
            "ch_reps"
        ],
        "nb_inputs": 1,
        "outputs": [
            "my_output_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__gpu-nf",
        "directive": [
            "tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}, ${task.container}\"",
            "label 'with_cpus'",
            "publishDir \"${params.outdir}/cpu_mode/task_${rep}/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "gpu_mode": {
        "name_process": "gpu_mode",
        "string_process": " process gpu_mode {\n        tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}, ${task.container}\"\n        label (params.gpu_mode ? 'with_gpus': 'with_cpus')\n        publishDir \"${params.outdir}/gpu_mode/task_${rep}/\", mode: \"copy\"\n\n        input:\n        val(rep) from ch_reps\n\n        output:\n        file(\"*\") optional true\n\n        script:\n        \"\"\"\n        cat .command.run > command.run\n        echo \"executor : ${params.executor}\"\n        echo \"rep: ${rep}\"\n        ${params.script}\n        \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        cat .command.run > command.run\n        echo \"executor : ${params.executor}\"\n        echo \"rep: ${rep}\"\n        ${params.script}\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_reps"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lifebit-ai__gpu-nf",
        "directive": [
            "tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}, ${task.container}\"",
            "label (params.gpu_mode ? 'with_gpus': 'with_cpus')",
            "publishDir \"${params.outdir}/gpu_mode/task_${rep}/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "pbrun_mode": {
        "name_process": "pbrun_mode",
        "string_process": " process pbrun_mode {\n        tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}\"\n        label 'pbrun'\n        publishDir \"${params.outdir}/pbrun/task_${rep}/\", mode: \"copy\"\n\n        input:\n        val(rep) from ch_reps\n\n        output:\n        file(\"*\") optional true\n\n        script:\n        \"\"\"\n        cat .command.run > command.run\n        echo \"executor : ${params.executor}\"\n        echo \"rep: ${rep}\"\n        ${params.script}\n        \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        cat .command.run > command.run\n        echo \"executor : ${params.executor}\"\n        echo \"rep: ${rep}\"\n        ${params.script}\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_reps"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lifebit-ai__gpu-nf",
        "directive": [
            "tag \"cpus: ${task.cpus},mem: ${task.memory} | rep: ${rep}\"",
            "label 'pbrun'",
            "publishDir \"${params.outdir}/pbrun/task_${rep}/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    }
}