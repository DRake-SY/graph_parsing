{
    "BedToIntervalList": {
        "name_process": "BedToIntervalList",
        "string_process": "\nprocess BedToIntervalList {\n    tag \"$bed\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(name), file(bed) from bed_interval\n    file dict from dict_interval\n\n    output:\n    file(\"${name}.interval_list\") into interval_list\n\n    when: params.bed\n\n    script:\n    \"\"\"\n    gatk BedToIntervalList \\\n    -I ${bed} \\\n    -O ${name}.interval_list \\\n    -SD ${dict}\n\n    # remove header, columns 3 onwards & reformat\n    sed -i '/^@/d' ${name}.interval_list\n    cut -f 1-3 ${name}.interval_list > tmp.interval_list\n    awk 'BEGIN { OFS = \"\" }{ print \\$1,\":\",\\$2,\"-\",\\$3 }' tmp.interval_list > ${name}.interval_list\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    gatk BedToIntervalList \\\n    -I ${bed} \\\n    -O ${name}.interval_list \\\n    -SD ${dict}\n\n    # remove header, columns 3 onwards & reformat\n    sed -i '/^@/d' ${name}.interval_list\n    cut -f 1-3 ${name}.interval_list > tmp.interval_list\n    awk 'BEGIN { OFS = \"\" }{ print \\$1,\":\",\\$2,\"-\",\\$3 }' tmp.interval_list > ${name}.interval_list\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bed_interval",
            "dict_interval"
        ],
        "nb_inputs": 2,
        "outputs": [
            "interval_list"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bed\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_dbsnp": {
        "name_process": "gunzip_dbsnp",
        "string_process": "\nprocess gunzip_dbsnp {\n    tag \"$dbsnp_gz\"\n\n    input:\n    file dbsnp_gz from dbsnp_gz\n    file dbsnp_idx_gz from dbsnp_idx_gz\n\n  \toutput:\n  \tfile \"*.vcf\" into dbsnp, dbsnp_variantrecalibrator_snps, dbsnp_variantrecalibrator_indels\n  \tfile \"*.vcf.idx\" into dbsnp_idx, dbsnp_idx_variantrecalibrator_snps, dbsnp_idx_variantrecalibrator_indels\n\n    script:\n    if ( \"${dbsnp_gz}\".endsWith(\".gz\") ) {\n     \"\"\"\n     gunzip -d --force $dbsnp_gz\n   \t gunzip -d --force $dbsnp_idx_gz\n     \"\"\"\n   } else {\n     \"\"\"\n     cp $dbsnp_gz dbsnp.vcf\n     cp $dbsnp_idx_gz dbsnp.vcf.idx\n     \"\"\"\n   }\n}",
        "nb_lignes_process": 23,
        "string_script": "    if ( \"${dbsnp_gz}\".endsWith(\".gz\") ) {\n     \"\"\"\n     gunzip -d --force $dbsnp_gz\n   \t gunzip -d --force $dbsnp_idx_gz\n     \"\"\"\n   } else {\n     \"\"\"\n     cp $dbsnp_gz dbsnp.vcf\n     cp $dbsnp_idx_gz dbsnp.vcf.idx\n     \"\"\"\n   }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "dbsnp_gz",
            "dbsnp_idx_gz"
        ],
        "nb_inputs": 2,
        "outputs": [
            "dbsnp",
            "dbsnp_variantrecalibrator_snps",
            "dbsnp_variantrecalibrator_indels",
            "dbsnp_idx",
            "dbsnp_idx_variantrecalibrator_snps",
            "dbsnp_idx_variantrecalibrator_indels"
        ],
        "nb_outputs": 6,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$dbsnp_gz\""
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_golden_indel": {
        "name_process": "gunzip_golden_indel",
        "string_process": "\nprocess gunzip_golden_indel {\n    tag \"$golden_indel_gz\"\n\n    input:\n    file golden_indel_gz from golden_indel_gz\n    file golden_indel_idx_gz from golden_indel_idx_gz\n\n    output:\n    file \"*.vcf\" into golden_indel, golden_indel_variantrecalibrator_indels\n    file \"*.vcf.idx\" into golden_indel_idx, golden_indel_idx_variantrecalibrator_indels\n\n    script:\n    if ( \"${golden_indel_gz}\".endsWith(\".gz\") ) {\n        \"\"\"\n        gunzip -d --force $golden_indel_gz\n        gunzip -d --force $golden_indel_idx_gz\n        \"\"\"\n    } else {\n        \"\"\"\n        cp $golden_indel_gz golden_indel.vcf\n        cp $golden_indel_idx_gz golden_indel.vcf.idx\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 23,
        "string_script": "    if ( \"${golden_indel_gz}\".endsWith(\".gz\") ) {\n        \"\"\"\n        gunzip -d --force $golden_indel_gz\n        gunzip -d --force $golden_indel_idx_gz\n        \"\"\"\n    } else {\n        \"\"\"\n        cp $golden_indel_gz golden_indel.vcf\n        cp $golden_indel_idx_gz golden_indel.vcf.idx\n        \"\"\"\n    }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "golden_indel_gz",
            "golden_indel_idx_gz"
        ],
        "nb_inputs": 2,
        "outputs": [
            "golden_indel",
            "golden_indel_variantrecalibrator_indels",
            "golden_indel_idx",
            "golden_indel_idx_variantrecalibrator_indels"
        ],
        "nb_outputs": 4,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$golden_indel_gz\""
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n    container 'flowcraft/fastqc:0.11.7-1'\n\n    when:\n    !params.skip_fastqc\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(reads) from reads\n\n    output:\n    file \"*_fastqc.{zip,html}\" into fastqc_results\n\n    script:\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}",
            "container 'flowcraft/fastqc:0.11.7-1'"
        ],
        "when": "!params.skip_fastqc",
        "stub": ""
    },
    "BWA": {
        "name_process": "BWA",
        "string_process": "\nprocess BWA {\n    tag \"$name\"\n    container 'kathrinklee/bwa:latest'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(reads),\n    file(fasta), file(amb), file(ann), file(bwt), file(pac), file(sa) from bwa\n\n    output:\n    set val(patientId), val(sampleId), val(status), val(name), file(\"${name}.sam\") into sam\n\n    \"\"\"\n    bwa mem -M -R '@RG\\\\tID:${name}\\\\tSM:${name}\\\\tPL:Illumina' $fasta $reads > ${name}.sam\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    bwa mem -M -R '@RG\\\\tID:${name}\\\\tSM:${name}\\\\tPL:Illumina' $fasta $reads > ${name}.sam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "bwa"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sam"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$name\"",
            "container 'kathrinklee/bwa:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "BWA_sort": {
        "name_process": "BWA_sort",
        "string_process": "\nprocess BWA_sort {\n    tag \"$sam\"\n    container 'lifebitai/samtools:latest'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(sam) from sam\n\n    output:\n    set val(patientId), val(sampleId), val(status), val(name), file(\"${name}-sorted.bam\") into bam_sort, bam_sort_qc\n\n    \"\"\"\n    samtools sort -o ${name}-sorted.bam -O BAM $sam\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    samtools sort -o ${name}-sorted.bam -O BAM $sam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_sort",
            "bam_sort_qc"
        ],
        "nb_outputs": 2,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$sam\"",
            "container 'lifebitai/samtools:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCmapped": {
        "name_process": "RunBamQCmapped",
        "string_process": "\nprocess RunBamQCmapped {\n    tag \"$bam\"\n\n    container 'maxulysse/sarek:latest'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam) from bam_sort_qc\n\n    output:\n    file(\"${name}\") into bamQCmappedReport\n\n    when: !params.skip_multiqc\n\n    script:\n                                                         \n    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name} \\\n    -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name} \\\n    -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bam_sort_qc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bamQCmappedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bam\"",
            "container 'maxulysse/sarek:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "MarkDuplicates": {
        "name_process": "MarkDuplicates",
        "string_process": "\nprocess MarkDuplicates {\n    tag \"$bam_sort\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam_sort) from bam_sort\n\n    output:\n    set val(name), file(\"${name}.bam\"), file(\"${name}.bai\"), val(patientId), val(sampleId), val(status) into bam_markdup_baserecalibrator, bam_markdup_applybqsr\n    file (\"${name}.bam.metrics\") into markDuplicatesReport\n\n    \"\"\"\n    gatk MarkDuplicates \\\n    -I ${bam_sort} \\\n    --CREATE_INDEX true \\\n    -M ${name}.bam.metrics \\\n    -O ${name}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    gatk MarkDuplicates \\\n    -I ${bam_sort} \\\n    --CREATE_INDEX true \\\n    -M ${name}.bam.metrics \\\n    -O ${name}.bam\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam_sort"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_markdup_baserecalibrator",
            "bam_markdup_applybqsr",
            "markDuplicatesReport"
        ],
        "nb_outputs": 3,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bam_sort\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "BaseRecalibrator": {
        "name_process": "BaseRecalibrator",
        "string_process": "\nprocess BaseRecalibrator {\n    tag \"$bam_markdup\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(name), file(bam_markdup), file(bai), val(patientId), val(sampleId), val(status), \n    file(fasta), file(fai), file(dict), file(dbsnp), file(dbsnp_idx), file(golden_indel), file(golden_indel_idx) from baserecalibrator\n\n    output:\n    set val(name), file(\"${name}_recal_data.table\") into baserecalibrator_table\n    file(\"*data.table\") into baseRecalibratorReport\n\n    \"\"\"\n    gatk BaseRecalibrator \\\n    -I $bam_markdup \\\n    --known-sites $dbsnp \\\n    --known-sites $golden_indel \\\n    -O ${name}_recal_data.table \\\n    -R $fasta\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\"\"\"\n    gatk BaseRecalibrator \\\n    -I $bam_markdup \\\n    --known-sites $dbsnp \\\n    --known-sites $golden_indel \\\n    -O ${name}_recal_data.table \\\n    -R $fasta\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "baserecalibrator"
        ],
        "nb_inputs": 1,
        "outputs": [
            "baserecalibrator_table",
            "baseRecalibratorReport"
        ],
        "nb_outputs": 2,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bam_markdup\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "ApplyBQSR": {
        "name_process": "ApplyBQSR",
        "string_process": "\nprocess ApplyBQSR {\n    tag \"$baserecalibrator_table\"\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    set val(name), file(baserecalibrator_table), file(bam), file(bai), val(patientId), val(sampleId), val(status) from applybqsr\n\n    output:\n    set val(patientId), val(sampleId), val(status), val(name), file(\"${name}_bqsr.bam\"), file(\"${name}_bqsr.bai\") into bam_for_qc, bam_haplotypecaller, bam_mutect\n\n    script:\n    \"\"\"\n    gatk ApplyBQSR -I $bam -bqsr $baserecalibrator_table -OBI -O ${name}_bqsr.bam\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    gatk ApplyBQSR -I $bam -bqsr $baserecalibrator_table -OBI -O ${name}_bqsr.bam\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "applybqsr"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_for_qc",
            "bam_haplotypecaller",
            "bam_mutect"
        ],
        "nb_outputs": 3,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$baserecalibrator_table\"",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "RunBamQCrecalibrated": {
        "name_process": "RunBamQCrecalibrated",
        "string_process": "\nprocess RunBamQCrecalibrated {\n    tag \"$bam\"\n\n    container 'maxulysse/sarek:latest'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam), file(bai) from bam_for_qc\n\n    output:\n    file(\"${name}_recalibrated\") into bamQCrecalibratedReport\n\n    when: !params.skip_multiqc\n\n    script:\n                                                           \n    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name}_recalibrated \\\n    -outformat HTML\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    qualimap \\\n    bamqc \\\n    -bam ${bam} \\\n    --paint-chromosome-limits \\\n    --genome-gc-distr HUMAN \\\n    -nt ${task.cpus} \\\n    -skip-duplicated \\\n    --skip-dup-mode 0 \\\n    -outdir ${name}_recalibrated \\\n    -outformat HTML\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "bam_for_qc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bamQCrecalibratedReport"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bam\"",
            "container 'maxulysse/sarek:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "HaplotypeCaller": {
        "name_process": "HaplotypeCaller",
        "string_process": "\nprocess HaplotypeCaller {\n    tag \"$intervals\"\n    container 'broadinstitute/gatk:latest'\n\n    memory threadmem\n\n    input:\n    set val(intervals), file(fasta), file(fai), file(dict),\n    val(patientId), val(sampleId), val(status), val(name), file(bam), file(bai) from haplotypecaller\n\n    output:\n    file(\"${name}.g.vcf\") into haplotypecaller_gvcf\n    file(\"${name}.g.vcf.idx\") into index\n    val(name) into name_mergevcfs\n\n    when: !params.skip_haplotypecaller\n\n    script:\n    \"\"\"\n    gatk HaplotypeCaller \\\n    --java-options -Xmx${task.memory.toMega()}M \\\n    -R $fasta \\\n    -O ${name}.g.vcf \\\n    -I $bam \\\n    -ERC GVCF \\\n    -L $intervals\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n    gatk HaplotypeCaller \\\n    --java-options -Xmx${task.memory.toMega()}M \\\n    -R $fasta \\\n    -O ${name}.g.vcf \\\n    -I $bam \\\n    -ERC GVCF \\\n    -L $intervals\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "haplotypecaller"
        ],
        "nb_inputs": 1,
        "outputs": [
            "haplotypecaller_gvcf",
            "index",
            "name_mergevcfs"
        ],
        "nb_outputs": 3,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$intervals\"",
            "container 'broadinstitute/gatk:latest'",
            "memory threadmem"
        ],
        "when": "",
        "stub": ""
    },
    "MergeVCFs": {
        "name_process": "MergeVCFs",
        "string_process": "\nprocess MergeVCFs {\n    tag \"${name[0]}.g.vcf\"\n    publishDir \"${params.outdir}/GermlineVariantCalling\", mode: 'copy'\n    container 'broadinstitute/gatk:latest'\n\n    input:\n    file ('*.g.vcf') from haplotypecaller_gvcf.collect()\n    file ('*.g.vcf.idx') from index.collect()\n    val name from name_mergevcfs.collect()\n\n    output:\n    set file(\"${name[0]}.g.vcf\"), file(\"${name[0]}.g.vcf.idx\") into mergevcfs\n\n    script:\n    \"\"\"\n    ## make list of input variant files\n    for vcf in \\$(ls *vcf); do\n    echo \\$vcf >> input_variant_files.list\n    done\n    gatk MergeVcfs \\\n    --INPUT= input_variant_files.list \\\n    --OUTPUT= ${name[0]}.g.vcf\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n    ## make list of input variant files\n    for vcf in \\$(ls *vcf); do\n    echo \\$vcf >> input_variant_files.list\n    done\n    gatk MergeVcfs \\\n    --INPUT= input_variant_files.list \\\n    --OUTPUT= ${name[0]}.g.vcf\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "haplotypecaller_gvcf",
            "index",
            "name_mergevcfs"
        ],
        "nb_inputs": 3,
        "outputs": [
            "mergevcfs"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"${name[0]}.g.vcf\"",
            "publishDir \"${params.outdir}/GermlineVariantCalling\", mode: 'copy'",
            "container 'broadinstitute/gatk:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "Mutect2": {
        "name_process": "Mutect2",
        "string_process": "\nprocess Mutect2 {\n    tag \"$bam\"\n    container 'broadinstitute/gatk:latest'\n    publishDir \"${params.outdir}/Somatic\", mode: 'copy'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam), file(bai),\n    val(tumourSampleId), val(tumourStatus), val(tumourName), file(tumourBam), file(tumourBai),\n    file(fasta), file(fai), file(dict) from mutect\n\n    output:\n    set val(\"${tumourSampleId}_vs_${sampleId}\"), file(\"${tumourSampleId}_vs_${sampleId}.vcf\") into vcf_variant_eval\n\n    script:\n    \"\"\"\n    gatk Mutect2 \\\n    -R ${fasta}\\\n    -I ${tumourBam}  -tumor ${tumourName} \\\n    -I ${bam} -normal ${name} \\\n    -O ${tumourSampleId}_vs_${sampleId}.vcf\n\n    #gatk --java-options \"-Xmx\\${task.memory.toGiga()}g\" \\\n    #-L \\${intervalBed} \\\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    gatk Mutect2 \\\n    -R ${fasta}\\\n    -I ${tumourBam}  -tumor ${tumourName} \\\n    -I ${bam} -normal ${name} \\\n    -O ${tumourSampleId}_vs_${sampleId}.vcf\n\n    #gatk --java-options \"-Xmx\\${task.memory.toGiga()}g\" \\\n    #-L \\${intervalBed} \\\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "mutect"
        ],
        "nb_inputs": 1,
        "outputs": [
            "vcf_variant_eval"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$bam\"",
            "container 'broadinstitute/gatk:latest'",
            "publishDir \"${params.outdir}/Somatic\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "Manta": {
        "name_process": "Manta",
        "string_process": "\nprocess Manta {\n    tag {tumourSampleId + \"_vs_\" + sampleId}\n    container 'maxulysse/sarek:latest'\n    publishDir \"${params.outdir}/StructuralVariance/${patientId}\", mode: 'copy'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(bam), file(bai),\n    val(tumourSampleId), val(tumourStatus), val(tumourName), file(tumourBam), file(tumourBai),\n    file(fasta), file(fai), file(dict), file(bed) from manta\n\n    output:\n    set val(patientId), val(sampleId), val(tumourSampleId), file(\"*.vcf.gz\"), file(\"*.vcf.gz.tbi\") into manta_results\n    \n    script:\n    beforeScript = params.bed ? \"bgzip --threads ${task.cpus} -c *.bed > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n    --normalBam ${bam} \\\n    --tumorBam ${tumourBam} \\\n    --reference ${fasta} \\\n    ${options} \\\n    --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.somaticSV.vcf.gz.tbi\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "    beforeScript = params.bed ? \"bgzip --threads ${task.cpus} -c *.bed > call_targets.bed.gz ; tabix call_targets.bed.gz\" : \"\"\n    options = params.bed ? \"--exome --callRegions call_targets.bed.gz\" : \"\"\n    \"\"\"\n    ${beforeScript}\n    configManta.py \\\n    --normalBam ${bam} \\\n    --tumorBam ${tumourBam} \\\n    --reference ${fasta} \\\n    ${options} \\\n    --runDir Manta\n\n    python Manta/runWorkflow.py -m local -j ${task.cpus}\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSmallIndels.vcf.gz\n    mv Manta/results/variants/candidateSmallIndels.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSmallIndels.vcf.gz.tbi\n    mv Manta/results/variants/candidateSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSV.vcf.gz\n    mv Manta/results/variants/candidateSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.candidateSV.vcf.gz.tbi\n    mv Manta/results/variants/diploidSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.diploidSV.vcf.gz\n    mv Manta/results/variants/diploidSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.diploidSV.vcf.gz.tbi\n    mv Manta/results/variants/somaticSV.vcf.gz \\\n        Manta_${tumourSampleId}_vs_${sampleId}.somaticSV.vcf.gz\n    mv Manta/results/variants/somaticSV.vcf.gz.tbi \\\n        Manta_${tumourSampleId}_vs_${sampleId}.somaticSV.vcf.gz.tbi\n    \"\"\"",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "manta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "manta_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag {tumourSampleId + \"_vs_\" + sampleId}",
            "container 'maxulysse/sarek:latest'",
            "publishDir \"${params.outdir}/StructuralVariance/${patientId}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "kraken2": {
        "name_process": "kraken2",
        "string_process": "\nprocess kraken2 {\n    tag \"$name\"\n    publishDir \"${params.outdir}/kraken/${patientId}\", mode: 'copy'\n    container 'flowcraft/kraken2:2.0.7-1'\n\n    input:\n    set val(patientId), val(sampleId), val(status), val(name), file(reads) from reads_kraken\n\n    output:\n    set file(\"${sampleId}_kraken.out\"), file(\"${sampleId}_kraken.report\") into kraken_results\n\n    script:\n    \"\"\"\n    kraken2 \\\n    --threads ${task.cpus} \\\n    --paired \\\n    --db ${kraken_db} \\\n    --fastq-input $reads \\\n    --output ${sampleId}_kraken.out \\\n    --report ${sampleId}_kraken.report\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    kraken2 \\\n    --threads ${task.cpus} \\\n    --paired \\\n    --db ${kraken_db} \\\n    --fastq-input $reads \\\n    --output ${sampleId}_kraken.out \\\n    --report ${sampleId}_kraken.report\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "reads_kraken"
        ],
        "nb_inputs": 1,
        "outputs": [
            "kraken_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/kraken/${patientId}\", mode: 'copy'",
            "container 'flowcraft/kraken2:2.0.7-1'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n    container 'ewels/multiqc:v1.7'\n\n    when:\n    !params.skip_multiqc\n\n    input:\n    file (fastqc:'fastqc/*') from fastqc_results.collect().ifEmpty([])\n    file (bam_metrics) from markDuplicatesReport.collect().ifEmpty([])\n    file (bamQC) from bamQCmappedReport.collect().ifEmpty([])\n    file (bamQCrecalibrated) from bamQCrecalibratedReport.collect().ifEmpty([])\n    file (baseRecalibrator) from baseRecalibratorReport.collect().ifEmpty([])\n    \n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\"\n\n    script:\n    \"\"\"\n    multiqc . -m fastqc -m picard -m qualimap -m gatk\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    multiqc . -m fastqc -m picard -m qualimap -m gatk\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_results",
            "markDuplicatesReport",
            "bamQCmappedReport",
            "bamQCrecalibratedReport",
            "baseRecalibratorReport"
        ],
        "nb_inputs": 5,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "lifebit-ai__somatic-variant-caller",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'",
            "container 'ewels/multiqc:v1.7'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    }
}