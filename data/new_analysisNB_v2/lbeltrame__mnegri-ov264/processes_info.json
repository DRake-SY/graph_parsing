{
    "size_selection": {
        "name_process": "size_selection",
        "string_process": "\nprocess size_selection {\n\n    cpus 8\n\n    publishDir \"${params.outdir}/${patient}/bams/\", mode: \"copy\"\n    input:\n    set patient, sample, file(bamfile), type from size_select_ch\n\n    output:\n    tuple file(\"${sample}_${type}_ready.bam\"), file(\"${sample}_${type}_ready.bam.bai\"), sample, type, patient into processed_bam_ch\n\n    script:\n    dest = \"${sample}_${type}_ready.bam\"\n    if (type == \"cfdna\") {\n    \"\"\"\n    ${params.bam_size_select} single --index-source $bamfile ${dest} -c ${task.cpus}\n    \"\"\"\n    } else {\n    \"\"\"\n    cp -a $bamfile ${dest}\n    samtools index -@${task.cpus} ${dest}\n    \"\"\"\n    }\n\n}",
        "nb_lignes_process": 24,
        "string_script": "    dest = \"${sample}_${type}_ready.bam\"\n    if (type == \"cfdna\") {\n    \"\"\"\n    ${params.bam_size_select} single --index-source $bamfile ${dest} -c ${task.cpus}\n    \"\"\"\n    } else {\n    \"\"\"\n    cp -a $bamfile ${dest}\n    samtools index -@${task.cpus} ${dest}\n    \"\"\"\n    }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "MODEST",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/modest",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "MODEST",
                "uri": "https://bio.tools/modest",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0130",
                            "term": "Protein folding, stability and design"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3125",
                            "term": "DNA binding sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0451",
                                    "term": "Recombination detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0331",
                                    "term": "Variant effect prediction"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "PCR primer prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0308",
                                    "term": "Primer design"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0451",
                                    "term": "Sequence alignment analysis (recombination detection)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0331",
                                    "term": "Variant functional prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "MODEST: A web-based tool for rapid and effective design of optimal multiplex automated genome engineering (MAGE) oligos based on simple input, to achieve any mutation possible with MAGE. The tool is useful in oligonucleotide-mediated genome engineering and recombineering.",
                "homepage": "http://modest.biosustain.dtu.dk"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "size_select_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "processed_bam_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "lbeltrame__mnegri-ov264",
        "directive": [
            "cpus 8",
            "publishDir \"${params.outdir}/${patient}/bams/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "read_counter": {
        "name_process": "read_counter",
        "string_process": "\nprocess read_counter {\n\n    cpus 8\n\n    publishDir \"${params.outdir}/${patient}/wigs/\", mode: \"copy\"\n    input:\n    set file(bamfile), file(bamindex), sample, type, patient from processed_bam_ch\n    output:\n    tuple file(\"${sample}.${type}.bin${params.readcounter_binsize}.wig\"), sample, type, patient into wigfiles_ch\n    script:\n\n    \"\"\"\n    ${params.readcounter_path}  \\\n        --chromosome ${params.readcounter_chrs} \\\n        --window ${params.readcounter_binsize} \\\n        --quality ${params.readcounter_quality} \\\n        $bamfile \\\n        > ${sample}.${type}.bin${params.readcounter_binsize}.wig\n    \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    ${params.readcounter_path}  \\\n        --chromosome ${params.readcounter_chrs} \\\n        --window ${params.readcounter_binsize} \\\n        --quality ${params.readcounter_quality} \\\n        $bamfile \\\n        > ${sample}.${type}.bin${params.readcounter_binsize}.wig\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "processed_bam_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "wigfiles_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "lbeltrame__mnegri-ov264",
        "directive": [
            "cpus 8",
            "publishDir \"${params.outdir}/${patient}/wigs/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "ichorCNA": {
        "name_process": "ichorCNA",
        "string_process": "\nprocess ichorCNA {\n\n    publishDir \"${params.outdir}/${patient}/\", mode: \"copy\"\n    input:\n    set file(wigfile), sample, type, patient from wigfiles_ch\n\n    output:\n    file \"*.seg.txt\"\n    file \"*.correctedDepth.txt\"\n    file \"*.params.txt\" into postprocess_ch\n    file \"*.seg\"\n    file \"*.RData\"\n    path \"${sample}\"\n\n    script:\n\n    ploidy = \"c(2,3)\"\n    compute_sc = \"TRUE\"\n    compute_ploidy = \"TRUE\"\n    sc_states = \"c(1,3)\"\n    normal = \"c(0.5,0.6,0.7,0.8,0.9,0.95)\"\n\n    if (type == \"cfdna\") {\n        ploidy = \"c(2)\"\n        compute_sc = \"FALSE\"\n        compute_ploidy = \"FALSE\"\n        sc_states = \"c()\"\n        normal = \"c(0.90, 0.98, 0.99, 0.995, 0.999)\"\n    }\n\n    \"\"\"\n    mkdir -p ${sample}\n    /usr/bin/Rscript ${params.ichorcna_script} \\\n            --id $sample \\\n            --WIG $wigfile \\\n            --gcWig ${params.gcwig} \\\n            --mapWig ${params.mapwig} \\\n            --centromere ${params.centromere} \\\n            --normalPanel ${params.normal_panel} \\\n            --estimatePloidy ${compute_ploidy} \\\n            --estimateScPrevalence ${compute_sc} \\\n            --estimateNormal ${params.estimate_normal} \\\n            --libdir \"${params.ichorcna_libdir}\" \\\n            --normal \"${normal}\" \\\n            --maxCN ${params.max_cn} \\\n            --scStates \"${sc_states}\" \\\n            --txnE ${params.txe} \\\n            --txnStrength ${params.tx_strength} \\\n            --minMapScore ${params.min_map_score} \\\n            --fracReadsInChrYForMale ${params.fraction_reads_male} \\\n            --maxFracGenomeSubclone ${params.max_frac_genome_subclone} \\\n            --maxFracCNASubclone ${params.max_frac_cna_subclone} \\\n            --includeHOMD ${params.include_homd} \\\n            --chrs \"${params.chrs_to_use}\" \\\n            --chrTrain \"${params.chrs_to_train}\" \\\n            --genomeStyle \"${params.genome_style}\" \\\n            --plotFileType \"${params.plotfiletype}\" \\\n            --plotYLim \"${params.plotylim}\" \\\n            --outDir ./\n    \"\"\"\n}",
        "nb_lignes_process": 60,
        "string_script": "    ploidy = \"c(2,3)\"\n    compute_sc = \"TRUE\"\n    compute_ploidy = \"TRUE\"\n    sc_states = \"c(1,3)\"\n    normal = \"c(0.5,0.6,0.7,0.8,0.9,0.95)\"\n\n    if (type == \"cfdna\") {\n        ploidy = \"c(2)\"\n        compute_sc = \"FALSE\"\n        compute_ploidy = \"FALSE\"\n        sc_states = \"c()\"\n        normal = \"c(0.90, 0.98, 0.99, 0.995, 0.999)\"\n    }\n\n    \"\"\"\n    mkdir -p ${sample}\n    /usr/bin/Rscript ${params.ichorcna_script} \\\n            --id $sample \\\n            --WIG $wigfile \\\n            --gcWig ${params.gcwig} \\\n            --mapWig ${params.mapwig} \\\n            --centromere ${params.centromere} \\\n            --normalPanel ${params.normal_panel} \\\n            --estimatePloidy ${compute_ploidy} \\\n            --estimateScPrevalence ${compute_sc} \\\n            --estimateNormal ${params.estimate_normal} \\\n            --libdir \"${params.ichorcna_libdir}\" \\\n            --normal \"${normal}\" \\\n            --maxCN ${params.max_cn} \\\n            --scStates \"${sc_states}\" \\\n            --txnE ${params.txe} \\\n            --txnStrength ${params.tx_strength} \\\n            --minMapScore ${params.min_map_score} \\\n            --fracReadsInChrYForMale ${params.fraction_reads_male} \\\n            --maxFracGenomeSubclone ${params.max_frac_genome_subclone} \\\n            --maxFracCNASubclone ${params.max_frac_cna_subclone} \\\n            --includeHOMD ${params.include_homd} \\\n            --chrs \"${params.chrs_to_use}\" \\\n            --chrTrain \"${params.chrs_to_train}\" \\\n            --genomeStyle \"${params.genome_style}\" \\\n            --plotFileType \"${params.plotfiletype}\" \\\n            --plotYLim \"${params.plotylim}\" \\\n            --outDir ./\n    \"\"\"",
        "nb_lignes_script": 43,
        "language_script": "bash",
        "tools": [
            "ploidyNGS",
            "NOrMAL"
        ],
        "tools_url": [
            "https://bio.tools/ploidyngs",
            "https://bio.tools/normal"
        ],
        "tools_dico": [
            {
                "name": "ploidyNGS",
                "uri": "https://bio.tools/ploidyngs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Visually exploring ploidy with Next Generation Sequencing data.",
                "homepage": "https://github.com/diriano/ploidyNGS"
            },
            {
                "name": "NOrMAL",
                "uri": "https://bio.tools/normal",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3176",
                            "term": "DNA packaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "NOrMAL (NucleOsome Mapping ALgorithm) is a command line tool for accurate placing of the nucleosomes. It was designed to resolve overlapping nucleosomes and extract extra information (\u201cfuzziness\u201d, probability, etc.) of nucleosome placement.",
                "homepage": "http://www.cs.ucr.edu/~polishka/"
            }
        ],
        "inputs": [
            "wigfiles_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "postprocess_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "lbeltrame__mnegri-ov264",
        "directive": [
            "publishDir \"${params.outdir}/${patient}/\", mode: \"copy\""
        ],
        "when": "",
        "stub": ""
    },
    "aggregate_table": {
        "name_process": "aggregate_table",
        "string_process": "\nprocess aggregate_table {\n\n    publishDir \"${params.outdir}/\"\n    input:\n    file(all_params: \"*.params.txt\") from postprocess_ch.collect()\n    output:\n    file(\"ploidy_summary.txt\")\n    script:\n    \"\"\"\n    awk 'FNR==1 && NR!=1 { while (/^Sample/) getline; }\n    FNR < 3 {print}' ${all_params} > ploidy_summary.txt\n    \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "    \"\"\"\n    awk 'FNR==1 && NR!=1 { while (/^Sample/) getline; }\n    FNR < 3 {print}' ${all_params} > ploidy_summary.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "postprocess_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lbeltrame__mnegri-ov264",
        "directive": [
            "publishDir \"${params.outdir}/\""
        ],
        "when": "",
        "stub": ""
    }
}