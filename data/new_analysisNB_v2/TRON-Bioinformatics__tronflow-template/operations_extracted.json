{
    "OPERATION_1": {
        "string": "Channel\n    .fromPath(params.input_files)\n    .splitCsv(header: ['name', 'bam'], sep: \"\\t\")\n    .map{ row-> tuple(row.name, file(row.bam)) }\n    .set { input_files }",
        "origin": [
            [
                "params.input_files",
                "A"
            ]
        ],
        "gives": [
            [
                "input_files",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "input_files.into { input_files_for_fastq; input_files_for_fasta }",
        "origin": [
            [
                "input_files",
                "P"
            ]
        ],
        "gives": [
            [
                "input_files_for_fastq",
                "P"
            ],
            [
                "input_files_for_fasta",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "fastqs.join(fastas).map {it.join(\"\\t\")}.collectFile(name: \"${params.output}/output_files.txt\", newLine: true)",
        "origin": [
            [
                "fastqs",
                "P"
            ],
            [
                "fastas",
                "P"
            ]
        ],
        "gives": []
    }
}