{
    "OPERATION_1": {
        "string": "Channel.of( sampleID, fqR1p, fqR2p )\n       .toList()\n       .set { sample_fastqs_ch }",
        "origin": [
            [
                "sampleID, fqR1p, fqR2p",
                "V"
            ]
        ],
        "gives": [
            [
                "sample_fastqs_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "sort_rm_dup_chrm_multi_filter_shifted_mm10_chain\n.mix( sort_rm_dup_chrm_multi_filter_shifted_mm10_non_chain )\n.into{\n    processed_bams_ch_peak_calling;\n    processed_bams_ch_bigwig;\n    processed_bams_ch_frip_reads;\n    processed_bams_ch_final_calc_frip;\n    processed_bams_ch_feature_counts;\n    }",
        "origin": [
            [
                "sort_rm_dup_chrm_multi_filter_shifted_mm10_chain",
                "P"
            ],
            [
                "sort_rm_dup_chrm_multi_filter_shifted_mm10_non_chain",
                "P"
            ]
        ],
        "gives": [
            [
                "processed_bams_ch_peak_calling",
                "P"
            ],
            [
                "processed_bams_ch_bigwig",
                "P"
            ],
            [
                "processed_bams_ch_frip_reads",
                "P"
            ],
            [
                "processed_bams_ch_final_calc_frip",
                "P"
            ],
            [
                "processed_bams_ch_feature_counts",
                "P"
            ],
            [
                "",
                "P"
            ]
        ]
    }
}