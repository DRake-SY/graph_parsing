//Structure de Base enracinnÃ©
//
digraph  {
makeBowtieIndex;
bbduk;
bowtie_miRBase_mature;
bowtie_miRBase_hairpin;
miRBasePostAlignment;
bowtie2;
OPERATION_3;
OPERATION_4;
OPERATION_1;
OPERATION_2;
fastqc;
insertsize;
edgeR_miRBase;
bowtie2_unmapped;
ngi_visualizations;
in;
out;
makeBowtieIndex -> bowtie_miRBase_mature  [key=0];
makeBowtieIndex -> bowtie_miRBase_hairpin  [key=0];
bbduk -> insertsize  [key=0];
bbduk -> bowtie_miRBase_mature  [key=0];
bbduk -> bowtie2  [key=0];
bowtie_miRBase_mature -> bowtie_miRBase_hairpin  [key=0];
bowtie_miRBase_mature -> miRBasePostAlignment  [key=0];
bowtie_miRBase_hairpin -> miRBasePostAlignment  [key=0];
miRBasePostAlignment -> edgeR_miRBase  [key=0];
bowtie2 -> bowtie2_unmapped  [key=0];
bowtie2 -> ngi_visualizations  [key=0];
OPERATION_3 -> fastqc  [key=0];
OPERATION_3 -> bbduk  [key=0];
OPERATION_4 -> fastqc  [key=0];
OPERATION_4 -> bbduk  [key=0];
OPERATION_1 -> bowtie2  [key=0];
OPERATION_2 -> bowtie2  [key=0];
fastqc -> out  [key=0];
insertsize -> out  [key=0];
edgeR_miRBase -> out  [key=0];
bowtie2_unmapped -> out  [key=0];
ngi_visualizations -> out  [key=0];
in -> makeBowtieIndex  [key=0];
in -> OPERATION_3  [key=0];
in -> OPERATION_4  [key=0];
in -> OPERATION_1  [key=0];
in -> OPERATION_2  [key=0];
}
