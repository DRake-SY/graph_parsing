{
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n    input:\n    file genomeFile\n    file annotationFile\n    \n    output:\n    file \"STARgenome\" into STARgenomeIndex\n    file \"genomeLength.txt\" into genomeLengths    \n\n    script:\n      \n                                                        \n      \n    \"\"\"\n        mkdir STARgenome\n        STAR --runThreadN ${task.cpus}  \\\n             --runMode genomeGenerate \\\n             --genomeDir STARgenome \\\n             --genomeFastaFiles ${genomeFile} \\\n             --sjdbGTFfile ${annotationFile} \\\n             --sjdbOverhang ${params.overhang} \\\n             --outFileNamePrefix STARgenome\n\n        fastalength ${genomeFile} > 'genomeLength.txt'\n\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n        mkdir STARgenome\n        STAR --runThreadN ${task.cpus}  \\\n             --runMode genomeGenerate \\\n             --genomeDir STARgenome \\\n             --genomeFastaFiles ${genomeFile} \\\n             --sjdbGTFfile ${annotationFile} \\\n             --sjdbOverhang ${params.overhang} \\\n             --outFileNamePrefix STARgenome\n\n        fastalength ${genomeFile} > 'genomeLength.txt'\n\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "genomeFile",
            "annotationFile"
        ],
        "nb_inputs": 2,
        "outputs": [
            "STARgenomeIndex",
            "genomeLengths"
        ],
        "nb_outputs": 2,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "mapping": {
        "name_process": "mapping",
        "string_process": "\nprocess mapping {\n    tag \"reads: $name\"\n\n    input:\n    file STARgenome from STARgenomeIndex.first()\n    set val(name), file(reads:'*') from read_files\n\n    output:\n    set val(name), file(\"STAR_${name}\") into STARmappedReads \n\n    script:\n      \n                  \n      \n    \"\"\"\n        STAR --genomeDir ${STARgenome} \\\n             --readFilesIn ${reads} \\\n             --readFilesCommand zcat \\\n             --outFilterType BySJout \\\n             --outSAMunmapped Within \\\n             --outSAMtype BAM SortedByCoordinate \\\n             --outSAMattrIHstart 0 \\\n             --outFilterIntronMotifs RemoveNoncanonical \\\n             --runThreadN ${task.cpus} \\\n             --quantMode TranscriptomeSAM \\\n             --outWigType bedGraph \\\n             --outWigStrand Stranded \\\n             --outFileNamePrefix ${name}\n        \n        mkdir STAR_${name}\n        mv ${name}Aligned* STAR_${name}/.\n        mv ${name}Signal* STAR_${name}/.\n        mv ${name}SJ* STAR_${name}/.\n        mv ${name}Log* STAR_${name}/.\n    \"\"\"\n   \n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n        STAR --genomeDir ${STARgenome} \\\n             --readFilesIn ${reads} \\\n             --readFilesCommand zcat \\\n             --outFilterType BySJout \\\n             --outSAMunmapped Within \\\n             --outSAMtype BAM SortedByCoordinate \\\n             --outSAMattrIHstart 0 \\\n             --outFilterIntronMotifs RemoveNoncanonical \\\n             --runThreadN ${task.cpus} \\\n             --quantMode TranscriptomeSAM \\\n             --outWigType bedGraph \\\n             --outWigStrand Stranded \\\n             --outFileNamePrefix ${name}\n        \n        mkdir STAR_${name}\n        mv ${name}Aligned* STAR_${name}/.\n        mv ${name}Signal* STAR_${name}/.\n        mv ${name}SJ* STAR_${name}/.\n        mv ${name}Log* STAR_${name}/.\n    \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "STARgenomeIndex",
            "read_files"
        ],
        "nb_inputs": 2,
        "outputs": [
            "STARmappedReads"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [
            "tag \"reads: $name\""
        ],
        "when": "",
        "stub": ""
    },
    "cufflinks": {
        "name_process": "cufflinks",
        "string_process": "\nprocess cufflinks {\n\n    input:\n    file annotationFile\n    set val(name), file(STAR_alignment) from STARmappedReads\n\n    output:\n    set val(name), file(\"CUFF_${name}\") into cufflinksTranscripts_to_pp\n\n    script:\n      \n                \n      \n    \"\"\"\n        mkdir CUFF_${name}\n        cufflinks -p ${task.cpus} \\\n                  -g ${annotationFile} \\\n                  -o CUFF_${name} \\\n                  --overlap-radius 5 \\\n                  --library-type fr-firststrand \\\n                  ${STAR_alignment}/${name}Aligned.sortedByCoord.out.bam\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n        mkdir CUFF_${name}\n        cufflinks -p ${task.cpus} \\\n                  -g ${annotationFile} \\\n                  -o CUFF_${name} \\\n                  --overlap-radius 5 \\\n                  --library-type fr-firststrand \\\n                  ${STAR_alignment}/${name}Aligned.sortedByCoord.out.bam\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Cufflinks"
        ],
        "tools_url": [
            "https://bio.tools/cufflinks"
        ],
        "tools_dico": [
            {
                "name": "Cufflinks",
                "uri": "https://bio.tools/cufflinks",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "RNA splicing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "Alternative splicing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3258",
                                    "term": "Transcriptome assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0315",
                                    "term": "Expression profile comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3563",
                                    "term": "RNA-seq read count analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3565",
                                    "term": "RNA-seq time series data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0372",
                                    "term": "DNA transcription"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2872",
                                "term": "ID list"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0916",
                                "term": "Gene report"
                            },
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0951",
                                "term": "Statistical estimate score"
                            },
                            {
                                "uri": "http://edamontology.org/data_0928",
                                "term": "Gene expression profile"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3134",
                                "term": "Gene transcript report"
                            },
                            {
                                "uri": "http://edamontology.org/data_3181",
                                "term": "Sequence assembly report"
                            }
                        ]
                    }
                ],
                "description": "Cufflinks assembles transcripts and estimates their abundances in RNA-Seq samples. It accepts aligned RNA-Seq reads and assembles the alignments into a parsimonious set of transcripts. Cufflinks then estimates the relative abundances of these transcripts based on how many reads support each one.",
                "homepage": "http://cole-trapnell-lab.github.io/cufflinks"
            }
        ],
        "inputs": [
            "annotationFile",
            "STARmappedReads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cufflinksTranscripts_to_pp"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cufflinks_postprocess": {
        "name_process": "cufflinks_postprocess",
        "string_process": "\nprocess cufflinks_postprocess {\n\n    input:\n    set val(name), file(CUFFLINKS_transcripts) from cufflinksTranscripts_to_pp\n    file (genomeLength) from genomeLengths.first()\n\n    output:\n    file \"${name}_cufflinks_ok.gtf\" into cufflinksTranscripts_postprocess, cufflinksTranscripts_postprocess_fn\n\n    script:\n      \n                                                                                     \n      \n    \"\"\" \n        cuff=${CUFFLINKS_transcripts}/transcripts.gtf\n\n        awk -v fileRef=${genomeLength} 'BEGIN{while (getline < fileRef >0){lg[\\$2]=\\$1}} \\\n            {nbex[\\$12]++; line[\\$12,nbex[\\$12]]=\\$0}\\$4<1||\\$5>lg[\\$1]{ko[\\$12]=1}END\\\n            {for(t in nbex){if(ko[t]!=1){for(k=1; k<=nbex[t]; k++){print line[t,k]}}}}'\\\n            \\$cuff | awk -f ${baseDir}/bin/gff2gff.awk > ${name}_cufflinks_ok.gtf\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\" \n        cuff=${CUFFLINKS_transcripts}/transcripts.gtf\n\n        awk -v fileRef=${genomeLength} 'BEGIN{while (getline < fileRef >0){lg[\\$2]=\\$1}} \\\n            {nbex[\\$12]++; line[\\$12,nbex[\\$12]]=\\$0}\\$4<1||\\$5>lg[\\$1]{ko[\\$12]=1}END\\\n            {for(t in nbex){if(ko[t]!=1){for(k=1; k<=nbex[t]; k++){print line[t,k]}}}}'\\\n            \\$cuff | awk -f ${baseDir}/bin/gff2gff.awk > ${name}_cufflinks_ok.gtf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "cufflinksTranscripts_to_pp",
            "genomeLengths"
        ],
        "nb_inputs": 2,
        "outputs": [
            "cufflinksTranscripts_postprocess",
            "cufflinksTranscripts_postprocess_fn"
        ],
        "nb_outputs": 2,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "cuffmerge": {
        "name_process": "cuffmerge",
        "string_process": "\nprocess cuffmerge {\n\n    input:\n    file annotationFile\n    file genomeFile\n    file gtf_filenames from GTFfilenames\n    file cufflinks_ok from cufflinksTranscripts_postprocess.toList()\n\n    output:\n    file \"CUFFMERGE\" into cuffmergeTranscripts\n\n    script:\n      \n                \n      \n    \"\"\"\n        mkdir CUFFMERGE\n        cuffmerge -o CUFFMERGE \\\n                  -g ${annotationFile}  \\\n                  -s ${genomeFile} \\\n                  -p ${task.cpus} \\\n                     ${gtf_filenames}\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "    \"\"\"\n        mkdir CUFFMERGE\n        cuffmerge -o CUFFMERGE \\\n                  -g ${annotationFile}  \\\n                  -s ${genomeFile} \\\n                  -p ${task.cpus} \\\n                     ${gtf_filenames}\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotationFile",
            "genomeFile",
            "GTFfilenames",
            "cufflinksTranscripts_postprocess"
        ],
        "nb_inputs": 4,
        "outputs": [
            "cuffmergeTranscripts"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "FEELnc_filter": {
        "name_process": "FEELnc_filter",
        "string_process": "\nprocess FEELnc_filter{\n\n    input:\n    file annotationFile\n    file cuffmergeDir from cuffmergeTranscripts\n\n    output:\n    file \"FEELnc_filter\" into FEELnc_filtered\n\n    script:\n      \n                         \n      \n \n\n    \"\"\"\n        mkdir FEELnc_filter\n \n        FEELnc_filter.pl --infile ${cuffmergeDir}/merged.gtf \\\n                         --mRNAfile ${annotationFile} \\\n                         ${FEELnc_filter_options} \\\n                         --proc ${task.cpus} \\\n                         > FEELnc_filter/merged_filtered.gtf\n    \n    \"\"\"\n\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n        mkdir FEELnc_filter\n \n        FEELnc_filter.pl --infile ${cuffmergeDir}/merged.gtf \\\n                         --mRNAfile ${annotationFile} \\\n                         ${FEELnc_filter_options} \\\n                         --proc ${task.cpus} \\\n                         > FEELnc_filter/merged_filtered.gtf\n    \n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotationFile",
            "cuffmergeTranscripts"
        ],
        "nb_inputs": 2,
        "outputs": [
            "FEELnc_filtered"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "FEELnc_codpot": {
        "name_process": "FEELnc_codpot",
        "string_process": "\nprocess FEELnc_codpot{\n\n    input:\n    file annotationFile\n    file genomeFile\n    file FEELnc_filter from FEELnc_filtered\n\n    output:\n    file \"intergenic_0.99_Mode\" into FEELnc_codpot_out\n\n    script:\n      \n                              \n      \n\n\n    \"\"\"\n        mkdir intergenic_0.99_Mode\n\n        FEELnc_codpot.pl  --infile=${FEELnc_filter}/merged_filtered.gtf \\\n                          --mRNAfile=${annotationFile} \\\n                          --genome=${genomeFile} \\\n                          --numtx=10000,10000 \\\n                          --outdir=intergenic_0.99_Mode \\\n                          --spethres=0.99,0.99 \\\n                          --proc=${task.cpus} \\\n                          --keeptmp\n                          \n    \"\"\"\n\n}",
        "nb_lignes_process": 30,
        "string_script": "    \"\"\"\n        mkdir intergenic_0.99_Mode\n\n        FEELnc_codpot.pl  --infile=${FEELnc_filter}/merged_filtered.gtf \\\n                          --mRNAfile=${annotationFile} \\\n                          --genome=${genomeFile} \\\n                          --numtx=10000,10000 \\\n                          --outdir=intergenic_0.99_Mode \\\n                          --spethres=0.99,0.99 \\\n                          --proc=${task.cpus} \\\n                          --keeptmp\n                          \n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotationFile",
            "genomeFile",
            "FEELnc_filtered"
        ],
        "nb_inputs": 3,
        "outputs": [
            "FEELnc_codpot_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "FEELnc_classifier": {
        "name_process": "FEELnc_classifier",
        "string_process": "\nprocess FEELnc_classifier {\n\n    input:\n    file annotationFile\n    file intergenic from FEELnc_codpot_out\n\n    output:\n    file \"lncRNA_classes.txt\" into lncRNA_classes\n\n    script:\n      \n                              \n      \n\n    \"\"\"\n        FEELnc_classifier.pl  -i ${intergenic}/merged_filtered.gtf.lncRNA.gtf  \\\n                              -a ${annotationFile} \\\n                              > lncRNA_classes.txt\n    \"\"\"\n\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n        FEELnc_classifier.pl  -i ${intergenic}/merged_filtered.gtf.lncRNA.gtf  \\\n                              -a ${annotationFile} \\\n                              > lncRNA_classes.txt\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotationFile",
            "FEELnc_codpot_out"
        ],
        "nb_inputs": 2,
        "outputs": [
            "lncRNA_classes"
        ],
        "nb_outputs": 1,
        "name_workflow": "razielar__lncRNA_annotation_cufflinks_nf",
        "directive": [],
        "when": "",
        "stub": ""
    }
}