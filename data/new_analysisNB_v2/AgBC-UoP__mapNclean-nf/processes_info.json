{
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n\n  input:\n  file reference from fasta_ch\n\n  output:\n  file \"${reference.baseName}*\" into index_ch\n\n  script:\n  \"\"\"\n  bowtie2-build $reference ${reference.simpleName}\n  \"\"\"\n      }",
        "nb_lignes_process": 12,
        "string_script": "  \"\"\"\n  bowtie2-build $reference ${reference.simpleName}\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "index_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "AgBC-UoP__mapNclean-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "mapping": {
        "name_process": "mapping",
        "string_process": "\nprocess mapping {\n    tag \"$pair_id ${index.simpleName.first()}\"\n    publishDir \"${params.outdir}/bam/${index.simpleName.first()}\", mode:'copy', pattern: '*.sam'\n    publishDir \"${params.outdir}/bam/${index.simpleName.first()}/logs\", mode:'copy', pattern: '*.log'\n\n    cpus 12\n    maxForks 3\n\n    input:\n    file index from index_ch.collect()\n    set pair_id, file(reads) from read_pairs_ch\n\n    output:\n    file '*.sam' into sam\n    file \"${index.simpleName.first()}_${pair_id}.log\" into logs\n     \n    script:\n    \"\"\"\n        bowtie2 \\\\\n            --threads $task.cpus \\\\\n            -x ${index.simpleName.first()} \\\\\n            -q -1 ${reads[0]} -2 ${reads[1]} \\\\\n            --very-sensitive-local \\\\\n            -S ${index.simpleName.first()}_${pair_id}.sam \\\\\n            --no-unal \\\\\n            2>&1 | tee ${index.simpleName.first()}_${pair_id}.log\n    \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "    \"\"\"\n        bowtie2 \\\\\n            --threads $task.cpus \\\\\n            -x ${index.simpleName.first()} \\\\\n            -q -1 ${reads[0]} -2 ${reads[1]} \\\\\n            --very-sensitive-local \\\\\n            -S ${index.simpleName.first()}_${pair_id}.sam \\\\\n            --no-unal \\\\\n            2>&1 | tee ${index.simpleName.first()}_${pair_id}.log\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "index_ch",
            "read_pairs_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sam",
            "logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "AgBC-UoP__mapNclean-nf",
        "directive": [
            "tag \"$pair_id ${index.simpleName.first()}\"",
            "publishDir \"${params.outdir}/bam/${index.simpleName.first()}\", mode:'copy', pattern: '*.sam'",
            "publishDir \"${params.outdir}/bam/${index.simpleName.first()}/logs\", mode:'copy', pattern: '*.log'",
            "cpus 12",
            "maxForks 3"
        ],
        "when": "",
        "stub": ""
    },
    "index_samtools": {
        "name_process": "index_samtools",
        "string_process": "\nprocess index_samtools {\n\n  input:\n  file reference from fasta_ch1\n\n  output:\n  file \"${reference}*\" into index_ch1\n\n  script:\n  \"\"\"\n  samtools faidx $reference\n  \"\"\"\n      }",
        "nb_lignes_process": 12,
        "string_script": "  \"\"\"\n  samtools faidx $reference\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "fasta_ch1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "index_ch1"
        ],
        "nb_outputs": 1,
        "name_workflow": "AgBC-UoP__mapNclean-nf",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "remove_clipping": {
        "name_process": "remove_clipping",
        "string_process": "\nprocess remove_clipping {\n    conda \"bioconda::samclip\"\n    tag \"${index.simpleName}\"\n    publishDir \"${params.outdir}/bam/${index.simpleName}\", mode:'copy', pattern: '*.sam'\n\n    input:\n    file(samf) from sam\n    file index from index_ch1.collect()\n\n    output:\n    file '*.sam' into sam_out\n\n    script:\n    \"\"\"\n    samclip --ref ${index} < ${samf} > clean.${samf}\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    samclip --ref ${index} < ${samf} > clean.${samf}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sam",
            "index_ch1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sam_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "AgBC-UoP__mapNclean-nf",
        "directive": [
            "conda \"bioconda::samclip\"",
            "tag \"${index.simpleName}\"",
            "publishDir \"${params.outdir}/bam/${index.simpleName}\", mode:'copy', pattern: '*.sam'"
        ],
        "when": "",
        "stub": ""
    }
}