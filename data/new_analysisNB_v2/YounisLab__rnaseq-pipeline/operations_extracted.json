{
    "OPERATION_1": {
        "string": "Channel\n        .fromFilePairs(params.fastq_dir +'/*_[A-Z].fastq', size: -1)\n                                                                       \n        .map { key, files -> [key, files, 0]}\n        .ifEmpty { exit 1, \"Cannot find any reads matching the glob!\"}\n        .set {raw_reads_fastq}",
        "origin": [
            [
                "params.fastq_dir +'/*_[A-Z].fastq', size: -1",
                "A"
            ]
        ],
        "gives": [
            [
                "raw_reads_fastq",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n        .fromPath(params.fastq_dir +'/*.fastq')\n        .map {file -> [file.baseName, file, 0]}\n        .ifEmpty { exit 1, \"Cannot find any files in directory!\"}\n        .set {raw_reads_fastq}",
        "origin": [
            [
                "params.fastq_dir +'/*.fastq'",
                "A"
            ]
        ],
        "gives": [
            [
                "raw_reads_fastq",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n        .fromFilePairs(params.fastq_dir +'/*_[A-Z]_R{1,2}.fastq', size: -1)\n        .map { key, files -> [key,\n                              files.findAll { it.toString().endsWith('R1.fastq') },\n                              files.findAll { it.toString().endsWith('R2.fastq') }] }\n        .ifEmpty { exit 1, \"Cannot find any reads matching the glob!\"}\n        .set {raw_reads_fastq}",
        "origin": [
            [
                "params.fastq_dir +'/*_[A-Z]_R{1,2}.fastq', size: -1",
                "A"
            ]
        ],
        "gives": [
            [
                "raw_reads_fastq",
                "P"
            ]
        ]
    }
}