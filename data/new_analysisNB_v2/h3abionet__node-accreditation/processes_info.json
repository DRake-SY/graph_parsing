{
    "sampleSeq": {
        "name_process": "sampleSeq",
        "string_process": "\nprocess sampleSeq {\n    tag \"Sample-${name}\"\n    publishDir \"${params.outdir}/Subsample\", mode: 'copy'\n    \n    input:\n    set val(name), file(reads) from ch_raw_reads_seqtk\n\n    output:\n    set val(name), file(\"*.fastq.gz\") into md5\n\n    script:\n    \"\"\"\n    seqtk sample -s 12345 ${reads[0]} 0.9 | pigz -p ${task.cpus} - > $name.12345.R1.fastq.gz\n    seqtk sample -s 12345 ${reads[1]} 0.9 | pigz -p ${task.cpus} - > $name.12345.R2.fastq.gz\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    seqtk sample -s 12345 ${reads[0]} 0.9 | pigz -p ${task.cpus} - > $name.12345.R1.fastq.gz\n    seqtk sample -s 12345 ${reads[1]} 0.9 | pigz -p ${task.cpus} - > $name.12345.R2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "ch_raw_reads_seqtk"
        ],
        "nb_inputs": 1,
        "outputs": [
            "md5"
        ],
        "nb_outputs": 1,
        "name_workflow": "h3abionet__node-accreditation",
        "directive": [
            "tag \"Sample-${name}\"",
            "publishDir \"${params.outdir}/Subsample\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "md5sum": {
        "name_process": "md5sum",
        "string_process": "\nprocess md5sum {\n    tag \"md5-${name}\"\n    \n    input:\n    set val(name), file(reads) from md5\n\n    output:\n    file \"*.md5\" into md5cat\n\n    script:\n    \"\"\"\n    md5sum $reads > $name.md5\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    md5sum $reads > $name.md5\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "md5"
        ],
        "nb_inputs": 1,
        "outputs": [
            "md5cat"
        ],
        "nb_outputs": 1,
        "name_workflow": "h3abionet__node-accreditation",
        "directive": [
            "tag \"md5-${name}\""
        ],
        "when": "",
        "stub": ""
    },
    "md5sum_collect": {
        "name_process": "md5sum_collect",
        "string_process": "\nprocess md5sum_collect {\n    tag \"md5cat\"\n    publishDir \"${params.outdir}/Subsample\", mode: 'copy'\n    \n    input:\n    file(\"*\") from md5cat.collect()\n\n    output:\n    file \"all.md5\"\n\n    script:\n    \"\"\"\n    cat *.md5 >> all.md5\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    cat *.md5 >> all.md5\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "md5cat"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "h3abionet__node-accreditation",
        "directive": [
            "tag \"md5cat\"",
            "publishDir \"${params.outdir}/Subsample\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}