{
    "BamToCCS": {
        "name_process": "BamToCCS",
        "string_process": "\tprocess BamToCCS {\n\n\t\tpublishDir \"${params.outdir}/${sample}/CCS\", mode: 'copy',\n\t\t\tsaveAs: { filename ->\n\t\t\t\tif( filename.indexOf(\"report.txt\") > 0 ) filename\n\t\t\t\telse null\n\t\t\t}\n\n\t\tscratch true \n\n\t\tlabel 'pacbio'\n\n\t\tinput:\n\t\tset val(sample), file(bam), file(bam_index) from bamFile\n\t\teach chunk from chunks\n\n\t\toutput:\n\t\tset val(sample),file(reads) into ReadChunks\n\t\tfile(report)\n\n\t\tscript:\n\t\treads = bam.getBaseName() + \".\" + chunk + \".ccs.bam\"\n\t\treport = bam.getBaseName() + \".\" + chunk + \".ccs.report.txt\"\n\n\t\tdef options = \"\"\n\t\tif (params.hifi_min_passes && params.hifi_min_passes instanceof Integer) {\n\t\t\toptions = \"--min-passes ${params.hifi_min_passes}\"\n\t\t}\n\t\t\n\t\t\"\"\"\n\t\t\tccs $options $bam $reads --chunk $chunk/10 -j ${task.cpus}\n\t\t\tmv *report.txt $report\n\t\t\"\"\"\n\n\t}",
        "nb_lignes_process": 33,
        "string_script": "\t\treads = bam.getBaseName() + \".\" + chunk + \".ccs.bam\"\n\t\treport = bam.getBaseName() + \".\" + chunk + \".ccs.report.txt\"\n\n\t\tdef options = \"\"\n\t\tif (params.hifi_min_passes && params.hifi_min_passes instanceof Integer) {\n\t\t\toptions = \"--min-passes ${params.hifi_min_passes}\"\n\t\t}\n\t\t\n\t\t\"\"\"\n\t\t\tccs $options $bam $reads --chunk $chunk/10 -j ${task.cpus}\n\t\t\tmv *report.txt $report\n\t\t\"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "Readseq",
            "Reporter",
            "ICCS"
        ],
        "tools_url": [
            "https://bio.tools/readseq",
            "https://bio.tools/reporter",
            "https://bio.tools/ICCS"
        ],
        "tools_dico": [
            {
                "name": "Readseq",
                "uri": "https://bio.tools/readseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ]
                    }
                ],
                "description": "Convert biosequences between a selection of common biological sequence formats.",
                "homepage": "http://www.ebi.ac.uk/Tools/sfc/readseq/"
            },
            {
                "name": "Reporter",
                "uri": "https://bio.tools/reporter",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3630",
                                    "term": "Protein quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3630",
                                    "term": "Protein quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2536",
                                "term": "Mass spectrometry data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2886",
                                "term": "Protein sequence record"
                            }
                        ]
                    }
                ],
                "description": "Protein quantification based on reporter ions.",
                "homepage": "http://compomics.github.io/projects/reporter.html"
            },
            {
                "name": "ICCS",
                "uri": "https://bio.tools/ICCS",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3306",
                            "term": "Biophysics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "Nuclear magnetic resonance spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0593",
                            "term": "NMR spectroscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Nanoscale Distribution of Nuclear Sites by Super-Resolved Image Cross-Correlation Spectroscopy.\n\nUser-fiendly code for image cross-correlation specroscopy (ICCS) analysis based on the following article:",
                "homepage": "https://github.com/llanzano/ICCS"
            }
        ],
        "inputs": [
            "bamFile",
            "chunks"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ReadChunks",
            "report"
        ],
        "nb_outputs": 2,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/CCS\", mode: 'copy' , saveAs: { filename -> if( filename.indexOf(\"report.txt\") > 0 ) filename else null }",
            "scratch true",
            "label 'pacbio'"
        ],
        "when": "",
        "stub": ""
    },
    "CcsMerge": {
        "name_process": "CcsMerge",
        "string_process": "\tprocess CcsMerge {\n\n\t\tlabel 'pacbio'\n\n\t\tpublishDir \"${params.outdir}/${sample}/CCS\", mode: 'copy'\n\n\t\tinput:\n\t\tset val(sample),file(read_chunks) from ReadChunksGrouped\n\n\t\toutput:\n\t\tset val(sample),file(bam),file(pbi) into CCSReads\n\n\t\tscript:\n\t\tbam = sample + \".reads.ccs.bam\"\n\t\tpbi = bam + \".pbi\"\n\n\t\t\"\"\"\n\t\t\tpbmerge -o $bam $read_chunks\n\t\t\tpbindex $bam\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 19,
        "string_script": "\t\tbam = sample + \".reads.ccs.bam\"\n\t\tpbi = bam + \".pbi\"\n\n\t\t\"\"\"\n\t\t\tpbmerge -o $bam $read_chunks\n\t\t\tpbindex $bam\n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BaMM",
            "PBIL"
        ],
        "tools_url": [
            "https://bio.tools/bamm",
            "https://bio.tools/pbil"
        ],
        "tools_dico": [
            {
                "name": "BaMM",
                "uri": "https://bio.tools/bamm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence motif recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Sequence motif discovery"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Motif scanning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Motif discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "de-novo motif discovery and regulatory sequence analysis.\nDiscovery of regulatory motifs with higher-order Bayesian Markov Models (BaMMs)",
                "homepage": "https://bammmotif.mpibpc.mpg.de"
            },
            {
                "name": "PBIL",
                "uri": "https://bio.tools/pbil",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0082",
                            "term": "Structure prediction"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3511",
                            "term": "Nucleic acid sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0279",
                                    "term": "Nucleic acid folding analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Nucleic acid sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0279",
                                    "term": "Nucleic acid folding modelling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0279",
                                    "term": "Nucleic acid folding prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0279",
                                    "term": "Nucleic acid folding"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2478",
                                    "term": "Sequence analysis (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pole Bio-Informatique Lyonnais (PBIL) provides access to sequence databanks (EMBL, GenBank, SWISS-PROT, PIR) and to many tools of nucleic acid and protein sequence analyses.",
                "homepage": "https://prabi.ibcp.fr/htm/site/web/home"
            }
        ],
        "inputs": [
            "ReadChunksGrouped"
        ],
        "nb_inputs": 1,
        "outputs": [
            "CCSReads"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'pacbio'",
            "publishDir \"${params.outdir}/${sample}/CCS\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ExtractHiFi": {
        "name_process": "ExtractHiFi",
        "string_process": "\tprocess ExtractHiFi {\n\n\t\tlabel 'pacbio'\n\n                publishDir \"${params.outdir}/${sample}/HiFi\", mode: 'copy'\n\n\t\tinput:\n                set val(sample),file(bam),file(pbi) from CCSReads\n\n\t\toutput:\n\t\tset val(sample),file(hifi),file(hifi_pbi) into mergedReads\n\n\t\tscript:\n\t\thifi = bam.getBaseName() + \".hifi.bam\"\n\t\thifi_pbi = hifi + \".pbi\"\n\n\t\t\"\"\"\n\t\t\texctracthifi $bam $hifi\n\t\t\tpbindex $hifi\n\t\t\"\"\"\n\n\t}",
        "nb_lignes_process": 20,
        "string_script": "\t\thifi = bam.getBaseName() + \".hifi.bam\"\n\t\thifi_pbi = hifi + \".pbi\"\n\n\t\t\"\"\"\n\t\t\texctracthifi $bam $hifi\n\t\t\tpbindex $hifi\n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "HiFiX"
        ],
        "tools_url": [
            "https://bio.tools/hifix"
        ],
        "tools_dico": [
            {
                "name": "HiFiX",
                "uri": "https://bio.tools/hifix",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3432",
                                    "term": "Clustering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence clustering"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0291",
                                    "term": "Sequence cluster generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The software package HiFiX implements the novel algorithm for HIgh FIdelity Clustering of Sequences.",
                "homepage": "http://lbbe.univ-lyon1.fr/-HiFiX-.html"
            }
        ],
        "inputs": [
            "CCSReads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mergedReads"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'pacbio'",
            "publishDir \"${params.outdir}/${sample}/HiFi\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "BamToFastq": {
        "name_process": "BamToFastq",
        "string_process": "\nprocess BamToFastq {\n\n\tlabel 'pacbio'\n\n\tpublishDir \"${params.outdir}/${sample}/fasta\", mode: 'copy'\n\n\tscratch true\n\n        input:\n        set val(sample),file(bam),file(pbi) from mergedReads\n\n        output:\n        set val(sample),file(reads) into (Reads, ReadsNanoqc, ReadsKat, ReadsNanoplot, ReadsAlign)\n\n        script:\n        reads = bam.getBaseName() + \".fastq.gz\"\n\n        \"\"\"\n        \tbam2fasta -o ${bam.getBaseName()} $bam\n        \"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "        reads = bam.getBaseName() + \".fastq.gz\"\n\n        \"\"\"\n        \tbam2fasta -o ${bam.getBaseName()} $bam\n        \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Readseq"
        ],
        "tools_url": [
            "https://bio.tools/readseq"
        ],
        "tools_dico": [
            {
                "name": "Readseq",
                "uri": "https://bio.tools/readseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ]
                    }
                ],
                "description": "Convert biosequences between a selection of common biological sequence formats.",
                "homepage": "http://www.ebi.ac.uk/Tools/sfc/readseq/"
            }
        ],
        "inputs": [
            "mergedReads"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'pacbio'",
            "publishDir \"${params.outdir}/${sample}/fasta\", mode: 'copy'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "runFastp": {
        "name_process": "runFastp",
        "string_process": "\tprocess runFastp {\n\n\t\tlabel 'fastp'\n\n\t\tinput:\n\t\tset val(sample),file(reads) from Reads\n\n\t\toutput:\n\t\tset val(sample),file(trimmed_reads) into ReadsFinal\n\n\t\tscript:\n\t\ttrimmed_reads = reads.getBaseName() + \".trimmed.fastq.gz\"\n\n\t\t\"\"\"\n\t\t\tfastp -i $reads -o $trimmed_reads --disable_adapter_trimming -f 30 -t 30 -Q -L -w ${task.cpus}\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 15,
        "string_script": "\t\ttrimmed_reads = reads.getBaseName() + \".trimmed.fastq.gz\"\n\n\t\t\"\"\"\n\t\t\tfastp -i $reads -o $trimmed_reads --disable_adapter_trimming -f 30 -t 30 -Q -L -w ${task.cpus}\n\t\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "Reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ReadsFinal"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'fastp'"
        ],
        "when": "",
        "stub": ""
    },
    "Hifiasm": {
        "name_process": "Hifiasm",
        "string_process": "\tprocess Hifiasm {\n\n\t\tpublishDir \"${params.outdir}/${sample}/assembly/hifiasm\", mode: 'copy'\n\n\t\tlabel 'hifiasm'\n\n\t\tscratch true\n\n\t\tinput:\n\t\tset val(sample),file(reads) from grouped_movies_hifiasm\n\n\t\toutput:\t\n\t\tset val(sample),file(assembly) into HifiasmGraph\n\n\t\tscript:\n\t\tassembly = sample + \".p_ctg.gfa\"\n\n\t\t\"\"\"\t\n\t\t\thifiasm -o $sample -t ${task.cpus} $reads\n\t\t\"\"\"\n\n\t}",
        "nb_lignes_process": 20,
        "string_script": "\t\tassembly = sample + \".p_ctg.gfa\"\n\n\t\t\"\"\"\t\n\t\t\thifiasm -o $sample -t ${task.cpus} $reads\n\t\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "hapAssembly"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            }
        ],
        "inputs": [
            "grouped_movies_hifiasm"
        ],
        "nb_inputs": 1,
        "outputs": [
            "HifiasmGraph"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/hifiasm\", mode: 'copy'",
            "label 'hifiasm'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "GfaToFasta": {
        "name_process": "GfaToFasta",
        "string_process": "\tprocess GfaToFasta {\n\n                publishDir \"${params.outdir}/${sample}/assembly/hifiasm\", mode: 'copy'\n\n\t\tinput:\n\t\tset val(sample),file(assembly_graph) from HifiasmGraph\n\n\t\toutput:\n\t\tset val(sample),file(assembly) into (HifiasmAssembly, HifiasmAssemblyQuast)\n\n\t\tscript:\n\n\t\tassembly = assembly_graph.getBaseName() + \".hifiasm.fasta\"\n\n\t\t\"\"\"\n\t\t\tawk '/^S/{print \">\"\\$2;print \\$3}' $assembly_graph  > $assembly\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 16,
        "string_script": "\t\tassembly = assembly_graph.getBaseName() + \".hifiasm.fasta\"\n\n\t\t\"\"\"\n\t\t\tawk '/^S/{print \">\"\\$2;print \\$3}' $assembly_graph  > $assembly\n\t\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "hapAssembly"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            }
        ],
        "inputs": [
            "HifiasmGraph"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/hifiasm\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "IPA": {
        "name_process": "IPA",
        "string_process": "\tprocess IPA {\n\n\t\tpublishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'\n\n\t\tlabel 'ipa'\n\n\t\tscratch true\n\n\t\tinput:\n\t\tset val(sample),file(reads) from grouped_movies_ipa\n\n\t\toutput:\n\t\tset val(sample),file(assembly) into ( IpaAssembly, IpaAssemblyQuast)\n\n\t\tscript:\n\n\t\tassembly = sample + \".ipa.fa\"\n\n\t\t\"\"\"\n\t\t\tipa local --run-dir ipa_run -i $reads --nthreads ${task.cpus}\n\t\t\tcp ipa_run/assembly-results/final.p_ctg.fasta $assembly\n\t\t\"\"\"\n\n\t}",
        "nb_lignes_process": 22,
        "string_script": "\t\tassembly = sample + \".ipa.fa\"\n\n\t\t\"\"\"\n\t\t\tipa local --run-dir ipa_run -i $reads --nthreads ${task.cpus}\n\t\t\tcp ipa_run/assembly-results/final.p_ctg.fasta $assembly\n\t\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "hapAssembly",
            "IPA"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly",
            "https://bio.tools/IPA"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            },
            {
                "name": "IPA",
                "uri": "https://bio.tools/IPA",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3172",
                            "term": "Metabolomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3803",
                                    "term": "Natural product identification"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A Bayesian-Based Annotation Method for Metabolomic Profiles Integrating Biochemical Connections, Isotope Patterns, and Adduct Relationships | Integrated Probabilistic Annotation (IPA) - A Bayesian annotation method for LC/MS data integrating biochemical relations, isotope patterns and adduct formation",
                "homepage": "https://github.com/francescodc87/IPA"
            }
        ],
        "inputs": [
            "grouped_movies_ipa"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'",
            "label 'ipa'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "FlyeLarge": {
        "name_process": "FlyeLarge",
        "string_process": "\tprocess FlyeLarge {\n\n\t                publishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'\n\n        \t        label 'flye'\n\n\t\t\tscratch true\n\n\t                input:\n        \t        set val(sample),file(reads) from grouped_movies\n\n                \toutput:\n\t                set val(sample),file(assembly) into ( FlyeAssembly, FlyeAssemblyBusco )\n        \t        file(assembly_renamed) into FlyeAssemblyQuast\n                \tfile(\"${folder_name}/*\")\n\n\t                script:\n        \t        folder_name = \"flye_assembly\"\n                \trun_options = \"\"\n\t                if (params.hifi) {\n        \t                folder_name = \"flye_assembly_hifi\"\n                \t}\n\t                assembly = folder_name + \"/assembly.fasta\"\n        \t        assembly_info = folder_name + \"/assembly_info.txt\"\n                \tassembly_renamed = sample + \".flye.assembly.fasta\"\n\n\t                def options = \"\"\n        \t        if (params.genome_size) {\n                \t        options = \"--genome-size ${params.genome_size} --asm-coverage 60\"\n\t                }\n\n        \t        if (params.hifi) {\n                \t        options = options + \" --pacbio-hifi\"\n\t                } else {\n        \t                options = options + \" --pacbio-raw\"\n                \t}\n\n\t                \"\"\"\t\n        \t                flye $options $reads -i 2 --threads ${task.cpus} --out-dir $folder_name\n                \t        cp $assembly $assembly_renamed\n\t                \"\"\"\n\n\t\t}",
        "nb_lignes_process": 41,
        "string_script": "        \t        folder_name = \"flye_assembly\"\n                \trun_options = \"\"\n\t                if (params.hifi) {\n        \t                folder_name = \"flye_assembly_hifi\"\n                \t}\n\t                assembly = folder_name + \"/assembly.fasta\"\n        \t        assembly_info = folder_name + \"/assembly_info.txt\"\n                \tassembly_renamed = sample + \".flye.assembly.fasta\"\n\n\t                def options = \"\"\n        \t        if (params.genome_size) {\n                \t        options = \"--genome-size ${params.genome_size} --asm-coverage 60\"\n\t                }\n\n        \t        if (params.hifi) {\n                \t        options = options + \" --pacbio-hifi\"\n\t                } else {\n        \t                options = options + \" --pacbio-raw\"\n                \t}\n\n\t                \"\"\"\t\n        \t                flye $options $reads -i 2 --threads ${task.cpus} --out-dir $folder_name\n                \t        cp $assembly $assembly_renamed\n\t                \"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "grouped_movies"
        ],
        "nb_inputs": 1,
        "outputs": [
            "",
            "FlyeAssemblyQuast"
        ],
        "nb_outputs": 2,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'",
            "label 'flye'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "Flye": {
        "name_process": "Flye",
        "string_process": "\tprocess Flye {\n\n\t\t\tpublishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'\n\n\t\t\tlabel 'flye'\n\t\n\t\t\tscratch true\n\n\t\t\tinput:\n\t\t\tset val(sample),file(reads) from grouped_movies\n\n\t\t\toutput:\n\t\t\tset val(sample),file(assembly) into ( FlyeAssembly, FlyeAssemblyBusco )\n\t\t\tfile(assembly_renamed) into FlyeAssemblyQuast\n\t\t\tfile(\"${folder_name}/*\")\n\n\t\t\tscript:\n\t\t\tfolder_name = \"flye_assembly\"\n\t\t\trun_options = \"\"\n\t\t\tif (params.hifi) {\n\t\t\t\tfolder_name = \"flye_assembly_hifi\"\n\t\t\t}\n\t\t\tassembly = folder_name + \"/assembly.fasta\"\n\t\t\tassembly_info = folder_name + \"/assembly_info.txt\"\n\t\t\tassembly_renamed = sample + \".flye.assembly.fasta\"\n\n\t\t\tdef options = \"\"\n\t\t\tif (params.genome_size) {\n                \t\toptions = \"--genome-size ${params.genome_size} --asm-coverage 60\"\n\t\t        }\n\n\t\t\tif (params.hifi) {\n\t\t\t\toptions = options + \" --pacbio-hifi\"\n\t\t\t} else {\n\t\t\t\toptions = options + \" --pacbio-raw\"\n\t\t\t}\n\n\t\t\t\"\"\"\t\n\t\t\t\tflye $options $reads -i 2 --threads ${task.cpus} --out-dir $folder_name\n\t\t\t\tcp $assembly $assembly_renamed\n\t\t\t\"\"\"\n\n\t\t}",
        "nb_lignes_process": 41,
        "string_script": "\t\t\tfolder_name = \"flye_assembly\"\n\t\t\trun_options = \"\"\n\t\t\tif (params.hifi) {\n\t\t\t\tfolder_name = \"flye_assembly_hifi\"\n\t\t\t}\n\t\t\tassembly = folder_name + \"/assembly.fasta\"\n\t\t\tassembly_info = folder_name + \"/assembly_info.txt\"\n\t\t\tassembly_renamed = sample + \".flye.assembly.fasta\"\n\n\t\t\tdef options = \"\"\n\t\t\tif (params.genome_size) {\n                \t\toptions = \"--genome-size ${params.genome_size} --asm-coverage 60\"\n\t\t        }\n\n\t\t\tif (params.hifi) {\n\t\t\t\toptions = options + \" --pacbio-hifi\"\n\t\t\t} else {\n\t\t\t\toptions = options + \" --pacbio-raw\"\n\t\t\t}\n\n\t\t\t\"\"\"\t\n\t\t\t\tflye $options $reads -i 2 --threads ${task.cpus} --out-dir $folder_name\n\t\t\t\tcp $assembly $assembly_renamed\n\t\t\t\"\"\"",
        "nb_lignes_script": 23,
        "language_script": "bash",
        "tools": [
            "hapAssembly",
            "Flye"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly",
            "https://bio.tools/Flye"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            },
            {
                "name": "Flye",
                "uri": "https://bio.tools/Flye",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Mapping assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0523",
                                    "term": "Sequence assembly (mapping assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Flye is a de novo assembler for single molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PB / ONT reads as input and outputs polished contigs.",
                "homepage": "https://github.com/fenderglass/Flye"
            }
        ],
        "inputs": [
            "grouped_movies"
        ],
        "nb_inputs": 1,
        "outputs": [
            "",
            "FlyeAssemblyQuast"
        ],
        "nb_outputs": 2,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/flye\", mode: 'copy'",
            "label 'flye'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "Canu": {
        "name_process": "Canu",
        "string_process": "\tprocess Canu {\n\n\t\tpublishDir \"${params.outdir}/${sample}/assembly/canu\", mode: 'copy'\n\n\t\tlabel 'canu'\n\n\t\tscratch true\n\n\t\tinput:\n\t\tset val(sample),file(reads) from grouped_movies_canu\n\n\t\toutput:\n\t\tfile(\"canu\")\n\t\tfile (report_canu)\n\t\tset val(sample),file(assembly) into (CanuAssembly, CanuAssemblyQuast)\n\n\t\tscript:\t\n\t\treport_canu = \"canu/canu.report\"\n\t\tassembly = sample + \".canu.contigs.fasta\"\n\n\t\tdef options = \"\"\n\t\tif (params.hifi) {\n        \t\toptions = \"-pacbio-hifi\"\n\t\t} else {\n\t\t\toptions = \"-pacbio\"\n\t        }\n\n\t\t\"\"\"\n\t\t\tcanu -p $sample -d canu \\\n\t\t\tgenomeSize=${params.genome_size} \\\n\t\t\tuseGrid=false \\\n\t\t\t$options *.fastq.gz\n\t\t\tcp canu/*.contigs.fasta $assembly\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 33,
        "string_script": "\t\treport_canu = \"canu/canu.report\"\n\t\tassembly = sample + \".canu.contigs.fasta\"\n\n\t\tdef options = \"\"\n\t\tif (params.hifi) {\n        \t\toptions = \"-pacbio-hifi\"\n\t\t} else {\n\t\t\toptions = \"-pacbio\"\n\t        }\n\n\t\t\"\"\"\n\t\t\tcanu -p $sample -d canu \\\n\t\t\tgenomeSize=${params.genome_size} \\\n\t\t\tuseGrid=false \\\n\t\t\t$options *.fastq.gz\n\t\t\tcp canu/*.contigs.fasta $assembly\n\t\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "hapAssembly",
            "CANU"
        ],
        "tools_url": [
            "https://bio.tools/hapassembly",
            "https://bio.tools/canu"
        ],
        "tools_dico": [
            {
                "name": "hapAssembly",
                "uri": "https://bio.tools/hapassembly",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model.",
                "homepage": "http://rnc.r.dendai.ac.jp/hapAssembly.html"
            },
            {
                "name": "CANU",
                "uri": "https://bio.tools/canu",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "De-novo assembly tool for long read chemistry like Nanopore data and PacBio data.",
                "homepage": "https://github.com/marbl/canu"
            }
        ],
        "inputs": [
            "grouped_movies_canu"
        ],
        "nb_inputs": 1,
        "outputs": [
            "report_canu",
            ""
        ],
        "nb_outputs": 2,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/assembly/canu\", mode: 'copy'",
            "label 'canu'",
            "scratch true"
        ],
        "when": "",
        "stub": ""
    },
    "nanoQC": {
        "name_process": "nanoQC",
        "string_process": "\nprocess nanoQC {\n\n\tlabel 'nanoqc'\n\n\tpublishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'\n\n\twhen:\n\tparams.qc\n\n\tinput:\n\tset val(sample),file(fastq) from ReadsNanoqc\n\n\toutput:\n\tfile(qc_plot)\n\n\tscript:\n\tqc_plot = \"nanoqc/nanoQC.html\"\n\n\t\"\"\"\n\t\tnanoQC -l 100 -o nanoqc $fastq\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\tqc_plot = \"nanoqc/nanoQC.html\"\n\n\t\"\"\"\n\t\tnanoQC -l 100 -o nanoqc $fastq\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ReadsNanoqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "qc_plot"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'nanoqc'",
            "publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'"
        ],
        "when": "params.qc",
        "stub": ""
    },
    "nanoPlot": {
        "name_process": "nanoPlot",
        "string_process": "\nprocess nanoPlot {\n\n\tlabel 'nanoplot'\n\n        publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'\n\n\twhen:\n\tparams.qc\n\n\tinput:\n\tset val(sample),file(fastq) from ReadsNanoplot\n\n\toutput:\n\tfile(\"nanoplot\")\n\n\tscript:\n\t\"\"\"\n\t\tNanoPlot -t ${task.cpus} -o nanoplot --fastq $fastq \n\t\"\"\"\t\n}",
        "nb_lignes_process": 19,
        "string_script": "\t\"\"\"\n\t\tNanoPlot -t ${task.cpus} -o nanoplot --fastq $fastq \n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ReadsNanoplot"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'nanoplot'",
            "publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'"
        ],
        "when": "params.qc",
        "stub": ""
    },
    "QCN50": {
        "name_process": "QCN50",
        "string_process": "\nprocess QCN50 {\n\n\tpublishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'\n\n\tlabel 'gaas'\n\n\twhen:\n\tparams.qc\n\n\tinput:\n\tset val(sample),file(assembly) from Assembly\n\n\toutput:\n\tfile(assembly_report)\n\n\tscript:\n\tassembly_report = \"stats/\" + assembly.getBaseName() + \"_stat.txt\"\n\t\"\"\"\n\t\tgaas_fasta_statistics.pl -f $assembly -o stats\n\t\"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "\tassembly_report = \"stats/\" + assembly.getBaseName() + \"_stat.txt\"\n\t\"\"\"\n\t\tgaas_fasta_statistics.pl -f $assembly -o stats\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "Assembly"
        ],
        "nb_inputs": 1,
        "outputs": [
            "assembly_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'",
            "label 'gaas'"
        ],
        "when": "params.qc",
        "stub": ""
    },
    "KatGCP": {
        "name_process": "KatGCP",
        "string_process": "\nprocess KatGCP {\n\n        publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'\n\n\tlabel 'kat'\n\n\twhen:\n\tparams.qc_kat\n\n\tinput:\n\tset val(sample),file(reads) from ReadsKat\n\n\toutput:\n\tfile(kat_dist) into KatDist\n\n\tscript:\n\tkat_dist = \"kat-gcp.mx.png\"\n\n\t\"\"\"\n\t\tkat gcp -t ${task.cpus} $reads\n\t\"\"\"\n\n}",
        "nb_lignes_process": 22,
        "string_script": "\tkat_dist = \"kat-gcp.mx.png\"\n\n\t\"\"\"\n\t\tkat gcp -t ${task.cpus} $reads\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "KAT"
        ],
        "tools_url": [
            "https://bio.tools/kat"
        ],
        "tools_dico": [
            {
                "name": "KAT",
                "uri": "https://bio.tools/kat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0253",
                                    "term": "Sequence feature prediction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Suite of tools that generate, analyse and compare k-mer spectra produced from sequence files",
                "homepage": "http://www.earlham.ac.uk/kat-tools"
            }
        ],
        "inputs": [
            "ReadsKat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "KatDist"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/${sample}/QC\", mode: 'copy'",
            "label 'kat'"
        ],
        "when": "params.qc_kat",
        "stub": ""
    },
    "Quast": {
        "name_process": "Quast",
        "string_process": "\nprocess Quast {\n\n\tpublishDir \"${params.outdir}/Quast\", mode: 'copy'\n\n\tlabel 'quast' \n\n\twhen:\n\tparams.reference && params.gff\n\n\tinput:\n\tfile(assemblies) from AssemblyQuast.collect()\n\n\toutput:\n\tfile(quast_dir)\n\n\tscript:\n\tquast_dir = \"quast\"\n\t\"\"\"\n\t\tquast -o $quast_dir -r ${params.reference} --features ${params.gff} --threads ${task.cpus} $assemblies\n\t\"\"\"\n\n}",
        "nb_lignes_process": 21,
        "string_script": "\tquast_dir = \"quast\"\n\t\"\"\"\n\t\tquast -o $quast_dir -r ${params.reference} --features ${params.gff} --threads ${task.cpus} $assemblies\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "QUAST"
        ],
        "tools_url": [
            "https://bio.tools/quast"
        ],
        "tools_dico": [
            {
                "name": "QUAST",
                "uri": "https://bio.tools/quast",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly validation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Assembly quality evaluation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3180",
                                    "term": "Sequence assembly QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "QUAST stands for QUality ASsessment Tool.  \nIt evaluates a quality of genome assemblies by computing various metrics and providing nice reports.",
                "homepage": "http://quast.sourceforge.net/quast"
            }
        ],
        "inputs": [
            "AssemblyQuast"
        ],
        "nb_inputs": 1,
        "outputs": [
            "quast_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "publishDir \"${params.outdir}/Quast\", mode: 'copy'",
            "label 'quast'"
        ],
        "when": "params.reference && params.gff",
        "stub": ""
    },
    "makeRef": {
        "name_process": "makeRef",
        "string_process": "\nprocess makeRef {\n\n\tlabel 'map'\n\n\twhen:\n\tparams.reference\n\n\tinput:\n\tfile(fasta) from Ref\n\n\toutput:\n\tset file(idx),file(fasta) into RefMap\n\n\tscript:\n\tidx = fasta.getBaseName() + \".idx\"\n\n\t\"\"\"\n\t\tminimap2 -d $idx $fasta\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\tidx = fasta.getBaseName() + \".idx\"\n\n\t\"\"\"\n\t\tminimap2 -d $idx $fasta\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "pyfaidx",
            "Minimap2"
        ],
        "tools_url": [
            "https://bio.tools/pyfaidx",
            "https://bio.tools/minimap2"
        ],
        "tools_dico": [
            {
                "name": "pyfaidx",
                "uri": "https://bio.tools/pyfaidx",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This python module implements pure Python classes for indexing, retrieval, and in-place modification of FASTA files using a samtools compatible index.",
                "homepage": "https://pythonhosted.org/pyfaidx/"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            }
        ],
        "inputs": [
            "Ref"
        ],
        "nb_inputs": 1,
        "outputs": [
            "RefMap"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'map'"
        ],
        "when": "params.reference",
        "stub": ""
    },
    "Minimap": {
        "name_process": "Minimap",
        "string_process": "\nprocess Minimap {\n\n\tlabel 'map'\n\n\tpublishDir \"${params.outdir}/${sample}/Mapping\", mode: 'copy'\n\n\twhen:\n\tparams.reference \n\n\tinput:\n\tset val(sample),file(reads) from ReadsAlign\n\tset file(idx),file(fasta) from RefMap.collect()\n\n\toutput:\n\tset val(sample),file(bam),file(bai)\n\n\tscript:\n\tbam = reads.getBaseName() + \".bam\"\n\tbai = bam + \".bai\"\n\n\t\"\"\"\n\t\tminimap2 -ax map-pb $idx $reads | samtools sort -m 8G - | samtools view -bh -o $bam -\n\t\tsamtools index $bam\n\t\"\"\"\n\n}",
        "nb_lignes_process": 25,
        "string_script": "\tbam = reads.getBaseName() + \".bam\"\n\tbai = bam + \".bai\"\n\n\t\"\"\"\n\t\tminimap2 -ax map-pb $idx $reads | samtools sort -m 8G - | samtools view -bh -o $bam -\n\t\tsamtools index $bam\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "BaMM",
            "BAIT",
            "Minimap2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/bamm",
            "https://bio.tools/bait",
            "https://bio.tools/minimap2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "BaMM",
                "uri": "https://bio.tools/bamm",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence motif recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Sequence motif discovery"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Motif scanning"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature recognition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0239",
                                    "term": "Sequence signature detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0238",
                                    "term": "Motif discovery"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "de-novo motif discovery and regulatory sequence analysis.\nDiscovery of regulatory motifs with higher-order Bayesian Markov Models (BaMMs)",
                "homepage": "https://bammmotif.mpibpc.mpg.de"
            },
            {
                "name": "BAIT",
                "uri": "https://bio.tools/bait",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2945",
                                    "term": "Analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BAIT (Bioinformatic Analysis of Inherited Templates) is a software to create strand inheritance plots in data derived from the Strand-Seq sequencing protocol. The software is designed to be flexible with a range of species, and basic template folders can called to read in species-specific data.",
                "homepage": "http://sourceforge.net/projects/bait/"
            },
            {
                "name": "Minimap2",
                "uri": "https://bio.tools/minimap2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0491",
                                    "term": "Pairwise alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Pairwise aligner for genomic and spliced nucleotide sequences",
                "homepage": "https://github.com/lh3/minimap2"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ReadsAlign",
            "RefMap"
        ],
        "nb_inputs": 2,
        "outputs": [
            "sample"
        ],
        "nb_outputs": 1,
        "name_workflow": "ikmb__flye-assembly",
        "directive": [
            "label 'map'",
            "publishDir \"${params.outdir}/${sample}/Mapping\", mode: 'copy'"
        ],
        "when": "params.reference",
        "stub": ""
    }
}