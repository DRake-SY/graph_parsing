{
    "OPERATION_1": {
        "string": "startReads = Channel.fromFilePairs(params.fastq)",
        "origin": [
            [
                "params.fastq",
                "A"
            ]
        ],
        "gives": [
            [
                "startReads",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "IN_trimmomatic_opts = Channel\n                .value([params.trimSlidingWindow,\n                        params.trimLeading,\n                        params.trimTrailing,\n                        params.trimMinLength])",
        "origin": [
            [
                "[params.trimSlidingWindow,\n                        params.trimLeading,\n                        params.trimTrailing,\n                        params.trimMinLength]",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_trimmomatic_opts",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "IN_spades_opts = Channel\n                .value([params.spadesMinCoverage,\n                        params.spadesMinKmerCoverage])",
        "origin": [
            [
                "[params.spadesMinCoverage,\n                        params.spadesMinKmerCoverage]",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_spades_opts",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "IN_spades_kmers = Channel\n                .value(params.spadesKmers)",
        "origin": [
            [
                "params.spadesKmers",
                "V"
            ]
        ],
        "gives": [
            [
                "IN_spades_kmers",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "UNMMAPPED_forAssembly = Channel.create()",
        "origin": [],
        "gives": [
            [
                "UNMMAPPED_forAssembly",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "UNMMAPPED_forBowtie = Channel.create()",
        "origin": [],
        "gives": [
            [
                "UNMMAPPED_forBowtie",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "UNMAPPED_forCARDrgi = Channel.create()",
        "origin": [],
        "gives": [
            [
                "UNMAPPED_forCARDrgi",
                "P"
            ]
        ]
    },
    "OPERATION_8": {
        "string": "MAIN_spades_out_mapping = Channel.create()",
        "origin": [],
        "gives": [
            [
                "MAIN_spades_out_mapping",
                "P"
            ]
        ]
    },
    "OPERATION_9": {
        "string": "MAIN_spades_out_card_rgi = Channel.create()",
        "origin": [],
        "gives": [
            [
                "MAIN_spades_out_card_rgi",
                "P"
            ]
        ]
    },
    "OPERATION_10": {
        "string": "UNMAPPED_out.into{ UNMMAPPED_forAssembly ; UNMMAPPED_forBowtie ; UNMAPPED_forCARDrgi}",
        "origin": [
            [
                "UNMAPPED_out",
                "P"
            ]
        ],
        "gives": [
            [
                "UNMMAPPED_forAssembly",
                "P"
            ],
            [
                "UNMMAPPED_forBowtie",
                "P"
            ],
            [
                "UNMAPPED_forCARDrgi",
                "P"
            ]
        ]
    },
    "OPERATION_11": {
        "string": "MAIN_spades_out.into{MAIN_spades_out_mapping ; MAIN_spades_out_card_rgi}",
        "origin": [
            [
                "MAIN_spades_out",
                "P"
            ]
        ],
        "gives": [
            [
                "MAIN_spades_out_mapping",
                "P"
            ],
            [
                "MAIN_spades_out_card_rgi",
                "P"
            ]
        ]
    }
}