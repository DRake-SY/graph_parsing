{
    "runFastQCOriginal": {
        "name_process": "runFastQCOriginal",
        "string_process": "\nprocess runFastQCOriginal {\ncpus params.fastqc.cpus\n\ninput:\nset runID, file(reads) from readPairsFastQCOriginal\n\nstoreDir \"${params.outdir}/fastqc-original/${runID}\"\n\noutput:\nset file('*.zip'), file('*.html') into fastqcOutputOriginal\n\nscript:\n\"\"\"\n${params.fastqc.path} -t ${params.fastqc.cpus} -o . ${reads}\n\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n${params.fastqc.path} -t ${params.fastqc.cpus} -o . ${reads}\n\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readPairsFastQCOriginal"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqcOutputOriginal"
        ],
        "nb_outputs": 1,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.fastqc.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runTrimming": {
        "name_process": "runTrimming",
        "string_process": "\nprocess runTrimming {\ncpus params.trim_galore.cpus\n\ninput:\nset runID, file(reads) from readPairsForTrim\n\nstoreDir \"${params.outdir}/trimmed/${runID}\"\n\noutput:\nset runID, file(\"${runID}_val_1.fq.gz\"), file(\"${runID}_val_2.fq.gz\") into readPairsTrimmed\nset file('*.zip'), file('*.html') into trim_galoreOut\n\nscript:\nreadL=reads[0]\nreadR=reads[1]\n\"\"\"\n# call trim_galore\necho \"PE: ${readL} ${readR}\"\n${params.trim_galore.path} -q 15 --paired --fastqc -o . \\\\\n${readL} ${readR}\nmv ${readL.simpleName}_val_1.fq.gz ${runID}_val_1.fq.gz\nmv ${readR.simpleName}_val_2.fq.gz ${runID}_val_2.fq.gz\nmv ${readL.simpleName}_val_1_fastqc.html ${runID}_val_1_fastqc.html\nmv ${readL.simpleName}_val_1_fastqc.zip ${runID}_val_1_fastqc.zip\nmv ${readR.simpleName}_val_2_fastqc.html ${runID}_val_2_fastqc.html\nmv ${readR.simpleName}_val_2_fastqc.zip ${runID}_val_2_fastqc.zip\n\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "readL=reads[0]\nreadR=reads[1]\n\"\"\"\n# call trim_galore\necho \"PE: ${readL} ${readR}\"\n${params.trim_galore.path} -q 15 --paired --fastqc -o . \\\\\n${readL} ${readR}\nmv ${readL.simpleName}_val_1.fq.gz ${runID}_val_1.fq.gz\nmv ${readR.simpleName}_val_2.fq.gz ${runID}_val_2.fq.gz\nmv ${readL.simpleName}_val_1_fastqc.html ${runID}_val_1_fastqc.html\nmv ${readL.simpleName}_val_1_fastqc.zip ${runID}_val_1_fastqc.zip\nmv ${readR.simpleName}_val_2_fastqc.html ${runID}_val_2_fastqc.html\nmv ${readR.simpleName}_val_2_fastqc.zip ${runID}_val_2_fastqc.zip\n\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readPairsForTrim"
        ],
        "nb_inputs": 1,
        "outputs": [
            "readPairsTrimmed",
            "trim_galoreOut"
        ],
        "nb_outputs": 2,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.trim_galore.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runBWA_1": {
        "name_process": "runBWA_1",
        "string_process": "\nprocess runBWA {\n  cpus params.bwa.cpus\n  \n  input:\n    set runID, file(readL), file(readR) from readPairsTrimmed4BWA\n  \n  storeDir \"${params.outdir}/bwa/${runID}\"\n  \n  output:\n    set runID, file(\"${runID}.bam\"), file(\"${runID}.bam.bai\") into mappedFiles\n  \n  script:\n    \"\"\"\n    ${params.bwa.path} mem -M -t ${params.bwa.cpus} ${params.bwa.index} ${readL} ${readR} > ${runID}.sam\n    ${params.samtools.path} sort -@ ${params.bwa.cpus} -n ${runID}.sam -o ${runID}.bam\n    ${params.samtools.path} fixmate -@ ${params.bwa.cpus} -m ${runID}.bam ${runID}.fixout.bam\n    ${params.samtools.path} sort ${runID}.fixout.bam -@ ${params.bwa.cpus} -o ${runID}.sort.bam\n    ${params.samtools.path} markdup ${runID}.sort.bam ${runID}.rem.bam -@ ${params.bwa.cpus} -r\n    mv ${runID}.rem.bam ${runID}.bam\n    ${params.samtools.path} index ${runID}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    ${params.bwa.path} mem -M -t ${params.bwa.cpus} ${params.bwa.index} ${readL} ${readR} > ${runID}.sam\n    ${params.samtools.path} sort -@ ${params.bwa.cpus} -n ${runID}.sam -o ${runID}.bam\n    ${params.samtools.path} fixmate -@ ${params.bwa.cpus} -m ${runID}.bam ${runID}.fixout.bam\n    ${params.samtools.path} sort ${runID}.fixout.bam -@ ${params.bwa.cpus} -o ${runID}.sort.bam\n    ${params.samtools.path} markdup ${runID}.sort.bam ${runID}.rem.bam -@ ${params.bwa.cpus} -r\n    mv ${runID}.rem.bam ${runID}.bam\n    ${params.samtools.path} index ${runID}.bam\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "readPairsTrimmed4BWA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mappedFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.bwa.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runBlast": {
        "name_process": "runBlast",
        "string_process": "\nprocess runBlast {\n  cpus params.blastn.cpus\n  \n  input:\n    set runID, file(readL), file(readR) from readPairsTrimmed4blast\n  \n  storeDir \"${params.outdir}/taxReport/${runID}\"\n  \n  output:\n    set runID, file(\"${runID}.blastn.txt\"), file(\"${runID}.csv\") into blastnFiles\n  \n  script:\n    \"\"\"\n    zcat ${readL} | head -n ${params.blastn.numOfLine} > ${runID}.fq\n    fq2sc -i ${runID}.fq -o ${runID}.txt\n    s2c_2_fasta.pl --in ${runID}.txt --out ${runID}.fa --notfilterN\n    blastn -num_threads ${params.blastn.cpus} -db nt -max_target_seqs 1 \\\\\n    -outfmt '6 qaccver saccver staxid sblastname ssciname scomname pident length mismatch gapopen qstart qend sstart send evalue bitscore' \\\\\n    -query ${runID}.fa -out ${runID}.blastn.txt\n    cat <<EOT | R --vanilla\nx <- read.delim(\"${runID}.blastn.txt\", header=FALSE, stringsAsFactor=FALSE)\ncolnames(x) <- c(\"qaccver\", \"saccver\", \"staxid\", \"sblastname\", \"ssciname\", \"scomname\", \"pident\", \"length\", \"mismatch\", \"gapopen\", \"qstart\", \"qend\", \"sstart\", \"send\", \"evalue\", \"bitscore\")\nx <- x[x\\$mismatch<=${params.blastn.mismatch}, ]\nx <- x[order(x\\$qaccver, -x\\$pident, x\\$evalue), ]\nx <- x[!duplicated(x\\$qaccver), ]\nsc <- as.numeric(sub(\"SEQ_.*?_x\", \"\", x\\$qaccver))\nspecies <- paste0(x\\$ssciname, \" (\", x\\$scomname, \")\", \" [\", x\\$sblastname, \"]\")\nw <- rowsum(sc, species)\nw <- w[order(-w[, 1]), ]\np <- w/${params.blastn.numOfLine}\nwrite.table(p, '${runID}.percentage.txt', quote=FALSE, col.names=FALSE, sep='\\t')\nf <- dir(\".\", \"percentage.txt\", full.names = TRUE)\nd <- lapply(f, read.delim, nrows=3, header=FALSE)\ne <- sapply(d, function(.ele){\n  if(nrow(.ele)>1){\n    .ele[1, 2]/sum(.ele[-1, 2])\n  }else{\n    100\n  }\n})\ne <- cut(e, breaks=c(0, 3, 5, 10, Inf), labels=c(\"contaminated\", \"warning\", \"minor\", \"clean\"))\ne <- rep(e, each=3)\nfq <- sub(\".percentage.txt\", \"\", basename(f))\nfq <- rep(fq, each=3)\nd <- do.call(rbind, d)\nd <- cbind(d, fastq=fq, cross.species.contamination=e)\ncolnames(d) <- c(\"species\", \"percentage\", \"fastq\", \"cross.species.contamination\")\nwrite.csv(d, \"${runID}.csv\", row.names=FALSE)\nEOT\n    \"\"\"\n}",
        "nb_lignes_process": 50,
        "string_script": "    \"\"\"\n    zcat ${readL} | head -n ${params.blastn.numOfLine} > ${runID}.fq\n    fq2sc -i ${runID}.fq -o ${runID}.txt\n    s2c_2_fasta.pl --in ${runID}.txt --out ${runID}.fa --notfilterN\n    blastn -num_threads ${params.blastn.cpus} -db nt -max_target_seqs 1 \\\\\n    -outfmt '6 qaccver saccver staxid sblastname ssciname scomname pident length mismatch gapopen qstart qend sstart send evalue bitscore' \\\\\n    -query ${runID}.fa -out ${runID}.blastn.txt\n    cat <<EOT | R --vanilla\nx <- read.delim(\"${runID}.blastn.txt\", header=FALSE, stringsAsFactor=FALSE)\ncolnames(x) <- c(\"qaccver\", \"saccver\", \"staxid\", \"sblastname\", \"ssciname\", \"scomname\", \"pident\", \"length\", \"mismatch\", \"gapopen\", \"qstart\", \"qend\", \"sstart\", \"send\", \"evalue\", \"bitscore\")\nx <- x[x\\$mismatch<=${params.blastn.mismatch}, ]\nx <- x[order(x\\$qaccver, -x\\$pident, x\\$evalue), ]\nx <- x[!duplicated(x\\$qaccver), ]\nsc <- as.numeric(sub(\"SEQ_.*?_x\", \"\", x\\$qaccver))\nspecies <- paste0(x\\$ssciname, \" (\", x\\$scomname, \")\", \" [\", x\\$sblastname, \"]\")\nw <- rowsum(sc, species)\nw <- w[order(-w[, 1]), ]\np <- w/${params.blastn.numOfLine}\nwrite.table(p, '${runID}.percentage.txt', quote=FALSE, col.names=FALSE, sep='\\t')\nf <- dir(\".\", \"percentage.txt\", full.names = TRUE)\nd <- lapply(f, read.delim, nrows=3, header=FALSE)\ne <- sapply(d, function(.ele){\n  if(nrow(.ele)>1){\n    .ele[1, 2]/sum(.ele[-1, 2])\n  }else{\n    100\n  }\n})\ne <- cut(e, breaks=c(0, 3, 5, 10, Inf), labels=c(\"contaminated\", \"warning\", \"minor\", \"clean\"))\ne <- rep(e, each=3)\nfq <- sub(\".percentage.txt\", \"\", basename(f))\nfq <- rep(fq, each=3)\nd <- do.call(rbind, d)\nd <- cbind(d, fastq=fq, cross.species.contamination=e)\ncolnames(d) <- c(\"species\", \"percentage\", \"fastq\", \"cross.species.contamination\")\nwrite.csv(d, \"${runID}.csv\", row.names=FALSE)\nEOT\n    \"\"\"",
        "nb_lignes_script": 37,
        "language_script": "bash",
        "tools": [
            "G-BLASTN",
            "ASC",
            "JSpecies",
            "FQC"
        ],
        "tools_url": [
            "https://bio.tools/g-blastn",
            "https://bio.tools/asc",
            "https://bio.tools/jspecies",
            "https://bio.tools/fqc"
        ],
        "tools_dico": [
            {
                "name": "G-BLASTN",
                "uri": "https://bio.tools/g-blastn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2976",
                                "term": "Protein sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "GPU-accelerated nucleotide alignment tool based on the widely used NCBI-BLAST.",
                "homepage": "http://www.comp.hkbu.edu.hk/~chxw/software/G-BLASTN.html"
            },
            {
                "name": "ASC",
                "uri": "https://bio.tools/asc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3695",
                                    "term": "Filtering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Empirical Bayes method to detect differential expression based on sequencing technology.",
                "homepage": "http://www.stat.brown.edu/Zwu/research.aspx"
            },
            {
                "name": "JSpecies",
                "uri": "https://bio.tools/jspecies",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolutionary biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0797",
                            "term": "Comparative genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3299",
                            "term": "Evolution"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genome comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0362",
                                    "term": "Genome annotation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3209",
                                    "term": "Genomic region matching"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An easy to use, biologist-centric software designed to measure the probability if two genomes belonging to the same species or not.",
                "homepage": "http://www.imedea.uib-csic.es/jspecies/index.html"
            },
            {
                "name": "FQC",
                "uri": "https://bio.tools/fqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality affairs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3393",
                            "term": "Quality assurance"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrates FastQC results into a web-based, interactive, and extensible FASTQ quality control tool.",
                "homepage": "https://github.com/pnnl/fqc"
            }
        ],
        "inputs": [
            "readPairsTrimmed4blast"
        ],
        "nb_inputs": 1,
        "outputs": [
            "blastnFiles"
        ],
        "nb_outputs": 1,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.blastn.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runBWA": {
        "name_process": "runBWA",
        "string_process": "\nprocess runBWA {\n  cpus params.macs2.cpus\n  \n  input:\n    set runID, file(bam), file(bai) from mappedFiles4MACS2\n  \n  storeDir \"${params.outdir}/macs2/${runID}\"\n  \n  output:\n    set runID, file(\"*\") into macs2\n    set runID, file(\"*_treat_pileup.bdg\"), file{\"${runID}.ChromInfo.txt\"} into bedgraph\n  \n  script:\n    \"\"\"\n    ${params.macs2.path} callpeak -t ${bam} \\\\\n                 -f BAM -g ${params.macs2.genome}  -n ${runID} \\\\\n                 --outdir . -q 0.05 \\\\\n                 --nomodel --shift 37 --extsize 73 -B\n    ${params.samtools.path} view -H ${bam} | grep @SQ | \\\\\n        awk -F \\$'\\\\t' 'BEGIN {OFS=FS} {gsub(\"[SL]N:\", \"\"); print \\$2,\\$3}' \\\\\n        > ${runID}.ChromInfo.txt\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    ${params.macs2.path} callpeak -t ${bam} \\\\\n                 -f BAM -g ${params.macs2.genome}  -n ${runID} \\\\\n                 --outdir . -q 0.05 \\\\\n                 --nomodel --shift 37 --extsize 73 -B\n    ${params.samtools.path} view -H ${bam} | grep @SQ | \\\\\n        awk -F \\$'\\\\t' 'BEGIN {OFS=FS} {gsub(\"[SL]N:\", \"\"); print \\$2,\\$3}' \\\\\n        > ${runID}.ChromInfo.txt\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mappedFiles4MACS2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "macs2",
            "bedgraph"
        ],
        "nb_outputs": 2,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.macs2.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runBigWig": {
        "name_process": "runBigWig",
        "string_process": "\nprocess runBigWig {\n  cpus params.bedGraphToBigWig.cpus\n  \n  input:\n    set runID, file(bdg), file(size) from bedgraph\n  \n  storeDir \"${params.outdir}/bw/${runID}\"\n  \n  output:\n    set runID, file(\"${runID}.bw\") into bigwig\n  \n  script:\n    \"\"\"\n    sort -k1,1 -k2,2n ${bdg} > ${bdg}.srt\n    ${params.bedGraphToBigWig.path} ${bdg}.srt \\\\\n                 ${size} \\\\\n                 ${runID}.bw\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    sort -k1,1 -k2,2n ${bdg} > ${bdg}.srt\n    ${params.bedGraphToBigWig.path} ${bdg}.srt \\\\\n                 ${size} \\\\\n                 ${runID}.bw\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bedgraph"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bigwig"
        ],
        "nb_outputs": 1,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.bedGraphToBigWig.cpus"
        ],
        "when": "",
        "stub": ""
    },
    "runATACseqQC": {
        "name_process": "runATACseqQC",
        "string_process": "\nprocess runATACseqQC{\n  cpus params.R.cpus\n  \n  input:\n    set runID, file(bam), file(bai) from mappedFiles4ATACseqQC\n  \n  storeDir \"${params.outdir}/ATACseqQC/${runID}\"\n  \n  output:\n    set runID, file(\"*.pdf\") into ATACseqQCout\n    set runID, file(\"*.bam\"), file(\"*.bai\") into ATACseqQCbam\n  \n  script:\n    \"\"\"\n    cat <<EOF | ${params.R.path} --vanilla\n    library(BiocManager)\n    install(\"${params.R.BSgenome}\")\n    install(\"${params.R.TxDb}\")\n    library(ATACseqQC)\n    bamfile <- \"${bam}\"\n    bamfile.labels <- gsub(\".bam\", \"\", basename(bamfile))\n    pdf(\"fragmentSizeDistribution.pdf\")\n    fragSize <- fragSizeDist(bamfile, bamfile.labels)\n    dev.off()\n    library(${params.R.TxDb})\n    txs <- transcripts(${params.R.TxDb})\n    library(${params.R.BSgenome})\n    seqlev <- paste0(\"chr\", c(1:21, \"X\", \"Y\"))\n    which <- as(seqinfo(${params.R.BSgenome})[seqlev], \"GRanges\")\n    gal <- readBamFile(bamfile, which=which, asMates=TRUE, bigFile=TRUE)\n    gal1 <- shiftGAlignmentsList(gal, outbam=\"shifted.bam\")\n    pt <- PTscore(gal1, txs)\n    pdf(\"PTscore.pdf\")\n    plot(mcols(pt)[, \"log2meanCoverage\"], mcols(pt)[, \"PT_score\"], \n     xlab=\"log2 mean coverage\",\n     ylab=\"Promoter vs Transcript\")\n    dev.off()\n    nfr <- NFRscore(gal1, txs)\n    pdf(\"NFRscore.pdf\")\n    plot(mcols(nfr)[, \"log2meanCoverage\"], mcols(nfr)[, \"NFR_score\"], \n     xlab=\"log2 mean coverage\",\n     ylab=\"Nucleosome Free Regions score\",\n     main=\"NFRscore for 200bp flanking TSSs\",\n     xlim=c(-10, 0), ylim=c(-5, 5))\n    dev.off()\n    tsse <- TSSEscore(gal1, txs)\n    pdf(\"TSSEscore.pdf\")\n    hist(mcols(tsse)[, \"TSS.enrichment.score\"], breaks=100, \n    main=\"Transcription Start Site (TSS) Enrichment Score\", \n    xlab=\"TSS enrichment score\")\n    dev.off()\n    gc(reset=TRUE)\n    genome <- ${params.R.BSgenome}\n    objs <- splitGAlignmentsByCut(gal1, txs=txs, genome=genome, outPath = \".\")\n    rm(gal1)\n    gc(reset=TRUE)\n    library(ChIPpeakAnno)\n    bamfiles <- file.path(\".\",\n                     c(\"NucleosomeFree.bam\",\n                     \"mononucleosome.bam\",\n                     \"dinucleosome.bam\",\n                     \"trinucleosome.bam\"))\n    pdf(\"cumulativePercentage.pdf\")\n    cumulativePercentage(bamfiles[1:2], as(seqinfo(${params.R.BSgenome})[seqlev], \"GRanges\"))\n    dev.off()\n    TSS <- promoters(txs, upstream=0, downstream=1)\n    TSS <- unique(TSS)\n    librarySize <- estLibSize(bamfiles)\n    NTILE <- 101\n    dws <- ups <- 1010\n    sigs <- enrichedFragments(gal=objs[c(\"NucleosomeFree\", \n                                     \"mononucleosome\",\n                                     \"dinucleosome\",\n                                     \"trinucleosome\")], \n                          TSS=TSS,\n                          librarySize=librarySize,\n                          seqlev=seqlev,\n                          TSS.filter=0.5,\n                          n.tile = NTILE,\n                          upstream = ups,\n                          downstream = dws)\n      sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))\n      pdf(\"featureAligndHeatmap.pdf\")\n      featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws),\n                      zeroAt=.5, n.tile=NTILE)\n      dev.off()\n      out <- featureAlignedDistribution(sigs, \n                                  reCenterPeaks(TSS, width=ups+dws),\n                                  zeroAt=.5, n.tile=NTILE, type=\"l\", \n                                  ylab=\"Averaged coverage\")\n    range01 <- function(x){(x-min(x))/(max(x)-min(x))}\n    out <- apply(out, 2, range01)\n    pdf(\"TSS.profile.pdf\")\n    matplot(out, type=\"l\", xaxt=\"n\", \n        xlab=\"Position (bp)\", \n        ylab=\"Fraction of signal\")\n    axis(1, at=seq(0, 100, by=10)+1, \n     labels=c(\"-1K\", seq(-800, 800, by=200), \"1K\"), las=2)\n    abline(v=seq(0, 100, by=10)+1, lty=2, col=\"gray\")\n    dev.off()\n    library(MotifDb)\n    CTCF <- query(MotifDb, c(\"CTCF\"))\n    CTCF <- as.list(CTCF)\n    pdf(\"CTCF.footprint.pdf\")\n    sigs <- factorFootprints(\"shifted.bam\", pfm=CTCF[[1]], \n                         genome=genome,\n                         min.score=\"90%\", seqlev=seqlev,\n                         upstream=100, downstream=100)\n    dev.off()\n    pdf(\"CTCF.Vplot.pdf\")\n    vp <- vPlot(\"shifted.bam\", pfm=CTCF[[1]], \n            genome=genome, min.score=\"90%\", seqlev=seqlev,\n            upstream=200, downstream=200, \n            ylim=c(30, 250), bandwidth=c(2, 1))\n    dev.off()\n    unlink(\"Rplots.pdf\")\nEOF\n    \"\"\"\n}",
        "nb_lignes_process": 118,
        "string_script": "    \"\"\"\n    cat <<EOF | ${params.R.path} --vanilla\n    library(BiocManager)\n    install(\"${params.R.BSgenome}\")\n    install(\"${params.R.TxDb}\")\n    library(ATACseqQC)\n    bamfile <- \"${bam}\"\n    bamfile.labels <- gsub(\".bam\", \"\", basename(bamfile))\n    pdf(\"fragmentSizeDistribution.pdf\")\n    fragSize <- fragSizeDist(bamfile, bamfile.labels)\n    dev.off()\n    library(${params.R.TxDb})\n    txs <- transcripts(${params.R.TxDb})\n    library(${params.R.BSgenome})\n    seqlev <- paste0(\"chr\", c(1:21, \"X\", \"Y\"))\n    which <- as(seqinfo(${params.R.BSgenome})[seqlev], \"GRanges\")\n    gal <- readBamFile(bamfile, which=which, asMates=TRUE, bigFile=TRUE)\n    gal1 <- shiftGAlignmentsList(gal, outbam=\"shifted.bam\")\n    pt <- PTscore(gal1, txs)\n    pdf(\"PTscore.pdf\")\n    plot(mcols(pt)[, \"log2meanCoverage\"], mcols(pt)[, \"PT_score\"], \n     xlab=\"log2 mean coverage\",\n     ylab=\"Promoter vs Transcript\")\n    dev.off()\n    nfr <- NFRscore(gal1, txs)\n    pdf(\"NFRscore.pdf\")\n    plot(mcols(nfr)[, \"log2meanCoverage\"], mcols(nfr)[, \"NFR_score\"], \n     xlab=\"log2 mean coverage\",\n     ylab=\"Nucleosome Free Regions score\",\n     main=\"NFRscore for 200bp flanking TSSs\",\n     xlim=c(-10, 0), ylim=c(-5, 5))\n    dev.off()\n    tsse <- TSSEscore(gal1, txs)\n    pdf(\"TSSEscore.pdf\")\n    hist(mcols(tsse)[, \"TSS.enrichment.score\"], breaks=100, \n    main=\"Transcription Start Site (TSS) Enrichment Score\", \n    xlab=\"TSS enrichment score\")\n    dev.off()\n    gc(reset=TRUE)\n    genome <- ${params.R.BSgenome}\n    objs <- splitGAlignmentsByCut(gal1, txs=txs, genome=genome, outPath = \".\")\n    rm(gal1)\n    gc(reset=TRUE)\n    library(ChIPpeakAnno)\n    bamfiles <- file.path(\".\",\n                     c(\"NucleosomeFree.bam\",\n                     \"mononucleosome.bam\",\n                     \"dinucleosome.bam\",\n                     \"trinucleosome.bam\"))\n    pdf(\"cumulativePercentage.pdf\")\n    cumulativePercentage(bamfiles[1:2], as(seqinfo(${params.R.BSgenome})[seqlev], \"GRanges\"))\n    dev.off()\n    TSS <- promoters(txs, upstream=0, downstream=1)\n    TSS <- unique(TSS)\n    librarySize <- estLibSize(bamfiles)\n    NTILE <- 101\n    dws <- ups <- 1010\n    sigs <- enrichedFragments(gal=objs[c(\"NucleosomeFree\", \n                                     \"mononucleosome\",\n                                     \"dinucleosome\",\n                                     \"trinucleosome\")], \n                          TSS=TSS,\n                          librarySize=librarySize,\n                          seqlev=seqlev,\n                          TSS.filter=0.5,\n                          n.tile = NTILE,\n                          upstream = ups,\n                          downstream = dws)\n      sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))\n      pdf(\"featureAligndHeatmap.pdf\")\n      featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws),\n                      zeroAt=.5, n.tile=NTILE)\n      dev.off()\n      out <- featureAlignedDistribution(sigs, \n                                  reCenterPeaks(TSS, width=ups+dws),\n                                  zeroAt=.5, n.tile=NTILE, type=\"l\", \n                                  ylab=\"Averaged coverage\")\n    range01 <- function(x){(x-min(x))/(max(x)-min(x))}\n    out <- apply(out, 2, range01)\n    pdf(\"TSS.profile.pdf\")\n    matplot(out, type=\"l\", xaxt=\"n\", \n        xlab=\"Position (bp)\", \n        ylab=\"Fraction of signal\")\n    axis(1, at=seq(0, 100, by=10)+1, \n     labels=c(\"-1K\", seq(-800, 800, by=200), \"1K\"), las=2)\n    abline(v=seq(0, 100, by=10)+1, lty=2, col=\"gray\")\n    dev.off()\n    library(MotifDb)\n    CTCF <- query(MotifDb, c(\"CTCF\"))\n    CTCF <- as.list(CTCF)\n    pdf(\"CTCF.footprint.pdf\")\n    sigs <- factorFootprints(\"shifted.bam\", pfm=CTCF[[1]], \n                         genome=genome,\n                         min.score=\"90%\", seqlev=seqlev,\n                         upstream=100, downstream=100)\n    dev.off()\n    pdf(\"CTCF.Vplot.pdf\")\n    vp <- vPlot(\"shifted.bam\", pfm=CTCF[[1]], \n            genome=genome, min.score=\"90%\", seqlev=seqlev,\n            upstream=200, downstream=200, \n            ylim=c(30, 250), bandwidth=c(2, 1))\n    dev.off()\n    unlink(\"Rplots.pdf\")\nEOF\n    \"\"\"",
        "nb_lignes_script": 104,
        "language_script": "bash",
        "tools": [
            "whichdb",
            "GALA",
            "PTR",
            "TNFR1",
            "TSSer",
            "Mgenome",
            "TSSV",
            "PhySigs",
            "Ragout",
            "UVP",
            "NeoFuse"
        ],
        "tools_url": [
            "https://bio.tools/whichdb",
            "https://bio.tools/gala",
            "https://bio.tools/PTR",
            "https://bio.tools/TNFR1",
            "https://bio.tools/tsser",
            "https://bio.tools/mgenome",
            "https://bio.tools/tssv",
            "https://bio.tools/PhySigs",
            "https://bio.tools/ragout",
            "https://bio.tools/UVP",
            "https://bio.tools/NeoFuse"
        ],
        "tools_dico": [
            {
                "name": "whichdb",
                "uri": "https://bio.tools/whichdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3077",
                            "term": "Data acquisition"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3077",
                            "term": "Data collection"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0957",
                                "term": "Database metadata"
                            }
                        ]
                    }
                ],
                "description": "Search all sequence databases for an entry and retrieve it.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/whichdb.html"
            },
            {
                "name": "GALA",
                "uri": "https://bio.tools/gala",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Whole genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "Genome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3673",
                            "term": "WGS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3644",
                                    "term": "de Novo sequencing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "gap-free chromosome-scale assembly with long reads.\n\nAbstract High-quality genome assembly has wide applications in genetics and medical studies. However, it is still very challenging to achieve gap-free chromosome-scale assemblies using current workflows for long-read platforms.",
                "homepage": "https://github.com/ganlab/gala"
            },
            {
                "name": "PTR",
                "uri": "https://bio.tools/PTR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Deposition"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database deposition"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Database submission"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3431",
                                    "term": "Data deposition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PTR is an approach to identify and explore Post Transcriptional Regulatory mechanisms using proteogenomics.",
                "homepage": "https://github.com/arunima2/PTRE_PSB_2020"
            },
            {
                "name": "TNFR1",
                "uri": "https://bio.tools/TNFR1",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0736",
                            "term": "Protein folds and structural domains"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0176",
                            "term": "Molecular dynamics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0244",
                                    "term": "Simulation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2476",
                                    "term": "Molecular dynamics simulation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0244",
                                    "term": "CG analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0244",
                                    "term": "Trajectory analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0244",
                                    "term": "MD analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0244",
                                    "term": "Protein Dynamics Analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Computational simulations of TNF receptor oligomerization on plasma membrane.\n\nThe interactions between tumor necrosis factors (TNFs) and their corresponding receptors (TNFRs) play a pivotal role in inflammatory responses. Upon ligand binding, TNFR receptors were found to form oligomers on cell surfaces. However, the underlying mechanism of oligomerization is not fully understood. In order to tackle this problem, molecular dynamics (MD) simulations have been applied to the complex between TNF receptor-1 (TNFR1) and its ligand TNF-\u03b1 as a specific test system. The simulations on both all-atom (AA) and coarse-grained (CG) levels achieved the similar results that the extracellular domains of TNFR1 can undergo large fluctuations on plasma membrane, while the dynamics of TNF\u03b1-TNFR1 complex is much more constrained.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'TNF', 'TNFa-TNFR1'",
                "homepage": "http://www.cbligand.org/downloads/TNF_TNFR1.pdb"
            },
            {
                "name": "TSSer",
                "uri": "https://bio.tools/tsser",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0440",
                                    "term": "Promoter prediction"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Computational pipeline designed to analyze dRNA-seq data to determine transcription start sites genome-wide.",
                "homepage": "http://www.clipz.unibas.ch/downloads/TSSer/index.php"
            },
            {
                "name": "Mgenome",
                "uri": "https://bio.tools/mgenome",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Designed to find the optimal trees for multiple genome rearrangement by signed reversals. The problem is modeled as: For a given collection of genomes represented by signed permutations on genes, find a tree to connect the given genomes by reversal paths such that the number of all signed reversals is minimized.",
                "homepage": "http://xungulab.com/software/mgenome/mgenome.html"
            },
            {
                "name": "TSSV",
                "uri": "https://bio.tools/tssv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2480",
                                    "term": "Structure analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program that does targeted characterisation of short structural variation. It can be used for STR analysis, or any other type of targeted analysis. It characterises any variation between a set of user-defined markers.",
                "homepage": "https://git.lumc.nl/j.f.j.laros/tssv/blob/master/README.md"
            },
            {
                "name": "PhySigs",
                "uri": "https://bio.tools/PhySigs",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0084",
                            "term": "Phylogeny"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Targeted exome capture"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "WES"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Whole exome sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3676",
                            "term": "Exome capture"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic inference"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phlyogenetic tree construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic reconstruction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0323",
                                    "term": "Phylogenetic tree generation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PhySigs uses the input of a phylogeny with nodes representing clones in a patient tumor, a signature matrix containing the set of mutational signatures to use in the analysis, and a feature matrix for the set of mutations introduced in each clone. In particular, the mutational categories in the feature matrix should correspond to the mutational categories used in the signature matrix. \nPhySigs automatically computes the count matrix, as it is simply a diagonal matrix containing the sum of columns in the feature matrix. PhySigs then solves the Tree-constrained Exposure (TE) problem for all possible clusterings of the clones that correspond to a partition of the phylogeny. The output of the TE problem is a relative exposure matrix composed of groups of identical columns corresponding to clusters of clones with identical exposures (denoted by blue and yellow). Edges between these clusters in the phylogeny are interpreted to be where exposure shifts occurred (denoted by a lightning bolt).",
                "homepage": "https://github.com/elkebir-group/PhySigs"
            },
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            },
            {
                "name": "UVP",
                "uri": "https://bio.tools/UVP",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3301",
                            "term": "Microbiology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant calling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3227",
                                    "term": "Variant mapping"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "The Unified Variant Pipeline (UVP) is used to identify variants and assign lineage from Mycobacterium tuberculosis sequence data.",
                "homepage": "https://github.com/CPTR-ReSeqTB/UVP"
            },
            {
                "name": "NeoFuse",
                "uri": "https://bio.tools/NeoFuse",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Peptide immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Immunogenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0252",
                                    "term": "Antigenicity prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3799",
                                    "term": "Quantitation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Predicting fusion neoantigens from RNA sequencing data.\n\nThe Section for Bioinformatrics at the Biocenter of Innsbruck Medical University is commited to the generation, management, integration, and leveraging data from genomics studies.\n\nQuantification of the tumor immune contexture.\n\nZlatko Trajanoski awarded with ERC Advanced Grant.",
                "homepage": "https://icbi.i-med.ac.at/NeoFuse/"
            }
        ],
        "inputs": [
            "mappedFiles4ATACseqQC"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ATACseqQCout",
            "ATACseqQCbam"
        ],
        "nb_outputs": 2,
        "name_workflow": "jianhong__ATACseqQCnextflow",
        "directive": [
            "cpus params.R.cpus"
        ],
        "when": "",
        "stub": ""
    }
}