{
    "salmon": {
        "name_process": "salmon",
        "string_process": " process salmon{\n        publishDir \"${params.output}\", mode: 'copy', overwrite: true\n        cpus 16\n\n        input:\n\n           file r1_salmon\n           file r2_salmon\n           \n        output:\n            file \"${params.sample}.sf\" into salmon_quant\n\n        \"\"\"\n        singularity exec ${params.taywhale} salmon quant --index ${params.salmon_index} --libType ${params.libtype} --output salmon_output -1 <( zcat ${r1_salmon} ) -2 <( zcat ${r2_salmon} )\n        mv salmon_output/quant.sf ${params.sample}.sf\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        singularity exec ${params.taywhale} salmon quant --index ${params.salmon_index} --libType ${params.libtype} --output salmon_output -1 <( zcat ${r1_salmon} ) -2 <( zcat ${r2_salmon} )\n        mv salmon_output/quant.sf ${params.sample}.sf\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "r1_salmon",
            "r2_salmon"
        ],
        "nb_inputs": 2,
        "outputs": [
            "salmon_quant"
        ],
        "nb_outputs": 1,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "STAR_Aln": {
        "name_process": "STAR_Aln",
        "string_process": " process STAR_Aln{\n        publishDir \"${params.output}\", mode: 'copy', overwrite: true\n        cpus 16\n\n        input:\n\n           file r1\n           file r2\n           \n        output:\n            file \"${params.sample}.Chimeric.out.junction\" into junctions\n            file \"${params.sample}.RG.Aligned.sortedByCoord.out.bam\" into star_bam\n            file \"${params.sample}.RG.Aligned.sortedByCoord.out.bam.bai\" into bai\n            file \"${params.sample}.ReadsPerGene.out.tab\" into geneCounts\n\n        \"\"\"\n        \n        singularity exec ${params.taywhale} STAR --genomeDir ${params.STAR_ref_dir} --readFilesIn ${r1} ${r2}  --twopassMode Basic --outReadsUnmapped None --chimSegmentMin 12 --chimJunctionOverhangMin 12 --alignSJDBoverhangMin 10 --alignMatesGapMax 100000 --alignIntronMax 100000 --chimSegmentReadGapMax parameter 3 --alignSJstitchMismatchNmax 5 -1 5 5 --runThreadN 16 --limitBAMsortRAM 31532137230 --outSAMtype BAM SortedByCoordinate --outFileNamePrefix ${params.sample}. --quantMode GeneCounts --outSAMstrandField intronMotif --readFilesCommand gunzip -c\n      \n        singularity exec ${params.taywhale} picard AddOrReplaceReadGroups I= ${params.sample}.Aligned.sortedByCoord.out.bam  O= ${params.sample}.RG.Aligned.sortedByCoord.out.bam RGLB=${params.rglb} RGPL=${params.rgpl} RGPU=${params.rgpu} RGSM=${params.sample}\n        rm ${params.sample}.Aligned.sortedByCoord.out.bam\n\n        singularity exec ${params.taywhale} samtools index ${params.sample}.RG.Aligned.sortedByCoord.out.bam\n        \"\"\"\n    }",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\n        \n        singularity exec ${params.taywhale} STAR --genomeDir ${params.STAR_ref_dir} --readFilesIn ${r1} ${r2}  --twopassMode Basic --outReadsUnmapped None --chimSegmentMin 12 --chimJunctionOverhangMin 12 --alignSJDBoverhangMin 10 --alignMatesGapMax 100000 --alignIntronMax 100000 --chimSegmentReadGapMax parameter 3 --alignSJstitchMismatchNmax 5 -1 5 5 --runThreadN 16 --limitBAMsortRAM 31532137230 --outSAMtype BAM SortedByCoordinate --outFileNamePrefix ${params.sample}. --quantMode GeneCounts --outSAMstrandField intronMotif --readFilesCommand gunzip -c\n      \n        singularity exec ${params.taywhale} picard AddOrReplaceReadGroups I= ${params.sample}.Aligned.sortedByCoord.out.bam  O= ${params.sample}.RG.Aligned.sortedByCoord.out.bam RGLB=${params.rglb} RGPL=${params.rgpl} RGPU=${params.rgpu} RGSM=${params.sample}\n        rm ${params.sample}.Aligned.sortedByCoord.out.bam\n\n        singularity exec ${params.taywhale} samtools index ${params.sample}.RG.Aligned.sortedByCoord.out.bam\n        \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "r1",
            "r2"
        ],
        "nb_inputs": 2,
        "outputs": [
            "junctions",
            "star_bam",
            "bai",
            "geneCounts"
        ],
        "nb_outputs": 4,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "STAR_Fusion": {
        "name_process": "STAR_Fusion",
        "string_process": " process STAR_Fusion{\n        publishDir \"${params.output}\", mode: 'copy', overwrite: true\n        \n        input:\n            file junctions\n\n        output:\n            file \"${params.sample}\" into Fusion_dir\n\n        \"\"\"\n            singularity exec ${params.taywhale} STAR-Fusion --genome_lib_dir ${params.ctat_folder} -J ${junctions} --output_dir ${params.sample}\n        \"\"\"\n    }",
        "nb_lignes_process": 11,
        "string_script": "\"\"\"\n            singularity exec ${params.taywhale} STAR-Fusion --genome_lib_dir ${params.ctat_folder} -J ${junctions} --output_dir ${params.sample}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "junctions"
        ],
        "nb_inputs": 1,
        "outputs": [
            "Fusion_dir"
        ],
        "nb_outputs": 1,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "GATK_Split": {
        "name_process": "GATK_Split",
        "string_process": " process GATK_Split{\n        publishDir \"${params.output}\", mode: 'copy', overwrite: true\n        \n        input:\n            file bam\n            file bai\n\n        output:\n            file \"${params.sample}.RG.split.Aligned.sortedByCoord.out.bam\" into GATK_bam\n            file \"${params.sample}.RG.split.Aligned.sortedByCoord.out.bam.bai\" into GATK_bai\n\n        \"\"\"\n        java -jar ${params.GATK} -T SplitNCigarReads -R ${params.ref} -I ${bam}  -o ${params.sample}.RG.split.Aligned.sortedByCoord.out.bam -rf ReassignOneMappingQuality -RMQF 255 -RMQT 60 -U ALLOW_N_CIGAR_READS\n        singularity exec ${params.taywhale} samtools index ${params.sample}.RG.split.Aligned.sortedByCoord.out.bam\n        \"\"\"\n\n    }",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n        java -jar ${params.GATK} -T SplitNCigarReads -R ${params.ref} -I ${bam}  -o ${params.sample}.RG.split.Aligned.sortedByCoord.out.bam -rf ReassignOneMappingQuality -RMQF 255 -RMQT 60 -U ALLOW_N_CIGAR_READS\n        singularity exec ${params.taywhale} samtools index ${params.sample}.RG.split.Aligned.sortedByCoord.out.bam\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "bam",
            "bai"
        ],
        "nb_inputs": 2,
        "outputs": [
            "GATK_bam",
            "GATK_bai"
        ],
        "nb_outputs": 2,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true"
        ],
        "when": "",
        "stub": ""
    },
    "StringTie": {
        "name_process": "StringTie",
        "string_process": " process StringTie{\n         publishDir \"${params.output}\", mode: 'copy', overwrite: true\n\n         cpus 16\n\n         input:\n            file stringtie_bam\n\n        output:\n\n           file \"${stringtie_bam}.stringtie.gff\" into stringtie_gff\n           file \"${params.sample}.stats\" into gffstats\n           file \"${params.sample}.annotated.gtf\" into annotated_gff\n\n        \"\"\"\n        singularity exec ${params.taywhale} stringtie ${stringtie_bam} -G ${params.gff} > ${stringtie_bam}.stringtie.gff\n        ${params.gffcompare} -r ${params.gff} -o ${params.sample} ${stringtie_bam}.stringtie.gff\n        \"\"\"\n\n    }",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n        singularity exec ${params.taywhale} stringtie ${stringtie_bam} -G ${params.gff} > ${stringtie_bam}.stringtie.gff\n        ${params.gffcompare} -r ${params.gff} -o ${params.sample} ${stringtie_bam}.stringtie.gff\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Singularity Hub"
        ],
        "tools_url": [
            "https://bio.tools/singularity_hub"
        ],
        "tools_dico": [
            {
                "name": "Singularity Hub",
                "uri": "https://bio.tools/singularity_hub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3524",
                            "term": "Simulation experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
                "homepage": "https://singularity-hub.org/"
            }
        ],
        "inputs": [
            "stringtie_bam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "stringtie_gff",
            "gffstats",
            "annotated_gff"
        ],
        "nb_outputs": 3,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    },
    "GATK_ASE": {
        "name_process": "GATK_ASE",
        "string_process": " process GATK_ASE{\n        publishDir \"${params.output}\", mode: 'copy', overwrite: true\n\n\tcpus 16\n\n        input:\n            file GATK_bam\n            file GATK_bai\n\n        output:\n            file \"${params.sample}.vcf\" into GATK_haplotype_vcf\n            file \"${params.sample}.annotated.GATKASE.vcf\" into GATK_haplotype_ASE_vcf\n            file \"${params.sample}.GATKASE.csv\" into GATK_ASE_CSV\n\n        \"\"\"\n        java -jar ${params.GATK} -R ${params.ref} -T HaplotypeCaller -I ${GATK_bam} -stand_call_conf 10 -o ${params.sample}.vcf -dontUseSoftClippedBases --min_mapping_quality_score 10\n        java -jar ${params.GATK} -R ${params.ref} -T ASEReadCounter -o ${params.sample}.GATKASE.csv -I ${GATK_bam} -sites ${params.sample}.vcf\n        python ${params.BootstrapAnn} --vcf ${params.sample}.vcf --ase ${params.sample}.GATKASE.csv >${params.sample}.GATKASE.vcf\n        ${params.VEP_exec_file} -i ${params.sample}.GATKASE.vcf  -o ${params.sample}.annotated.GATKASE.vcf --fork 6 ${params.vep_args}\n        \"\"\"\n    }",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n        java -jar ${params.GATK} -R ${params.ref} -T HaplotypeCaller -I ${GATK_bam} -stand_call_conf 10 -o ${params.sample}.vcf -dontUseSoftClippedBases --min_mapping_quality_score 10\n        java -jar ${params.GATK} -R ${params.ref} -T ASEReadCounter -o ${params.sample}.GATKASE.csv -I ${GATK_bam} -sites ${params.sample}.vcf\n        python ${params.BootstrapAnn} --vcf ${params.sample}.vcf --ase ${params.sample}.GATKASE.csv >${params.sample}.GATKASE.vcf\n        ${params.VEP_exec_file} -i ${params.sample}.GATKASE.vcf  -o ${params.sample}.annotated.GATKASE.vcf --fork 6 ${params.vep_args}\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "GATK_bam",
            "GATK_bai"
        ],
        "nb_inputs": 2,
        "outputs": [
            "GATK_haplotype_vcf",
            "GATK_haplotype_ASE_vcf",
            "GATK_ASE_CSV"
        ],
        "nb_outputs": 3,
        "name_workflow": "J35P312__TayWhale",
        "directive": [
            "publishDir \"${params.output}\", mode: 'copy', overwrite: true",
            "cpus 16"
        ],
        "when": "",
        "stub": ""
    }
}